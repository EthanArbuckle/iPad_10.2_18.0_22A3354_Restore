uint64_t sub_1BAE4644C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE70B4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE71A4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE712C();
  sub_1BA4A2870(&qword_1EF2B5998, (uint64_t (*)(uint64_t))sub_1BAEE712C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE71A4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE7398;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE46634(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE6D54(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6E44);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE6DCC();
  sub_1BA4A2870(&qword_1EF2B5950, (uint64_t (*)(uint64_t))sub_1BAEE6DCC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE6E44);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE7038;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4681C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE69F4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6AE4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE6A6C();
  sub_1BA4A2870(&qword_1EF2B5908, (uint64_t (*)(uint64_t))sub_1BAEE6A6C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE6AE4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE6CD8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE46A04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE6694(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6784);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE670C();
  sub_1BA4A2870(&qword_1ED3AF0B8, (uint64_t (*)(uint64_t))sub_1BAEE670C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE6784);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE6978;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE46BEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE6440(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6530);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE64B8();
  sub_1BA4A2870(&qword_1ED3AF098, (uint64_t (*)(uint64_t))sub_1BAEE64B8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE6530);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE6618;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE46DD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE6148(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6238);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE61C0();
  sub_1BA4A2870(&qword_1ED3AF0D8, (uint64_t (*)(uint64_t))sub_1BAEE61C0, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE6238);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE63C4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE46FBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE5DE8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5ED8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE5E60();
  sub_1BA4A2870(&qword_1ED3AF0F8, (uint64_t (*)(uint64_t))sub_1BAEE5E60, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE5ED8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE60CC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE471A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE5A88(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5B78);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE5B00();
  sub_1BA4A2870(&qword_1ED3AF0A8, (uint64_t (*)(uint64_t))sub_1BAEE5B00, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE5B78);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE5D6C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4738C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE57BC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE58AC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE5834();
  sub_1BA4A2870(&qword_1EF2B58C0, (uint64_t (*)(uint64_t))sub_1BAEE5834, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE58AC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE5A0C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE47574(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE545C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE554C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE54D4();
  sub_1BA4A2870(&qword_1ED3AF0C8, (uint64_t (*)(uint64_t))sub_1BAEE54D4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE554C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE5740;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4775C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEE5150(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5240);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEE51C8();
  sub_1BA4A2870(&qword_1ED3AF0E8, (uint64_t (*)(uint64_t))sub_1BAEE51C8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEE5240);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE53E0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE53C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE47944(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE70C4C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE70B00);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE70CC4();
  sub_1BA4A2870(&qword_1ED3AEDA0, (uint64_t (*)(uint64_t))sub_1BAE70CC4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE70B00);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFBFEC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFBFD4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE47B2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA1AF8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1988);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA1B70();
  sub_1BA4A2870(&qword_1ED3AED80, (uint64_t (*)(uint64_t))sub_1BAEA1B70, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA1988);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEFD1C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEFD04;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE47D14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA03E4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA02DC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA045C();
  sub_1BA4A2870(&qword_1ED3AED70, (uint64_t (*)(uint64_t))sub_1BAEA045C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA02DC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF0558;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF0534;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE47EFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE96F7C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE9706C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE96FF4();
  sub_1BA4A2870(&qword_1ED3AED50, (uint64_t (*)(uint64_t))sub_1BAE96FF4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE9706C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF2590;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF256C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE480E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE972F4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE971EC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE9736C();
  sub_1BA4A2870(&qword_1ED3AED60, (uint64_t (*)(uint64_t))sub_1BAE9736C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE971EC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF24B4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF2490;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE482CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE90300(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE901F8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE90378();
  sub_1BA4A2870(&qword_1EF2B2D48, (uint64_t (*)(uint64_t))sub_1BAE90378, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE901F8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF386C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF3848;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE484B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE80F80(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE81070);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE80FF8();
  sub_1BA4A2870(&qword_1ED3AED10, (uint64_t (*)(uint64_t))sub_1BAE80FF8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE81070);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF66D8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF66C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4869C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE8148C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE81384);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE81504();
  sub_1BA4A2870(&qword_1ED3AED20, (uint64_t (*)(uint64_t))sub_1BAE81504, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE81384);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF6644;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF6620;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE48884(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7B508(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7B5F8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7B580();
  sub_1BA4A2870(&qword_1ED3AECF0, (uint64_t (*)(uint64_t))sub_1BAE7B580, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7B5F8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF80E0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF80C0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE48A6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7B880(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7B778);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7B8F8();
  sub_1BA4A2870(&qword_1ED3AED00, (uint64_t (*)(uint64_t))sub_1BAE7B8F8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7B778);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF8050;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF802C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE48C54(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7C84C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C93C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7C8C4();
  sub_1BA4A2870(&qword_1ED3AECE0, (uint64_t (*)(uint64_t))sub_1BAE7C8C4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7C93C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF7ACC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF7AB4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE48E3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7D7F8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7D8E8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7D870();
  sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7D8E8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF7498;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF746C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE49024(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEBF1C8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEBF0C0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEBF240();
  sub_1BA4A2870(&qword_1ED3AECC0, (uint64_t (*)(uint64_t))sub_1BAEBF240, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEBF0C0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEAF28;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEAF10;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4920C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEAFCC4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEAFBBC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEAFD3C();
  sub_1BA4A2870(&qword_1ED3AECB0, (uint64_t (*)(uint64_t))sub_1BAEAFD3C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEAFBBC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEDCB0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEDC8C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE493F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEAB68C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEAB584);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEAB704();
  sub_1BA4A2870(&qword_1ED3AECA0, (uint64_t (*)(uint64_t))sub_1BAEAB704, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEAB584);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEE458;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEE434;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE495DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE76B34(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE76C24);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE76BAC();
  sub_1BA4A2870(&qword_1ED3AEC60, (uint64_t (*)(uint64_t))sub_1BAE76BAC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE76C24);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF9E90;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF9E6C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE497C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEAF4BC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEAF5AC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEAF534();
  sub_1BA4A2870(&qword_1ED3AEC40, (uint64_t (*)(uint64_t))sub_1BAEAF534, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEAF5AC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEDFF8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEDE68;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE499AC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  _BYTE v19[16];
  uint64_t (*v20)();
  uint64_t v21;
  _QWORD v22[4];

  sub_1BA6384BC(0);
  v10 = v9;
  v11 = (uint64_t *)(v4 + *(int *)(v9 + 44));
  v12 = *v11;
  v13 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v12;
  *(_QWORD *)(v14 + 32) = v13;
  sub_1BA4CDF6C(0, &qword_1ED39C178, (uint64_t (*)(void))sub_1BA63BB38, (uint64_t)&type metadata for FormatOptionExpression.Compare.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BA638658();
  swift_retain();
  v15 = sub_1BB87444C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = a2;
  sub_1BA4C010C(v4 + *(int *)(v10 + 36), (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v20 = sub_1BAEF9D34;
  v21 = v16;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_1BAEF9D28;
  v18[5] = v14;
  LOBYTE(v15) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v19, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v15 & 1;
}

uint64_t sub_1BAE49B3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA1798(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1690);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA1810();
  sub_1BA4A2870(&qword_1ED3AEC20, (uint64_t (*)(uint64_t))sub_1BAEA1810, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA1690);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEFDFC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEFDE4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE49D24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA0734(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0824);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA07AC();
  sub_1BA4A2870(&qword_1ED3AEC10, (uint64_t (*)(uint64_t))sub_1BAEA07AC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA0824);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF03E4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF03B8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE49F0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE9E410(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE9E500);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE9E488();
  sub_1BA4A2870(&qword_1ED3AEC00, (uint64_t (*)(uint64_t))sub_1BAE9E488, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE9E500);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF0C60;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF0C48;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4A0F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE9A3EC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE9A2E4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE9A464();
  sub_1BA4A2870(&qword_1ED3AEBF0, (uint64_t (*)(uint64_t))sub_1BAE9A464, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE9A2E4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF1680;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF1618;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4A2DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE90E14(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE90D0C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE90E8C();
  sub_1BA4A2870(&qword_1ED3AEBE0, (uint64_t (*)(uint64_t))sub_1BAE90E8C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE90D0C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF34B4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF3490;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4A4C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7AF2C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7ACD0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7AFA4();
  sub_1BA4A2870(&qword_1EF2B2748, (uint64_t (*)(uint64_t))sub_1BAE7AFA4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7ACD0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF83E0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF8370;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4A6AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAECD8E4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAECD95C();
  sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE8994;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE895C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4A894(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB20B8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB21A8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB2130();
  sub_1BA4A2870(&qword_1ED3AEBA0, (uint64_t (*)(uint64_t))sub_1BAEB2130, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB21A8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEED8E8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEED7EC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4AA7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEAAE70(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEAAC9C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEAAEE8();
  sub_1BA4A2870(&qword_1EF2B32F8, (uint64_t (*)(uint64_t))sub_1BAEAAEE8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEAAC9C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEE6E4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEE67C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4AC64(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE99AE4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE99998);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE99B5C();
  sub_1BA4A2870(&qword_1ED3AEB90, (uint64_t (*)(uint64_t))sub_1BAE99B5C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE99998);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF19CC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF19A8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4AE4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE91084(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE90F7C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE910FC();
  sub_1BA4A2870(&qword_1ED3AEB70, (uint64_t (*)(uint64_t))sub_1BAE910FC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE90F7C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF3444;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF33FC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4B034(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE9063C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE904AC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE906B4();
  sub_1BA4A2870(&qword_1ED3AEB60, (uint64_t (*)(uint64_t))sub_1BAE906B4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE904AC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF3724;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF36BC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4B21C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE79DF8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE79CF0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE79E70();
  sub_1BA4A2870(&qword_1ED3AEB40, (uint64_t (*)(uint64_t))sub_1BAE79E70, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE79CF0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF8D68;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF8D44;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4B404(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE75424(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7531C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7549C();
  sub_1BA4A2870(&qword_1ED3AEB00, (uint64_t (*)(uint64_t))sub_1BAE7549C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7531C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFA5E0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFA5BC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4B5EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE751B4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE750AC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7522C();
  sub_1BA4A2870(&qword_1ED3AEB10, (uint64_t (*)(uint64_t))sub_1BAE7522C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE750AC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFA644;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFA620;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4B7D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE74CD4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE74BCC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE74D4C();
  sub_1BA4A2870(&qword_1ED3AEB30, (uint64_t (*)(uint64_t))sub_1BAE74D4C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE74BCC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFA70C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFA6E8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4B9BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE84580(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE84434);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE845F8();
  sub_1BA4A2870(&qword_1ED3AEAE0, (uint64_t (*)(uint64_t))sub_1BAE845F8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE84434);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF5A14;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF59FC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4BBA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAECD354(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAECD444);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAECD3CC();
  sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAECD444);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE8D0C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE8710;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4BD8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAECD754(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAECD608);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAECD7CC();
  sub_1BA4A2870(&qword_1EF2B3A28, (uint64_t (*)(uint64_t))sub_1BAECD7CC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAECD608);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE8C48;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE8638;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4BF74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC8A00(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC88F8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC8A78();
  sub_1BA4A2870(&qword_1ED3AEAC0, (uint64_t (*)(uint64_t))sub_1BAEC8A78, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC88F8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE9568;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE9550;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4C15C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7314C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE72FBC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE731C4();
  sub_1BA4A2870(&qword_1ED3AEAB0, (uint64_t (*)(uint64_t))sub_1BAE731C4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE72FBC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFB08C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFB068;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4C344(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC2874(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2964);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC28EC();
  sub_1BA4A2870(&qword_1ED3AEAA0, (uint64_t (*)(uint64_t))sub_1BAEC28EC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC2964);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEA500;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEA4E8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4C52C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB85A4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB849C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB861C();
  sub_1BA4A2870(&qword_1ED3AEA90, (uint64_t (*)(uint64_t))sub_1BAEB861C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB849C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEC39C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEC370;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4C714(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB3244(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB303C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB32BC();
  sub_1BA4A2870(&qword_1EF2B3400, (uint64_t (*)(uint64_t))sub_1BAEB32BC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB303C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEED178;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEED0DC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4C8FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE72CDC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE72BD4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE72D54();
  sub_1BA4A2870(&qword_1ED3AEA60, (uint64_t (*)(uint64_t))sub_1BAE72D54, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE72BD4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFB2D0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFB2A4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4CAE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA260C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA247C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA2684();
  sub_1BA4A2870(&qword_1EF2B3028, (uint64_t (*)(uint64_t))sub_1BAEA2684, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA247C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEFA08;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEF9E4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4CCCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE73BC0(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE73CB0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE73C38();
  sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE73CB0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFAC4C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFABFC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4CEB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE9B20C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE9B284();
  sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF12D8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF12B8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4D09C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE9B5FC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE9B674();
  sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF11D0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF1160;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4D284(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE76070(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE76160);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE760E8();
  sub_1BA4A2870(&qword_1ED3AEA20, (uint64_t (*)(uint64_t))sub_1BAE760E8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE76160);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFA1B4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFA188;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4D46C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7642C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE762E0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE764A4();
  sub_1BA4A2870(&qword_1EF2B24F0, (uint64_t (*)(uint64_t))sub_1BAE764A4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE762E0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFA0F4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFA0C8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4D654(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE94C44(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE94AF8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE94CBC();
  sub_1BA4A2870(&qword_1EF2B2E70, (uint64_t (*)(uint64_t))sub_1BAE94CBC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE94AF8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF2FEC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF2FC8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4D83C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE90BA4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE90A58);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE90C1C();
  sub_1BA4A2870(&qword_1EF2B2D98, (uint64_t (*)(uint64_t))sub_1BAE90C1C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE90A58);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF3560;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF3518;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4DA24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE908F0(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE907E8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE90968();
  sub_1BA4A2870(&qword_1ED3AEA10, (uint64_t (*)(uint64_t))sub_1BAE90968, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE907E8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF35C4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF35A0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4DC0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7593C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE75A2C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE759B4();
  sub_1BA4A2870(&qword_1EF2B2498, (uint64_t (*)(uint64_t))sub_1BAE759B4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE75A2C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFA4F8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFA4A4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4DDF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE77B34(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE779E8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE77BAC();
  sub_1BA4A2870(&qword_1EF2B2588, (uint64_t (*)(uint64_t))sub_1BAE77BAC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE779E8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF9930;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF98F4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4DFDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE83774(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE83604);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE837EC();
  sub_1BA4A2870(&qword_1ED3AE9F0, (uint64_t (*)(uint64_t))sub_1BAE837EC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE83604);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF5DF4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF5DDC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4E1C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAECFC9C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAECFD8C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAECFD14();
  sub_1BA4A2870(&qword_1ED3AE9D0, (uint64_t (*)(uint64_t))sub_1BAECFD14, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAECFD8C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE8380;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE8354;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4E3AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAED0014(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAECFF0C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAED008C();
  sub_1BA4A2870(&qword_1ED3AE9E0, (uint64_t (*)(uint64_t))sub_1BAED008C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAECFF0C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE82B4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE8288;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4E594(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC840C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC8484();
  sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE970C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE96E0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4E77C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC8784(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC87FC();
  sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE9610;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE95E4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4E964(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7C27C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C0A4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7C2F4();
  sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7C0A4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF7D5C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF7D24;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4EB4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC0114(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC0204);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC018C();
  sub_1BA4A2870(&qword_1ED3AE990, (uint64_t (*)(uint64_t))sub_1BAEC018C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC0204);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEADE8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEACC4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4ED34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEBB9E4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEBB810);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEBBA5C();
  sub_1BA4A2870(&qword_1ED3AE980, (uint64_t (*)(uint64_t))sub_1BAEBBA5C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEBB810);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEBC64;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEBC4C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4EF1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA81DC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA806C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA8254();
  sub_1BA4A2870(&qword_1ED3AE960, (uint64_t (*)(uint64_t))sub_1BAEA8254, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA806C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEEF44;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEEF2C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4F104(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA67C8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA68B8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA6840();
  sub_1BA4A2870(&qword_1EF2B30E0, (uint64_t (*)(uint64_t))sub_1BAEA6840, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA68B8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEF42C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEF400;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4F2EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA6BC8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA6A7C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA6C40();
  sub_1BA4A2870(&qword_1EF2B3128, (uint64_t (*)(uint64_t))sub_1BAEA6C40, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA6A7C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEF36C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEF348;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4F4D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE9F09C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F18C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE9F114();
  sub_1BA4A2870(&qword_1ED3AE930, (uint64_t (*)(uint64_t))sub_1BAE9F114, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE9F18C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF08A8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF087C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4F6BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE9F458(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F30C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE9F4D0();
  sub_1BA4A2870(&qword_1ED3AE940, (uint64_t (*)(uint64_t))sub_1BAE9F4D0, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE9F30C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF0798;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF0728;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4F8A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE96B6C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE96C5C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE96BE4();
  sub_1BA4A2870(&qword_1ED3AE920, (uint64_t (*)(uint64_t))sub_1BAE96BE4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE96C5C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF2704;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF26EC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4FA8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE88034(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE87EE8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE880AC();
  sub_1BA4A2870(&qword_1EF2B2B28, (uint64_t (*)(uint64_t))sub_1BAE880AC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE87EE8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF507C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF5058;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4FC74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE87D80(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE87C34);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE87DF8();
  sub_1BA4A2870(&qword_1EF2B2AE0, (uint64_t (*)(uint64_t))sub_1BAE87DF8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE87C34);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF50E0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF50BC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE4FE5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE82434(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE82524);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE824AC();
  sub_1BA4A2870(&qword_1ED3AE900, (uint64_t (*)(uint64_t))sub_1BAE824AC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE82524);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF626C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF6254;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE50044(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE73344(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE73434);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE733BC();
  sub_1BA4A2870(&qword_1ED3AE8E0, (uint64_t (*)(uint64_t))sub_1BAE733BC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE73434);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFAE90;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFAE70;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5022C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAED0AE8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAED0BD8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAED0B60();
  sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAED0BD8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE7DF4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE7DC8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE50414(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE71EE8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE71FD8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE71F60();
  sub_1BA4A2870(&qword_1ED3AE8C0, (uint64_t (*)(uint64_t))sub_1BAE71F60, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE71FD8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFB8C0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFB8A8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE505FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAECAADC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAECABCC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAECAB54();
  sub_1BA4A2870(&qword_1ED3AE8B0, (uint64_t (*)(uint64_t))sub_1BAECAB54, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAECABCC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE9160;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE9140;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE507E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC3DBC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC3C70);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC3E34();
  sub_1BA4A2870(&qword_1ED3AE8A0, (uint64_t (*)(uint64_t))sub_1BAEC3E34, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC3C70);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE9E30;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE9E18;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE509CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC3518(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC33CC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC3590();
  sub_1BA4A2870(&qword_1EF2B37F8, (uint64_t (*)(uint64_t))sub_1BAEC3590, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC33CC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEA1B8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEA194;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE50BB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC37CC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC3680);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC3844();
  sub_1BA4A2870(&qword_1EF2B3838, (uint64_t (*)(uint64_t))sub_1BAEC3844, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC3680);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEA130;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEA10C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE50D9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC2FF4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2EA8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC306C();
  sub_1BA4A2870(&qword_1ED3AE890, (uint64_t (*)(uint64_t))sub_1BAEC306C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC2EA8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEA2E0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEA2BC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE50F84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC3264(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC315C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC32DC();
  sub_1BA4A2870(&qword_1ED3AE880, (uint64_t (*)(uint64_t))sub_1BAEC32DC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC315C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEA24C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEA228;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5116C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC2D40(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2BF4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC2DB8();
  sub_1BA4A2870(&qword_1EF2B37B0, (uint64_t (*)(uint64_t))sub_1BAEC2DB8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC2BF4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEA368;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEA344;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE51354(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE78FF8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE78EF0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE79070();
  sub_1BA4A2870(&qword_1ED3AE860, (uint64_t (*)(uint64_t))sub_1BAE79070, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE78EF0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF90A8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF906C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5153C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE98F20(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE99010);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE98F98();
  sub_1BA4A2870(&qword_1ED3AE850, (uint64_t (*)(uint64_t))sub_1BAE98F98, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE99010);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF1FF8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE9140;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE51724(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE943A8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE94498);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE94420();
  sub_1BA4A2870(&qword_1ED3AE840, (uint64_t (*)(uint64_t))sub_1BAE94420, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE94498);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF316C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF3154;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5190C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE8E4A8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE8E3A0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE8E520();
  sub_1BA4A2870(&qword_1ED3AE830, (uint64_t (*)(uint64_t))sub_1BAE8E520, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE8E3A0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF4160;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF4148;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE51AF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC402C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC3F24);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC40A4();
  sub_1BA4A2870(&qword_1ED3AE810, (uint64_t (*)(uint64_t))sub_1BAEC40A4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC3F24);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE9DD8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE9488;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE51CDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE746D8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE745D0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE74750();
  sub_1BA4A2870(&qword_1ED3AE800, (uint64_t (*)(uint64_t))sub_1BAE74750, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE745D0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFA88C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFA868;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE51EC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEBB2A8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEBB398);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEBB320();
  sub_1BA4A2870(&qword_1ED3AE7F0, (uint64_t (*)(uint64_t))sub_1BAEBB320, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEBB398);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEBE2C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEBE0C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE520AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB3A90(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB3944);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB3B08();
  sub_1BA4A2870(&qword_1EF2B3430, (uint64_t (*)(uint64_t))sub_1BAEB3B08, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB3944);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEECF98;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEB3B8C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE52294(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB37A4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB369C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB381C();
  sub_1BA4A2870(&qword_1ED3AE7E0, (uint64_t (*)(uint64_t))sub_1BAEB381C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB369C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEED008;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEB38A0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5247C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA9738(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA9828);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA97B0();
  sub_1BA4A2870(&qword_1ED3AE7D0, (uint64_t (*)(uint64_t))sub_1BAEA97B0, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA9828);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEEDA0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEED88;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE52664(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA1FD8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1ED0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA2050();
  sub_1BA4A2870(&qword_1ED3AE7C0, (uint64_t (*)(uint64_t))sub_1BAEA2050, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA1ED0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEFBEC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEFB84;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5284C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7C4EC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C3E4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7C564();
  sub_1BA4A2870(&qword_1ED3AE7B0, (uint64_t (*)(uint64_t))sub_1BAE7C564, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7C3E4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF7CB4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF7C90;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE52A34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7EDF0(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7EC80);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7EE68();
  sub_1BA4A2870(&qword_1ED3AE7A8, (uint64_t (*)(uint64_t))sub_1BAE7EE68, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7EC80);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF6FA8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAE7EEEC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE52C1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC3A3C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC3934);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC3AB4();
  sub_1BA4A2870(&qword_1ED3AE798, (uint64_t (*)(uint64_t))sub_1BAEC3AB4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC3934);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEA0CC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEA064;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE52E04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC2418(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2508);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC2490();
  sub_1BA4A2870(&qword_1ED3AE788, (uint64_t (*)(uint64_t))sub_1BAEC2490, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC2508);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEA5F4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEA5DC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE52FEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC0740(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC0638);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC07B8();
  sub_1BA4A2870(&qword_1ED3AE778, (uint64_t (*)(uint64_t))sub_1BAEC07B8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC0638);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEAB10;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEAAF8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE531D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE78D4C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE78B78);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE78DC4();
  sub_1BA4A2870(&qword_1EF2B2668, (uint64_t (*)(uint64_t))sub_1BAE78DC4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE78B78);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF915C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF90F4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE533BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB702C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB711C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB70A4();
  sub_1BA4A2870(&qword_1EF2B3448, (uint64_t (*)(uint64_t))sub_1BAEB70A4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB711C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEECC28;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEECC10;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE535A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB5ED8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB5FC8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB5F50();
  sub_1BA4A2870(&qword_1ED3AE768, (uint64_t (*)(uint64_t))sub_1BAEB5F50, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB5FC8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEECE8C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEECE6C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5378C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE75F5C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE75E10);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE75FD4();
  sub_1BA4A2870(&qword_1ED3AE758, (uint64_t (*)(uint64_t))sub_1BAE75FD4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE75E10);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFA3AC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAE76058;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE53974(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA844C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA8344);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA84C4();
  sub_1BA4A2870(&qword_1ED3AE738, (uint64_t (*)(uint64_t))sub_1BAEA84C4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA8344);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEEEC8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEEEB0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE53B5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE9FFB0(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA00A0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA0028();
  sub_1BA4A2870(&qword_1ED3AE728, (uint64_t (*)(uint64_t))sub_1BAEA0028, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA00A0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF0620;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF0608;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE53D44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE8EEA0(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE8ED98);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE8EF18();
  sub_1BA4A2870(&qword_1ED3AE708, (uint64_t (*)(uint64_t))sub_1BAE8EF18, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE8ED98);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF3D90;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF3D64;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE53F2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7E690(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7E780);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7E708();
  sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7E780);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF715C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF713C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE54114(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE789CC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE788C4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE78A44();
  sub_1BA4A2870(&qword_1EF2B2608, (uint64_t (*)(uint64_t))sub_1BAE78A44, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE788C4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF9278;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF9260;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE542FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE718C8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE719B8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE71940();
  sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE719B8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFBA8C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFBA08;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE544E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAECBF58(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAECC048);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAECBFD0();
  sub_1BA4A2870(&qword_1EF2B3990, (uint64_t (*)(uint64_t))sub_1BAECBFD0, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAECC048);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE9034;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE8FFC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE546CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC915C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC9054);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC91D4();
  sub_1BA4A2870(&qword_1ED3AF3A0, (uint64_t (*)(uint64_t))sub_1BAEC91D4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC9054);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE943C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE9418;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE548B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE72738(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE72828);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE727B0();
  sub_1BA4A2870(&qword_1ED3AF390, (uint64_t (*)(uint64_t))sub_1BAE727B0, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE72828);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFB5C4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF9800;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE54A9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEBB620(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEBB518);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEBB698();
  sub_1BA4A2870(&qword_1ED3AF380, (uint64_t (*)(uint64_t))sub_1BAEBB698, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEBB518);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEBDCC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEBDB4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE54C84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB677C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB686C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB67F4();
  sub_1BA4A2870(&qword_1ED3AF370, (uint64_t (*)(uint64_t))sub_1BAEB67F4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB686C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEECD5C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEECD44;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE54E6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB2ED4(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB2D88);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB2F4C();
  sub_1BA4A2870(&qword_1ED3AF360, (uint64_t (*)(uint64_t))sub_1BAEB2F4C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB2D88);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEED250;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEED22C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE55054(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEAD36C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEAD45C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEAD3E4();
  sub_1BA4A2870(&qword_1EF2B3348, (uint64_t (*)(uint64_t))sub_1BAEAD3E4, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEAD45C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEE2AC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEE294;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5523C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEFC6CC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEFC488);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEFC744();
  sub_1BA4A2870(&qword_1EF2B6120, (uint64_t (*)(uint64_t))sub_1BAEFC744, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEFC488);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFC890;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFC7C8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE55424(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE99FA8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE9A098);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE9A020();
  sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE9A098);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF189C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF1870;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5560C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE96400(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE964F0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE96478();
  sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE964F0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF2830;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF27D4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE557F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE77D64(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE77E54);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE77DDC();
  sub_1BA4A2870(&qword_1ED3AF330, (uint64_t (*)(uint64_t))sub_1BAE77DDC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE77E54);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF9818;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF9800;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE559DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE87058(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE87148);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE870D0();
  sub_1BA4A2870(&qword_1ED3AF320, (uint64_t (*)(uint64_t))sub_1BAE870D0, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE87148);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF54EC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF54D4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE55BC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAECF594(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAECF684);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAECF60C();
  sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAECF684);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE8538;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE8500;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE55DAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAECA534(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAECA624);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAECA5AC();
  sub_1BA4A2870(&qword_1ED3AF300, (uint64_t (*)(uint64_t))sub_1BAECA5AC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAECA624);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEE9360;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE92F0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE55F94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE78274(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE78364);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE782EC();
  sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE78364);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF94F0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF94AC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5617C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEBA90C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEBA9FC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEBA984();
  sub_1BA4A2870(&qword_1ED3AF2E0, (uint64_t (*)(uint64_t))sub_1BAEBA984, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEBA9FC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEBFF8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEBFE0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE56364(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA5488(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA5578);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA5500();
  sub_1BA4A2870(&qword_1EF2B3068, (uint64_t (*)(uint64_t))sub_1BAEA5500, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA5578);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEF850;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEF824;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5654C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE9E954(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE9EA44);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE9E9CC();
  sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE9EA44);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF0AA8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF0A88;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE56734(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE98358(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE98448);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE983D0();
  sub_1BA4A2870(&qword_1ED3AF2A0, (uint64_t (*)(uint64_t))sub_1BAE983D0, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE98448);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF20EC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEE92F0;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5691C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE94720(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE94618);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE94798();
  sub_1BA4A2870(&qword_1ED3AF290, (uint64_t (*)(uint64_t))sub_1BAE94798, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE94618);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF30D8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF30B4;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE56B04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE819BC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE818B4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE81A34();
  sub_1BA4A2870(&qword_1ED3AF280, (uint64_t (*)(uint64_t))sub_1BAE81A34, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE818B4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF6558;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAE7EEEC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE56CEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7130C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE713FC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE71384();
  sub_1BA4A2870(&qword_1ED3AF270, (uint64_t (*)(uint64_t))sub_1BAE71384, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE713FC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEFBD34;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEFBD14;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE56ED4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEAAA10(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEAA83C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEAAA88();
  sub_1BA4A2870(&qword_1ED3AF268, (uint64_t (*)(uint64_t))sub_1BAEAAA88, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEAA83C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEE8AC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEE844;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE570BC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  _BYTE v19[16];
  uint64_t (*v20)();
  uint64_t v21;
  _QWORD v22[4];

  sub_1BAEE7470(0);
  v10 = v9;
  v11 = (uint64_t *)(v4 + *(int *)(v9 + 44));
  v12 = *v11;
  v13 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v12;
  *(_QWORD *)(v14 + 32) = v13;
  sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BAEE7534();
  swift_retain();
  v15 = sub_1BB87444C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = a2;
  sub_1BA4C010C(v4 + *(int *)(v10 + 36), (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v20 = sub_1BAEE7610;
  v21 = v16;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_1BAEE759C;
  v18[5] = v14;
  LOBYTE(v15) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v19, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v15 & 1;
}

uint64_t sub_1BAE5724C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB7824(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB771C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB789C();
  sub_1BA4A2870(&qword_1ED3AF248, (uint64_t (*)(uint64_t))sub_1BAEB789C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB771C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEC934;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEC910;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE57434(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEB7A94(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEB798C);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEB7B0C();
  sub_1BA4A2870(&qword_1ED3AF258, (uint64_t (*)(uint64_t))sub_1BAEB7B0C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEB798C);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEC8D0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEC8B8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5761C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEA7F04(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEA7DFC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEA7F7C();
  sub_1BA4A2870(&qword_1ED3AF238, (uint64_t (*)(uint64_t))sub_1BAEA7F7C, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEA7DFC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEEFCC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEEFA8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE57804(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7AA34(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A8C4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7AAAC();
  sub_1BA4A2870(&qword_1ED3AF218, (uint64_t (*)(uint64_t))sub_1BAE7AAAC, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7A8C4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF8630;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF8618;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE579EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAEC04D0(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAEC03C8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAEC0548();
  sub_1BA4A2870(&qword_1ED3AF208, (uint64_t (*)(uint64_t))sub_1BAEC0548, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAEC03C8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEEAB98;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEEAB80;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE57BD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE94F1C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE94DAC);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE94F94();
  sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE94DAC);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF2F64;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF2F38;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE57DBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE868C8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE869B8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE86940();
  sub_1BA4A2870(&qword_1ED3AF1D8, (uint64_t (*)(uint64_t))sub_1BAE86940, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE869B8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF5644;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF562C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE57FA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE9BAF0(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B9E8);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE9BB68();
  sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE9B9E8);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF0D74;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF0D3C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5818C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE8ADDC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE8AC90);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE8AE54();
  sub_1BA4A2870(&qword_1EF2B2C70, (uint64_t (*)(uint64_t))sub_1BAE8AE54, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE8AC90);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF435C;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF4094;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE58374(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE809A8(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE80A98);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE80A20();
  sub_1BA4A2870(&qword_1ED3AF3C0, (uint64_t (*)(uint64_t))sub_1BAE80A20, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE80A98);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF68D8;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF68AC;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5855C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE77100(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE771F0);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE77178();
  sub_1BA4A2870(&qword_1EF2B2530, (uint64_t (*)(uint64_t))sub_1BAE77178, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE771F0);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF9D90;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF9D6C;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE58744(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE80330(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE80420);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE803A8();
  sub_1BA4A2870(&qword_1EF2B2948, (uint64_t (*)(uint64_t))sub_1BAE803A8, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE80420);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF6AEC;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF6AC8;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE5892C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  _BYTE v24[16];
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[4];

  sub_1BAEE4FF4(0);
  v9 = v8;
  v10 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v10;
  v12 = v10[1];
  v13 = swift_allocObject();
  v14 = a2 & 1;
  *(_BYTE *)(v13 + 16) = a2 & 1;
  *(_QWORD *)(v13 + 24) = v11;
  *(_QWORD *)(v13 + 32) = v12;
  sub_1BA4CDF6C(0, &qword_1ED39C0E0, (uint64_t (*)(void))sub_1BA4FB65C, (uint64_t)&type metadata for FormatStateViewNodeState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BAEE5074();
  swift_retain();
  v15 = sub_1BB87444C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = v14;
  sub_1BA4C010C(v4 + *(int *)(v9 + 36), (uint64_t)v27);
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  v25 = sub_1BAEE50E8;
  v26 = v16;
  v20 = a3;
  v21 = a4;
  v22 = sub_1BAEE50DC;
  v23 = v13;
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v24, (uint64_t)sub_1BAEFCC08, (uint64_t)v19);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return v11 & 1;
}

uint64_t sub_1BAE58AC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7CF9C(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7CE94);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7D014();
  sub_1BA4A2870(&qword_1ED3AF400, (uint64_t (*)(uint64_t))sub_1BAE7D014, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7CE94);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF78A0;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF7888;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE58CA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE7BC88(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE7BAB4);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE7BD00();
  sub_1BA4A2870(&qword_1EF2B27A0, (uint64_t (*)(uint64_t))sub_1BAE7BD00, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE7BAB4);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF7E50;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF7E24;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

uint64_t sub_1BAE58E90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _BYTE v27[16];
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;

  sub_1BAE8EADC(0);
  v11 = v10;
  v12 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v14 = *v12;
  v13 = v12[1];
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v15 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v30, v15 + 16, (uint64_t (*)(_QWORD))sub_1BAE8E908);
  *(_QWORD *)(v15 + 40) = v14;
  *(_QWORD *)(v15 + 48) = v13;
  sub_1BA69C808(a2, a3, a4 & 1);
  sub_1BAE8EB54();
  sub_1BA4A2870(&qword_1ED3AF3D0, (uint64_t (*)(uint64_t))sub_1BAE8EB54, MEMORY[0x1E0DED188]);
  swift_retain();
  v16 = sub_1BB87444C();
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  sub_1BA5193C4((uint64_t)&v30, v17 + 24, (uint64_t (*)(_QWORD))sub_1BAE8E908);
  sub_1BA4C010C(v6 + *(int *)(v11 + 36), (uint64_t)&v30);
  __swift_project_boxed_opaque_existential_1(&v30, v33);
  v28 = sub_1BAEF3FB4;
  v29 = v17;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF3F28;
  v26 = v15;
  sub_1BA69C808(a2, a3, a4 & 1);
  LOBYTE(v11) = sub_1BA6EC410(a1, (uint64_t)sub_1BAEFCC00, (uint64_t)v27, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  return v11 & 1;
}

void sub_1BAE594C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *__dst;
  uint64_t v81;
  uint64_t v82;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_1BB8741F4();
  if (v5 >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        sub_1BAE5C2B0(0, v4, 1, (uint64_t)a1);
      return;
    }
    goto LABEL_116;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
  {
LABEL_121:
    sub_1BB873EA0();
    __break(1u);
    JUMPOUT(0x1BAE5A030);
  }
  v78 = v5;
  v79 = v4;
  v76 = a1;
  if (v4 >= 2)
  {
    v81 = v1;
    v7 = v6 >> 1;
    v8 = sub_1BB872E74();
    *(_QWORD *)(v8 + 16) = v7;
    v77 = v8;
    __dst = (char *)(v8 + 32);
LABEL_13:
    v10 = 0;
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    v12 = *a1;
    v13 = v79;
    v82 = *a1;
    do
    {
      v15 = v10++;
      if (v10 < v13)
        __asm { BR              X10 }
      if (v10 < v79)
      {
        if (__OFSUB__(v10, v15))
          goto LABEL_115;
        if (v10 - v15 < v78)
        {
          if (__OFADD__(v15, v78))
          {
            __break(1u);
LABEL_118:
            __break(1u);
            JUMPOUT(0x1BAE59FD8);
          }
          if (v15 + v78 >= v79)
            v16 = v79;
          else
            v16 = v15 + v78;
          if (v16 < v15)
            goto LABEL_118;
          if (v10 != v16)
            __asm { BR              X10 }
        }
      }
      if (v10 < v15)
        goto LABEL_110;
      v17 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v11 = v17;
      else
        v11 = sub_1BACAA368(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
      v19 = *((_QWORD *)v11 + 2);
      v18 = *((_QWORD *)v11 + 3);
      v14 = v19 + 1;
      v12 = v82;
      if (v19 >= v18 >> 1)
      {
        v11 = sub_1BACAA368((char *)(v18 > 1), v19 + 1, 1, v11);
        v12 = v82;
      }
      *((_QWORD *)v11 + 2) = v14;
      v20 = v11 + 32;
      v21 = &v11[16 * v19 + 32];
      *(_QWORD *)v21 = v15;
      *((_QWORD *)v21 + 1) = v10;
      if (v19)
      {
        while (1)
        {
          v22 = v14 - 1;
          if (v14 >= 4)
          {
            v27 = &v20[16 * v14];
            v28 = *((_QWORD *)v27 - 8);
            v29 = *((_QWORD *)v27 - 7);
            v33 = __OFSUB__(v29, v28);
            v30 = v29 - v28;
            if (v33)
              goto LABEL_99;
            v32 = *((_QWORD *)v27 - 6);
            v31 = *((_QWORD *)v27 - 5);
            v33 = __OFSUB__(v31, v32);
            v25 = v31 - v32;
            v26 = v33;
            if (v33)
              goto LABEL_100;
            v34 = v14 - 2;
            v35 = &v20[16 * v14 - 32];
            v37 = *(_QWORD *)v35;
            v36 = *((_QWORD *)v35 + 1);
            v33 = __OFSUB__(v36, v37);
            v38 = v36 - v37;
            if (v33)
              goto LABEL_102;
            v33 = __OFADD__(v25, v38);
            v39 = v25 + v38;
            if (v33)
              goto LABEL_105;
            if (v39 >= v30)
            {
              v57 = &v20[16 * v22];
              v59 = *(_QWORD *)v57;
              v58 = *((_QWORD *)v57 + 1);
              v33 = __OFSUB__(v58, v59);
              v60 = v58 - v59;
              if (v33)
                goto LABEL_109;
              v50 = v25 < v60;
              goto LABEL_65;
            }
          }
          else
          {
            if (v14 != 3)
            {
              v51 = *((_QWORD *)v11 + 4);
              v52 = *((_QWORD *)v11 + 5);
              v33 = __OFSUB__(v52, v51);
              v44 = v52 - v51;
              v45 = v33;
              goto LABEL_59;
            }
            v24 = *((_QWORD *)v11 + 4);
            v23 = *((_QWORD *)v11 + 5);
            v33 = __OFSUB__(v23, v24);
            v25 = v23 - v24;
            v26 = v33;
          }
          if ((v26 & 1) != 0)
            goto LABEL_101;
          v34 = v14 - 2;
          v40 = &v20[16 * v14 - 32];
          v42 = *(_QWORD *)v40;
          v41 = *((_QWORD *)v40 + 1);
          v43 = __OFSUB__(v41, v42);
          v44 = v41 - v42;
          v45 = v43;
          if (v43)
            goto LABEL_104;
          v46 = &v20[16 * v22];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v33 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v33)
            goto LABEL_107;
          if (__OFADD__(v44, v49))
            goto LABEL_108;
          if (v44 + v49 >= v25)
          {
            v50 = v25 < v49;
LABEL_65:
            if (v50)
              v22 = v34;
            goto LABEL_67;
          }
LABEL_59:
          if ((v45 & 1) != 0)
            goto LABEL_103;
          v53 = &v20[16 * v22];
          v55 = *(_QWORD *)v53;
          v54 = *((_QWORD *)v53 + 1);
          v33 = __OFSUB__(v54, v55);
          v56 = v54 - v55;
          if (v33)
            goto LABEL_106;
          if (v56 < v44)
            goto LABEL_15;
LABEL_67:
          v61 = v22 - 1;
          if (v22 - 1 >= v14)
          {
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
            JUMPOUT(0x1BAE59FCCLL);
          }
          if (!v12)
          {
            __break(1u);
            JUMPOUT(0x1BAE59FE0);
          }
          v62 = v11;
          v63 = &v20[16 * v61];
          v64 = *(_QWORD *)v63;
          v65 = &v20[16 * v22];
          v66 = *((_QWORD *)v65 + 1);
          sub_1BAE5EE94((char *)(v12 + *(_QWORD *)v63), (char *)(v12 + *(_QWORD *)v65), (char *)(v12 + v66), __dst);
          if (v81)
          {
            v68 = v77;
            goto LABEL_77;
          }
          if (v66 < v64)
            goto LABEL_96;
          if (v22 > *((_QWORD *)v62 + 2))
            goto LABEL_97;
          *(_QWORD *)v63 = v64;
          *(_QWORD *)&v20[16 * v61 + 8] = v66;
          v67 = *((_QWORD *)v62 + 2);
          if (v22 >= v67)
            goto LABEL_98;
          v14 = v67 - 1;
          memmove(&v20[16 * v22], v65 + 16, 16 * (v67 - 1 - v22));
          v11 = v62;
          *((_QWORD *)v62 + 2) = v67 - 1;
          v12 = v82;
          if (v67 <= 2)
            goto LABEL_15;
        }
      }
      v14 = 1;
LABEL_15:
      v13 = v79;
    }
    while (v10 < v79);
    v2 = v81;
    v9 = v77;
    if (v14 < 2)
    {
LABEL_92:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 16) = 0;
      goto LABEL_93;
    }
    goto LABEL_79;
  }
  v9 = MEMORY[0x1E0DEE9D8];
  __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
  if (v4 == 1)
  {
    v77 = MEMORY[0x1E0DEE9D8];
    v81 = v1;
    goto LABEL_13;
  }
  v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  if (v14 < 2)
    goto LABEL_92;
LABEL_79:
  v69 = *v76;
  while (1)
  {
    v70 = v14 - 2;
    if (v14 < 2)
      goto LABEL_111;
    if (!v69)
    {
      __break(1u);
      goto LABEL_121;
    }
    v71 = v11;
    v72 = *(_QWORD *)&v11[16 * v70 + 32];
    v73 = *(_QWORD *)&v11[16 * v14 + 24];
    sub_1BAE5EE94((char *)(v69 + v72), (char *)(v69 + *(_QWORD *)&v11[16 * v14 + 16]), (char *)(v69 + v73), __dst);
    if (v2)
      break;
    if (v73 < v72)
      goto LABEL_112;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v71 = sub_1BACAB464((uint64_t)v71);
    if (v70 >= *((_QWORD *)v71 + 2))
      goto LABEL_113;
    v74 = &v71[16 * v70 + 32];
    *(_QWORD *)v74 = v72;
    *((_QWORD *)v74 + 1) = v73;
    v75 = *((_QWORD *)v71 + 2);
    if (v14 > v75)
      goto LABEL_114;
    memmove(&v71[16 * v14 + 16], &v71[16 * v14 + 32], 16 * (v75 - v14));
    v11 = v71;
    *((_QWORD *)v71 + 2) = v75 - 1;
    v14 = v75 - 1;
    if (v75 <= 2)
      goto LABEL_92;
  }
  v68 = v9;
LABEL_77:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v68 + 16) = 0;
LABEL_93:
  swift_bridgeObjectRelease();
}

uint64_t sub_1BAE5A0C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  char *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *__dst;
  uint64_t v111;
  uint64_t v112;

  v2 = v1;
  v4 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        return sub_1BAE5C564(0, v4, 1, a1);
      return result;
    }
LABEL_192:
    __break(1u);
LABEL_193:
    __break(1u);
LABEL_194:
    __break(1u);
LABEL_195:
    __break(1u);
LABEL_196:
    __break(1u);
LABEL_197:
    __break(1u);
LABEL_198:
    __break(1u);
LABEL_199:
    __break(1u);
LABEL_200:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_200;
  v109 = v4 - 2;
  v106 = result;
  v107 = v4;
  v104 = a1;
  if (v4 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (_BYTE *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v4 != 1)
    {
      v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
      if (v14 < 2)
      {
LABEL_168:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v9 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
LABEL_155:
      v96 = *v104;
      while (1)
      {
        v97 = v14 - 2;
        if (v14 < 2)
          goto LABEL_187;
        if (!v96)
          goto LABEL_199;
        v98 = v12;
        v99 = *(_QWORD *)&v12[16 * v97 + 32];
        v100 = *(_QWORD *)&v12[16 * v14 + 24];
        sub_1BAE5F470((_BYTE *)(v96 + v99), (_BYTE *)(v96 + *(_QWORD *)&v12[16 * v14 + 16]), v96 + v100, __dst);
        if (v2)
        {
          v95 = v9;
          goto LABEL_153;
        }
        if (v100 < v99)
          goto LABEL_188;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v98 = sub_1BACAB464((uint64_t)v98);
        if (v97 >= *((_QWORD *)v98 + 2))
          goto LABEL_189;
        v101 = &v98[16 * v97 + 32];
        *(_QWORD *)v101 = v99;
        *((_QWORD *)v101 + 1) = v100;
        v102 = *((_QWORD *)v98 + 2);
        if (v14 > v102)
          goto LABEL_190;
        memmove(&v98[16 * v14 + 16], &v98[16 * v14 + 32], 16 * (v102 - v14));
        v12 = v98;
        *((_QWORD *)v98 + 2) = v102 - 1;
        v14 = v102 - 1;
        if (v102 <= 2)
          goto LABEL_168;
      }
    }
    v105 = MEMORY[0x1E0DEE9D8];
    v111 = v1;
  }
  else
  {
    v111 = v1;
    v7 = v6 >> 1;
    v8 = sub_1BB872E74();
    *(_QWORD *)(v8 + 16) = v7;
    v105 = v8;
    __dst = (_BYTE *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v13 = v107;
  v112 = *a1;
  while (1)
  {
    v15 = v10++;
    if (v10 < v13)
    {
      v16 = v12;
      if (*(_BYTE *)(v11 + v10))
        v17 = 0x73676E69646E6962;
      else
        v17 = 0x736E6F6974706FLL;
      if (*(_BYTE *)(v11 + v10))
        v18 = 0xE800000000000000;
      else
        v18 = 0xE700000000000000;
      if (*(_BYTE *)(v11 + v15))
        v19 = 0x73676E69646E6962;
      else
        v19 = 0x736E6F6974706FLL;
      if (*(_BYTE *)(v11 + v15))
        v20 = 0xE800000000000000;
      else
        v20 = 0xE700000000000000;
      if (v17 == v19 && v18 == v20)
        v22 = 0;
      else
        v22 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 = v15 + 2;
      v23 = v15;
      if (v15 + 2 < v107)
      {
        while (1)
        {
          if (*(_BYTE *)(v112 + v23 + 2))
            v25 = 0x73676E69646E6962;
          else
            v25 = 0x736E6F6974706FLL;
          if (*(_BYTE *)(v112 + v23 + 2))
            v26 = 0xE800000000000000;
          else
            v26 = 0xE700000000000000;
          if (*(_BYTE *)(v112 + v23 + 1))
            v27 = 0x73676E69646E6962;
          else
            v27 = 0x736E6F6974706FLL;
          if (*(_BYTE *)(v112 + v23 + 1))
            v28 = 0xE800000000000000;
          else
            v28 = 0xE700000000000000;
          if (v25 == v27 && v26 == v28)
          {
            swift_bridgeObjectRelease_n();
            if ((v22 & 1) != 0)
            {
              v10 = v23 + 2;
              v12 = v16;
              v11 = v112;
              goto LABEL_61;
            }
          }
          else
          {
            v24 = sub_1BB874398();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (((v22 ^ v24) & 1) != 0)
            {
              v10 = v23 + 2;
              break;
            }
          }
          if (v109 == ++v23)
          {
            v10 = v107;
            break;
          }
        }
      }
      v12 = v16;
      v11 = v112;
      if ((v22 & 1) != 0)
      {
LABEL_61:
        if (v10 < v15)
          goto LABEL_193;
        if (v15 < v10)
        {
          v30 = v10 - 1;
          v31 = v15;
          do
          {
            if (v31 != v30)
            {
              if (!v11)
                goto LABEL_198;
              v32 = *(_BYTE *)(v11 + v31);
              *(_BYTE *)(v11 + v31) = *(_BYTE *)(v11 + v30);
              *(_BYTE *)(v11 + v30) = v32;
            }
            v77 = ++v31 < v30--;
          }
          while (v77);
        }
      }
    }
    if (v10 < v107)
    {
      if (__OFSUB__(v10, v15))
        goto LABEL_191;
      if (v10 - v15 < v106)
      {
        v33 = v15 + v106;
        if (__OFADD__(v15, v106))
          goto LABEL_194;
        if (v33 >= v107)
          v33 = v107;
        if (v33 < v15)
          goto LABEL_195;
        if (v10 != v33)
        {
          v103 = v12;
          v34 = (char *)(v11 + v10);
          v108 = v33;
          do
          {
            v35 = *(_BYTE *)(v11 + v10);
            v36 = v15;
            v37 = v34;
            while (1)
            {
              v38 = (v35 & 1) != 0 ? 0x73676E69646E6962 : 0x736E6F6974706FLL;
              v39 = (v35 & 1) != 0 ? 0xE800000000000000 : 0xE700000000000000;
              v40 = *(v37 - 1) ? 0x73676E69646E6962 : 0x736E6F6974706FLL;
              v41 = *(v37 - 1) ? 0xE800000000000000 : 0xE700000000000000;
              if (v38 == v40 && v39 == v41)
                break;
              v43 = sub_1BB874398();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v43 & 1) == 0)
                goto LABEL_80;
              v11 = v112;
              if (!v112)
                goto LABEL_196;
              v35 = *v37;
              *v37 = *(v37 - 1);
              *(v37 - 1) = v35;
              ++v15;
              --v37;
              if (v10 == v15)
                goto LABEL_81;
            }
            swift_bridgeObjectRelease_n();
LABEL_80:
            v11 = v112;
LABEL_81:
            ++v10;
            ++v34;
            v15 = v36;
          }
          while (v10 != v108);
          v10 = v108;
          v12 = v103;
        }
      }
    }
    if (v10 < v15)
    {
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
      goto LABEL_192;
    }
    v44 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v12 = v44;
    else
      v12 = sub_1BACAA368(0, *((_QWORD *)v44 + 2) + 1, 1, v44);
    v46 = *((_QWORD *)v12 + 2);
    v45 = *((_QWORD *)v12 + 3);
    v14 = v46 + 1;
    v11 = v112;
    if (v46 >= v45 >> 1)
    {
      v12 = sub_1BACAA368((char *)(v45 > 1), v46 + 1, 1, v12);
      v11 = v112;
    }
    *((_QWORD *)v12 + 2) = v14;
    v47 = v12 + 32;
    v48 = &v12[16 * v46 + 32];
    *(_QWORD *)v48 = v15;
    *((_QWORD *)v48 + 1) = v10;
    if (v46)
      break;
    v14 = 1;
LABEL_15:
    v13 = v107;
    if (v10 >= v107)
    {
      v2 = v111;
      v9 = v105;
      if (v14 < 2)
        goto LABEL_168;
      goto LABEL_155;
    }
  }
  while (1)
  {
    v49 = v14 - 1;
    if (v14 >= 4)
    {
      v54 = &v47[16 * v14];
      v55 = *((_QWORD *)v54 - 8);
      v56 = *((_QWORD *)v54 - 7);
      v60 = __OFSUB__(v56, v55);
      v57 = v56 - v55;
      if (v60)
        goto LABEL_175;
      v59 = *((_QWORD *)v54 - 6);
      v58 = *((_QWORD *)v54 - 5);
      v60 = __OFSUB__(v58, v59);
      v52 = v58 - v59;
      v53 = v60;
      if (v60)
        goto LABEL_176;
      v61 = v14 - 2;
      v62 = &v47[16 * v14 - 32];
      v64 = *(_QWORD *)v62;
      v63 = *((_QWORD *)v62 + 1);
      v60 = __OFSUB__(v63, v64);
      v65 = v63 - v64;
      if (v60)
        goto LABEL_178;
      v60 = __OFADD__(v52, v65);
      v66 = v52 + v65;
      if (v60)
        goto LABEL_181;
      if (v66 >= v57)
      {
        v84 = &v47[16 * v49];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v60 = __OFSUB__(v85, v86);
        v87 = v85 - v86;
        if (v60)
          goto LABEL_185;
        v77 = v52 < v87;
        goto LABEL_141;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v78 = *((_QWORD *)v12 + 4);
        v79 = *((_QWORD *)v12 + 5);
        v60 = __OFSUB__(v79, v78);
        v71 = v79 - v78;
        v72 = v60;
        goto LABEL_135;
      }
      v51 = *((_QWORD *)v12 + 4);
      v50 = *((_QWORD *)v12 + 5);
      v60 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      v53 = v60;
    }
    if ((v53 & 1) != 0)
      goto LABEL_177;
    v61 = v14 - 2;
    v67 = &v47[16 * v14 - 32];
    v69 = *(_QWORD *)v67;
    v68 = *((_QWORD *)v67 + 1);
    v70 = __OFSUB__(v68, v69);
    v71 = v68 - v69;
    v72 = v70;
    if (v70)
      goto LABEL_180;
    v73 = &v47[16 * v49];
    v75 = *(_QWORD *)v73;
    v74 = *((_QWORD *)v73 + 1);
    v60 = __OFSUB__(v74, v75);
    v76 = v74 - v75;
    if (v60)
      goto LABEL_183;
    if (__OFADD__(v71, v76))
      goto LABEL_184;
    if (v71 + v76 >= v52)
    {
      v77 = v52 < v76;
LABEL_141:
      if (v77)
        v49 = v61;
      goto LABEL_143;
    }
LABEL_135:
    if ((v72 & 1) != 0)
      goto LABEL_179;
    v80 = &v47[16 * v49];
    v82 = *(_QWORD *)v80;
    v81 = *((_QWORD *)v80 + 1);
    v60 = __OFSUB__(v81, v82);
    v83 = v81 - v82;
    if (v60)
      goto LABEL_182;
    if (v83 < v71)
      goto LABEL_15;
LABEL_143:
    v88 = v49 - 1;
    if (v49 - 1 >= v14)
    {
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
      goto LABEL_186;
    }
    if (!v11)
      goto LABEL_197;
    v89 = v12;
    v90 = &v47[16 * v88];
    v91 = *(_QWORD *)v90;
    v92 = &v47[16 * v49];
    v93 = *((_QWORD *)v92 + 1);
    sub_1BAE5F470((_BYTE *)(v11 + *(_QWORD *)v90), (_BYTE *)(v11 + *(_QWORD *)v92), v11 + v93, __dst);
    if (v111)
      break;
    if (v93 < v91)
      goto LABEL_172;
    if (v49 > *((_QWORD *)v89 + 2))
      goto LABEL_173;
    *(_QWORD *)v90 = v91;
    *(_QWORD *)&v47[16 * v88 + 8] = v93;
    v94 = *((_QWORD *)v89 + 2);
    if (v49 >= v94)
      goto LABEL_174;
    v14 = v94 - 1;
    memmove(&v47[16 * v49], v92 + 16, 16 * (v94 - 1 - v49));
    v12 = v89;
    *((_QWORD *)v89 + 2) = v94 - 1;
    v11 = v112;
    if (v94 <= 2)
      goto LABEL_15;
  }
  v95 = v105;
LABEL_153:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v95 + 16) = 0;
  return swift_bridgeObjectRelease();
}

void sub_1BAE5A8CC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  BOOL v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;

  v2 = v1;
  v4 = type metadata accessor for FormatRegex();
  v145 = *(_QWORD *)(v4 - 8);
  v146 = v4;
  MEMORY[0x1E0C80A78](v4);
  v140 = (uint64_t)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v151 = (uint64_t)&v132 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v132 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v132 - v12;
  MEMORY[0x1E0C80A78](v14);
  v143 = (uint64_t *)((char *)&v132 - v15);
  MEMORY[0x1E0C80A78](v16);
  v142 = (uint64_t *)((char *)&v132 - v17);
  MEMORY[0x1E0C80A78](v18);
  v138 = (uint64_t *)((char *)&v132 - v19);
  MEMORY[0x1E0C80A78](v20);
  v137 = (uint64_t *)((char *)&v132 - v21);
  v153 = a1;
  v22 = a1[1];
  v23 = sub_1BB8741F4();
  if (v23 >= v22)
  {
    if (v22 < 0)
      goto LABEL_157;
    if (v22)
      sub_1BAE5C69C(0, v22, 1, v153);
    return;
  }
  if (v22 >= 0)
    v24 = v22;
  else
    v24 = v22 + 1;
  if (v22 < -1)
    goto LABEL_165;
  v147 = v13;
  v148 = v10;
  v136 = v23;
  if (v22 < 2)
  {
    v28 = (char *)MEMORY[0x1E0DEE9D8];
    v144 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    v135 = MEMORY[0x1E0DEE9D8];
    if (v22 != 1)
    {
      v30 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_123:
      if (v30 >= 2)
      {
        v125 = *v153;
        do
        {
          v126 = v30 - 2;
          if (v30 < 2)
            goto LABEL_152;
          if (!v125)
            goto LABEL_164;
          v127 = v28;
          v128 = *(_QWORD *)&v28[16 * v126 + 32];
          v129 = *(_QWORD *)&v28[16 * v30 + 24];
          sub_1BAE5F7AC(v125 + *(_QWORD *)(v145 + 72) * v128, v125 + *(_QWORD *)(v145 + 72) * *(_QWORD *)&v28[16 * v30 + 16], v125 + *(_QWORD *)(v145 + 72) * v129, v144);
          if (v2)
            break;
          if (v129 < v128)
            goto LABEL_153;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v127 = sub_1BACAB464((uint64_t)v28);
          if (v126 >= *((_QWORD *)v127 + 2))
            goto LABEL_154;
          v130 = &v127[16 * v126 + 32];
          *(_QWORD *)v130 = v128;
          *((_QWORD *)v130 + 1) = v129;
          v131 = *((_QWORD *)v127 + 2);
          if (v30 > v131)
            goto LABEL_155;
          memmove(&v127[16 * v30 + 16], &v127[16 * v30 + 32], 16 * (v131 - v30));
          *((_QWORD *)v127 + 2) = v131 - 1;
          v30 = v131 - 1;
          v28 = v127;
        }
        while (v131 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v135 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v25 = v24 >> 1;
    v26 = sub_1BB872E74();
    *(_QWORD *)(v26 + 16) = v25;
    v27 = *(unsigned __int8 *)(v145 + 80);
    v135 = v26;
    v144 = v26 + ((v27 + 32) & ~v27);
  }
  v29 = 0;
  v28 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v31 = v29;
    v32 = v29 + 1;
    if (v29 + 1 >= v22)
    {
      v39 = v29 + 1;
      v40 = (uint64_t)v148;
    }
    else
    {
      v33 = *v153;
      v34 = *(_QWORD *)(v145 + 72);
      v35 = v137;
      sub_1BA4C2DD8(*v153 + v34 * v32, (uint64_t)v137, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
      v141 = v31;
      v152 = v34;
      v36 = v33 + v34 * v31;
      v37 = v138;
      sub_1BA4C2DD8(v36, (uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
      v38 = *v35 == *v37 && v35[1] == v37[1];
      LODWORD(v150) = v38 ? 0 : sub_1BB874398();
      sub_1BA4A2E80((uint64_t)v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
      sub_1BA4A2E80((uint64_t)v137, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
      v31 = v141;
      v139 = v33;
      if (v141 + 2 >= v22)
      {
        v42 = v141 + 2;
        if ((v150 & 1) == 0)
          goto LABEL_35;
      }
      else
      {
        v149 = v152 * v32;
        v41 = v33;
        v42 = v141 + 2;
        v43 = v152 * (v141 + 2);
        while (1)
        {
          v44 = v22;
          v45 = v142;
          sub_1BA4C2DD8(v41 + v43, (uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          v46 = v143;
          sub_1BA4C2DD8(v41 + v149, (uint64_t)v143, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          v47 = *v45 == *v46 && v45[1] == v46[1];
          v48 = v47 ? 0 : sub_1BB874398();
          sub_1BA4A2E80((uint64_t)v143, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          sub_1BA4A2E80((uint64_t)v142, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          v22 = v44;
          if (((v150 ^ v48) & 1) != 0)
            break;
          v41 += v152;
          if (v44 == ++v42)
          {
            v42 = v44;
            break;
          }
        }
        v31 = v141;
        if ((v150 & 1) == 0)
        {
LABEL_35:
          v40 = (uint64_t)v148;
          v39 = v42;
          goto LABEL_51;
        }
      }
      if (v42 < v31)
        goto LABEL_158;
      v39 = v42;
      if (v31 >= v42)
      {
        v40 = (uint64_t)v148;
      }
      else
      {
        v149 = v22;
        v134 = v28;
        v49 = 0;
        v50 = v31;
        v51 = v152 * (v39 - 1);
        v52 = v39 * v152;
        v53 = v50;
        v54 = v50 * v152;
        v40 = (uint64_t)v148;
        do
        {
          if (v53 != v39 + v49 - 1)
          {
            v56 = v2;
            v57 = v139;
            if (!v139)
              goto LABEL_163;
            v58 = v139 + v54;
            v150 = v139 + v51;
            sub_1BA5193C4(v139 + v54, v140, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
            if (v54 < v51 || v58 >= v57 + v52)
            {
              v55 = v150;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v55 = v150;
              if (v54 != v51)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_1BA5193C4(v140, v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
            v40 = (uint64_t)v148;
            v2 = v56;
          }
          ++v53;
          --v49;
          v51 -= v152;
          v52 -= v152;
          v54 += v152;
        }
        while (v53 < v39 + v49);
        v28 = v134;
        v31 = v141;
        v22 = v149;
      }
    }
LABEL_51:
    v150 = v39;
    if (v39 >= v22)
      goto LABEL_75;
    if (__OFSUB__(v39, v31))
      goto LABEL_156;
    if (v39 - v31 >= v136)
      goto LABEL_75;
    if (__OFADD__(v31, v136))
      goto LABEL_159;
    v59 = v31 + v136 >= v22 ? v22 : v31 + v136;
    if (v59 < v31)
      break;
    v141 = v31;
    v60 = v150;
    if (v150 != v59)
    {
      v133 = v2;
      v134 = v28;
      v61 = *(_QWORD *)(v145 + 72);
      v152 = v61 * (v150 - 1);
      v149 = v61;
      v62 = v150 * v61;
      v139 = v59;
      do
      {
        v63 = 0;
        v64 = v141;
        v150 = v62;
        while (1)
        {
          v65 = (_QWORD *)v40;
          v66 = *v153;
          v67 = v62 + v63 + *v153;
          v68 = v147;
          sub_1BA4C2DD8(v67, (uint64_t)v147, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          v69 = v152 + v63 + v66;
          v40 = (uint64_t)v65;
          sub_1BA4C2DD8(v69, (uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          if (*v68 == *v65 && v68[1] == v65[1])
            break;
          v71 = sub_1BB874398();
          sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          sub_1BA4A2E80((uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          if ((v71 & 1) == 0)
            goto LABEL_62;
          v72 = *v153;
          v62 = v150;
          if (!*v153)
            goto LABEL_161;
          v73 = v72 + v152 + v63;
          sub_1BA5193C4(v72 + v150 + v63, v151, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BA5193C4(v151, v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          v40 = (uint64_t)v148;
          v63 -= v149;
          if (v60 == ++v64)
            goto LABEL_63;
        }
        sub_1BA4A2E80((uint64_t)v65, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
        sub_1BA4A2E80((uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
LABEL_62:
        v62 = v150;
LABEL_63:
        ++v60;
        v152 += v149;
        v62 += v149;
      }
      while (v60 != v139);
      v150 = v139;
      v2 = v133;
      v28 = v134;
    }
    v31 = v141;
LABEL_75:
    if (v150 < v31)
      goto LABEL_151;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v28 = sub_1BACAA368(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
    v75 = *((_QWORD *)v28 + 2);
    v74 = *((_QWORD *)v28 + 3);
    v30 = v75 + 1;
    if (v75 >= v74 >> 1)
      v28 = sub_1BACAA368((char *)(v74 > 1), v75 + 1, 1, v28);
    *((_QWORD *)v28 + 2) = v30;
    v76 = v28 + 32;
    v77 = &v28[16 * v75 + 32];
    v78 = v150;
    *(_QWORD *)v77 = v31;
    *((_QWORD *)v77 + 1) = v78;
    if (v75)
    {
      while (1)
      {
        v79 = v30 - 1;
        if (v30 >= 4)
        {
          v84 = &v76[16 * v30];
          v85 = *((_QWORD *)v84 - 8);
          v86 = *((_QWORD *)v84 - 7);
          v90 = __OFSUB__(v86, v85);
          v87 = v86 - v85;
          if (v90)
            goto LABEL_140;
          v89 = *((_QWORD *)v84 - 6);
          v88 = *((_QWORD *)v84 - 5);
          v90 = __OFSUB__(v88, v89);
          v82 = v88 - v89;
          v83 = v90;
          if (v90)
            goto LABEL_141;
          v91 = v30 - 2;
          v92 = &v76[16 * v30 - 32];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v90 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v90)
            goto LABEL_143;
          v90 = __OFADD__(v82, v95);
          v96 = v82 + v95;
          if (v90)
            goto LABEL_146;
          if (v96 >= v87)
          {
            v114 = &v76[16 * v79];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v90 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v90)
              goto LABEL_150;
            v107 = v82 < v117;
            goto LABEL_112;
          }
        }
        else
        {
          if (v30 != 3)
          {
            v108 = *((_QWORD *)v28 + 4);
            v109 = *((_QWORD *)v28 + 5);
            v90 = __OFSUB__(v109, v108);
            v101 = v109 - v108;
            v102 = v90;
            goto LABEL_106;
          }
          v81 = *((_QWORD *)v28 + 4);
          v80 = *((_QWORD *)v28 + 5);
          v90 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          v83 = v90;
        }
        if ((v83 & 1) != 0)
          goto LABEL_142;
        v91 = v30 - 2;
        v97 = &v76[16 * v30 - 32];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v100 = __OFSUB__(v98, v99);
        v101 = v98 - v99;
        v102 = v100;
        if (v100)
          goto LABEL_145;
        v103 = &v76[16 * v79];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v90 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v90)
          goto LABEL_148;
        if (__OFADD__(v101, v106))
          goto LABEL_149;
        if (v101 + v106 >= v82)
        {
          v107 = v82 < v106;
LABEL_112:
          if (v107)
            v79 = v91;
          goto LABEL_114;
        }
LABEL_106:
        if ((v102 & 1) != 0)
          goto LABEL_144;
        v110 = &v76[16 * v79];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v90 = __OFSUB__(v111, v112);
        v113 = v111 - v112;
        if (v90)
          goto LABEL_147;
        if (v113 < v101)
          goto LABEL_14;
LABEL_114:
        v118 = v79 - 1;
        if (v79 - 1 >= v30)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!*v153)
          goto LABEL_162;
        v119 = v28;
        v120 = &v76[16 * v118];
        v121 = *(_QWORD *)v120;
        v122 = &v76[16 * v79];
        v123 = *((_QWORD *)v122 + 1);
        sub_1BAE5F7AC(*v153 + *(_QWORD *)(v145 + 72) * *(_QWORD *)v120, *v153 + *(_QWORD *)(v145 + 72) * *(_QWORD *)v122, *v153 + *(_QWORD *)(v145 + 72) * v123, v144);
        if (v2)
          goto LABEL_134;
        if (v123 < v121)
          goto LABEL_137;
        if (v79 > *((_QWORD *)v119 + 2))
          goto LABEL_138;
        *(_QWORD *)v120 = v121;
        *(_QWORD *)&v76[16 * v118 + 8] = v123;
        v124 = *((_QWORD *)v119 + 2);
        if (v79 >= v124)
          goto LABEL_139;
        v28 = v119;
        v30 = v124 - 1;
        memmove(&v76[16 * v79], v122 + 16, 16 * (v124 - 1 - v79));
        *((_QWORD *)v119 + 2) = v124 - 1;
        if (v124 <= 2)
          goto LABEL_14;
      }
    }
    v30 = 1;
LABEL_14:
    v22 = v153[1];
    v29 = v150;
    if (v150 >= v22)
      goto LABEL_123;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  sub_1BB873EA0();
  __break(1u);
}

void sub_1BAE5B378(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  unint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *__dst;
  uint64_t v81;

  v2 = v1;
  v4 = a1[1];
  if (sub_1BB8741F4() >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        sub_1BAE5C908(0, v4, 1, (uint64_t)a1);
      return;
    }
    goto LABEL_105;
  }
  if (v4 >= 0)
    v5 = v4;
  else
    v5 = v4 + 1;
  if (v4 < -1)
  {
LABEL_108:
    sub_1BB873EA0();
    __break(1u);
    JUMPOUT(0x1BAE5C080);
  }
  v75 = a1;
  if (v4 >= 2)
  {
    v81 = v1;
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v76 = v7;
    __dst = (char *)(v7 + 32);
    goto LABEL_13;
  }
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
  if (v4 == 1)
  {
    v76 = MEMORY[0x1E0DEE9D8];
    v81 = v1;
LABEL_13:
    v9 = 0;
    v79 = (char *)MEMORY[0x1E0DEE9D8];
    v10 = *a1;
    v77 = v4;
    while (1)
    {
      v13 = v9 + 1;
      if (v9 + 1 < v4)
        __asm { BR              X10 }
      if (v13 < v9)
        goto LABEL_100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v79 = sub_1BACAA368(0, *((_QWORD *)v79 + 2) + 1, 1, v79);
      v15 = *((_QWORD *)v79 + 2);
      v14 = *((_QWORD *)v79 + 3);
      v11 = v15 + 1;
      v78 = v9 + 1;
      if (v15 >= v14 >> 1)
        v79 = sub_1BACAA368((char *)(v14 > 1), v15 + 1, 1, v79);
      *((_QWORD *)v79 + 2) = v11;
      v16 = v79 + 32;
      v17 = &v79[16 * v15 + 32];
      *(_QWORD *)v17 = v9;
      *((_QWORD *)v17 + 1) = v78;
      if (v15)
        break;
      v11 = 1;
      v12 = v79;
LABEL_15:
      v79 = v12;
      v4 = v77;
      v9 = v78;
      if (v78 >= v77)
      {
        v2 = v81;
        v67 = v76;
        v8 = v12;
        if (v11 < 2)
          goto LABEL_82;
        goto LABEL_69;
      }
    }
    v12 = v79;
    while (1)
    {
      v18 = v11 - 1;
      if (v11 >= 4)
      {
        v23 = &v16[16 * v11];
        v24 = *((_QWORD *)v23 - 8);
        v25 = *((_QWORD *)v23 - 7);
        v29 = __OFSUB__(v25, v24);
        v26 = v25 - v24;
        if (v29)
          goto LABEL_89;
        v28 = *((_QWORD *)v23 - 6);
        v27 = *((_QWORD *)v23 - 5);
        v29 = __OFSUB__(v27, v28);
        v21 = v27 - v28;
        v22 = v29;
        if (v29)
          goto LABEL_90;
        v30 = v11 - 2;
        v31 = &v16[16 * v11 - 32];
        v33 = *(_QWORD *)v31;
        v32 = *((_QWORD *)v31 + 1);
        v29 = __OFSUB__(v32, v33);
        v34 = v32 - v33;
        if (v29)
          goto LABEL_92;
        v29 = __OFADD__(v21, v34);
        v35 = v21 + v34;
        if (v29)
          goto LABEL_95;
        if (v35 >= v26)
        {
          v53 = &v16[16 * v18];
          v55 = *(_QWORD *)v53;
          v54 = *((_QWORD *)v53 + 1);
          v29 = __OFSUB__(v54, v55);
          v56 = v54 - v55;
          if (v29)
            goto LABEL_99;
          v46 = v21 < v56;
          goto LABEL_56;
        }
      }
      else
      {
        if (v11 != 3)
        {
          v47 = *((_QWORD *)v12 + 4);
          v48 = *((_QWORD *)v12 + 5);
          v29 = __OFSUB__(v48, v47);
          v40 = v48 - v47;
          v41 = v29;
          goto LABEL_50;
        }
        v20 = *((_QWORD *)v12 + 4);
        v19 = *((_QWORD *)v12 + 5);
        v29 = __OFSUB__(v19, v20);
        v21 = v19 - v20;
        v22 = v29;
      }
      if ((v22 & 1) != 0)
        goto LABEL_91;
      v30 = v11 - 2;
      v36 = &v16[16 * v11 - 32];
      v38 = *(_QWORD *)v36;
      v37 = *((_QWORD *)v36 + 1);
      v39 = __OFSUB__(v37, v38);
      v40 = v37 - v38;
      v41 = v39;
      if (v39)
        goto LABEL_94;
      v42 = &v16[16 * v18];
      v44 = *(_QWORD *)v42;
      v43 = *((_QWORD *)v42 + 1);
      v29 = __OFSUB__(v43, v44);
      v45 = v43 - v44;
      if (v29)
        goto LABEL_97;
      if (__OFADD__(v40, v45))
        goto LABEL_98;
      if (v40 + v45 >= v21)
      {
        v46 = v21 < v45;
LABEL_56:
        if (v46)
          v18 = v30;
        goto LABEL_58;
      }
LABEL_50:
      if ((v41 & 1) != 0)
        goto LABEL_93;
      v49 = &v16[16 * v18];
      v51 = *(_QWORD *)v49;
      v50 = *((_QWORD *)v49 + 1);
      v29 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v29)
        goto LABEL_96;
      if (v52 < v40)
        goto LABEL_15;
LABEL_58:
      v57 = v18 - 1;
      if (v18 - 1 >= v11)
      {
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
        __break(1u);
LABEL_105:
        __break(1u);
        JUMPOUT(0x1BAE5C01CLL);
      }
      v58 = v10;
      if (!v10)
      {
        __break(1u);
        JUMPOUT(0x1BAE5C030);
      }
      v59 = v12;
      v60 = &v16[16 * v57];
      v61 = *(_QWORD *)v60;
      v62 = &v16[16 * v18];
      v63 = *((_QWORD *)v62 + 1);
      v64 = v58;
      sub_1BAE5FCD0((char *)(v58 + *(_QWORD *)v60), (char *)(v58 + *(_QWORD *)v62), (char *)(v58 + v63), __dst);
      if (v81)
      {
        v66 = v76;
        goto LABEL_67;
      }
      if (v63 < v61)
        goto LABEL_86;
      if (v18 > *((_QWORD *)v59 + 2))
        goto LABEL_87;
      *(_QWORD *)v60 = v61;
      *(_QWORD *)&v16[16 * v57 + 8] = v63;
      v65 = *((_QWORD *)v59 + 2);
      if (v18 >= v65)
        goto LABEL_88;
      v12 = v59;
      v11 = v65 - 1;
      memmove(&v16[16 * v18], v62 + 16, 16 * (v65 - 1 - v18));
      *((_QWORD *)v59 + 2) = v65 - 1;
      v10 = v64;
      if (v65 <= 2)
        goto LABEL_15;
    }
  }
  v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  v67 = MEMORY[0x1E0DEE9D8];
  if (v11 < 2)
  {
LABEL_82:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v67 + 16) = 0;
    goto LABEL_83;
  }
LABEL_69:
  v68 = *v75;
  while (1)
  {
    v69 = v11 - 2;
    if (v11 < 2)
      goto LABEL_101;
    if (!v68)
    {
      __break(1u);
      goto LABEL_108;
    }
    v70 = v8;
    v71 = *(_QWORD *)&v8[16 * v69 + 32];
    v72 = *(_QWORD *)&v8[16 * v11 + 24];
    sub_1BAE5FCD0((char *)(v68 + v71), (char *)(v68 + *(_QWORD *)&v8[16 * v11 + 16]), (char *)(v68 + v72), __dst);
    if (v2)
      break;
    if (v72 < v71)
      goto LABEL_102;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v70 = sub_1BACAB464((uint64_t)v70);
    if (v69 >= *((_QWORD *)v70 + 2))
      goto LABEL_103;
    v73 = &v70[16 * v69 + 32];
    *(_QWORD *)v73 = v71;
    *((_QWORD *)v73 + 1) = v72;
    v74 = *((_QWORD *)v70 + 2);
    if (v11 > v74)
      goto LABEL_104;
    memmove(&v70[16 * v11 + 16], &v70[16 * v11 + 32], 16 * (v74 - v11));
    v8 = v70;
    *((_QWORD *)v70 + 2) = v74 - 1;
    v11 = v74 - 1;
    if (v74 <= 2)
      goto LABEL_82;
  }
  v66 = v67;
LABEL_67:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v66 + 16) = 0;
LABEL_83:
  swift_bridgeObjectRelease();
}

void sub_1BAE5C2B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
    __asm { BR              X10 }
}

uint64_t sub_1BAE5C3AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&loc_1BAE5C430 + dword_1BAE5C54C[a2]))(0x656C626978656C66, a1, v2 + 1);
}

void sub_1BAE5C440(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  if (a1 != 0x656C626978656C66 || v4 != 0xED00006874646957)
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
    {
      if (!v5)
      {
        __break(1u);
        JUMPOUT(0x1BAE5C534);
      }
      v7 = *v1;
      *v1 = *(v1 - 1);
      *(v1 - 1) = v7;
      if (v2 != v3 + 1)
        JUMPOUT(0x1BAE5C384);
    }
    JUMPOUT(0x1BAE5C360);
  }
  JUMPOUT(0x1BAE5C354);
}

uint64_t sub_1BAE5C564(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  uint64_t v16;
  _BYTE *v17;

  v16 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = (_BYTE *)(*a4 + a3);
LABEL_6:
    v7 = *(_BYTE *)(v5 + v4);
    v8 = v16;
    v17 = v6;
    while (1)
    {
      if ((v7 & 1) != 0)
        v9 = 0x73676E69646E6962;
      else
        v9 = 0x736E6F6974706FLL;
      if ((v7 & 1) != 0)
        v10 = 0xE800000000000000;
      else
        v10 = 0xE700000000000000;
      if (*(v6 - 1))
        v11 = 0x73676E69646E6962;
      else
        v11 = 0x736E6F6974706FLL;
      if (*(v6 - 1))
        v12 = 0xE800000000000000;
      else
        v12 = 0xE700000000000000;
      if (v9 == v11 && v10 == v12)
      {
        result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        v6 = v17 + 1;
        if (v4 == a2)
          return result;
        goto LABEL_6;
      }
      v14 = sub_1BB874398();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
        goto LABEL_5;
      if (!v5)
        break;
      v7 = *v6;
      *v6 = *(v6 - 1);
      *(v6 - 1) = v7;
      ++v8;
      --v6;
      if (v4 == v8)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

void sub_1BAE5C69C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t (*v24)();
  _QWORD *v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v30 = a1;
  v31 = type metadata accessor for FormatRegex();
  MEMORY[0x1E0C80A78](v31);
  v35 = (uint64_t)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v28 - v9);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v28 - v13);
  v34 = a3;
  v29 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v37 = v15 * (v34 - 1);
    v33 = v15;
    v36 = v15 * v34;
    v16 = type metadata accessor for FormatRegex;
    v32 = (char *)&v28 - v13;
LABEL_6:
    v17 = 0;
    v18 = v30;
    while (1)
    {
      v19 = *a4;
      sub_1BA4C2DD8(v36 + v17 + *a4, (uint64_t)v14, (uint64_t (*)(_QWORD))v16);
      sub_1BA4C2DD8(v37 + v17 + v19, (uint64_t)v10, (uint64_t (*)(_QWORD))v16);
      if (*v14 == *v10 && v14[1] == v10[1])
      {
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))v16);
        sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))v16);
LABEL_5:
        v37 += v33;
        v36 += v33;
        if (++v34 == v29)
          return;
        goto LABEL_6;
      }
      v21 = sub_1BB874398();
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))v16);
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))v16);
      if ((v21 & 1) == 0)
        goto LABEL_5;
      v22 = *a4;
      if (!*a4)
        break;
      v23 = v10;
      v24 = v16;
      v25 = a4;
      v26 = v22 + v37 + v17;
      v27 = v24;
      sub_1BA5193C4(v22 + v36 + v17, v35, (uint64_t (*)(_QWORD))v24);
      swift_arrayInitWithTakeFrontToBack();
      sub_1BA5193C4(v35, v26, (uint64_t (*)(_QWORD))v27);
      v17 -= v33;
      ++v18;
      a4 = v25;
      v16 = v27;
      v10 = v23;
      v14 = v32;
      if (v34 == v18)
        goto LABEL_5;
    }
    __break(1u);
  }
}

void sub_1BAE5C908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
    __asm { BR              X10 }
}

uint64_t sub_1BAE5C9D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&loc_1BAE5CA7C + *(int *)(v2 + 4 * a2)))(0x40736E6F6974706FLL, a1, 0x736E6F6974706FLL);
}

void sub_1BAE5CA9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  char v7;

  if (a1 != 0x40736E6F6974706FLL || v3 != 0xEC000000646E6962)
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
    {
      if (!v4)
      {
        __break(1u);
        JUMPOUT(0x1BAE5CBDCLL);
      }
      v7 = *v5;
      *v5 = *(v5 - 1);
      *(v5 - 1) = v7;
      if (v1 != v2 + 1)
        JUMPOUT(0x1BAE5C99CLL);
    }
    JUMPOUT(0x1BAE5C97CLL);
  }
  JUMPOUT(0x1BAE5C970);
}

uint64_t sub_1BAE5CC1C(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t *v26;
  char *v27;
  uint64_t *v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t result;
  uint64_t *v45;
  char *v46;
  char *v47;
  uint64_t *v48;
  unint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  char *v53;
  uint64_t *v54;
  uint64_t *v55;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 4;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 4;
  v55 = __src;
  v54 = a4;
  if (v8 >= v10 >> 4)
  {
    if (v9 >= -15)
    {
      if (a4 != a2 || &a2[2 * v11] <= a4)
        memmove(a4, a2, 16 * v11);
      v27 = (char *)&a4[2 * v11];
      v53 = v27;
      v55 = v4;
      if (v5 < v4 && v9 >= 16)
      {
        v28 = (uint64_t *)(a3 - 16);
        v29 = v4;
        v52 = v5;
        while (2)
        {
          v50 = (unint64_t)v27;
          v31 = *((_QWORD *)v27 - 2);
          v30 = v27 - 16;
          v32 = *((_QWORD *)v30 + 1);
          v33 = *(v29 - 2);
          v45 = v29 - 2;
          v46 = v30;
          v34 = *(v29 - 1);
          v35 = v31;
          v36 = 0xE700000000000000;
          v37 = 0x656C6369747261;
          switch(v32)
          {
            case 0uLL:
              goto LABEL_120;
            case 1uLL:
              v36 = 0xE500000000000000;
              v38 = 1970500457;
              goto LABEL_113;
            case 2uLL:
              v36 = 0xE800000000000000;
              v37 = 0x6465626D45626577;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 3uLL:
              v36 = 0xEA00000000006B63;
              v37 = 0x6172546F69647561;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 4uLL:
              v36 = 0xE300000000000000;
              v37 = 6775156;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 5uLL:
              v36 = 0xE500000000000000;
              v38 = 1919902579;
LABEL_113:
              v37 = v38 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 6uLL:
              v36 = 0xE800000000000000;
              v37 = 0x676E69646E617473;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 7uLL:
              v37 = 0x74656B63617262;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 8uLL:
              v36 = 0xE800000000000000;
              v37 = 0x65726F6353786F62;
              goto LABEL_120;
            case 9uLL:
              v37 = 0x726F6353656E696CLL;
              v36 = 0xE900000000000065;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 0xAuLL:
              v37 = 0x65527972756A6E69;
              v36 = 0xEC00000074726F70;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 0xBuLL:
              v36 = 0xE900000000000072;
              v37 = 0x6579616C5079656BLL;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 0xCuLL:
              v36 = 0xE600000000000000;
              v37 = 0x656C7A7A7570;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 0xDuLL:
              v37 = 0x7954656C7A7A7570;
              v36 = 0xEA00000000006570;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            case 0xEuLL:
              v37 = 0x7453656C7A7A7570;
              v36 = 0xEF63697473697461;
              if (v34 > 0xE)
                goto LABEL_114;
              goto LABEL_120;
            default:
              v35 = 0x656C6369747261;
              v36 = *((_QWORD *)v30 + 1);
              if (v34 <= 0xE)
              {
LABEL_120:
                v39 = v33;
                v40 = 0xE700000000000000;
                v33 = 0x656C6369747261;
                switch(v34)
                {
                  case 0uLL:
                    break;
                  case 1uLL:
                    v40 = 0xE500000000000000;
                    v33 = 0x6575737369;
                    break;
                  case 2uLL:
                    v40 = 0xE800000000000000;
                    v33 = 0x6465626D45626577;
                    break;
                  case 3uLL:
                    v40 = 0xEA00000000006B63;
                    v33 = 0x6172546F69647561;
                    break;
                  case 4uLL:
                    v40 = 0xE300000000000000;
                    v33 = 6775156;
                    break;
                  case 5uLL:
                    v40 = 0xE500000000000000;
                    v33 = 0x65726F6373;
                    break;
                  case 6uLL:
                    v40 = 0xE800000000000000;
                    v33 = 0x676E69646E617473;
                    break;
                  case 7uLL:
                    v33 = 0x74656B63617262;
                    break;
                  case 8uLL:
                    v40 = 0xE800000000000000;
                    v33 = 0x65726F6353786F62;
                    break;
                  case 9uLL:
                    v33 = 0x726F6353656E696CLL;
                    v40 = 0xE900000000000065;
                    break;
                  case 0xAuLL:
                    v33 = 0x65527972756A6E69;
                    v40 = 0xEC00000074726F70;
                    break;
                  case 0xBuLL:
                    v40 = 0xE900000000000072;
                    v33 = 0x6579616C5079656BLL;
                    break;
                  case 0xCuLL:
                    v40 = 0xE600000000000000;
                    v33 = 0x656C7A7A7570;
                    break;
                  case 0xDuLL:
                    v33 = 0x7954656C7A7A7570;
                    v40 = 0xEA00000000006570;
                    break;
                  case 0xEuLL:
                    v33 = 0x7453656C7A7A7570;
                    v40 = 0xEF63697473697461;
                    break;
                  default:
                    goto LABEL_114;
                }
              }
              else
              {
LABEL_114:
                v39 = v33;
                v40 = v34;
              }
              v48 = v4;
              if (v37 == v33 && v36 == v40)
                v41 = 0;
              else
                v41 = sub_1BB874398();
              v42 = v28 + 2;
              sub_1BA682148(v39, v34);
              sub_1BA682148(v35, v32);
              sub_1BA682148(v35, v32);
              sub_1BA682148(v39, v34);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1BA766C18(v39, v34);
              sub_1BA766C18(v35, v32);
              if ((v41 & 1) != 0)
              {
                v27 = (char *)v50;
                v29 = v45;
                if (v42 != v48 || v28 >= v48)
                  *(_OWORD *)v28 = *(_OWORD *)v45;
                v55 = v45;
              }
              else
              {
                v27 = v46;
                v53 = v46;
                if ((unint64_t)v42 < v50 || (unint64_t)v28 >= v50 || v42 != (uint64_t *)v50)
                  *(_OWORD *)v28 = *(_OWORD *)v46;
                v29 = v48;
              }
              if (v29 <= v52)
                break;
              v28 -= 2;
              v4 = v29;
              if (v27 <= (char *)a4)
                break;
              continue;
          }
          break;
        }
      }
LABEL_153:
      sub_1BACAA47C((void **)&v55, (const void **)&v54, &v53);
      return 1;
    }
  }
  else if (v6 >= -15)
  {
    if (a4 != __src || &__src[2 * v8] <= a4)
      memmove(a4, __src, 16 * v8);
    v47 = (char *)&a4[2 * v8];
    v53 = v47;
    if ((unint64_t)v4 < a3 && v6 >= 16)
    {
      v12 = a4;
      while (2)
      {
        v51 = v5;
        v13 = v4;
        v14 = *v4;
        v15 = v4[1];
        v17 = *v12;
        v16 = v12[1];
        v18 = 0xE700000000000000;
        v19 = 0x656C6369747261;
        switch(v15)
        {
          case 0uLL:
            goto LABEL_42;
          case 1uLL:
            v18 = 0xE500000000000000;
            v20 = 1970500457;
            goto LABEL_34;
          case 2uLL:
            v18 = 0xE800000000000000;
            v19 = 0x6465626D45626577;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 3uLL:
            v18 = 0xEA00000000006B63;
            v19 = 0x6172546F69647561;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 4uLL:
            v18 = 0xE300000000000000;
            v19 = 6775156;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 5uLL:
            v18 = 0xE500000000000000;
            v20 = 1919902579;
LABEL_34:
            v19 = v20 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 6uLL:
            v18 = 0xE800000000000000;
            v19 = 0x676E69646E617473;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 7uLL:
            v19 = 0x74656B63617262;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 8uLL:
            v18 = 0xE800000000000000;
            v19 = 0x65726F6353786F62;
            goto LABEL_42;
          case 9uLL:
            v19 = 0x726F6353656E696CLL;
            v18 = 0xE900000000000065;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 0xAuLL:
            v19 = 0x65527972756A6E69;
            v18 = 0xEC00000074726F70;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 0xBuLL:
            v18 = 0xE900000000000072;
            v19 = 0x6579616C5079656BLL;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 0xCuLL:
            v18 = 0xE600000000000000;
            v19 = 0x656C7A7A7570;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 0xDuLL:
            v19 = 0x7954656C7A7A7570;
            v18 = 0xEA00000000006570;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          case 0xEuLL:
            v19 = 0x7453656C7A7A7570;
            v18 = 0xEF63697473697461;
            if (v16 > 0xE)
              goto LABEL_35;
            goto LABEL_42;
          default:
            v19 = v14;
            v18 = v15;
            if (v16 <= 0xE)
            {
LABEL_42:
              v21 = 0xE700000000000000;
              v22 = 0x656C6369747261;
              switch(v16)
              {
                case 0uLL:
                  goto LABEL_70;
                case 1uLL:
                  v21 = 0xE500000000000000;
                  v23 = 1970500457;
                  goto LABEL_61;
                case 2uLL:
                  v21 = 0xE800000000000000;
                  if (v19 != 0x6465626D45626577)
                    goto LABEL_74;
                  goto LABEL_71;
                case 3uLL:
                  v21 = 0xEA00000000006B63;
                  if (v19 != 0x6172546F69647561)
                    goto LABEL_74;
                  goto LABEL_71;
                case 4uLL:
                  v21 = 0xE300000000000000;
                  if (v19 != 6775156)
                    goto LABEL_74;
                  goto LABEL_71;
                case 5uLL:
                  v21 = 0xE500000000000000;
                  v23 = 1919902579;
LABEL_61:
                  if (v19 != (v23 & 0xFFFF0000FFFFFFFFLL | 0x6500000000))
                    goto LABEL_74;
                  goto LABEL_71;
                case 6uLL:
                  v21 = 0xE800000000000000;
                  if (v19 != 0x676E69646E617473)
                    goto LABEL_74;
                  goto LABEL_71;
                case 7uLL:
                  if (v19 != 0x74656B63617262)
                    goto LABEL_74;
                  goto LABEL_71;
                case 8uLL:
                  v21 = 0xE800000000000000;
                  v22 = 0x65726F6353786F62;
LABEL_70:
                  if (v19 == v22)
                    goto LABEL_71;
                  goto LABEL_74;
                case 9uLL:
                  v21 = 0xE900000000000065;
                  if (v19 != 0x726F6353656E696CLL)
                    goto LABEL_74;
                  goto LABEL_71;
                case 0xAuLL:
                  v21 = 0xEC00000074726F70;
                  if (v19 != 0x65527972756A6E69)
                    goto LABEL_74;
                  goto LABEL_71;
                case 0xBuLL:
                  v21 = 0xE900000000000072;
                  if (v19 != 0x6579616C5079656BLL)
                    goto LABEL_74;
                  goto LABEL_71;
                case 0xCuLL:
                  v21 = 0xE600000000000000;
                  if (v19 != 0x656C7A7A7570)
                    goto LABEL_74;
                  goto LABEL_71;
                case 0xDuLL:
                  v21 = 0xEA00000000006570;
                  if (v19 != 0x7954656C7A7A7570)
                    goto LABEL_74;
                  goto LABEL_71;
                case 0xEuLL:
                  v21 = 0xEF63697473697461;
                  if (v19 != 0x7453656C7A7A7570)
                    goto LABEL_74;
                  goto LABEL_71;
                default:
                  break;
              }
            }
LABEL_35:
            v21 = v12[1];
            if (v19 != v17)
              goto LABEL_74;
LABEL_71:
            if (v18 == v21)
            {
              sub_1BA682148(*v12, v12[1]);
              sub_1BA682148(v14, v15);
              sub_1BA682148(v14, v15);
              sub_1BA682148(v17, v16);
              swift_bridgeObjectRelease_n();
              sub_1BA766C18(v17, v16);
              sub_1BA766C18(v14, v15);
LABEL_79:
              v26 = v51;
              if (v51 != v12)
                *(_OWORD *)v51 = *(_OWORD *)v12;
              v12 += 2;
              v54 = v12;
              v25 = v13;
              goto LABEL_82;
            }
LABEL_74:
            v24 = sub_1BB874398();
            sub_1BA682148(v17, v16);
            sub_1BA682148(v14, v15);
            sub_1BA682148(v14, v15);
            sub_1BA682148(v17, v16);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA766C18(v17, v16);
            sub_1BA766C18(v14, v15);
            if ((v24 & 1) == 0)
              goto LABEL_79;
            v25 = v13 + 2;
            v26 = v51;
            if (v51 < v13 || v51 >= v25 || v51 != v13)
              *(_OWORD *)v51 = *(_OWORD *)v13;
LABEL_82:
            v5 = v26 + 2;
            if (v12 < (uint64_t *)v47)
            {
              v4 = v25;
              if ((unint64_t)v25 < a3)
                continue;
            }
            v55 = v5;
            break;
        }
        break;
      }
    }
    goto LABEL_153;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAE5D7DC(char *__src, char *a2, char *a3, char *__dst)
{
  size_t v8;
  int64_t v9;
  uint64_t result;
  char *v12;
  char *v13;
  char *v14;

  v14 = __src;
  v8 = a2 - __src;
  v9 = a3 - a2;
  v13 = __dst;
  if (a2 - __src >= a3 - a2)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= __dst)
        memmove(__dst, a2, a3 - a2);
      v12 = &__dst[v9];
      v14 = a2;
      if (__src < a2 && a3 != a2)
        __asm { BR              X10 }
      goto LABEL_16;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v12 = &__dst[v8];
    if (a2 != __src && a2 < a3)
      __asm { BR              X10 }
LABEL_16:
    sub_1BACAA674(&v14, &v13, &v12);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAE5DD8C(char *__src, char *a2, char *a3, char *__dst)
{
  size_t v8;
  int64_t v9;
  uint64_t result;
  char *v12;
  char *v13;
  char *v14;

  v14 = __src;
  v8 = a2 - __src;
  v9 = a3 - a2;
  v13 = __dst;
  if (a2 - __src >= a3 - a2)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= __dst)
        memmove(__dst, a2, a3 - a2);
      v12 = &__dst[v9];
      v14 = a2;
      if (__src < a2 && a3 != a2)
        __asm { BR              X10 }
      goto LABEL_16;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v12 = &__dst[v8];
    if (a2 != __src && a2 < a3)
      __asm { BR              X10 }
LABEL_16:
    sub_1BACAA674(&v14, &v13, &v12);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAE5E24C(char *__src, char *a2, char *a3, char *__dst)
{
  size_t v8;
  int64_t v9;
  uint64_t result;
  char *v12;
  char *v13;
  char *v14;

  v13 = __dst;
  v8 = a2 - __src;
  v9 = a3 - a2;
  v14 = __src;
  if (a2 - __src >= a3 - a2)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= __dst)
        memmove(__dst, a2, a3 - a2);
      v12 = &__dst[v9];
      v14 = a2;
      if (__src < a2 && a3 != a2)
        __asm { BR              X10 }
      goto LABEL_16;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v12 = &__dst[v8];
    if (a2 != __src && a2 < a3)
      __asm { BR              X10 }
LABEL_16:
    sub_1BACAA674(&v14, &v13, &v12);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAE5EE94(char *__src, char *a2, char *a3, char *__dst)
{
  size_t v8;
  int64_t v9;
  uint64_t result;
  char *v11;
  char *v12;
  char *v13;

  v12 = __dst;
  v8 = a2 - __src;
  v9 = a3 - a2;
  v13 = __src;
  if (a2 - __src >= a3 - a2)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= __dst)
        memmove(__dst, a2, a3 - a2);
      v11 = &__dst[v9];
      v13 = a2;
      if (__src < a2 && a3 != a2)
        __asm { BR              X10 }
      goto LABEL_16;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v11 = &__dst[v8];
    if (a2 != __src && a2 < a3)
      __asm { BR              X10 }
LABEL_16:
    sub_1BACAA674(&v13, &v12, &v11);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAE5F470(_BYTE *__src, _BYTE *a2, unint64_t a3, _BYTE *__dst)
{
  _BYTE *v4;
  _BYTE *v6;
  _BYTE *v7;
  size_t v8;
  unint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v26;
  _BYTE *v27;
  uint64_t result;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;

  v31 = __src;
  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v30 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) != 0)
      goto LABEL_73;
    if (__dst != a2 || a3 <= (unint64_t)__dst)
      memmove(__dst, a2, a3 - (_QWORD)a2);
    v18 = &v4[v9];
    v29 = &v4[v9];
    v31 = v6;
    if (v7 >= v6 || (_BYTE *)a3 == v6)
    {
LABEL_72:
      sub_1BACAA678((void **)&v31, (const void **)&v30, &v29);
      return 1;
    }
    v19 = (_BYTE *)(a3 - 1);
    while (1)
    {
      v20 = v19 + 1;
      if (*(v18 - 1))
        v21 = 0x73676E69646E6962;
      else
        v21 = 0x736E6F6974706FLL;
      if (*(v18 - 1))
        v22 = 0xE800000000000000;
      else
        v22 = 0xE700000000000000;
      if (*(v6 - 1))
        v23 = 0x73676E69646E6962;
      else
        v23 = 0x736E6F6974706FLL;
      if (*(v6 - 1))
        v24 = 0xE800000000000000;
      else
        v24 = 0xE700000000000000;
      if (v21 == v23 && v22 == v24)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v26 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v26 & 1) != 0)
        {
          v27 = v6 - 1;
          if (v20 != v6 || v19 >= v6)
            *v19 = *v27;
          v31 = v6 - 1;
          if (v27 <= v7)
            goto LABEL_72;
          goto LABEL_71;
        }
      }
      v29 = v18 - 1;
      if (v20 < v18 || v19 >= v18 || v20 != v18)
        *v19 = *(v18 - 1);
      v27 = v6;
      --v18;
      if (v6 <= v7)
        goto LABEL_72;
LABEL_71:
      --v19;
      v6 = v27;
      if (v18 <= v4)
        goto LABEL_72;
    }
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v10 = &v4[v8];
    v29 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        v11 = *v6 ? 0x73676E69646E6962 : 0x736E6F6974706FLL;
        v12 = *v6 ? 0xE800000000000000 : 0xE700000000000000;
        v13 = *v4 ? 0x73676E69646E6962 : 0x736E6F6974706FLL;
        v14 = *v4 ? 0xE800000000000000 : 0xE700000000000000;
        if (v11 == v13 && v12 == v14)
          break;
        v16 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0)
          goto LABEL_30;
        v17 = v6 + 1;
        if (v7 < v6 || v7 >= v17 || v7 != v6)
          *v7 = *v6;
LABEL_33:
        ++v7;
        if (v4 < v10)
        {
          v6 = v17;
          if ((unint64_t)v17 < a3)
            continue;
        }
        v31 = v7;
        goto LABEL_72;
      }
      swift_bridgeObjectRelease_n();
LABEL_30:
      if (v7 != v4)
        *v7 = *v4;
      v30 = ++v4;
      v17 = v6;
      goto LABEL_33;
    }
    goto LABEL_72;
  }
LABEL_73:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAE5F7AC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  _QWORD *v37;
  char v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;

  v44 = type metadata accessor for FormatRegex();
  MEMORY[0x1E0C80A78](v44);
  v46 = (unint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v45 = (uint64_t *)((char *)&v43 - v10);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v43 - v12);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v43 - v16);
  v18 = *(_QWORD *)(v15 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v19 = *(_QWORD *)(v15 + 72);
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_72;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_73;
  v21 = (uint64_t)(a2 - a1) / v18;
  v49 = a1;
  v48 = a4;
  v22 = v20 / v18;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v31 = a4 + v24;
      v47 = a4 + v24;
      v49 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v33 = -v19;
        do
        {
          v34 = a1;
          v35 = v45;
          sub_1BA4C2DD8(v31 + v33, (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          v36 = a2 + v33;
          v37 = (_QWORD *)v46;
          sub_1BA4C2DD8(a2 + v33, v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          if (*v35 == *v37 && v35[1] == v37[1])
            v39 = 0;
          else
            v39 = sub_1BB874398();
          v40 = a3 + v33;
          sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          sub_1BA4A2E80((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
          if ((v39 & 1) != 0)
          {
            if (a3 < a2 || v40 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v34;
            }
            else
            {
              a1 = v34;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v49 += v33;
          }
          else
          {
            v41 = v47;
            v47 += v33;
            if (a3 < v41 || v40 >= v41)
            {
              swift_arrayInitWithTakeFrontToBack();
              v36 = a2;
              a1 = v34;
            }
            else
            {
              a1 = v34;
              if (a3 != v41)
                swift_arrayInitWithTakeBackToFront();
              v36 = a2;
            }
          }
          v31 = v47;
          if (v47 <= a4)
            break;
          a2 = v36;
          a3 += v33;
        }
        while (v36 > a1);
      }
LABEL_70:
      sub_1BACAA708(&v49, &v48, (uint64_t *)&v47);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v46 = a4 + v23;
    v47 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_1BA4C2DD8(a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
        sub_1BA4C2DD8(a4, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
        if (*v17 == *v13 && v17[1] == v13[1])
          break;
        v27 = sub_1BB874398();
        sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
        sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
        if ((v27 & 1) == 0)
          goto LABEL_32;
        v28 = v49;
        v29 = a2 + v19;
        if (v49 < a2 || v49 >= v29)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v49 == a2)
        {
          v28 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        v49 = v28 + v19;
        a4 = v48;
        if (v48 < v46)
        {
          a2 = v29;
          if (v29 < a3)
            continue;
        }
        goto LABEL_70;
      }
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatRegex);
LABEL_32:
      v28 = v49;
      v30 = v48 + v19;
      if (v49 < v48 || v49 >= v30)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v49 != v48)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v48 = v30;
      v29 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAE5FCD0(char *__src, char *a2, char *a3, char *__dst)
{
  size_t v8;
  int64_t v9;
  uint64_t result;
  char *v12;
  char *v13;
  char *v14;

  v14 = __src;
  v8 = a2 - __src;
  v9 = a3 - a2;
  v13 = __dst;
  if (a2 - __src >= a3 - a2)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= __dst)
        memmove(__dst, a2, a3 - a2);
      v12 = &__dst[v9];
      v14 = a2;
      if (__src < a2 && a3 != a2)
        __asm { BR              X10 }
      goto LABEL_16;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v12 = &__dst[v8];
    if (a2 != __src && a2 < a3)
      __asm { BR              X10 }
LABEL_16:
    sub_1BACAA674(&v14, &v13, &v12);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAE60350(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;

  v9 = *a2;
  v10 = a2[1];
  v11 = *((unsigned __int8 *)a2 + 16);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3A3250, (uint64_t (*)(uint64_t))sub_1BAEE45D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 56) = a3(0);
  *(_QWORD *)(inited + 64) = sub_1BA4A2870(a4, a3, (uint64_t)&unk_1BB8FFC6C);
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v10;
  *(_BYTE *)(inited + 48) = v11;
  a5(v9, v10, v11);
  swift_bridgeObjectRetain();
  sub_1BA6ECFFC(inited);
  return a1;
}

uint64_t sub_1BAE6045C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t inited;

  v3 = *a2;
  v4 = a2[1];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3A3250, (uint64_t (*)(uint64_t))sub_1BAEE45D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 56) = &type metadata for FormatCodingKeys;
  *(_QWORD *)(inited + 64) = sub_1BA6B8518();
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v4;
  sub_1BA6EE1A4(v3, v4);
  swift_bridgeObjectRetain();
  sub_1BA6ECFFC(inited);
  return a1;
}

uint64_t sub_1BAE60530(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;

  v2 = a2();
  if (!v4)
    return 0x6C727520726176;
  v7 = v2;
  sub_1BB872AFC(v3);
  sub_1BB872AFC(v5);
  return v7;
}

uint64_t sub_1BAE605A0(uint64_t a1)
{
  uint64_t inited;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3A3250, (uint64_t (*)(uint64_t))sub_1BAEE45D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 56) = &type metadata for FormatPostPurchase.LegacyCodingKeys;
  *(_QWORD *)(inited + 64) = sub_1BAEE4CC0();
  swift_bridgeObjectRetain();
  sub_1BA6ECFFC(inited);
  return a1;
}

uint64_t sub_1BAE60660(uint64_t a1, char *a2, uint64_t a3, uint64_t (*a4)(void))
{
  char v7;
  uint64_t inited;

  v7 = *a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3A3250, (uint64_t (*)(uint64_t))sub_1BAEE45D8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 56) = a3;
  *(_QWORD *)(inited + 64) = a4();
  *(_BYTE *)(inited + 32) = v7;
  swift_bridgeObjectRetain();
  sub_1BA6ECFFC(inited);
  return a1;
}

uint64_t _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  BOOL v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD v80[12];
  __int16 v81;
  __int128 v82[12];
  __int16 v83;
  __int128 v84[12];
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[25];
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD v114[5];
  char v115;
  _QWORD v116[16];
  _QWORD v117[16];
  _BYTE v118[128];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
  {
    v8 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    if (v8 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
    {
      swift_beginAccess();
      v9 = *(_QWORD *)(a1 + 48);
      swift_beginAccess();
      v10 = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_1BA892A18(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        goto LABEL_25;
      v12 = *(_QWORD *)(a1 + 56);
      v13 = *(_QWORD *)(a2 + 56);
      if ((~v12 & 0xF000000000000007) != 0)
      {
        v98 = *(_QWORD *)(a1 + 56);
        if ((~v13 & 0xF000000000000007) != 0)
        {
          *(_QWORD *)&v88 = v13;
          swift_retain_n();
          static FormatFont.== infix(_:_:)((uint64_t)&v98);
          v15 = v14;
          swift_release();
          sub_1BA6E6CD8(v12);
          if ((v15 & 1) == 0)
            goto LABEL_25;
LABEL_19:
          sub_1BA6A09F0(a1 + 64, (uint64_t)v116, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
          sub_1BA6A09F0(a2 + 64, (uint64_t)v117, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
          sub_1BA6A09F0((uint64_t)v116, (uint64_t)v118, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
          if (sub_1BAB05F98((uint64_t)v118) == 1)
          {
            sub_1BA6A09F0((uint64_t)v117, (uint64_t)&v98, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
            if (sub_1BAB05F98((uint64_t)&v98) == 1)
              goto LABEL_28;
          }
          else
          {
            sub_1BA6A09F0((uint64_t)v116, (uint64_t)&v88, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
            sub_1BA6A09F0((uint64_t)v117, (uint64_t)&v98, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
            if (sub_1BAB05F98((uint64_t)&v98) != 1)
            {
              sub_1BA6A09F0((uint64_t)v117, (uint64_t)v84, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
              sub_1BA7439D4(v84, (uint64_t)v82);
              sub_1BA6A09F0((uint64_t)v116, (uint64_t)&v85, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
              sub_1BA6A0C50(v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
              sub_1BA6A0C50(&v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
              _s8NewsFeed10FormatFillO2eeoiySbAC_ACtFZ_0(&v88, v82);
              v18 = v17;
              sub_1BA7439D4(&v88, (uint64_t)v87);
              sub_1BA6A0C50(v87, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
              sub_1BA6A0C50(v116, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
              if ((v18 & 1) == 0)
                goto LABEL_25;
LABEL_28:
              v7 = *(_QWORD *)(a2 + 192);
              if (*(_QWORD *)(a1 + 192))
              {
                if (!v7)
                  return v7 & 1;
                swift_bridgeObjectRetain();
                v19 = swift_bridgeObjectRetain();
                v20 = sub_1BA882894(v19, v7);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (!v20)
                  goto LABEL_25;
              }
              else if (v7)
              {
                goto LABEL_25;
              }
              v22 = *(_QWORD *)(a1 + 200);
              v21 = *(_QWORD *)(a1 + 208);
              v24 = *(_QWORD *)(a1 + 216);
              v23 = *(_QWORD *)(a1 + 224);
              v25 = *(_QWORD *)(a1 + 232);
              v26 = *(_QWORD *)(a1 + 240);
              v28 = *(_QWORD *)(a1 + 248);
              v27 = *(_QWORD *)(a1 + 256);
              v29 = *(_QWORD *)(a1 + 264);
              v30 = *(_QWORD *)(a1 + 272);
              v31 = *(unsigned __int8 *)(a1 + 280);
              v32 = *(_QWORD *)(a2 + 200);
              v33 = *(_QWORD *)(a2 + 208);
              v35 = *(_QWORD *)(a2 + 216);
              v34 = *(_QWORD *)(a2 + 224);
              v36 = *(_QWORD *)(a2 + 232);
              v37 = *(_QWORD *)(a2 + 240);
              v38 = *(_QWORD *)(a2 + 248);
              v39 = *(_QWORD *)(a2 + 256);
              v40 = *(_QWORD *)(a2 + 264);
              v41 = *(_QWORD *)(a2 + 272);
              v42 = *(unsigned __int8 *)(a2 + 280);
              if (v31 == 254)
              {
                if (v42 == 254)
                {
LABEL_40:
                  v52 = *(_QWORD *)(a1 + 288);
                  v53 = *(_QWORD *)(a2 + 288);
                  if (v52)
                  {
                    if (!v53 || !sub_1BA882868(v52, v53))
                      goto LABEL_25;
                  }
                  else if (v53)
                  {
                    goto LABEL_25;
                  }
                  sub_1BA6A09F0(a1 + 296, (uint64_t)v87, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
                  sub_1BA6A09F0(a2 + 296, (uint64_t)&v88, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
                  sub_1BA6A09F0((uint64_t)v87, (uint64_t)&v98, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
                  if (sub_1BA92287C((uint64_t)&v98) == 1)
                  {
                    sub_1BA6A09F0((uint64_t)&v88, (uint64_t)&v85, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
                    if (sub_1BA92287C((uint64_t)&v85) != 1)
                      goto LABEL_25;
                  }
                  else
                  {
                    sub_1BA6A09F0((uint64_t)v87, (uint64_t)v84, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
                    sub_1BA6A09F0((uint64_t)&v88, (uint64_t)&v85, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
                    if (sub_1BA92287C((uint64_t)&v85) == 1)
                      goto LABEL_25;
                    sub_1BA6A09F0((uint64_t)&v88, (uint64_t)v82, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
                    v80[10] = v82[10];
                    v80[11] = v82[11];
                    v81 = v83;
                    v80[6] = v82[6];
                    v80[7] = v82[7];
                    v80[8] = v82[8];
                    v80[9] = v82[9];
                    v80[2] = v82[2];
                    v80[3] = v82[3];
                    v80[4] = v82[4];
                    v80[5] = v82[5];
                    v80[0] = v82[0];
                    v80[1] = v82[1];
                    if ((_s8NewsFeed20FormatParagraphStyleV2eeoiySbAC_ACtFZ_0((double *)v84, (double *)v80) & 1) == 0)
                      goto LABEL_25;
                  }
                  if ((*(_BYTE *)(a1 + 504) & 1) != 0)
                  {
                    if ((*(_BYTE *)(a2 + 504) & 1) == 0)
                      goto LABEL_25;
                  }
                  else if ((*(_BYTE *)(a2 + 504) & 1) != 0 || *(double *)(a1 + 496) != *(double *)(a2 + 496))
                  {
                    goto LABEL_25;
                  }
                  v54 = *(_QWORD *)(a1 + 512);
                  v55 = *(_QWORD *)(a2 + 512);
                  if (v54)
                  {
                    if (!v55)
                      goto LABEL_25;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v56 = sub_1BA881EAC(v54, v55);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v56 & 1) == 0)
                      goto LABEL_25;
                  }
                  else if (v55)
                  {
                    goto LABEL_25;
                  }
                  v57 = *(_QWORD *)(a1 + 520);
                  v58 = *(_QWORD *)(a1 + 528);
                  v59 = *(_QWORD *)(a2 + 520);
                  v60 = *(_QWORD *)(a2 + 528);
                  if (v57 == 9)
                  {
                    if (*(_QWORD *)(a2 + 520) != 9)
                      goto LABEL_70;
                    goto LABEL_65;
                  }
                  v85 = *(_QWORD *)(a1 + 520);
                  v86 = v58;
                  if (v59 == 9)
                    goto LABEL_69;
                  LOBYTE(v84[0]) = v59;
                  *((_QWORD *)&v84[0] + 1) = v60;
                  sub_1BA6E8A60(v57, v58);
                  sub_1BA5E7FF4(v58);
                  v61 = _s8NewsFeed15FormatUnderlineV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v85, (unsigned __int8 *)v84);
                  sub_1BA5E800C(v86);
                  sub_1BA6E8A90(v57, v58);
                  if (v61)
                  {
LABEL_65:
                    v57 = *(_QWORD *)(a1 + 536);
                    v58 = *(_QWORD *)(a1 + 544);
                    v59 = *(_QWORD *)(a2 + 536);
                    v60 = *(_QWORD *)(a2 + 544);
                    if (v57 == 9)
                    {
                      if (*(_QWORD *)(a2 + 536) == 9)
                        goto LABEL_72;
LABEL_70:
                      sub_1BA6E8A60(v59, v60);
                      sub_1BA6E8A90(v57, v58);
                      sub_1BA6E8A90(v59, v60);
                      goto LABEL_25;
                    }
                    v85 = *(_QWORD *)(a1 + 536);
                    v86 = v58;
                    if (v59 != 9)
                    {
                      LOBYTE(v84[0]) = v59;
                      *((_QWORD *)&v84[0] + 1) = v60;
                      sub_1BA6E8A60(v57, v58);
                      sub_1BA5E7FF4(v58);
                      v62 = _s8NewsFeed15FormatUnderlineV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v85, (unsigned __int8 *)v84);
                      sub_1BA5E800C(v86);
                      sub_1BA6E8A90(v57, v58);
                      if (!v62)
                        goto LABEL_25;
LABEL_72:
                      v63 = *(unsigned __int8 *)(a1 + 552);
                      v64 = *(unsigned __int8 *)(a2 + 552);
                      if (v63 == 2)
                      {
                        if (v64 != 2)
                          goto LABEL_25;
                      }
                      else if (v64 == 2 || ((((v63 & 1) == 0) ^ v64) & 1) == 0)
                      {
                        goto LABEL_25;
                      }
                      v65 = *(_QWORD *)(a1 + 560);
                      v66 = *(_QWORD *)(a2 + 560);
                      if (v65)
                      {
                        if (v66)
                        {
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                          LOBYTE(v7) = sub_1BA881EAC(v65, v66);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          return v7 & 1;
                        }
                      }
                      else if (!v66)
                      {
                        LOBYTE(v7) = 1;
                        return v7 & 1;
                      }
                      goto LABEL_25;
                    }
LABEL_69:
                    sub_1BA5E7FF4(v58);
                    sub_1BA5E7FF4(v58);
                    sub_1BA5E800C(v58);
                    goto LABEL_70;
                  }
LABEL_25:
                  LOBYTE(v7) = 0;
                  return v7 & 1;
                }
              }
              else
              {
                v98 = *(_QWORD *)(a1 + 200);
                v99 = v21;
                v100 = v24;
                v101 = v23;
                v102 = v25;
                v103 = v26;
                v104 = v28;
                v105 = v27;
                v106 = v29;
                v107 = v30;
                v108 = v31;
                v78 = v29;
                v79 = v22;
                v77 = v30;
                if (v42 != 254)
                {
                  *(_QWORD *)&v88 = v32;
                  DWORD2(v88) = v33;
                  v89 = v35;
                  v90 = v34;
                  v91 = v36;
                  v92 = v37;
                  v93 = v38;
                  v94 = v39;
                  v95 = v40;
                  v96 = v41;
                  v97 = v42;
                  v45 = v21;
                  v46 = v24;
                  v47 = v23;
                  v48 = v25;
                  v49 = v26;
                  v50 = v28;
                  v51 = v27;
                  sub_1BA6E8A48(v22, v21, v24, v23, v25, v26, v28, v27, v29, v30, v31);
                  swift_retain();
                  v76 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v98, (uint64_t)&v88);
                  swift_release();
                  sub_1BA6E8A78(v79, v45, v46, v47, v48, v49, v50, v51, v78, v77, v31);
                  if ((v76 & 1) == 0)
                    goto LABEL_25;
                  goto LABEL_40;
                }
                v74 = v27;
                v75 = v25;
                v43 = v28;
                v44 = v26;
                v72 = v24;
                v73 = v23;
                v70 = v39;
                v71 = v21;
                v68 = v37;
                v69 = v38;
                v67 = v36;
                swift_retain();
                v36 = v67;
                v37 = v68;
                v38 = v69;
                v39 = v70;
                v30 = v77;
                v29 = v78;
                v22 = v79;
                v21 = v71;
                v24 = v72;
                v23 = v73;
                v27 = v74;
                v26 = v44;
                v25 = v75;
                v28 = v43;
              }
              v98 = v22;
              v99 = v21;
              v100 = v24;
              v101 = v23;
              v102 = v25;
              v103 = v26;
              v104 = v28;
              v105 = v27;
              v106 = v29;
              v107 = v30;
              v108 = v31;
              v109 = v32;
              v110 = v33;
              v111 = v35;
              v112 = v34;
              v113 = v36;
              v114[0] = v37;
              v114[1] = v38;
              v114[2] = v39;
              v114[3] = v40;
              v114[4] = v41;
              v115 = v42;
              sub_1BA6E8A48(v32, v33, v35, v34, v36, v37, v38, v39, v40, v41, v42);
              sub_1BA9F10E8((uint64_t)&v98);
              goto LABEL_25;
            }
            sub_1BA7439D4(&v88, (uint64_t)&v85);
            sub_1BA6A09F0((uint64_t)v116, (uint64_t)v87, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
            sub_1BA6A0C50(v87, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
            sub_1BA6A0C50(v87, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
            sub_1BA6A0C50(&v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
          }
          sub_1BA6A09F0((uint64_t)v116, (uint64_t)&v98, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
          sub_1BA6A09F0((uint64_t)v117, (uint64_t)v114, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
          sub_1BA6A0C50(v117, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
          sub_1BAEFAA88((uint64_t)&v98);
          goto LABEL_25;
        }
        swift_retain();
      }
      else if ((~v13 & 0xF000000000000007) == 0)
      {
        goto LABEL_19;
      }
      sub_1BA6E6C68(v13);
      sub_1BA6E6CD8(v12);
      sub_1BA6E6CD8(v13);
      goto LABEL_25;
    }
  }
  return v7 & 1;
}

BOOL _s8NewsFeed024FormatAnimationNodeBasicD0C2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  __int128 v5;
  char v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  char v16;
  char v18;
  _OWORD v19[7];
  _OWORD v20[2];
  _OWORD v21[7];
  _OWORD v22[2];
  _OWORD v23[7];
  _OWORD v24[2];
  _OWORD v25[7];
  _OWORD v26[2];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[3];
  char v36;
  uint64_t v37;
  _BYTE v38[144];
  _BYTE v39[144];
  _OWORD v40[3];
  char v41;

  v4 = *(_BYTE *)(a1 + 64);
  v5 = *(_OWORD *)(a1 + 32);
  v35[0] = *(_OWORD *)(a1 + 16);
  v35[1] = v5;
  v35[2] = *(_OWORD *)(a1 + 48);
  v36 = v4;
  v6 = *(_BYTE *)(a2 + 64);
  v7 = *(_OWORD *)(a2 + 32);
  v40[0] = *(_OWORD *)(a2 + 16);
  v40[1] = v7;
  v40[2] = *(_OWORD *)(a2 + 48);
  v41 = v6;
  _s8NewsFeed26FormatAnimationNodeKeyPathO2eeoiySbAC_ACtFZ_0((uint64_t)v35);
  if ((v8 & 1) == 0)
    return 0;
  v10 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v11 = *(unsigned __int8 *)(a1 + 88);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(unsigned __int8 *)(a2 + 88);
  if (v11 == 255)
  {
    if (v14 != 255)
      goto LABEL_25;
    goto LABEL_15;
  }
  if (v14 == 255)
    goto LABEL_25;
  if ((v11 & 1) == 0)
  {
    if ((v14 & 1) != 0)
    {
LABEL_23:
      sub_1BA69C808(v12, v13, v14 & 1);
      sub_1BA69C828(v10, v9, v11 & 1);
      sub_1BA69C828(v12, v13, v14 & 1);
      return 0;
    }
    sub_1BA69C828(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), 0);
    sub_1BA69C828(v12, v13, 0);
    v15 = 0;
    if (((((v10 & 1) == 0) ^ v12) & 1) == 0)
      return v15;
    goto LABEL_15;
  }
  if ((v14 & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  if (v10 == v12 && v9 == v13)
  {
    sub_1BA796C58(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a2 + 88));
    sub_1BA796C58(v10, v9, v11);
    sub_1BA69C828(v10, v9, 1);
    sub_1BA69C828(v10, v9, 1);
    goto LABEL_15;
  }
  v16 = sub_1BB874398();
  sub_1BA796C58(v12, v13, v14);
  sub_1BA796C58(v10, v9, v11);
  sub_1BA69C828(v10, v9, 1);
  sub_1BA69C828(v12, v13, 1);
  v15 = 0;
  if ((v16 & 1) != 0)
  {
LABEL_15:
    v10 = *(_QWORD *)(a1 + 96);
    v9 = *(_QWORD *)(a1 + 104);
    v11 = *(unsigned __int8 *)(a1 + 112);
    v12 = *(_QWORD *)(a2 + 96);
    v13 = *(_QWORD *)(a2 + 104);
    v14 = *(unsigned __int8 *)(a2 + 112);
    if (v11 == 255)
    {
      if (v14 == 255)
      {
LABEL_32:
        sub_1BA6A09F0(a1 + 120, (uint64_t)v38, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
        sub_1BA6A09F0(a2 + 120, (uint64_t)v39, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
        sub_1BA6A09F0((uint64_t)v38, (uint64_t)v40, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
        if (sub_1BA896370((uint64_t *)v40) == 1)
        {
          sub_1BA6A09F0((uint64_t)v39, (uint64_t)v35, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          if (sub_1BA896370((uint64_t *)v35) == 1)
            return 1;
        }
        else
        {
          sub_1BA6A09F0((uint64_t)v38, (uint64_t)&v27, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          sub_1BA6A09F0((uint64_t)v39, (uint64_t)v35, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          if (sub_1BA896370((uint64_t *)v35) != 1)
          {
            sub_1BA6A09F0((uint64_t)v39, (uint64_t)v21, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
            v19[6] = v21[6];
            v20[0] = v22[0];
            *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v22 + 9);
            v19[2] = v21[2];
            v19[3] = v21[3];
            v19[4] = v21[4];
            v19[5] = v21[5];
            v19[0] = v21[0];
            v19[1] = v21[1];
            sub_1BA6A09F0((uint64_t)v38, (uint64_t)v23, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
            sub_1BA8966F8((uint64_t)v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
            sub_1BA89652C((uint64_t)v23);
            v15 = _s8NewsFeed17FormatMediaTimingV2eeoiySbAC_ACtFZ_0((uint64_t)&v27, (uint64_t)v19);
            v25[6] = v33;
            v26[0] = v34[0];
            *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)v34 + 9);
            v25[2] = v29;
            v25[3] = v30;
            v25[4] = v31;
            v25[5] = v32;
            v25[0] = v27;
            v25[1] = v28;
            sub_1BA896610((uint64_t)v25);
            sub_1BA8966F8((uint64_t)v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
            return v15;
          }
          v23[6] = v33;
          v24[0] = v34[0];
          *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)((char *)v34 + 9);
          v23[2] = v29;
          v23[3] = v30;
          v23[4] = v31;
          v23[5] = v32;
          v23[0] = v27;
          v23[1] = v28;
          sub_1BA6A09F0((uint64_t)v38, (uint64_t)v25, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          sub_1BA89652C((uint64_t)v25);
          sub_1BA89652C((uint64_t)v25);
          sub_1BA896610((uint64_t)v23);
        }
        sub_1BA6A09F0((uint64_t)v38, (uint64_t)v35, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
        sub_1BA6A09F0((uint64_t)v39, (uint64_t)&v37, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
        sub_1BA8966F8((uint64_t)v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
        sub_1BA8963E0((uint64_t)v35);
        return 0;
      }
    }
    else if (v14 != 255)
    {
      if ((v11 & 1) == 0)
      {
        if ((v14 & 1) == 0)
        {
          sub_1BA69C828(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), 0);
          sub_1BA69C828(v12, v13, 0);
          v15 = 0;
          if (((((v10 & 1) == 0) ^ v12) & 1) == 0)
            return v15;
          goto LABEL_32;
        }
        goto LABEL_23;
      }
      if ((v14 & 1) != 0)
      {
        if (v10 == v12 && v9 == v13)
        {
          sub_1BA796C58(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a2 + 112));
          sub_1BA796C58(v10, v9, v11);
          sub_1BA69C828(v10, v9, 1);
          sub_1BA69C828(v10, v9, 1);
        }
        else
        {
          v18 = sub_1BB874398();
          sub_1BA796C58(v12, v13, v14);
          sub_1BA796C58(v10, v9, v11);
          sub_1BA69C828(v10, v9, 1);
          sub_1BA69C828(v12, v13, 1);
          v15 = 0;
          if ((v18 & 1) == 0)
            return v15;
        }
        goto LABEL_32;
      }
      goto LABEL_22;
    }
LABEL_25:
    sub_1BA796C58(v12, v13, v14);
    sub_1BA796C58(v10, v9, v11);
    sub_1BA796C70(v10, v9, v11);
    sub_1BA796C70(v12, v13, v14);
    return 0;
  }
  return v15;
}

uint64_t _s8NewsFeed025FormatAnimationNodeSpringD0C2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  __int128 v5;
  char v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  _OWORD v26[7];
  _OWORD v27[2];
  _OWORD v28[7];
  _OWORD v29[2];
  _OWORD v30[7];
  _OWORD v31[2];
  _OWORD v32[7];
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[2];
  _OWORD v42[3];
  char v43;
  uint64_t v44;
  _BYTE v45[144];
  _BYTE v46[144];
  _OWORD v47[3];
  char v48;

  v4 = *(_BYTE *)(a1 + 64);
  v5 = *(_OWORD *)(a1 + 32);
  v42[0] = *(_OWORD *)(a1 + 16);
  v42[1] = v5;
  v42[2] = *(_OWORD *)(a1 + 48);
  v43 = v4;
  v6 = *(_BYTE *)(a2 + 64);
  v7 = *(_OWORD *)(a2 + 32);
  v47[0] = *(_OWORD *)(a2 + 16);
  v47[1] = v7;
  v47[2] = *(_OWORD *)(a2 + 48);
  v48 = v6;
  _s8NewsFeed26FormatAnimationNodeKeyPathO2eeoiySbAC_ACtFZ_0((uint64_t)v42);
  if ((v8 & 1) == 0)
    goto LABEL_26;
  v10 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v11 = *(unsigned __int8 *)(a1 + 88);
  v12 = *(_QWORD *)(a2 + 72);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(unsigned __int8 *)(a2 + 88);
  if (v11 == 255)
  {
    if (v14 != 255)
      goto LABEL_25;
    goto LABEL_15;
  }
  if (v14 == 255)
    goto LABEL_25;
  if ((v11 & 1) == 0)
  {
    if ((v14 & 1) != 0)
      goto LABEL_23;
    sub_1BA69C828(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), 0);
    sub_1BA69C828(v12, v13, 0);
    LOBYTE(v9) = 0;
    if (((((v10 & 1) == 0) ^ v12) & 1) == 0)
      return v9 & 1;
    goto LABEL_15;
  }
  if ((v14 & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  if (v10 == v12 && v9 == v13)
  {
    sub_1BA796C58(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a2 + 88));
    sub_1BA796C58(v10, v9, v11);
    sub_1BA69C828(v10, v9, 1);
    sub_1BA69C828(v10, v9, 1);
    goto LABEL_15;
  }
  v15 = sub_1BB874398();
  sub_1BA796C58(v12, v13, v14);
  sub_1BA796C58(v10, v9, v11);
  sub_1BA69C828(v10, v9, 1);
  sub_1BA69C828(v12, v13, 1);
  LOBYTE(v9) = 0;
  if ((v15 & 1) != 0)
  {
LABEL_15:
    v10 = *(_QWORD *)(a1 + 96);
    v9 = *(_QWORD *)(a1 + 104);
    v11 = *(unsigned __int8 *)(a1 + 112);
    v12 = *(_QWORD *)(a2 + 96);
    v13 = *(_QWORD *)(a2 + 104);
    v14 = *(unsigned __int8 *)(a2 + 112);
    if (v11 == 255)
    {
      if (v14 == 255)
      {
LABEL_32:
        v18 = *(_QWORD *)(a1 + 120);
        v9 = *(_QWORD *)(a2 + 120);
        if (v18)
        {
          if (!v9)
            return v9 & 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v19 = sub_1BA881EAC(v18, v9);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0)
            goto LABEL_26;
        }
        else if (v9)
        {
          goto LABEL_26;
        }
        v20 = *(_QWORD *)(a1 + 128);
        v9 = *(_QWORD *)(a2 + 128);
        if (v20)
        {
          if (!v9)
            return v9 & 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v21 = sub_1BA881EAC(v20, v9);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0)
            goto LABEL_26;
        }
        else if (v9)
        {
          goto LABEL_26;
        }
        v22 = *(_QWORD *)(a1 + 136);
        v9 = *(_QWORD *)(a2 + 136);
        if (v22)
        {
          if (!v9)
            return v9 & 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v23 = sub_1BA881EAC(v22, v9);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v23 & 1) == 0)
            goto LABEL_26;
        }
        else if (v9)
        {
          goto LABEL_26;
        }
        v24 = *(_QWORD *)(a1 + 144);
        v9 = *(_QWORD *)(a2 + 144);
        if (v24)
        {
          if (!v9)
            return v9 & 1;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v25 = sub_1BA881EAC(v24, v9);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v25 & 1) == 0)
            goto LABEL_26;
          goto LABEL_52;
        }
        if (!v9)
        {
LABEL_52:
          sub_1BA6A09F0(a1 + 152, (uint64_t)v45, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          sub_1BA6A09F0(a2 + 152, (uint64_t)v46, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          sub_1BA6A09F0((uint64_t)v45, (uint64_t)v47, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          if (sub_1BA896370((uint64_t *)v47) == 1)
          {
            sub_1BA6A09F0((uint64_t)v46, (uint64_t)v42, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
            if (sub_1BA896370((uint64_t *)v42) == 1)
            {
              LOBYTE(v9) = 1;
              return v9 & 1;
            }
          }
          else
          {
            sub_1BA6A09F0((uint64_t)v45, (uint64_t)&v34, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
            sub_1BA6A09F0((uint64_t)v46, (uint64_t)v42, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
            if (sub_1BA896370((uint64_t *)v42) != 1)
            {
              sub_1BA6A09F0((uint64_t)v46, (uint64_t)v28, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
              v26[6] = v28[6];
              v27[0] = v29[0];
              *(_OWORD *)((char *)v27 + 9) = *(_OWORD *)((char *)v29 + 9);
              v26[2] = v28[2];
              v26[3] = v28[3];
              v26[4] = v28[4];
              v26[5] = v28[5];
              v26[0] = v28[0];
              v26[1] = v28[1];
              sub_1BA6A09F0((uint64_t)v45, (uint64_t)v30, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
              sub_1BA8966F8((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
              sub_1BA89652C((uint64_t)v30);
              LOBYTE(v9) = _s8NewsFeed17FormatMediaTimingV2eeoiySbAC_ACtFZ_0((uint64_t)&v34, (uint64_t)v26);
              v32[6] = v40;
              v33[0] = v41[0];
              *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)v41 + 9);
              v32[2] = v36;
              v32[3] = v37;
              v32[4] = v38;
              v32[5] = v39;
              v32[0] = v34;
              v32[1] = v35;
              sub_1BA896610((uint64_t)v32);
              sub_1BA8966F8((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
              return v9 & 1;
            }
            v30[6] = v40;
            v31[0] = v41[0];
            *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)v41 + 9);
            v30[2] = v36;
            v30[3] = v37;
            v30[4] = v38;
            v30[5] = v39;
            v30[0] = v34;
            v30[1] = v35;
            sub_1BA6A09F0((uint64_t)v45, (uint64_t)v32, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
            sub_1BA89652C((uint64_t)v32);
            sub_1BA89652C((uint64_t)v32);
            sub_1BA896610((uint64_t)v30);
          }
          sub_1BA6A09F0((uint64_t)v45, (uint64_t)v42, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          sub_1BA6A09F0((uint64_t)v46, (uint64_t)&v44, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          sub_1BA8966F8((uint64_t)v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
          sub_1BA8963E0((uint64_t)v42);
        }
LABEL_26:
        LOBYTE(v9) = 0;
        return v9 & 1;
      }
    }
    else if (v14 != 255)
    {
      if ((v11 & 1) != 0)
      {
        if ((v14 & 1) != 0)
        {
          if (v10 == v12 && v9 == v13)
          {
            sub_1BA796C58(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a2 + 112));
            sub_1BA796C58(v10, v9, v11);
            sub_1BA69C828(v10, v9, 1);
            sub_1BA69C828(v10, v9, 1);
          }
          else
          {
            v17 = sub_1BB874398();
            sub_1BA796C58(v12, v13, v14);
            sub_1BA796C58(v10, v9, v11);
            sub_1BA69C828(v10, v9, 1);
            sub_1BA69C828(v12, v13, 1);
            LOBYTE(v9) = 0;
            if ((v17 & 1) == 0)
              return v9 & 1;
          }
          goto LABEL_32;
        }
        goto LABEL_22;
      }
      if ((v14 & 1) == 0)
      {
        sub_1BA69C828(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), 0);
        sub_1BA69C828(v12, v13, 0);
        LOBYTE(v9) = 0;
        if (((((v10 & 1) == 0) ^ v12) & 1) == 0)
          return v9 & 1;
        goto LABEL_32;
      }
LABEL_23:
      sub_1BA69C808(v12, v13, v14 & 1);
      sub_1BA69C828(v10, v9, v11 & 1);
      sub_1BA69C828(v12, v13, v14 & 1);
      goto LABEL_26;
    }
LABEL_25:
    sub_1BA796C58(v12, v13, v14);
    sub_1BA796C58(v10, v9, v11);
    sub_1BA796C70(v10, v9, v11);
    sub_1BA796C70(v12, v13, v14);
    goto LABEL_26;
  }
  return v9 & 1;
}

BOOL _s8NewsFeed024FormatAnimationNodeGroupD0C2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  _OWORD v6[7];
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v15[2];
  _BYTE v16[10];
  _OWORD v17[7];
  _OWORD v18[2];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];
  uint64_t v27[18];
  uint64_t v28;
  _BYTE v29[144];
  _BYTE v30[144];
  uint64_t v31[18];

  if ((sub_1BA8835AC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) == 0)
    return 0;
  sub_1BA6A09F0(a1 + 24, (uint64_t)v29, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  sub_1BA6A09F0(a2 + 24, (uint64_t)v30, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  sub_1BA6A09F0((uint64_t)v29, (uint64_t)v31, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  if (sub_1BA896370(v31) != 1)
  {
    sub_1BA6A09F0((uint64_t)v29, (uint64_t)&v19, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BA6A09F0((uint64_t)v30, (uint64_t)v27, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    if (sub_1BA896370(v27) != 1)
    {
      sub_1BA6A09F0((uint64_t)v30, (uint64_t)&v8, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
      v6[6] = v14;
      v7[0] = v15[0];
      *(_OWORD *)((char *)v7 + 9) = *(_OWORD *)((char *)v15 + 9);
      v6[2] = v10;
      v6[3] = v11;
      v6[4] = v12;
      v6[5] = v13;
      v6[0] = v8;
      v6[1] = v9;
      sub_1BA6A09F0((uint64_t)v29, (uint64_t)v16, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
      sub_1BA8966F8((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
      sub_1BA89652C((uint64_t)v16);
      v4 = _s8NewsFeed17FormatMediaTimingV2eeoiySbAC_ACtFZ_0((uint64_t)&v19, (uint64_t)v6);
      v17[6] = v25;
      v18[0] = v26[0];
      *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v26 + 9);
      v17[2] = v21;
      v17[3] = v22;
      v17[4] = v23;
      v17[5] = v24;
      v17[0] = v19;
      v17[1] = v20;
      sub_1BA896610((uint64_t)v17);
      sub_1BA8966F8((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
      return v4;
    }
    v14 = v25;
    v15[0] = v26[0];
    *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)v26 + 9);
    v10 = v21;
    v11 = v22;
    v12 = v23;
    v13 = v24;
    v8 = v19;
    v9 = v20;
    sub_1BA6A09F0((uint64_t)v29, (uint64_t)v16, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BA6A09F0((uint64_t)v29, (uint64_t)v17, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BA89652C((uint64_t)v17);
    sub_1BA89652C((uint64_t)v16);
    sub_1BA896610((uint64_t)&v8);
    goto LABEL_8;
  }
  sub_1BA6A09F0((uint64_t)v30, (uint64_t)v27, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  if (sub_1BA896370(v27) != 1)
  {
LABEL_8:
    sub_1BA6A09F0((uint64_t)v29, (uint64_t)v27, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BA6A09F0((uint64_t)v30, (uint64_t)&v28, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    sub_1BA8966F8((uint64_t)v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
    sub_1BA8963E0((uint64_t)v27);
    return 0;
  }
  return 1;
}

uint64_t _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    v8 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    if (v8 || (v7 = 0, (sub_1BB874398() & 1) != 0))
    {
      if ((*(_BYTE *)(a1 + 64) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 64))
          goto LABEL_29;
      }
      else
      {
        v7 = 0;
        if ((*(_BYTE *)(a2 + 64) & 1) != 0)
          return v7 & 1;
        if (*(double *)(a1 + 48) != *(double *)(a2 + 48) || *(double *)(a1 + 56) != *(double *)(a2 + 56))
          return v7 & 1;
      }
      swift_beginAccess();
      v10 = *(_QWORD *)(a1 + 72);
      swift_beginAccess();
      v11 = *(_QWORD *)(a2 + 72);
      if (v10)
      {
        if (!v11)
          goto LABEL_29;
        swift_bridgeObjectRetain();
        v12 = swift_bridgeObjectRetain();
        v13 = sub_1BA8835AC(v12, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
          goto LABEL_29;
      }
      else if (v11)
      {
        goto LABEL_29;
      }
      v14 = *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32);
      if (*(unsigned __int8 *)(a1 + 84) == 255)
      {
        if (BYTE4(v14) != 255)
          goto LABEL_29;
LABEL_37:
        swift_beginAccess();
        v16 = *(_QWORD *)(a1 + 88);
        swift_beginAccess();
        v17 = *(_QWORD *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v7 = sub_1BA891304(v16, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v7 & 1;
      }
      if (BYTE4(v14) == 255)
      {
LABEL_29:
        v7 = 0;
        return v7 & 1;
      }
      if (!*(_BYTE *)(a1 + 84))
      {
        v7 = 0;
        if (BYTE4(v14))
          return v7 & 1;
        goto LABEL_36;
      }
      if (*(_BYTE *)(a1 + 84) == 1)
      {
        v7 = 0;
        if (BYTE4(v14) != 1)
          return v7 & 1;
LABEL_36:
        if (*(float *)(a1 + 80) != *(float *)(a2 + 80))
          return v7 & 1;
        goto LABEL_37;
      }
      if (*(_DWORD *)(a1 + 80))
      {
        if (*(_DWORD *)(a1 + 80) == 1)
        {
          v7 = 0;
          if (BYTE4(v14) == 2 && *(_DWORD *)(a2 + 80) == 1)
            goto LABEL_37;
        }
        else
        {
          v7 = 0;
          if (BYTE4(v14) == 2 && *(_DWORD *)(a2 + 80) == 2)
            goto LABEL_37;
        }
      }
      else
      {
        v7 = 0;
        if (BYTE4(v14) == 2 && !*(_DWORD *)(a2 + 80))
          goto LABEL_37;
      }
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed23FormatWebEmbedNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  char v17;
  int v18;
  int v19;
  _BOOL4 v20;
  int v21;
  int v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v7 = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  v10 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v11 = *(unsigned __int8 *)(a1 + 64);
  v13 = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a2 + 56);
  v14 = *(unsigned __int8 *)(a2 + 64);
  if (v11 <= 0xFD)
  {
    v29 = *(_QWORD *)(a1 + 48);
    v30 = v9;
    v31 = v11;
    if (v14 > 0xFD)
    {
LABEL_20:
      sub_1BA6F2B04(v10, v9, v11);
      sub_1BA6F2B04(v10, v9, v11);
      sub_1BA6F2B88(v10, v9, v11);
      goto LABEL_21;
    }
    v26 = v13;
    v27 = v12;
    v28 = v14;
    sub_1BA6E6C54(v10, v9, v11);
    sub_1BA6F2B04(v10, v9, v11);
    v15 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v29, (uint64_t)&v26);
    sub_1BA6F2B88(v29, v30, v31);
    sub_1BA6E6CC4(v10, v9, v11);
    if ((v15 & 1) == 0)
    {
LABEL_22:
      v7 = 0;
      return v7 & 1;
    }
  }
  else if (v14 <= 0xFD)
  {
    goto LABEL_21;
  }
  v10 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v11 = *(unsigned __int8 *)(a1 + 88);
  v13 = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 80);
  v14 = *(unsigned __int8 *)(a2 + 88);
  if (v11 <= 0xFD)
  {
    v29 = *(_QWORD *)(a1 + 72);
    v30 = v9;
    v31 = v11;
    if (v14 <= 0xFD)
    {
      v26 = v13;
      v27 = v12;
      v28 = v14;
      sub_1BA6E6C54(v10, v9, v11);
      sub_1BA6F2B04(v10, v9, v11);
      v17 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v29, (uint64_t)&v26);
      sub_1BA6F2B88(v29, v30, v31);
      sub_1BA6E6CC4(v10, v9, v11);
      if ((v17 & 1) == 0)
        goto LABEL_22;
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  if (v14 <= 0xFD)
  {
LABEL_21:
    sub_1BA6E6C54(v13, v12, v14);
    sub_1BA6E6CC4(v10, v9, v11);
    sub_1BA6E6CC4(v13, v12, v14);
    goto LABEL_22;
  }
LABEL_25:
  v18 = *(unsigned __int8 *)(a1 + 89);
  v19 = *(unsigned __int8 *)(a2 + 89);
  if (v18 == 2)
  {
    if (v19 != 2)
      goto LABEL_22;
  }
  else
  {
    v7 = 0;
    v20 = (v18 & 1) == 0;
    if (v19 == 2 || ((v20 ^ v19) & 1) == 0)
      return v7 & 1;
  }
  v21 = *(unsigned __int8 *)(a1 + 90);
  v22 = *(unsigned __int8 *)(a2 + 90);
  if (v21 == 2)
  {
    if (v22 != 2)
      goto LABEL_22;
LABEL_35:
    swift_beginAccess();
    v24 = *(_QWORD *)(a1 + 96);
    swift_beginAccess();
    v25 = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1BA88FBD8(v24, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7 & 1;
  }
  v7 = 0;
  v23 = (v21 & 1) == 0;
  if (v22 != 2 && ((v23 ^ v22) & 1) != 0)
    goto LABEL_35;
  return v7 & 1;
}

BOOL _s8NewsFeed28FormatSupplementaryNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  _BOOL8 result;
  char v10;
  int v11;
  int v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  int v23;
  uint64_t v24;
  __int16 v25;
  char v26;
  uint64_t v27;
  unsigned __int16 v28;
  char v29;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    result = 0;
    if ((v7 & 1) == 0)
      return result;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v10 = sub_1BB874398();
    result = 0;
    if ((v10 & 1) == 0)
      return result;
  }
  v11 = *(unsigned __int8 *)(a1 + 48);
  v12 = *(unsigned __int8 *)(a2 + 48);
  if (v11 == 2)
  {
    if (v12 != 2)
      return 0;
  }
  else
  {
    result = 0;
    v13 = (v11 & 1) == 0;
    if (v12 == 2 || ((v13 ^ v12) & 1) == 0)
      return result;
  }
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  v15 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_1BA88F304(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
    return 0;
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(unsigned __int16 *)(a1 + 72) | (*(unsigned __int8 *)(a1 + 74) << 16);
  v19 = *(_QWORD *)(a2 + 64);
  v20 = *(unsigned __int16 *)(a2 + 72) | (*(unsigned __int8 *)(a2 + 74) << 16);
  if (*(unsigned __int8 *)(a1 + 74) != 255)
  {
    v27 = *(_QWORD *)(a1 + 64);
    v28 = v18;
    v29 = BYTE2(v18);
    if (BYTE2(v20) == 255)
    {
      sub_1BA77A170(v17, v18, SBYTE2(v18), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      sub_1BA77A170(v17, v18, SBYTE2(v18), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      sub_1BA77A170(v17, v18, SBYTE2(v18), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
      goto LABEL_22;
    }
    v24 = v19;
    v25 = v20;
    v26 = BYTE2(v20);
    sub_1BA771834(v17, v18);
    sub_1BA77A170(v17, v18, SBYTE2(v18), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
    v21 = _s8NewsFeed31FormatSupplementaryNodePinTraitO2eeoiySbAC_ACtFZ_0((uint64_t)&v27, (uint64_t)&v24);
    sub_1BA77A170(v27, v28, v29, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    sub_1BA771864(v17, v18);
    if ((v21 & 1) != 0)
      goto LABEL_26;
    return 0;
  }
  if (*(unsigned __int8 *)(a2 + 74) != 255)
  {
LABEL_22:
    sub_1BA771834(v19, v20);
    sub_1BA771864(v17, v18);
    sub_1BA771864(v19, v20);
    return 0;
  }
LABEL_26:
  v22 = *(unsigned __int8 *)(a1 + 75);
  v23 = *(unsigned __int8 *)(a2 + 75);
  result = v23 == 3 && v22 == 3;
  if (v22 != 3 && v23 != 3)
  {
    result = v23 == 2 && v22 == 2;
    if (v22 != 2 && v23 != 2)
      return ((v23 ^ v22) & 1) == 0;
  }
  return result;
}

uint64_t _s8NewsFeed19FormatMicaNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v10 = sub_1BB874398();
    v8 = 0;
    if ((v10 & 1) == 0)
      return v8 & 1;
  }
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v12 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA8916AC(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    goto LABEL_35;
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a2 + 56);
  if (v14)
  {
    if (!v15)
      goto LABEL_35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA881EAC(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_35;
  }
  else if (v15)
  {
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (!v17)
      goto LABEL_35;
    swift_bridgeObjectRetain();
    v18 = swift_bridgeObjectRetain();
    v19 = sub_1BA882894(v18, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v19)
      goto LABEL_35;
  }
  else if (v17)
  {
    goto LABEL_35;
  }
  v21 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v22 = *(unsigned __int8 *)(a1 + 88);
  v24 = *(_QWORD *)(a2 + 72);
  v23 = *(_QWORD *)(a2 + 80);
  v25 = *(unsigned __int8 *)(a2 + 88);
  if (v22 <= 0xFD)
  {
    v85 = *(_QWORD *)(a1 + 72);
    v86 = v20;
    LOBYTE(v87) = v22;
    if (v25 > 0xFD)
    {
      sub_1BA6F2B04(v21, v20, v22);
      sub_1BA6F2B04(v21, v20, v22);
      sub_1BA6F2B88(v21, v20, v22);
      goto LABEL_27;
    }
    v74 = v24;
    v75 = v23;
    LOBYTE(v76) = v25;
    sub_1BA6E6C54(v21, v20, v22);
    sub_1BA6F2B04(v21, v20, v22);
    v26 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v85, (uint64_t)&v74);
    sub_1BA6F2B88(v85, v86, v87);
    sub_1BA6E6CC4(v21, v20, v22);
    if ((v26 & 1) != 0)
      goto LABEL_29;
LABEL_35:
    v8 = 0;
    return v8 & 1;
  }
  if (v25 <= 0xFD)
  {
LABEL_27:
    sub_1BA6E6C54(v24, v23, v25);
    sub_1BA6E6CC4(v21, v20, v22);
    sub_1BA6E6CC4(v24, v23, v25);
    goto LABEL_35;
  }
LABEL_29:
  v28 = *(_QWORD *)(a1 + 96);
  v27 = *(_QWORD *)(a1 + 104);
  v30 = *(_QWORD *)(a1 + 112);
  v29 = *(_QWORD *)(a1 + 120);
  v31 = *(_QWORD *)(a1 + 128);
  v32 = *(_QWORD *)(a1 + 136);
  v34 = *(_QWORD *)(a1 + 144);
  v33 = *(_QWORD *)(a1 + 152);
  v35 = *(_QWORD *)(a1 + 160);
  v36 = *(_QWORD *)(a1 + 168);
  v37 = *(unsigned __int8 *)(a1 + 176);
  v38 = *(_QWORD *)(a2 + 96);
  v39 = *(_QWORD *)(a2 + 104);
  v41 = *(_QWORD *)(a2 + 112);
  v40 = *(_QWORD *)(a2 + 120);
  v42 = *(_QWORD *)(a2 + 128);
  v43 = *(_QWORD *)(a2 + 136);
  v44 = *(_QWORD *)(a2 + 144);
  v45 = *(_QWORD *)(a2 + 152);
  v46 = *(_QWORD *)(a2 + 160);
  v47 = *(_QWORD *)(a2 + 168);
  v48 = *(unsigned __int8 *)(a2 + 176);
  if (v37 == 254)
  {
    if (v48 == 254)
      goto LABEL_38;
    goto LABEL_34;
  }
  v85 = *(_QWORD *)(a1 + 96);
  v86 = v27;
  v87 = v30;
  v88 = v29;
  v89 = v31;
  v90 = v32;
  v91 = v34;
  v92 = v33;
  v93 = v35;
  v94 = v36;
  v95 = v37;
  v72 = v35;
  v73 = v28;
  v71 = v36;
  if (v48 == 254)
  {
    v68 = v33;
    v69 = v31;
    v49 = v34;
    v50 = v32;
    v66 = v30;
    v67 = v29;
    v64 = v45;
    v65 = v27;
    v62 = v43;
    v63 = v44;
    v61 = v42;
    swift_retain();
    v42 = v61;
    v43 = v62;
    v44 = v63;
    v45 = v64;
    v36 = v71;
    v35 = v72;
    v28 = v73;
    v27 = v65;
    v30 = v66;
    v29 = v67;
    v33 = v68;
    v32 = v50;
    v31 = v69;
    v34 = v49;
LABEL_34:
    v85 = v28;
    v86 = v27;
    v87 = v30;
    v88 = v29;
    v89 = v31;
    v90 = v32;
    v91 = v34;
    v92 = v33;
    v93 = v35;
    v94 = v36;
    v95 = v37;
    v96 = v38;
    v97 = v39;
    v98 = v41;
    v99 = v40;
    v100 = v42;
    v101 = v43;
    v102 = v44;
    v103 = v45;
    v104 = v46;
    v105 = v47;
    v106 = v48;
    sub_1BA6E8A48(v38, v39, v41, v40, v42, v43, v44, v45, v46, v47, v48);
    sub_1BA9F10E8((uint64_t)&v85);
    goto LABEL_35;
  }
  v74 = v38;
  LODWORD(v75) = v39;
  v76 = v41;
  v77 = v40;
  v78 = v42;
  v79 = v43;
  v80 = v44;
  v81 = v45;
  v82 = v46;
  v83 = v47;
  v84 = v48;
  v52 = v27;
  v53 = v30;
  v54 = v29;
  v55 = v31;
  v56 = v32;
  v57 = v34;
  v58 = v33;
  sub_1BA6E8A48(v28, v27, v30, v29, v31, v32, v34, v33, v35, v36, v37);
  swift_retain();
  v70 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v85, (uint64_t)&v74);
  swift_release();
  sub_1BA6E8A78(v73, v52, v53, v54, v55, v56, v57, v58, v72, v71, v37);
  if ((v70 & 1) == 0)
    goto LABEL_35;
LABEL_38:
  v59 = *(unsigned __int8 *)(a1 + 177);
  v8 = v59 == 2;
  v60 = *(unsigned __int8 *)(a2 + 177);
  if (v60 != 2)
    v8 = 0;
  if (v59 != 2 && v60 != 2)
    v8 = ((v59 & 1) == 0) ^ v60;
  return v8 & 1;
}

uint64_t _s8NewsFeed25FormatIssueCoverNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BA88F030(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    goto LABEL_38;
  v12 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a2 + 56);
  if (v12)
  {
    if (!v7)
      return v7 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BA881EAC(v12, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
      goto LABEL_38;
  }
  else if (v7)
  {
    goto LABEL_38;
  }
  v7 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (!v7)
      return v7 & 1;
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1BA882894(v14, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v15)
      goto LABEL_38;
  }
  else if (v7)
  {
    goto LABEL_38;
  }
  v17 = *(_QWORD *)(a1 + 72);
  v16 = *(_QWORD *)(a1 + 80);
  v18 = *(unsigned __int8 *)(a1 + 88);
  v20 = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a2 + 80);
  v21 = *(unsigned __int8 *)(a2 + 88);
  if (v18 <= 0xFD)
  {
    v84 = *(_QWORD *)(a1 + 72);
    v85 = v16;
    LOBYTE(v86) = v18;
    if (v21 > 0xFD)
    {
      sub_1BA6F2B04(v17, v16, v18);
      sub_1BA6F2B04(v17, v16, v18);
      sub_1BA6F2B88(v17, v16, v18);
      goto LABEL_27;
    }
    v73 = v20;
    v74 = v19;
    LOBYTE(v75) = v21;
    sub_1BA6E6C54(v17, v16, v18);
    sub_1BA6F2B04(v17, v16, v18);
    v22 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v84, (uint64_t)&v73);
    sub_1BA6F2B88(v84, v85, v86);
    sub_1BA6E6CC4(v17, v16, v18);
    if ((v22 & 1) != 0)
      goto LABEL_29;
LABEL_38:
    LOBYTE(v7) = 0;
    return v7 & 1;
  }
  if (v21 <= 0xFD)
  {
LABEL_27:
    sub_1BA6E6C54(v20, v19, v21);
    sub_1BA6E6CC4(v17, v16, v18);
    sub_1BA6E6CC4(v20, v19, v21);
    goto LABEL_38;
  }
LABEL_29:
  v24 = *(_QWORD *)(a1 + 96);
  v23 = *(_QWORD *)(a1 + 104);
  v26 = *(_QWORD *)(a1 + 112);
  v25 = *(_QWORD *)(a1 + 120);
  v27 = *(_QWORD *)(a1 + 128);
  v28 = *(_QWORD *)(a1 + 136);
  v30 = *(_QWORD *)(a1 + 144);
  v29 = *(_QWORD *)(a1 + 152);
  v31 = *(_QWORD *)(a1 + 160);
  v32 = *(_QWORD *)(a1 + 168);
  v33 = *(unsigned __int8 *)(a1 + 176);
  v34 = *(_QWORD *)(a2 + 96);
  v35 = *(_QWORD *)(a2 + 104);
  v37 = *(_QWORD *)(a2 + 112);
  v36 = *(_QWORD *)(a2 + 120);
  v38 = *(_QWORD *)(a2 + 128);
  v39 = *(_QWORD *)(a2 + 136);
  v40 = *(_QWORD *)(a2 + 144);
  v41 = *(_QWORD *)(a2 + 152);
  v42 = *(_QWORD *)(a2 + 160);
  v43 = *(_QWORD *)(a2 + 168);
  v44 = *(unsigned __int8 *)(a2 + 176);
  if (v33 == 254)
  {
    if (v44 == 254)
      goto LABEL_36;
    goto LABEL_34;
  }
  v84 = *(_QWORD *)(a1 + 96);
  v85 = v23;
  v86 = v26;
  v87 = v25;
  v88 = v27;
  v89 = v28;
  v90 = v30;
  v91 = v29;
  v92 = v31;
  v93 = v32;
  v94 = v33;
  v71 = v31;
  v72 = v24;
  v70 = v32;
  if (v44 == 254)
  {
    v67 = v29;
    v68 = v27;
    v45 = v30;
    v46 = v28;
    v65 = v26;
    v66 = v25;
    v63 = v41;
    v64 = v23;
    v61 = v39;
    v62 = v40;
    v60 = v38;
    swift_retain();
    v38 = v60;
    v39 = v61;
    v40 = v62;
    v41 = v63;
    v32 = v70;
    v31 = v71;
    v24 = v72;
    v23 = v64;
    v26 = v65;
    v25 = v66;
    v29 = v67;
    v28 = v46;
    v27 = v68;
    v30 = v45;
LABEL_34:
    v84 = v24;
    v85 = v23;
    v86 = v26;
    v87 = v25;
    v88 = v27;
    v89 = v28;
    v90 = v30;
    v91 = v29;
    v92 = v31;
    v93 = v32;
    v94 = v33;
    v95 = v34;
    v96 = v35;
    v97 = v37;
    v98 = v36;
    v99 = v38;
    v100 = v39;
    v101 = v40;
    v102 = v41;
    v103 = v42;
    v104 = v43;
    v105 = v44;
    sub_1BA6E8A48(v34, v35, v37, v36, v38, v39, v40, v41, v42, v43, v44);
    sub_1BA9F10E8((uint64_t)&v84);
    goto LABEL_38;
  }
  v73 = v34;
  LODWORD(v74) = v35;
  v75 = v37;
  v76 = v36;
  v77 = v38;
  v78 = v39;
  v79 = v40;
  v80 = v41;
  v81 = v42;
  v82 = v43;
  v83 = v44;
  v47 = v23;
  v48 = v26;
  v49 = v25;
  v50 = v27;
  v51 = v28;
  v52 = v30;
  v53 = v29;
  sub_1BA6E8A48(v24, v23, v26, v25, v27, v28, v30, v29, v31, v32, v33);
  swift_retain();
  v69 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v84, (uint64_t)&v73);
  swift_release();
  sub_1BA6E8A78(v72, v47, v48, v49, v50, v51, v52, v53, v71, v70, v33);
  if ((v69 & 1) == 0)
    goto LABEL_38;
LABEL_36:
  v54 = *(unsigned __int8 *)(a1 + 177);
  v55 = *(unsigned __int8 *)(a2 + 177);
  if (v54 == 2)
  {
    if (v55 != 2)
      goto LABEL_38;
LABEL_42:
    swift_beginAccess();
    v58 = *(_QWORD *)(a1 + 184);
    swift_beginAccess();
    v59 = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v7) = sub_1BA883494(v58, v59);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7 & 1;
  }
  LOBYTE(v7) = 0;
  v57 = (v54 & 1) == 0;
  if (v55 != 2 && ((v57 ^ v55) & 1) != 0)
    goto LABEL_42;
  return v7 & 1;
}

uint64_t _s8NewsFeed20FormatGroupNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  _BOOL4 v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v10 = sub_1BB874398();
    v8 = 0;
    if ((v10 & 1) == 0)
      return v8 & 1;
  }
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v12 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA891038(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    goto LABEL_35;
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a2 + 56);
  if (v14)
  {
    if (!v15)
      goto LABEL_35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA881EAC(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_35;
  }
  else if (v15)
  {
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (!v17)
      goto LABEL_35;
    swift_bridgeObjectRetain();
    v18 = swift_bridgeObjectRetain();
    v19 = sub_1BA882894(v18, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v19)
      goto LABEL_35;
  }
  else if (v17)
  {
    goto LABEL_35;
  }
  v21 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v22 = *(unsigned __int8 *)(a1 + 88);
  v24 = *(_QWORD *)(a2 + 72);
  v23 = *(_QWORD *)(a2 + 80);
  v25 = *(unsigned __int8 *)(a2 + 88);
  if (v22 > 0xFD)
  {
    if (v25 > 0xFD)
      goto LABEL_29;
LABEL_27:
    sub_1BA6E6C54(v24, v23, v25);
    sub_1BA6E6CC4(v21, v20, v22);
    sub_1BA6E6CC4(v24, v23, v25);
    goto LABEL_35;
  }
  v88 = *(_QWORD *)(a1 + 72);
  v89 = v20;
  LOBYTE(v90) = v22;
  if (v25 > 0xFD)
  {
    sub_1BA6F2B04(v21, v20, v22);
    sub_1BA6F2B04(v21, v20, v22);
    sub_1BA6F2B88(v21, v20, v22);
    goto LABEL_27;
  }
  v77 = v24;
  v78 = v23;
  LOBYTE(v79) = v25;
  sub_1BA6E6C54(v21, v20, v22);
  sub_1BA6F2B04(v21, v20, v22);
  v26 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v88, (uint64_t)&v77);
  sub_1BA6F2B88(v88, v89, v90);
  sub_1BA6E6CC4(v21, v20, v22);
  if ((v26 & 1) == 0)
    goto LABEL_35;
LABEL_29:
  v28 = *(_QWORD *)(a1 + 96);
  v27 = *(_QWORD *)(a1 + 104);
  v30 = *(_QWORD *)(a1 + 112);
  v29 = *(_QWORD *)(a1 + 120);
  v31 = *(_QWORD *)(a1 + 128);
  v32 = *(_QWORD *)(a1 + 136);
  v34 = *(_QWORD *)(a1 + 144);
  v33 = *(_QWORD *)(a1 + 152);
  v35 = *(_QWORD *)(a1 + 160);
  v36 = *(_QWORD *)(a1 + 168);
  v37 = *(unsigned __int8 *)(a1 + 176);
  v38 = *(_QWORD *)(a2 + 96);
  v39 = *(_QWORD *)(a2 + 104);
  v41 = *(_QWORD *)(a2 + 112);
  v40 = *(_QWORD *)(a2 + 120);
  v42 = *(_QWORD *)(a2 + 128);
  v43 = *(_QWORD *)(a2 + 136);
  v44 = *(_QWORD *)(a2 + 144);
  v45 = *(_QWORD *)(a2 + 152);
  v46 = *(_QWORD *)(a2 + 160);
  v47 = *(_QWORD *)(a2 + 168);
  v48 = *(unsigned __int8 *)(a2 + 176);
  if (v37 == 254)
  {
    if (v48 == 254)
      goto LABEL_38;
LABEL_34:
    v88 = v28;
    v89 = v27;
    v90 = v30;
    v91 = v29;
    v92 = v31;
    v93 = v32;
    v94 = v34;
    v95 = v33;
    v96 = v35;
    v97 = v36;
    v98 = v37;
    v99 = v38;
    v100 = v39;
    v101 = v41;
    v102 = v40;
    v103 = v42;
    v104 = v43;
    v105 = v44;
    v106 = v45;
    v107 = v46;
    v108 = v47;
    v109 = v48;
    sub_1BA6E8A48(v38, v39, v41, v40, v42, v43, v44, v45, v46, v47, v48);
    sub_1BA9F10E8((uint64_t)&v88);
    goto LABEL_35;
  }
  v88 = *(_QWORD *)(a1 + 96);
  v89 = v27;
  v90 = v30;
  v91 = v29;
  v92 = v31;
  v93 = v32;
  v94 = v34;
  v95 = v33;
  v96 = v35;
  v97 = v36;
  v98 = v37;
  v75 = v35;
  v76 = v28;
  v74 = v36;
  if (v48 == 254)
  {
    v71 = v33;
    v72 = v31;
    v49 = v34;
    v50 = v32;
    v69 = v30;
    v70 = v29;
    v67 = v45;
    v68 = v27;
    v65 = v43;
    v66 = v44;
    v64 = v42;
    swift_retain();
    v42 = v64;
    v43 = v65;
    v44 = v66;
    v45 = v67;
    v36 = v74;
    v35 = v75;
    v28 = v76;
    v27 = v68;
    v30 = v69;
    v29 = v70;
    v33 = v71;
    v32 = v50;
    v31 = v72;
    v34 = v49;
    goto LABEL_34;
  }
  v77 = v38;
  LODWORD(v78) = v39;
  v79 = v41;
  v80 = v40;
  v81 = v42;
  v82 = v43;
  v83 = v44;
  v84 = v45;
  v85 = v46;
  v86 = v47;
  v87 = v48;
  v52 = v27;
  v53 = v30;
  v54 = v29;
  v55 = v31;
  v56 = v32;
  v57 = v34;
  v58 = v33;
  sub_1BA6E8A48(v28, v27, v30, v29, v31, v32, v34, v33, v35, v36, v37);
  swift_retain();
  v73 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v88, (uint64_t)&v77);
  swift_release();
  sub_1BA6E8A78(v76, v52, v53, v54, v55, v56, v57, v58, v75, v74, v37);
  if ((v73 & 1) == 0)
    goto LABEL_35;
LABEL_38:
  v59 = *(unsigned __int8 *)(a1 + 177);
  v60 = *(unsigned __int8 *)(a2 + 177);
  if (v59 != 2)
  {
    v8 = 0;
    v61 = (v59 & 1) == 0;
    if (v60 == 2 || ((v61 ^ v60) & 1) == 0)
      return v8 & 1;
    goto LABEL_43;
  }
  if (v60 != 2)
  {
LABEL_35:
    v8 = 0;
    return v8 & 1;
  }
LABEL_43:
  v62 = *(unsigned __int8 *)(a1 + 178);
  v8 = v62 == 2;
  v63 = *(unsigned __int8 *)(a2 + 178);
  if (v63 != 2)
    v8 = 0;
  if (v62 != 2 && v63 != 2)
    v8 = ((v62 & 1) == 0) ^ v63;
  return v8 & 1;
}

uint64_t _s8NewsFeed24FormatGroupNodeMaskStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BA890F40(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_23;
  v13 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a1 + 88);
  v16 = *(_QWORD *)(a1 + 96);
  v19 = *(_QWORD *)(a1 + 104);
  v18 = *(_QWORD *)(a1 + 112);
  v20 = *(unsigned __int8 *)(a1 + 120);
  v21 = *(_QWORD *)(a2 + 56);
  v22 = *(_QWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  v24 = *(_QWORD *)(a2 + 80);
  v25 = *(_QWORD *)(a2 + 88);
  v26 = *(_QWORD *)(a2 + 96);
  v27 = *(_QWORD *)(a2 + 104);
  v28 = *(_QWORD *)(a2 + 112);
  v29 = *(unsigned __int8 *)(a2 + 120);
  if (v20 != 255)
  {
    v101 = *(_QWORD *)(a1 + 56);
    v102 = v12;
    v103 = v15;
    v104 = v14;
    v105 = v17;
    v106 = v16;
    v107 = v19;
    v108 = v18;
    LOBYTE(v109) = v20;
    if (v29 != 255)
    {
      v90 = v21;
      v91 = v22;
      v92 = v23;
      v93 = v24;
      v94 = v25;
      v95 = v26;
      v96 = v27;
      v97 = v28;
      LOBYTE(v98) = v29;
      v86 = v16;
      v88 = v19;
      v30 = v18;
      sub_1BA7AF9CC(v13, v12, v15, v14, v17, v16, v19, v18, v20);
      v31 = v16;
      v32 = v30;
      sub_1BA7AF9FC(v13, v12, v15, v14, v17, v31, v88, v30, v20);
      _s8NewsFeed23FormatGroupNodeMaskPathO2eeoiySbAC_ACtFZ_0((uint64_t)&v101);
      LOBYTE(v30) = v33;
      sub_1BA5608E0(v101, v102, v103, v104, v105, v106, v107, v108, v109);
      sub_1BA7AF9E4(v13, v12, v15, v14, v17, v86, v88, v32, v20);
      if ((v30 & 1) == 0)
        goto LABEL_23;
      goto LABEL_17;
    }
    v70 = v21;
    v72 = v22;
    v74 = v23;
    v76 = v24;
    v78 = v25;
    v80 = v26;
    v36 = v19;
    v82 = v27;
    v84 = v28;
    v37 = v18;
    sub_1BA7AF9FC(v13, v12, v15, v14, v17, v16, v19, v18, v20);
    sub_1BA7AF9FC(v13, v12, v15, v14, v17, v16, v36, v37, v20);
    sub_1BA5608E0(v13, v12, v15, v14, v17, v16, v36, v37, v20);
    v21 = v70;
    v22 = v72;
    v23 = v74;
    v24 = v76;
    v25 = v78;
    v26 = v80;
    v27 = v82;
    v28 = v84;
    v19 = v36;
    v18 = v37;
LABEL_22:
    v101 = v13;
    v102 = v12;
    v103 = v15;
    v104 = v14;
    v105 = v17;
    v106 = v16;
    v107 = v19;
    v108 = v18;
    LOBYTE(v109) = v20;
    v110 = v21;
    v111 = v22;
    v112 = v23;
    v113 = v24;
    v114 = v25;
    v115 = v26;
    v116 = v27;
    v117 = v28;
    LOBYTE(v118) = v29;
    sub_1BA7AF9CC(v21, v22, v23, v24, v25, v26, v27, v28, v29);
    sub_1BAEE7C98((uint64_t)&v101);
    goto LABEL_23;
  }
  if (v29 != 255)
    goto LABEL_22;
LABEL_17:
  v7 = *(_QWORD *)(a2 + 128);
  if (!*(_QWORD *)(a1 + 128))
  {
    if (!v7)
    {
LABEL_26:
      v40 = *(_QWORD *)(a1 + 136);
      v39 = *(_QWORD *)(a1 + 144);
      v42 = *(_QWORD *)(a1 + 152);
      v41 = *(_QWORD *)(a1 + 160);
      v43 = *(_QWORD *)(a1 + 168);
      v44 = *(_QWORD *)(a1 + 176);
      v46 = *(_QWORD *)(a1 + 184);
      v45 = *(_QWORD *)(a1 + 192);
      v47 = *(_QWORD *)(a1 + 200);
      v48 = *(_QWORD *)(a1 + 208);
      v49 = *(unsigned __int8 *)(a1 + 216);
      v51 = *(_QWORD *)(a2 + 136);
      v50 = *(_QWORD *)(a2 + 144);
      v53 = *(_QWORD *)(a2 + 152);
      v52 = *(_QWORD *)(a2 + 160);
      v55 = *(_QWORD *)(a2 + 168);
      v54 = *(_QWORD *)(a2 + 176);
      v56 = *(_QWORD *)(a2 + 184);
      v57 = *(_QWORD *)(a2 + 192);
      v58 = *(_QWORD *)(a2 + 200);
      v7 = *(_QWORD *)(a2 + 208);
      v59 = *(unsigned __int8 *)(a2 + 216);
      if (v49 == 254)
      {
        if (v59 == 254)
        {
          LOBYTE(v7) = 1;
          return v7 & 1;
        }
      }
      else
      {
        v101 = v40;
        v102 = v39;
        v103 = v42;
        v104 = v41;
        v105 = v43;
        v106 = v44;
        v107 = v46;
        v108 = v45;
        v109 = v47;
        v110 = v48;
        LOBYTE(v111) = v49;
        v87 = v48;
        v89 = v47;
        if (v59 != 254)
        {
          v90 = v51;
          LODWORD(v91) = v50;
          v92 = v53;
          v93 = v52;
          v94 = v55;
          v95 = v54;
          v96 = v56;
          v97 = v57;
          v98 = v58;
          v99 = v7;
          v100 = v59;
          v60 = v40;
          v61 = v39;
          v62 = v42;
          v63 = v41;
          v64 = v43;
          v65 = v44;
          v66 = v46;
          v67 = v45;
          sub_1BA6E8A48(v40, v39, v42, v41, v43, v44, v46, v45, v47, v48, v49);
          swift_retain();
          LOBYTE(v7) = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v101, (uint64_t)&v90);
          swift_release();
          sub_1BA6E8A78(v60, v61, v62, v63, v64, v65, v66, v67, v89, v87, v49);
          return v7 & 1;
        }
        v71 = v40;
        v73 = v39;
        v83 = v46;
        v85 = v45;
        v79 = v44;
        v81 = v43;
        v75 = v42;
        v77 = v41;
        v68 = v56;
        v69 = v57;
        swift_retain();
        v56 = v68;
        v57 = v69;
        v48 = v87;
        v47 = v89;
        v40 = v71;
        v39 = v73;
        v42 = v75;
        v41 = v77;
        v44 = v79;
        v43 = v81;
        v46 = v83;
        v45 = v85;
      }
      v101 = v40;
      v102 = v39;
      v103 = v42;
      v104 = v41;
      v105 = v43;
      v106 = v44;
      v107 = v46;
      v108 = v45;
      v109 = v47;
      v110 = v48;
      LOBYTE(v111) = v49;
      v112 = v51;
      v113 = v50;
      v114 = v53;
      v115 = v52;
      v116 = v55;
      v117 = v54;
      v118 = v56;
      v119 = v57;
      v120 = v58;
      v121 = v7;
      v122 = v59;
      sub_1BA6E8A48(v51, v50, v53, v52, v55, v54, v56, v57, v58, v7, v59);
      sub_1BA9F10E8((uint64_t)&v101);
    }
LABEL_23:
    LOBYTE(v7) = 0;
    return v7 & 1;
  }
  if (v7)
  {
    swift_bridgeObjectRetain();
    v34 = swift_bridgeObjectRetain();
    v35 = sub_1BA882894(v34, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v35)
      goto LABEL_26;
    goto LABEL_23;
  }
  return v7 & 1;
}

BOOL _s8NewsFeed27FormatProgressViewNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  BOOL v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v22;
  char v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v10 = sub_1BB874398();
    v8 = 0;
    if ((v10 & 1) == 0)
      return v8;
  }
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v12 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA88EF54(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    return 0;
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a2 + 56);
  if (v14)
  {
    if (!v15)
      return 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA881EAC(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      return 0;
  }
  else if (v15)
  {
    return 0;
  }
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a2 + 64);
  if ((~v17 & 0xF000000000000007) == 0)
  {
    if ((~v18 & 0xF000000000000007) != 0)
      goto LABEL_27;
    goto LABEL_22;
  }
  v27 = *(_QWORD *)(a1 + 64);
  if ((~v18 & 0xF000000000000007) == 0)
  {
LABEL_26:
    swift_retain();
    goto LABEL_27;
  }
  swift_retain_n();
  static FormatColor.== infix(_:_:)((uint64_t)&v27);
  v20 = v19;
  swift_release();
  sub_1BA5E800C(v17);
  if ((v20 & 1) == 0)
    return 0;
LABEL_22:
  v17 = *(_QWORD *)(a1 + 72);
  v18 = *(_QWORD *)(a2 + 72);
  if ((~v17 & 0xF000000000000007) != 0)
  {
    v27 = *(_QWORD *)(a1 + 72);
    if ((~v18 & 0xF000000000000007) != 0)
    {
      swift_retain_n();
      static FormatColor.== infix(_:_:)((uint64_t)&v27);
      v23 = v22;
      swift_release();
      sub_1BA5E800C(v17);
      if ((v23 & 1) == 0)
        return 0;
      goto LABEL_31;
    }
    goto LABEL_26;
  }
  if ((~v18 & 0xF000000000000007) != 0)
  {
LABEL_27:
    sub_1BA5E7FF4(v18);
    sub_1BA5E800C(v17);
    sub_1BA5E800C(v18);
    return 0;
  }
LABEL_31:
  v24 = *(unsigned __int8 *)(a1 + 80);
  v8 = v24 == 2;
  v25 = *(unsigned __int8 *)(a2 + 80);
  if (v25 != 2)
    v8 = 0;
  if (v24 != 2)
  {
    v26 = ((v24 & 1) == 0) ^ v25;
    if (v25 != 2)
      return v26;
  }
  return v8;
}

BOOL _s8NewsFeed30FormatSponsoredBannerNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  BOOL v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v19;
  char v20;
  int v21;
  int v22;
  char v23;
  uint64_t v24;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v10 = sub_1BB874398();
    v8 = 0;
    if ((v10 & 1) == 0)
      return v8;
  }
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v12 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA88E8E4(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    return 0;
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a2 + 56);
  if ((~v14 & 0xF000000000000007) == 0)
  {
    if ((~v15 & 0xF000000000000007) != 0)
      goto LABEL_22;
    goto LABEL_17;
  }
  v24 = *(_QWORD *)(a1 + 56);
  if ((~v15 & 0xF000000000000007) == 0)
  {
LABEL_21:
    swift_retain();
    goto LABEL_22;
  }
  swift_retain_n();
  static FormatColor.== infix(_:_:)((uint64_t)&v24);
  v17 = v16;
  swift_release();
  sub_1BA5E800C(v14);
  if ((v17 & 1) == 0)
    return 0;
LABEL_17:
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a2 + 64);
  if ((~v14 & 0xF000000000000007) != 0)
  {
    v24 = *(_QWORD *)(a1 + 64);
    if ((~v15 & 0xF000000000000007) != 0)
    {
      swift_retain_n();
      static FormatColor.== infix(_:_:)((uint64_t)&v24);
      v20 = v19;
      swift_release();
      sub_1BA5E800C(v14);
      if ((v20 & 1) == 0)
        return 0;
      goto LABEL_26;
    }
    goto LABEL_21;
  }
  if ((~v15 & 0xF000000000000007) != 0)
  {
LABEL_22:
    sub_1BA5E7FF4(v15);
    sub_1BA5E800C(v14);
    sub_1BA5E800C(v15);
    return 0;
  }
LABEL_26:
  v21 = *(unsigned __int8 *)(a1 + 72);
  v8 = v21 == 2;
  v22 = *(unsigned __int8 *)(a2 + 72);
  if (v22 != 2)
    v8 = 0;
  if (v21 != 2)
  {
    v23 = ((v21 & 1) == 0) ^ v22;
    if (v22 != 2)
      return v23;
  }
  return v8;
}

uint64_t _s8NewsFeed09FormatTagB0C2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  char v7;

  v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v4 || (v5 = sub_1BB874398(), result = 0, (v5 & 1) != 0))
  {
    v7 = *(_BYTE *)(a2 + 40);
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 40))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
        v7 = 1;
      if ((v7 & 1) != 0)
        return 0;
    }
    result = *(unsigned __int8 *)(a2 + 56);
    if ((*(_BYTE *)(a1 + 56) & 1) == 0)
      return (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)) & ~(_DWORD)result;
  }
  return result;
}

uint64_t _s8NewsFeed15FormatPrintNodeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  if (v4 != a2[2] || v5 != a2[3])
  {
    v7 = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  v8 = a1[5];
  v9 = a2[5];
  if (!v8)
  {
    if (!v9)
    {
LABEL_14:
      swift_beginAccess();
      v10 = a1[6];
      swift_beginAccess();
      v11 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_1BA85AAE0(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
    }
LABEL_13:
    v7 = 0;
    return v7 & 1;
  }
  if (!v9)
    goto LABEL_13;
  if (a1[4] == a2[4] && v8 == v9)
    goto LABEL_14;
  v7 = 0;
  if ((sub_1BB874398() & 1) != 0)
    goto LABEL_14;
  return v7 & 1;
}

uint64_t _s8NewsFeed30FormatAccessibilityLayoutValueC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  char v6;
  unsigned __int8 v8;
  char v9;

  v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v4 || (v5 = sub_1BB874398(), v6 = 0, (v5 & 1) != 0))
  {
    v9 = *(_BYTE *)(a1 + 32);
    v8 = *(_BYTE *)(a2 + 32);
    v6 = _s8NewsFeed24FormatAccessibilityValueO2eeoiySbAC_ACtFZ_0(&v9, &v8);
  }
  return v6 & 1;
}

uint64_t _s8NewsFeed25FormatSponsoredBannerNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  unint64_t v33[3];
  unint64_t v34[12];
  _QWORD v35[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  v35[0] = *(_QWORD *)(a1 + 32);
  v34[9] = *(_QWORD *)(a2 + 32);
  static FormatSize.== infix(_:_:)((uint64_t)v35);
  if ((v8 & 1) == 0)
    goto LABEL_15;
  v9 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a2 + 40);
  if (v9)
  {
    if (!v7)
      return v7 & 1;
    v10 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v7 + 16);
    swift_beginAccess();
    v12 = *(_QWORD *)(v10 + 16);
    swift_beginAccess();
    v13 = *(_QWORD *)(v11 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA8583F8(v12, v13);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_15;
  }
  else if (v7)
  {
    goto LABEL_15;
  }
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v16 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BA882CE0(v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
    goto LABEL_15;
  swift_beginAccess();
  v34[0] = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  v33[0] = *(_QWORD *)(a2 + 56);
  if ((static FormatVisibility.== infix(_:_:)(v34, v33) & 1) == 0)
    goto LABEL_15;
  swift_beginAccess();
  v18 = *(unsigned __int8 *)(a1 + 64);
  swift_beginAccess();
  if (v18 != *(unsigned __int8 *)(a2 + 64))
    goto LABEL_15;
  v20 = *(unsigned __int8 *)(a1 + 80);
  v21 = *(unsigned __int8 *)(a2 + 80);
  if (v20 > 0xFD)
  {
    if (v21 > 0xFD)
      goto LABEL_22;
LABEL_15:
    LOBYTE(v7) = 0;
    return v7 & 1;
  }
  v22 = *(_QWORD *)(a2 + 72);
  v31 = *(_QWORD *)(a1 + 72);
  v32 = v20;
  if (v21 > 0xFD)
    goto LABEL_15;
  v29 = v22;
  v30 = v21;
  if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v31, &v29) & 1) == 0)
    goto LABEL_15;
LABEL_22:
  swift_beginAccess();
  v23 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v24 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = sub_1BA6EB330(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
    goto LABEL_15;
  swift_beginAccess();
  v26 = *(_QWORD *)(a1 + 96);
  swift_beginAccess();
  v27 = *(_QWORD *)(a2 + 96);
  LOBYTE(v7) = (v26 | v27) == 0;
  if (v26 && v27)
  {
    swift_retain();
    v28 = swift_retain();
    LOBYTE(v7) = _s8NewsFeed30FormatSponsoredBannerNodeStyleC2eeoiySbAC_ACtFZ_0(v28, v27);
    swift_release();
    swift_release();
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed22FormatProgressViewNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  unint64_t v56[3];
  unint64_t v57[3];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  char v67;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  swift_beginAccess();
  *(_QWORD *)&v63 = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  *(_QWORD *)&v58 = *(_QWORD *)(a2 + 32);
  static FormatSize.== infix(_:_:)((uint64_t)&v63);
  if ((v9 & 1) == 0)
    goto LABEL_34;
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a2 + 40);
  if (v10)
  {
    if (!v11)
      goto LABEL_34;
    v12 = *(_QWORD *)(v10 + 16);
    v13 = *(_QWORD *)(v11 + 16);
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 16);
    swift_beginAccess();
    v15 = *(_QWORD *)(v13 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA8583F8(v14, v15);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_34;
  }
  else if (v11)
  {
    goto LABEL_34;
  }
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v18 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_1BA882CE0(v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
    goto LABEL_34;
  v20 = *(_BYTE *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  v22 = *(_QWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a1 + 88);
  v24 = *(_WORD *)(a1 + 96);
  v25 = *(_QWORD *)(a2 + 56);
  v26 = *(_BYTE *)(a2 + 64);
  v27 = *(_QWORD *)(a2 + 72);
  v28 = *(_QWORD *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  v30 = *(_WORD *)(a2 + 96);
  *(_QWORD *)&v63 = *(_QWORD *)(a1 + 56);
  BYTE8(v63) = v20;
  *(_QWORD *)&v58 = v25;
  BYTE8(v58) = v26;
  if ((_s8NewsFeed30FormatProgressViewNodeDurationO2eeoiySbAC_ACtFZ_0((uint64_t)&v63, (uint64_t)&v58) & 1) == 0)
    goto LABEL_34;
  *(_QWORD *)&v63 = v21;
  *((_QWORD *)&v63 + 1) = v22;
  *(_QWORD *)&v64 = v23;
  WORD4(v64) = v24;
  *(_QWORD *)&v58 = v27;
  *((_QWORD *)&v58 + 1) = v28;
  *(_QWORD *)&v59 = v29;
  WORD4(v59) = v30;
  if ((static FormatProgressViewNodeProgress.== infix(_:_:)((uint64_t)&v63, (uint64_t)&v58) & 1) == 0)
    goto LABEL_34;
  swift_beginAccess();
  v31 = *(_QWORD *)(a1 + 104);
  swift_beginAccess();
  if (v31 != *(_QWORD *)(a2 + 104))
    goto LABEL_34;
  swift_beginAccess();
  v32 = *(_QWORD *)(a1 + 112);
  swift_beginAccess();
  v33 = *(_QWORD *)(a2 + 112);
  if (v32)
  {
    if (!v33)
      goto LABEL_34;
    swift_retain();
    v34 = swift_retain();
    v35 = _s8NewsFeed27FormatProgressViewNodeStyleC2eeoiySbAC_ACtFZ_0(v34, v33);
    swift_release();
    swift_release();
    if (!v35)
      goto LABEL_34;
  }
  else if (v33)
  {
    goto LABEL_34;
  }
  swift_beginAccess();
  v36 = *(_QWORD *)(a1 + 168);
  v37 = *(_BYTE *)(a1 + 176);
  v38 = *(_OWORD *)(a1 + 136);
  v63 = *(_OWORD *)(a1 + 120);
  v64 = v38;
  v65 = *(_OWORD *)(a1 + 152);
  v66 = v36;
  v67 = v37;
  swift_beginAccess();
  v39 = *(_QWORD *)(a2 + 168);
  v40 = *(_BYTE *)(a2 + 176);
  v41 = *(_OWORD *)(a2 + 136);
  v58 = *(_OWORD *)(a2 + 120);
  v59 = v41;
  v60 = *(_OWORD *)(a2 + 152);
  v61 = v39;
  v62 = v40;
  if ((_s8NewsFeed18FormatProgressKindO2eeoiySbAC_ACtFZ_0((uint64_t)&v63, (uint64_t)&v58) & 1) == 0)
    goto LABEL_34;
  swift_beginAccess();
  v57[0] = *(_QWORD *)(a1 + 184);
  swift_beginAccess();
  v56[0] = *(_QWORD *)(a2 + 184);
  if ((static FormatVisibility.== infix(_:_:)(v57, v56) & 1) == 0)
    goto LABEL_34;
  swift_beginAccess();
  v42 = *(_QWORD *)(a1 + 192);
  swift_beginAccess();
  v43 = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = sub_1BA6EB330(v42, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v44 & 1) == 0)
    goto LABEL_34;
  v45 = *(unsigned __int8 *)(a1 + 208);
  v46 = *(unsigned __int8 *)(a2 + 208);
  if (v45 > 0xFD)
  {
    if (v46 > 0xFD)
      goto LABEL_29;
LABEL_34:
    v8 = 0;
    return v8 & 1;
  }
  v47 = *(_QWORD *)(a2 + 200);
  v54 = *(_QWORD *)(a1 + 200);
  v55 = v45;
  if (v46 > 0xFD)
    goto LABEL_34;
  v52 = v47;
  v53 = v46;
  if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v54, &v52) & 1) == 0)
    goto LABEL_34;
LABEL_29:
  swift_beginAccess();
  v49 = *(_QWORD *)(a1 + 216);
  v48 = *(_QWORD *)(a1 + 224);
  swift_beginAccess();
  v50 = *(_QWORD *)(a2 + 224);
  v8 = (v48 | v50) == 0;
  if (v48 && v50)
  {
    if (v49 == *(_QWORD *)(a2 + 216) && v48 == v50)
      v8 = 1;
    else
      v8 = sub_1BB874398();
  }
  return v8 & 1;
}

uint64_t _s8NewsFeed22FormatLayeredMediaNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int v23;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  unint64_t v34[3];
  unint64_t v35[3];
  uint64_t v36[3];
  uint64_t v37[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
  {
    v37[0] = *(_QWORD *)(a1 + 32);
    v36[0] = *(_QWORD *)(a2 + 32);
    if ((static FormatLayeredMediaNodeContent.== infix(_:_:)(v37, v36) & 1) == 0)
      goto LABEL_27;
    v7 = *(_QWORD *)(a2 + 40);
    if (*(_QWORD *)(a1 + 40))
    {
      if (!v7)
        return v7 & 1;
      type metadata accessor for FormatLayeredMediaNodeStyle();
      swift_retain();
      v8 = swift_retain();
      v9 = _s8NewsFeed27FormatLayeredMediaNodeStyleC2eeoiySbAC_ACtFZ_0(v8, v7);
      swift_release();
      swift_release();
      if ((v9 & 1) == 0)
        goto LABEL_27;
    }
    else if (v7)
    {
      goto LABEL_27;
    }
    v7 = *(_QWORD *)(a2 + 48);
    if (*(_QWORD *)(a1 + 48))
    {
      if (!v7)
        return v7 & 1;
      swift_retain();
      v10 = swift_retain();
      v11 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v10, v7);
      swift_release();
      swift_release();
      if ((v11 & 1) == 0)
        goto LABEL_27;
    }
    else if (v7)
    {
      goto LABEL_27;
    }
    v37[0] = *(_QWORD *)(a1 + 56);
    v36[0] = *(_QWORD *)(a2 + 56);
    static FormatSize.== infix(_:_:)((uint64_t)v37);
    if ((v12 & 1) == 0)
      goto LABEL_27;
    v13 = *(_QWORD *)(a1 + 64);
    v7 = *(_QWORD *)(a2 + 64);
    if (!v13)
    {
      if (v7)
        goto LABEL_27;
LABEL_23:
      swift_beginAccess();
      v19 = *(_QWORD *)(a1 + 72);
      swift_beginAccess();
      v20 = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = sub_1BA882CE0(v19, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
        goto LABEL_27;
      swift_beginAccess();
      v22 = *(_QWORD *)(a1 + 80);
      swift_beginAccess();
      if (v22 != *(_QWORD *)(a2 + 80))
        goto LABEL_27;
      swift_beginAccess();
      v35[0] = *(_QWORD *)(a1 + 88);
      swift_beginAccess();
      v34[0] = *(_QWORD *)(a2 + 88);
      if ((static FormatVisibility.== infix(_:_:)(v35, v34) & 1) == 0)
        goto LABEL_27;
      swift_beginAccess();
      v23 = *(unsigned __int8 *)(a1 + 96);
      swift_beginAccess();
      if (v23 != *(unsigned __int8 *)(a2 + 96))
        goto LABEL_27;
      v25 = *(unsigned __int8 *)(a1 + 112);
      v26 = *(unsigned __int8 *)(a2 + 112);
      if (v25 <= 0xFD)
      {
        v27 = *(_QWORD *)(a2 + 104);
        v32 = *(_QWORD *)(a1 + 104);
        v33 = v25;
        if (v26 > 0xFD)
          goto LABEL_27;
        v30 = v27;
        v31 = v26;
        if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v32, &v30) & 1) == 0)
          goto LABEL_27;
LABEL_34:
        swift_beginAccess();
        v28 = *(_QWORD *)(a1 + 120);
        swift_beginAccess();
        v29 = *(_QWORD *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LOBYTE(v7) = sub_1BA6EB330(v28, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v7 & 1;
      }
      if (v26 > 0xFD)
        goto LABEL_34;
LABEL_27:
      LOBYTE(v7) = 0;
      return v7 & 1;
    }
    if (v7)
    {
      v14 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v7 + 16);
      swift_beginAccess();
      v16 = *(_QWORD *)(v14 + 16);
      swift_beginAccess();
      v17 = *(_QWORD *)(v15 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = sub_1BA8583F8(v16, v17);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
        goto LABEL_27;
      goto LABEL_23;
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed22FormatItemBindingsNodeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    v8 = a1[4] == a2[4] && a1[5] == a2[5];
    if (v8 || (v7 = 0, (sub_1BB874398() & 1) != 0))
    {
      swift_beginAccess();
      v9 = a1[6];
      swift_beginAccess();
      v10 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_1BA6EB330(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        goto LABEL_15;
      swift_beginAccess();
      v12 = a1[7];
      swift_beginAccess();
      v13 = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1BA883260(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
        goto LABEL_15;
      swift_beginAccess();
      v15 = a1[8];
      swift_beginAccess();
      v16 = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = sub_1BA883C24(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
        swift_beginAccess();
        v18 = a1[9];
        swift_beginAccess();
        v19 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v7 = sub_1BA883A18(v18, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_15:
        v7 = 0;
      }
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed21FormatVideoPlayerNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  int v66;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  BOOL v92;
  uint64_t v93;
  char v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char v110;
  unint64_t v111[3];
  unint64_t v112[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  *(_QWORD *)&v101 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)&v95 = *(_QWORD *)(a2 + 32);
  static FormatSize.== infix(_:_:)((uint64_t)&v101);
  if ((v8 & 1) == 0)
    goto LABEL_41;
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a2 + 40);
  if (v9)
  {
    if (!v10)
      goto LABEL_41;
    v11 = *(_QWORD *)(v9 + 16);
    v12 = *(_QWORD *)(v10 + 16);
    swift_beginAccess();
    v13 = *(_QWORD *)(v11 + 16);
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1BA8583F8(v13, v14);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      goto LABEL_41;
  }
  else if (v10)
  {
    goto LABEL_41;
  }
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v17 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = sub_1BA882CE0(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
    goto LABEL_41;
  v19 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (!v19)
      goto LABEL_41;
    type metadata accessor for FormatVideoPlayerNodeStyle();
    swift_retain();
    v20 = swift_retain();
    v21 = sub_1BAE6C4F8(v20, v19, sub_1BA88F024);
    swift_release();
    swift_release();
    if ((v21 & 1) == 0)
      goto LABEL_41;
  }
  else if (v19)
  {
    goto LABEL_41;
  }
  v22 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (!v22)
      goto LABEL_41;
    swift_retain();
    v23 = swift_retain();
    v24 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v23, v22);
    swift_release();
    swift_release();
    if ((v24 & 1) == 0)
      goto LABEL_41;
  }
  else if (v22)
  {
    goto LABEL_41;
  }
  *(_QWORD *)&v101 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)&v95 = *(_QWORD *)(a2 + 72);
  if ((static FormatVideoPlayerContent.== infix(_:_:)((uint64_t *)&v101, (uint64_t *)&v95) & 1) == 0)
    goto LABEL_41;
  *(_QWORD *)&v101 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)&v95 = *(_QWORD *)(a2 + 80);
  static FormatAsyncImageContent.== infix(_:_:)((uint64_t)&v101);
  if ((v25 & 1) == 0)
    goto LABEL_41;
  v26 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (!v26)
      goto LABEL_41;
    type metadata accessor for FormatImageNodeStyle();
    swift_retain();
    v27 = swift_retain();
    v28 = _s8NewsFeed20FormatImageNodeStyleC2eeoiySbAC_ACtFZ_0(v27, v26);
    swift_release();
    swift_release();
    if ((v28 & 1) == 0)
      goto LABEL_41;
  }
  else if (v26)
  {
    goto LABEL_41;
  }
  v29 = *(_QWORD *)(a1 + 96);
  v30 = *(_QWORD *)(a1 + 104);
  v31 = *(_QWORD *)(a1 + 112);
  v32 = *(_QWORD *)(a1 + 120);
  v34 = *(_QWORD *)(a1 + 128);
  v33 = *(_QWORD *)(a1 + 136);
  v35 = *(_BYTE *)(a1 + 144);
  v36 = *(_QWORD *)(a2 + 96);
  v37 = *(_QWORD *)(a2 + 104);
  v39 = *(_QWORD *)(a2 + 112);
  v38 = *(_QWORD *)(a2 + 120);
  v41 = *(_QWORD *)(a2 + 128);
  v40 = *(_QWORD *)(a2 + 136);
  v42 = *(_BYTE *)(a2 + 144);
  v94 = v35;
  v93 = v29;
  if (v31 == 1)
  {
    v43 = 1;
    v89 = *(_QWORD *)(a1 + 120);
    v91 = *(_QWORD *)(a1 + 104);
    v44 = *(_QWORD *)(a1 + 128);
    v45 = *(_QWORD *)(a1 + 136);
    if (v39 == 1)
      goto LABEL_37;
LABEL_35:
    v49 = v36;
    v50 = v40;
    v51 = v42;
    sub_1BA49C600(v36, v37, v39, v38, v41, v40, v42);
    sub_1BA49A42C(v93, v91, v43, v89, v44, v45, v94);
    sub_1BA49A42C(v49, v37, v39, v38, v41, v50, v51);
    goto LABEL_41;
  }
  *(_QWORD *)&v101 = *(_QWORD *)(a1 + 96);
  *((_QWORD *)&v101 + 1) = v30;
  v102 = v31;
  v103 = v32;
  v104 = v34;
  v105 = v33;
  v106 = v35;
  v88 = v33;
  if (v39 == 1)
  {
    v84 = v36;
    v85 = v40;
    v46 = v35;
    v86 = v42;
    v47 = v31;
    swift_retain();
    sub_1BA738D44(v30);
    swift_retain();
    swift_retain();
    sub_1BA69C808(v34, v88, v46 & 1);
    swift_retain();
    sub_1BA738D44(v30);
    swift_retain();
    swift_retain();
    sub_1BA69C808(v34, v88, v46 & 1);
    swift_release();
    v91 = v30;
    sub_1BA738D54(v30);
    v89 = v32;
    swift_release();
    v43 = v47;
    swift_release();
    v44 = v34;
    v48 = v34;
    v45 = v88;
    sub_1BA69C828(v48, v88, v46 & 1);
    v36 = v84;
    v40 = v85;
    v42 = v86;
    goto LABEL_35;
  }
  *(_QWORD *)&v95 = v36;
  *((_QWORD *)&v95 + 1) = v37;
  v96 = v39;
  v97 = v38;
  v98 = v41;
  v99 = v40;
  v100 = v42 & 1;
  v52 = v30;
  v53 = v30;
  v54 = v31;
  v55 = v34;
  v56 = v34;
  v57 = v33;
  v58 = v35;
  sub_1BA49C600(v29, v53, v31, v32, v56, v33, v35);
  swift_retain();
  sub_1BA738D44(v52);
  swift_retain();
  swift_retain();
  sub_1BA69C808(v55, v57, v58 & 1);
  v92 = _s8NewsFeed31FormatVideoPlayerOverlayContentV2eeoiySbAC_ACtFZ_0((uint64_t)&v101, (uint64_t)&v95);
  v59 = *((_QWORD *)&v101 + 1);
  v60 = v104;
  v90 = v105;
  v87 = v106;
  swift_release();
  sub_1BA738D54(v59);
  swift_release();
  swift_release();
  sub_1BA69C828(v60, v90, v87);
  sub_1BA49A42C(v93, v52, v54, v32, v55, v88, v94);
  if (!v92)
    goto LABEL_41;
LABEL_37:
  v61 = *(_QWORD *)(a1 + 168);
  v62 = *(_BYTE *)(a1 + 176);
  v101 = *(_OWORD *)(a1 + 152);
  v102 = v61;
  LOBYTE(v103) = v62;
  v63 = *(_QWORD *)(a2 + 168);
  v64 = *(_BYTE *)(a2 + 176);
  v95 = *(_OWORD *)(a2 + 152);
  v96 = v63;
  LOBYTE(v97) = v64;
  if ((_s8NewsFeed21FormatVideoPlayerLiveO2eeoiySbAC_ACtFZ_0((uint64_t)&v101, (uint64_t)&v95) & 1) == 0)
    goto LABEL_41;
  swift_beginAccess();
  v65 = *(_QWORD *)(a1 + 184);
  swift_beginAccess();
  if (v65 != *(_QWORD *)(a2 + 184))
    goto LABEL_41;
  swift_beginAccess();
  v112[0] = *(_QWORD *)(a1 + 192);
  swift_beginAccess();
  v111[0] = *(_QWORD *)(a2 + 192);
  if ((static FormatVisibility.== infix(_:_:)(v112, v111) & 1) == 0)
    goto LABEL_41;
  swift_beginAccess();
  v66 = *(unsigned __int8 *)(a1 + 200);
  swift_beginAccess();
  if (v66 != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_41;
  v68 = *(unsigned __int8 *)(a1 + 216);
  v69 = *(unsigned __int8 *)(a2 + 216);
  if (v68 <= 0xFD)
  {
    v70 = *(_QWORD *)(a2 + 208);
    v109 = *(_QWORD *)(a1 + 208);
    v110 = v68;
    if (v69 > 0xFD)
      goto LABEL_41;
    v107 = v70;
    v108 = v69;
    if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v109, &v107) & 1) == 0)
      goto LABEL_41;
  }
  else if (v69 <= 0xFD)
  {
    goto LABEL_41;
  }
  swift_beginAccess();
  v71 = *(_QWORD *)(a1 + 224);
  swift_beginAccess();
  v72 = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v73 = sub_1BA6EB330(v71, v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v73 & 1) == 0)
    goto LABEL_41;
  swift_beginAccess();
  v74 = *(_QWORD *)(a1 + 232);
  v75 = *(_QWORD *)(a1 + 240);
  swift_beginAccess();
  v76 = *(_QWORD *)(a2 + 240);
  if (!v75)
  {
    if (!v76)
      goto LABEL_56;
LABEL_41:
    v7 = 0;
    return v7 & 1;
  }
  if (!v76)
    goto LABEL_41;
  if (v74 != *(_QWORD *)(a2 + 232) || v75 != v76)
  {
    v7 = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
LABEL_56:
  swift_beginAccess();
  v78 = *(_QWORD *)(a1 + 248);
  v77 = *(_QWORD *)(a1 + 256);
  v79 = *(unsigned __int8 *)(a1 + 264);
  swift_beginAccess();
  v80 = *(_QWORD *)(a2 + 248);
  v81 = *(_QWORD *)(a2 + 256);
  v82 = *(unsigned __int8 *)(a2 + 264);
  if (v79 == 255)
  {
    if (v82 == 255)
    {
      v7 = 1;
      return v7 & 1;
    }
    goto LABEL_64;
  }
  if (v82 == 255)
  {
LABEL_64:
    sub_1BA796C58(v80, v81, v82);
    sub_1BA796C58(v78, v77, v79);
    sub_1BA796C70(v78, v77, v79);
    sub_1BA796C70(v80, v81, v82);
    goto LABEL_41;
  }
  if ((v79 & 1) == 0)
  {
    if ((v82 & 1) == 0)
    {
      sub_1BA69C828(v78, v77, 0);
      sub_1BA69C828(v80, v81, 0);
      v7 = ((v78 & 1) == 0) ^ v80;
      return v7 & 1;
    }
    goto LABEL_69;
  }
  if ((v82 & 1) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_69:
    v83 = v82 & 1;
    sub_1BA69C808(v80, v81, v83);
    sub_1BA69C828(v78, v77, v79 & 1);
    sub_1BA69C828(v80, v81, v83);
    goto LABEL_41;
  }
  if (v78 == v80 && v77 == v81)
    v7 = 1;
  else
    v7 = sub_1BB874398();
  sub_1BA796C58(v80, v81, v82);
  sub_1BA796C58(v78, v77, v79);
  sub_1BA69C828(v78, v77, 1);
  sub_1BA69C828(v80, v81, 1);
  return v7 & 1;
}

uint64_t _s8NewsFeed21FormatPuzzleEmbedNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[6];
  __int16 v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  unint64_t v77[3];
  unint64_t v78[3];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a2 + 40);
  if (v9)
  {
    if (!v10)
      goto LABEL_39;
    if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || v9 != v10)
    {
      v11 = sub_1BB874398();
      v8 = 0;
      if ((v11 & 1) == 0)
        return v8 & 1;
    }
  }
  else if (v10)
  {
    goto LABEL_39;
  }
  swift_beginAccess();
  v79 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v70[0] = *(_QWORD *)(a2 + 48);
  static FormatSize.== infix(_:_:)((uint64_t)&v79);
  if ((v12 & 1) == 0)
    goto LABEL_39;
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a2 + 56);
  if (v13)
  {
    if (!v14)
      goto LABEL_39;
    v15 = *(_QWORD *)(v13 + 16);
    v16 = *(_QWORD *)(v14 + 16);
    swift_beginAccess();
    v17 = *(_QWORD *)(v15 + 16);
    swift_beginAccess();
    v18 = *(_QWORD *)(v16 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = sub_1BA8583F8(v17, v18);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
      goto LABEL_39;
  }
  else if (v14)
  {
    goto LABEL_39;
  }
  swift_beginAccess();
  v20 = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  v21 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_1BA882CE0(v20, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
    goto LABEL_39;
  v79 = *(_QWORD *)(a1 + 72);
  v70[0] = *(_QWORD *)(a2 + 72);
  if ((static FormatPuzzleEmbedNodeContent.== infix(_:_:)(&v79, v70) & 1) == 0)
    goto LABEL_39;
  v23 = *(_QWORD *)(a1 + 80);
  v24 = *(_QWORD *)(a2 + 80);
  if (v23)
  {
    if (!v24)
      goto LABEL_39;
    swift_beginAccess();
    v25 = *(_QWORD *)(v23 + 16);
    swift_beginAccess();
    v26 = *(_QWORD *)(v24 + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = sub_1BA858CBC(v25, v26);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
      goto LABEL_39;
  }
  else if (v24)
  {
    goto LABEL_39;
  }
  swift_beginAccess();
  v28 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  if (v28 != *(_QWORD *)(a2 + 88))
    goto LABEL_39;
  swift_beginAccess();
  v29 = *(_QWORD *)(a1 + 96);
  v30 = *(_QWORD *)(a1 + 104);
  v31 = *(_QWORD *)(a1 + 112);
  v32 = *(_QWORD *)(a1 + 120);
  v33 = *(_QWORD *)(a1 + 128);
  v69 = *(_QWORD *)(a1 + 136);
  v35 = *(_QWORD *)(a1 + 144);
  v34 = *(_QWORD *)(a1 + 152);
  swift_beginAccess();
  v36 = *(_QWORD *)(a2 + 96);
  v37 = *(_QWORD *)(a2 + 104);
  v38 = *(_QWORD *)(a2 + 112);
  v39 = *(_QWORD *)(a2 + 120);
  v40 = *(_QWORD *)(a2 + 128);
  v41 = *(_QWORD *)(a2 + 136);
  v42 = *(_QWORD *)(a2 + 144);
  v43 = *(_QWORD *)(a2 + 152);
  v68 = v29;
  if (!v30)
  {
    if (!v37)
      goto LABEL_32;
LABEL_38:
    v79 = v29;
    v80 = v30;
    v81 = v31;
    v82 = v32;
    v83 = v33;
    v84 = v69;
    v85 = v35;
    v86 = v34;
    v87 = v36;
    v88 = v37;
    v89 = v38;
    v90 = v39;
    v91 = v40;
    v92 = v41;
    v93 = v42;
    v94 = v43;
    sub_1BAC69440(v36, v37, v38, v39, v40, v41, v42);
    sub_1BAEE7A9C(&v79);
    goto LABEL_39;
  }
  v79 = v29;
  v80 = v30;
  v81 = v31;
  v82 = v32;
  v83 = v33;
  v84 = v69;
  v85 = v35;
  v86 = v34;
  if (!v37)
  {
    v60 = v36;
    v61 = v38;
    v65 = v42;
    v67 = v43;
    v63 = v40;
    v64 = v41;
    v62 = v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v33, v69, v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v33, v69, v35);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(v33, v69, v35);
    swift_bridgeObjectRelease();
    v36 = v60;
    v38 = v61;
    v39 = v62;
    v40 = v63;
    v41 = v64;
    v42 = v65;
    v43 = v67;
    goto LABEL_38;
  }
  v70[0] = v36;
  v70[1] = v37;
  v70[2] = v38;
  v70[3] = v39;
  v70[4] = v40;
  v70[5] = v41;
  v71 = v42;
  v72 = v43;
  sub_1BAC69440(v29, v30, v31, v32, v33, v69, v35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v33, v69, v35);
  swift_bridgeObjectRetain();
  v66 = _s8NewsFeed26FormatPuzzleEmbedNodeStyleV2eeoiySbAC_ACtFZ_0((uint64_t)&v79, (uint64_t)v70);
  v44 = v83;
  v45 = v84;
  v46 = v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v44, v45, v46);
  swift_bridgeObjectRelease();
  sub_1BAC694A8(v68, v30, v31, v32, v33, v69, v35);
  if ((v66 & 1) == 0)
    goto LABEL_39;
LABEL_32:
  swift_beginAccess();
  v78[0] = *(_QWORD *)(a1 + 160);
  swift_beginAccess();
  v77[0] = *(_QWORD *)(a2 + 160);
  if ((static FormatVisibility.== infix(_:_:)(v78, v77) & 1) == 0)
    goto LABEL_39;
  swift_beginAccess();
  v47 = *(_QWORD *)(a1 + 168);
  swift_beginAccess();
  v48 = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49 = sub_1BA6EB330(v47, v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v49 & 1) == 0)
    goto LABEL_39;
  v50 = *(unsigned __int8 *)(a1 + 184);
  v51 = *(unsigned __int8 *)(a2 + 184);
  if (v50 <= 0xFD)
  {
    v53 = *(_QWORD *)(a2 + 176);
    v75 = *(_QWORD *)(a1 + 176);
    v76 = v50;
    if (v51 > 0xFD)
      goto LABEL_39;
    v73 = v53;
    v74 = v51;
    if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v75, &v73) & 1) == 0)
      goto LABEL_39;
  }
  else if (v51 <= 0xFD)
  {
    goto LABEL_39;
  }
  swift_beginAccess();
  v54 = *(_QWORD *)(a1 + 192);
  v55 = *(_QWORD *)(a1 + 200);
  swift_beginAccess();
  v56 = *(_QWORD *)(a2 + 200);
  if (v55)
  {
    if (v56)
    {
      if (v54 != *(_QWORD *)(a2 + 192) || v55 != v56)
      {
        v57 = sub_1BB874398();
        v8 = 0;
        if ((v57 & 1) == 0)
          return v8 & 1;
      }
      goto LABEL_50;
    }
LABEL_39:
    v8 = 0;
    return v8 & 1;
  }
  if (v56)
    goto LABEL_39;
LABEL_50:
  v58 = *(_QWORD *)(a1 + 216);
  v59 = *(_QWORD *)(a2 + 216);
  v8 = (v58 | v59) == 0;
  if (v58 && v59)
  {
    if (*(_QWORD *)(a1 + 208) == *(_QWORD *)(a2 + 208) && v58 == v59)
      v8 = 1;
    else
      v8 = sub_1BB874398();
  }
  return v8 & 1;
}

uint64_t sub_1BAE66368(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v4 || (v5 = 0, (sub_1BB874398() & 1) != 0))
  {
    v6 = a1[4] == a2[4] && a1[5] == a2[5];
    if (v6 || (v5 = 0, (sub_1BB874398() & 1) != 0))
    {
      swift_beginAccess();
      v7 = a1[6];
      swift_beginAccess();
      v8 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9 = sub_1BA6EB330(v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
      {
        swift_beginAccess();
        v10 = a1[7];
        swift_beginAccess();
        v11 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v5 = sub_1BA8880B0(v10, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v5 = 0;
      }
    }
  }
  return v5 & 1;
}

uint64_t sub_1BAE664C0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v4 || (v5 = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v6 = a1[4];
    v7 = a1[5];
    swift_beginAccess();
    v8 = v6 == a2[4] && v7 == a2[5];
    if (v8 || (v5 = 0, (sub_1BB874398() & 1) != 0))
    {
      swift_beginAccess();
      v9 = a1[6];
      swift_beginAccess();
      v10 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_1BA6EB330(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
      {
        swift_beginAccess();
        v12 = a1[7];
        swift_beginAccess();
        v13 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v5 = sub_1BA8880B0(v12, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v5 = 0;
      }
    }
  }
  return v5 & 1;
}

uint64_t _s8NewsFeed28FormatScoreDataVisualizationC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  char v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v4 || (v5 = sub_1BB874398(), v6 = 0, (v5 & 1) != 0))
  {
    v7 = a1[4] == a2[4] && a1[5] == a2[5];
    if (v7 || (v8 = sub_1BB874398(), v6 = 0, (v8 & 1) != 0))
    {
      swift_beginAccess();
      v9 = a1[6];
      swift_beginAccess();
      v10 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_1BA6EB330(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        goto LABEL_16;
      swift_beginAccess();
      v12 = a1[7];
      swift_beginAccess();
      v13 = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1BA8880B0(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) != 0)
      {
        swift_beginAccess();
        v16 = a1[8];
        v15 = a1[9];
        swift_beginAccess();
        if (v16 == a2[8] && v15 == a2[9])
          v6 = 1;
        else
          v6 = sub_1BB874398();
      }
      else
      {
LABEL_16:
        v6 = 0;
      }
    }
  }
  return v6 & 1;
}

uint64_t _s8NewsFeed9FormatTagC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v4 || (v5 = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v6 = a1[4];
    swift_beginAccess();
    v7 = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_1BA6EB330(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
      swift_beginAccess();
      v9 = a1[5];
      swift_beginAccess();
      v10 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v5 = sub_1BA8880B0(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = 0;
    }
  }
  return v5 & 1;
}

uint64_t _s8NewsFeed20FormatSwitchNodeCaseC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD v9[3];

  v9[0] = *(_QWORD *)(a1 + 16);
  static FormatExpression.== infix(_:_:)((uint64_t)v9);
  if ((v4 & 1) != 0)
  {
    swift_beginAccess();
    v5 = *(_QWORD *)(a1 + 24);
    swift_beginAccess();
    v6 = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1BA883A18(v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed20FormatIssueCoverNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  unint64_t v40[3];
  unint64_t v41[3];
  uint64_t v42[3];
  uint64_t v43[6];
  _QWORD v44[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  v44[0] = *(_QWORD *)(a1 + 32);
  v43[3] = *(_QWORD *)(a2 + 32);
  static FormatSize.== infix(_:_:)((uint64_t)v44);
  if ((v8 & 1) == 0)
    goto LABEL_36;
  v9 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a2 + 40);
  if (v9)
  {
    if (!v7)
      return v7 & 1;
    v10 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v7 + 16);
    swift_beginAccess();
    v12 = *(_QWORD *)(v10 + 16);
    swift_beginAccess();
    v13 = *(_QWORD *)(v11 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA8583F8(v12, v13);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_36;
  }
  else if (v7)
  {
    goto LABEL_36;
  }
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v16 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BA882CE0(v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
    goto LABEL_36;
  v7 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (!v7)
      return v7 & 1;
    swift_retain();
    v18 = swift_retain();
    v19 = _s8NewsFeed25FormatIssueCoverNodeStyleC2eeoiySbAC_ACtFZ_0(v18, v7);
    swift_release();
    swift_release();
    if ((v19 & 1) == 0)
      goto LABEL_36;
  }
  else if (v7)
  {
    goto LABEL_36;
  }
  v7 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (!v7)
      return v7 & 1;
    swift_retain();
    v20 = swift_retain();
    v21 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v20, v7);
    swift_release();
    swift_release();
    if ((v21 & 1) == 0)
      goto LABEL_36;
  }
  else if (v7)
  {
    goto LABEL_36;
  }
  v43[0] = *(_QWORD *)(a1 + 72);
  v42[0] = *(_QWORD *)(a2 + 72);
  if ((static FormatIssueCoverContent.== infix(_:_:)(v43, v42) & 1) == 0)
    goto LABEL_36;
  swift_beginAccess();
  v22 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  if (v22 != *(_QWORD *)(a2 + 80))
    goto LABEL_36;
  swift_beginAccess();
  v41[0] = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v40[0] = *(_QWORD *)(a2 + 88);
  if ((static FormatVisibility.== infix(_:_:)(v41, v40) & 1) == 0)
    goto LABEL_36;
  swift_beginAccess();
  v23 = *(unsigned __int8 *)(a1 + 96);
  swift_beginAccess();
  if (v23 != *(unsigned __int8 *)(a2 + 96))
    goto LABEL_36;
  v24 = *(unsigned __int8 *)(a1 + 112);
  v25 = *(unsigned __int8 *)(a2 + 112);
  if (v24 > 0xFD)
  {
    if (v25 > 0xFD)
      goto LABEL_32;
LABEL_36:
    LOBYTE(v7) = 0;
    return v7 & 1;
  }
  v26 = *(_QWORD *)(a2 + 104);
  v38 = *(_QWORD *)(a1 + 104);
  v39 = v24;
  if (v25 > 0xFD)
    goto LABEL_36;
  v36 = v26;
  v37 = v25;
  if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v38, &v36) & 1) == 0)
    goto LABEL_36;
LABEL_32:
  swift_beginAccess();
  v27 = *(_QWORD *)(a1 + 120);
  swift_beginAccess();
  v28 = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = sub_1BA6EB330(v27, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v29 & 1) == 0)
    goto LABEL_36;
  v30 = 0x6874646977;
  v31 = *(unsigned __int8 *)(a2 + 128);
  if (*(_BYTE *)(a1 + 128))
  {
    if (*(_BYTE *)(a1 + 128) == 1)
    {
      v32 = 0xE600000000000000;
      v33 = 0x746867696568;
    }
    else
    {
      v32 = 0xE400000000000000;
      v33 = 1702521203;
    }
  }
  else
  {
    v32 = 0xE500000000000000;
    v33 = 0x6874646977;
  }
  if (v31)
  {
    if (v31 == 1)
    {
      v35 = 0xE600000000000000;
      v30 = 0x746867696568;
    }
    else
    {
      v35 = 0xE400000000000000;
      v30 = 1702521203;
    }
  }
  else
  {
    v35 = 0xE500000000000000;
  }
  if (v33 == v30 && v32 == v35)
  {
    swift_bridgeObjectRelease_n();
    LOBYTE(v7) = 1;
  }
  else
  {
    LOBYTE(v7) = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed20FormatBreakpointNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  _OWORD v15[2];
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = sub_1BB874398(), v8 = 0, (v7 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40))
    {
      if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
        || (v9 = sub_1BB874398(), v8 = 0, (v9 & 1) != 0))
      {
        v10 = *(_QWORD *)(a1 + 96);
        v11 = *(_OWORD *)(a1 + 80);
        v17[0] = *(_OWORD *)(a1 + 64);
        v17[1] = v11;
        v18 = v10;
        v12 = *(_QWORD *)(a2 + 96);
        v13 = *(_OWORD *)(a2 + 80);
        v15[0] = *(_OWORD *)(a2 + 64);
        v15[1] = v13;
        v16 = v12;
        v8 = static FormatSourceMapNode.== infix(_:_:)(v17, v15);
      }
    }
    else
    {
      v8 = 0;
    }
  }
  return v8 & 1;
}

uint64_t _s8NewsFeed19FormatStateViewNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25[3];
  unint64_t v26[18];
  _QWORD v27[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v27[0] = *(_QWORD *)(a1 + 32);
    swift_beginAccess();
    v26[15] = *(_QWORD *)(a2 + 32);
    static FormatSize.== infix(_:_:)((uint64_t)v27);
    if ((v8 & 1) == 0)
      goto LABEL_20;
    v9 = *(_QWORD *)(a1 + 40);
    v7 = *(_QWORD *)(a2 + 40);
    if (v9)
    {
      if (!v7)
        return v7 & 1;
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v7 + 16);
      swift_beginAccess();
      v12 = *(_QWORD *)(v10 + 16);
      swift_beginAccess();
      v13 = *(_QWORD *)(v11 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1BA8583F8(v12, v13);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
        goto LABEL_20;
    }
    else if (v7)
    {
      goto LABEL_20;
    }
    swift_beginAccess();
    v15 = *(_QWORD *)(a1 + 48);
    swift_beginAccess();
    v16 = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_1BA882CE0(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      goto LABEL_20;
    if (*(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56) && *(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64)
      || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
    {
      if ((sub_1BA88C7DC(*(_QWORD *)(a1 + 72), *(_QWORD *)(a2 + 72)) & 1) == 0)
        goto LABEL_20;
      swift_beginAccess();
      v18 = *(_QWORD *)(a1 + 80);
      swift_beginAccess();
      if (v18 != *(_QWORD *)(a2 + 80))
        goto LABEL_20;
      swift_beginAccess();
      v26[0] = *(_QWORD *)(a1 + 88);
      swift_beginAccess();
      v25[0] = *(_QWORD *)(a2 + 88);
      if ((static FormatVisibility.== infix(_:_:)(v26, v25) & 1) == 0)
        goto LABEL_20;
      swift_beginAccess();
      v19 = *(unsigned __int8 *)(a1 + 96);
      swift_beginAccess();
      if (v19 != *(unsigned __int8 *)(a2 + 96))
        goto LABEL_20;
      v7 = *(_QWORD *)(a2 + 104);
      if (*(_QWORD *)(a1 + 104))
      {
        if (!v7)
          return v7 & 1;
        swift_retain();
        v21 = swift_retain();
        v22 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v21, v7);
        swift_release();
        swift_release();
        if ((v22 & 1) == 0)
          goto LABEL_20;
LABEL_27:
        swift_beginAccess();
        v23 = *(_QWORD *)(a1 + 112);
        swift_beginAccess();
        v24 = *(_QWORD *)(a2 + 112);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LOBYTE(v7) = sub_1BA6EB330(v23, v24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v7 & 1;
      }
      if (!v7)
        goto LABEL_27;
LABEL_20:
      LOBYTE(v7) = 0;
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed19FormatAuxiliaryNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = sub_1BB874398(), v8 = 0, (v7 & 1) != 0))
  {
    swift_beginAccess();
    v9 = *(_QWORD *)(a1 + 32);
    swift_beginAccess();
    v10 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BA883A18(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_10;
    swift_beginAccess();
    v12 = *(_QWORD *)(a1 + 40);
    swift_beginAccess();
    v13 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA6EB330(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_10;
    swift_beginAccess();
    v15 = *(_QWORD *)(a1 + 48);
    swift_beginAccess();
    v16 = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_1BA883260(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
    {
      swift_beginAccess();
      v18 = *(_BYTE *)(a1 + 56);
      swift_beginAccess();
      v8 = v18 ^ *(_BYTE *)(a2 + 56) ^ 1;
    }
    else
    {
LABEL_10:
      v8 = 0;
    }
  }
  return v8 & 1;
}

uint64_t _s8NewsFeed19FormatAdMetricsNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  char v8;
  BOOL v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  unint64_t v25[3];
  unint64_t v26[18];
  _QWORD v27[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = sub_1BB874398(), v8 = 0, (v7 & 1) != 0))
  {
    v9 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    if (v9 || (v10 = sub_1BB874398(), v8 = 0, (v10 & 1) != 0))
    {
      v27[0] = *(_QWORD *)(a1 + 48);
      v26[15] = *(_QWORD *)(a2 + 48);
      static FormatSize.== infix(_:_:)((uint64_t)v27);
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(a1 + 56);
        v13 = *(_QWORD *)(a2 + 56);
        if (v12)
        {
          if (!v13)
            goto LABEL_21;
          v14 = *(_QWORD *)(v12 + 16);
          v15 = *(_QWORD *)(v13 + 16);
          swift_beginAccess();
          v16 = *(_QWORD *)(v14 + 16);
          swift_beginAccess();
          v17 = *(_QWORD *)(v15 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v18 = sub_1BA8583F8(v16, v17);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
            goto LABEL_21;
        }
        else if (v13)
        {
          goto LABEL_21;
        }
        swift_beginAccess();
        v19 = *(_QWORD *)(a1 + 64);
        swift_beginAccess();
        v20 = *(_QWORD *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = sub_1BA882CE0(v19, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
        {
          swift_beginAccess();
          v22 = *(_QWORD *)(a1 + 72);
          swift_beginAccess();
          if (v22 == *(_QWORD *)(a2 + 72))
          {
            swift_beginAccess();
            v26[0] = *(_QWORD *)(a1 + 80);
            swift_beginAccess();
            v25[0] = *(_QWORD *)(a2 + 80);
            if ((static FormatVisibility.== infix(_:_:)(v26, v25) & 1) != 0)
            {
              swift_beginAccess();
              v23 = *(_BYTE *)(a1 + 88);
              swift_beginAccess();
              v8 = v23 ^ *(_BYTE *)(a2 + 88) ^ 1;
              return v8 & 1;
            }
          }
        }
      }
LABEL_21:
      v8 = 0;
    }
  }
  return v8 & 1;
}

uint64_t _s8NewsFeed18FormatWebEmbedNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  unint64_t v40[3];
  unint64_t v41[3];
  unint64_t v42[3];
  uint64_t v43[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  v43[0] = *(_QWORD *)(a1 + 32);
  v42[0] = *(_QWORD *)(a2 + 32);
  if ((static FormatWebEmbedNodeContent.== infix(_:_:)(v43, v42) & 1) == 0)
  {
LABEL_46:
    LOBYTE(v7) = 0;
    return v7 & 1;
  }
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a2 + 48);
  if (!v8)
  {
    if (v9)
      goto LABEL_46;
    goto LABEL_14;
  }
  if (!v9)
    goto LABEL_46;
  if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && v8 == v9 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
  {
LABEL_14:
    v10 = *(_QWORD *)(a1 + 56);
    v7 = *(_QWORD *)(a2 + 56);
    if (v10)
    {
      if (!v7)
        return v7 & 1;
      swift_beginAccess();
      v11 = *(_QWORD *)(v10 + 16);
      swift_beginAccess();
      v12 = *(_QWORD *)(v7 + 16);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_1BA858CBC(v11, v12);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
        goto LABEL_46;
    }
    else if (v7)
    {
      goto LABEL_46;
    }
    v43[0] = *(_QWORD *)(a1 + 64);
    v42[0] = *(_QWORD *)(a2 + 64);
    static FormatSize.== infix(_:_:)((uint64_t)v43);
    if ((v14 & 1) == 0)
      goto LABEL_46;
    v15 = *(_QWORD *)(a1 + 72);
    v7 = *(_QWORD *)(a2 + 72);
    if (v15)
    {
      if (!v7)
        return v7 & 1;
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v7 + 16);
      swift_beginAccess();
      v18 = *(_QWORD *)(v16 + 16);
      swift_beginAccess();
      v19 = *(_QWORD *)(v17 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_1BA8583F8(v18, v19);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0)
        goto LABEL_46;
    }
    else if (v7)
    {
      goto LABEL_46;
    }
    swift_beginAccess();
    v21 = *(_QWORD *)(a1 + 80);
    swift_beginAccess();
    v22 = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_1BA882CE0(v21, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      goto LABEL_46;
    v7 = *(_QWORD *)(a2 + 88);
    if (*(_QWORD *)(a1 + 88))
    {
      if (!v7)
        return v7 & 1;
      swift_retain();
      v24 = swift_retain();
      v25 = _s8NewsFeed23FormatWebEmbedNodeStyleC2eeoiySbAC_ACtFZ_0(v24, v7);
      swift_release();
      swift_release();
      if ((v25 & 1) == 0)
        goto LABEL_46;
    }
    else if (v7)
    {
      goto LABEL_46;
    }
    swift_beginAccess();
    v26 = *(_QWORD *)(a1 + 96);
    swift_beginAccess();
    if (v26 != *(_QWORD *)(a2 + 96))
      goto LABEL_46;
    swift_beginAccess();
    v41[0] = *(_QWORD *)(a1 + 104);
    swift_beginAccess();
    v40[0] = *(_QWORD *)(a2 + 104);
    if ((static FormatVisibility.== infix(_:_:)(v41, v40) & 1) == 0)
      goto LABEL_46;
    swift_beginAccess();
    v27 = *(unsigned __int8 *)(a1 + 112);
    swift_beginAccess();
    if (v27 != *(unsigned __int8 *)(a2 + 112))
      goto LABEL_46;
    v28 = *(unsigned __int8 *)(a1 + 128);
    v29 = *(unsigned __int8 *)(a2 + 128);
    if (v28 <= 0xFD)
    {
      v30 = *(_QWORD *)(a2 + 120);
      v38 = *(_QWORD *)(a1 + 120);
      v39 = v28;
      if (v29 > 0xFD)
        goto LABEL_46;
      v36 = v30;
      v37 = v29;
      if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v38, &v36) & 1) == 0)
        goto LABEL_46;
    }
    else if (v29 <= 0xFD)
    {
      goto LABEL_46;
    }
    v31 = *(_QWORD *)(a1 + 144);
    v32 = *(_QWORD *)(a2 + 144);
    if (v31)
    {
      if (!v32)
        goto LABEL_46;
      if (*(_QWORD *)(a1 + 136) != *(_QWORD *)(a2 + 136) || v31 != v32)
      {
        LOBYTE(v7) = 0;
        if ((sub_1BB874398() & 1) == 0)
          return v7 & 1;
      }
    }
    else if (v32)
    {
      goto LABEL_46;
    }
    swift_beginAccess();
    v34 = *(_QWORD *)(a1 + 152);
    swift_beginAccess();
    v35 = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v7) = sub_1BA6EB330(v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed18FormatVariableNodeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v8 = a1[4];
    swift_beginAccess();
    v9 = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1BA88CE30(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed18FormatGeometryNodeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  v8 = a1[5];
  v9 = *(_QWORD *)(a2 + 40);
  if (!v8)
  {
    if (v9)
      goto LABEL_15;
    goto LABEL_13;
  }
  if (!v9)
    goto LABEL_15;
  if (a1[4] == *(_QWORD *)(a2 + 32) && v8 == v9 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
LABEL_13:
    swift_beginAccess();
    v10 = (_QWORD *)a1[6];
    swift_beginAccess();
    if ((sub_1BA6A45BC(v10, *(_QWORD **)(a2 + 48)) & 1) != 0)
    {
      swift_beginAccess();
      v11 = a1[7];
      swift_beginAccess();
      v12 = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_1BA883A18(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
    }
LABEL_15:
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed18FormatContentThemeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = a1[2];
  v5 = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA888320(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0 && (sub_1BA8880B0(a1[3], a2[3]) & 1) != 0)
    return sub_1BA6EB330(a1[4], a2[4]);
  else
    return 0;
}

uint64_t _s8NewsFeed17FormatOptionsNodeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v8 = a1[4];
    swift_beginAccess();
    v9 = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_1BA88CE30(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
    {
      swift_beginAccess();
      v11 = a1[5];
      swift_beginAccess();
      v12 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_1BA883A18(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed16FormatRepeatNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  v8 = *(_BYTE *)(a1 + 40);
  v23 = *(_QWORD *)(a1 + 32);
  v24 = v8;
  v9 = *(_BYTE *)(a2 + 40);
  v21 = *(_QWORD *)(a2 + 32);
  v22 = v9;
  if ((_s8NewsFeed25FormatRepeatNodeIterationO2eeoiySbAC_ACtFZ_0((uint64_t)&v23, (uint64_t)&v21) & 1) == 0)
  {
LABEL_29:
    LOBYTE(v7) = 0;
    return v7 & 1;
  }
  v10 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 48);
  if (v10)
  {
    if (!v7)
      return v7 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BA882E70(v10, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_29;
  }
  else if (v7)
  {
    goto LABEL_29;
  }
  v12 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a2 + 56);
  if (v12)
  {
    if (!v7)
      return v7 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BA882E70(v12, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
      goto LABEL_29;
  }
  else if (v7)
  {
    goto LABEL_29;
  }
  v14 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a2 + 64);
  if (v14)
  {
    if (!v7)
      return v7 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1BA882E70(v14, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      goto LABEL_29;
  }
  else if (v7)
  {
    goto LABEL_29;
  }
  v16 = *(_QWORD *)(a1 + 80);
  v17 = *(_QWORD *)(a2 + 80);
  if (!v16)
  {
    if (!v17)
    {
LABEL_31:
      swift_beginAccess();
      v19 = *(_QWORD *)(a1 + 88);
      swift_beginAccess();
      v20 = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LOBYTE(v7) = sub_1BA883A18(v19, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
    }
    goto LABEL_29;
  }
  if (!v17)
    goto LABEL_29;
  if (*(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72) && v16 == v17)
    goto LABEL_31;
  LOBYTE(v7) = 0;
  if ((sub_1BB874398() & 1) != 0)
    goto LABEL_31;
  return v7 & 1;
}

uint64_t _s8NewsFeed16FormatPuzzleTypeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _BYTE v27[24];

  sub_1BA4CDF6C(0, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v27[-v5];
  v7 = type metadata accessor for FormatPuzzleType.Overrides(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v27[-v11];
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
    || (v13 = 0, (sub_1BB874398() & 1) != 0))
  {
    v14 = a1 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
    swift_beginAccess();
    sub_1BAE75514(v14, (uint64_t)v6, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy);
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v12, type metadata accessor for FormatPuzzleType.Overrides);
    v15 = a2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
    swift_beginAccess();
    sub_1BAE75514(v15, (uint64_t)v6, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy);
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v9, type metadata accessor for FormatPuzzleType.Overrides);
    v16 = static FormatPuzzleType.Overrides.== infix(_:_:)(v12, v9);
    sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatPuzzleType.Overrides);
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatPuzzleType.Overrides);
    if ((v16 & 1) == 0)
      goto LABEL_7;
    v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
    swift_beginAccess();
    v18 = *v17;
    v19 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__selectors);
    swift_beginAccess();
    v20 = *v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1BA6EB330(v18, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      v22 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
      swift_beginAccess();
      v23 = *v22;
      v24 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__properties);
      swift_beginAccess();
      v25 = *v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_1BA8880B0(v23, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_7:
      v13 = 0;
    }
  }
  return v13 & 1;
}

uint64_t _s8NewsFeed16FormatCustomNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  char v8;
  BOOL v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  unint64_t v31[3];
  unint64_t v32[18];
  _QWORD v33[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = sub_1BB874398(), v8 = 0, (v7 & 1) != 0))
  {
    v9 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    if (v9 || (v10 = sub_1BB874398(), v8 = 0, (v10 & 1) != 0))
    {
      v33[0] = *(_QWORD *)(a1 + 56);
      v32[15] = *(_QWORD *)(a2 + 56);
      static FormatSize.== infix(_:_:)((uint64_t)v33);
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(a1 + 64);
        v13 = *(_QWORD *)(a2 + 64);
        if (v12)
        {
          if (!v13)
            goto LABEL_31;
          v14 = *(_QWORD *)(v12 + 16);
          v15 = *(_QWORD *)(v13 + 16);
          swift_beginAccess();
          v16 = *(_QWORD *)(v14 + 16);
          swift_beginAccess();
          v17 = *(_QWORD *)(v15 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v18 = sub_1BA8583F8(v16, v17);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
            goto LABEL_31;
        }
        else if (v13)
        {
          goto LABEL_31;
        }
        swift_beginAccess();
        v19 = *(_QWORD *)(a1 + 72);
        swift_beginAccess();
        v20 = *(_QWORD *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = sub_1BA882CE0(v19, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
        {
          v22 = *(_QWORD *)(a2 + 80);
          if (*(_QWORD *)(a1 + 80))
          {
            if (!v22)
              goto LABEL_31;
            type metadata accessor for FormatCustomNodeStyle();
            swift_retain();
            v23 = swift_retain();
            v24 = _s8NewsFeed21FormatCustomNodeStyleC2eeoiySbAC_ACtFZ_0(v23, v22);
            swift_release();
            swift_release();
            if ((v24 & 1) == 0)
              goto LABEL_31;
          }
          else if (v22)
          {
            goto LABEL_31;
          }
          v25 = *(_QWORD *)(a2 + 88);
          if (*(_QWORD *)(a1 + 88))
          {
            if (!v25)
              goto LABEL_31;
            swift_retain();
            v26 = swift_retain();
            v27 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v26, v25);
            swift_release();
            swift_release();
            if ((v27 & 1) == 0)
              goto LABEL_31;
          }
          else if (v25)
          {
            goto LABEL_31;
          }
          swift_beginAccess();
          v28 = *(_QWORD *)(a1 + 96);
          swift_beginAccess();
          if (v28 == *(_QWORD *)(a2 + 96))
          {
            swift_beginAccess();
            v32[0] = *(_QWORD *)(a1 + 104);
            swift_beginAccess();
            v31[0] = *(_QWORD *)(a2 + 104);
            if ((static FormatVisibility.== infix(_:_:)(v32, v31) & 1) != 0)
            {
              swift_beginAccess();
              v29 = *(_BYTE *)(a1 + 112);
              swift_beginAccess();
              v8 = v29 ^ *(_BYTE *)(a2 + 112) ^ 1;
              return v8 & 1;
            }
          }
        }
      }
LABEL_31:
      v8 = 0;
    }
  }
  return v8 & 1;
}

BOOL _s8NewsFeed15FormatVideoNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  int v27;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int16 v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  __int16 v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned __int8 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 v109;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    v84 = *(_QWORD *)(a1 + 32);
    v70 = *(_QWORD *)(a2 + 32);
    static FormatSize.== infix(_:_:)((uint64_t)&v84);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(a1 + 40);
      v10 = *(_QWORD *)(a2 + 40);
      if (v9)
      {
        if (!v10)
          return 0;
        v11 = *(_QWORD *)(v9 + 16);
        v12 = *(_QWORD *)(v10 + 16);
        swift_beginAccess();
        v13 = *(_QWORD *)(v11 + 16);
        swift_beginAccess();
        v14 = *(_QWORD *)(v12 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15 = sub_1BA8583F8(v13, v14);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
          return 0;
      }
      else if (v10)
      {
        return 0;
      }
      swift_beginAccess();
      v16 = *(_QWORD *)(a1 + 48);
      swift_beginAccess();
      v17 = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = sub_1BA882CE0(v16, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
      {
        v19 = *(_QWORD *)(a2 + 56);
        if (*(_QWORD *)(a1 + 56))
        {
          if (!v19)
            return 0;
          type metadata accessor for FormatVideoNodeStyle();
          swift_retain();
          v20 = swift_retain();
          v21 = sub_1BAE6C4F8(v20, v19, sub_1BA88F024);
          swift_release();
          swift_release();
          if ((v21 & 1) == 0)
            return 0;
        }
        else if (v19)
        {
          return 0;
        }
        v22 = *(_QWORD *)(a2 + 64);
        if (*(_QWORD *)(a1 + 64))
        {
          if (!v22)
            return 0;
          swift_retain();
          v23 = swift_retain();
          v24 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v23, v22);
          swift_release();
          swift_release();
          if ((v24 & 1) == 0)
            return 0;
        }
        else if (v22)
        {
          return 0;
        }
        v84 = *(_QWORD *)(a1 + 72);
        v70 = *(_QWORD *)(a2 + 72);
        static FormatVideoNodeContent.== infix(_:_:)((uint64_t)&v84);
        if ((v25 & 1) == 0)
          return 0;
        swift_beginAccess();
        v26 = *(_QWORD *)(a1 + 80);
        swift_beginAccess();
        if (v26 != *(_QWORD *)(a2 + 80))
          return 0;
        swift_beginAccess();
        v84 = *(_QWORD *)(a1 + 88);
        swift_beginAccess();
        v70 = *(_QWORD *)(a2 + 88);
        if ((static FormatVisibility.== infix(_:_:)((unint64_t *)&v84, (unint64_t *)&v70) & 1) == 0)
          return 0;
        swift_beginAccess();
        v27 = *(unsigned __int8 *)(a1 + 96);
        swift_beginAccess();
        if (v27 != *(unsigned __int8 *)(a2 + 96))
          return 0;
        v29 = *(unsigned __int8 *)(a1 + 112);
        v30 = *(unsigned __int8 *)(a2 + 112);
        if (v29 <= 0xFD)
        {
          v31 = *(_QWORD *)(a2 + 104);
          v84 = *(_QWORD *)(a1 + 104);
          LOBYTE(v85) = v29;
          if (v30 <= 0xFD)
          {
            v70 = v31;
            LOBYTE(v71) = v30;
            if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v84, &v70) & 1) != 0)
            {
LABEL_34:
              swift_beginAccess();
              v32 = *(_QWORD *)(a1 + 120);
              swift_beginAccess();
              v33 = *(_QWORD *)(a2 + 120);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v34 = sub_1BA6EB330(v32, v33);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v34 & 1) != 0)
              {
                v35 = *(_QWORD *)(a1 + 152);
                v63 = *(_QWORD *)(a1 + 136);
                v64 = *(_QWORD *)(a1 + 144);
                v58 = *(_QWORD *)(a1 + 128);
                v59 = *(_QWORD *)(a1 + 168);
                v65 = *(_QWORD *)(a1 + 176);
                v66 = *(_QWORD *)(a1 + 184);
                v67 = *(_QWORD *)(a1 + 192);
                v68 = *(_QWORD *)(a1 + 160);
                v61 = *(_QWORD *)(a1 + 208);
                v62 = *(_QWORD *)(a1 + 200);
                v60 = *(_QWORD *)(a1 + 216);
                v69 = *(_BYTE *)(a1 + 224);
                v39 = *(_QWORD *)(a2 + 128);
                v36 = *(_QWORD *)(a2 + 152);
                v50 = *(_QWORD *)(a2 + 160);
                v52 = *(_QWORD *)(a2 + 168);
                v54 = *(_QWORD *)(a2 + 176);
                v56 = *(_QWORD *)(a2 + 184);
                v37 = *(_QWORD *)(a2 + 200);
                v41 = *(_QWORD *)(a2 + 136);
                v42 = *(_QWORD *)(a2 + 192);
                v48 = *(_QWORD *)(a2 + 208);
                v44 = *(_QWORD *)(a2 + 144);
                v46 = *(_QWORD *)(a2 + 216);
                v40 = *(_BYTE *)(a2 + 224);
                if (v35 == 254)
                {
                  if (*(_QWORD *)(a2 + 152) == 254)
                    return 1;
                }
                else
                {
                  v84 = *(_QWORD *)(a1 + 128);
                  v85 = v63;
                  v86 = v64;
                  v87 = v35;
                  v88 = v68;
                  v89 = v59;
                  v90 = v65;
                  v91 = v66;
                  v92 = v67;
                  v93 = v62;
                  v94 = v61;
                  v95 = v60;
                  v96 = v69;
                  if (v36 != 254)
                  {
                    LOBYTE(v70) = v39;
                    v71 = v41;
                    v72 = v44;
                    v73 = v36;
                    v74 = v50;
                    v75 = v52;
                    v76 = v54;
                    v77 = v56;
                    v78 = v42;
                    v79 = v37;
                    v80 = BYTE2(v37);
                    v81 = v48;
                    v82 = v46;
                    v83 = v40;
                    sub_1BAC68A98(v58, v63, v64, v35, v68, v59, v65, v66, v67, v62, v61, v60, v69, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA796C58);
                    sub_1BA796C58(v63, v64, v35);
                    sub_1BA796C58(v68, v59, v65);
                    sub_1BA796C58(v66, v67, v62);
                    sub_1BA796C58(v61, v60, v69);
                    v7 = _s8NewsFeed21FormatVideoPropertiesV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v84, (unsigned __int8 *)&v70);
                    v45 = v89;
                    v47 = v88;
                    v49 = v92;
                    v51 = v91;
                    v55 = v95;
                    v57 = v94;
                    v38 = v90;
                    v43 = v93;
                    v53 = v96;
                    sub_1BA796C70(v85, v86, v87);
                    sub_1BA796C70(v47, v45, v38);
                    sub_1BA796C70(v51, v49, v43);
                    sub_1BA796C70(v57, v55, v53);
                    sub_1BAC68A98(v58, v63, v64, v35, v68, v59, v65, v66, v67, v62, v61, v60, v69, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA796C70);
                    return v7;
                  }
                  sub_1BA796C58(v63, v64, v35);
                  sub_1BA796C58(v68, v59, v65);
                  sub_1BA796C58(v66, v67, v62);
                  sub_1BA796C58(v61, v60, v69);
                  sub_1BA796C58(v63, v64, v35);
                  sub_1BA796C58(v68, v59, v65);
                  sub_1BA796C58(v66, v67, v62);
                  sub_1BA796C58(v61, v60, v69);
                  sub_1BA796C70(v63, v64, v35);
                  sub_1BA796C70(v68, v59, v65);
                  sub_1BA796C70(v66, v67, v62);
                  sub_1BA796C70(v61, v60, v69);
                }
                v84 = v58;
                v85 = v63;
                v86 = v64;
                v87 = v35;
                v88 = v68;
                v89 = v59;
                v90 = v65;
                v91 = v66;
                v92 = v67;
                v93 = v62;
                v94 = v61;
                v95 = v60;
                v96 = v69;
                v97 = v39;
                v98 = v41;
                v99 = v44;
                v100 = v36;
                v101 = v50;
                v102 = v52;
                v103 = v54;
                v104 = v56;
                v105 = v42;
                v106 = v37;
                v107 = v48;
                v108 = v46;
                v109 = v40;
                sub_1BAC68A98(v39, v41, v44, v36, v50, v52, v54, v56, v42, v37, v48, v46, v40, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA796C58);
                sub_1BAEE79B4((uint64_t)&v84);
              }
            }
          }
        }
        else if (v30 > 0xFD)
        {
          goto LABEL_34;
        }
      }
    }
    return 0;
  }
  return v7;
}

uint64_t _s8NewsFeed15FormatResetNodeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v8 = a1[4];
    swift_beginAccess();
    v9 = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_1BA6EB330(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
      goto LABEL_9;
    swift_beginAccess();
    v11 = a1[5];
    swift_beginAccess();
    v12 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA85A7D0(v11, v12);
    v14 = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      swift_beginAccess();
      v15 = a1[6];
      swift_beginAccess();
      v16 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_1BA883A18(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_9:
      v7 = 0;
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed19FormatGroupNodeMaskC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[3];

  v4 = a2[2];
  if (a1[2])
  {
    if (!v4)
      goto LABEL_13;
    swift_retain();
    v5 = swift_retain();
    v6 = _s8NewsFeed24FormatGroupNodeMaskStyleC2eeoiySbAC_ACtFZ_0(v5, v4);
    swift_release();
    swift_release();
    if ((v6 & 1) == 0)
      goto LABEL_13;
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  v7 = a2[3];
  if (!a1[3])
  {
    if (!v7)
      goto LABEL_11;
LABEL_13:
    v13 = 0;
    return v13 & 1;
  }
  if (!v7)
    goto LABEL_13;
  swift_retain();
  v8 = swift_retain();
  v9 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v8, v7);
  swift_release();
  swift_release();
  if ((v9 & 1) == 0)
    goto LABEL_13;
LABEL_11:
  swift_beginAccess();
  v15[0] = a1[4];
  swift_beginAccess();
  static FormatSize.== infix(_:_:)((uint64_t)v15);
  if ((v10 & 1) == 0)
    goto LABEL_13;
  swift_beginAccess();
  v11 = a1[5];
  swift_beginAccess();
  v12 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA882CE0(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

uint64_t _s8NewsFeed15FormatGroupNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  unint64_t v41[3];
  unint64_t v42[18];
  _QWORD v43[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  swift_beginAccess();
  v43[0] = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  v42[15] = *(_QWORD *)(a2 + 32);
  static FormatSize.== infix(_:_:)((uint64_t)v43);
  if ((v8 & 1) == 0)
    goto LABEL_16;
  v9 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a2 + 40);
  if (v9)
  {
    if (!v7)
      return v7 & 1;
    v10 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v7 + 16);
    swift_beginAccess();
    v12 = *(_QWORD *)(v10 + 16);
    swift_beginAccess();
    v13 = *(_QWORD *)(v11 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA8583F8(v12, v13);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_16;
  }
  else if (v7)
  {
    goto LABEL_16;
  }
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v16 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BA882CE0(v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
    goto LABEL_16;
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  if (v18 != *(_QWORD *)(a2 + 56))
    goto LABEL_16;
  swift_beginAccess();
  v42[0] = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  v41[0] = *(_QWORD *)(a2 + 64);
  if ((static FormatVisibility.== infix(_:_:)(v42, v41) & 1) == 0)
    goto LABEL_16;
  swift_beginAccess();
  v19 = *(unsigned __int8 *)(a1 + 72);
  swift_beginAccess();
  if (v19 != *(unsigned __int8 *)(a2 + 72))
    goto LABEL_16;
  v7 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (!v7)
      return v7 & 1;
    swift_retain();
    v21 = swift_retain();
    v22 = _s8NewsFeed20FormatGroupNodeStyleC2eeoiySbAC_ACtFZ_0(v21, v7);
    swift_release();
    swift_release();
    if ((v22 & 1) == 0)
      goto LABEL_16;
  }
  else if (v7)
  {
    goto LABEL_16;
  }
  swift_beginAccess();
  v23 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v24 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = sub_1BA883A18(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
    goto LABEL_16;
  v26 = *(unsigned __int8 *)(a1 + 104);
  v27 = *(unsigned __int8 *)(a2 + 104);
  if (v26 <= 0xFD)
  {
    v28 = *(_QWORD *)(a2 + 96);
    v39 = *(_QWORD *)(a1 + 96);
    v40 = v26;
    if (v27 > 0xFD)
      goto LABEL_16;
    v37 = v28;
    v38 = v27;
    if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v39, &v37) & 1) == 0)
      goto LABEL_16;
  }
  else if (v27 <= 0xFD)
  {
    goto LABEL_16;
  }
  swift_beginAccess();
  v29 = *(_QWORD *)(a1 + 112);
  swift_beginAccess();
  v30 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = sub_1BA6EB330(v29, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
    goto LABEL_16;
  v7 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120))
  {
    if (!v7)
      return v7 & 1;
    swift_retain();
    v32 = swift_retain();
    v33 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v32, v7);
    swift_release();
    swift_release();
    if ((v33 & 1) == 0)
      goto LABEL_16;
    goto LABEL_35;
  }
  if (v7)
  {
LABEL_16:
    LOBYTE(v7) = 0;
    return v7 & 1;
  }
LABEL_35:
  swift_beginAccess();
  v34 = *(_QWORD *)(a1 + 128);
  swift_beginAccess();
  v35 = *(_QWORD *)(a2 + 128);
  LOBYTE(v7) = (v34 | v35) == 0;
  if (v34 && v35)
  {
    swift_retain();
    v36 = (_QWORD *)swift_retain();
    LOBYTE(v7) = _s8NewsFeed19FormatGroupNodeMaskC2eeoiySbAC_ACtFZ_0(v36, (_QWORD *)v35);
    swift_release();
    swift_release();
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed15FormatFrameNodeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    v12[0] = a1[4];
    static FormatSize.== infix(_:_:)((uint64_t)v12);
    if ((v8 & 1) != 0)
    {
      swift_beginAccess();
      v9 = a1[5];
      swift_beginAccess();
      v10 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_1BA882CE0(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed15FormatBlockNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    if ((swift_beginAccess(),
          v8 = *(_QWORD *)(a1 + 32),
          v9 = *(_QWORD *)(a1 + 40),
          swift_beginAccess(),
          v8 == *(_QWORD *)(a2 + 32))
      && v9 == *(_QWORD *)(a2 + 40)
      || (v7 = 0, (sub_1BB874398() & 1) != 0))
    {
      swift_beginAccess();
      v10 = *(unsigned __int8 *)(a1 + 48);
      swift_beginAccess();
      if (v10 != *(unsigned __int8 *)(a2 + 48))
        goto LABEL_12;
      swift_beginAccess();
      v11 = *(_QWORD *)(a1 + 56);
      swift_beginAccess();
      v12 = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_1BA883260(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
      {
        swift_beginAccess();
        v14 = *(_QWORD *)(a1 + 64);
        swift_beginAccess();
        v15 = *(_QWORD *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v7 = sub_1BA6EB330(v14, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_12:
        v7 = 0;
      }
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed14FormatMicaNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  BOOL v20;
  float v21;
  int v22;
  float v23;
  int v24;
  uint64_t v25;
  int v26;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[7];
  _OWORD v34[2];
  _OWORD v35[7];
  _OWORD v36[2];
  _OWORD v37[7];
  _OWORD v38[2];
  _OWORD v39[7];
  _OWORD v40[2];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[2];
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  unint64_t v53[3];
  unint64_t v54[3];
  uint64_t v55[18];
  uint64_t v56;
  _BYTE v57[144];
  _BYTE v58[144];
  uint64_t v59[18];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
  {
    v55[0] = *(_QWORD *)(a1 + 32);
    v59[0] = *(_QWORD *)(a2 + 32);
    static FormatSize.== infix(_:_:)((uint64_t)v55);
    if ((v8 & 1) == 0)
      goto LABEL_46;
    v9 = *(_QWORD *)(a1 + 40);
    v7 = *(_QWORD *)(a2 + 40);
    if (v9)
    {
      if (!v7)
        return v7 & 1;
      v10 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v7 + 16);
      swift_beginAccess();
      v12 = *(_QWORD *)(v10 + 16);
      swift_beginAccess();
      v13 = *(_QWORD *)(v11 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1BA8583F8(v12, v13);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
        goto LABEL_46;
    }
    else if (v7)
    {
      goto LABEL_46;
    }
    swift_beginAccess();
    v15 = *(_QWORD *)(a1 + 48);
    swift_beginAccess();
    v16 = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_1BA882CE0(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
      goto LABEL_46;
    v7 = *(_QWORD *)(a2 + 56);
    if (!*(_QWORD *)(a1 + 56))
    {
      if (v7)
        goto LABEL_46;
      goto LABEL_18;
    }
    if (v7)
    {
      swift_retain();
      v18 = swift_retain();
      v19 = _s8NewsFeed19FormatMicaNodeStyleC2eeoiySbAC_ACtFZ_0(v18, v7);
      swift_release();
      swift_release();
      if ((v19 & 1) == 0)
        goto LABEL_46;
LABEL_18:
      v55[0] = *(_QWORD *)(a1 + 64);
      v59[0] = *(_QWORD *)(a2 + 64);
      if ((static FormatMicaNodeContent.== infix(_:_:)((unint64_t *)v55, (unint64_t *)v59) & 1) == 0)
        goto LABEL_46;
      sub_1BA6A09F0(a1 + 72, (uint64_t)v57, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
      sub_1BA6A09F0(a2 + 72, (uint64_t)v58, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
      sub_1BA6A09F0((uint64_t)v57, (uint64_t)v59, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
      if (sub_1BA896370(v59) == 1)
      {
        sub_1BA6A09F0((uint64_t)v58, (uint64_t)v55, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
        if (sub_1BA896370(v55) == 1)
          goto LABEL_26;
      }
      else
      {
        sub_1BA6A09F0((uint64_t)v57, (uint64_t)&v41, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
        sub_1BA6A09F0((uint64_t)v58, (uint64_t)v55, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
        if (sub_1BA896370(v55) != 1)
        {
          sub_1BA6A09F0((uint64_t)v58, (uint64_t)v35, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          v33[6] = v35[6];
          v34[0] = v36[0];
          *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v36 + 9);
          v33[2] = v35[2];
          v33[3] = v35[3];
          v33[4] = v35[4];
          v33[5] = v35[5];
          v33[0] = v35[0];
          v33[1] = v35[1];
          sub_1BA6A09F0((uint64_t)v57, (uint64_t)v37, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
          sub_1BA8966F8((uint64_t)v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
          sub_1BA89652C((uint64_t)v37);
          v20 = _s8NewsFeed17FormatMediaTimingV2eeoiySbAC_ACtFZ_0((uint64_t)&v41, (uint64_t)v33);
          v39[6] = v47;
          v40[0] = v48[0];
          *(_OWORD *)((char *)v40 + 9) = *(_OWORD *)((char *)v48 + 9);
          v39[2] = v43;
          v39[3] = v44;
          v39[4] = v45;
          v39[5] = v46;
          v39[0] = v41;
          v39[1] = v42;
          sub_1BA896610((uint64_t)v39);
          sub_1BA8966F8((uint64_t)v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
          if (!v20)
            goto LABEL_46;
LABEL_26:
          swift_beginAccess();
          v21 = *(float *)(a1 + 212);
          v22 = *(unsigned __int8 *)(a1 + 216);
          swift_beginAccess();
          v23 = *(float *)(a2 + 212);
          v24 = *(unsigned __int8 *)(a2 + 216);
          if (v22)
          {
            if (v22 != 1)
            {
              if (v21 == 0.0)
              {
                if (v24 != 2 || v23 != 0.0)
                  goto LABEL_46;
              }
              else if (LODWORD(v21) == 1)
              {
                if (v24 != 2 || LODWORD(v23) != 1)
                  goto LABEL_46;
              }
              else if (v24 != 2 || LODWORD(v23) != 2)
              {
                goto LABEL_46;
              }
LABEL_43:
              swift_beginAccess();
              v25 = *(_QWORD *)(a1 + 224);
              swift_beginAccess();
              if (v25 != *(_QWORD *)(a2 + 224))
                goto LABEL_46;
              swift_beginAccess();
              v54[0] = *(_QWORD *)(a1 + 232);
              swift_beginAccess();
              v53[0] = *(_QWORD *)(a2 + 232);
              if ((static FormatVisibility.== infix(_:_:)(v54, v53) & 1) == 0)
                goto LABEL_46;
              swift_beginAccess();
              v26 = *(unsigned __int8 *)(a1 + 240);
              swift_beginAccess();
              if (v26 != *(unsigned __int8 *)(a2 + 240))
                goto LABEL_46;
              v28 = *(unsigned __int8 *)(a1 + 256);
              v29 = *(unsigned __int8 *)(a2 + 256);
              if (v28 <= 0xFD)
              {
                v30 = *(_QWORD *)(a2 + 248);
                v51 = *(_QWORD *)(a1 + 248);
                v52 = v28;
                if (v29 > 0xFD)
                  goto LABEL_46;
                v49 = v30;
                v50 = v29;
                if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v51, &v49) & 1) == 0)
                  goto LABEL_46;
LABEL_53:
                swift_beginAccess();
                v31 = *(_QWORD *)(a1 + 264);
                swift_beginAccess();
                v32 = *(_QWORD *)(a2 + 264);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                LOBYTE(v7) = sub_1BA6EB330(v31, v32);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return v7 & 1;
              }
              if (v29 > 0xFD)
                goto LABEL_53;
LABEL_46:
              LOBYTE(v7) = 0;
              return v7 & 1;
            }
            if (v24 != 1)
              goto LABEL_46;
          }
          else if (*(_BYTE *)(a2 + 216))
          {
            goto LABEL_46;
          }
          if (v21 != v23)
            goto LABEL_46;
          goto LABEL_43;
        }
        v37[6] = v47;
        v38[0] = v48[0];
        *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)((char *)v48 + 9);
        v37[2] = v43;
        v37[3] = v44;
        v37[4] = v45;
        v37[5] = v46;
        v37[0] = v41;
        v37[1] = v42;
        sub_1BA6A09F0((uint64_t)v57, (uint64_t)v39, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
        sub_1BA89652C((uint64_t)v39);
        sub_1BA89652C((uint64_t)v39);
        sub_1BA896610((uint64_t)v37);
      }
      sub_1BA6A09F0((uint64_t)v57, (uint64_t)v55, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
      sub_1BA6A09F0((uint64_t)v58, (uint64_t)&v56, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
      sub_1BA8966F8((uint64_t)v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
      sub_1BA8963E0((uint64_t)v55);
      goto LABEL_46;
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed13FormatSnippetC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  if (v4 != a2[2] || v5 != a2[3])
  {
    v7 = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  swift_beginAccess();
  v8 = a1[4];
  v9 = a1[5];
  swift_beginAccess();
  v10 = a2[5];
  if (!v9)
  {
    if (v10)
      goto LABEL_24;
    goto LABEL_13;
  }
  if (!v10)
    goto LABEL_24;
  if (v8 == a2[4] && v9 == v10 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
LABEL_13:
    swift_beginAccess();
    v11 = a1[6];
    v12 = a1[7];
    swift_beginAccess();
    v13 = a2[7];
    if (v12)
    {
      if (!v13)
        goto LABEL_24;
      if (v11 != a2[6] || v12 != v13)
      {
        v7 = 0;
        if ((sub_1BB874398() & 1) == 0)
          return v7 & 1;
      }
    }
    else if (v13)
    {
      goto LABEL_24;
    }
    swift_beginAccess();
    v14 = a1[8];
    swift_beginAccess();
    v15 = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA883A18(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      swift_beginAccess();
      v17 = a1[9];
      swift_beginAccess();
      v18 = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19 = sub_1BA883260(v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
      {
        swift_beginAccess();
        v20 = a1[10];
        swift_beginAccess();
        v21 = a2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22 = sub_1BA6EB330(v20, v21);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
        {
          swift_beginAccess();
          v23 = a1[11];
          swift_beginAccess();
          v24 = a2[11];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v7 = sub_1BA88ABB4(v23, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7 & 1;
        }
      }
    }
LABEL_24:
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed13FormatArticleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[24];

  sub_1BA4CDF6C(0, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v31[-v5];
  v7 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1E0C80A78](v7);
  v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v12 = &v31[-v11];
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
    || (v13 = 0, (sub_1BB874398() & 1) != 0))
  {
    v14 = a1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
    swift_beginAccess();
    sub_1BAE75514(v14, (uint64_t)v6, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy);
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    v15 = a2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
    swift_beginAccess();
    sub_1BAE75514(v15, (uint64_t)v6, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy);
    sub_1BA5193C4((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    v16 = _s8NewsFeed22FormatArticleOverridesV2eeoiySbAC_ACtFZ_0(v12, v9);
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    if (!v16)
      goto LABEL_10;
    v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
    swift_beginAccess();
    v18 = *v17;
    v19 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__selectors);
    swift_beginAccess();
    v20 = *v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1BA6EB330(v18, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      goto LABEL_10;
    v22 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
    swift_beginAccess();
    v23 = *v22;
    v24 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__properties);
    swift_beginAccess();
    v25 = *v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = sub_1BA8880B0(v23, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
    {
      v27 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      v28 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed13FormatArticle_alternate);
      v13 = (v27 | v28) == 0;
      if (v27 && v28)
      {
        swift_retain();
        v29 = swift_retain();
        v13 = _s8NewsFeed13FormatArticleC2eeoiySbAC_ACtFZ_0(v29, v28);
        swift_release();
        swift_release();
      }
    }
    else
    {
LABEL_10:
      v13 = 0;
    }
  }
  return v13 & 1;
}

uint64_t _s8NewsFeed12FormatPuzzleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[9];
  _OWORD v21[9];

  v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v4 || (v5 = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v6 = *(_OWORD *)(a1 + 144);
    v21[6] = *(_OWORD *)(a1 + 128);
    v21[7] = v6;
    v21[8] = *(_OWORD *)(a1 + 160);
    v7 = *(_OWORD *)(a1 + 80);
    v21[2] = *(_OWORD *)(a1 + 64);
    v21[3] = v7;
    v8 = *(_OWORD *)(a1 + 112);
    v21[4] = *(_OWORD *)(a1 + 96);
    v21[5] = v8;
    v9 = *(_OWORD *)(a1 + 48);
    v21[0] = *(_OWORD *)(a1 + 32);
    v21[1] = v9;
    swift_beginAccess();
    v10 = *(_OWORD *)(a2 + 144);
    v20[6] = *(_OWORD *)(a2 + 128);
    v20[7] = v10;
    v20[8] = *(_OWORD *)(a2 + 160);
    v11 = *(_OWORD *)(a2 + 80);
    v20[2] = *(_OWORD *)(a2 + 64);
    v20[3] = v11;
    v12 = *(_OWORD *)(a2 + 112);
    v20[4] = *(_OWORD *)(a2 + 96);
    v20[5] = v12;
    v13 = *(_OWORD *)(a2 + 48);
    v20[0] = *(_OWORD *)(a2 + 32);
    v20[1] = v13;
    if ((_s8NewsFeed12FormatPuzzleC9OverridesV2eeoiySbAE_AEtFZ_0(v21, v20) & 1) == 0)
      goto LABEL_9;
    swift_beginAccess();
    v14 = *(_QWORD *)(a1 + 176);
    swift_beginAccess();
    v15 = *(_QWORD *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA6EB330(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      swift_beginAccess();
      v17 = *(_QWORD *)(a1 + 184);
      swift_beginAccess();
      v18 = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v5 = sub_1BA8880B0(v17, v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_9:
      v5 = 0;
    }
  }
  return v5 & 1;
}

uint64_t _s8NewsFeed11FormatIssueC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  if (a1[2] != a2[2] || a1[3] != a2[3])
  {
    v5 = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v5 & 1;
  }
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  if (!v6)
  {
    if (v9)
      goto LABEL_22;
    goto LABEL_13;
  }
  if (!v9)
    goto LABEL_22;
  if (a1[4] == a2[4] && v6 == v9 || (v5 = 0, (sub_1BB874398() & 1) != 0))
  {
LABEL_13:
    if (v8)
    {
      if (!v11)
        goto LABEL_22;
      if (v7 != v10 || v8 != v11)
      {
        v5 = 0;
        if ((sub_1BB874398() & 1) == 0)
          return v5 & 1;
      }
    }
    else if (v11)
    {
      goto LABEL_22;
    }
    swift_beginAccess();
    v12 = a1[8];
    swift_beginAccess();
    v13 = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA6EB330(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      swift_beginAccess();
      v15 = a1[9];
      swift_beginAccess();
      v16 = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v5 = sub_1BA8880B0(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5 & 1;
    }
LABEL_22:
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t _s8NewsFeed11FormatBlockC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v4 || (v5 = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v6 = a1[4];
    swift_beginAccess();
    v7 = a2[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_1BA883A18(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_9;
    swift_beginAccess();
    v9 = a1[5];
    swift_beginAccess();
    v10 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BA883260(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
    {
      swift_beginAccess();
      v12 = a1[6];
      swift_beginAccess();
      v13 = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v5 = sub_1BA6EB330(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_9:
      v5 = 0;
    }
  }
  return v5 & 1;
}

uint64_t _s8NewsFeed16FormatButtonNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  unint64_t v56[3];
  unint64_t v57[18];
  _QWORD v58[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  swift_beginAccess();
  v58[0] = *(_QWORD *)(a1 + 32);
  swift_beginAccess();
  v57[15] = *(_QWORD *)(a2 + 32);
  static FormatSize.== infix(_:_:)((uint64_t)v58);
  if ((v8 & 1) == 0)
    goto LABEL_35;
  v9 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a2 + 40);
  if (v9)
  {
    if (!v7)
      return v7 & 1;
    v10 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v7 + 16);
    swift_beginAccess();
    v12 = *(_QWORD *)(v10 + 16);
    swift_beginAccess();
    v13 = *(_QWORD *)(v11 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA8583F8(v12, v13);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_35;
  }
  else if (v7)
  {
    goto LABEL_35;
  }
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v16 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BA882CE0(v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
    goto LABEL_35;
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 56);
  swift_beginAccess();
  if (v18 != *(_QWORD *)(a2 + 56))
    goto LABEL_35;
  swift_beginAccess();
  v57[0] = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  v56[0] = *(_QWORD *)(a2 + 64);
  if ((static FormatVisibility.== infix(_:_:)(v57, v56) & 1) == 0)
    goto LABEL_35;
  swift_beginAccess();
  v19 = *(unsigned __int8 *)(a1 + 72);
  swift_beginAccess();
  if (v19 != *(unsigned __int8 *)(a2 + 72))
    goto LABEL_35;
  swift_beginAccess();
  v20 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  v21 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = sub_1BA883A18(v20, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
    goto LABEL_35;
  swift_beginAccess();
  v23 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v24 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = sub_1BA88E1F0(v23, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
    goto LABEL_35;
  v54 = *(_QWORD *)(a1 + 96);
  v52 = *(_QWORD *)(a2 + 96);
  static FormatButtonNodeAction.== infix(_:_:)((uint64_t)&v54);
  if ((v26 & 1) == 0)
    goto LABEL_35;
  v27 = *(_QWORD *)(a1 + 104);
  v28 = *(_QWORD *)(a2 + 104);
  if ((~v27 & 0xF000000000000007) != 0)
  {
    v54 = *(_QWORD *)(a1 + 104);
    if ((~v28 & 0xF000000000000007) == 0)
      goto LABEL_33;
    v52 = v28;
    swift_retain_n();
    static FormatTextContent.== infix(_:_:)((uint64_t)&v54);
    v30 = v29;
    swift_release();
    sub_1BA5E800C(v27);
    if ((v30 & 1) == 0)
      goto LABEL_35;
  }
  else if ((~v28 & 0xF000000000000007) != 0)
  {
    goto LABEL_34;
  }
  v27 = *(_QWORD *)(a1 + 112);
  v28 = *(_QWORD *)(a2 + 112);
  if ((~v27 & 0xF000000000000007) != 0)
  {
    v54 = *(_QWORD *)(a1 + 112);
    if ((~v28 & 0xF000000000000007) != 0)
    {
      v52 = v28;
      swift_retain_n();
      static FormatButtonNodeAction.== infix(_:_:)((uint64_t)&v54);
      v32 = v31;
      swift_release();
      sub_1BA5E800C(v27);
      if ((v32 & 1) != 0)
        goto LABEL_29;
LABEL_35:
      LOBYTE(v7) = 0;
      return v7 & 1;
    }
LABEL_33:
    swift_retain();
    goto LABEL_34;
  }
  if ((~v28 & 0xF000000000000007) != 0)
    goto LABEL_34;
LABEL_29:
  v27 = *(_QWORD *)(a1 + 120);
  v28 = *(_QWORD *)(a2 + 120);
  if ((~v27 & 0xF000000000000007) != 0)
  {
    v54 = *(_QWORD *)(a1 + 120);
    if ((~v28 & 0xF000000000000007) != 0)
    {
      v52 = v28;
      swift_retain_n();
      static FormatTextContent.== infix(_:_:)((uint64_t)&v54);
      v35 = v34;
      swift_release();
      sub_1BA5E800C(v27);
      if ((v35 & 1) == 0)
        goto LABEL_35;
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  if ((~v28 & 0xF000000000000007) != 0)
  {
LABEL_34:
    sub_1BA5E7FF4(v28);
    sub_1BA5E800C(v27);
    sub_1BA5E800C(v28);
    goto LABEL_35;
  }
LABEL_38:
  v36 = *(unsigned __int8 *)(a1 + 136);
  v37 = *(unsigned __int8 *)(a2 + 136);
  if (v36 <= 0xFD)
  {
    v38 = *(_QWORD *)(a2 + 128);
    v54 = *(_QWORD *)(a1 + 128);
    v55 = v36;
    if (v37 > 0xFD)
      goto LABEL_35;
    v52 = v38;
    v53 = v37;
    if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v54, &v52) & 1) == 0)
      goto LABEL_35;
  }
  else if (v37 <= 0xFD)
  {
    goto LABEL_35;
  }
  v7 = *(_QWORD *)(a2 + 144);
  if (*(_QWORD *)(a1 + 144))
  {
    if (!v7)
      return v7 & 1;
    swift_retain();
    v39 = swift_retain();
    v40 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v39, v7);
    swift_release();
    swift_release();
    if ((v40 & 1) == 0)
      goto LABEL_35;
  }
  else if (v7)
  {
    goto LABEL_35;
  }
  swift_beginAccess();
  v41 = *(_QWORD *)(a1 + 152);
  swift_beginAccess();
  v42 = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43 = sub_1BA6EB330(v41, v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v43 & 1) == 0)
    goto LABEL_35;
  swift_beginAccess();
  v44 = *(_QWORD *)(a1 + 160);
  v45 = *(_QWORD *)(a1 + 168);
  swift_beginAccess();
  v46 = *(_QWORD *)(a2 + 168);
  if (!v45)
  {
    if (v46)
      goto LABEL_35;
    goto LABEL_56;
  }
  if (!v46)
    goto LABEL_35;
  if (v44 == *(_QWORD *)(a2 + 160) && v45 == v46 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
  {
LABEL_56:
    swift_beginAccess();
    v47 = *(_QWORD *)(a1 + 176);
    swift_beginAccess();
    v48 = *(_QWORD *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49 = sub_1BA88E29C(v47, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v49 & 1) != 0)
    {
      swift_beginAccess();
      v50 = *(_QWORD *)(a1 + 184);
      swift_beginAccess();
      v51 = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LOBYTE(v7) = sub_1BA88E2B8(v50, v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
    }
    goto LABEL_35;
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed23FormatAccessibilityNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v8 = *(_BYTE *)(a1 + 40);
    v24 = *(_QWORD *)(a1 + 32);
    LOBYTE(v25) = v8;
    swift_beginAccess();
    v9 = *(_BYTE *)(a2 + 40);
    v20 = *(_QWORD *)(a2 + 32);
    LOBYTE(v21) = v9;
    _s8NewsFeed27FormatAccessibilityPropertyO2eeoiySbAC_ACtFZ_0((uint64_t)&v24);
    if ((v10 & 1) != 0)
    {
      swift_beginAccess();
      v12 = *(_QWORD *)(a1 + 48);
      v11 = *(_QWORD *)(a1 + 56);
      v13 = *(_QWORD *)(a1 + 64);
      v14 = *(unsigned __int16 *)(a1 + 72);
      swift_beginAccess();
      v16 = *(_QWORD *)(a2 + 48);
      v15 = *(_QWORD *)(a2 + 56);
      v17 = *(_QWORD *)(a2 + 64);
      v18 = *(unsigned __int16 *)(a2 + 72);
      if (v14 >> 9 <= 0x7E)
      {
        v24 = v12;
        v25 = v11;
        v26 = v13;
        v27 = v14;
        if (v18 >> 9 <= 0x7E)
        {
          v20 = v16;
          v21 = v15;
          v22 = v17;
          v23 = v18;
          sub_1BA7AAEB4(v12, v11, v13, v14);
          sub_1BA7AAEB4(v12, v11, v13, v14);
          v7 = static FormatComputedInvalidation.== infix(_:_:)(&v24, &v20);
          sub_1BA54C928(v24, v25, v26, v27);
          sub_1BA72E4BC(v12, v11, v13, v14);
          return v7 & 1;
        }
        sub_1BA7AAEB4(v12, v11, v13, v14);
        sub_1BA7AAEB4(v12, v11, v13, v14);
        sub_1BA54C928(v12, v11, v13, v14);
      }
      else if (v18 >> 9 > 0x7E)
      {
        v7 = 1;
        return v7 & 1;
      }
      sub_1BA72FFC4(v16, v15, v17, v18);
      sub_1BA72E4BC(v12, v11, v13, v14);
      sub_1BA72E4BC(v16, v15, v17, v18);
    }
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed14FormatSlotNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v8 = *(unsigned __int8 *)(a1 + 32);
    swift_beginAccess();
    if (v8 != *(unsigned __int8 *)(a2 + 32))
      goto LABEL_10;
    swift_beginAccess();
    v9 = *(_QWORD *)(a1 + 40);
    swift_beginAccess();
    v10 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1BA883A18(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
      goto LABEL_10;
    swift_beginAccess();
    v12 = *(_QWORD *)(a1 + 48);
    swift_beginAccess();
    v13 = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA6EB330(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      swift_beginAccess();
      v15 = *(_QWORD *)(a1 + 56);
      swift_beginAccess();
      v16 = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_1BA883260(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_10:
      v7 = 0;
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed16FormatSwitchNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  if ((sub_1BA88DE7C(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) == 0)
    goto LABEL_13;
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a2 + 40);
  if (v9)
  {
    if (!v10)
      goto LABEL_13;
    swift_beginAccess();
    v11 = *(_QWORD *)(v9 + 16);
    swift_beginAccess();
    v12 = *(_QWORD *)(v10 + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1BA883A18(v11, v12);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
      goto LABEL_13;
    goto LABEL_12;
  }
  if (v10)
  {
LABEL_13:
    v8 = 0;
    return v8 & 1;
  }
LABEL_12:
  swift_beginAccess();
  v14 = *(unsigned __int8 *)(a1 + 48);
  swift_beginAccess();
  if (v14 != *(unsigned __int8 *)(a2 + 48))
    goto LABEL_13;
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 56);
  v16 = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  v18 = *(_QWORD *)(a2 + 64);
  v8 = (v16 | v18) == 0;
  if (v16 && v18)
  {
    if (v17 == *(_QWORD *)(a2 + 56) && v16 == v18)
      v8 = 1;
    else
      v8 = sub_1BB874398();
  }
  return v8 & 1;
}

uint64_t _s8NewsFeed23FormatSupplementaryNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  BOOL v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  _QWORD v34[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (v7 = sub_1BB874398(), result = 0, (v7 & 1) != 0))
  {
    v9 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    if (v9 || (v10 = sub_1BB874398(), result = 0, (v10 & 1) != 0))
    {
      v34[0] = *(_QWORD *)(a1 + 48);
      static FormatSize.== infix(_:_:)((uint64_t)v34);
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(a1 + 56);
        v13 = *(_QWORD *)(a2 + 56);
        if (v12)
        {
          if (!v13)
            return 0;
          v14 = *(_QWORD *)(v12 + 16);
          v15 = *(_QWORD *)(v13 + 16);
          swift_beginAccess();
          v16 = *(_QWORD *)(v14 + 16);
          swift_beginAccess();
          v17 = *(_QWORD *)(v15 + 16);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v18 = sub_1BA8583F8(v16, v17);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
            return 0;
        }
        else if (v13)
        {
          return 0;
        }
        swift_beginAccess();
        v19 = *(_QWORD *)(a1 + 64);
        swift_beginAccess();
        v20 = *(_QWORD *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = sub_1BA882CE0(v19, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
        {
          swift_beginAccess();
          v22 = *(_QWORD *)(a1 + 72);
          swift_beginAccess();
          v23 = *(_QWORD *)(a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v24 = sub_1BA883C24(v22, v23);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v24 & 1) != 0)
          {
            swift_beginAccess();
            v25 = *(_QWORD *)(a1 + 80);
            swift_beginAccess();
            v26 = *(_QWORD *)(a2 + 80);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v27 = sub_1BA6EB330(v25, v26);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v27 & 1) != 0)
            {
              swift_beginAccess();
              v28 = *(_QWORD *)(a1 + 88);
              swift_beginAccess();
              v29 = *(_QWORD *)(a2 + 88);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v30 = sub_1BA883260(v28, v29);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v30 & 1) != 0)
              {
                swift_beginAccess();
                v31 = *(_QWORD *)(a1 + 96);
                swift_beginAccess();
                v32 = *(_QWORD *)(a2 + 96);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v33 = sub_1BA883CCC(v31, v32);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v33 & 1) != 0)
                {
                  result = *(unsigned __int8 *)(a2 + 112);
                  if ((*(_BYTE *)(a1 + 112) & 1) == 0)
                    return (*(_QWORD *)(a1 + 104) == *(_QWORD *)(a2 + 104)) & ~(_DWORD)result;
                  return result;
                }
              }
            }
          }
        }
      }
      return 0;
    }
  }
  return result;
}

uint64_t _s8NewsFeed17FormatSnippetNodeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    if ((swift_beginAccess(), v8 = a1[4], v9 = a1[5], swift_beginAccess(), v8 == a2[4]) && v9 == a2[5]
      || (v7 = 0, (sub_1BB874398() & 1) != 0))
    {
      swift_beginAccess();
      v10 = a1[6];
      v11 = a1[7];
      swift_beginAccess();
      v12 = a2[7];
      if (v11)
      {
        if (!v12)
          goto LABEL_26;
        if (v10 != a2[6] || v11 != v12)
        {
          v7 = 0;
          if ((sub_1BB874398() & 1) == 0)
            return v7 & 1;
        }
      }
      else if (v12)
      {
        goto LABEL_26;
      }
      swift_beginAccess();
      v13 = a1[8];
      v14 = a1[9];
      swift_beginAccess();
      v15 = a2[9];
      if (v14)
      {
        if (!v15)
          goto LABEL_26;
        if (v13 != a2[8] || v14 != v15)
        {
          v7 = 0;
          if ((sub_1BB874398() & 1) == 0)
            return v7 & 1;
        }
      }
      else if (v15)
      {
        goto LABEL_26;
      }
      swift_beginAccess();
      v16 = a1[10];
      swift_beginAccess();
      v17 = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18 = sub_1BA6EB330(v16, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0)
      {
        swift_beginAccess();
        v19 = a1[11];
        swift_beginAccess();
        v20 = a2[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v21 = sub_1BA883260(v19, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) != 0)
        {
          swift_beginAccess();
          v22 = a1[12];
          swift_beginAccess();
          v23 = a2[12];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v7 = sub_1BA883CCC(v22, v23);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7 & 1;
        }
      }
LABEL_26:
      v7 = 0;
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed15FormatSpaceNodeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  v6 = v4 == a2[2] && v5 == a2[3];
  if (v6 || (v7 = 0, (sub_1BB874398() & 1) != 0))
  {
    swift_beginAccess();
    v12[0] = a1[4];
    swift_beginAccess();
    static FormatSize.== infix(_:_:)((uint64_t)v12);
    if ((v8 & 1) != 0)
    {
      swift_beginAccess();
      v9 = a1[5];
      swift_beginAccess();
      v10 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v7 = sub_1BA882CE0(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
  }
  return v7 & 1;
}

uint64_t sub_1BAE6C4EC(uint64_t a1, uint64_t a2)
{
  return sub_1BAE6C4F8(a1, a2, sub_1BA88F024);
}

uint64_t sub_1BAE6C4F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  char v9;
  char v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  char v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;

  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v6 != *(_QWORD *)(a2 + 16) || v7 != *(_QWORD *)(a2 + 24))
  {
    v9 = sub_1BB874398();
    v10 = 0;
    if ((v9 & 1) == 0)
      return v10 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v12 = sub_1BB874398();
    v10 = 0;
    if ((v12 & 1) == 0)
      return v10 & 1;
  }
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v14 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = a3(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
    goto LABEL_23;
  v16 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a2 + 56);
  if (v16)
  {
    if (!v17)
      goto LABEL_23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_1BA881EAC(v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      goto LABEL_23;
  }
  else if (v17)
  {
    goto LABEL_23;
  }
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a2 + 64);
  if ((~v19 & 0xF000000000000007) == 0)
  {
    if ((~v20 & 0xF000000000000007) == 0)
      goto LABEL_26;
LABEL_22:
    sub_1BA6E6C68(v20);
    sub_1BA6E6CD8(v19);
    sub_1BA6E6CD8(v20);
    goto LABEL_23;
  }
  v95 = *(_QWORD *)(a1 + 64);
  if ((~v20 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_22;
  }
  v84 = v20;
  swift_retain_n();
  static FormatBackground.== infix(_:_:)((uint64_t)&v95);
  v23 = v22;
  swift_release();
  sub_1BA6E6CD8(v19);
  if ((v23 & 1) == 0)
    goto LABEL_23;
LABEL_26:
  v24 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (!v24)
      goto LABEL_23;
    swift_bridgeObjectRetain();
    v25 = swift_bridgeObjectRetain();
    v26 = sub_1BA882894(v25, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v26)
      goto LABEL_23;
  }
  else if (v24)
  {
    goto LABEL_23;
  }
  v28 = *(_QWORD *)(a1 + 80);
  v27 = *(_QWORD *)(a1 + 88);
  v29 = *(unsigned __int8 *)(a1 + 96);
  v31 = *(_QWORD *)(a2 + 80);
  v30 = *(_QWORD *)(a2 + 88);
  v32 = *(unsigned __int8 *)(a2 + 96);
  if (v29 > 0xFD)
  {
    if (v32 > 0xFD)
      goto LABEL_38;
LABEL_36:
    sub_1BA6E6C54(v31, v30, v32);
    sub_1BA6E6CC4(v28, v27, v29);
    sub_1BA6E6CC4(v31, v30, v32);
    goto LABEL_23;
  }
  v95 = *(_QWORD *)(a1 + 80);
  v96 = v27;
  LOBYTE(v97) = v29;
  if (v32 > 0xFD)
  {
    sub_1BA6F2B04(v28, v27, v29);
    sub_1BA6F2B04(v28, v27, v29);
    sub_1BA6F2B88(v28, v27, v29);
    goto LABEL_36;
  }
  v84 = v31;
  v85 = v30;
  LOBYTE(v86) = v32;
  sub_1BA6E6C54(v28, v27, v29);
  sub_1BA6F2B04(v28, v27, v29);
  v33 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v95, (uint64_t)&v84);
  sub_1BA6F2B88(v95, v96, v97);
  sub_1BA6E6CC4(v28, v27, v29);
  if ((v33 & 1) == 0)
    goto LABEL_23;
LABEL_38:
  v35 = *(_QWORD *)(a1 + 104);
  v34 = *(_QWORD *)(a1 + 112);
  v37 = *(_QWORD *)(a1 + 120);
  v36 = *(_QWORD *)(a1 + 128);
  v38 = *(_QWORD *)(a1 + 136);
  v39 = *(_QWORD *)(a1 + 144);
  v41 = *(_QWORD *)(a1 + 152);
  v40 = *(_QWORD *)(a1 + 160);
  v42 = *(_QWORD *)(a1 + 168);
  v43 = *(_QWORD *)(a1 + 176);
  v44 = *(unsigned __int8 *)(a1 + 184);
  v45 = *(_QWORD *)(a2 + 104);
  v46 = *(_QWORD *)(a2 + 112);
  v48 = *(_QWORD *)(a2 + 120);
  v47 = *(_QWORD *)(a2 + 128);
  v49 = *(_QWORD *)(a2 + 136);
  v50 = *(_QWORD *)(a2 + 144);
  v51 = *(_QWORD *)(a2 + 152);
  v52 = *(_QWORD *)(a2 + 160);
  v53 = *(_QWORD *)(a2 + 168);
  v54 = *(_QWORD *)(a2 + 176);
  v55 = *(unsigned __int8 *)(a2 + 184);
  if (v44 != 254)
  {
    v95 = *(_QWORD *)(a1 + 104);
    v96 = v34;
    v97 = v37;
    v98 = v36;
    v99 = v38;
    v100 = v39;
    v101 = v41;
    v102 = v40;
    v103 = v42;
    v104 = v43;
    v105 = v44;
    v82 = v42;
    v83 = v35;
    v81 = v43;
    if (v55 == 254)
    {
      v78 = v40;
      v79 = v38;
      v56 = v41;
      v57 = v39;
      v76 = v37;
      v77 = v36;
      v74 = v52;
      v75 = v34;
      v72 = v50;
      v73 = v51;
      v71 = v49;
      swift_retain();
      v49 = v71;
      v50 = v72;
      v51 = v73;
      v52 = v74;
      v43 = v81;
      v42 = v82;
      v35 = v83;
      v34 = v75;
      v37 = v76;
      v36 = v77;
      v40 = v78;
      v39 = v57;
      v38 = v79;
      v41 = v56;
      goto LABEL_43;
    }
    v84 = v45;
    LODWORD(v85) = v46;
    v86 = v48;
    v87 = v47;
    v88 = v49;
    v89 = v50;
    v90 = v51;
    v91 = v52;
    v92 = v53;
    v93 = v54;
    v94 = v55;
    v58 = v34;
    v59 = v37;
    v60 = v36;
    v61 = v38;
    v62 = v39;
    v63 = v41;
    v64 = v40;
    sub_1BA6E8A48(v35, v34, v37, v36, v38, v39, v41, v40, v42, v43, v44);
    swift_retain();
    v80 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v95, (uint64_t)&v84);
    swift_release();
    sub_1BA6E8A78(v83, v58, v59, v60, v61, v62, v63, v64, v82, v81, v44);
    if ((v80 & 1) != 0)
      goto LABEL_45;
LABEL_23:
    v10 = 0;
    return v10 & 1;
  }
  if (v55 != 254)
  {
LABEL_43:
    v95 = v35;
    v96 = v34;
    v97 = v37;
    v98 = v36;
    v99 = v38;
    v100 = v39;
    v101 = v41;
    v102 = v40;
    v103 = v42;
    v104 = v43;
    v105 = v44;
    v106 = v45;
    v107 = v46;
    v108 = v48;
    v109 = v47;
    v110 = v49;
    v111 = v50;
    v112 = v51;
    v113 = v52;
    v114 = v53;
    v115 = v54;
    v116 = v55;
    sub_1BA6E8A48(v45, v46, v48, v47, v49, v50, v51, v52, v53, v54, v55);
    sub_1BA9F10E8((uint64_t)&v95);
    goto LABEL_23;
  }
LABEL_45:
  v65 = *(_QWORD *)(a1 + 192);
  v66 = *(_QWORD *)(a2 + 192);
  if ((~v65 & 0xF000000000000007) == 0)
  {
    if ((~v66 & 0xF000000000000007) == 0)
      goto LABEL_52;
    goto LABEL_50;
  }
  v95 = *(_QWORD *)(a1 + 192);
  if ((~v66 & 0xF000000000000007) == 0)
  {
    swift_retain();
LABEL_50:
    sub_1BA5E7FF4(v66);
    sub_1BA5E800C(v65);
    sub_1BA5E800C(v66);
    goto LABEL_23;
  }
  v84 = v66;
  swift_retain_n();
  static FormatColor.== infix(_:_:)((uint64_t)&v95);
  v68 = v67;
  swift_release();
  sub_1BA5E800C(v65);
  if ((v68 & 1) == 0)
    goto LABEL_23;
LABEL_52:
  v69 = *(unsigned __int8 *)(a1 + 200);
  v10 = v69 == 2;
  v70 = *(unsigned __int8 *)(a2 + 200);
  if (v70 != 2)
    v10 = 0;
  if (v69 != 2 && v70 != 2)
    v10 = ((v69 & 1) == 0) ^ v70;
  return v10 & 1;
}

uint64_t _s8NewsFeed27FormatLayeredMediaNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  char v64;
  char v65;
  int v66;
  int v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
  {
    v8 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    if (v8 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
    {
      swift_beginAccess();
      v9 = *(_QWORD *)(a1 + 48);
      swift_beginAccess();
      v10 = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11 = sub_1BA88F20C(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        goto LABEL_23;
      v12 = *(_QWORD *)(a1 + 56);
      v7 = *(_QWORD *)(a2 + 56);
      if (v12)
      {
        if (!v7)
          return v7 & 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v13 = sub_1BA881EAC(v12, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
          goto LABEL_23;
      }
      else if (v7)
      {
        goto LABEL_23;
      }
      v14 = *(_QWORD *)(a1 + 64);
      v15 = *(_QWORD *)(a2 + 64);
      if ((~v14 & 0xF000000000000007) != 0)
      {
        v96 = *(_QWORD *)(a1 + 64);
        if ((~v15 & 0xF000000000000007) != 0)
        {
          v85 = v15;
          swift_retain_n();
          static FormatBackground.== infix(_:_:)((uint64_t)&v96);
          v18 = v17;
          swift_release();
          sub_1BA6E6CD8(v14);
          if ((v18 & 1) == 0)
            goto LABEL_23;
LABEL_26:
          v7 = *(_QWORD *)(a2 + 72);
          if (*(_QWORD *)(a1 + 72))
          {
            if (!v7)
              return v7 & 1;
            swift_bridgeObjectRetain();
            v19 = swift_bridgeObjectRetain();
            v20 = sub_1BA882894(v19, v7);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!v20)
              goto LABEL_23;
          }
          else if (v7)
          {
            goto LABEL_23;
          }
          v22 = *(_QWORD *)(a1 + 80);
          v21 = *(_QWORD *)(a1 + 88);
          v23 = *(unsigned __int8 *)(a1 + 96);
          v25 = *(_QWORD *)(a2 + 80);
          v24 = *(_QWORD *)(a2 + 88);
          v26 = *(unsigned __int8 *)(a2 + 96);
          if (v23 <= 0xFD)
          {
            v96 = *(_QWORD *)(a1 + 80);
            v97 = v21;
            LOBYTE(v98) = v23;
            if (v26 <= 0xFD)
            {
              v85 = v25;
              v86 = v24;
              LOBYTE(v87) = v26;
              sub_1BA6E6C54(v22, v21, v23);
              sub_1BA6F2B04(v22, v21, v23);
              v27 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v96, (uint64_t)&v85);
              sub_1BA6F2B88(v96, v97, v98);
              sub_1BA6E6CC4(v22, v21, v23);
              if ((v27 & 1) == 0)
                goto LABEL_23;
LABEL_38:
              v29 = *(_QWORD *)(a1 + 104);
              v28 = *(_QWORD *)(a1 + 112);
              v31 = *(_QWORD *)(a1 + 120);
              v30 = *(_QWORD *)(a1 + 128);
              v32 = *(_QWORD *)(a1 + 136);
              v33 = *(_QWORD *)(a1 + 144);
              v35 = *(_QWORD *)(a1 + 152);
              v34 = *(_QWORD *)(a1 + 160);
              v36 = *(_QWORD *)(a1 + 168);
              v37 = *(_QWORD *)(a1 + 176);
              v38 = *(unsigned __int8 *)(a1 + 184);
              v39 = *(_QWORD *)(a2 + 104);
              v40 = *(_QWORD *)(a2 + 112);
              v42 = *(_QWORD *)(a2 + 120);
              v41 = *(_QWORD *)(a2 + 128);
              v43 = *(_QWORD *)(a2 + 136);
              v44 = *(_QWORD *)(a2 + 144);
              v45 = *(_QWORD *)(a2 + 152);
              v46 = *(_QWORD *)(a2 + 160);
              v47 = *(_QWORD *)(a2 + 168);
              v48 = *(_QWORD *)(a2 + 176);
              v49 = *(unsigned __int8 *)(a2 + 184);
              if (v38 == 254)
              {
                if (v49 == 254)
                  goto LABEL_45;
              }
              else
              {
                v96 = *(_QWORD *)(a1 + 104);
                v97 = v28;
                v98 = v31;
                v99 = v30;
                v100 = v32;
                v101 = v33;
                v102 = v35;
                v103 = v34;
                v104 = v36;
                v105 = v37;
                v106 = v38;
                v83 = v36;
                v84 = v29;
                v82 = v37;
                if (v49 != 254)
                {
                  v85 = v39;
                  LODWORD(v86) = v40;
                  v87 = v42;
                  v88 = v41;
                  v89 = v43;
                  v90 = v44;
                  v91 = v45;
                  v92 = v46;
                  v93 = v47;
                  v94 = v48;
                  v95 = v49;
                  v52 = v28;
                  v53 = v31;
                  v54 = v30;
                  v55 = v32;
                  v56 = v33;
                  v57 = v35;
                  v58 = v34;
                  sub_1BA6E8A48(v29, v28, v31, v30, v32, v33, v35, v34, v36, v37, v38);
                  swift_retain();
                  v81 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v96, (uint64_t)&v85);
                  swift_release();
                  sub_1BA6E8A78(v84, v52, v53, v54, v55, v56, v57, v58, v83, v82, v38);
                  if ((v81 & 1) == 0)
                    goto LABEL_23;
LABEL_45:
                  v59 = *(_QWORD *)(a1 + 192);
                  v7 = *(_QWORD *)(a1 + 200);
                  v60 = *(unsigned __int8 *)(a1 + 208);
                  v61 = *(_QWORD *)(a2 + 192);
                  v62 = *(_QWORD *)(a2 + 200);
                  v63 = *(unsigned __int8 *)(a2 + 208);
                  if (v60 == 255)
                  {
                    if (v63 != 255)
                      goto LABEL_68;
                  }
                  else
                  {
                    if (v63 == 255)
                      goto LABEL_68;
                    if ((v60 & 1) != 0)
                    {
                      if ((v63 & 1) == 0)
                      {
LABEL_65:
                        swift_bridgeObjectRetain();
                        goto LABEL_66;
                      }
                      if (v59 == v61 && v7 == v62)
                      {
                        sub_1BA796C58(*(_QWORD *)(a1 + 192), *(_QWORD *)(a1 + 200), *(_BYTE *)(a2 + 208));
                        sub_1BA796C58(v59, v7, v60);
                        sub_1BA69C828(v59, v7, 1);
                        sub_1BA69C828(v59, v7, 1);
                      }
                      else
                      {
                        v64 = sub_1BB874398();
                        sub_1BA796C58(v61, v62, v63);
                        sub_1BA796C58(v59, v7, v60);
                        sub_1BA69C828(v59, v7, 1);
                        sub_1BA69C828(v61, v62, 1);
                        LOBYTE(v7) = 0;
                        if ((v64 & 1) == 0)
                          return v7 & 1;
                      }
                    }
                    else
                    {
                      if ((v63 & 1) != 0)
                        goto LABEL_66;
                      sub_1BA69C828(*(_QWORD *)(a1 + 192), *(_QWORD *)(a1 + 200), 0);
                      sub_1BA69C828(v61, v62, 0);
                      LOBYTE(v7) = 0;
                      if (((((v59 & 1) == 0) ^ v61) & 1) == 0)
                        return v7 & 1;
                    }
                  }
                  v59 = *(_QWORD *)(a1 + 216);
                  v7 = *(_QWORD *)(a1 + 224);
                  v60 = *(unsigned __int8 *)(a1 + 232);
                  v61 = *(_QWORD *)(a2 + 216);
                  v62 = *(_QWORD *)(a2 + 224);
                  v63 = *(unsigned __int8 *)(a2 + 232);
                  if (v60 == 255)
                  {
                    if (v63 == 255)
                    {
LABEL_73:
                      v66 = *(unsigned __int8 *)(a1 + 233);
                      v67 = *(unsigned __int8 *)(a2 + 233);
                      if (v66 != 2)
                      {
                        LOBYTE(v7) = 0;
                        v68 = (v66 & 1) == 0;
                        if (v67 == 2 || ((v68 ^ v67) & 1) == 0)
                          return v7 & 1;
                        goto LABEL_78;
                      }
                      if (v67 == 2)
                      {
LABEL_78:
                        v69 = *(_QWORD *)(a1 + 240);
                        v70 = *(_QWORD *)(a2 + 240);
                        LOBYTE(v7) = (v69 | v70) == 0;
                        if (v69 && v70)
                        {
                          swift_bridgeObjectRetain();
                          v71 = swift_bridgeObjectRetain();
                          LOBYTE(v7) = sub_1BA882964(v71, v70);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                        }
                        return v7 & 1;
                      }
LABEL_23:
                      LOBYTE(v7) = 0;
                      return v7 & 1;
                    }
                  }
                  else if (v63 != 255)
                  {
                    if ((v60 & 1) != 0)
                    {
                      if ((v63 & 1) != 0)
                      {
                        if (v59 == v61 && v7 == v62)
                        {
                          sub_1BA796C58(*(_QWORD *)(a1 + 216), *(_QWORD *)(a1 + 224), *(_BYTE *)(a2 + 232));
                          sub_1BA796C58(v59, v7, v60);
                          sub_1BA69C828(v59, v7, 1);
                          sub_1BA69C828(v59, v7, 1);
                        }
                        else
                        {
                          v65 = sub_1BB874398();
                          sub_1BA796C58(v61, v62, v63);
                          sub_1BA796C58(v59, v7, v60);
                          sub_1BA69C828(v59, v7, 1);
                          sub_1BA69C828(v61, v62, 1);
                          LOBYTE(v7) = 0;
                          if ((v65 & 1) == 0)
                            return v7 & 1;
                        }
                        goto LABEL_73;
                      }
                      goto LABEL_65;
                    }
                    if ((v63 & 1) == 0)
                    {
                      sub_1BA69C828(*(_QWORD *)(a1 + 216), *(_QWORD *)(a1 + 224), 0);
                      sub_1BA69C828(v61, v62, 0);
                      LOBYTE(v7) = 0;
                      if (((((v59 & 1) == 0) ^ v61) & 1) == 0)
                        return v7 & 1;
                      goto LABEL_73;
                    }
LABEL_66:
                    sub_1BA69C808(v61, v62, v63 & 1);
                    sub_1BA69C828(v59, v7, v60 & 1);
                    sub_1BA69C828(v61, v62, v63 & 1);
                    goto LABEL_23;
                  }
LABEL_68:
                  sub_1BA796C58(v61, v62, v63);
                  sub_1BA796C58(v59, v7, v60);
                  sub_1BA796C70(v59, v7, v60);
                  sub_1BA796C70(v61, v62, v63);
                  goto LABEL_23;
                }
                v79 = v34;
                v80 = v32;
                v50 = v35;
                v51 = v33;
                v77 = v31;
                v78 = v30;
                v75 = v46;
                v76 = v28;
                v73 = v44;
                v74 = v45;
                v72 = v43;
                swift_retain();
                v43 = v72;
                v44 = v73;
                v45 = v74;
                v46 = v75;
                v37 = v82;
                v36 = v83;
                v29 = v84;
                v28 = v76;
                v31 = v77;
                v30 = v78;
                v34 = v79;
                v33 = v51;
                v32 = v80;
                v35 = v50;
              }
              v96 = v29;
              v97 = v28;
              v98 = v31;
              v99 = v30;
              v100 = v32;
              v101 = v33;
              v102 = v35;
              v103 = v34;
              v104 = v36;
              v105 = v37;
              v106 = v38;
              v107 = v39;
              v108 = v40;
              v109 = v42;
              v110 = v41;
              v111 = v43;
              v112 = v44;
              v113 = v45;
              v114 = v46;
              v115 = v47;
              v116 = v48;
              v117 = v49;
              sub_1BA6E8A48(v39, v40, v42, v41, v43, v44, v45, v46, v47, v48, v49);
              sub_1BA9F10E8((uint64_t)&v96);
              goto LABEL_23;
            }
            sub_1BA6F2B04(v22, v21, v23);
            sub_1BA6F2B04(v22, v21, v23);
            sub_1BA6F2B88(v22, v21, v23);
          }
          else if (v26 > 0xFD)
          {
            goto LABEL_38;
          }
          sub_1BA6E6C54(v25, v24, v26);
          sub_1BA6E6CC4(v22, v21, v23);
          sub_1BA6E6CC4(v25, v24, v26);
          goto LABEL_23;
        }
        swift_retain();
      }
      else if ((~v15 & 0xF000000000000007) == 0)
      {
        goto LABEL_26;
      }
      sub_1BA6E6C68(v15);
      sub_1BA6E6CD8(v14);
      sub_1BA6E6CD8(v15);
      goto LABEL_23;
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed21FormatCustomNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;
  int v9;
  int v10;
  _BOOL4 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v6 = v4 == *(_QWORD *)(a2 + 16) && v5 == *(_QWORD *)(a2 + 24);
  if (v6 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
  {
    v8 = *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40);
    if (v8 || (LOBYTE(v7) = 0, (sub_1BB874398() & 1) != 0))
    {
      v9 = *(unsigned __int8 *)(a1 + 48);
      v10 = *(unsigned __int8 *)(a2 + 48);
      if (v9 == 2)
      {
        if (v10 != 2)
          goto LABEL_21;
      }
      else
      {
        LOBYTE(v7) = 0;
        v11 = (v9 & 1) == 0;
        if (v10 == 2 || ((v11 ^ v10) & 1) == 0)
          return v7 & 1;
      }
      v7 = *(_QWORD *)(a2 + 56);
      if (!*(_QWORD *)(a1 + 56))
      {
        if (!v7)
          goto LABEL_19;
        goto LABEL_21;
      }
      if (v7)
      {
        swift_bridgeObjectRetain();
        v12 = swift_bridgeObjectRetain();
        v13 = sub_1BA883260(v12, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) != 0)
        {
LABEL_19:
          swift_beginAccess();
          v14 = *(_QWORD *)(a1 + 64);
          swift_beginAccess();
          v15 = *(_QWORD *)(a2 + 64);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          LOBYTE(v7) = sub_1BA88F5E8(v14, v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v7 & 1;
        }
LABEL_21:
        LOBYTE(v7) = 0;
      }
    }
  }
  return v7 & 1;
}

uint64_t _s8NewsFeed19FormatItemNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  char v74;
  char v75;
  int v76;
  int v77;
  _BOOL4 v78;
  int v79;
  int v80;
  _BOOL4 v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  char v91;
  __int128 *v92;
  __int16 v93;
  __int128 *v94;
  __int16 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  _BYTE v99[4];
  _BOOL4 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unsigned __int8 v134;

  v4 = type metadata accessor for FormatItemNodeAction();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v99[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4B07F0(0, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v99[-v9];
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1EF2B59F8, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  v111 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = &v99[-v12];
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v14 != *(_QWORD *)(a2 + 16) || v15 != *(_QWORD *)(a2 + 24))
  {
    v16 = sub_1BB874398();
    v17 = 0;
    if ((v16 & 1) == 0)
      return v17 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v18 = sub_1BB874398();
    v17 = 0;
    if ((v18 & 1) == 0)
      return v17 & 1;
  }
  v107 = v10;
  v108 = v5;
  v109 = v4;
  v110 = v13;
  v106 = v7;
  v20 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v22 = *(_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  v24 = *(_QWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a1 + 88);
  v26 = *(_QWORD *)(a1 + 96);
  v25 = *(_QWORD *)(a1 + 104);
  v27 = *(_BYTE *)(a1 + 112);
  v28 = *(_QWORD *)(a2 + 48);
  v29 = *(_QWORD *)(a2 + 56);
  v30 = *(_QWORD *)(a2 + 64);
  v31 = *(_QWORD *)(a2 + 72);
  v32 = *(_QWORD *)(a2 + 80);
  v33 = *(_QWORD *)(a2 + 88);
  v34 = *(_QWORD *)(a2 + 96);
  v35 = *(_QWORD *)(a2 + 104);
  v36 = *(_BYTE *)(a2 + 112);
  if ((v27 & 0xFE) == 0x7E)
  {
    if ((v36 & 0xFE) == 0x7E)
      goto LABEL_14;
LABEL_12:
    *(_QWORD *)&v119 = v20;
    *((_QWORD *)&v119 + 1) = v19;
    *(_QWORD *)&v120 = v22;
    *((_QWORD *)&v120 + 1) = v21;
    v121 = v24;
    v122 = v23;
    v123 = v26;
    v124 = v25;
    LOBYTE(v125) = v27;
    v126 = v28;
    v127 = v29;
    v128 = v30;
    v129 = v31;
    v130 = v32;
    v131 = v33;
    v132 = v34;
    v133 = v35;
    v134 = v36;
    sub_1BA7643E8(v28, v29, v30, v31, v32, v33, v34, v35, v36, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
    sub_1BAEE7B28((uint64_t)&v119);
    goto LABEL_27;
  }
  *(_QWORD *)&v119 = *(_QWORD *)(a1 + 48);
  *((_QWORD *)&v119 + 1) = v19;
  *(_QWORD *)&v120 = v22;
  *((_QWORD *)&v120 + 1) = v21;
  v121 = v24;
  v122 = v23;
  v123 = v26;
  v124 = v25;
  LOBYTE(v125) = v27;
  v104 = v24;
  v105 = v23;
  v102 = v22;
  v103 = v21;
  v101 = v19;
  if ((v36 & 0xFE) == 0x7E)
  {
    v110 = (_BYTE *)v34;
    v111 = v35;
    v108 = v32;
    v109 = v33;
    v37 = v31;
    v38 = v30;
    sub_1BA5E7FF4(v20);
    sub_1BA6E6C54(v26, v25, v27);
    sub_1BA5E7FF4(v20);
    sub_1BA6E6C54(v26, v25, v27);
    sub_1BA5E800C(v20);
    sub_1BA6E6CC4(v26, v25, v27);
    v30 = v38;
    v31 = v37;
    v32 = v108;
    v33 = v109;
    v34 = (uint64_t)v110;
    v35 = v111;
    v19 = v101;
    v22 = v102;
    v21 = v103;
    v24 = v104;
    v23 = v105;
    goto LABEL_12;
  }
  *(_QWORD *)&v112 = v28;
  *((_QWORD *)&v112 + 1) = v29;
  *(_QWORD *)&v113 = v30;
  *((_QWORD *)&v113 + 1) = v31;
  v114 = v32;
  LOBYTE(v115) = v33 & 1;
  v116 = v34;
  v117 = v35;
  v118 = v36;
  sub_1BA7643E8(v20, v19, v22, v21, v24, v23, v26, v25, v27, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  sub_1BA5E7FF4(v20);
  sub_1BA6E6C54(v26, v25, v27);
  v100 = _s8NewsFeed23FormatPreviewParametersV2eeoiySbAC_ACtFZ_0((uint64_t)&v119, (uint64_t)&v112);
  v39 = v123;
  v40 = v124;
  v41 = v125;
  sub_1BA5E800C(v119);
  sub_1BA6E6CC4(v39, v40, v41);
  sub_1BA7643E8(v20, v101, v102, v103, v104, v105, v26, v25, v27, (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
  if (!v100)
    goto LABEL_27;
LABEL_14:
  v42 = *(_QWORD *)(a1 + 120);
  v43 = *(_QWORD *)(a1 + 128);
  v45 = *(_QWORD *)(a1 + 136);
  v44 = *(_QWORD *)(a1 + 144);
  v47 = *(_QWORD *)(a1 + 152);
  v46 = *(_QWORD *)(a1 + 160);
  v48 = *(_QWORD *)(a1 + 168);
  v49 = *(unsigned __int8 *)(a1 + 176);
  v50 = *(_QWORD *)(a2 + 120);
  v51 = *(_QWORD *)(a2 + 128);
  v52 = *(_QWORD *)(a2 + 136);
  v53 = *(_QWORD *)(a2 + 144);
  v54 = *(_QWORD *)(a2 + 152);
  v55 = *(_QWORD *)(a2 + 160);
  v56 = *(_QWORD *)(a2 + 168);
  v57 = *(unsigned __int8 *)(a2 + 176);
  if (v49 == 255)
  {
    if (v57 == 255)
      goto LABEL_19;
LABEL_23:
    *(_QWORD *)&v119 = v42;
    *((_QWORD *)&v119 + 1) = v43;
    *(_QWORD *)&v120 = v45;
    *((_QWORD *)&v120 + 1) = v44;
    v121 = v47;
    v122 = v46;
    v123 = v48;
    LOBYTE(v124) = v49;
    v125 = v50;
    v126 = v51;
    v127 = v52;
    v128 = v53;
    v129 = v54;
    v130 = v55;
    v131 = v56;
    LOBYTE(v132) = v57;
    sub_1BA764498(v50, v51, v52, v53, v54, v55, v56, v57);
    sub_1BAEEDE88((uint64_t)&v119, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA7644AC);
    goto LABEL_27;
  }
  *(_QWORD *)&v119 = *(_QWORD *)(a1 + 120);
  *((_QWORD *)&v119 + 1) = v43;
  *(_QWORD *)&v120 = v45;
  *((_QWORD *)&v120 + 1) = v44;
  v121 = v47;
  v122 = v46;
  v123 = v48;
  LOBYTE(v124) = v49;
  if (v57 == 255)
  {
    v104 = v50;
    v106 = (_BYTE *)v51;
    v107 = (_BYTE *)v52;
    v108 = v53;
    v109 = v54;
    v69 = v46;
    v110 = (_BYTE *)v55;
    v111 = v56;
    v70 = v48;
    sub_1BA7756B8(v42, v43, v45, v44, v47, v46, v48, v49);
    sub_1BA7756B8(v42, v43, v45, v44, v47, v69, v70, v49);
    sub_1BA763860(v42, v43, v45, v44, v47, v69, v70, v49);
    v50 = v104;
    v51 = (uint64_t)v106;
    v52 = (uint64_t)v107;
    v53 = v108;
    v54 = v109;
    v55 = (uint64_t)v110;
    v56 = v111;
    v46 = v69;
    v48 = v70;
    goto LABEL_23;
  }
  *(_QWORD *)&v112 = v50;
  *((_QWORD *)&v112 + 1) = v51;
  *(_QWORD *)&v113 = v52;
  *((_QWORD *)&v113 + 1) = v53;
  v114 = v54;
  v115 = v55;
  v116 = v56;
  LOBYTE(v117) = v57;
  v58 = v46;
  v105 = v47;
  v59 = v49;
  LODWORD(v103) = v49;
  v60 = v48;
  sub_1BA764498(v42, v43, v45, v44, v47, v46, v48, v59);
  v61 = v47;
  v62 = v60;
  v63 = v60;
  LOBYTE(v60) = v103;
  sub_1BA7756B8(v42, v43, v45, v44, v61, v58, v62, v103);
  LODWORD(v104) = _s8NewsFeed19FormatCellSelectionO2eeoiySbAC_ACtFZ_0((uint64_t)&v119, (uint64_t)&v112);
  sub_1BA763860(v119, *((uint64_t *)&v119 + 1), v120, *((uint64_t *)&v120 + 1), v121, v122, v123, v124);
  sub_1BA7644AC(v42, v43, v45, v44, v105, v58, v63, v60);
  if ((v104 & 1) == 0)
    goto LABEL_27;
LABEL_19:
  v64 = a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  v65 = (uint64_t)v110;
  v66 = (uint64_t)&v110[*(int *)(v111 + 48)];
  sub_1BA5E01A4(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t)v110, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  sub_1BA5E01A4(v64, v66, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  v67 = v109;
  v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
  if (v68(v65, 1, v109) != 1)
  {
    v71 = (uint64_t)v107;
    sub_1BA5E01A4(v65, (uint64_t)v107, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
    if (v68(v66, 1, v67) != 1)
    {
      v73 = (uint64_t)v106;
      sub_1BA5193C4(v66, (uint64_t)v106, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      _s8NewsFeed20FormatItemNodeActionO2eeoiySbAC_ACtFZ_0(v71, v73);
      v75 = v74;
      sub_1BA4A2E80(v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      sub_1BA5C699C(v65, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
      if ((v75 & 1) == 0)
        goto LABEL_27;
      goto LABEL_30;
    }
    sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
LABEL_26:
    sub_1BAEE7BF0(v65, (unint64_t *)&qword_1EF2B59F8, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
    goto LABEL_27;
  }
  if (v68(v66, 1, v67) != 1)
    goto LABEL_26;
  sub_1BA5C699C(v65, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
LABEL_30:
  v76 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
  v77 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
  if (v76 == 2)
  {
    if (v77 != 2)
      goto LABEL_27;
  }
  else
  {
    v17 = 0;
    v78 = (v76 & 1) == 0;
    if (v77 == 2 || ((v78 ^ v77) & 1) == 0)
      return v17 & 1;
  }
  v79 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  v80 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  if (v79 == 2)
  {
    if (v80 != 2)
      goto LABEL_27;
    goto LABEL_40;
  }
  v17 = 0;
  v81 = (v79 & 1) == 0;
  if (v80 != 2 && ((v81 ^ v80) & 1) != 0)
  {
LABEL_40:
    v82 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    v83 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
    v84 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    v85 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
    if (v82 == 3)
    {
      if (v84 == 3)
      {
LABEL_47:
        v87 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
        swift_beginAccess();
        v88 = *v87;
        v89 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
        swift_beginAccess();
        v90 = *v89;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v91 = sub_1BA892D40(v88, v90);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v91 & 1) != 0)
        {
          v92 = (__int128 *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
          v93 = *(_WORD *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
          v94 = (__int128 *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
          v95 = *(_WORD *)(a2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
          if ((v93 & 0xFF00) == 0x400)
          {
            v17 = (v95 & 0xFF00) == 1024;
            return v17 & 1;
          }
          v96 = *v94;
          v97 = v94[1];
          v98 = v92[1];
          v119 = *v92;
          v120 = v98;
          LOWORD(v121) = v93;
          if ((v95 & 0xFF00) != 0x400)
          {
            v112 = v96;
            v113 = v97;
            LOWORD(v114) = v95 & 0xFF01;
            v17 = _s8NewsFeed21FormatFocusParametersV2eeoiySbAC_ACtFZ_0((uint64_t)&v119, (uint64_t)&v112);
            return v17 & 1;
          }
        }
        goto LABEL_27;
      }
      goto LABEL_45;
    }
    *(_QWORD *)&v119 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    *((_QWORD *)&v119 + 1) = v83;
    if (v84 == 3)
    {
      sub_1BAC68784(v82);
      sub_1BAC68784(v82);
      sub_1BAC687B4(v82);
LABEL_45:
      sub_1BA77567C(v84);
      sub_1BA7644C0(v82);
      sub_1BA7644C0(v84);
      goto LABEL_27;
    }
    *(_QWORD *)&v112 = v84;
    *((_QWORD *)&v112 + 1) = v85;
    sub_1BA77567C(v82);
    sub_1BAC68784(v82);
    v86 = _s8NewsFeed30FormatItemNodeSwipeActionStyleO2eeoiySbAC_ACtFZ_0((unint64_t *)&v119, (unint64_t *)&v112);
    sub_1BAC687B4(v119);
    sub_1BA7644C0(v82);
    if (v86)
      goto LABEL_47;
LABEL_27:
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t _s8NewsFeed14FormatItemNodeC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35[3];
  unint64_t v36[42];
  _QWORD v37[3];

  swift_beginAccess();
  v4 = a1[2];
  v5 = a1[3];
  swift_beginAccess();
  if (v4 != a2[2] || v5 != a2[3])
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  if (a1[4] != a2[4] || a1[5] != a2[5])
  {
    LOBYTE(v7) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v7 & 1;
  }
  v37[0] = a1[6];
  v36[39] = a2[6];
  static FormatSize.== infix(_:_:)((uint64_t)v37);
  if ((v9 & 1) == 0)
    goto LABEL_25;
  v10 = a1[7];
  v7 = a2[7];
  if (v10)
  {
    if (!v7)
      return v7 & 1;
    v11 = *(_QWORD *)(v10 + 16);
    v12 = *(_QWORD *)(v7 + 16);
    swift_beginAccess();
    v13 = *(_QWORD *)(v11 + 16);
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_1BA8583F8(v13, v14);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      goto LABEL_25;
    goto LABEL_17;
  }
  if (v7)
  {
LABEL_25:
    LOBYTE(v7) = 0;
    return v7 & 1;
  }
LABEL_17:
  swift_beginAccess();
  v16 = a1[8];
  swift_beginAccess();
  v17 = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = sub_1BA882CE0(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
    goto LABEL_25;
  swift_beginAccess();
  v19 = a1[9];
  swift_beginAccess();
  v20 = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = sub_1BA883C24(v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
    goto LABEL_25;
  swift_beginAccess();
  v22 = a1[10];
  swift_beginAccess();
  v23 = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_1BA6EB330(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
    goto LABEL_25;
  swift_beginAccess();
  v25 = a1[11];
  swift_beginAccess();
  v26 = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = sub_1BA883260(v25, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
    goto LABEL_25;
  swift_beginAccess();
  v28 = a1[12];
  swift_beginAccess();
  v29 = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = sub_1BA883CCC(v28, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
    goto LABEL_25;
  swift_beginAccess();
  v31 = a1[13];
  swift_beginAccess();
  if (v31 != a2[13])
    goto LABEL_25;
  swift_beginAccess();
  v36[0] = a1[14];
  swift_beginAccess();
  v35[0] = a2[14];
  if ((static FormatVisibility.== infix(_:_:)(v36, v35) & 1) == 0)
    goto LABEL_25;
  swift_beginAccess();
  v32 = a1[15];
  swift_beginAccess();
  v33 = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v7) = sub_1BA88E2B8(v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t _s8NewsFeed15FormatImageNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  int v28;
  int v29;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  unint64_t v44[3];
  unint64_t v45[12];
  _QWORD v46[6];
  _QWORD v47[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  v47[0] = *(_QWORD *)(a1 + 32);
  v46[3] = *(_QWORD *)(a2 + 32);
  static FormatSize.== infix(_:_:)((uint64_t)v47);
  if ((v9 & 1) == 0)
    goto LABEL_28;
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a2 + 40);
  if (v10)
  {
    if (!v11)
      goto LABEL_28;
    v12 = *(_QWORD *)(v10 + 16);
    v13 = *(_QWORD *)(v11 + 16);
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 16);
    swift_beginAccess();
    v15 = *(_QWORD *)(v13 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA8583F8(v14, v15);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_28;
  }
  else if (v11)
  {
    goto LABEL_28;
  }
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v18 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_1BA882CE0(v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
    goto LABEL_28;
  v20 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (!v20)
      goto LABEL_28;
    type metadata accessor for FormatImageNodeStyle();
    swift_retain();
    v21 = swift_retain();
    v22 = _s8NewsFeed20FormatImageNodeStyleC2eeoiySbAC_ACtFZ_0(v21, v20);
    swift_release();
    swift_release();
    if ((v22 & 1) == 0)
      goto LABEL_28;
  }
  else if (v20)
  {
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (!v23)
      goto LABEL_28;
    swift_retain();
    v24 = swift_retain();
    v25 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v24, v23);
    swift_release();
    swift_release();
    if ((v25 & 1) == 0)
      goto LABEL_28;
  }
  else if (v23)
  {
    goto LABEL_28;
  }
  v46[0] = *(_QWORD *)(a1 + 72);
  v45[9] = *(_QWORD *)(a2 + 72);
  static FormatAsyncImageContent.== infix(_:_:)((uint64_t)v46);
  if ((v26 & 1) == 0)
    goto LABEL_28;
  swift_beginAccess();
  v27 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  if (v27 != *(_QWORD *)(a2 + 80))
    goto LABEL_28;
  swift_beginAccess();
  v45[0] = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v44[0] = *(_QWORD *)(a2 + 88);
  if ((static FormatVisibility.== infix(_:_:)(v45, v44) & 1) == 0)
    goto LABEL_28;
  swift_beginAccess();
  v28 = *(unsigned __int8 *)(a1 + 96);
  swift_beginAccess();
  if (v28 != *(unsigned __int8 *)(a2 + 96))
    goto LABEL_28;
  swift_beginAccess();
  v29 = *(unsigned __int8 *)(a1 + 97);
  swift_beginAccess();
  if (v29 != *(unsigned __int8 *)(a2 + 97))
    goto LABEL_28;
  v31 = *(unsigned __int8 *)(a1 + 112);
  v32 = *(unsigned __int8 *)(a2 + 112);
  if (v31 > 0xFD)
  {
    if (v32 > 0xFD)
      goto LABEL_35;
LABEL_28:
    v8 = 0;
    return v8 & 1;
  }
  v33 = *(_QWORD *)(a2 + 104);
  v42 = *(_QWORD *)(a1 + 104);
  v43 = v31;
  if (v32 > 0xFD)
    goto LABEL_28;
  v40 = v33;
  v41 = v32;
  if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v42, &v40) & 1) == 0)
    goto LABEL_28;
LABEL_35:
  swift_beginAccess();
  v34 = *(_QWORD *)(a1 + 120);
  swift_beginAccess();
  v35 = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = sub_1BA6EB330(v34, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v36 & 1) == 0)
    goto LABEL_28;
  swift_beginAccess();
  v38 = *(_QWORD *)(a1 + 128);
  v37 = *(_QWORD *)(a1 + 136);
  swift_beginAccess();
  v39 = *(_QWORD *)(a2 + 136);
  v8 = (v37 | v39) == 0;
  if (v37 && v39)
  {
    if (v38 == *(_QWORD *)(a2 + 128) && v37 == v39)
      v8 = 1;
    else
      v8 = sub_1BB874398();
  }
  return v8 & 1;
}

uint64_t _s8NewsFeed14FormatTextNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  char v35;
  uint64_t v36;
  int v37;
  int v39;
  int v40;
  char v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  __int16 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  unint64_t v60[3];
  unint64_t v61[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  v52 = *(_QWORD *)(a1 + 32);
  v50[0] = *(_QWORD *)(a2 + 32);
  static FormatTextSize.== infix(_:_:)((uint64_t)&v52);
  if ((v9 & 1) == 0)
    goto LABEL_34;
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a2 + 40);
  if (v10)
  {
    if (!v11)
      goto LABEL_34;
    v12 = *(_QWORD *)(v10 + 16);
    v13 = *(_QWORD *)(v11 + 16);
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 16);
    swift_beginAccess();
    v15 = *(_QWORD *)(v13 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA8583F8(v14, v15);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_34;
  }
  else if (v11)
  {
    goto LABEL_34;
  }
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v18 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_1BA882CE0(v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
    goto LABEL_34;
  v20 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (!v20)
      goto LABEL_34;
    swift_retain();
    v21 = swift_retain();
    v22 = _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v21, v20);
    swift_release();
    swift_release();
    if ((v22 & 1) == 0)
      goto LABEL_34;
  }
  else if (v20)
  {
    goto LABEL_34;
  }
  v23 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (!v23)
      goto LABEL_34;
    swift_retain();
    v24 = swift_retain();
    v25 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v24, v23);
    swift_release();
    swift_release();
    if ((v25 & 1) == 0)
      goto LABEL_34;
  }
  else if (v23)
  {
    goto LABEL_34;
  }
  v52 = *(_QWORD *)(a1 + 72);
  v50[0] = *(_QWORD *)(a2 + 72);
  static FormatTextContent.== infix(_:_:)((uint64_t)&v52);
  if ((v26 & 1) == 0)
    goto LABEL_34;
  v28 = *(_QWORD *)(a1 + 80);
  v27 = *(_QWORD *)(a1 + 88);
  v29 = *(_QWORD *)(a1 + 96);
  v30 = *(unsigned __int16 *)(a1 + 104);
  v32 = *(_QWORD *)(a2 + 80);
  v31 = *(_QWORD *)(a2 + 88);
  v33 = *(_QWORD *)(a2 + 96);
  v34 = *(unsigned __int16 *)(a2 + 104);
  if (v30 >> 9 > 0x7E)
  {
    if (v34 >> 9 > 0x7E)
      goto LABEL_31;
LABEL_29:
    sub_1BA72FFC4(v32, v31, v33, v34);
    sub_1BA72E4BC(v28, v27, v29, v30);
    sub_1BA72E4BC(v32, v31, v33, v34);
    goto LABEL_34;
  }
  v52 = *(_QWORD *)(a1 + 80);
  v53 = v27;
  v54 = v29;
  v55 = v30;
  if (v34 >> 9 > 0x7E)
  {
    sub_1BA7AAEB4(v28, v27, v29, v30);
    sub_1BA7AAEB4(v28, v27, v29, v30);
    sub_1BA54C928(v28, v27, v29, v30);
    goto LABEL_29;
  }
  v50[0] = v32;
  v50[1] = v31;
  v50[2] = v33;
  v51 = v34;
  sub_1BA72FFC4(v28, v27, v29, v30);
  sub_1BA7AAEB4(v28, v27, v29, v30);
  v35 = _s8NewsFeed26FormatComputedInvalidationO2eeoiySbAC_ACtFZ_0((uint64_t)&v52, (uint64_t)v50);
  sub_1BA54C928(v52, v53, v54, v55);
  sub_1BA72E4BC(v28, v27, v29, v30);
  if ((v35 & 1) == 0)
    goto LABEL_34;
LABEL_31:
  swift_beginAccess();
  v36 = *(_QWORD *)(a1 + 112);
  swift_beginAccess();
  if (v36 != *(_QWORD *)(a2 + 112))
    goto LABEL_34;
  swift_beginAccess();
  v61[0] = *(_QWORD *)(a1 + 120);
  swift_beginAccess();
  v60[0] = *(_QWORD *)(a2 + 120);
  if ((static FormatVisibility.== infix(_:_:)(v61, v60) & 1) == 0)
    goto LABEL_34;
  swift_beginAccess();
  v37 = *(unsigned __int8 *)(a1 + 128);
  swift_beginAccess();
  if (v37 != *(unsigned __int8 *)(a2 + 128))
    goto LABEL_34;
  v39 = *(unsigned __int8 *)(a1 + 129);
  v40 = *(unsigned __int8 *)(a2 + 129);
  if (v39 == 7)
  {
    if (v40 != 7)
      goto LABEL_34;
  }
  else
  {
    if (v40 == 7)
      goto LABEL_34;
    sub_1BB80270C(v39);
    if ((v41 & 1) == 0)
      goto LABEL_34;
  }
  v42 = *(unsigned __int8 *)(a1 + 144);
  v43 = *(unsigned __int8 *)(a2 + 144);
  if (v42 > 0xFD)
  {
    if (v43 > 0xFD)
      goto LABEL_46;
LABEL_34:
    v8 = 0;
    return v8 & 1;
  }
  v44 = *(_QWORD *)(a2 + 136);
  v58 = *(_QWORD *)(a1 + 136);
  v59 = v42;
  if (v43 > 0xFD)
    goto LABEL_34;
  v56 = v44;
  v57 = v43;
  if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v58, &v56) & 1) == 0)
    goto LABEL_34;
LABEL_46:
  swift_beginAccess();
  v45 = *(_QWORD *)(a1 + 152);
  swift_beginAccess();
  v46 = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47 = sub_1BA6EB330(v45, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v47 & 1) == 0)
    goto LABEL_34;
  v48 = *(_QWORD *)(a1 + 168);
  v49 = *(_QWORD *)(a2 + 168);
  v8 = (v48 | v49) == 0;
  if (v48 && v49)
  {
    if (*(_QWORD *)(a1 + 160) == *(_QWORD *)(a2 + 160) && v48 == v49)
      v8 = 1;
    else
      v8 = sub_1BB874398();
  }
  return v8 & 1;
}

uint64_t _s8NewsFeed19FormatViewNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v10 = sub_1BB874398();
    v8 = 0;
    if ((v10 & 1) == 0)
      return v8 & 1;
  }
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v12 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA891218(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    goto LABEL_42;
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a2 + 56);
  if (v14)
  {
    if (!v15)
      goto LABEL_42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA881EAC(v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_42;
  }
  else if (v15)
  {
    goto LABEL_42;
  }
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a2 + 64);
  if ((~v17 & 0xF000000000000007) == 0)
  {
    if ((~v18 & 0xF000000000000007) == 0)
      goto LABEL_24;
LABEL_22:
    sub_1BA6E6C68(v18);
    sub_1BA6E6CD8(v17);
    sub_1BA6E6CD8(v18);
    goto LABEL_42;
  }
  v89 = *(_QWORD *)(a1 + 64);
  if ((~v18 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_22;
  }
  v78 = v18;
  swift_retain_n();
  static FormatBackground.== infix(_:_:)((uint64_t)&v89);
  v20 = v19;
  swift_release();
  sub_1BA6E6CD8(v17);
  if ((v20 & 1) == 0)
    goto LABEL_42;
LABEL_24:
  v21 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72))
  {
    if (!v21)
      goto LABEL_42;
    swift_bridgeObjectRetain();
    v22 = swift_bridgeObjectRetain();
    v23 = sub_1BA882894(v22, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v23)
      goto LABEL_42;
  }
  else if (v21)
  {
    goto LABEL_42;
  }
  v25 = *(_QWORD *)(a1 + 80);
  v24 = *(_QWORD *)(a1 + 88);
  v26 = *(unsigned __int8 *)(a1 + 96);
  v28 = *(_QWORD *)(a2 + 80);
  v27 = *(_QWORD *)(a2 + 88);
  v29 = *(unsigned __int8 *)(a2 + 96);
  if (v26 <= 0xFD)
  {
    v89 = *(_QWORD *)(a1 + 80);
    v90 = v24;
    LOBYTE(v91) = v26;
    if (v29 > 0xFD)
    {
      sub_1BA6F2B04(v25, v24, v26);
      sub_1BA6F2B04(v25, v24, v26);
      sub_1BA6F2B88(v25, v24, v26);
      goto LABEL_34;
    }
    v78 = v28;
    v79 = v27;
    LOBYTE(v80) = v29;
    sub_1BA6E6C54(v25, v24, v26);
    sub_1BA6F2B04(v25, v24, v26);
    v30 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v89, (uint64_t)&v78);
    sub_1BA6F2B88(v89, v90, v91);
    sub_1BA6E6CC4(v25, v24, v26);
    if ((v30 & 1) != 0)
      goto LABEL_36;
LABEL_42:
    v8 = 0;
    return v8 & 1;
  }
  if (v29 <= 0xFD)
  {
LABEL_34:
    sub_1BA6E6C54(v28, v27, v29);
    sub_1BA6E6CC4(v25, v24, v26);
    sub_1BA6E6CC4(v28, v27, v29);
    goto LABEL_42;
  }
LABEL_36:
  v32 = *(_QWORD *)(a1 + 104);
  v31 = *(_QWORD *)(a1 + 112);
  v34 = *(_QWORD *)(a1 + 120);
  v33 = *(_QWORD *)(a1 + 128);
  v35 = *(_QWORD *)(a1 + 136);
  v36 = *(_QWORD *)(a1 + 144);
  v38 = *(_QWORD *)(a1 + 152);
  v37 = *(_QWORD *)(a1 + 160);
  v39 = *(_QWORD *)(a1 + 168);
  v40 = *(_QWORD *)(a1 + 176);
  v41 = *(unsigned __int8 *)(a1 + 184);
  v42 = *(_QWORD *)(a2 + 104);
  v43 = *(_QWORD *)(a2 + 112);
  v45 = *(_QWORD *)(a2 + 120);
  v44 = *(_QWORD *)(a2 + 128);
  v46 = *(_QWORD *)(a2 + 136);
  v47 = *(_QWORD *)(a2 + 144);
  v48 = *(_QWORD *)(a2 + 152);
  v49 = *(_QWORD *)(a2 + 160);
  v50 = *(_QWORD *)(a2 + 168);
  v51 = *(_QWORD *)(a2 + 176);
  v52 = *(unsigned __int8 *)(a2 + 184);
  if (v41 == 254)
  {
    if (v52 == 254)
      goto LABEL_45;
    goto LABEL_41;
  }
  v89 = *(_QWORD *)(a1 + 104);
  v90 = v31;
  v91 = v34;
  v92 = v33;
  v93 = v35;
  v94 = v36;
  v95 = v38;
  v96 = v37;
  v97 = v39;
  v98 = v40;
  v99 = v41;
  v76 = v39;
  v77 = v32;
  v75 = v40;
  if (v52 == 254)
  {
    v72 = v37;
    v73 = v35;
    v53 = v38;
    v54 = v36;
    v70 = v34;
    v71 = v33;
    v68 = v49;
    v69 = v31;
    v66 = v47;
    v67 = v48;
    v65 = v46;
    swift_retain();
    v46 = v65;
    v47 = v66;
    v48 = v67;
    v49 = v68;
    v40 = v75;
    v39 = v76;
    v32 = v77;
    v31 = v69;
    v34 = v70;
    v33 = v71;
    v37 = v72;
    v36 = v54;
    v35 = v73;
    v38 = v53;
LABEL_41:
    v89 = v32;
    v90 = v31;
    v91 = v34;
    v92 = v33;
    v93 = v35;
    v94 = v36;
    v95 = v38;
    v96 = v37;
    v97 = v39;
    v98 = v40;
    v99 = v41;
    v100 = v42;
    v101 = v43;
    v102 = v45;
    v103 = v44;
    v104 = v46;
    v105 = v47;
    v106 = v48;
    v107 = v49;
    v108 = v50;
    v109 = v51;
    v110 = v52;
    sub_1BA6E8A48(v42, v43, v45, v44, v46, v47, v48, v49, v50, v51, v52);
    sub_1BA9F10E8((uint64_t)&v89);
    goto LABEL_42;
  }
  v78 = v42;
  LODWORD(v79) = v43;
  v80 = v45;
  v81 = v44;
  v82 = v46;
  v83 = v47;
  v84 = v48;
  v85 = v49;
  v86 = v50;
  v87 = v51;
  v88 = v52;
  v56 = v31;
  v57 = v34;
  v58 = v33;
  v59 = v35;
  v60 = v36;
  v61 = v38;
  v62 = v37;
  sub_1BA6E8A48(v32, v31, v34, v33, v35, v36, v38, v37, v39, v40, v41);
  swift_retain();
  v74 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v89, (uint64_t)&v78);
  swift_release();
  sub_1BA6E8A78(v77, v56, v57, v58, v59, v60, v61, v62, v76, v75, v41);
  if ((v74 & 1) == 0)
    goto LABEL_42;
LABEL_45:
  v63 = *(unsigned __int8 *)(a1 + 185);
  v8 = v63 == 2;
  v64 = *(unsigned __int8 *)(a2 + 185);
  if (v64 != 2)
    v8 = 0;
  if (v63 != 2 && v64 != 2)
    v8 = ((v63 & 1) == 0) ^ v64;
  return v8 & 1;
}

uint64_t _s8NewsFeed14FormatViewNodeC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  int v27;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  unint64_t v41[3];
  unint64_t v42[18];
  _QWORD v43[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  v43[0] = *(_QWORD *)(a1 + 32);
  v42[15] = *(_QWORD *)(a2 + 32);
  static FormatSize.== infix(_:_:)((uint64_t)v43);
  if ((v9 & 1) == 0)
    goto LABEL_26;
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a2 + 40);
  if (v10)
  {
    if (!v11)
      goto LABEL_26;
    v12 = *(_QWORD *)(v10 + 16);
    v13 = *(_QWORD *)(v11 + 16);
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 16);
    swift_beginAccess();
    v15 = *(_QWORD *)(v13 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA8583F8(v14, v15);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      goto LABEL_26;
  }
  else if (v11)
  {
    goto LABEL_26;
  }
  swift_beginAccess();
  v17 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v18 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_1BA882CE0(v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
    goto LABEL_26;
  v20 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (!v20)
      goto LABEL_26;
    swift_retain();
    v21 = swift_retain();
    v22 = _s8NewsFeed19FormatViewNodeStyleC2eeoiySbAC_ACtFZ_0(v21, v20);
    swift_release();
    swift_release();
    if ((v22 & 1) == 0)
      goto LABEL_26;
  }
  else if (v20)
  {
    goto LABEL_26;
  }
  v23 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (!v23)
      goto LABEL_26;
    swift_retain();
    v24 = swift_retain();
    v25 = _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(v24, v23);
    swift_release();
    swift_release();
    if ((v25 & 1) == 0)
      goto LABEL_26;
  }
  else if (v23)
  {
    goto LABEL_26;
  }
  swift_beginAccess();
  v26 = *(_QWORD *)(a1 + 72);
  swift_beginAccess();
  if (v26 != *(_QWORD *)(a2 + 72))
    goto LABEL_26;
  swift_beginAccess();
  v42[0] = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  v41[0] = *(_QWORD *)(a2 + 80);
  if ((static FormatVisibility.== infix(_:_:)(v42, v41) & 1) == 0)
    goto LABEL_26;
  swift_beginAccess();
  v27 = *(unsigned __int8 *)(a1 + 88);
  swift_beginAccess();
  if (v27 != *(unsigned __int8 *)(a2 + 88))
    goto LABEL_26;
  v29 = *(unsigned __int8 *)(a1 + 104);
  v30 = *(unsigned __int8 *)(a2 + 104);
  if (v29 > 0xFD)
  {
    if (v30 > 0xFD)
      goto LABEL_33;
LABEL_26:
    v8 = 0;
    return v8 & 1;
  }
  v31 = *(_QWORD *)(a2 + 96);
  v39 = *(_QWORD *)(a1 + 96);
  v40 = v29;
  if (v30 > 0xFD)
    goto LABEL_26;
  v37 = v31;
  v38 = v30;
  if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v39, &v37) & 1) == 0)
    goto LABEL_26;
LABEL_33:
  swift_beginAccess();
  v32 = *(_QWORD *)(a1 + 112);
  swift_beginAccess();
  v33 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = sub_1BA6EB330(v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v34 & 1) == 0)
    goto LABEL_26;
  v35 = *(_QWORD *)(a1 + 128);
  v36 = *(_QWORD *)(a2 + 128);
  v8 = (v35 | v36) == 0;
  if (v35 && v36)
  {
    if (*(_QWORD *)(a1 + 120) == *(_QWORD *)(a2 + 120) && v35 == v36)
      v8 = 1;
    else
      v8 = sub_1BB874398();
  }
  return v8 & 1;
}

uint64_t sub_1BAE6F6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  _QWORD v29[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v10 = sub_1BB874398();
    v8 = 0;
    if ((v10 & 1) == 0)
      return v8 & 1;
  }
  swift_beginAccess();
  v11 = *(_QWORD **)(a1 + 48);
  swift_beginAccess();
  if ((sub_1BA6A45BC(v11, *(_QWORD **)(a2 + 48)) & 1) == 0)
    goto LABEL_30;
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  v14 = *(_QWORD *)(a2 + 64);
  if (v13)
  {
    if (!v14)
      goto LABEL_30;
    if (v12 != *(_QWORD *)(a2 + 56) || v13 != v14)
    {
      v15 = sub_1BB874398();
      v8 = 0;
      if ((v15 & 1) == 0)
        return v8 & 1;
    }
  }
  else if (v14)
  {
    goto LABEL_30;
  }
  swift_beginAccess();
  v16 = *(_QWORD *)(a1 + 72);
  v17 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  v18 = *(_QWORD *)(a2 + 80);
  if (!v17)
  {
    if (v18)
      goto LABEL_30;
LABEL_26:
    swift_beginAccess();
    v29[0] = *(_QWORD *)(a1 + 88);
    swift_beginAccess();
    static FormatSize.== infix(_:_:)((uint64_t)v29);
    if ((v20 & 1) != 0)
    {
      swift_beginAccess();
      v21 = *(_QWORD *)(a1 + 96);
      swift_beginAccess();
      v22 = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_1BA882CE0(v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
        swift_beginAccess();
        v24 = *(_QWORD *)(a1 + 104);
        swift_beginAccess();
        v25 = *(_QWORD *)(a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = sub_1BA883A18(v24, v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v26 & 1) != 0)
        {
          swift_beginAccess();
          v27 = *(_BYTE *)(a1 + 112);
          swift_beginAccess();
          v8 = v27 ^ *(_BYTE *)(a2 + 112) ^ 1;
          return v8 & 1;
        }
      }
    }
LABEL_30:
    v8 = 0;
    return v8 & 1;
  }
  if (!v18)
    goto LABEL_30;
  if (v16 == *(_QWORD *)(a2 + 72) && v17 == v18)
    goto LABEL_26;
  v19 = sub_1BB874398();
  v8 = 0;
  if ((v19 & 1) != 0)
    goto LABEL_26;
  return v8 & 1;
}

uint64_t sub_1BAE6F9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  _QWORD v29[3];

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 16) || v5 != *(_QWORD *)(a2 + 24))
  {
    v7 = sub_1BB874398();
    v8 = 0;
    if ((v7 & 1) == 0)
      return v8 & 1;
  }
  swift_beginAccess();
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  swift_beginAccess();
  v11 = *(_QWORD *)(a2 + 40);
  if (!v10)
  {
    if (v11)
      goto LABEL_33;
    goto LABEL_13;
  }
  if (!v11)
    goto LABEL_33;
  if (v9 == *(_QWORD *)(a2 + 32) && v10 == v11 || (v12 = sub_1BB874398(), v8 = 0, (v12 & 1) != 0))
  {
LABEL_13:
    swift_beginAccess();
    v13 = *(_QWORD *)(a1 + 48);
    v14 = *(_QWORD *)(a1 + 56);
    swift_beginAccess();
    v15 = *(_QWORD *)(a2 + 56);
    if (v14)
    {
      if (!v15)
        goto LABEL_33;
      if (v13 != *(_QWORD *)(a2 + 48) || v14 != v15)
      {
        v16 = sub_1BB874398();
        v8 = 0;
        if ((v16 & 1) == 0)
          return v8 & 1;
      }
    }
    else if (v15)
    {
      goto LABEL_33;
    }
    swift_beginAccess();
    v29[0] = *(_QWORD *)(a1 + 64);
    swift_beginAccess();
    static FormatSize.== infix(_:_:)((uint64_t)v29);
    if ((v17 & 1) == 0)
      goto LABEL_33;
    v18 = *(_QWORD *)(a1 + 80);
    v19 = *(_QWORD *)(a2 + 80);
    if (v18)
    {
      if (v19)
      {
        if (*(_QWORD *)(a1 + 72) != *(_QWORD *)(a2 + 72) || v18 != v19)
        {
          v20 = sub_1BB874398();
          v8 = 0;
          if ((v20 & 1) == 0)
            return v8 & 1;
        }
        goto LABEL_28;
      }
      swift_bridgeObjectRetain();
    }
    else if (!v19)
    {
LABEL_28:
      swift_beginAccess();
      v21 = *(_QWORD *)(a1 + 88);
      swift_beginAccess();
      v22 = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_1BA882CE0(v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
        swift_beginAccess();
        v24 = *(_QWORD *)(a1 + 96);
        swift_beginAccess();
        v25 = *(_QWORD *)(a2 + 96);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = sub_1BA883A18(v24, v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v26 & 1) != 0)
        {
          swift_beginAccess();
          v27 = *(_BYTE *)(a1 + 104);
          swift_beginAccess();
          v8 = v27 ^ *(_BYTE *)(a2 + 104) ^ 1;
          return v8 & 1;
        }
      }
LABEL_33:
      v8 = 0;
      return v8 & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  return v8 & 1;
}

uint64_t _s8NewsFeed20FormatImageNodeStyleC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  BOOL v32;
  int v33;
  int v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  BOOL v51;
  int v52;
  int v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  char v72;
  int v73;
  int v74;
  _BOOL4 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t);
  unsigned int (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t);
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;

  v4 = sub_1BB86E710();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
  v108 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v87 - v9;
  sub_1BAEE7C2C(0, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, v5);
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v87 - v13;
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  if (v15 != *(_QWORD *)(a2 + 16) || v16 != *(_QWORD *)(a2 + 24))
  {
    LOBYTE(v17) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v17 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    LOBYTE(v17) = 0;
    if ((sub_1BB874398() & 1) == 0)
      return v17 & 1;
  }
  v107 = v4;
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  v19 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_1BA891120(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v20)
    goto LABEL_48;
  v21 = *(_QWORD *)(a1 + 56);
  v17 = *(_QWORD *)(a2 + 56);
  if (v21)
  {
    if (!v17)
      return v17 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_1BA881EAC(v21, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      goto LABEL_48;
  }
  else if (v17)
  {
    goto LABEL_48;
  }
  swift_beginAccess();
  v23 = *(_QWORD *)(a1 + 64);
  swift_beginAccess();
  v24 = *(_QWORD *)(a2 + 64);
  if (v23)
  {
    if (!v24)
      goto LABEL_48;
    swift_bridgeObjectRetain();
    v25 = swift_bridgeObjectRetain();
    v26 = sub_1BA888FD8(v25, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
      goto LABEL_48;
  }
  else if (v24)
  {
    goto LABEL_48;
  }
  v27 = *(_QWORD *)(a1 + 72);
  v28 = *(_QWORD *)(a2 + 72);
  if ((~v27 & 0xF000000000000007) == 0)
  {
    if ((~v28 & 0xF000000000000007) == 0)
      goto LABEL_25;
LABEL_23:
    sub_1BA6E6C68(v28);
    sub_1BA6E6CD8(v27);
    sub_1BA6E6CD8(v28);
    goto LABEL_48;
  }
  v120 = *(_QWORD *)(a1 + 72);
  if ((~v28 & 0xF000000000000007) == 0)
  {
    swift_retain();
    goto LABEL_23;
  }
  v109 = v28;
  sub_1BA6E6C68(v27);
  swift_retain();
  _s8NewsFeed16FormatBackgroundO2eeoiySbAC_ACtFZ_0((uint64_t)&v120);
  v30 = v29;
  swift_release();
  sub_1BA6E6CD8(v27);
  if ((v30 & 1) == 0)
    goto LABEL_48;
LABEL_25:
  v17 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (!v17)
      return v17 & 1;
    swift_bridgeObjectRetain();
    v31 = swift_bridgeObjectRetain();
    v32 = sub_1BA882894(v31, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v32)
      goto LABEL_48;
  }
  else if (v17)
  {
    goto LABEL_48;
  }
  v33 = *(unsigned __int8 *)(a1 + 88);
  v34 = *(unsigned __int8 *)(a2 + 88);
  if (v33 == 9)
  {
    if (v34 != 9)
      goto LABEL_48;
  }
  else
  {
    if (v34 == 9)
      goto LABEL_48;
    sub_1BB7FB5E4(v33);
    if ((v35 & 1) == 0)
      goto LABEL_48;
  }
  v36 = *(_QWORD *)(a1 + 96);
  v37 = *(_QWORD *)(a1 + 104);
  v38 = *(unsigned __int8 *)(a1 + 112);
  v40 = *(_QWORD *)(a2 + 96);
  v39 = *(_QWORD *)(a2 + 104);
  v41 = *(unsigned __int8 *)(a2 + 112);
  if (v38 > 0xFD)
  {
    v106 = *(_QWORD *)(a1 + 96);
    if (v41 > 0xFD)
      goto LABEL_42;
LABEL_40:
    v45 = v40;
    v46 = v39;
    sub_1BA6E6C54(v40, v39, v41);
    sub_1BA6E6CC4(v106, v37, v38);
    sub_1BA6E6CC4(v45, v46, v41);
    goto LABEL_48;
  }
  v120 = *(_QWORD *)(a1 + 96);
  v121 = v37;
  LOBYTE(v122) = v38;
  if (v41 > 0xFD)
  {
    v42 = v36;
    v43 = v40;
    v44 = v39;
    sub_1BA6F2B04(v36, v37, v38);
    sub_1BA6F2B04(v42, v37, v38);
    v106 = v42;
    sub_1BA6F2B88(v42, v37, v38);
    v40 = v43;
    v39 = v44;
    goto LABEL_40;
  }
  v109 = v40;
  v110 = v39;
  LOBYTE(v111) = v41;
  v47 = v36;
  sub_1BA6E6C54(v36, v37, v38);
  sub_1BA6F2B04(v47, v37, v38);
  LODWORD(v106) = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v120, (uint64_t)&v109);
  sub_1BA6F2B88(v120, v121, v122);
  sub_1BA6E6CC4(v47, v37, v38);
  if ((v106 & 1) == 0)
    goto LABEL_48;
LABEL_42:
  v48 = *(_QWORD *)(a1 + 120);
  v49 = *(_QWORD *)(a2 + 120);
  if (v48 == 3)
  {
    if (v49 == 3)
      goto LABEL_51;
LABEL_47:
    sub_1BA6E6C80(v49);
    sub_1BA6E6CF0(v48);
    sub_1BA6E6CF0(v49);
    goto LABEL_48;
  }
  v120 = *(_QWORD *)(a1 + 120);
  if (v49 == 3)
  {
    sub_1BA6E6E84(v48);
    sub_1BA6E6E84(v48);
    sub_1BA6E7468(v48);
    goto LABEL_47;
  }
  v109 = v49;
  sub_1BA6E6E84(v48);
  sub_1BA6E6E84(v48);
  v51 = static FormatImageRenderingMode.== infix(_:_:)((unint64_t *)&v120, (unint64_t *)&v109);
  sub_1BA6E7468(v120);
  sub_1BA6E6CF0(v48);
  if (!v51)
    goto LABEL_48;
LABEL_51:
  v52 = *(unsigned __int8 *)(a1 + 128);
  v53 = *(unsigned __int8 *)(a2 + 128);
  if (v52 == 4)
  {
    if (v53 != 4)
      goto LABEL_48;
  }
  else
  {
    if (v53 == 4)
      goto LABEL_48;
    sub_1BB7FB4A8(v52);
    if ((v54 & 1) == 0)
      goto LABEL_48;
  }
  v55 = *(_QWORD *)(a1 + 144);
  v101 = *(_QWORD *)(a1 + 136);
  v102 = v55;
  v56 = *(_QWORD *)(a1 + 160);
  v57 = *(_QWORD *)(a1 + 168);
  v103 = *(_QWORD *)(a1 + 152);
  v104 = v56;
  v58 = *(_QWORD *)(a1 + 184);
  v105 = *(_QWORD *)(a1 + 176);
  v106 = v58;
  v59 = *(_QWORD *)(a1 + 192);
  v100 = *(_QWORD *)(a1 + 200);
  v60 = *(_QWORD *)(a1 + 208);
  v98 = v59;
  v99 = v60;
  v61 = *(unsigned __int8 *)(a1 + 216);
  v62 = *(_QWORD *)(a2 + 144);
  v90 = *(_QWORD *)(a2 + 136);
  v91 = v62;
  v63 = *(_QWORD *)(a2 + 160);
  v92 = *(_QWORD *)(a2 + 152);
  v93 = v63;
  v64 = *(_QWORD *)(a2 + 176);
  v94 = *(_QWORD *)(a2 + 168);
  v95 = v64;
  v65 = *(_QWORD *)(a2 + 192);
  v96 = *(_QWORD *)(a2 + 184);
  v97 = v65;
  v66 = *(_QWORD *)(a2 + 200);
  v88 = *(_QWORD *)(a2 + 208);
  v89 = v66;
  v67 = *(unsigned __int8 *)(a2 + 216);
  if (v61 == 254)
  {
    if (v67 == 254)
      goto LABEL_63;
LABEL_61:
    v120 = v101;
    v121 = v102;
    v122 = v103;
    v123 = v104;
    v124 = v57;
    v125 = v105;
    v126 = v106;
    v127 = v98;
    v128 = v100;
    v129 = v99;
    v130 = v61;
    v131 = v90;
    v132 = v91;
    v133 = v92;
    v134 = v93;
    v135 = v94;
    v136 = v95;
    v137 = v96;
    v138 = v97;
    v139 = v89;
    v140 = v88;
    v141 = v67;
    sub_1BA6E8A48(v90, v91, v92, v93, v94, v95, v96, v97, v89, v88, v67);
    sub_1BA9F10E8((uint64_t)&v120);
    goto LABEL_48;
  }
  v120 = v101;
  v121 = v102;
  v122 = v103;
  v123 = v104;
  v124 = v57;
  v125 = v105;
  v126 = v106;
  v127 = v98;
  v128 = v100;
  v129 = v99;
  v130 = v61;
  if (v67 == 254)
  {
    swift_retain();
    goto LABEL_61;
  }
  v109 = v90;
  LODWORD(v110) = v91;
  v111 = v92;
  v112 = v93;
  v113 = v94;
  v114 = v95;
  v115 = v96;
  v116 = v97;
  v117 = v89;
  v118 = v88;
  v119 = v67;
  v68 = v98;
  sub_1BA6E8A48(v101, v102, v103, v104, v57, v105, v106, v98, v100, v99, v61);
  swift_retain();
  LODWORD(v97) = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v120, (uint64_t)&v109);
  swift_release();
  sub_1BA6E8A78(v101, v102, v103, v104, v57, v105, v106, v68, v100, v99, v61);
  if ((v97 & 1) == 0)
    goto LABEL_48;
LABEL_63:
  v69 = *(_QWORD *)(a1 + 224);
  v70 = *(_QWORD *)(a2 + 224);
  if ((~v69 & 0xF000000000000007) != 0)
  {
    v120 = *(_QWORD *)(a1 + 224);
    if ((~v70 & 0xF000000000000007) != 0)
    {
      v109 = v70;
      swift_retain_n();
      static FormatColor.== infix(_:_:)((uint64_t)&v120);
      v72 = v71;
      swift_release();
      sub_1BA5E800C(v69);
      if ((v72 & 1) == 0)
        goto LABEL_48;
      goto LABEL_70;
    }
    swift_retain();
LABEL_68:
    sub_1BA5E7FF4(v70);
    sub_1BA5E800C(v69);
    sub_1BA5E800C(v70);
    goto LABEL_48;
  }
  if ((~v70 & 0xF000000000000007) != 0)
    goto LABEL_68;
LABEL_70:
  v73 = *(unsigned __int8 *)(a1 + 232);
  v74 = *(unsigned __int8 *)(a2 + 232);
  if (v73 == 2)
  {
    if (v74 != 2)
      goto LABEL_48;
    goto LABEL_75;
  }
  LOBYTE(v17) = 0;
  v75 = (v73 & 1) == 0;
  if (v74 != 2 && ((v75 ^ v74) & 1) != 0)
  {
LABEL_75:
    v77 = *(_QWORD *)(a1 + 240);
    v76 = *(_QWORD *)(a1 + 248);
    v78 = *(_QWORD *)(a2 + 240);
    v106 = *(_QWORD *)(a2 + 248);
    if (v77 == 1)
    {
      if (v78 == 1)
        goto LABEL_82;
      goto LABEL_80;
    }
    v120 = v77;
    v121 = v76;
    if (v78 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_80:
      sub_1BA6E6C90(v78);
      sub_1BA6E6D00(v77);
      sub_1BA6E6D00(v78);
      goto LABEL_48;
    }
    v109 = v78;
    v110 = v106;
    sub_1BA6E6C90(v77);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LODWORD(v106) = _s8NewsFeed22FormatImageNodeRequestV2eeoiySbAC_ACtFZ_0(&v120, &v109);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6E6D00(v77);
    if ((v106 & 1) != 0)
    {
LABEL_82:
      v79 = a2 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask;
      v80 = (uint64_t)&v14[*(int *)(v12 + 48)];
      v81 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
      sub_1BA5E01A4(a1 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, (uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      sub_1BA5E01A4(v79, v80, (unint64_t *)&qword_1ED3C47E8, v81);
      v82 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
      if (v82((uint64_t)v14, 1, v107) == 1)
      {
        if (v82(v80, 1, v107) == 1)
        {
          sub_1BA5C699C((uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          LOBYTE(v17) = 1;
          return v17 & 1;
        }
      }
      else
      {
        sub_1BA5E01A4((uint64_t)v14, (uint64_t)v10, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        if (v82(v80, 1, v107) != 1)
        {
          v83 = v107;
          v84 = v108;
          (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v7, v80, v107);
          v85 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
          sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
          LOBYTE(v17) = sub_1BB872958();
          v86 = *(void (**)(char *, uint64_t))(v84 + 8);
          v86(v7, v83);
          v86(v10, v83);
          sub_1BA5C699C((uint64_t)v14, (unint64_t *)&qword_1ED3C47E8, v85);
          return v17 & 1;
        }
        (*(void (**)(char *, uint64_t))(v108 + 8))(v10, v107);
      }
      sub_1BAEE7BF0((uint64_t)v14, (unint64_t *)&qword_1ED3C47F0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    }
LABEL_48:
    LOBYTE(v17) = 0;
  }
  return v17 & 1;
}

void sub_1BAE707C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BE8)
  {
    sub_1BAE70840();
    sub_1BA4A2870(&qword_1ED3D1090, (uint64_t (*)(uint64_t))sub_1BAE70840, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BE8);
  }
}

uint64_t sub_1BAE70840()
{
  uint64_t result;

  result = qword_1ED3D1098;
  if (!qword_1ED3D1098)
  {
    sub_1BAE708C0();
    sub_1BA828F3C();
    sub_1BAE70904();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE708C0()
{
  unint64_t result;

  result = qword_1ED3D0A20;
  if (!qword_1ED3D0A20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2158, &_s10CodingKeysON_259);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A20);
  }
  return result;
}

unint64_t sub_1BAE70904()
{
  unint64_t result;

  result = qword_1ED3D0A18;
  if (!qword_1ED3D0A18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D20E0, &_s10CodingKeysON_259);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A18);
  }
  return result;
}

uint64_t sub_1BAE70948@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BB8746EC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BAE70980()
{
  return 32;
}

__n128 sub_1BAE7098C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

void sub_1BAE70998(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF70)
  {
    sub_1BAE70A10();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEC90, (uint64_t (*)(uint64_t))sub_1BAE70A10, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF70);
  }
}

void sub_1BAE70A10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEC98)
  {
    sub_1BAE70840();
    sub_1BA4A2870(&qword_1ED3D1090, (uint64_t (*)(uint64_t))sub_1BAE70840, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEC98);
  }
}

void sub_1BAE70A88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE600)
  {
    sub_1BAE70B00();
    sub_1BA4A2870(&qword_1ED3AD938, (uint64_t (*)(uint64_t))sub_1BAE70B00, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE600);
  }
}

uint64_t sub_1BAE70B00()
{
  uint64_t result;

  result = qword_1ED3AD940;
  if (!qword_1ED3AD940)
  {
    sub_1BAE70B80();
    sub_1BAE70BC4();
    sub_1BAE70C08();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE70B80()
{
  unint64_t result;

  result = qword_1ED3AD7C8;
  if (!qword_1ED3AD7C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2080, &_s10CodingKeysON_258);
    atomic_store(result, (unint64_t *)&qword_1ED3AD7C8);
  }
  return result;
}

unint64_t sub_1BAE70BC4()
{
  unint64_t result;

  result = qword_1ED3A7420;
  if (!qword_1ED3A7420)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2030, &_s10CodingKeysON_258);
    atomic_store(result, (unint64_t *)&qword_1ED3A7420);
  }
  return result;
}

unint64_t sub_1BAE70C08()
{
  unint64_t result;

  result = qword_1ED3AD7C0;
  if (!qword_1ED3AD7C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2008, &_s10CodingKeysON_258);
    atomic_store(result, (unint64_t *)&qword_1ED3AD7C0);
  }
  return result;
}

void sub_1BAE70C4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFF8)
  {
    sub_1BAE70CC4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEDA0, (uint64_t (*)(uint64_t))sub_1BAE70CC4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFF8);
  }
}

void sub_1BAE70CC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEDA8)
  {
    sub_1BAE70B00();
    sub_1BA4A2870(&qword_1ED3AD938, (uint64_t (*)(uint64_t))sub_1BAE70B00, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEDA8);
  }
}

unint64_t sub_1BAE70D3C()
{
  unint64_t result;

  result = qword_1ED3A4370;
  if (!qword_1ED3A4370)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1FE0, &_s10CodingTypeON_184);
    atomic_store(result, (unint64_t *)&qword_1ED3A4370);
  }
  return result;
}

uint64_t sub_1BAE70D80(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v7;

  if ((a5 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch(v7 & 0xFFFFFFFC | (a4 >> 2) & 3)
  {
    case 0u:
      result = sub_1BA856ECC(result, a2, a3, a4, a6);
      break;
    case 3u:
      result = a6();
      break;
    case 6u:
      result = sub_1BA856F00(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      result = a7(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BAE70DF4()
{
  unint64_t result;

  result = qword_1ED3A16B0;
  if (!qword_1ED3A16B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1FB8, &_s10CodingTypeON_183);
    atomic_store(result, (unint64_t *)&qword_1ED3A16B0);
  }
  return result;
}

unint64_t sub_1BAE70E38()
{
  unint64_t result;

  result = qword_1ED3A9BD8;
  if (!qword_1ED3A9BD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementModifier.Text, &type metadata for FormatOptionsNodeStatementModifier.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3A9BD8);
  }
  return result;
}

unint64_t sub_1BAE70E7C()
{
  unint64_t result;

  result = qword_1ED3A9BF0;
  if (!qword_1ED3A9BF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementModifier.Float, &type metadata for FormatOptionsNodeStatementModifier.Float);
    atomic_store(result, (unint64_t *)&qword_1ED3A9BF0);
  }
  return result;
}

unint64_t sub_1BAE70EC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2378;
  if (!qword_1EF2B2378)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2370, (uint64_t (*)(void))sub_1BA829C74, (uint64_t)&type metadata for FormatSyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2378);
  }
  return result;
}

uint64_t sub_1BAE70F2C()
{
  uint64_t v0;
  int v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 != 255)
    sub_1BA76F57C(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v1);
  return swift_deallocObject();
}

uint64_t sub_1BAE70F6C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_1BA60DFC4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  v1 = *(unsigned __int16 *)(v0 + 64);
  if (v1 >> 8 <= 0xFE)
    sub_1BA740434(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), v1, SBYTE1(v1));
  if ((~*(_QWORD *)(v0 + 72) & 0xF000000000000007) != 0)
  {
    swift_release();
    swift_release();
  }
  sub_1BA69C828(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  v2 = *(_QWORD *)(v0 + 112);
  if ((~v2 & 0xF000000000000007) != 0)
    sub_1BA6F5D74(v2);
  return swift_deallocObject();
}

uint64_t sub_1BAE70FF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_BYTE *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(unsigned __int16 *)(a1 + 48);
  sub_1BA60DF54(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_1BA740E74(v2, v3, v9);
  sub_1BA60DEE4(v4);
  sub_1BA69C808(v5, v6, v7);
  sub_1BA895BA4(v8);
  return a1;
}

uint64_t sub_1BAE71094(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_BYTE *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(unsigned __int16 *)(a1 + 48);
  sub_1BA60DFC4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_1BA740460(v2, v3, v9);
  sub_1BA60DF1C(v4);
  sub_1BA69C828(v5, v6, v7);
  sub_1BA895BB8(v8);
  return a1;
}

uint64_t sub_1BAE71130(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v11;
    v4 = a1 + 32;
    do
    {
      swift_getAtKeyPath();
      v6 = *(_QWORD *)(v11 + 16);
      v5 = *(_QWORD *)(v11 + 24);
      if (v6 >= v5 >> 1)
        sub_1BA7447E8(v5 > 1, v6 + 1, 1);
      *(_QWORD *)(v11 + 16) = v6 + 1;
      v7 = v11 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BAE71220(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v11;
    v4 = a1 + 32;
    do
    {
      ++v4;
      swift_getAtKeyPath();
      v6 = *(_QWORD *)(v11 + 16);
      v5 = *(_QWORD *)(v11 + 24);
      if (v6 >= v5 >> 1)
        sub_1BA7447E8(v5 > 1, v6 + 1, 1);
      *(_QWORD *)(v11 + 16) = v6 + 1;
      v7 = v11 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1BAE7130C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE268)
  {
    sub_1BAE71384();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF270, (uint64_t (*)(uint64_t))sub_1BAE71384, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE268);
  }
}

void sub_1BAE71384()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF278)
  {
    sub_1BAE713FC();
    sub_1BA4A2870(&qword_1ED3D1520, (uint64_t (*)(uint64_t))sub_1BAE713FC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF278);
  }
}

uint64_t sub_1BAE713FC()
{
  uint64_t result;

  result = qword_1ED3D1528;
  if (!qword_1ED3D1528)
  {
    sub_1BAE7147C();
    sub_1BA639DEC();
    sub_1BAE714C0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7147C()
{
  unint64_t result;

  result = qword_1ED3D0268;
  if (!qword_1ED3D0268)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1F58, &_s10CodingKeysON_257);
    atomic_store(result, (unint64_t *)&qword_1ED3D0268);
  }
  return result;
}

unint64_t sub_1BAE714C0()
{
  unint64_t result;

  result = qword_1ED3D0260;
  if (!qword_1ED3D0260)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1EE0, &_s10CodingKeysON_257);
    atomic_store(result, (unint64_t *)&qword_1ED3D0260);
  }
  return result;
}

void sub_1BAE71504()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A70)
  {
    sub_1BAE7157C();
    sub_1BA4A2870(&qword_1ED3D0DA0, (uint64_t (*)(uint64_t))sub_1BAE7157C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A70);
  }
}

uint64_t sub_1BAE7157C()
{
  uint64_t result;

  result = qword_1ED3D0DA8;
  if (!qword_1ED3D0DA8)
  {
    sub_1BAE715FC();
    sub_1BA5F3EF0();
    sub_1BAE71640();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE715FC()
{
  unint64_t result;

  result = qword_1ED3D06F0;
  if (!qword_1ED3D06F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1EA8, &_s10CodingKeysON_256);
    atomic_store(result, (unint64_t *)&qword_1ED3D06F0);
  }
  return result;
}

unint64_t sub_1BAE71640()
{
  unint64_t result;

  result = qword_1ED3D06E8;
  if (!qword_1ED3D06E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1E30, &_s10CodingKeysON_256);
    atomic_store(result, (unint64_t *)&qword_1ED3D06E8);
  }
  return result;
}

void sub_1BAE71684(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDA8)
  {
    sub_1BAE716FC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE8F0, (uint64_t (*)(uint64_t))sub_1BAE716FC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDA8);
  }
}

void sub_1BAE716FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE8F8)
  {
    sub_1BAE7157C();
    sub_1BA4A2870(&qword_1ED3D0DA0, (uint64_t (*)(uint64_t))sub_1BAE7157C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE8F8);
  }
}

unint64_t sub_1BAE71774()
{
  unint64_t result;

  result = qword_1EF2B2380;
  if (!qword_1EF2B2380)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1E08, &_s14descr1E72CCB69O10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2380);
  }
  return result;
}

unint64_t sub_1BAE717B8()
{
  unint64_t result;

  result = qword_1ED3ADBF0;
  if (!qword_1ED3ADBF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Float, &type metadata for FormatPuzzleStatisticBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBF0);
  }
  return result;
}

unint64_t sub_1BAE717FC()
{
  unint64_t result;

  result = qword_1ED3A6B90;
  if (!qword_1ED3A6B90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Float, &type metadata for FormatHeadlineBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B90);
  }
  return result;
}

unint64_t sub_1BAE71840()
{
  unint64_t result;

  result = qword_1ED3A5B10;
  if (!qword_1ED3A5B10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88091C, &_s14descr1E7276531V4FontO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B10);
  }
  return result;
}

unint64_t sub_1BAE71884()
{
  unint64_t result;

  result = qword_1ED39D090;
  if (!qword_1ED39D090)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFontSize, &type metadata for FormatBindingFontSize);
    atomic_store(result, (unint64_t *)&qword_1ED39D090);
  }
  return result;
}

void sub_1BAE718C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCA0)
  {
    sub_1BAE71940();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCA0);
  }
}

void sub_1BAE71940()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE6F0)
  {
    sub_1BAE719B8();
    sub_1BA4A2870(&qword_1ED3D0BF0, (uint64_t (*)(uint64_t))sub_1BAE719B8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE6F0);
  }
}

uint64_t sub_1BAE719B8()
{
  uint64_t result;

  result = qword_1ED3D0BF8;
  if (!qword_1ED3D0BF8)
  {
    sub_1BAE71A38();
    sub_1BA5C2B60();
    sub_1BAE71A7C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE71A38()
{
  unint64_t result;

  result = qword_1ED3D04C0;
  if (!qword_1ED3D04C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1DD0, &_s10CodingKeysON_255);
    atomic_store(result, (unint64_t *)&qword_1ED3D04C0);
  }
  return result;
}

unint64_t sub_1BAE71A7C()
{
  unint64_t result;

  result = qword_1ED3D04B8;
  if (!qword_1ED3D04B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1D58, &_s10CodingKeysON_255);
    atomic_store(result, (unint64_t *)&qword_1ED3D04B8);
  }
  return result;
}

_QWORD *sub_1BAE71AC0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  __int128 v39;
  char v40;

  sub_1BA543C20();
  v36 = *(_QWORD *)(v2 - 8);
  v37 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFB8F4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE71FD8();
  sub_1BA4A2870(&qword_1ED3AD868, (uint64_t (*)(uint64_t))sub_1BAE71FD8, (uint64_t)&unk_1BB8FFC6C);
  v11 = (uint64_t)v38;
  sub_1BB87468C();
  v12 = (void *)v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v35 = v4;
  v13 = v6;
  v14 = a1[3];
  v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v15 = sub_1BB872874();
  LOBYTE(v14) = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v16 = v7;
  v17 = v37;
  if ((v14 & 1) != 0)
  {
    v18 = v13;
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v10 = (_QWORD *)*((_QWORD *)v21 - 2);
      v26 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      v28 = v16;
      MEMORY[0x1E0C80A78](v27);
      *(&v34 - 4) = (uint64_t)&_s10CodingKeysON_254;
      *(&v34 - 3) = sub_1BAE72058();
      *(&v34 - 2) = sub_1BAE7209C();
      *(&v34 - 1) = sub_1BAE720E0();
      swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E724D908);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v30 = v10;
      *(_QWORD *)(v30 + 8) = v26;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828((uint64_t)v10, v26, 1);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v18);
      a1 = v38;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEFB8F4);
  v24 = v23;
  v34 = v22;
  v39 = xmmword_1BB8A1A10;
  v40 = 0;
  sub_1BA4A2870(&qword_1ED3BBEA8, (uint64_t (*)(uint64_t))sub_1BA543C20, MEMORY[0x1E0DB3610]);
  v25 = v35;
  sub_1BB8740D4();
  v32 = v13;
  v33 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v17);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v32);
  type metadata accessor for FormatVariableNode();
  v10 = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v10[2] = v34;
  v10[3] = v24;
  swift_beginAccess();
  v10[4] = v33;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v10;
}

void sub_1BAE71EE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD90)
  {
    sub_1BAE71F60();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE8C0, (uint64_t (*)(uint64_t))sub_1BAE71F60, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD90);
  }
}

void sub_1BAE71F60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE8C8)
  {
    sub_1BAE71FD8();
    sub_1BA4A2870(&qword_1ED3AD868, (uint64_t (*)(uint64_t))sub_1BAE71FD8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE8C8);
  }
}

uint64_t sub_1BAE71FD8()
{
  uint64_t result;

  result = qword_1ED3AD870;
  if (!qword_1ED3AD870)
  {
    sub_1BAE72058();
    sub_1BAE7209C();
    sub_1BAE720E0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE72058()
{
  unint64_t result;

  result = qword_1ED3AD5D8;
  if (!qword_1ED3AD5D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1D20, &_s10CodingKeysON_254);
    atomic_store(result, (unint64_t *)&qword_1ED3AD5D8);
  }
  return result;
}

unint64_t sub_1BAE7209C()
{
  unint64_t result;

  result = qword_1ED3A62F8;
  if (!qword_1ED3A62F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1CD0, &_s10CodingKeysON_254);
    atomic_store(result, (unint64_t *)&qword_1ED3A62F8);
  }
  return result;
}

unint64_t sub_1BAE720E0()
{
  unint64_t result;

  result = qword_1ED3AD5D0;
  if (!qword_1ED3AD5D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1CA8, &_s10CodingKeysON_254);
    atomic_store(result, (unint64_t *)&qword_1ED3AD5D0);
  }
  return result;
}

unint64_t sub_1BAE72124()
{
  unint64_t result;

  result = qword_1ED3A69C8;
  if (!qword_1ED3A69C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1C80, &_s10CodingTypeON_181);
    atomic_store(result, (unint64_t *)&qword_1ED3A69C8);
  }
  return result;
}

void sub_1BAE72168()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C58)
  {
    sub_1BAE721E0();
    sub_1BA4A2870(&qword_1ED3D1170, (uint64_t (*)(uint64_t))sub_1BAE721E0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C58);
  }
}

uint64_t sub_1BAE721E0()
{
  uint64_t result;

  result = qword_1ED3D1178;
  if (!qword_1ED3D1178)
  {
    sub_1BAE72260();
    sub_1BA5D9F94();
    sub_1BAE722A4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE72260()
{
  unint64_t result;

  result = qword_1ED3D0B28;
  if (!qword_1ED3D0B28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1C48, &_s10CodingKeysON_253);
    atomic_store(result, (unint64_t *)&qword_1ED3D0B28);
  }
  return result;
}

unint64_t sub_1BAE722A4()
{
  unint64_t result;

  result = qword_1ED3D0B20;
  if (!qword_1ED3D0B20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1BD0, &_s10CodingKeysON_253);
    atomic_store(result, (unint64_t *)&qword_1ED3D0B20);
  }
  return result;
}

void sub_1BAE722E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE000)
  {
    sub_1BAE72360();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEDB0, (uint64_t (*)(uint64_t))sub_1BAE72360, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE000);
  }
}

void sub_1BAE72360()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEDB8)
  {
    sub_1BAE721E0();
    sub_1BA4A2870(&qword_1ED3D1170, (uint64_t (*)(uint64_t))sub_1BAE721E0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEDB8);
  }
}

void sub_1BAE723D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C80)
  {
    sub_1BAE72450();
    sub_1BA4A2870(&qword_1ED3D11C0, (uint64_t (*)(uint64_t))sub_1BAE72450, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C80);
  }
}

uint64_t sub_1BAE72450()
{
  uint64_t result;

  result = qword_1ED3D11C8;
  if (!qword_1ED3D11C8)
  {
    sub_1BAE724D0();
    sub_1BA57C58C();
    sub_1BAE72514();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE724D0()
{
  unint64_t result;

  result = qword_1ED3D1688;
  if (!qword_1ED3D1688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1B98, &_s10CodingKeysON_252);
    atomic_store(result, (unint64_t *)&qword_1ED3D1688);
  }
  return result;
}

unint64_t sub_1BAE72514()
{
  unint64_t result;

  result = qword_1ED3D1680;
  if (!qword_1ED3D1680)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1B20, &_s10CodingKeysON_252);
    atomic_store(result, (unint64_t *)&qword_1ED3D1680);
  }
  return result;
}

void sub_1BAE72558(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE038)
  {
    sub_1BAE725D0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEE20, (uint64_t (*)(uint64_t))sub_1BAE725D0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE038);
  }
}

void sub_1BAE725D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEE28)
  {
    sub_1BAE72450();
    sub_1BA4A2870(&qword_1ED3D11C0, (uint64_t (*)(uint64_t))sub_1BAE72450, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEE28);
  }
}

unint64_t sub_1BAE72648()
{
  unint64_t result;

  result = qword_1EF2B2388;
  if (!qword_1EF2B2388)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881A88, &_s4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2388);
  }
  return result;
}

unint64_t sub_1BAE7268C()
{
  unint64_t result;

  result = qword_1EF2B2398;
  if (!qword_1EF2B2398)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Bool, &type metadata for FormatTagBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B2398);
  }
  return result;
}

unint64_t sub_1BAE726D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B23A0;
  if (!qword_1EF2B23A0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2390, (uint64_t (*)(void))sub_1BAE7268C, (uint64_t)&type metadata for FormatTagBinding.Bool, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B23A0);
  }
  return result;
}

void sub_1BAE72738(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2F8)
  {
    sub_1BAE727B0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF390, (uint64_t (*)(uint64_t))sub_1BAE727B0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2F8);
  }
}

void sub_1BAE727B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF398)
  {
    sub_1BAE72828();
    sub_1BA4A2870(&qword_1ED3D1620, (uint64_t (*)(uint64_t))sub_1BAE72828, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF398);
  }
}

uint64_t sub_1BAE72828()
{
  uint64_t result;

  result = qword_1ED3D1628;
  if (!qword_1ED3D1628)
  {
    sub_1BAE728A8();
    sub_1BA636CD8();
    sub_1BAE728EC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE728A8()
{
  unint64_t result;

  result = qword_1ED3D0388;
  if (!qword_1ED3D0388)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1AE8, &_s10CodingKeysON_251);
    atomic_store(result, (unint64_t *)&qword_1ED3D0388);
  }
  return result;
}

unint64_t sub_1BAE728EC()
{
  unint64_t result;

  result = qword_1ED3D0380;
  if (!qword_1ED3D0380)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1A70, &_s10CodingKeysON_251);
    atomic_store(result, (unint64_t *)&qword_1ED3D0380);
  }
  return result;
}

unint64_t sub_1BAE72930()
{
  unint64_t result;

  result = qword_1ED3A7000;
  if (!qword_1ED3A7000)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1A48, &_s10CodingTypeON_180);
    atomic_store(result, (unint64_t *)&qword_1ED3A7000);
  }
  return result;
}

unint64_t sub_1BAE72974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B23B0;
  if (!qword_1EF2B23B0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B23A8, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B23B0);
  }
  return result;
}

unint64_t sub_1BAE729E0()
{
  unint64_t result;

  result = qword_1EF2B23B8;
  if (!qword_1EF2B23B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoNodeBinding, &type metadata for FormatVideoNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B23B8);
  }
  return result;
}

uint64_t sub_1BAE72A24()
{
  return objectdestroy_11Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

unint64_t sub_1BAE72A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A02A0;
  if (!qword_1ED3A02A0)
  {
    sub_1BA4CDF6C(255, qword_1ED3A02A8, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A02A0);
  }
  return result;
}

unint64_t sub_1BAE72A9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B23C8;
  if (!qword_1EF2B23C8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B23C0, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B23C8);
  }
  return result;
}

uint64_t sub_1BAE72B08()
{
  return objectdestroy_24Tm();
}

uint64_t sub_1BAE72B10()
{
  return objectdestroy_24Tm();
}

uint64_t objectdestroy_8Tm_2()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAE72B4C()
{
  return swift_deallocObject();
}

void sub_1BAE72B5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B18)
  {
    sub_1BAE72BD4();
    sub_1BA4A2870(&qword_1ED3D0EF0, (uint64_t (*)(uint64_t))sub_1BAE72BD4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B18);
  }
}

uint64_t sub_1BAE72BD4()
{
  uint64_t result;

  result = qword_1ED3D0EF8;
  if (!qword_1ED3D0EF8)
  {
    sub_1BAE72C54();
    sub_1BA5D7DA4();
    sub_1BAE72C98();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE72C54()
{
  unint64_t result;

  result = qword_1ED3D0860;
  if (!qword_1ED3D0860)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D19C0, &_s10CodingKeysON_250);
    atomic_store(result, (unint64_t *)&qword_1ED3D0860);
  }
  return result;
}

unint64_t sub_1BAE72C98()
{
  unint64_t result;

  result = qword_1ED3D0858;
  if (!qword_1ED3D0858)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1948, &_s10CodingKeysON_250);
    atomic_store(result, (unint64_t *)&qword_1ED3D0858);
  }
  return result;
}

void sub_1BAE72CDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE58)
  {
    sub_1BAE72D54();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEA60, (uint64_t (*)(uint64_t))sub_1BAE72D54, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE58);
  }
}

void sub_1BAE72D54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEA68)
  {
    sub_1BAE72BD4();
    sub_1BA4A2870(&qword_1ED3D0EF0, (uint64_t (*)(uint64_t))sub_1BAE72BD4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEA68);
  }
}

unint64_t sub_1BAE72DCC()
{
  unint64_t result;

  result = qword_1ED3AA640;
  if (!qword_1ED3AA640)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1920, &_s10CodingTypeON_177);
    atomic_store(result, (unint64_t *)&qword_1ED3AA640);
  }
  return result;
}

unint64_t sub_1BAE72E10()
{
  unint64_t result;

  result = qword_1ED3AAAD0;
  if (!qword_1ED3AAAD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D18F8, &_s10CodingTypeON_176);
    atomic_store(result, (unint64_t *)&qword_1ED3AAAD0);
  }
  return result;
}

unint64_t sub_1BAE72E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39F7E0;
  if (!qword_1ED39F7E0)
  {
    sub_1BA4CDF6C(255, &qword_1ED39F7E8, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39F7E0);
  }
  return result;
}

unint64_t sub_1BAE72EBC()
{
  unint64_t result;

  result = qword_1ED3AD770;
  if (!qword_1ED3AD770)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D18A8, &_s10CodingTypeON_174);
    atomic_store(result, (unint64_t *)&qword_1ED3AD770);
  }
  return result;
}

unint64_t sub_1BAE72F00()
{
  unint64_t result;

  result = qword_1ED39FD38;
  if (!qword_1ED39FD38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.LayeredMedia, &type metadata for FormatIssueBinding.LayeredMedia);
    atomic_store(result, (unint64_t *)&qword_1ED39FD38);
  }
  return result;
}

void sub_1BAE72F44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5B8)
  {
    sub_1BAE72FBC();
    sub_1BA4A2870(&qword_1ED3AD8A8, (uint64_t (*)(uint64_t))sub_1BAE72FBC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5B8);
  }
}

uint64_t sub_1BAE72FBC()
{
  uint64_t result;

  result = qword_1ED3AD8B0;
  if (!qword_1ED3AD8B0)
  {
    sub_1BAE7303C();
    sub_1BAE73080();
    sub_1BAE730C4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7303C()
{
  unint64_t result;

  result = qword_1ED3ACA18;
  if (!qword_1ED3ACA18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1848, &_s10CodingKeysON_249);
    atomic_store(result, (unint64_t *)&qword_1ED3ACA18);
  }
  return result;
}

unint64_t sub_1BAE73080()
{
  unint64_t result;

  result = qword_1ED3A6878;
  if (!qword_1ED3A6878)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D17F8, &_s10CodingKeysON_249);
    atomic_store(result, (unint64_t *)&qword_1ED3A6878);
  }
  return result;
}

unint64_t sub_1BAE730C4()
{
  unint64_t result;

  result = qword_1ED3AD668;
  if (!qword_1ED3AD668)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D17D0, &_s10CodingKeysON_249);
    atomic_store(result, (unint64_t *)&qword_1ED3AD668);
  }
  return result;
}

unint64_t sub_1BAE73108()
{
  unint64_t result;

  result = qword_1ED39C9E0;
  if (!qword_1ED39C9E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumber, &type metadata for FormatNumber);
    atomic_store(result, (unint64_t *)&qword_1ED39C9E0);
  }
  return result;
}

void sub_1BAE7314C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE80)
  {
    sub_1BAE731C4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEAB0, (uint64_t (*)(uint64_t))sub_1BAE731C4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE80);
  }
}

void sub_1BAE731C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEAB8)
  {
    sub_1BAE72FBC();
    sub_1BA4A2870(&qword_1ED3AD8A8, (uint64_t (*)(uint64_t))sub_1BAE72FBC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEAB8);
  }
}

unint64_t sub_1BAE7323C()
{
  unint64_t result;

  result = qword_1EF2B23D0;
  if (!qword_1EF2B23D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D17A8, &_s14descr1E72CCB21V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B23D0);
  }
  return result;
}

uint64_t sub_1BAE73280()
{
  uint64_t v0;

  sub_1BA6F5D74(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1BAE732A4()
{
  unint64_t result;

  result = qword_1EF2B23D8;
  if (!qword_1EF2B23D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterOrCondition, &type metadata for FormatSlotItemTagFilterOrCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2B23D8);
  }
  return result;
}

uint64_t sub_1BAE732E8()
{
  return objectdestroy_36Tm((void (*)(_QWORD))sub_1BA6F5D74);
}

unint64_t sub_1BAE732F4()
{
  unint64_t result;

  result = qword_1EF2B23E0;
  if (!qword_1EF2B23E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterAndCondition, &type metadata for FormatSlotItemTagFilterAndCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2B23E0);
  }
  return result;
}

uint64_t sub_1BAE73338()
{
  return objectdestroy_36Tm((void (*)(_QWORD))sub_1BA6F5D74);
}

void sub_1BAE73344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDA0)
  {
    sub_1BAE733BC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE8E0, (uint64_t (*)(uint64_t))sub_1BAE733BC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDA0);
  }
}

void sub_1BAE733BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE8E8)
  {
    sub_1BAE73434();
    sub_1BA4A2870(&qword_1ED3D0D90, (uint64_t (*)(uint64_t))sub_1BAE73434, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE8E8);
  }
}

uint64_t sub_1BAE73434()
{
  uint64_t result;

  result = qword_1ED3D0D98;
  if (!qword_1ED3D0D98)
  {
    sub_1BAE734B4();
    sub_1BA581B14();
    sub_1BAE734F8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE734B4()
{
  unint64_t result;

  result = qword_1ED3D06E0;
  if (!qword_1ED3D06E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1770, &_s10CodingKeysON_248);
    atomic_store(result, (unint64_t *)&qword_1ED3D06E0);
  }
  return result;
}

unint64_t sub_1BAE734F8()
{
  unint64_t result;

  result = qword_1ED3D06D8;
  if (!qword_1ED3D06D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D16F8, &_s10CodingKeysON_248);
    atomic_store(result, (unint64_t *)&qword_1ED3D06D8);
  }
  return result;
}

uint64_t sub_1BAE7353C()
{
  uint64_t result;

  result = qword_1EF2B23E8;
  if (!qword_1EF2B23E8)
  {
    sub_1BAA4A92C();
    sub_1BA8378F4();
    type metadata accessor for FormatUnboundValue();
  }
  return result;
}

uint64_t sub_1BAE735B4()
{
  uint64_t v0;

  sub_1BA6F3F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAE735EC()
{
  return objectdestroy_45Tm((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6F3F50);
}

uint64_t sub_1BAE735F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAE7361C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAE73640()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DF8)
  {
    sub_1BAE736B8();
    sub_1BA4A2870(&qword_1ED3D14B0, (uint64_t (*)(uint64_t))sub_1BAE736B8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DF8);
  }
}

uint64_t sub_1BAE736B8()
{
  uint64_t result;

  result = qword_1ED3D14B8;
  if (!qword_1ED3D14B8)
  {
    sub_1BAE73738();
    sub_1BA5B02CC();
    sub_1BAE7377C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE73738()
{
  unint64_t result;

  result = qword_1ED3D01C0;
  if (!qword_1ED3D01C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1698, &_s10CodingKeysON_247);
    atomic_store(result, (unint64_t *)&qword_1ED3D01C0);
  }
  return result;
}

unint64_t sub_1BAE7377C()
{
  unint64_t result;

  result = qword_1ED3D01B8;
  if (!qword_1ED3D01B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1620, &_s10CodingKeysON_247);
    atomic_store(result, (unint64_t *)&qword_1ED3D01B8);
  }
  return result;
}

void sub_1BAE737C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE228)
  {
    sub_1BAE73838();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF1F8, (uint64_t (*)(uint64_t))sub_1BAE73838, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE228);
  }
}

void sub_1BAE73838()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF200)
  {
    sub_1BAE736B8();
    sub_1BA4A2870(&qword_1ED3D14B0, (uint64_t (*)(uint64_t))sub_1BAE736B8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF200);
  }
}

void sub_1BAE738B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C88)
  {
    sub_1BAE73928();
    sub_1BA4A2870(&qword_1ED3D11D0, (uint64_t (*)(uint64_t))sub_1BAE73928, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C88);
  }
}

uint64_t sub_1BAE73928()
{
  uint64_t result;

  result = qword_1ED3D11D8;
  if (!qword_1ED3D11D8)
  {
    sub_1BAE739A8();
    sub_1BA53A734();
    sub_1BAE739EC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE739A8()
{
  unint64_t result;

  result = qword_1ED3D1698;
  if (!qword_1ED3D1698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D15E8, &_s10CodingKeysON_246);
    atomic_store(result, (unint64_t *)&qword_1ED3D1698);
  }
  return result;
}

unint64_t sub_1BAE739EC()
{
  unint64_t result;

  result = qword_1ED3D1690;
  if (!qword_1ED3D1690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1570, &_s10CodingKeysON_246);
    atomic_store(result, (unint64_t *)&qword_1ED3D1690);
  }
  return result;
}

void sub_1BAE73A30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE040)
  {
    sub_1BAE73AA8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEE30, (uint64_t (*)(uint64_t))sub_1BAE73AA8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE040);
  }
}

void sub_1BAE73AA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEE38)
  {
    sub_1BAE73928();
    sub_1BA4A2870(&qword_1ED3D11D0, (uint64_t (*)(uint64_t))sub_1BAE73928, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEE38);
  }
}

uint64_t sub_1BAE73B20(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 128) & 0x8F | 0x40;
  *(_QWORD *)(result + 104) &= 0x8000000000000001;
  *(_BYTE *)(result + 128) = v1;
  return result;
}

uint64_t sub_1BAE73B40(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 128) & 0x8F | 0x20;
  *(_QWORD *)(result + 104) &= 0x8000000000000001;
  *(_BYTE *)(result + 128) = v1;
  return result;
}

unint64_t sub_1BAE73B60()
{
  unint64_t result;

  result = qword_1EF2B23F8;
  if (!qword_1EF2B23F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentMask, &type metadata for FormatImageAdjustmentMask);
    atomic_store(result, (unint64_t *)&qword_1EF2B23F8);
  }
  return result;
}

uint64_t sub_1BAE73BA4(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 128) & 0x8F;
  *(_QWORD *)(result + 104) &= 0x8000000000000001;
  *(_BYTE *)(result + 128) = v1;
  return result;
}

void sub_1BAE73BC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE50)
  {
    sub_1BAE73C38();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE50);
  }
}

void sub_1BAE73C38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEA58)
  {
    sub_1BAE73CB0();
    sub_1BA4A2870(&qword_1ED3AD888, (uint64_t (*)(uint64_t))sub_1BAE73CB0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEA58);
  }
}

uint64_t sub_1BAE73CB0()
{
  uint64_t result;

  result = qword_1ED3AD890;
  if (!qword_1ED3AD890)
  {
    sub_1BAE73D30();
    sub_1BA7F13B8();
    sub_1BAE73D74();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE73D30()
{
  unint64_t result;

  result = qword_1ED3AD648;
  if (!qword_1ED3AD648)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1510, &_s10CodingKeysON_245);
    atomic_store(result, (unint64_t *)&qword_1ED3AD648);
  }
  return result;
}

unint64_t sub_1BAE73D74()
{
  unint64_t result;

  result = qword_1ED3AD640;
  if (!qword_1ED3AD640)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1498, &_s10CodingKeysON_245);
    atomic_store(result, (unint64_t *)&qword_1ED3AD640);
  }
  return result;
}

void sub_1BAE73DB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2400)
  {
    sub_1BAE73E30();
    sub_1BA4A2870(&qword_1EF2B2428, (uint64_t (*)(uint64_t))sub_1BAE73E30, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2400);
  }
}

uint64_t sub_1BAE73E30()
{
  uint64_t result;

  result = qword_1EF2B2408;
  if (!qword_1EF2B2408)
  {
    sub_1BAE73EB0();
    sub_1BAE73EF4();
    sub_1BAE73F38();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE73EB0()
{
  unint64_t result;

  result = qword_1EF2B2410;
  if (!qword_1EF2B2410)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1460, &_s10CodingKeysON_244);
    atomic_store(result, (unint64_t *)&qword_1EF2B2410);
  }
  return result;
}

unint64_t sub_1BAE73EF4()
{
  unint64_t result;

  result = qword_1EF2B2418;
  if (!qword_1EF2B2418)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1410, &_s10CodingKeysON_244);
    atomic_store(result, (unint64_t *)&qword_1EF2B2418);
  }
  return result;
}

unint64_t sub_1BAE73F38()
{
  unint64_t result;

  result = qword_1EF2B2420;
  if (!qword_1EF2B2420)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D13E8, &_s10CodingKeysON_244);
    atomic_store(result, (unint64_t *)&qword_1EF2B2420);
  }
  return result;
}

void sub_1BAE73F7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2430)
  {
    sub_1BAE73FF4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2440, (uint64_t (*)(uint64_t))sub_1BAE73FF4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2430);
  }
}

void sub_1BAE73FF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2438)
  {
    sub_1BAE73E30();
    sub_1BA4A2870(&qword_1EF2B2428, (uint64_t (*)(uint64_t))sub_1BAE73E30, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2438);
  }
}

void sub_1BAE7406C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CD0)
  {
    sub_1BAE740E4();
    sub_1BA4A2870(&qword_1ED3D1260, (uint64_t (*)(uint64_t))sub_1BAE740E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CD0);
  }
}

uint64_t sub_1BAE740E4()
{
  uint64_t result;

  result = qword_1ED3D1268;
  if (!qword_1ED3D1268)
  {
    sub_1BAE74164();
    sub_1BA5285BC();
    sub_1BAE741A8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE74164()
{
  unint64_t result;

  result = qword_1ED3D1730;
  if (!qword_1ED3D1730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D13B0, &_s10CodingKeysON_243);
    atomic_store(result, (unint64_t *)&qword_1ED3D1730);
  }
  return result;
}

unint64_t sub_1BAE741A8()
{
  unint64_t result;

  result = qword_1ED3D1728;
  if (!qword_1ED3D1728)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1338, &_s10CodingKeysON_243);
    atomic_store(result, (unint64_t *)&qword_1ED3D1728);
  }
  return result;
}

void sub_1BAE741EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE090)
  {
    sub_1BAE74264();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEED0, (uint64_t (*)(uint64_t))sub_1BAE74264, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE090);
  }
}

void sub_1BAE74264()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEED8)
  {
    sub_1BAE740E4();
    sub_1BA4A2870(&qword_1ED3D1260, (uint64_t (*)(uint64_t))sub_1BAE740E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEED8);
  }
}

void sub_1BAE742DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B28)
  {
    sub_1BAE74354();
    sub_1BA4A2870(&qword_1ED3D0F10, (uint64_t (*)(uint64_t))sub_1BAE74354, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B28);
  }
}

uint64_t sub_1BAE74354()
{
  uint64_t result;

  result = qword_1ED3D0F18;
  if (!qword_1ED3D0F18)
  {
    sub_1BAE743D4();
    sub_1BA7A5B9C();
    sub_1BAE74418();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE743D4()
{
  unint64_t result;

  result = qword_1ED3D0880;
  if (!qword_1ED3D0880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D12B0, &_s10CodingKeysON_242);
    atomic_store(result, (unint64_t *)&qword_1ED3D0880);
  }
  return result;
}

unint64_t sub_1BAE74418()
{
  unint64_t result;

  result = qword_1ED3D0878;
  if (!qword_1ED3D0878)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1238, &_s10CodingKeysON_242);
    atomic_store(result, (unint64_t *)&qword_1ED3D0878);
  }
  return result;
}

void sub_1BAE7445C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE68)
  {
    sub_1BAE744D4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEA80, (uint64_t (*)(uint64_t))sub_1BAE744D4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE68);
  }
}

void sub_1BAE744D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEA88)
  {
    sub_1BAE74354();
    sub_1BA4A2870(&qword_1ED3D0F10, (uint64_t (*)(uint64_t))sub_1BAE74354, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEA88);
  }
}

void _s10CodingKeysOMa_259()
{
  JUMPOUT(0x1BCCE5A70);
}

void sub_1BAE74558()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A08)
  {
    sub_1BAE745D0();
    sub_1BA4A2870(&qword_1ED3D0CD0, (uint64_t (*)(uint64_t))sub_1BAE745D0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A08);
  }
}

uint64_t sub_1BAE745D0()
{
  uint64_t result;

  result = qword_1ED3D0CD8;
  if (!qword_1ED3D0CD8)
  {
    sub_1BAE74650();
    sub_1BA59DF10();
    sub_1BAE74694();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE74650()
{
  unint64_t result;

  result = qword_1ED3D05D0;
  if (!qword_1ED3D05D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1150, &_s10CodingKeysON_241);
    atomic_store(result, (unint64_t *)&qword_1ED3D05D0);
  }
  return result;
}

unint64_t sub_1BAE74694()
{
  unint64_t result;

  result = qword_1ED3D05C8;
  if (!qword_1ED3D05C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D10D8, &_s10CodingKeysON_241);
    atomic_store(result, (unint64_t *)&qword_1ED3D05C8);
  }
  return result;
}

void sub_1BAE746D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD30)
  {
    sub_1BAE74750();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE800, (uint64_t (*)(uint64_t))sub_1BAE74750, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD30);
  }
}

void sub_1BAE74750()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE808)
  {
    sub_1BAE745D0();
    sub_1BA4A2870(&qword_1ED3D0CD0, (uint64_t (*)(uint64_t))sub_1BAE745D0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE808);
  }
}

void sub_1BAE747C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B90)
  {
    sub_1BAE74840();
    sub_1BA4A2870(&qword_1ED3D0FE0, (uint64_t (*)(uint64_t))sub_1BAE74840, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B90);
  }
}

uint64_t sub_1BAE74840()
{
  uint64_t result;

  result = qword_1ED3D0FE8;
  if (!qword_1ED3D0FE8)
  {
    sub_1BAE748C0();
    sub_1BAE74904();
    sub_1BAE74948();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE748C0()
{
  unint64_t result;

  result = qword_1ED3D0950;
  if (!qword_1ED3D0950)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D10A0, &_s10CodingKeysON_240);
    atomic_store(result, (unint64_t *)&qword_1ED3D0950);
  }
  return result;
}

unint64_t sub_1BAE74904()
{
  unint64_t result;

  result = qword_1ED3C9B48;
  if (!qword_1ED3C9B48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1050, &_s10CodingKeysON_240);
    atomic_store(result, (unint64_t *)&qword_1ED3C9B48);
  }
  return result;
}

unint64_t sub_1BAE74948()
{
  unint64_t result;

  result = qword_1ED3D0948;
  if (!qword_1ED3D0948)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1028, &_s10CodingKeysON_240);
    atomic_store(result, (unint64_t *)&qword_1ED3D0948);
  }
  return result;
}

void sub_1BAE7498C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF08)
  {
    sub_1BAE74A04();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEBC0, (uint64_t (*)(uint64_t))sub_1BAE74A04, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF08);
  }
}

void sub_1BAE74A04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEBC8)
  {
    sub_1BAE74840();
    sub_1BA4A2870(&qword_1ED3D0FE0, (uint64_t (*)(uint64_t))sub_1BAE74840, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEBC8);
  }
}

unint64_t sub_1BAE74A7C()
{
  unint64_t result;

  result = qword_1EF2B2448;
  if (!qword_1EF2B2448)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1000, &_s10CodingTypeON_168);
    atomic_store(result, (unint64_t *)&qword_1EF2B2448);
  }
  return result;
}

unint64_t sub_1BAE74AC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2458;
  if (!qword_1EF2B2458)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2450, (uint64_t (*)(void))sub_1BA9AEC44, (uint64_t)&type metadata for FormatSymbolImageColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2458);
  }
  return result;
}

uint64_t sub_1BAE74B28()
{
  uint64_t v0;

  sub_1BA6F5D74(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAE74B54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B70)
  {
    sub_1BAE74BCC();
    sub_1BA4A2870(&qword_1ED3D0FA0, (uint64_t (*)(uint64_t))sub_1BAE74BCC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B70);
  }
}

uint64_t sub_1BAE74BCC()
{
  uint64_t result;

  result = qword_1ED3D0FA8;
  if (!qword_1ED3D0FA8)
  {
    sub_1BAE74C4C();
    sub_1BA537600();
    sub_1BAE74C90();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE74C4C()
{
  unint64_t result;

  result = qword_1ED3D0910;
  if (!qword_1ED3D0910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0FC8, &_s10CodingKeysON_239);
    atomic_store(result, (unint64_t *)&qword_1ED3D0910);
  }
  return result;
}

unint64_t sub_1BAE74C90()
{
  unint64_t result;

  result = qword_1ED3D0908;
  if (!qword_1ED3D0908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0F50, &_s10CodingKeysON_239);
    atomic_store(result, (unint64_t *)&qword_1ED3D0908);
  }
  return result;
}

void sub_1BAE74CD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADEC0)
  {
    sub_1BAE74D4C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEB30, (uint64_t (*)(uint64_t))sub_1BAE74D4C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADEC0);
  }
}

void sub_1BAE74D4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEB38)
  {
    sub_1BAE74BCC();
    sub_1BA4A2870(&qword_1ED3D0FA0, (uint64_t (*)(uint64_t))sub_1BAE74BCC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEB38);
  }
}

void sub_1BAE74DC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B68)
  {
    sub_1BAE74E3C();
    sub_1BA4A2870(&qword_1ED3D0F90, (uint64_t (*)(uint64_t))sub_1BAE74E3C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B68);
  }
}

uint64_t sub_1BAE74E3C()
{
  uint64_t result;

  result = qword_1ED3D0F98;
  if (!qword_1ED3D0F98)
  {
    sub_1BAE74EBC();
    sub_1BA575774();
    sub_1BAE74F00();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE74EBC()
{
  unint64_t result;

  result = qword_1ED3D0900;
  if (!qword_1ED3D0900)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0F18, &_s10CodingKeysON_238);
    atomic_store(result, (unint64_t *)&qword_1ED3D0900);
  }
  return result;
}

unint64_t sub_1BAE74F00()
{
  unint64_t result;

  result = qword_1ED3D08F8;
  if (!qword_1ED3D08F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0EA0, &_s10CodingKeysON_238);
    atomic_store(result, (unint64_t *)&qword_1ED3D08F8);
  }
  return result;
}

void sub_1BAE74F44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADEB8)
  {
    sub_1BAE74FBC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEB20, (uint64_t (*)(uint64_t))sub_1BAE74FBC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADEB8);
  }
}

void sub_1BAE74FBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEB28)
  {
    sub_1BAE74E3C();
    sub_1BA4A2870(&qword_1ED3D0F90, (uint64_t (*)(uint64_t))sub_1BAE74E3C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEB28);
  }
}

void sub_1BAE75034()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B60)
  {
    sub_1BAE750AC();
    sub_1BA4A2870(&qword_1ED3D0F80, (uint64_t (*)(uint64_t))sub_1BAE750AC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B60);
  }
}

uint64_t sub_1BAE750AC()
{
  uint64_t result;

  result = qword_1ED3D0F88;
  if (!qword_1ED3D0F88)
  {
    sub_1BAE7512C();
    sub_1BA54579C();
    sub_1BAE75170();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7512C()
{
  unint64_t result;

  result = qword_1ED3D08F0;
  if (!qword_1ED3D08F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0E68, &_s10CodingKeysON_237);
    atomic_store(result, (unint64_t *)&qword_1ED3D08F0);
  }
  return result;
}

unint64_t sub_1BAE75170()
{
  unint64_t result;

  result = qword_1ED3D08E8;
  if (!qword_1ED3D08E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0DF0, &_s10CodingKeysON_237);
    atomic_store(result, (unint64_t *)&qword_1ED3D08E8);
  }
  return result;
}

void sub_1BAE751B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADEB0)
  {
    sub_1BAE7522C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEB10, (uint64_t (*)(uint64_t))sub_1BAE7522C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADEB0);
  }
}

void sub_1BAE7522C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEB18)
  {
    sub_1BAE750AC();
    sub_1BA4A2870(&qword_1ED3D0F80, (uint64_t (*)(uint64_t))sub_1BAE750AC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEB18);
  }
}

void sub_1BAE752A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B58)
  {
    sub_1BAE7531C();
    sub_1BA4A2870(&qword_1ED3D0F70, (uint64_t (*)(uint64_t))sub_1BAE7531C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B58);
  }
}

uint64_t sub_1BAE7531C()
{
  uint64_t result;

  result = qword_1ED3D0F78;
  if (!qword_1ED3D0F78)
  {
    sub_1BAE7539C();
    sub_1BA56EBE0();
    sub_1BAE753E0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7539C()
{
  unint64_t result;

  result = qword_1ED3D08E0;
  if (!qword_1ED3D08E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0DB8, &_s10CodingKeysON_236);
    atomic_store(result, (unint64_t *)&qword_1ED3D08E0);
  }
  return result;
}

unint64_t sub_1BAE753E0()
{
  unint64_t result;

  result = qword_1ED3D08D8;
  if (!qword_1ED3D08D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0D40, &_s10CodingKeysON_236);
    atomic_store(result, (unint64_t *)&qword_1ED3D08D8);
  }
  return result;
}

void sub_1BAE75424(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADEA8)
  {
    sub_1BAE7549C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEB00, (uint64_t (*)(uint64_t))sub_1BAE7549C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADEA8);
  }
}

void sub_1BAE7549C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEB08)
  {
    sub_1BAE7531C();
    sub_1BA4A2870(&qword_1ED3D0F70, (uint64_t (*)(uint64_t))sub_1BAE7531C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEB08);
  }
}

uint64_t sub_1BAE75514(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v7;

  sub_1BA4CDF6C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BAE75570(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  sub_1BAEFA52C();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE75A2C();
  sub_1BA4A2870(&qword_1EF2B2490, (uint64_t (*)(uint64_t))sub_1BAE75A2C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = sub_1BB8740EC();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (_BYTE *)(v11 + 48);
      while (*v13 != 1)
      {
        v13 += 24;
        if (!--v12)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v13 - 2);
      v19 = *((_QWORD *)v13 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v20 = sub_1BAE1559C();
      sub_1BA98D1F0();
      v2 = (void *)swift_allocError();
      *(_QWORD *)v21 = v18;
      *(_QWORD *)(v21 + 8) = v19;
      *(_QWORD *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v14 = sub_1BAE0F8F8((uint64_t)v8, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEFA52C);
  v16 = v15;
  v34 = xmmword_1BB8A1A10;
  LOBYTE(v35) = 0;
  v17 = sub_1BB8740C8();
  v34 = xmmword_1BB8D2D60;
  LOBYTE(v35) = 0;
  v37 = sub_1BB8740C8();
  v34 = xmmword_1BB8D2D70;
  LOBYTE(v35) = 0;
  v30 = sub_1BB874098();
  v31 = v23;
  v32 = xmmword_1BB8D2D90;
  v33 = 0;
  sub_1BA82E430();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v28 = v35;
  v29 = v34;
  v24 = v36;
  type metadata accessor for FormatBreakpointNode();
  v5 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v5 + 16) = v14;
  *(_QWORD *)(v5 + 24) = v16;
  v25 = v37;
  *(_QWORD *)(v5 + 32) = v17;
  *(_QWORD *)(v5 + 40) = v25;
  v26 = v31;
  *(_QWORD *)(v5 + 48) = v30;
  *(_QWORD *)(v5 + 56) = v26;
  v27 = v28;
  *(_OWORD *)(v5 + 64) = v29;
  *(_OWORD *)(v5 + 80) = v27;
  *(_QWORD *)(v5 + 96) = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

void sub_1BAE7593C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2460)
  {
    sub_1BAE759B4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2498, (uint64_t (*)(uint64_t))sub_1BAE759B4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2460);
  }
}

void sub_1BAE759B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2468)
  {
    sub_1BAE75A2C();
    sub_1BA4A2870(&qword_1EF2B2490, (uint64_t (*)(uint64_t))sub_1BAE75A2C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2468);
  }
}

uint64_t sub_1BAE75A2C()
{
  uint64_t result;

  result = qword_1EF2B2470;
  if (!qword_1EF2B2470)
  {
    sub_1BAE75AAC();
    sub_1BAE75AF0();
    sub_1BAE75B34();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE75AAC()
{
  unint64_t result;

  result = qword_1EF2B2478;
  if (!qword_1EF2B2478)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0D08, &_s10CodingKeysON_235);
    atomic_store(result, (unint64_t *)&qword_1EF2B2478);
  }
  return result;
}

unint64_t sub_1BAE75AF0()
{
  unint64_t result;

  result = qword_1EF2B2480;
  if (!qword_1EF2B2480)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0CB8, &_s10CodingKeysON_235);
    atomic_store(result, (unint64_t *)&qword_1EF2B2480);
  }
  return result;
}

unint64_t sub_1BAE75B34()
{
  unint64_t result;

  result = qword_1EF2B2488;
  if (!qword_1EF2B2488)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0C90, &_s10CodingKeysON_235);
    atomic_store(result, (unint64_t *)&qword_1EF2B2488);
  }
  return result;
}

unint64_t sub_1BAE75B78()
{
  unint64_t result;

  result = qword_1ED3BE7F0;
  if (!qword_1ED3BE7F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPaywallBinding.Text, &type metadata for FormatPaywallBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3BE7F0);
  }
  return result;
}

unint64_t sub_1BAE75BBC()
{
  unint64_t result;

  result = qword_1EF2B24A0;
  if (!qword_1EF2B24A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Text, &type metadata for FormatSportsEventBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B24A0);
  }
  return result;
}

unint64_t sub_1BAE75C00()
{
  unint64_t result;

  result = qword_1EF2B24A8;
  if (!qword_1EF2B24A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemBinding.Text, &type metadata for FormatCustomItemBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B24A8);
  }
  return result;
}

unint64_t sub_1BAE75C44()
{
  unint64_t result;

  result = qword_1ED3ACA48;
  if (!qword_1ED3ACA48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Text, &type metadata for FormatPuzzleStatisticBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3ACA48);
  }
  return result;
}

unint64_t sub_1BAE75C88()
{
  unint64_t result;

  result = qword_1ED3A0FA0;
  if (!qword_1ED3A0FA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Text, &type metadata for FormatPuzzleTypeBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3A0FA0);
  }
  return result;
}

unint64_t sub_1BAE75CCC()
{
  unint64_t result;

  result = qword_1ED3A6648;
  if (!qword_1ED3A6648)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Text, &type metadata for FormatPuzzleBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3A6648);
  }
  return result;
}

unint64_t sub_1BAE75D10()
{
  unint64_t result;

  result = qword_1ED3A6D50;
  if (!qword_1ED3A6D50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Text, &type metadata for FormatWebEmbedBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D50);
  }
  return result;
}

unint64_t sub_1BAE75D54()
{
  unint64_t result;

  result = qword_1ED39D2B8;
  if (!qword_1ED39D2B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrackBinding.Text, &type metadata for FormatAudioTrackBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED39D2B8);
  }
  return result;
}

void sub_1BAE75D98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE570)
  {
    sub_1BAE75E10();
    sub_1BA4A2870(&qword_1ED3AD818, (uint64_t (*)(uint64_t))sub_1BAE75E10, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE570);
  }
}

uint64_t sub_1BAE75E10()
{
  uint64_t result;

  result = qword_1ED3AD820;
  if (!qword_1ED3AD820)
  {
    sub_1BAE75E90();
    sub_1BAE75ED4();
    sub_1BAE75F18();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE75E90()
{
  unint64_t result;

  result = qword_1ED3AD550;
  if (!qword_1ED3AD550)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0C30, &_s10CodingKeysON_234);
    atomic_store(result, (unint64_t *)&qword_1ED3AD550);
  }
  return result;
}

unint64_t sub_1BAE75ED4()
{
  unint64_t result;

  result = qword_1ED3A5AC8;
  if (!qword_1ED3A5AC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0BE0, &_s10CodingKeysON_234);
    atomic_store(result, (unint64_t *)&qword_1ED3A5AC8);
  }
  return result;
}

unint64_t sub_1BAE75F18()
{
  unint64_t result;

  result = qword_1ED3AD548;
  if (!qword_1ED3AD548)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0BB8, &_s10CodingKeysON_234);
    atomic_store(result, (unint64_t *)&qword_1ED3AD548);
  }
  return result;
}

void sub_1BAE75F5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCD8)
  {
    sub_1BAE75FD4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE758, (uint64_t (*)(uint64_t))sub_1BAE75FD4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCD8);
  }
}

void sub_1BAE75FD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE760)
  {
    sub_1BAE75E10();
    sub_1BA4A2870(&qword_1ED3AD818, (uint64_t (*)(uint64_t))sub_1BAE75E10, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE760);
  }
}

uint64_t sub_1BAE7604C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAE76058()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3D49C);
}

uint64_t sub_1BAE76064()
{
  _QWORD *v0;

  return sub_1BB7E24D4(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1BAE76070(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE38)
  {
    sub_1BAE760E8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEA20, (uint64_t (*)(uint64_t))sub_1BAE760E8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE38);
  }
}

void sub_1BAE760E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEA28)
  {
    sub_1BAE76160();
    sub_1BA4A2870(&qword_1ED3D0EC0, (uint64_t (*)(uint64_t))sub_1BAE76160, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEA28);
  }
}

uint64_t sub_1BAE76160()
{
  uint64_t result;

  result = qword_1ED3D0EC8;
  if (!qword_1ED3D0EC8)
  {
    sub_1BAE761E0();
    sub_1BA7F13FC();
    sub_1BAE76224();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE761E0()
{
  unint64_t result;

  result = qword_1ED3D0828;
  if (!qword_1ED3D0828)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0B80, &_s10CodingKeysON_233);
    atomic_store(result, (unint64_t *)&qword_1ED3D0828);
  }
  return result;
}

unint64_t sub_1BAE76224()
{
  unint64_t result;

  result = qword_1ED3D0820;
  if (!qword_1ED3D0820)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0B08, &_s10CodingKeysON_233);
    atomic_store(result, (unint64_t *)&qword_1ED3D0820);
  }
  return result;
}

void sub_1BAE76268()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B24B0)
  {
    sub_1BAE762E0();
    sub_1BA4A2870(&qword_1EF2B24D8, (uint64_t (*)(uint64_t))sub_1BAE762E0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B24B0);
  }
}

uint64_t sub_1BAE762E0()
{
  uint64_t result;

  result = qword_1EF2B24B8;
  if (!qword_1EF2B24B8)
  {
    sub_1BAE76360();
    sub_1BAE763A4();
    sub_1BAE763E8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE76360()
{
  unint64_t result;

  result = qword_1EF2B24C0;
  if (!qword_1EF2B24C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0AD0, &_s10CodingKeysON_232);
    atomic_store(result, (unint64_t *)&qword_1EF2B24C0);
  }
  return result;
}

unint64_t sub_1BAE763A4()
{
  unint64_t result;

  result = qword_1EF2B24C8;
  if (!qword_1EF2B24C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0A80, &_s10CodingKeysON_232);
    atomic_store(result, (unint64_t *)&qword_1EF2B24C8);
  }
  return result;
}

unint64_t sub_1BAE763E8()
{
  unint64_t result;

  result = qword_1EF2B24D0;
  if (!qword_1EF2B24D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0A58, &_s10CodingKeysON_232);
    atomic_store(result, (unint64_t *)&qword_1EF2B24D0);
  }
  return result;
}

void sub_1BAE7642C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B24E0)
  {
    sub_1BAE764A4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B24F0, (uint64_t (*)(uint64_t))sub_1BAE764A4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B24E0);
  }
}

void sub_1BAE764A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B24E8)
  {
    sub_1BAE762E0();
    sub_1BA4A2870(&qword_1EF2B24D8, (uint64_t (*)(uint64_t))sub_1BAE762E0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B24E8);
  }
}

void sub_1BAE7651C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D10)
  {
    sub_1BAE76594();
    sub_1BA4A2870(&qword_1ED3D12E0, (uint64_t (*)(uint64_t))sub_1BAE76594, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D10);
  }
}

uint64_t sub_1BAE76594()
{
  uint64_t result;

  result = qword_1ED3D12E8;
  if (!qword_1ED3D12E8)
  {
    sub_1BAE76614();
    sub_1BA56B8F8();
    sub_1BAE76658();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE76614()
{
  unint64_t result;

  result = qword_1ED3D17C8;
  if (!qword_1ED3D17C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0A20, &_s10CodingKeysON_231);
    atomic_store(result, (unint64_t *)&qword_1ED3D17C8);
  }
  return result;
}

unint64_t sub_1BAE76658()
{
  unint64_t result;

  result = qword_1ED3D17C0;
  if (!qword_1ED3D17C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D09A8, &_s10CodingKeysON_231);
    atomic_store(result, (unint64_t *)&qword_1ED3D17C0);
  }
  return result;
}

unint64_t sub_1BAE7669C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4640;
  if (!qword_1ED3C4640)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4648, (void (*)(void))sub_1BA5737B0, (void (*)(void))sub_1BA55DA08);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4640);
  }
  return result;
}

void sub_1BAE76704(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0F0)
  {
    sub_1BAE7677C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEF90, (uint64_t (*)(uint64_t))sub_1BAE7677C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0F0);
  }
}

void sub_1BAE7677C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEF98)
  {
    sub_1BAE76594();
    sub_1BA4A2870(&qword_1ED3D12E0, (uint64_t (*)(uint64_t))sub_1BAE76594, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEF98);
  }
}

unint64_t sub_1BAE767F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B34B8;
  if (!qword_1ED3B34B8)
  {
    sub_1BA50CAA8(255, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B34B8);
  }
  return result;
}

uint64_t sub_1BAE7685C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA6F5D74(*(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1BAE76888()
{
  return objectdestroy_45Tm((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BA5A7EF8);
}

uint64_t objectdestroy_45Tm(void (*a1)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  return swift_deallocObject();
}

void sub_1BAE768C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AF0)
  {
    sub_1BAE7693C();
    sub_1BA4A2870(&qword_1ED3D0EA0, (uint64_t (*)(uint64_t))sub_1BAE7693C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AF0);
  }
}

uint64_t sub_1BAE7693C()
{
  uint64_t result;

  result = qword_1ED3D0EA8;
  if (!qword_1ED3D0EA8)
  {
    sub_1BAE769BC();
    sub_1BA50E5B0();
    sub_1BAE76A00();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE769BC()
{
  unint64_t result;

  result = qword_1ED3D0808;
  if (!qword_1ED3D0808)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0948, &_s10CodingKeysON_230);
    atomic_store(result, (unint64_t *)&qword_1ED3D0808);
  }
  return result;
}

unint64_t sub_1BAE76A00()
{
  unint64_t result;

  result = qword_1ED3D0800;
  if (!qword_1ED3D0800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D08D0, &_s10CodingKeysON_230);
    atomic_store(result, (unint64_t *)&qword_1ED3D0800);
  }
  return result;
}

void sub_1BAE76A44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE28)
  {
    sub_1BAE76ABC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEA00, (uint64_t (*)(uint64_t))sub_1BAE76ABC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE28);
  }
}

void sub_1BAE76ABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEA08)
  {
    sub_1BAE7693C();
    sub_1BA4A2870(&qword_1ED3D0EA0, (uint64_t (*)(uint64_t))sub_1BAE7693C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEA08);
  }
}

void sub_1BAE76B34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF58)
  {
    sub_1BAE76BAC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEC60, (uint64_t (*)(uint64_t))sub_1BAE76BAC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF58);
  }
}

void sub_1BAE76BAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEC68)
  {
    sub_1BAE76C24();
    sub_1BA4A2870(&qword_1ED3D1060, (uint64_t (*)(uint64_t))sub_1BAE76C24, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEC68);
  }
}

uint64_t sub_1BAE76C24()
{
  uint64_t result;

  result = qword_1ED3D1068;
  if (!qword_1ED3D1068)
  {
    sub_1BAE76CA4();
    sub_1BA72E504();
    sub_1BAE76CE8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE76CA4()
{
  unint64_t result;

  result = qword_1ED3D09E8;
  if (!qword_1ED3D09E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0898, &_s10CodingKeysON_229);
    atomic_store(result, (unint64_t *)&qword_1ED3D09E8);
  }
  return result;
}

unint64_t sub_1BAE76CE8()
{
  unint64_t result;

  result = qword_1ED3D09E0;
  if (!qword_1ED3D09E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0820, &_s10CodingKeysON_229);
    atomic_store(result, (unint64_t *)&qword_1ED3D09E0);
  }
  return result;
}

uint64_t *sub_1BAE76D2C(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  _QWORD v25[18];
  __int128 v26;
  char v27;
  _QWORD v28[2];
  char v29;

  v2 = v1;
  sub_1BAEF9DE8();
  v24 = v4;
  v5 = *(uint64_t **)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE771F0();
  sub_1BA4A2870(&qword_1EF2B2528, (uint64_t (*)(uint64_t))sub_1BAE771F0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5;
  }
  v8 = v5;
  v9 = a1[3];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v10 = sub_1BB872874();
  LOBYTE(v9) = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v11 = v24;
  v12 = v7;
  if ((v9 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *((_QWORD *)v15 - 2);
      v18 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v19 = swift_bridgeObjectRelease();
      v5 = (uint64_t *)&v23;
      MEMORY[0x1E0C80A78](v19);
      *(&v23 - 4) = &_s10CodingKeysON_228;
      *(&v23 - 3) = (_QWORD *)sub_1BAE77270();
      *(&v23 - 2) = (_QWORD *)sub_1BAE772B4();
      *(&v23 - 1) = (_QWORD *)sub_1BAE772F8();
      swift_getKeyPath();
      swift_retain();
      v20 = sub_1BAE71220((uint64_t)&unk_1E7254F98);
      swift_release_n();
      sub_1BA98D1F0();
      v2 = (void *)swift_allocError();
      *(_QWORD *)v21 = v17;
      *(_QWORD *)(v21 + 8) = v18;
      *(_QWORD *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v17, v18, 1);
      ((void (*)(char *, uint64_t))v8[1])(v12, v24);
      a1 = v23;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4AD288(0, &qword_1ED3A0808, (uint64_t)&type metadata for FormatAnimationNodeAnimation, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA533158();
  v28[0] = 0;
  v28[1] = 0;
  v29 = 0;
  sub_1BB8740D4();
  v16 = v25[0];
  v26 = xmmword_1BB8A1A10;
  v27 = 0;
  sub_1BA5015B4();
  sub_1BB874068();
  ((void (*)(char *, uint64_t))v8[1])(v7, v11);
  sub_1BA6A09F0((uint64_t)v28, (uint64_t)v25, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  type metadata accessor for FormatAnimationNodeGroupAnimation();
  v5 = (uint64_t *)swift_allocObject();
  v5[2] = v16;
  sub_1BA6A09F0((uint64_t)v25, (uint64_t)(v5 + 3), (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v5;
}

void sub_1BAE77100(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B24F8)
  {
    sub_1BAE77178();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2530, (uint64_t (*)(uint64_t))sub_1BAE77178, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B24F8);
  }
}

void sub_1BAE77178()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2500)
  {
    sub_1BAE771F0();
    sub_1BA4A2870(&qword_1EF2B2528, (uint64_t (*)(uint64_t))sub_1BAE771F0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2500);
  }
}

uint64_t sub_1BAE771F0()
{
  uint64_t result;

  result = qword_1EF2B2508;
  if (!qword_1EF2B2508)
  {
    sub_1BAE77270();
    sub_1BAE772B4();
    sub_1BAE772F8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE77270()
{
  unint64_t result;

  result = qword_1EF2B2510;
  if (!qword_1EF2B2510)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D07E8, &_s10CodingKeysON_228);
    atomic_store(result, (unint64_t *)&qword_1EF2B2510);
  }
  return result;
}

unint64_t sub_1BAE772B4()
{
  unint64_t result;

  result = qword_1EF2B2518;
  if (!qword_1EF2B2518)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0798, &_s10CodingKeysON_228);
    atomic_store(result, (unint64_t *)&qword_1EF2B2518);
  }
  return result;
}

unint64_t sub_1BAE772F8()
{
  unint64_t result;

  result = qword_1EF2B2520;
  if (!qword_1EF2B2520)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0770, &_s10CodingKeysON_228);
    atomic_store(result, (unint64_t *)&qword_1EF2B2520);
  }
  return result;
}

void sub_1BAE7733C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BC0)
  {
    sub_1BAE773B4();
    sub_1BA4A2870(&qword_1ED3D1040, (uint64_t (*)(uint64_t))sub_1BAE773B4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BC0);
  }
}

uint64_t sub_1BAE773B4()
{
  uint64_t result;

  result = qword_1ED3D1048;
  if (!qword_1ED3D1048)
  {
    sub_1BAE77434();
    sub_1BA63C230();
    sub_1BAE77478();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE77434()
{
  unint64_t result;

  result = qword_1ED3D09B8;
  if (!qword_1ED3D09B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0738, &_s10CodingKeysON_227);
    atomic_store(result, (unint64_t *)&qword_1ED3D09B8);
  }
  return result;
}

unint64_t sub_1BAE77478()
{
  unint64_t result;

  result = qword_1ED3D09B0;
  if (!qword_1ED3D09B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D06C0, &_s10CodingKeysON_227);
    atomic_store(result, (unint64_t *)&qword_1ED3D09B0);
  }
  return result;
}

void sub_1BAE774BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF40)
  {
    sub_1BAE77534();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEC30, (uint64_t (*)(uint64_t))sub_1BAE77534, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF40);
  }
}

void sub_1BAE77534()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEC38)
  {
    sub_1BAE773B4();
    sub_1BA4A2870(&qword_1ED3D1040, (uint64_t (*)(uint64_t))sub_1BAE773B4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEC38);
  }
}

unint64_t sub_1BAE775AC()
{
  unint64_t result;

  result = qword_1ED3A7C50;
  if (!qword_1ED3A7C50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0698, &_s10CodingTypeON_165);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C50);
  }
  return result;
}

unint64_t sub_1BAE775F0()
{
  unint64_t result;

  result = qword_1EF2B2538;
  if (!qword_1EF2B2538)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpressionLogicTextLines, &type metadata for FormatFrameExpressionLogicTextLines);
    atomic_store(result, (unint64_t *)&qword_1EF2B2538);
  }
  return result;
}

unint64_t sub_1BAE77634()
{
  unint64_t result;

  result = qword_1ED39EB88;
  if (!qword_1ED39EB88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpressionLogicCompare, &type metadata for FormatFrameExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1ED39EB88);
  }
  return result;
}

unint64_t sub_1BAE77678()
{
  unint64_t result;

  result = qword_1ED39E268;
  if (!qword_1ED39E268)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Text, &type metadata for FormatWeatherBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED39E268);
  }
  return result;
}

void sub_1BAE776BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D60)
  {
    sub_1BAE77734();
    sub_1BA4A2870(&qword_1ED3D1380, (uint64_t (*)(uint64_t))sub_1BAE77734, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D60);
  }
}

uint64_t sub_1BAE77734()
{
  uint64_t result;

  result = qword_1ED3D1388;
  if (!qword_1ED3D1388)
  {
    sub_1BAE777B4();
    sub_1BAE777F8();
    sub_1BAE7783C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE777B4()
{
  unint64_t result;

  result = qword_1ED3D1888;
  if (!qword_1ED3D1888)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0638, &_s10CodingKeysON_226);
    atomic_store(result, (unint64_t *)&qword_1ED3D1888);
  }
  return result;
}

unint64_t sub_1BAE777F8()
{
  unint64_t result;

  result = qword_1ED3CDDB8;
  if (!qword_1ED3CDDB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D05E8, &_s10CodingKeysON_226);
    atomic_store(result, (unint64_t *)&qword_1ED3CDDB8);
  }
  return result;
}

unint64_t sub_1BAE7783C()
{
  unint64_t result;

  result = qword_1ED3D1880;
  if (!qword_1ED3D1880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D05C0, &_s10CodingKeysON_226);
    atomic_store(result, (unint64_t *)&qword_1ED3D1880);
  }
  return result;
}

void sub_1BAE77880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE160)
  {
    sub_1BAE778F8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF068, (uint64_t (*)(uint64_t))sub_1BAE778F8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE160);
  }
}

void sub_1BAE778F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF070)
  {
    sub_1BAE77734();
    sub_1BA4A2870(&qword_1ED3D1380, (uint64_t (*)(uint64_t))sub_1BAE77734, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF070);
  }
}

void sub_1BAE77970()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2540)
  {
    sub_1BAE779E8();
    sub_1BA4A2870(&qword_1EF2B2568, (uint64_t (*)(uint64_t))sub_1BAE779E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2540);
  }
}

uint64_t sub_1BAE779E8()
{
  uint64_t result;

  result = qword_1EF2B2548;
  if (!qword_1EF2B2548)
  {
    sub_1BAE77A68();
    sub_1BAE77AAC();
    sub_1BAE77AF0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE77A68()
{
  unint64_t result;

  result = qword_1EF2B2550;
  if (!qword_1EF2B2550)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0588, &_s10CodingKeysON_225);
    atomic_store(result, (unint64_t *)&qword_1EF2B2550);
  }
  return result;
}

unint64_t sub_1BAE77AAC()
{
  unint64_t result;

  result = qword_1EF2B2558;
  if (!qword_1EF2B2558)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0538, &_s10CodingKeysON_225);
    atomic_store(result, (unint64_t *)&qword_1EF2B2558);
  }
  return result;
}

unint64_t sub_1BAE77AF0()
{
  unint64_t result;

  result = qword_1EF2B2560;
  if (!qword_1EF2B2560)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0510, &_s10CodingKeysON_225);
    atomic_store(result, (unint64_t *)&qword_1EF2B2560);
  }
  return result;
}

void sub_1BAE77B34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2578)
  {
    sub_1BAE77BAC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2588, (uint64_t (*)(uint64_t))sub_1BAE77BAC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2578);
  }
}

void sub_1BAE77BAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2580)
  {
    sub_1BAE779E8();
    sub_1BA4A2870(&qword_1EF2B2568, (uint64_t (*)(uint64_t))sub_1BAE779E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2580);
  }
}

uint64_t sub_1BAE77C24()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAE77C30()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3AB38);
}

uint64_t sub_1BAE77C3C()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1E)
    return 30;
  else
    return v0;
}

uint64_t sub_1BAE77C8C()
{
  unint64_t v0;

  v0 = sub_1BB87450C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1D)
    return 29;
  else
    return v0;
}

uint64_t sub_1BAE77CDC()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

uint64_t sub_1BAE77D20()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xD)
    return 13;
  else
    return v0;
}

void sub_1BAE77D64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2C8)
  {
    sub_1BAE77DDC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF330, (uint64_t (*)(uint64_t))sub_1BAE77DDC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2C8);
  }
}

void sub_1BAE77DDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF338)
  {
    sub_1BAE77E54();
    sub_1BA4A2870(&qword_1ED3D15D0, (uint64_t (*)(uint64_t))sub_1BAE77E54, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF338);
  }
}

uint64_t sub_1BAE77E54()
{
  uint64_t result;

  result = qword_1ED3D15D8;
  if (!qword_1ED3D15D8)
  {
    sub_1BAE77ED4();
    sub_1BA5A67F4();
    sub_1BAE77F18();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE77ED4()
{
  unint64_t result;

  result = qword_1ED3D0338;
  if (!qword_1ED3D0338)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D04D8, &_s10CodingKeysON_224);
    atomic_store(result, (unint64_t *)&qword_1ED3D0338);
  }
  return result;
}

unint64_t sub_1BAE77F18()
{
  unint64_t result;

  result = qword_1ED3D0330;
  if (!qword_1ED3D0330)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0460, &_s10CodingKeysON_224);
    atomic_store(result, (unint64_t *)&qword_1ED3D0330);
  }
  return result;
}

unint64_t sub_1BAE77F5C()
{
  unint64_t result;

  result = qword_1ED3A1340;
  if (!qword_1ED3A1340)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0438, &_s10CodingTypeON_163);
    atomic_store(result, (unint64_t *)&qword_1ED3A1340);
  }
  return result;
}

unint64_t sub_1BAE77FA0()
{
  unint64_t result;

  result = qword_1ED39CD40;
  if (!qword_1ED39CD40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Font, &type metadata for FormatGroupBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1ED39CD40);
  }
  return result;
}

unint64_t sub_1BAE77FE4()
{
  unint64_t result;

  result = qword_1EF2B2590;
  if (!qword_1EF2B2590)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Font, &type metadata for FormatIssueBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1EF2B2590);
  }
  return result;
}

unint64_t sub_1BAE78028()
{
  unint64_t result;

  result = qword_1ED3A6B58;
  if (!qword_1ED3A6B58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Font, &type metadata for FormatHeadlineBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B58);
  }
  return result;
}

uint64_t sub_1BAE7806C()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BAE78098()
{
  unint64_t result;

  result = qword_1EF2B25A0;
  if (!qword_1EF2B25A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionType, &type metadata for FormatOptionType);
    atomic_store(result, (unint64_t *)&qword_1EF2B25A0);
  }
  return result;
}

unint64_t sub_1BAE780DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B25A8;
  if (!qword_1EF2B25A8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2598, (uint64_t (*)(void))sub_1BAE78098, (uint64_t)&type metadata for FormatOptionType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B25A8);
  }
  return result;
}

uint64_t sub_1BAE78144()
{
  return swift_deallocObject();
}

uint64_t sub_1BAE78158()
{
  return objectdestroy_24Tm();
}

uint64_t sub_1BAE78160()
{
  uint64_t result;

  result = qword_1EF2B25B0;
  if (!qword_1EF2B25B0)
  {
    sub_1BAE781C8();
    type metadata accessor for FormatUnboundValue();
  }
  return result;
}

unint64_t sub_1BAE781C8()
{
  unint64_t result;

  result = qword_1EF2B25B8;
  if (!qword_1EF2B25B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionValue, &type metadata for FormatOptionValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B25B8);
  }
  return result;
}

uint64_t sub_1BAE78210()
{
  return objectdestroy_11Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAE7821C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAE78240()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAE78274(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2A8)
  {
    sub_1BAE782EC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2A8);
  }
}

void sub_1BAE782EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF2F8)
  {
    sub_1BAE78364();
    sub_1BA4A2870(&qword_1ED3D1590, (uint64_t (*)(uint64_t))sub_1BAE78364, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF2F8);
  }
}

uint64_t sub_1BAE78364()
{
  uint64_t result;

  result = qword_1ED3D1598;
  if (!qword_1ED3D1598)
  {
    sub_1BAE783E4();
    sub_1BA650C48();
    sub_1BAE78428();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE783E4()
{
  unint64_t result;

  result = qword_1ED3D02F8;
  if (!qword_1ED3D02F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0388, &_s10CodingKeysON_223);
    atomic_store(result, (unint64_t *)&qword_1ED3D02F8);
  }
  return result;
}

unint64_t sub_1BAE78428()
{
  unint64_t result;

  result = qword_1ED3D02F0;
  if (!qword_1ED3D02F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0310, &_s10CodingKeysON_223);
    atomic_store(result, (unint64_t *)&qword_1ED3D02F0);
  }
  return result;
}

void sub_1BAE7846C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5E0)
  {
    sub_1BAE784E4();
    sub_1BA4A2870(&qword_1ED3AD8F8, (uint64_t (*)(uint64_t))sub_1BAE784E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5E0);
  }
}

uint64_t sub_1BAE784E4()
{
  uint64_t result;

  result = qword_1ED3AD900;
  if (!qword_1ED3AD900)
  {
    sub_1BAE78564();
    sub_1BAE785A8();
    sub_1BAE785EC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE78564()
{
  unint64_t result;

  result = qword_1ED3AD720;
  if (!qword_1ED3AD720)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D02D8, &_s10CodingKeysON_222);
    atomic_store(result, (unint64_t *)&qword_1ED3AD720);
  }
  return result;
}

unint64_t sub_1BAE785A8()
{
  unint64_t result;

  result = qword_1ED3A6CE0;
  if (!qword_1ED3A6CE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0288, &_s10CodingKeysON_222);
    atomic_store(result, (unint64_t *)&qword_1ED3A6CE0);
  }
  return result;
}

unint64_t sub_1BAE785EC()
{
  unint64_t result;

  result = qword_1ED3AD718;
  if (!qword_1ED3AD718)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0260, &_s10CodingKeysON_222);
    atomic_store(result, (unint64_t *)&qword_1ED3AD718);
  }
  return result;
}

unint64_t sub_1BAE78630()
{
  unint64_t result;

  result = qword_1ED3A78A0;
  if (!qword_1ED3A78A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSplitBackgroundSide, &type metadata for FormatSplitBackgroundSide);
    atomic_store(result, (unint64_t *)&qword_1ED3A78A0);
  }
  return result;
}

void sub_1BAE78674(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF00)
  {
    sub_1BAE786EC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEBB0, (uint64_t (*)(uint64_t))sub_1BAE786EC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF00);
  }
}

void sub_1BAE786EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEBB8)
  {
    sub_1BAE784E4();
    sub_1BA4A2870(&qword_1ED3AD8F8, (uint64_t (*)(uint64_t))sub_1BAE784E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEBB8);
  }
}

uint64_t sub_1BAE78764(uint64_t a1, uint64_t a2)
{
  __swift_memcpy65_8(a2, a1);
  return a2;
}

unint64_t sub_1BAE787A0()
{
  unint64_t result;

  result = qword_1ED3ADC80;
  if (!qword_1ED3ADC80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinEdge, &type metadata for FormatSupplementaryNodePinEdge);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC80);
  }
  return result;
}

unint64_t sub_1BAE787E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AD410;
  if (!qword_1ED3AD410)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AD418, (uint64_t (*)(void))sub_1BAE787A0, (uint64_t)&type metadata for FormatSupplementaryNodePinEdge, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AD410);
  }
  return result;
}

void sub_1BAE7884C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B25D0)
  {
    sub_1BAE788C4();
    sub_1BA4A2870(&qword_1EF2B25F0, (uint64_t (*)(uint64_t))sub_1BAE788C4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B25D0);
  }
}

uint64_t sub_1BAE788C4()
{
  uint64_t result;

  result = qword_1EF2B25D8;
  if (!qword_1EF2B25D8)
  {
    sub_1BAE78944();
    sub_1BA7C0B78();
    sub_1BAE78988();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE78944()
{
  unint64_t result;

  result = qword_1EF2B25E0;
  if (!qword_1EF2B25E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0200, &_s10CodingKeysON_221);
    atomic_store(result, (unint64_t *)&qword_1EF2B25E0);
  }
  return result;
}

unint64_t sub_1BAE78988()
{
  unint64_t result;

  result = qword_1EF2B25E8;
  if (!qword_1EF2B25E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0188, &_s10CodingKeysON_221);
    atomic_store(result, (unint64_t *)&qword_1EF2B25E8);
  }
  return result;
}

void sub_1BAE789CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B25F8)
  {
    sub_1BAE78A44();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2608, (uint64_t (*)(uint64_t))sub_1BAE78A44, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B25F8);
  }
}

void sub_1BAE78A44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2600)
  {
    sub_1BAE788C4();
    sub_1BA4A2870(&qword_1EF2B25F0, (uint64_t (*)(uint64_t))sub_1BAE788C4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2600);
  }
}

unint64_t sub_1BAE78ABC()
{
  unint64_t result;

  result = qword_1EF2B2610;
  if (!qword_1EF2B2610)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A268, &_s14descr1E728EA89V8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2610);
  }
  return result;
}

void sub_1BAE78B00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2618)
  {
    sub_1BAE78B78();
    sub_1BA4A2870(&qword_1EF2B2640, (uint64_t (*)(uint64_t))sub_1BAE78B78, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2618);
  }
}

uint64_t sub_1BAE78B78()
{
  uint64_t result;

  result = qword_1EF2B2620;
  if (!qword_1EF2B2620)
  {
    sub_1BAE78BF8();
    sub_1BAE78C3C();
    sub_1BAE78C80();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE78BF8()
{
  unint64_t result;

  result = qword_1EF2B2628;
  if (!qword_1EF2B2628)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0150, &_s10CodingKeysON_220);
    atomic_store(result, (unint64_t *)&qword_1EF2B2628);
  }
  return result;
}

unint64_t sub_1BAE78C3C()
{
  unint64_t result;

  result = qword_1EF2B2630;
  if (!qword_1EF2B2630)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0100, &_s10CodingKeysON_220);
    atomic_store(result, (unint64_t *)&qword_1EF2B2630);
  }
  return result;
}

unint64_t sub_1BAE78C80()
{
  unint64_t result;

  result = qword_1EF2B2638;
  if (!qword_1EF2B2638)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D00D8, &_s10CodingKeysON_220);
    atomic_store(result, (unint64_t *)&qword_1EF2B2638);
  }
  return result;
}

unint64_t sub_1BAE78CC4()
{
  unint64_t result;

  result = qword_1EF2B2648;
  if (!qword_1EF2B2648)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineColor, &type metadata for FormatShineColor);
    atomic_store(result, (unint64_t *)&qword_1EF2B2648);
  }
  return result;
}

unint64_t sub_1BAE78D08()
{
  unint64_t result;

  result = qword_1EF2B2650;
  if (!qword_1EF2B2650)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineAlphaProcessor, &type metadata for FormatShineAlphaProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2B2650);
  }
  return result;
}

void sub_1BAE78D4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2658)
  {
    sub_1BAE78DC4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2668, (uint64_t (*)(uint64_t))sub_1BAE78DC4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2658);
  }
}

void sub_1BAE78DC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2660)
  {
    sub_1BAE78B78();
    sub_1BA4A2870(&qword_1EF2B2640, (uint64_t (*)(uint64_t))sub_1BAE78B78, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2660);
  }
}

uint64_t sub_1BAE78E3C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy65_8(a2, a1);
  return a2;
}

void sub_1BAE78E78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A38)
  {
    sub_1BAE78EF0();
    sub_1BA4A2870(&qword_1ED3D0D30, (uint64_t (*)(uint64_t))sub_1BAE78EF0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A38);
  }
}

uint64_t sub_1BAE78EF0()
{
  uint64_t result;

  result = qword_1ED3D0D38;
  if (!qword_1ED3D0D38)
  {
    sub_1BAE78F70();
    sub_1BA528128();
    sub_1BAE78FB4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE78F70()
{
  unint64_t result;

  result = qword_1ED3D0670;
  if (!qword_1ED3D0670)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D00A0, &_s10CodingKeysON_219);
    atomic_store(result, (unint64_t *)&qword_1ED3D0670);
  }
  return result;
}

unint64_t sub_1BAE78FB4()
{
  unint64_t result;

  result = qword_1ED3D0668;
  if (!qword_1ED3D0668)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0028, &_s10CodingKeysON_219);
    atomic_store(result, (unint64_t *)&qword_1ED3D0668);
  }
  return result;
}

void sub_1BAE78FF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD60)
  {
    sub_1BAE79070();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE860, (uint64_t (*)(uint64_t))sub_1BAE79070, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD60);
  }
}

void sub_1BAE79070()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE868)
  {
    sub_1BAE78EF0();
    sub_1BA4A2870(&qword_1ED3D0D30, (uint64_t (*)(uint64_t))sub_1BAE78EF0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE868);
  }
}

unint64_t sub_1BAE790E8()
{
  unint64_t result;

  result = qword_1ED3C9100;
  if (!qword_1ED3C9100)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0000, &_s10CodingTypeON_158);
    atomic_store(result, (unint64_t *)&qword_1ED3C9100);
  }
  return result;
}

unint64_t sub_1BAE7912C()
{
  unint64_t result;

  result = qword_1ED3A7FA8;
  if (!qword_1ED3A7FA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFFD8, &_s10CodingTypeON_157);
    atomic_store(result, (unint64_t *)&qword_1ED3A7FA8);
  }
  return result;
}

void sub_1BAE79170()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2678)
  {
    sub_1BAE791E8();
    sub_1BA4A2870(&qword_1EF2B26A0, (uint64_t (*)(uint64_t))sub_1BAE791E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2678);
  }
}

uint64_t sub_1BAE791E8()
{
  uint64_t result;

  result = qword_1EF2B2680;
  if (!qword_1EF2B2680)
  {
    sub_1BAE79268();
    sub_1BAE792AC();
    sub_1BAE792F0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE79268()
{
  unint64_t result;

  result = qword_1EF2B2688;
  if (!qword_1EF2B2688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFFA0, &_s10CodingKeysON_218);
    atomic_store(result, (unint64_t *)&qword_1EF2B2688);
  }
  return result;
}

unint64_t sub_1BAE792AC()
{
  unint64_t result;

  result = qword_1EF2B2690;
  if (!qword_1EF2B2690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFF50, &_s10CodingKeysON_218);
    atomic_store(result, (unint64_t *)&qword_1EF2B2690);
  }
  return result;
}

unint64_t sub_1BAE792F0()
{
  unint64_t result;

  result = qword_1EF2B2698;
  if (!qword_1EF2B2698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFF28, &_s10CodingKeysON_218);
    atomic_store(result, (unint64_t *)&qword_1EF2B2698);
  }
  return result;
}

void sub_1BAE79334(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B26A8)
  {
    sub_1BAE793AC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B26B8, (uint64_t (*)(uint64_t))sub_1BAE793AC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B26A8);
  }
}

void sub_1BAE793AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B26B0)
  {
    sub_1BAE791E8();
    sub_1BA4A2870(&qword_1EF2B26A0, (uint64_t (*)(uint64_t))sub_1BAE791E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B26B0);
  }
}

void sub_1BAE79424()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B26C0)
  {
    sub_1BAE7949C();
    sub_1BA4A2870(&qword_1EF2B26E8, (uint64_t (*)(uint64_t))sub_1BAE7949C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B26C0);
  }
}

uint64_t sub_1BAE7949C()
{
  uint64_t result;

  result = qword_1EF2B26C8;
  if (!qword_1EF2B26C8)
  {
    sub_1BAE7951C();
    sub_1BAE79560();
    sub_1BAE795A4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7951C()
{
  unint64_t result;

  result = qword_1EF2B26D0;
  if (!qword_1EF2B26D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFEF0, &_s10CodingKeysON_217);
    atomic_store(result, (unint64_t *)&qword_1EF2B26D0);
  }
  return result;
}

unint64_t sub_1BAE79560()
{
  unint64_t result;

  result = qword_1EF2B26D8;
  if (!qword_1EF2B26D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFEA0, &_s10CodingKeysON_217);
    atomic_store(result, (unint64_t *)&qword_1EF2B26D8);
  }
  return result;
}

unint64_t sub_1BAE795A4()
{
  unint64_t result;

  result = qword_1EF2B26E0;
  if (!qword_1EF2B26E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFE78, &_s10CodingKeysON_217);
    atomic_store(result, (unint64_t *)&qword_1EF2B26E0);
  }
  return result;
}

void sub_1BAE795E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B26F0)
  {
    sub_1BAE79660();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2700, (uint64_t (*)(uint64_t))sub_1BAE79660, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B26F0);
  }
}

void sub_1BAE79660()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B26F8)
  {
    sub_1BAE7949C();
    sub_1BA4A2870(&qword_1EF2B26E8, (uint64_t (*)(uint64_t))sub_1BAE7949C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B26F8);
  }
}

void sub_1BAE796D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D58)
  {
    sub_1BAE79750();
    sub_1BA4A2870(&qword_1ED3D1370, (uint64_t (*)(uint64_t))sub_1BAE79750, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D58);
  }
}

uint64_t sub_1BAE79750()
{
  uint64_t result;

  result = qword_1ED3D1378;
  if (!qword_1ED3D1378)
  {
    sub_1BAE797D0();
    sub_1BA4EBFD4();
    sub_1BAE79814();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE797D0()
{
  unint64_t result;

  result = qword_1ED3D1878;
  if (!qword_1ED3D1878)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFE40, &_s10CodingKeysON_216);
    atomic_store(result, (unint64_t *)&qword_1ED3D1878);
  }
  return result;
}

unint64_t sub_1BAE79814()
{
  unint64_t result;

  result = qword_1ED3D1870;
  if (!qword_1ED3D1870)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFDC8, &_s10CodingKeysON_216);
    atomic_store(result, (unint64_t *)&qword_1ED3D1870);
  }
  return result;
}

void sub_1BAE79858(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE158)
  {
    sub_1BAE798D0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF058, (uint64_t (*)(uint64_t))sub_1BAE798D0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE158);
  }
}

void sub_1BAE798D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF060)
  {
    sub_1BAE79750();
    sub_1BA4A2870(&qword_1ED3D1370, (uint64_t (*)(uint64_t))sub_1BAE79750, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF060);
  }
}

void sub_1BAE79948()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE648)
  {
    sub_1BAE799C0();
    sub_1BA4A2870(&qword_1ED3AD9D8, (uint64_t (*)(uint64_t))sub_1BAE799C0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE648);
  }
}

uint64_t sub_1BAE799C0()
{
  uint64_t result;

  result = qword_1ED3AD9E0;
  if (!qword_1ED3AD9E0)
  {
    sub_1BAE79A40();
    sub_1BAE79A84();
    sub_1BAE79AC8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE79A40()
{
  unint64_t result;

  result = qword_1ED3AE348;
  if (!qword_1ED3AE348)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFD90, &_s10CodingKeysON_215);
    atomic_store(result, (unint64_t *)&qword_1ED3AE348);
  }
  return result;
}

unint64_t sub_1BAE79A84()
{
  unint64_t result;

  result = qword_1ED3A9568;
  if (!qword_1ED3A9568)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFD40, &_s10CodingKeysON_215);
    atomic_store(result, (unint64_t *)&qword_1ED3A9568);
  }
  return result;
}

unint64_t sub_1BAE79AC8()
{
  unint64_t result;

  result = qword_1ED3AE340;
  if (!qword_1ED3AE340)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFD18, &_s10CodingKeysON_215);
    atomic_store(result, (unint64_t *)&qword_1ED3AE340);
  }
  return result;
}

void sub_1BAE79B0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE150)
  {
    sub_1BAE79B84();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF048, (uint64_t (*)(uint64_t))sub_1BAE79B84, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE150);
  }
}

void sub_1BAE79B84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF050)
  {
    sub_1BAE799C0();
    sub_1BA4A2870(&qword_1ED3AD9D8, (uint64_t (*)(uint64_t))sub_1BAE799C0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF050);
  }
}

uint64_t sub_1BAE79BFC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy50_8(a2, a1);
  return a2;
}

uint64_t sub_1BAE79C38(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), *(unsigned __int8 *)(a1 + 49));
  return a1;
}

void sub_1BAE79C78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B78)
  {
    sub_1BAE79CF0();
    sub_1BA4A2870(&qword_1ED3D0FB0, (uint64_t (*)(uint64_t))sub_1BAE79CF0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B78);
  }
}

uint64_t sub_1BAE79CF0()
{
  uint64_t result;

  result = qword_1ED3D0FB8;
  if (!qword_1ED3D0FB8)
  {
    sub_1BAE79D70();
    sub_1BA56E2E4();
    sub_1BAE79DB4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE79D70()
{
  unint64_t result;

  result = qword_1ED3D0920;
  if (!qword_1ED3D0920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFCB8, &_s10CodingKeysON_214);
    atomic_store(result, (unint64_t *)&qword_1ED3D0920);
  }
  return result;
}

unint64_t sub_1BAE79DB4()
{
  unint64_t result;

  result = qword_1ED3D0918;
  if (!qword_1ED3D0918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFC40, &_s10CodingKeysON_214);
    atomic_store(result, (unint64_t *)&qword_1ED3D0918);
  }
  return result;
}

void sub_1BAE79DF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADEC8)
  {
    sub_1BAE79E70();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEB40, (uint64_t (*)(uint64_t))sub_1BAE79E70, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADEC8);
  }
}

void sub_1BAE79E70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEB48)
  {
    sub_1BAE79CF0();
    sub_1BA4A2870(&qword_1ED3D0FB0, (uint64_t (*)(uint64_t))sub_1BAE79CF0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEB48);
  }
}

unint64_t sub_1BAE79EE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A66B8;
  if (!qword_1ED3A66B8)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3A66C0, (uint64_t (*)(void))sub_1BAADB198, (uint64_t)&type metadata for FormatVisibility, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A66B8);
  }
  return result;
}

uint64_t sub_1BAE79F50()
{
  uint64_t v0;

  sub_1BA6EEDB4(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAE79F7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE028)
  {
    sub_1BAE79FF4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEE00, (uint64_t (*)(uint64_t))sub_1BAE79FF4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE028);
  }
}

void sub_1BAE79FF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEE08)
  {
    sub_1BAE7A06C();
    sub_1BA4A2870(&qword_1ED3AD948, (uint64_t (*)(uint64_t))sub_1BAE7A06C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEE08);
  }
}

uint64_t sub_1BAE7A06C()
{
  uint64_t result;

  result = qword_1ED3AD950;
  if (!qword_1ED3AD950)
  {
    sub_1BAE7A0EC();
    sub_1BA56CC28();
    sub_1BAE7A130();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7A0EC()
{
  unint64_t result;

  result = qword_1ED3ACA30;
  if (!qword_1ED3ACA30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFBE0, &_s10CodingKeysON_213);
    atomic_store(result, (unint64_t *)&qword_1ED3ACA30);
  }
  return result;
}

unint64_t sub_1BAE7A130()
{
  unint64_t result;

  result = qword_1ED3ADA78;
  if (!qword_1ED3ADA78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFB68, &_s10CodingKeysON_213);
    atomic_store(result, (unint64_t *)&qword_1ED3ADA78);
  }
  return result;
}

void sub_1BAE7A174()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE608)
  {
    sub_1BAE7A1EC();
    sub_1BA4A2870(&qword_1ED3AD958, (uint64_t (*)(uint64_t))sub_1BAE7A1EC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE608);
  }
}

uint64_t sub_1BAE7A1EC()
{
  uint64_t result;

  result = qword_1ED3AD960;
  if (!qword_1ED3AD960)
  {
    sub_1BAE7A26C();
    sub_1BA568618();
    sub_1BAE7A2B0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7A26C()
{
  unint64_t result;

  result = qword_1ED3ADA88;
  if (!qword_1ED3ADA88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFB30, &_s10CodingKeysON_212);
    atomic_store(result, (unint64_t *)&qword_1ED3ADA88);
  }
  return result;
}

unint64_t sub_1BAE7A2B0()
{
  unint64_t result;

  result = qword_1ED3ADA80;
  if (!qword_1ED3ADA80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFAB8, &_s10CodingKeysON_212);
    atomic_store(result, (unint64_t *)&qword_1ED3ADA80);
  }
  return result;
}

void sub_1BAE7A2F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE030)
  {
    sub_1BAE7A36C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEE10, (uint64_t (*)(uint64_t))sub_1BAE7A36C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE030);
  }
}

void sub_1BAE7A36C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEE18)
  {
    sub_1BAE7A1EC();
    sub_1BA4A2870(&qword_1ED3AD958, (uint64_t (*)(uint64_t))sub_1BAE7A1EC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEE18);
  }
}

void sub_1BAE7A3E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0D0)
  {
    sub_1BAE7A45C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEF50, (uint64_t (*)(uint64_t))sub_1BAE7A45C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0D0);
  }
}

void sub_1BAE7A45C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEF58)
  {
    sub_1BAE7A4D4();
    sub_1BA4A2870(&qword_1ED3ABF08, (uint64_t (*)(uint64_t))sub_1BAE7A4D4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEF58);
  }
}

uint64_t sub_1BAE7A4D4()
{
  uint64_t result;

  result = qword_1ED3ABF10;
  if (!qword_1ED3ABF10)
  {
    sub_1BAE7A554();
    sub_1BA7F11C0();
    sub_1BAE7A598();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7A554()
{
  unint64_t result;

  result = qword_1ED3ABFB0;
  if (!qword_1ED3ABFB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFA80, &_s10CodingKeysON_211);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFB0);
  }
  return result;
}

unint64_t sub_1BAE7A598()
{
  unint64_t result;

  result = qword_1ED3ABFA8;
  if (!qword_1ED3ABFA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFA08, &_s10CodingKeysON_211);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFA8);
  }
  return result;
}

void sub_1BAE7A5DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC088)
  {
    sub_1BAE7A654();
    sub_1BA4A2870(&qword_1ED3ABF18, (uint64_t (*)(uint64_t))sub_1BAE7A654, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC088);
  }
}

uint64_t sub_1BAE7A654()
{
  uint64_t result;

  result = qword_1ED3ABF20;
  if (!qword_1ED3ABF20)
  {
    sub_1BAE7A6D4();
    sub_1BA537E90();
    sub_1BAE7A718();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7A6D4()
{
  unint64_t result;

  result = qword_1ED3ABFC0;
  if (!qword_1ED3ABFC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF9D0, &_s10CodingKeysON_210);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFC0);
  }
  return result;
}

unint64_t sub_1BAE7A718()
{
  unint64_t result;

  result = qword_1ED3ABFB8;
  if (!qword_1ED3ABFB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF958, &_s10CodingKeysON_210);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFB8);
  }
  return result;
}

void sub_1BAE7A75C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0D8)
  {
    sub_1BAE7A7D4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEF60, (uint64_t (*)(uint64_t))sub_1BAE7A7D4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0D8);
  }
}

void sub_1BAE7A7D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEF68)
  {
    sub_1BAE7A654();
    sub_1BA4A2870(&qword_1ED3ABF18, (uint64_t (*)(uint64_t))sub_1BAE7A654, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEF68);
  }
}

void sub_1BAE7A84C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E08)
  {
    sub_1BAE7A8C4();
    sub_1BA4A2870(&qword_1ED3D14D0, (uint64_t (*)(uint64_t))sub_1BAE7A8C4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E08);
  }
}

uint64_t sub_1BAE7A8C4()
{
  uint64_t result;

  result = qword_1ED3D14D8;
  if (!qword_1ED3D14D8)
  {
    sub_1BAE7A944();
    sub_1BA61BBD0();
    sub_1BAE7A988();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7A944()
{
  unint64_t result;

  result = qword_1ED3D0200;
  if (!qword_1ED3D0200)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF920, &_s10CodingKeysON_209);
    atomic_store(result, (unint64_t *)&qword_1ED3D0200);
  }
  return result;
}

unint64_t sub_1BAE7A988()
{
  unint64_t result;

  result = qword_1ED3D01F8;
  if (!qword_1ED3D01F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF8A8, &_s10CodingKeysON_209);
    atomic_store(result, (unint64_t *)&qword_1ED3D01F8);
  }
  return result;
}

unint64_t sub_1BAE7A9CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2708;
  if (!qword_1EF2B2708)
  {
    sub_1BAEE91B8(255, &qword_1ED3C4770);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2708);
  }
  return result;
}

void sub_1BAE7AA34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE238)
  {
    sub_1BAE7AAAC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF218, (uint64_t (*)(uint64_t))sub_1BAE7AAAC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE238);
  }
}

void sub_1BAE7AAAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF220)
  {
    sub_1BAE7A8C4();
    sub_1BA4A2870(&qword_1ED3D14D0, (uint64_t (*)(uint64_t))sub_1BAE7A8C4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF220);
  }
}

unint64_t sub_1BAE7AB24()
{
  unint64_t result;

  result = qword_1EF2B2710;
  if (!qword_1EF2B2710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF720, &_s10CodingTypeON_154);
    atomic_store(result, (unint64_t *)&qword_1EF2B2710);
  }
  return result;
}

unint64_t sub_1BAE7AB68()
{
  unint64_t result;

  result = qword_1EF2B2718;
  if (!qword_1EF2B2718)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunctionControlPoints, &type metadata for FormatMediaTimingFunctionControlPoints);
    atomic_store(result, (unint64_t *)&qword_1EF2B2718);
  }
  return result;
}

unint64_t sub_1BAE7ABAC()
{
  unint64_t result;

  result = qword_1EF2B2728;
  if (!qword_1EF2B2728)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunctionName, &type metadata for FormatMediaTimingFunctionName);
    atomic_store(result, (unint64_t *)&qword_1EF2B2728);
  }
  return result;
}

unint64_t sub_1BAE7ABF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2730;
  if (!qword_1EF2B2730)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2720, (uint64_t (*)(void))sub_1BAE7ABAC, (uint64_t)&type metadata for FormatMediaTimingFunctionName, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2730);
  }
  return result;
}

void sub_1BAE7AC58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5E8)
  {
    sub_1BAE7ACD0();
    sub_1BA4A2870(&qword_1ED3AD908, (uint64_t (*)(uint64_t))sub_1BAE7ACD0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5E8);
  }
}

uint64_t sub_1BAE7ACD0()
{
  uint64_t result;

  result = qword_1ED3AD910;
  if (!qword_1ED3AD910)
  {
    sub_1BAE7AD50();
    sub_1BAE7AD94();
    sub_1BAE7ADD8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7AD50()
{
  unint64_t result;

  result = qword_1ED3AD730;
  if (!qword_1ED3AD730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF6E8, &_s10CodingKeysON_208);
    atomic_store(result, (unint64_t *)&qword_1ED3AD730);
  }
  return result;
}

unint64_t sub_1BAE7AD94()
{
  unint64_t result;

  result = qword_1ED3A6D08;
  if (!qword_1ED3A6D08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF698, &_s10CodingKeysON_208);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D08);
  }
  return result;
}

unint64_t sub_1BAE7ADD8()
{
  unint64_t result;

  result = qword_1ED3AD728;
  if (!qword_1ED3AD728)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF670, &_s10CodingKeysON_208);
    atomic_store(result, (unint64_t *)&qword_1ED3AD728);
  }
  return result;
}

unint64_t sub_1BAE7AE1C()
{
  unint64_t result;

  result = qword_1ED39FE38;
  if (!qword_1ED39FE38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoGravity, &type metadata for FormatVideoGravity);
    atomic_store(result, (unint64_t *)&qword_1ED39FE38);
  }
  return result;
}

unint64_t sub_1BAE7AE60()
{
  unint64_t result;

  result = qword_1ED39FF68;
  if (!qword_1ED39FF68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayback, &type metadata for FormatVideoPlayback);
    atomic_store(result, (unint64_t *)&qword_1ED39FF68);
  }
  return result;
}

unint64_t sub_1BAE7AEA4()
{
  unint64_t result;

  result = qword_1ED39FD20;
  if (!qword_1ED39FD20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageGravity, &type metadata for FormatImageGravity);
    atomic_store(result, (unint64_t *)&qword_1ED39FD20);
  }
  return result;
}

unint64_t sub_1BAE7AEE8()
{
  unint64_t result;

  result = qword_1ED3A0160;
  if (!qword_1ED3A0160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoEndAction, &type metadata for FormatVideoEndAction);
    atomic_store(result, (unint64_t *)&qword_1ED3A0160);
  }
  return result;
}

void sub_1BAE7AF2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2738)
  {
    sub_1BAE7AFA4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2748, (uint64_t (*)(uint64_t))sub_1BAE7AFA4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2738);
  }
}

void sub_1BAE7AFA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2740)
  {
    sub_1BAE7ACD0();
    sub_1BA4A2870(&qword_1ED3AD908, (uint64_t (*)(uint64_t))sub_1BAE7ACD0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2740);
  }
}

void sub_1BAE7B01C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DE0)
  {
    sub_1BAE7B094();
    sub_1BA4A2870(&qword_1ED3D1480, (uint64_t (*)(uint64_t))sub_1BAE7B094, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DE0);
  }
}

uint64_t sub_1BAE7B094()
{
  uint64_t result;

  result = qword_1ED3D1488;
  if (!qword_1ED3D1488)
  {
    sub_1BAE7B114();
    sub_1BA5E173C();
    sub_1BAE7B158();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7B114()
{
  unint64_t result;

  result = qword_1ED3D0148;
  if (!qword_1ED3D0148)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF638, &_s10CodingKeysON_207);
    atomic_store(result, (unint64_t *)&qword_1ED3D0148);
  }
  return result;
}

unint64_t sub_1BAE7B158()
{
  unint64_t result;

  result = qword_1ED3D0140;
  if (!qword_1ED3D0140)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF5C0, &_s10CodingKeysON_207);
    atomic_store(result, (unint64_t *)&qword_1ED3D0140);
  }
  return result;
}

void sub_1BAE7B19C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE210)
  {
    sub_1BAE7B214();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF1C8, (uint64_t (*)(uint64_t))sub_1BAE7B214, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE210);
  }
}

void sub_1BAE7B214()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF1D0)
  {
    sub_1BAE7B094();
    sub_1BA4A2870(&qword_1ED3D1480, (uint64_t (*)(uint64_t))sub_1BAE7B094, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF1D0);
  }
}

unint64_t sub_1BAE7B28C()
{
  unint64_t result;

  result = qword_1EF2B2750;
  if (!qword_1EF2B2750)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGeometryAdjustment, &type metadata for FormatGeometryAdjustment);
    atomic_store(result, (unint64_t *)&qword_1EF2B2750);
  }
  return result;
}

uint64_t sub_1BAE7B2D4()
{
  return objectdestroy_118Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAE7B2E4()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BAE7B308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D0298;
  if (!qword_1ED3D0298)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B4028, (uint64_t (*)(void))sub_1BA835D64, (uint64_t)&type metadata for FormatInteger, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEquation<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D0298);
  }
  return result;
}

uint64_t sub_1BAE7B370()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAE7B394()
{
  return objectdestroy_11Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BAE7B3A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAE7B3C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BAE7B3E8()
{
  unint64_t result;

  result = qword_1ED3D01F0;
  if (!qword_1ED3D01F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnchor, &type metadata for FormatAnchor);
    atomic_store(result, (unint64_t *)&qword_1ED3D01F0);
  }
  return result;
}

unint64_t sub_1BAE7B42C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B3488;
  if (!qword_1ED3B3488)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B3490, (uint64_t (*)(void))sub_1BAE7B3E8, (uint64_t)&type metadata for FormatAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B3488);
  }
  return result;
}

uint64_t sub_1BAE7B494()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAE7B4B8()
{
  return objectdestroy_118Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_115Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAE7B508(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFA0)
  {
    sub_1BAE7B580();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AECF0, (uint64_t (*)(uint64_t))sub_1BAE7B580, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFA0);
  }
}

void sub_1BAE7B580()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AECF8)
  {
    sub_1BAE7B5F8();
    sub_1BA4A2870(&qword_1ED3D10F0, (uint64_t (*)(uint64_t))sub_1BAE7B5F8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AECF8);
  }
}

uint64_t sub_1BAE7B5F8()
{
  uint64_t result;

  result = qword_1ED3D10F8;
  if (!qword_1ED3D10F8)
  {
    sub_1BAE7B678();
    sub_1BA5A71F8();
    sub_1BAE7B6BC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7B678()
{
  unint64_t result;

  result = qword_1ED3D0A80;
  if (!qword_1ED3D0A80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF538, &_s10CodingKeysON_206);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A80);
  }
  return result;
}

unint64_t sub_1BAE7B6BC()
{
  unint64_t result;

  result = qword_1ED3D0A78;
  if (!qword_1ED3D0A78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF4C0, &_s10CodingKeysON_206);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A78);
  }
  return result;
}

void sub_1BAE7B700()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C20)
  {
    sub_1BAE7B778();
    sub_1BA4A2870(&qword_1ED3D1100, (uint64_t (*)(uint64_t))sub_1BAE7B778, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C20);
  }
}

uint64_t sub_1BAE7B778()
{
  uint64_t result;

  result = qword_1ED3D1108;
  if (!qword_1ED3D1108)
  {
    sub_1BAE7B7F8();
    sub_1BA53D2DC();
    sub_1BAE7B83C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7B7F8()
{
  unint64_t result;

  result = qword_1ED3D0A90;
  if (!qword_1ED3D0A90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF488, &_s10CodingKeysON_205);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A90);
  }
  return result;
}

unint64_t sub_1BAE7B83C()
{
  unint64_t result;

  result = qword_1ED3D0A88;
  if (!qword_1ED3D0A88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF410, &_s10CodingKeysON_205);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A88);
  }
  return result;
}

void sub_1BAE7B880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFA8)
  {
    sub_1BAE7B8F8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AED00, (uint64_t (*)(uint64_t))sub_1BAE7B8F8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFA8);
  }
}

void sub_1BAE7B8F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AED08)
  {
    sub_1BAE7B778();
    sub_1BA4A2870(&qword_1ED3D1100, (uint64_t (*)(uint64_t))sub_1BAE7B778, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AED08);
  }
}

unint64_t sub_1BAE7B970()
{
  unint64_t result;

  result = qword_1EF2B2758;
  if (!qword_1EF2B2758)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF3E8, &_s10CodingTypeON_151);
    atomic_store(result, (unint64_t *)&qword_1EF2B2758);
  }
  return result;
}

unint64_t sub_1BAE7B9B4()
{
  unint64_t result;

  result = qword_1ED3A5908;
  if (!qword_1ED3A5908)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPath, &type metadata for FormatBezierPath);
    atomic_store(result, (unint64_t *)&qword_1ED3A5908);
  }
  return result;
}

unint64_t sub_1BAE7B9F8()
{
  unint64_t result;

  result = qword_1EF2B2760;
  if (!qword_1EF2B2760)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89F8C8, &_s4BoolO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B2760);
  }
  return result;
}

void sub_1BAE7BA3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2768)
  {
    sub_1BAE7BAB4();
    sub_1BA4A2870(&qword_1EF2B2788, (uint64_t (*)(uint64_t))sub_1BAE7BAB4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2768);
  }
}

uint64_t sub_1BAE7BAB4()
{
  uint64_t result;

  result = qword_1EF2B2770;
  if (!qword_1EF2B2770)
  {
    sub_1BAE7BB34();
    sub_1BAE7BB78();
    sub_1BAE7BBBC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7BB34()
{
  unint64_t result;

  result = qword_1EF2B2778;
  if (!qword_1EF2B2778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF388, &_s10CodingKeysON_204);
    atomic_store(result, (unint64_t *)&qword_1EF2B2778);
  }
  return result;
}

unint64_t sub_1BAE7BB78()
{
  unint64_t result;

  result = qword_1ED3AFAA8;
  if (!qword_1ED3AFAA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF338, &_s10CodingKeysON_204);
    atomic_store(result, (unint64_t *)&qword_1ED3AFAA8);
  }
  return result;
}

unint64_t sub_1BAE7BBBC()
{
  unint64_t result;

  result = qword_1EF2B2780;
  if (!qword_1EF2B2780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF310, &_s10CodingKeysON_204);
    atomic_store(result, (unint64_t *)&qword_1EF2B2780);
  }
  return result;
}

unint64_t sub_1BAE7BC00()
{
  unint64_t result;

  result = qword_1ED39C420;
  if (!qword_1ED39C420)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormatStyle, &type metadata for FormatNumberFormatStyle);
    atomic_store(result, (unint64_t *)&qword_1ED39C420);
  }
  return result;
}

unint64_t sub_1BAE7BC44()
{
  unint64_t result;

  result = qword_1ED39C418;
  if (!qword_1ED39C418)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormatRoundingMode, &type metadata for FormatNumberFormatRoundingMode);
    atomic_store(result, (unint64_t *)&qword_1ED39C418);
  }
  return result;
}

void sub_1BAE7BC88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2790)
  {
    sub_1BAE7BD00();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B27A0, (uint64_t (*)(uint64_t))sub_1BAE7BD00, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2790);
  }
}

void sub_1BAE7BD00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2798)
  {
    sub_1BAE7BAB4();
    sub_1BA4A2870(&qword_1EF2B2788, (uint64_t (*)(uint64_t))sub_1BAE7BAB4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2798);
  }
}

void sub_1BAE7BD78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B27A8)
  {
    sub_1BAE7BDF0();
    sub_1BA4A2870(&qword_1EF2B27D0, (uint64_t (*)(uint64_t))sub_1BAE7BDF0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B27A8);
  }
}

uint64_t sub_1BAE7BDF0()
{
  uint64_t result;

  result = qword_1EF2B27B0;
  if (!qword_1EF2B27B0)
  {
    sub_1BAE7BE70();
    sub_1BAE7BEB4();
    sub_1BAE7BEF8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7BE70()
{
  unint64_t result;

  result = qword_1EF2B27B8;
  if (!qword_1EF2B27B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF2D8, &_s10CodingKeysON_203);
    atomic_store(result, (unint64_t *)&qword_1EF2B27B8);
  }
  return result;
}

unint64_t sub_1BAE7BEB4()
{
  unint64_t result;

  result = qword_1EF2B27C0;
  if (!qword_1EF2B27C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF288, &_s10CodingKeysON_203);
    atomic_store(result, (unint64_t *)&qword_1EF2B27C0);
  }
  return result;
}

unint64_t sub_1BAE7BEF8()
{
  unint64_t result;

  result = qword_1EF2B27C8;
  if (!qword_1EF2B27C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF260, &_s10CodingKeysON_203);
    atomic_store(result, (unint64_t *)&qword_1EF2B27C8);
  }
  return result;
}

void sub_1BAE7BF3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B27D8)
  {
    sub_1BAE7BFB4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B27E8, (uint64_t (*)(uint64_t))sub_1BAE7BFB4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B27D8);
  }
}

void sub_1BAE7BFB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B27E0)
  {
    sub_1BAE7BDF0();
    sub_1BA4A2870(&qword_1EF2B27D0, (uint64_t (*)(uint64_t))sub_1BAE7BDF0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B27E0);
  }
}

void sub_1BAE7C02C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AC0)
  {
    sub_1BAE7C0A4();
    sub_1BA4A2870(&qword_1ED3D0E40, (uint64_t (*)(uint64_t))sub_1BAE7C0A4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AC0);
  }
}

uint64_t sub_1BAE7C0A4()
{
  uint64_t result;

  result = qword_1ED3D0E48;
  if (!qword_1ED3D0E48)
  {
    sub_1BAE7C124();
    sub_1BA55FBA4();
    sub_1BAE7C168();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7C124()
{
  unint64_t result;

  result = qword_1ED3D0790;
  if (!qword_1ED3D0790)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF228, &_s10CodingKeysON_202);
    atomic_store(result, (unint64_t *)&qword_1ED3D0790);
  }
  return result;
}

unint64_t sub_1BAE7C168()
{
  unint64_t result;

  result = qword_1ED3D0788;
  if (!qword_1ED3D0788)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF1B0, &_s10CodingKeysON_202);
    atomic_store(result, (unint64_t *)&qword_1ED3D0788);
  }
  return result;
}

unint64_t sub_1BAE7C1AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3BBE48;
  if (!qword_1ED3BBE48)
  {
    sub_1BAEFBAC0(255, &qword_1ED3BBE50, (void (*)(void))sub_1BA8374B4, (void (*)(void))sub_1BA8374F8);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3BBE48);
  }
  return result;
}

unint64_t sub_1BAE7C214()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B07A8;
  if (!qword_1ED3B07A8)
  {
    sub_1BAEFBAC0(255, &qword_1ED3B07B0, (void (*)(void))sub_1BA76BC58, (void (*)(void))sub_1BA833E3C);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B07A8);
  }
  return result;
}

void sub_1BAE7C27C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE00)
  {
    sub_1BAE7C2F4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE00);
  }
}

void sub_1BAE7C2F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE9A8)
  {
    sub_1BAE7C0A4();
    sub_1BA4A2870(&qword_1ED3D0E40, (uint64_t (*)(uint64_t))sub_1BAE7C0A4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE9A8);
  }
}

void sub_1BAE7C36C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19E8)
  {
    sub_1BAE7C3E4();
    sub_1BA4A2870(&qword_1ED3D0C90, (uint64_t (*)(uint64_t))sub_1BAE7C3E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19E8);
  }
}

uint64_t sub_1BAE7C3E4()
{
  uint64_t result;

  result = qword_1ED3D0C98;
  if (!qword_1ED3D0C98)
  {
    sub_1BAE7C464();
    sub_1BA525174();
    sub_1BAE7C4A8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7C464()
{
  unint64_t result;

  result = qword_1ED3D0590;
  if (!qword_1ED3D0590)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF178, &_s10CodingKeysON_201);
    atomic_store(result, (unint64_t *)&qword_1ED3D0590);
  }
  return result;
}

unint64_t sub_1BAE7C4A8()
{
  unint64_t result;

  result = qword_1ED3D0588;
  if (!qword_1ED3D0588)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF100, &_s10CodingKeysON_201);
    atomic_store(result, (unint64_t *)&qword_1ED3D0588);
  }
  return result;
}

void sub_1BAE7C4EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD08)
  {
    sub_1BAE7C564();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE7B0, (uint64_t (*)(uint64_t))sub_1BAE7C564, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD08);
  }
}

void sub_1BAE7C564()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE7B8)
  {
    sub_1BAE7C3E4();
    sub_1BA4A2870(&qword_1ED3D0C90, (uint64_t (*)(uint64_t))sub_1BAE7C3E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE7B8);
  }
}

void sub_1BAE7C5DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D50)
  {
    sub_1BAE7C654();
    sub_1BA4A2870(&qword_1ED3D1360, (uint64_t (*)(uint64_t))sub_1BAE7C654, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D50);
  }
}

uint64_t sub_1BAE7C654()
{
  uint64_t result;

  result = qword_1ED3D1368;
  if (!qword_1ED3D1368)
  {
    sub_1BAE7C6D4();
    sub_1BA8216F8();
    sub_1BAE7C718();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7C6D4()
{
  unint64_t result;

  result = qword_1ED3D1868;
  if (!qword_1ED3D1868)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF0C8, &_s10CodingKeysON_200);
    atomic_store(result, (unint64_t *)&qword_1ED3D1868);
  }
  return result;
}

unint64_t sub_1BAE7C718()
{
  unint64_t result;

  result = qword_1ED3D1860;
  if (!qword_1ED3D1860)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF050, &_s10CodingKeysON_200);
    atomic_store(result, (unint64_t *)&qword_1ED3D1860);
  }
  return result;
}

void sub_1BAE7C75C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE148)
  {
    sub_1BAE7C7D4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF038, (uint64_t (*)(uint64_t))sub_1BAE7C7D4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE148);
  }
}

void sub_1BAE7C7D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF040)
  {
    sub_1BAE7C654();
    sub_1BA4A2870(&qword_1ED3D1360, (uint64_t (*)(uint64_t))sub_1BAE7C654, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF040);
  }
}

void sub_1BAE7C84C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF98)
  {
    sub_1BAE7C8C4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AECE0, (uint64_t (*)(uint64_t))sub_1BAE7C8C4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF98);
  }
}

void sub_1BAE7C8C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AECE8)
  {
    sub_1BAE7C93C();
    sub_1BA4A2870(&qword_1ED3D10E0, (uint64_t (*)(uint64_t))sub_1BAE7C93C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AECE8);
  }
}

uint64_t sub_1BAE7C93C()
{
  uint64_t result;

  result = qword_1ED3D10E8;
  if (!qword_1ED3D10E8)
  {
    sub_1BAE7C9BC();
    sub_1BA5FD174();
    sub_1BAE7CA00();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7C9BC()
{
  unint64_t result;

  result = qword_1ED3D0A70;
  if (!qword_1ED3D0A70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CF018, &_s14descr1E72CC979V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A70);
  }
  return result;
}

unint64_t sub_1BAE7CA00()
{
  unint64_t result;

  result = qword_1ED3D0A68;
  if (!qword_1ED3D0A68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEFA0, &_s14descr1E72CC979V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A68);
  }
  return result;
}

void sub_1BAE7CA44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D38)
  {
    sub_1BAE7CABC();
    sub_1BA4A2870(&qword_1ED3D1330, (uint64_t (*)(uint64_t))sub_1BAE7CABC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D38);
  }
}

uint64_t sub_1BAE7CABC()
{
  uint64_t result;

  result = qword_1ED3D1338;
  if (!qword_1ED3D1338)
  {
    sub_1BAE7CB3C();
    sub_1BA545F14();
    sub_1BAE7CB80();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7CB3C()
{
  unint64_t result;

  result = qword_1ED3D1820;
  if (!qword_1ED3D1820)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEF68, &_s14descr1E72CBD49V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D1820);
  }
  return result;
}

unint64_t sub_1BAE7CB80()
{
  unint64_t result;

  result = qword_1ED3D1818;
  if (!qword_1ED3D1818)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEEF0, &_s14descr1E72CBD49V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D1818);
  }
  return result;
}

void sub_1BAE7CBC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE118)
  {
    sub_1BAE7CC3C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEFE0, (uint64_t (*)(uint64_t))sub_1BAE7CC3C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE118);
  }
}

void sub_1BAE7CC3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEFE8)
  {
    sub_1BAE7CABC();
    sub_1BA4A2870(&qword_1ED3D1330, (uint64_t (*)(uint64_t))sub_1BAE7CABC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEFE8);
  }
}

unint64_t sub_1BAE7CCB4()
{
  unint64_t result;

  result = qword_1ED3AFAD0;
  if (!qword_1ED3AFAD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A2468, &_s4BoolO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1ED3AFAD0);
  }
  return result;
}

unint64_t sub_1BAE7CCF8()
{
  unint64_t result;

  result = qword_1EF2B27F0;
  if (!qword_1EF2B27F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEEA0, &_s10CodingTypeON_148);
    atomic_store(result, (unint64_t *)&qword_1EF2B27F0);
  }
  return result;
}

uint64_t sub_1BAE7CD3C()
{
  uint64_t v0;

  sub_1BA7635EC(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1BAE7CD60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B34D8;
  if (!qword_1ED3B34D8)
  {
    sub_1BA50CAA8(255, &qword_1ED3B34E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B34D8);
  }
  return result;
}

uint64_t sub_1BAE7CDC8()
{
  return swift_deallocObject();
}

unint64_t sub_1BAE7CDD8()
{
  unint64_t result;

  result = qword_1ED3CDDD8;
  if (!qword_1ED3CDDD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEE28, &_s10CodingTypeON_145);
    atomic_store(result, (unint64_t *)&qword_1ED3CDDD8);
  }
  return result;
}

void sub_1BAE7CE1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1EC8)
  {
    sub_1BAE7CE94();
    sub_1BA4A2870(&qword_1ED3D1650, (uint64_t (*)(uint64_t))sub_1BAE7CE94, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1EC8);
  }
}

uint64_t sub_1BAE7CE94()
{
  uint64_t result;

  result = qword_1ED3D1658;
  if (!qword_1ED3D1658)
  {
    sub_1BAE7CF14();
    sub_1BA5E2AD0();
    sub_1BAE7CF58();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7CF14()
{
  unint64_t result;

  result = qword_1ED3D00E8;
  if (!qword_1ED3D00E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEDF0, &_s10CodingKeysON_199);
    atomic_store(result, (unint64_t *)&qword_1ED3D00E8);
  }
  return result;
}

unint64_t sub_1BAE7CF58()
{
  unint64_t result;

  result = qword_1ED3D00E0;
  if (!qword_1ED3D00E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CED78, &_s10CodingKeysON_199);
    atomic_store(result, (unint64_t *)&qword_1ED3D00E0);
  }
  return result;
}

void sub_1BAE7CF9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE330)
  {
    sub_1BAE7D014();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF400, (uint64_t (*)(uint64_t))sub_1BAE7D014, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE330);
  }
}

void sub_1BAE7D014()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF408)
  {
    sub_1BAE7CE94();
    sub_1BA4A2870(&qword_1ED3D1650, (uint64_t (*)(uint64_t))sub_1BAE7CE94, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF408);
  }
}

void sub_1BAE7D08C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1EC0)
  {
    sub_1BAE7D104();
    sub_1BA4A2870(&qword_1ED3D1640, (uint64_t (*)(uint64_t))sub_1BAE7D104, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1EC0);
  }
}

uint64_t sub_1BAE7D104()
{
  uint64_t result;

  result = qword_1ED3D1648;
  if (!qword_1ED3D1648)
  {
    sub_1BAE7D184();
    sub_1BA5AD050();
    sub_1BAE7D1C8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7D184()
{
  unint64_t result;

  result = qword_1ED3D00D8;
  if (!qword_1ED3D00D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CED40, &_s10CodingKeysON_198);
    atomic_store(result, (unint64_t *)&qword_1ED3D00D8);
  }
  return result;
}

unint64_t sub_1BAE7D1C8()
{
  unint64_t result;

  result = qword_1ED3D00D0;
  if (!qword_1ED3D00D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CECC8, &_s10CodingKeysON_198);
    atomic_store(result, (unint64_t *)&qword_1ED3D00D0);
  }
  return result;
}

void sub_1BAE7D20C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE328)
  {
    sub_1BAE7D284();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF3F0, (uint64_t (*)(uint64_t))sub_1BAE7D284, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE328);
  }
}

void sub_1BAE7D284()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF3F8)
  {
    sub_1BAE7D104();
    sub_1BA4A2870(&qword_1ED3D1640, (uint64_t (*)(uint64_t))sub_1BAE7D104, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF3F8);
  }
}

unint64_t sub_1BAE7D2FC()
{
  unint64_t result;

  result = qword_1EF2B27F8;
  if (!qword_1EF2B27F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A510C, &_s7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B27F8);
  }
  return result;
}

unint64_t sub_1BAE7D340()
{
  unint64_t result;

  result = qword_1EF2B2800;
  if (!qword_1EF2B2800)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Command, &type metadata for FormatSportsEventBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2B2800);
  }
  return result;
}

unint64_t sub_1BAE7D384()
{
  unint64_t result;

  result = qword_1ED3A6A00;
  if (!qword_1ED3A6A00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Command, &type metadata for FormatWeatherBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A00);
  }
  return result;
}

void sub_1BAE7D3C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DC8)
  {
    sub_1BAE7D440();
    sub_1BA4A2870(&qword_1ED3D1450, (uint64_t (*)(uint64_t))sub_1BAE7D440, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DC8);
  }
}

uint64_t sub_1BAE7D440()
{
  uint64_t result;

  result = qword_1ED3D1458;
  if (!qword_1ED3D1458)
  {
    sub_1BAE7D4C0();
    sub_1BA509A38();
    sub_1BAE7D504();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7D4C0()
{
  unint64_t result;

  result = qword_1ED3D1970;
  if (!qword_1ED3D1970)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEC40, &_s10CodingKeysON_197);
    atomic_store(result, (unint64_t *)&qword_1ED3D1970);
  }
  return result;
}

unint64_t sub_1BAE7D504()
{
  unint64_t result;

  result = qword_1ED3D1968;
  if (!qword_1ED3D1968)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEBC8, &_s10CodingKeysON_197);
    atomic_store(result, (unint64_t *)&qword_1ED3D1968);
  }
  return result;
}

void sub_1BAE7D548(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1F8)
  {
    sub_1BAE7D5C0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF198, (uint64_t (*)(uint64_t))sub_1BAE7D5C0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1F8);
  }
}

void sub_1BAE7D5C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF1A0)
  {
    sub_1BAE7D440();
    sub_1BA4A2870(&qword_1ED3D1450, (uint64_t (*)(uint64_t))sub_1BAE7D440, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF1A0);
  }
}

unint64_t sub_1BAE7D638()
{
  unint64_t result;

  result = qword_1ED3D0AA0;
  if (!qword_1ED3D0AA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityTrait, &type metadata for FormatAccessibilityTrait);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AA0);
  }
  return result;
}

unint64_t sub_1BAE7D67C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B3478;
  if (!qword_1ED3B3478)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B3480, (uint64_t (*)(void))sub_1BAE7D638, (uint64_t)&type metadata for FormatAccessibilityTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B3478);
  }
  return result;
}

unint64_t sub_1BAE7D6E4()
{
  unint64_t result;

  result = qword_1ED3A5C78;
  if (!qword_1ED3A5C78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEBA0, &_s10CodingTypeON_142);
    atomic_store(result, (unint64_t *)&qword_1ED3A5C78);
  }
  return result;
}

unint64_t sub_1BAE7D728()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39F7F8;
  if (!qword_1ED39F7F8)
  {
    sub_1BA4CDF6C(255, &qword_1ED39F800, (uint64_t (*)(void))sub_1BA98FDF8, (uint64_t)&type metadata for FormatPatternDirection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39F7F8);
  }
  return result;
}

unint64_t sub_1BAE7D790()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39C9C0;
  if (!qword_1ED39C9C0)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C9C8, (uint64_t (*)(void))sub_1BAA4B038, (uint64_t)&type metadata for FormatPatternAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39C9C0);
  }
  return result;
}

void sub_1BAE7D7F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF90)
  {
    sub_1BAE7D870();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF90);
  }
}

void sub_1BAE7D870()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AECD8)
  {
    sub_1BAE7D8E8();
    sub_1BA4A2870(&qword_1ED3D10D0, (uint64_t (*)(uint64_t))sub_1BAE7D8E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AECD8);
  }
}

uint64_t sub_1BAE7D8E8()
{
  uint64_t result;

  result = qword_1ED3D10D8;
  if (!qword_1ED3D10D8)
  {
    sub_1BAE7D968();
    sub_1BA5775EC();
    sub_1BAE7D9AC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7D968()
{
  unint64_t result;

  result = qword_1ED3D0A60;
  if (!qword_1ED3D0A60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEB68, &_s10CodingKeysON_196);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A60);
  }
  return result;
}

unint64_t sub_1BAE7D9AC()
{
  unint64_t result;

  result = qword_1ED3D0A58;
  if (!qword_1ED3D0A58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEAF0, &_s10CodingKeysON_196);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A58);
  }
  return result;
}

void sub_1BAE7D9F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2808)
  {
    sub_1BAE7DA68();
    sub_1BA4A2870(&qword_1EF2B2830, (uint64_t (*)(uint64_t))sub_1BAE7DA68, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2808);
  }
}

uint64_t sub_1BAE7DA68()
{
  uint64_t result;

  result = qword_1EF2B2810;
  if (!qword_1EF2B2810)
  {
    sub_1BAE7DAE8();
    sub_1BAE7DB2C();
    sub_1BAE7DB70();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7DAE8()
{
  unint64_t result;

  result = qword_1EF2B2818;
  if (!qword_1EF2B2818)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CEA40, &_s10CodingKeysON_195);
    atomic_store(result, (unint64_t *)&qword_1EF2B2818);
  }
  return result;
}

unint64_t sub_1BAE7DB2C()
{
  unint64_t result;

  result = qword_1EF2B2820;
  if (!qword_1EF2B2820)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE9F0, &_s10CodingKeysON_195);
    atomic_store(result, (unint64_t *)&qword_1EF2B2820);
  }
  return result;
}

unint64_t sub_1BAE7DB70()
{
  unint64_t result;

  result = qword_1EF2B2828;
  if (!qword_1EF2B2828)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE9C8, &_s10CodingKeysON_195);
    atomic_store(result, (unint64_t *)&qword_1EF2B2828);
  }
  return result;
}

void sub_1BAE7DBB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2838)
  {
    sub_1BAE7DC2C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2848, (uint64_t (*)(uint64_t))sub_1BAE7DC2C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2838);
  }
}

void sub_1BAE7DC2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2840)
  {
    sub_1BAE7DA68();
    sub_1BA4A2870(&qword_1EF2B2830, (uint64_t (*)(uint64_t))sub_1BAE7DA68, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2840);
  }
}

uint64_t sub_1BAE7DCA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  _QWORD *v45;
  __int128 v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  void *v51;
  unint64_t v52;
  __int128 v53;
  char v54;
  _BYTE v55[24];
  uint64_t v56;

  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v49 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)&v50 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v40 - v3;
  sub_1BAEF7228();
  v6 = v5;
  v7 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7E780();
  sub_1BA4A2870(&qword_1ED3D0C00, (uint64_t (*)(uint64_t))sub_1BAE7E780, (uint64_t)&unk_1BB8FFC6C);
  v11 = v51;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  v47 = v4;
  v48 = v7;
  v13 = v50;
  v51 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
    v16 = v51;
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v10 = *((_QWORD *)v19 - 2);
      v23 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      sub_1BAE7E800();
      sub_1BAE7E844();
      sub_1BAE7E888();
      swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71220((uint64_t)&unk_1E7250F00);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v26 = v10;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v10, v23, 1);
      (*(void (**)(char *, void *))(v48 + 8))(v9, v16);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v20 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF7228);
  v22 = v21;
  v53 = xmmword_1BB8A1A10;
  v54 = 0;
  sub_1BAEF72A0();
  sub_1BB8740D4();
  v27 = v9;
  v28 = *(_QWORD *)v55;
  v46 = *(_OWORD *)&v55[8];
  *(_OWORD *)v55 = xmmword_1BB8D2D60;
  v55[16] = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v45 = a1;
  v30 = v53;
  *(_OWORD *)v55 = xmmword_1BB8D2D70;
  v55[16] = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v31 = v53;
  v44 = xmmword_1BB8D2D90;
  *(_OWORD *)v55 = xmmword_1BB8D2D90;
  v55[16] = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v41 = v28;
    v53 = v44;
    v54 = 0;
    sub_1BAEB7D04();
    v32 = v47;
    sub_1BB8740D4();
    v43 = v30;
    *(_QWORD *)&v44 = v31;
    v33 = v27;
    v42 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v13);
    v28 = v41;
  }
  else
  {
    v43 = v30;
    *(_QWORD *)&v44 = v31;
    v33 = v27;
    v42 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatCustomNodeStyle();
  *(_OWORD *)v55 = xmmword_1BB8D2D80;
  v55[16] = 0;
  sub_1BA4A2870(&qword_1ED3C9768, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle, (uint64_t)&protocol conformance descriptor for FormatCustomNodeStyle);
  sub_1BB874068();
  v34 = v53;
  type metadata accessor for FormatAnimationNodeStyle();
  *(_OWORD *)v55 = xmmword_1BB8D2DA0;
  v55[16] = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v35 = v34;
  v36 = v53;
  v50 = xmmword_1BB8D2DB0;
  *(_OWORD *)v55 = xmmword_1BB8D2DB0;
  v55[16] = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v53 = v50;
    v54 = 0;
    sub_1BB8740D4();
    v49 = v56;
  }
  else
  {
    v49 = 0;
  }
  v50 = xmmword_1BB8D2DD0;
  *(_OWORD *)v55 = xmmword_1BB8D2DD0;
  v55[16] = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v53 = v50;
    v54 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v37 = v56;
  }
  else
  {
    v37 = 0x8000000000000000;
  }
  v50 = xmmword_1BB8D2DE0;
  *(_OWORD *)v55 = xmmword_1BB8D2DE0;
  v55[16] = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v53 = v50;
    v54 = 0;
    sub_1BB8740D4();
    v38 = v33;
    v39 = v56;
  }
  else
  {
    v38 = v33;
    v39 = 1;
  }
  (*(void (**)(char *, void *))(v48 + 8))(v38, v51);
  *(_QWORD *)v55 = v28;
  *(_OWORD *)&v55[8] = v46;
  v52 = v37;
  *(_QWORD *)&v53 = v43;
  v56 = v44;
  type metadata accessor for FormatCustomNode();
  swift_allocObject();
  v10 = FormatCustomNode.init(identifier:name:size:resize:adjustments:style:animation:zIndex:visibility:isUserInteractionEnabled:)(v20, v22, (uint64_t *)v55, (uint64_t *)&v53, &v56, v42, v35, v36, v49, (uint64_t *)&v52, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return v10;
}

void sub_1BAE7E690(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCA8)
  {
    sub_1BAE7E708();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCA8);
  }
}

void sub_1BAE7E708()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE700)
  {
    sub_1BAE7E780();
    sub_1BA4A2870(&qword_1ED3D0C00, (uint64_t (*)(uint64_t))sub_1BAE7E780, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE700);
  }
}

uint64_t sub_1BAE7E780()
{
  uint64_t result;

  result = qword_1ED3D0C08;
  if (!qword_1ED3D0C08)
  {
    sub_1BAE7E800();
    sub_1BAE7E844();
    sub_1BAE7E888();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7E800()
{
  unint64_t result;

  result = qword_1ED3D04E8;
  if (!qword_1ED3D04E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE990, &_s10CodingKeysON_194);
    atomic_store(result, (unint64_t *)&qword_1ED3D04E8);
  }
  return result;
}

unint64_t sub_1BAE7E844()
{
  unint64_t result;

  result = qword_1ED3D04E0;
  if (!qword_1ED3D04E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE940, &_s10CodingKeysON_194);
    atomic_store(result, (unint64_t *)&qword_1ED3D04E0);
  }
  return result;
}

unint64_t sub_1BAE7E888()
{
  unint64_t result;

  result = qword_1ED3D04C8;
  if (!qword_1ED3D04C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE918, &_s10CodingKeysON_194);
    atomic_store(result, (unint64_t *)&qword_1ED3D04C8);
  }
  return result;
}

void sub_1BAE7E8CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2850)
  {
    sub_1BAE7E944();
    sub_1BA4A2870(&qword_1EF2B2878, (uint64_t (*)(uint64_t))sub_1BAE7E944, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2850);
  }
}

uint64_t sub_1BAE7E944()
{
  uint64_t result;

  result = qword_1EF2B2858;
  if (!qword_1EF2B2858)
  {
    sub_1BAE7E9C4();
    sub_1BAE7EA08();
    sub_1BAE7EA4C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7E9C4()
{
  unint64_t result;

  result = qword_1EF2B2860;
  if (!qword_1EF2B2860)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE8B8, &_s10CodingKeysON_193);
    atomic_store(result, (unint64_t *)&qword_1EF2B2860);
  }
  return result;
}

unint64_t sub_1BAE7EA08()
{
  unint64_t result;

  result = qword_1EF2B2868;
  if (!qword_1EF2B2868)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE868, &_s10CodingKeysON_193);
    atomic_store(result, (unint64_t *)&qword_1EF2B2868);
  }
  return result;
}

unint64_t sub_1BAE7EA4C()
{
  unint64_t result;

  result = qword_1EF2B2870;
  if (!qword_1EF2B2870)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE840, &_s10CodingKeysON_193);
    atomic_store(result, (unint64_t *)&qword_1EF2B2870);
  }
  return result;
}

void sub_1BAE7EA90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2880)
  {
    sub_1BAE7EB08();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2890, (uint64_t (*)(uint64_t))sub_1BAE7EB08, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2880);
  }
}

void sub_1BAE7EB08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2888)
  {
    sub_1BAE7E944();
    sub_1BA4A2870(&qword_1EF2B2878, (uint64_t (*)(uint64_t))sub_1BAE7E944, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2888);
  }
}

unint64_t sub_1BAE7EB80()
{
  unint64_t result;

  result = qword_1EF2B2898;
  if (!qword_1EF2B2898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AD4C4, &_s5ColorO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2898);
  }
  return result;
}

unint64_t sub_1BAE7EBC4()
{
  unint64_t result;

  result = qword_1EF2B28A0;
  if (!qword_1EF2B28A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE7F0, &_s10CodingTypeON_136);
    atomic_store(result, (unint64_t *)&qword_1EF2B28A0);
  }
  return result;
}

void sub_1BAE7EC08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE578)
  {
    sub_1BAE7EC80();
    sub_1BA4A2870(&qword_1ED3AD828, (uint64_t (*)(uint64_t))sub_1BAE7EC80, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE578);
  }
}

uint64_t sub_1BAE7EC80()
{
  uint64_t result;

  result = qword_1ED3AD830;
  if (!qword_1ED3AD830)
  {
    sub_1BAE7ED00();
    sub_1BA59C79C();
    sub_1BAE7ED44();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7ED00()
{
  unint64_t result;

  result = qword_1ED3AD580;
  if (!qword_1ED3AD580)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE7B8, &_s10CodingKeysON_192);
    atomic_store(result, (unint64_t *)&qword_1ED3AD580);
  }
  return result;
}

unint64_t sub_1BAE7ED44()
{
  unint64_t result;

  result = qword_1ED3AD578;
  if (!qword_1ED3AD578)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE740, &_s10CodingKeysON_192);
    atomic_store(result, (unint64_t *)&qword_1ED3AD578);
  }
  return result;
}

unint64_t sub_1BAE7ED88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4688;
  if (!qword_1ED3C4688)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4690, (void (*)(void))sub_1BA82CA18, (void (*)(void))sub_1BA82CA5C);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4688);
  }
  return result;
}

void sub_1BAE7EDF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD00)
  {
    sub_1BAE7EE68();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE7A8, (uint64_t (*)(uint64_t))sub_1BAE7EE68, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD00);
  }
}

void sub_1BAE7EE68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3ACAB0)
  {
    sub_1BAE7EC80();
    sub_1BA4A2870(&qword_1ED3AD828, (uint64_t (*)(uint64_t))sub_1BAE7EC80, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3ACAB0);
  }
}

uint64_t sub_1BAE7EEE0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAE7EEEC()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3ED58);
}

uint64_t sub_1BAE7EEF8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

unint64_t sub_1BAE7EF1C()
{
  unint64_t result;

  result = qword_1EF2B28A8;
  if (!qword_1EF2B28A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE718, &_s10CodingTypeON_135);
    atomic_store(result, (unint64_t *)&qword_1EF2B28A8);
  }
  return result;
}

uint64_t sub_1BAE7EF60()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAE7EF98()
{
  uint64_t v0;

  sub_1BA6EF090(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64), *(_BYTE *)(v0 + 65));
  return swift_deallocObject();
}

uint64_t sub_1BAE7EFCC(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  char v27;

  v2 = v1;
  sub_1BAEF6EBC();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7F418();
  sub_1BA4A2870(&qword_1EF2B28E0, (uint64_t (*)(uint64_t))sub_1BAE7F418, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = sub_1BB8740EC();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (_BYTE *)(v11 + 48);
      while (*v13 != 1)
      {
        v13 += 24;
        if (!--v12)
          goto LABEL_7;
      }
      v17 = *((_QWORD *)v13 - 1);
      v24 = *((_QWORD *)v13 - 2);
      swift_bridgeObjectRetain_n();
      v18 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v18);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_191;
      *(&v24 - 3) = sub_1BAE7F498();
      *(&v24 - 2) = sub_1BAE7F4DC();
      *(&v24 - 1) = sub_1BAE7F520();
      swift_getKeyPath();
      swift_retain();
      v19 = sub_1BAE71220((uint64_t)&unk_1E726A3E0);
      swift_release_n();
      sub_1BA98D1F0();
      v2 = (void *)swift_allocError();
      v20 = v24;
      *(_QWORD *)v21 = v24;
      *(_QWORD *)(v21 + 8) = v17;
      *(_QWORD *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v17, 1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v25 = 0uLL;
  v26 = 0;
  v14 = sub_1BB874098();
  v16 = v15;
  v25 = xmmword_1BB8A1A10;
  v26 = 0;
  sub_1BAB6CD48();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v23 = v27;
  type metadata accessor for FormatAccessibilityLayoutValue();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v14;
  *(_QWORD *)(v5 + 24) = v16;
  *(_BYTE *)(v5 + 32) = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

void sub_1BAE7F328(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B28B0)
  {
    sub_1BAE7F3A0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B28E8, (uint64_t (*)(uint64_t))sub_1BAE7F3A0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B28B0);
  }
}

void sub_1BAE7F3A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B28B8)
  {
    sub_1BAE7F418();
    sub_1BA4A2870(&qword_1EF2B28E0, (uint64_t (*)(uint64_t))sub_1BAE7F418, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B28B8);
  }
}

uint64_t sub_1BAE7F418()
{
  uint64_t result;

  result = qword_1EF2B28C0;
  if (!qword_1EF2B28C0)
  {
    sub_1BAE7F498();
    sub_1BAE7F4DC();
    sub_1BAE7F520();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE7F498()
{
  unint64_t result;

  result = qword_1EF2B28C8;
  if (!qword_1EF2B28C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE6B8, &_s10CodingKeysON_191);
    atomic_store(result, (unint64_t *)&qword_1EF2B28C8);
  }
  return result;
}

unint64_t sub_1BAE7F4DC()
{
  unint64_t result;

  result = qword_1EF2B28D0;
  if (!qword_1EF2B28D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE668, &_s10CodingKeysON_191);
    atomic_store(result, (unint64_t *)&qword_1EF2B28D0);
  }
  return result;
}

unint64_t sub_1BAE7F520()
{
  unint64_t result;

  result = qword_1EF2B28D8;
  if (!qword_1EF2B28D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE640, &_s10CodingKeysON_191);
    atomic_store(result, (unint64_t *)&qword_1EF2B28D8);
  }
  return result;
}

unint64_t sub_1BAE7F564()
{
  unint64_t result;

  result = qword_1EF2B28F0;
  if (!qword_1EF2B28F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE5F0, &_s10CodingTypeON_132);
    atomic_store(result, (unint64_t *)&qword_1EF2B28F0);
  }
  return result;
}

unint64_t sub_1BAE7F5A8()
{
  unint64_t result;

  result = qword_1EF2B28F8;
  if (!qword_1EF2B28F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.ActivityItemsConfiguration, &type metadata for FormatIssueBinding.ActivityItemsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF2B28F8);
  }
  return result;
}

unint64_t sub_1BAE7F5EC()
{
  unint64_t result;

  result = qword_1ED3A0188;
  if (!qword_1ED3A0188)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.ActivityItemsConfiguration, &type metadata for FormatHeadlineBinding.ActivityItemsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED3A0188);
  }
  return result;
}

unint64_t sub_1BAE7F630()
{
  unint64_t result;

  result = qword_1EF2B2900;
  if (!qword_1EF2B2900)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE5C8, &_s10CodingTypeON_131);
    atomic_store(result, (unint64_t *)&qword_1EF2B2900);
  }
  return result;
}

unint64_t sub_1BAE7F674()
{
  unint64_t result;

  result = qword_1ED3A0490;
  if (!qword_1ED3A0490)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatActivityItemsBinding, &type metadata for FormatActivityItemsBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A0490);
  }
  return result;
}

uint64_t _s10CodingKeysOMa_205(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_205);
}

uint64_t sub_1BAE7F6C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE7F80C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79747265706F7270 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6164696C61766E69 && a2 == 0xEC0000006E6F6974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAE7F9D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001BB959E80 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1BAE7FDC8(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  __int128 v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;

  v2 = v1;
  sub_1BAEF6B50();
  v48 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE80420();
  sub_1BA4A2870(&qword_1EF2B2940, (uint64_t (*)(uint64_t))sub_1BAE80420, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v1)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v5;
  }
  v47 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_1BB872874();
  v9 = Dictionary<>.errorOnUnknownKeys.getter(v8);
  swift_bridgeObjectRelease();
  v5 = v48;
  v10 = v7;
  if ((v9 & 1) != 0)
  {
    v11 = sub_1BB8740EC();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = (_BYTE *)(v11 + 48);
      while (*v13 != 1)
      {
        v13 += 24;
        if (!--v12)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v13 - 1);
      v46 = *((_QWORD *)v13 - 2);
      swift_bridgeObjectRetain_n();
      v19 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v19);
      *(&v33 - 4) = (uint64_t)&_s10CodingKeysON_190;
      *(&v33 - 3) = sub_1BAE804A0();
      *(&v33 - 2) = sub_1BAE804E4();
      *(&v33 - 1) = sub_1BAE80528();
      swift_getKeyPath();
      swift_retain();
      v20 = sub_1BAE71220((uint64_t)&unk_1E726A5E8);
      swift_release_n();
      sub_1BA98D1F0();
      v2 = (void *)swift_allocError();
      v21 = v46;
      *(_QWORD *)v22 = v46;
      *(_QWORD *)(v22 + 8) = v18;
      *(_QWORD *)(v22 + 16) = v20;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v18, 1);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA501570();
  v49 = 0uLL;
  v50 = 0;
  sub_1BB8740D4();
  v44 = a1;
  v14 = v53;
  v15 = v55;
  v16 = v56;
  v17 = v57;
  v45 = v58;
  v46 = v54;
  v43 = v59;
  v49 = xmmword_1BB8A1A10;
  v50 = 0;
  sub_1BA7967E4();
  sub_1BB874068();
  v39 = v14;
  v40 = v15;
  v41 = v16;
  v42 = v17;
  v24 = v53;
  v23 = v54;
  LODWORD(v14) = v55;
  v49 = xmmword_1BB8D2D60;
  v50 = 0;
  sub_1BB874068();
  v36 = v24;
  v37 = v23;
  v38 = v14;
  v33 = v53;
  v34 = v54;
  v35 = v55;
  v51 = xmmword_1BB8D2D70;
  v52 = 0;
  sub_1BA5015B4();
  sub_1BB874068();
  v25 = v46;
  v27 = v41;
  v26 = v42;
  v28 = v40;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v5);
  sub_1BA6A09F0((uint64_t)&v53, (uint64_t)&v49, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  type metadata accessor for FormatAnimationNodeBasicAnimation();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v39;
  *(_QWORD *)(v5 + 24) = v25;
  *(_QWORD *)(v5 + 32) = v28;
  *(_QWORD *)(v5 + 40) = v27;
  v30 = v45;
  *(_QWORD *)(v5 + 48) = v26;
  *(_QWORD *)(v5 + 56) = v30;
  *(_BYTE *)(v5 + 64) = v43;
  v31 = v37;
  *(_QWORD *)(v5 + 72) = v36;
  *(_QWORD *)(v5 + 80) = v31;
  *(_BYTE *)(v5 + 88) = v38;
  v32 = v34;
  *(_QWORD *)(v5 + 96) = v33;
  *(_QWORD *)(v5 + 104) = v32;
  *(_BYTE *)(v5 + 112) = v35;
  sub_1BA6A09F0((uint64_t)&v49, v5 + 120, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return v5;
}

void sub_1BAE80330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2910)
  {
    sub_1BAE803A8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2948, (uint64_t (*)(uint64_t))sub_1BAE803A8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2910);
  }
}

void sub_1BAE803A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2918)
  {
    sub_1BAE80420();
    sub_1BA4A2870(&qword_1EF2B2940, (uint64_t (*)(uint64_t))sub_1BAE80420, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2918);
  }
}

uint64_t sub_1BAE80420()
{
  uint64_t result;

  result = qword_1EF2B2920;
  if (!qword_1EF2B2920)
  {
    sub_1BAE804A0();
    sub_1BAE804E4();
    sub_1BAE80528();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE804A0()
{
  unint64_t result;

  result = qword_1EF2B2928;
  if (!qword_1EF2B2928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE468, &_s10CodingKeysON_190);
    atomic_store(result, (unint64_t *)&qword_1EF2B2928);
  }
  return result;
}

unint64_t sub_1BAE804E4()
{
  unint64_t result;

  result = qword_1EF2B2930;
  if (!qword_1EF2B2930)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE418, &_s10CodingKeysON_190);
    atomic_store(result, (unint64_t *)&qword_1EF2B2930);
  }
  return result;
}

unint64_t sub_1BAE80528()
{
  unint64_t result;

  result = qword_1EF2B2938;
  if (!qword_1EF2B2938)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE3F0, &_s10CodingKeysON_190);
    atomic_store(result, (unint64_t *)&qword_1EF2B2938);
  }
  return result;
}

uint64_t sub_1BAE8056C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy49_8(a2, a1);
  return a2;
}

unint64_t sub_1BAE805A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2958;
  if (!qword_1EF2B2958)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2950, (uint64_t (*)(void))sub_1BAB1DDC8, (uint64_t)&type metadata for FormatSizeEquation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeKeyPathAnimation);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeKeyPathAnimation<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2958);
  }
  return result;
}

uint64_t sub_1BAE80610(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874615079656BLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974616C756D7563 && a2 == 0xEA00000000006576 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576697469646461 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6954616964656DLL && a2 == 0xEB00000000676E69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE80840(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F6974616D696E61 && a2 == 0xEA0000000000736ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6954616964656DLL && a2 == 0xEB00000000676E69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BAE809A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE310)
  {
    sub_1BAE80A20();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF3C0, (uint64_t (*)(uint64_t))sub_1BAE80A20, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE310);
  }
}

void sub_1BAE80A20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF3C8)
  {
    sub_1BAE80A98();
    sub_1BA4A2870(&qword_1ED3ADA58, (uint64_t (*)(uint64_t))sub_1BAE80A98, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF3C8);
  }
}

uint64_t sub_1BAE80A98()
{
  uint64_t result;

  result = qword_1ED3ADA60;
  if (!qword_1ED3ADA60)
  {
    sub_1BAE80B18();
    sub_1BA5015F8();
    sub_1BAE80B5C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE80B18()
{
  unint64_t result;

  result = qword_1ED3AD298;
  if (!qword_1ED3AD298)
  {
    result = MEMORY[0x1BCCE5B24]("Aٟ+", &_s10CodingKeysON_189);
    atomic_store(result, (unint64_t *)&qword_1ED3AD298);
  }
  return result;
}

unint64_t sub_1BAE80B5C()
{
  unint64_t result;

  result = qword_1ED3AD290;
  if (!qword_1ED3AD290)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE268, &_s10CodingKeysON_189);
    atomic_store(result, (unint64_t *)&qword_1ED3AD290);
  }
  return result;
}

uint64_t sub_1BAE80BA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874615079656BLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974616C756D7563 && a2 == 0xEA00000000006576 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576697469646461 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1936941421 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73656E6666697473 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E69706D6164 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x566C616974696E69 && a2 == 0xEF797469636F6C65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6D6954616964656DLL && a2 == 0xEB00000000676E69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

void sub_1BAE80F80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFB0)
  {
    sub_1BAE80FF8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AED10, (uint64_t (*)(uint64_t))sub_1BAE80FF8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFB0);
  }
}

void sub_1BAE80FF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AED18)
  {
    sub_1BAE81070();
    sub_1BA4A2870(&qword_1ED3AD918, (uint64_t (*)(uint64_t))sub_1BAE81070, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AED18);
  }
}

uint64_t sub_1BAE81070()
{
  uint64_t result;

  result = qword_1ED3AD920;
  if (!qword_1ED3AD920)
  {
    sub_1BAE810F0();
    sub_1BA533214();
    sub_1BAE81134();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE810F0()
{
  unint64_t result;

  result = qword_1ED3AD7A0;
  if (!qword_1ED3AD7A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE230, &_s10CodingKeysON_188);
    atomic_store(result, (unint64_t *)&qword_1ED3AD7A0);
  }
  return result;
}

unint64_t sub_1BAE81134()
{
  unint64_t result;

  result = qword_1ED3AD798;
  if (!qword_1ED3AD798)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE1B8, &_s10CodingKeysON_188);
    atomic_store(result, (unint64_t *)&qword_1ED3AD798);
  }
  return result;
}

void sub_1BAE81178(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BA4AD288(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v5 = sub_1BB873A2C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BAE811D8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B2968;
  if (!qword_1EF2B2968)
  {
    sub_1BAE81178(255, &qword_1EF2B2960, &qword_1ED3A0808, (uint64_t)&type metadata for FormatAnimationNodeAnimation);
    v2 = v1;
    v3 = sub_1BAE81250();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B2968);
  }
  return result;
}

unint64_t sub_1BAE81250()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A0810;
  if (!qword_1ED3A0810)
  {
    sub_1BA4AD288(255, &qword_1ED3A0808, (uint64_t)&type metadata for FormatAnimationNodeAnimation, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAE812C8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A0810);
  }
  return result;
}

unint64_t sub_1BAE812C8()
{
  unint64_t result;

  result = qword_1ED39F0C0;
  if (!qword_1ED39F0C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeAnimation, &type metadata for FormatAnimationNodeAnimation);
    atomic_store(result, (unint64_t *)&qword_1ED39F0C0);
  }
  return result;
}

void sub_1BAE8130C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5F8)
  {
    sub_1BAE81384();
    sub_1BA4A2870(&qword_1ED3AD928, (uint64_t (*)(uint64_t))sub_1BAE81384, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5F8);
  }
}

uint64_t sub_1BAE81384()
{
  uint64_t result;

  result = qword_1ED3AD930;
  if (!qword_1ED3AD930)
  {
    sub_1BAE81404();
    sub_1BA4F25E0();
    sub_1BAE81448();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE81404()
{
  unint64_t result;

  result = qword_1ED3AD7B0;
  if (!qword_1ED3AD7B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE180, &_s10CodingKeysON_187);
    atomic_store(result, (unint64_t *)&qword_1ED3AD7B0);
  }
  return result;
}

unint64_t sub_1BAE81448()
{
  unint64_t result;

  result = qword_1ED3AD7A8;
  if (!qword_1ED3AD7A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE108, &_s10CodingKeysON_187);
    atomic_store(result, (unint64_t *)&qword_1ED3AD7A8);
  }
  return result;
}

void sub_1BAE8148C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFB8)
  {
    sub_1BAE81504();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AED20, (uint64_t (*)(uint64_t))sub_1BAE81504, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFB8);
  }
}

void sub_1BAE81504()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AED28)
  {
    sub_1BAE81384();
    sub_1BA4A2870(&qword_1ED3AD928, (uint64_t (*)(uint64_t))sub_1BAE81384, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AED28);
  }
}

void sub_1BAE8157C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC040)
  {
    sub_1BAE815F4();
    sub_1BA4A2870(&qword_1ED3ABE88, (uint64_t (*)(uint64_t))sub_1BAE815F4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC040);
  }
}

uint64_t sub_1BAE815F4()
{
  uint64_t result;

  result = qword_1ED3ABE90;
  if (!qword_1ED3ABE90)
  {
    sub_1BAE81674();
    sub_1BAE816B8();
    sub_1BAE816FC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE81674()
{
  unint64_t result;

  result = qword_1ED3ABDF8;
  if (!qword_1ED3ABDF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE0D0, &_s10CodingKeysON_186);
    atomic_store(result, (unint64_t *)&qword_1ED3ABDF8);
  }
  return result;
}

unint64_t sub_1BAE816B8()
{
  unint64_t result;

  result = qword_1ED3ABDF0;
  if (!qword_1ED3ABDF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE080, &_s10CodingKeysON_186);
    atomic_store(result, (unint64_t *)&qword_1ED3ABDF0);
  }
  return result;
}

unint64_t sub_1BAE816FC()
{
  unint64_t result;

  result = qword_1ED3ABDE8;
  if (!qword_1ED3ABDE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CE058, &_s10CodingKeysON_186);
    atomic_store(result, (unint64_t *)&qword_1ED3ABDE8);
  }
  return result;
}

void sub_1BAE81740(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADC90)
  {
    sub_1BAE817B8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE6C8, (uint64_t (*)(uint64_t))sub_1BAE817B8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADC90);
  }
}

void sub_1BAE817B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE6D0)
  {
    sub_1BAE815F4();
    sub_1BA4A2870(&qword_1ED3ABE88, (uint64_t (*)(uint64_t))sub_1BAE815F4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE6D0);
  }
}

uint64_t _s10CodingKeysOMa_198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_198);
}

void sub_1BAE8183C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E38)
  {
    sub_1BAE818B4();
    sub_1BA4A2870(&qword_1ED3D1530, (uint64_t (*)(uint64_t))sub_1BAE818B4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E38);
  }
}

uint64_t sub_1BAE818B4()
{
  uint64_t result;

  result = qword_1ED3D1538;
  if (!qword_1ED3D1538)
  {
    sub_1BAE81934();
    sub_1BA56D090();
    sub_1BAE81978();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE81934()
{
  unint64_t result;

  result = qword_1ED3D0290;
  if (!qword_1ED3D0290)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDF70, &_s10CodingKeysON_185);
    atomic_store(result, (unint64_t *)&qword_1ED3D0290);
  }
  return result;
}

unint64_t sub_1BAE81978()
{
  unint64_t result;

  result = qword_1ED3D0288;
  if (!qword_1ED3D0288)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDEF8, &_s10CodingKeysON_185);
    atomic_store(result, (unint64_t *)&qword_1ED3D0288);
  }
  return result;
}

void sub_1BAE819BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE270)
  {
    sub_1BAE81A34();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF280, (uint64_t (*)(uint64_t))sub_1BAE81A34, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE270);
  }
}

void sub_1BAE81A34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF288)
  {
    sub_1BAE818B4();
    sub_1BA4A2870(&qword_1ED3D1530, (uint64_t (*)(uint64_t))sub_1BAE818B4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF288);
  }
}

uint64_t sub_1BAE81AAC()
{
  return objectdestroy_189Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAE81AB8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BAE81AF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B79C8;
  if (!qword_1ED3B79C8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B79D0, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B79C8);
  }
  return result;
}

uint64_t sub_1BAE81B60()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAE81B98()
{
  uint64_t v0;

  sub_1BA6EF82C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_1BAE81BC8(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, unint64_t, unint64_t))
{
  switch(a6 >> 5)
  {
    case 1:
    case 4:
      result = a7();
      break;
    case 3:
      result = a8(result, a2, a3, a3 >> 8);
      break;
    case 5:
      result = sub_1BA967F18(result, a2, a3, a4, a5, a6 & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))a7);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BAE81C18()
{
  unint64_t result;

  result = qword_1EF2B2970;
  if (!qword_1EF2B2970)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDEA8, &_s10CodingTypeON_126);
    atomic_store(result, (unint64_t *)&qword_1EF2B2970);
  }
  return result;
}

unint64_t sub_1BAE81C5C()
{
  unint64_t result;

  result = qword_1EF2B2978;
  if (!qword_1EF2B2978)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDE80, &_s10CodingTypeON_125);
    atomic_store(result, (unint64_t *)&qword_1EF2B2978);
  }
  return result;
}

unint64_t sub_1BAE81CA0()
{
  unint64_t result;

  result = qword_1ED39C430;
  if (!qword_1ED39C430)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDurationFormat, &type metadata for FormatDurationFormat);
    atomic_store(result, (unint64_t *)&qword_1ED39C430);
  }
  return result;
}

uint64_t sub_1BAE81CE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F50726F68636E61 && a2 == 0xEB00000000746E69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xEA0000000000736ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65646F4D6E7572 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1BAE81FE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F50726F68636E61 && a2 == 0xEB00000000746E69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xEA0000000000736ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646F4D6E7572 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE82214(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAE822EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BAE82434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDB0)
  {
    sub_1BAE824AC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE900, (uint64_t (*)(uint64_t))sub_1BAE824AC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDB0);
  }
}

void sub_1BAE824AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE908)
  {
    sub_1BAE82524();
    sub_1BA4A2870(&qword_1ED3D0DB0, (uint64_t (*)(uint64_t))sub_1BAE82524, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE908);
  }
}

uint64_t sub_1BAE82524()
{
  uint64_t result;

  result = qword_1ED3D0DB8;
  if (!qword_1ED3D0DB8)
  {
    sub_1BAE825A4();
    sub_1BA50ED24();
    sub_1BAE825E8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE825A4()
{
  unint64_t result;

  result = qword_1ED3D0700;
  if (!qword_1ED3D0700)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDE48, &_s10CodingKeysON_184);
    atomic_store(result, (unint64_t *)&qword_1ED3D0700);
  }
  return result;
}

unint64_t sub_1BAE825E8()
{
  unint64_t result;

  result = qword_1ED3D06F8;
  if (!qword_1ED3D06F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDDD0, &_s10CodingKeysON_184);
    atomic_store(result, (unint64_t *)&qword_1ED3D06F8);
  }
  return result;
}

unint64_t sub_1BAE8262C()
{
  unint64_t result;

  result = qword_1EF2B2980;
  if (!qword_1EF2B2980)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVisualEffect, &type metadata for FormatVisualEffect);
    atomic_store(result, (unint64_t *)&qword_1EF2B2980);
  }
  return result;
}

unint64_t sub_1BAE82670()
{
  unint64_t result;

  result = qword_1EF2B2988;
  if (!qword_1EF2B2988)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaBackground, &type metadata for FormatMicaBackground);
    atomic_store(result, (unint64_t *)&qword_1EF2B2988);
  }
  return result;
}

uint64_t sub_1BAE826B4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  swift_release();
  if (*(_QWORD *)(v0 + 24) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v1 = *(unsigned __int8 *)(v0 + 96);
    if (v1 != 255)
      sub_1BA69C828(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v1 & 1);
    v2 = *(unsigned __int8 *)(v0 + 136);
    if (v2 != 255)
      sub_1BA8964E0(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v2 & 1);
    v3 = *(unsigned __int8 *)(v0 + 160);
    if (v3 != 255)
      sub_1BA69C828(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), v3 & 1);
  }
  return swift_deallocObject();
}

unint64_t sub_1BAE82760()
{
  unint64_t result;

  result = qword_1ED3BE970;
  if (!qword_1ED3BE970)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageBackground, &type metadata for FormatImageBackground);
    atomic_store(result, (unint64_t *)&qword_1ED3BE970);
  }
  return result;
}

uint64_t sub_1BAE827A4()
{
  return objectdestroy_189Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BAE827B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA8962BC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96));
  sub_1BA8962BC(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 168));
  return swift_deallocObject();
}

uint64_t sub_1BAE8281C()
{
  uint64_t v0;

  sub_1BA756FBC(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1BAE82840()
{
  unint64_t result;

  result = qword_1ED3C15D0;
  if (!qword_1ED3C15D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradient, &type metadata for FormatRadialGradient);
    atomic_store(result, (unint64_t *)&qword_1ED3C15D0);
  }
  return result;
}

uint64_t sub_1BAE82884()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAE828B0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_1BAE828F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC048)
  {
    sub_1BAE82968();
    sub_1BA4A2870(&qword_1ED3ABE98, (uint64_t (*)(uint64_t))sub_1BAE82968, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC048);
  }
}

uint64_t sub_1BAE82968()
{
  uint64_t result;

  result = qword_1ED3ABEA0;
  if (!qword_1ED3ABEA0)
  {
    sub_1BAE829E8();
    sub_1BAE82A2C();
    sub_1BAE82A70();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE829E8()
{
  unint64_t result;

  result = qword_1ED3ABE18;
  if (!qword_1ED3ABE18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDD70, &_s10CodingKeysON_183);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE18);
  }
  return result;
}

unint64_t sub_1BAE82A2C()
{
  unint64_t result;

  result = qword_1ED3A58E8;
  if (!qword_1ED3A58E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDD20, &_s10CodingKeysON_183);
    atomic_store(result, (unint64_t *)&qword_1ED3A58E8);
  }
  return result;
}

unint64_t sub_1BAE82A70()
{
  unint64_t result;

  result = qword_1ED3ABE10;
  if (!qword_1ED3ABE10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDCF8, &_s10CodingKeysON_183);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE10);
  }
  return result;
}

unint64_t sub_1BAE82AB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAF30;
  if (!qword_1ED3AAF30)
  {
    sub_1BA4AD288(255, &qword_1ED3AAF20, (uint64_t)&type metadata for FormatBezierPathComponent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAE82B2C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAF30);
  }
  return result;
}

unint64_t sub_1BAE82B2C()
{
  unint64_t result;

  result = qword_1ED3A7698;
  if (!qword_1ED3A7698)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathComponent, &type metadata for FormatBezierPathComponent);
    atomic_store(result, (unint64_t *)&qword_1ED3A7698);
  }
  return result;
}

void sub_1BAE82B70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADC98)
  {
    sub_1BAE82BE8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE6D8, (uint64_t (*)(uint64_t))sub_1BAE82BE8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADC98);
  }
}

void sub_1BAE82BE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE6E0)
  {
    sub_1BAE82968();
    sub_1BA4A2870(&qword_1ED3ABE98, (uint64_t (*)(uint64_t))sub_1BAE82968, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE6E0);
  }
}

void sub_1BAE82C60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2990)
  {
    sub_1BAE82CD8();
    sub_1BA4A2870(&qword_1EF2B29B8, (uint64_t (*)(uint64_t))sub_1BAE82CD8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2990);
  }
}

uint64_t sub_1BAE82CD8()
{
  uint64_t result;

  result = qword_1EF2B2998;
  if (!qword_1EF2B2998)
  {
    sub_1BAE82D58();
    sub_1BAE82D9C();
    sub_1BAE82DE0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE82D58()
{
  unint64_t result;

  result = qword_1EF2B29A0;
  if (!qword_1EF2B29A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDCC0, &_s10CodingKeysON_182);
    atomic_store(result, (unint64_t *)&qword_1EF2B29A0);
  }
  return result;
}

unint64_t sub_1BAE82D9C()
{
  unint64_t result;

  result = qword_1EF2B29A8;
  if (!qword_1EF2B29A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDC70, &_s10CodingKeysON_182);
    atomic_store(result, (unint64_t *)&qword_1EF2B29A8);
  }
  return result;
}

unint64_t sub_1BAE82DE0()
{
  unint64_t result;

  result = qword_1EF2B29B0;
  if (!qword_1EF2B29B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDC48, &_s10CodingKeysON_182);
    atomic_store(result, (unint64_t *)&qword_1EF2B29B0);
  }
  return result;
}

void sub_1BAE82E24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B29C0)
  {
    sub_1BAE82E9C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B29D0, (uint64_t (*)(uint64_t))sub_1BAE82E9C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B29C0);
  }
}

void sub_1BAE82E9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B29C8)
  {
    sub_1BAE82CD8();
    sub_1BA4A2870(&qword_1EF2B29B8, (uint64_t (*)(uint64_t))sub_1BAE82CD8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B29C8);
  }
}

unint64_t sub_1BAE82F14()
{
  unint64_t result;

  result = qword_1ED3A7688;
  if (!qword_1ED3A7688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDC20, &_s10CodingTypeON_123);
    atomic_store(result, (unint64_t *)&qword_1ED3A7688);
  }
  return result;
}

unint64_t sub_1BAE82F58()
{
  unint64_t result;

  result = qword_1EF2B29D8;
  if (!qword_1EF2B29D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathArcComponent, &type metadata for FormatBezierPathArcComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2B29D8);
  }
  return result;
}

unint64_t sub_1BAE82F9C()
{
  unint64_t result;

  result = qword_1EF2B29E0;
  if (!qword_1EF2B29E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathQuadCurveComponent, &type metadata for FormatBezierPathQuadCurveComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2B29E0);
  }
  return result;
}

unint64_t sub_1BAE82FE0()
{
  unint64_t result;

  result = qword_1EF2B29E8;
  if (!qword_1EF2B29E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathCurveComponent, &type metadata for FormatBezierPathCurveComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2B29E8);
  }
  return result;
}

void sub_1BAE83024()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B29F0)
  {
    sub_1BAE8309C();
    sub_1BA4A2870(&qword_1EF2B2A18, (uint64_t (*)(uint64_t))sub_1BAE8309C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B29F0);
  }
}

uint64_t sub_1BAE8309C()
{
  uint64_t result;

  result = qword_1EF2B29F8;
  if (!qword_1EF2B29F8)
  {
    sub_1BAE8311C();
    sub_1BAE83160();
    sub_1BAE831A4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8311C()
{
  unint64_t result;

  result = qword_1EF2B2A00;
  if (!qword_1EF2B2A00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDBE8, &_s10CodingKeysON_181);
    atomic_store(result, (unint64_t *)&qword_1EF2B2A00);
  }
  return result;
}

unint64_t sub_1BAE83160()
{
  unint64_t result;

  result = qword_1EF2B2A08;
  if (!qword_1EF2B2A08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDB98, &_s10CodingKeysON_181);
    atomic_store(result, (unint64_t *)&qword_1EF2B2A08);
  }
  return result;
}

unint64_t sub_1BAE831A4()
{
  unint64_t result;

  result = qword_1EF2B2A10;
  if (!qword_1EF2B2A10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDB70, &_s10CodingKeysON_181);
    atomic_store(result, (unint64_t *)&qword_1EF2B2A10);
  }
  return result;
}

void sub_1BAE831E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2A20)
  {
    sub_1BAE83260();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2A30, (uint64_t (*)(uint64_t))sub_1BAE83260, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2A20);
  }
}

void sub_1BAE83260()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2A28)
  {
    sub_1BAE8309C();
    sub_1BA4A2870(&qword_1EF2B2A18, (uint64_t (*)(uint64_t))sub_1BAE8309C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2A28);
  }
}

void sub_1BAE832D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2A38)
  {
    sub_1BAE83350();
    sub_1BA4A2870(&qword_1EF2B2A60, (uint64_t (*)(uint64_t))sub_1BAE83350, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2A38);
  }
}

uint64_t sub_1BAE83350()
{
  uint64_t result;

  result = qword_1EF2B2A40;
  if (!qword_1EF2B2A40)
  {
    sub_1BAE833D0();
    sub_1BAE83414();
    sub_1BAE83458();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE833D0()
{
  unint64_t result;

  result = qword_1EF2B2A48;
  if (!qword_1EF2B2A48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDB38, &_s10CodingKeysON_180);
    atomic_store(result, (unint64_t *)&qword_1EF2B2A48);
  }
  return result;
}

unint64_t sub_1BAE83414()
{
  unint64_t result;

  result = qword_1EF2B2A50;
  if (!qword_1EF2B2A50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDAE8, &_s10CodingKeysON_180);
    atomic_store(result, (unint64_t *)&qword_1EF2B2A50);
  }
  return result;
}

unint64_t sub_1BAE83458()
{
  unint64_t result;

  result = qword_1EF2B2A58;
  if (!qword_1EF2B2A58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDAC0, &_s10CodingKeysON_180);
    atomic_store(result, (unint64_t *)&qword_1EF2B2A58);
  }
  return result;
}

void sub_1BAE8349C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2A68)
  {
    sub_1BAE83514();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2A78, (uint64_t (*)(uint64_t))sub_1BAE83514, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2A68);
  }
}

void sub_1BAE83514()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2A70)
  {
    sub_1BAE83350();
    sub_1BA4A2870(&qword_1EF2B2A60, (uint64_t (*)(uint64_t))sub_1BAE83350, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2A70);
  }
}

void sub_1BAE8358C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AE8)
  {
    sub_1BAE83604();
    sub_1BA4A2870(&qword_1ED3D0E90, (uint64_t (*)(uint64_t))sub_1BAE83604, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AE8);
  }
}

uint64_t sub_1BAE83604()
{
  uint64_t result;

  result = qword_1ED3D0E98;
  if (!qword_1ED3D0E98)
  {
    sub_1BAE83684();
    sub_1BA60E564();
    sub_1BAE836C8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE83684()
{
  unint64_t result;

  result = qword_1ED3D07F0;
  if (!qword_1ED3D07F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDA88, &_s10CodingKeysON_179);
    atomic_store(result, (unint64_t *)&qword_1ED3D07F0);
  }
  return result;
}

unint64_t sub_1BAE836C8()
{
  unint64_t result;

  result = qword_1ED3D07E8;
  if (!qword_1ED3D07E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CDA10, &_s10CodingKeysON_179);
    atomic_store(result, (unint64_t *)&qword_1ED3D07E8);
  }
  return result;
}

unint64_t sub_1BAE8370C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3BBE78;
  if (!qword_1ED3BBE78)
  {
    sub_1BAEFBAC0(255, &qword_1ED3BBE80, (void (*)(void))sub_1BA833E84, (void (*)(void))sub_1BA833F50);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3BBE78);
  }
  return result;
}

void sub_1BAE83774(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE20)
  {
    sub_1BAE837EC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE9F0, (uint64_t (*)(uint64_t))sub_1BAE837EC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE20);
  }
}

void sub_1BAE837EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE9F8)
  {
    sub_1BAE83604();
    sub_1BA4A2870(&qword_1ED3D0E90, (uint64_t (*)(uint64_t))sub_1BAE83604, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE9F8);
  }
}

void sub_1BAE83864()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CE8)
  {
    sub_1BAE838DC();
    sub_1BA4A2870(&qword_1ED3D1290, (uint64_t (*)(uint64_t))sub_1BAE838DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CE8);
  }
}

uint64_t sub_1BAE838DC()
{
  uint64_t result;

  result = qword_1ED3D1298;
  if (!qword_1ED3D1298)
  {
    sub_1BAE8395C();
    sub_1BA5D25F4();
    sub_1BAE839A0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8395C()
{
  unint64_t result;

  result = qword_1ED3D1760;
  if (!qword_1ED3D1760)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD9D8, &_s10CodingKeysON_178);
    atomic_store(result, (unint64_t *)&qword_1ED3D1760);
  }
  return result;
}

unint64_t sub_1BAE839A0()
{
  unint64_t result;

  result = qword_1ED3D1758;
  if (!qword_1ED3D1758)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD960, &_s10CodingKeysON_178);
    atomic_store(result, (unint64_t *)&qword_1ED3D1758);
  }
  return result;
}

void sub_1BAE839E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0A8)
  {
    sub_1BAE83A5C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEF00, (uint64_t (*)(uint64_t))sub_1BAE83A5C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0A8);
  }
}

void sub_1BAE83A5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEF08)
  {
    sub_1BAE838DC();
    sub_1BA4A2870(&qword_1ED3D1290, (uint64_t (*)(uint64_t))sub_1BAE838DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEF08);
  }
}

void sub_1BAE83AD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D48)
  {
    sub_1BAE83B4C();
    sub_1BA4A2870(&qword_1ED3D1350, (uint64_t (*)(uint64_t))sub_1BAE83B4C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D48);
  }
}

uint64_t sub_1BAE83B4C()
{
  uint64_t result;

  result = qword_1ED3D1358;
  if (!qword_1ED3D1358)
  {
    sub_1BAE83BCC();
    sub_1BA509E9C();
    sub_1BAE83C10();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE83BCC()
{
  unint64_t result;

  result = qword_1ED3D1850;
  if (!qword_1ED3D1850)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD928, &_s10CodingKeysON_177);
    atomic_store(result, (unint64_t *)&qword_1ED3D1850);
  }
  return result;
}

unint64_t sub_1BAE83C10()
{
  unint64_t result;

  result = qword_1ED3D1848;
  if (!qword_1ED3D1848)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD8B0, &_s10CodingKeysON_177);
    atomic_store(result, (unint64_t *)&qword_1ED3D1848);
  }
  return result;
}

void sub_1BAE83C54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE140)
  {
    sub_1BAE83CCC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF028, (uint64_t (*)(uint64_t))sub_1BAE83CCC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE140);
  }
}

void sub_1BAE83CCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF030)
  {
    sub_1BAE83B4C();
    sub_1BA4A2870(&qword_1ED3D1350, (uint64_t (*)(uint64_t))sub_1BAE83B4C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF030);
  }
}

unint64_t sub_1BAE83D44()
{
  unint64_t result;

  result = qword_1ED3ADBB0;
  if (!qword_1ED3ADBB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpression, &type metadata for FormatBindingFloatExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBB0);
  }
  return result;
}

void sub_1BAE83D88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE630)
  {
    sub_1BAE83E00();
    sub_1BA4A2870(&qword_1ED3AD9A8, (uint64_t (*)(uint64_t))sub_1BAE83E00, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE630);
  }
}

uint64_t sub_1BAE83E00()
{
  uint64_t result;

  result = qword_1ED3AD9B0;
  if (!qword_1ED3AD9B0)
  {
    sub_1BAE83E80();
    sub_1BAE83EC4();
    sub_1BAE83F08();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE83E80()
{
  unint64_t result;

  result = qword_1ED3ADB90;
  if (!qword_1ED3ADB90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD850, &_s10CodingKeysON_176);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB90);
  }
  return result;
}

unint64_t sub_1BAE83EC4()
{
  unint64_t result;

  result = qword_1ED3ADB88;
  if (!qword_1ED3ADB88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD800, &_s10CodingKeysON_176);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB88);
  }
  return result;
}

unint64_t sub_1BAE83F08()
{
  unint64_t result;

  result = qword_1ED3ADB80;
  if (!qword_1ED3ADB80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD7D8, &_s10CodingKeysON_176);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB80);
  }
  return result;
}

unint64_t sub_1BAE83F4C()
{
  unint64_t result;

  result = qword_1ED3A6190;
  if (!qword_1ED3A6190)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFloatBinding, &type metadata for FormatFloatBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A6190);
  }
  return result;
}

void sub_1BAE83F90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0E0)
  {
    sub_1BAE84008();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEF70, (uint64_t (*)(uint64_t))sub_1BAE84008, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0E0);
  }
}

void sub_1BAE84008()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEF78)
  {
    sub_1BAE83E00();
    sub_1BA4A2870(&qword_1ED3AD9A8, (uint64_t (*)(uint64_t))sub_1BAE83E00, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEF78);
  }
}

unint64_t sub_1BAE84080()
{
  unint64_t result;

  result = qword_1ED3AE360;
  if (!qword_1ED3AE360)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD7B0, &_s14descr1E72CC821C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3AE360);
  }
  return result;
}

unint64_t sub_1BAE840C4()
{
  unint64_t result;

  result = qword_1ED3AE408;
  if (!qword_1ED3AE408)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpressionLogicCompare, &type metadata for FormatBindingFloatExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1ED3AE408);
  }
  return result;
}

void sub_1BAE84108()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE660)
  {
    sub_1BAE84180();
    sub_1BA4A2870(&qword_1ED3ADA08, (uint64_t (*)(uint64_t))sub_1BAE84180, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE660);
  }
}

uint64_t sub_1BAE84180()
{
  uint64_t result;

  result = qword_1ED3ADA10;
  if (!qword_1ED3ADA10)
  {
    sub_1BAE84200();
    sub_1BAE84244();
    sub_1BAE84288();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE84200()
{
  unint64_t result;

  result = qword_1ED3AE3E8;
  if (!qword_1ED3AE3E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD778, &_s10CodingKeysON_175);
    atomic_store(result, (unint64_t *)&qword_1ED3AE3E8);
  }
  return result;
}

unint64_t sub_1BAE84244()
{
  unint64_t result;

  result = qword_1ED3AE3E0;
  if (!qword_1ED3AE3E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD728, &_s10CodingKeysON_175);
    atomic_store(result, (unint64_t *)&qword_1ED3AE3E0);
  }
  return result;
}

unint64_t sub_1BAE84288()
{
  unint64_t result;

  result = qword_1ED3AE3D8;
  if (!qword_1ED3AE3D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD700, &_s10CodingKeysON_175);
    atomic_store(result, (unint64_t *)&qword_1ED3AE3D8);
  }
  return result;
}

void sub_1BAE842CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1F0)
  {
    sub_1BAE84344();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF188, (uint64_t (*)(uint64_t))sub_1BAE84344, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1F0);
  }
}

void sub_1BAE84344()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF190)
  {
    sub_1BAE84180();
    sub_1BA4A2870(&qword_1ED3ADA08, (uint64_t (*)(uint64_t))sub_1BAE84180, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF190);
  }
}

void sub_1BAE843BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5C0)
  {
    sub_1BAE84434();
    sub_1BA4A2870(&qword_1ED3AD8B8, (uint64_t (*)(uint64_t))sub_1BAE84434, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5C0);
  }
}

uint64_t sub_1BAE84434()
{
  uint64_t result;

  result = qword_1ED3AD8C0;
  if (!qword_1ED3AD8C0)
  {
    sub_1BAE844B4();
    sub_1BAE844F8();
    sub_1BAE8453C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE844B4()
{
  unint64_t result;

  result = qword_1ED3AD688;
  if (!qword_1ED3AD688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD6C8, &_s10CodingKeysON_174);
    atomic_store(result, (unint64_t *)&qword_1ED3AD688);
  }
  return result;
}

unint64_t sub_1BAE844F8()
{
  unint64_t result;

  result = qword_1ED3A6A28;
  if (!qword_1ED3A6A28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD678, &_s10CodingKeysON_174);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A28);
  }
  return result;
}

unint64_t sub_1BAE8453C()
{
  unint64_t result;

  result = qword_1ED3AD680;
  if (!qword_1ED3AD680)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD650, &_s10CodingKeysON_174);
    atomic_store(result, (unint64_t *)&qword_1ED3AD680);
  }
  return result;
}

void sub_1BAE84580(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE98)
  {
    sub_1BAE845F8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEAE0, (uint64_t (*)(uint64_t))sub_1BAE845F8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE98);
  }
}

void sub_1BAE845F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEAE8)
  {
    sub_1BAE84434();
    sub_1BA4A2870(&qword_1ED3AD8B8, (uint64_t (*)(uint64_t))sub_1BAE84434, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEAE8);
  }
}

void sub_1BAE84670()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D08)
  {
    sub_1BAE846E8();
    sub_1BA4A2870(&qword_1ED3D12D0, (uint64_t (*)(uint64_t))sub_1BAE846E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D08);
  }
}

uint64_t sub_1BAE846E8()
{
  uint64_t result;

  result = qword_1ED3D12D8;
  if (!qword_1ED3D12D8)
  {
    sub_1BAE84768();
    sub_1BA58E7E8();
    sub_1BAE847AC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE84768()
{
  unint64_t result;

  result = qword_1ED3D17B8;
  if (!qword_1ED3D17B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD618, &_s10CodingKeysON_173);
    atomic_store(result, (unint64_t *)&qword_1ED3D17B8);
  }
  return result;
}

unint64_t sub_1BAE847AC()
{
  unint64_t result;

  result = qword_1ED3D17B0;
  if (!qword_1ED3D17B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD5A0, &_s10CodingKeysON_173);
    atomic_store(result, (unint64_t *)&qword_1ED3D17B0);
  }
  return result;
}

void sub_1BAE847F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0E8)
  {
    sub_1BAE84868();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEF80, (uint64_t (*)(uint64_t))sub_1BAE84868, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0E8);
  }
}

void sub_1BAE84868()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEF88)
  {
    sub_1BAE846E8();
    sub_1BA4A2870(&qword_1ED3D12D0, (uint64_t (*)(uint64_t))sub_1BAE846E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEF88);
  }
}

void sub_1BAE848E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DA0)
  {
    sub_1BAE84958();
    sub_1BA4A2870(&qword_1ED3D1400, (uint64_t (*)(uint64_t))sub_1BAE84958, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DA0);
  }
}

uint64_t sub_1BAE84958()
{
  uint64_t result;

  result = qword_1ED3D1408;
  if (!qword_1ED3D1408)
  {
    sub_1BAE849D8();
    sub_1BA4DDAFC();
    sub_1BAE84A1C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE849D8()
{
  unint64_t result;

  result = qword_1ED3D1908;
  if (!qword_1ED3D1908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD568, &_s10CodingKeysON_172);
    atomic_store(result, (unint64_t *)&qword_1ED3D1908);
  }
  return result;
}

unint64_t sub_1BAE84A1C()
{
  unint64_t result;

  result = qword_1ED3D1900;
  if (!qword_1ED3D1900)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD4F0, &_s10CodingKeysON_172);
    atomic_store(result, (unint64_t *)&qword_1ED3D1900);
  }
  return result;
}

void sub_1BAE84A60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1B8)
  {
    sub_1BAE84AD8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF118, (uint64_t (*)(uint64_t))sub_1BAE84AD8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1B8);
  }
}

void sub_1BAE84AD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF120)
  {
    sub_1BAE84958();
    sub_1BA4A2870(&qword_1ED3D1400, (uint64_t (*)(uint64_t))sub_1BAE84958, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF120);
  }
}

void sub_1BAE84B50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DC0)
  {
    sub_1BAE84BC8();
    sub_1BA4A2870(&qword_1ED3D1440, (uint64_t (*)(uint64_t))sub_1BAE84BC8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DC0);
  }
}

uint64_t sub_1BAE84BC8()
{
  uint64_t result;

  result = qword_1ED3D1448;
  if (!qword_1ED3D1448)
  {
    sub_1BAE84C48();
    sub_1BA4DDF0C();
    sub_1BAE84C8C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE84C48()
{
  unint64_t result;

  result = qword_1ED3D1960;
  if (!qword_1ED3D1960)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD4B8, &_s10CodingKeysON_171);
    atomic_store(result, (unint64_t *)&qword_1ED3D1960);
  }
  return result;
}

unint64_t sub_1BAE84C8C()
{
  unint64_t result;

  result = qword_1ED3D1958;
  if (!qword_1ED3D1958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD440, &_s10CodingKeysON_171);
    atomic_store(result, (unint64_t *)&qword_1ED3D1958);
  }
  return result;
}

void sub_1BAE84CD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1E8)
  {
    sub_1BAE84D48();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF178, (uint64_t (*)(uint64_t))sub_1BAE84D48, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1E8);
  }
}

void sub_1BAE84D48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF180)
  {
    sub_1BAE84BC8();
    sub_1BA4A2870(&qword_1ED3D1440, (uint64_t (*)(uint64_t))sub_1BAE84BC8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF180);
  }
}

unint64_t sub_1BAE84DC0()
{
  unint64_t result;

  result = qword_1ED3D2C30;
  if (!qword_1ED3D2C30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD418, &_s10CodingTypeON_121);
    atomic_store(result, (unint64_t *)&qword_1ED3D2C30);
  }
  return result;
}

void sub_1BAE84E04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CF0)
  {
    sub_1BAE84E7C();
    sub_1BA4A2870(&qword_1ED3D12A0, (uint64_t (*)(uint64_t))sub_1BAE84E7C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CF0);
  }
}

uint64_t sub_1BAE84E7C()
{
  uint64_t result;

  result = qword_1ED3D12A8;
  if (!qword_1ED3D12A8)
  {
    sub_1BAE84EFC();
    sub_1BA5B3FF0();
    sub_1BAE84F40();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE84EFC()
{
  unint64_t result;

  result = qword_1ED3D1770;
  if (!qword_1ED3D1770)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD3E0, &_s14descr1E72CC7E9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D1770);
  }
  return result;
}

unint64_t sub_1BAE84F40()
{
  unint64_t result;

  result = qword_1ED3D1768;
  if (!qword_1ED3D1768)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD368, &_s14descr1E72CC7E9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D1768);
  }
  return result;
}

void sub_1BAE84F84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0B0)
  {
    sub_1BAE84FFC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEF10, (uint64_t (*)(uint64_t))sub_1BAE84FFC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0B0);
  }
}

void sub_1BAE84FFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEF18)
  {
    sub_1BAE84E7C();
    sub_1BA4A2870(&qword_1ED3D12A0, (uint64_t (*)(uint64_t))sub_1BAE84E7C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEF18);
  }
}

void sub_1BAE85074()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C90)
  {
    sub_1BAE850EC();
    sub_1BA4A2870(&qword_1ED3D11E0, (uint64_t (*)(uint64_t))sub_1BAE850EC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C90);
  }
}

uint64_t sub_1BAE850EC()
{
  uint64_t result;

  result = qword_1ED3D11E8;
  if (!qword_1ED3D11E8)
  {
    sub_1BAE8516C();
    sub_1BA515960();
    sub_1BAE851B0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8516C()
{
  unint64_t result;

  result = qword_1ED3D16B0;
  if (!qword_1ED3D16B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD330, &_s10CodingKeysON_170);
    atomic_store(result, (unint64_t *)&qword_1ED3D16B0);
  }
  return result;
}

unint64_t sub_1BAE851B0()
{
  unint64_t result;

  result = qword_1ED3D16A8;
  if (!qword_1ED3D16A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD2B8, &_s10CodingKeysON_170);
    atomic_store(result, (unint64_t *)&qword_1ED3D16A8);
  }
  return result;
}

void sub_1BAE851F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE048)
  {
    sub_1BAE8526C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEE40, (uint64_t (*)(uint64_t))sub_1BAE8526C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE048);
  }
}

void sub_1BAE8526C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEE48)
  {
    sub_1BAE850EC();
    sub_1BA4A2870(&qword_1ED3D11E0, (uint64_t (*)(uint64_t))sub_1BAE850EC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEE48);
  }
}

uint64_t sub_1BAE852E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73776F726874 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAE85564(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAE85650(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E417472617473 && a2 == 0xEA0000000000656CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C676E41646E65 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7369776B636F6C63 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAE858C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E696F70 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x506C6F72746E6F63 && a2 == 0xED000031746E696FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x506C6F72746E6F63 && a2 == 0xED000032746E696FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAE85AA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E696F70 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x506C6F72746E6F63 && a2 == 0xEC000000746E696FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE85BFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73646E696BLL && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737469617274 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE85DFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646E6962 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE85F38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE86158(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D695465746164 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6369676F6CLL && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE86294(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F74617265706FLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D695465746164 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE863D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F74617265706FLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE86514(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696C616373 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE86648(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646E6962 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F74617265706FLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE8678C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646E6962 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6369676F6CLL && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BAE868C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE218)
  {
    sub_1BAE86940();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF1D8, (uint64_t (*)(uint64_t))sub_1BAE86940, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE218);
  }
}

void sub_1BAE86940()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF1E0)
  {
    sub_1BAE869B8();
    sub_1BA4A2870(&qword_1ED3D1490, (uint64_t (*)(uint64_t))sub_1BAE869B8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF1E0);
  }
}

uint64_t sub_1BAE869B8()
{
  uint64_t result;

  result = qword_1ED3D1498;
  if (!qword_1ED3D1498)
  {
    sub_1BAE86A38();
    sub_1BA5C0BA0();
    sub_1BAE86A7C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE86A38()
{
  unint64_t result;

  result = qword_1ED3D0170;
  if (!qword_1ED3D0170)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD258, &_s10CodingKeysON_169);
    atomic_store(result, (unint64_t *)&qword_1ED3D0170);
  }
  return result;
}

unint64_t sub_1BAE86A7C()
{
  unint64_t result;

  result = qword_1ED3D0168;
  if (!qword_1ED3D0168)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD1E0, &_s10CodingKeysON_169);
    atomic_store(result, (unint64_t *)&qword_1ED3D0168);
  }
  return result;
}

void sub_1BAE86AC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B50)
  {
    sub_1BAE86B38();
    sub_1BA4A2870(&qword_1ED3D0F60, (uint64_t (*)(uint64_t))sub_1BAE86B38, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B50);
  }
}

uint64_t sub_1BAE86B38()
{
  uint64_t result;

  result = qword_1ED3D0F68;
  if (!qword_1ED3D0F68)
  {
    sub_1BAE86BB8();
    sub_1BA4FC0EC();
    sub_1BAE86BFC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE86BB8()
{
  unint64_t result;

  result = qword_1ED3D08D0;
  if (!qword_1ED3D08D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD1A8, &_s10CodingKeysON_168);
    atomic_store(result, (unint64_t *)&qword_1ED3D08D0);
  }
  return result;
}

unint64_t sub_1BAE86BFC()
{
  unint64_t result;

  result = qword_1ED3D08C8;
  if (!qword_1ED3D08C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD130, &_s10CodingKeysON_168);
    atomic_store(result, (unint64_t *)&qword_1ED3D08C8);
  }
  return result;
}

void sub_1BAE86C40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADEA0)
  {
    sub_1BAE86CB8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEAF0, (uint64_t (*)(uint64_t))sub_1BAE86CB8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADEA0);
  }
}

void sub_1BAE86CB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEAF8)
  {
    sub_1BAE86B38();
    sub_1BA4A2870(&qword_1ED3D0F60, (uint64_t (*)(uint64_t))sub_1BAE86B38, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEAF8);
  }
}

uint64_t sub_1BAE86D30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE86F54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6564496B636F6C62 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1BAE87058(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2C0)
  {
    sub_1BAE870D0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF320, (uint64_t (*)(uint64_t))sub_1BAE870D0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2C0);
  }
}

void sub_1BAE870D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF328)
  {
    sub_1BAE87148();
    sub_1BA4A2870(&qword_1ED3D15C0, (uint64_t (*)(uint64_t))sub_1BAE87148, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF328);
  }
}

uint64_t sub_1BAE87148()
{
  uint64_t result;

  result = qword_1ED3D15C8;
  if (!qword_1ED3D15C8)
  {
    sub_1BAE871C8();
    sub_1BA5A45C8();
    sub_1BAE8720C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE871C8()
{
  unint64_t result;

  result = qword_1ED3D0328;
  if (!qword_1ED3D0328)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD0F8, &_s10CodingKeysON_167);
    atomic_store(result, (unint64_t *)&qword_1ED3D0328);
  }
  return result;
}

unint64_t sub_1BAE8720C()
{
  unint64_t result;

  result = qword_1ED3D0320;
  if (!qword_1ED3D0320)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD080, &_s10CodingKeysON_167);
    atomic_store(result, (unint64_t *)&qword_1ED3D0320);
  }
  return result;
}

unint64_t sub_1BAE87250()
{
  unint64_t result;

  result = qword_1EF2B2A80;
  if (!qword_1EF2B2A80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Bool, &type metadata for FormatPuzzleBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B2A80);
  }
  return result;
}

void sub_1BAE87294()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5A0)
  {
    sub_1BAE8730C();
    sub_1BA4A2870(&qword_1ED3AD878, (uint64_t (*)(uint64_t))sub_1BAE8730C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5A0);
  }
}

uint64_t sub_1BAE8730C()
{
  uint64_t result;

  result = qword_1ED3AD880;
  if (!qword_1ED3AD880)
  {
    sub_1BAE8738C();
    sub_1BAE873D0();
    sub_1BAE87414();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8738C()
{
  unint64_t result;

  result = qword_1ED3AD608;
  if (!qword_1ED3AD608)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CD020, &_s10CodingKeysON_166);
    atomic_store(result, (unint64_t *)&qword_1ED3AD608);
  }
  return result;
}

unint64_t sub_1BAE873D0()
{
  unint64_t result;

  result = qword_1ED3A65D8;
  if (!qword_1ED3A65D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCFD0, &_s10CodingKeysON_166);
    atomic_store(result, (unint64_t *)&qword_1ED3A65D8);
  }
  return result;
}

unint64_t sub_1BAE87414()
{
  unint64_t result;

  result = qword_1ED3AD600;
  if (!qword_1ED3AD600)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCFA8, &_s10CodingKeysON_166);
    atomic_store(result, (unint64_t *)&qword_1ED3AD600);
  }
  return result;
}

void sub_1BAE87458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2A88)
  {
    sub_1BAE874D0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2A98, (uint64_t (*)(uint64_t))sub_1BAE874D0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2A88);
  }
}

void sub_1BAE874D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2A90)
  {
    sub_1BAE8730C();
    sub_1BA4A2870(&qword_1ED3AD878, (uint64_t (*)(uint64_t))sub_1BAE8730C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2A90);
  }
}

void sub_1BAE87548()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E10)
  {
    sub_1BAE875C0();
    sub_1BA4A2870(&qword_1ED3D14E0, (uint64_t (*)(uint64_t))sub_1BAE875C0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E10);
  }
}

uint64_t sub_1BAE875C0()
{
  uint64_t result;

  result = qword_1ED3D14E8;
  if (!qword_1ED3D14E8)
  {
    sub_1BAE87640();
    sub_1BAE87684();
    sub_1BAE876C8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE87640()
{
  unint64_t result;

  result = qword_1ED3D0210;
  if (!qword_1ED3D0210)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCF70, &_s14descr1E72CC7B9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0210);
  }
  return result;
}

unint64_t sub_1BAE87684()
{
  unint64_t result;

  result = qword_1ED3C6770;
  if (!qword_1ED3C6770)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCF20, &_s14descr1E72CC7B9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3C6770);
  }
  return result;
}

unint64_t sub_1BAE876C8()
{
  unint64_t result;

  result = qword_1ED3D0208;
  if (!qword_1ED3D0208)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCEF8, &_s14descr1E72CC7B9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0208);
  }
  return result;
}

void sub_1BAE8770C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE240)
  {
    sub_1BAE87784();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF228, (uint64_t (*)(uint64_t))sub_1BAE87784, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE240);
  }
}

void sub_1BAE87784()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF230)
  {
    sub_1BAE875C0();
    sub_1BA4A2870(&qword_1ED3D14E0, (uint64_t (*)(uint64_t))sub_1BAE875C0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF230);
  }
}

unint64_t sub_1BAE877FC()
{
  unint64_t result;

  result = qword_1ED3A2A50;
  if (!qword_1ED3A2A50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDebugAction, &type metadata for FormatDebugAction);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A50);
  }
  return result;
}

unint64_t sub_1BAE87840()
{
  unint64_t result;

  result = qword_1ED39EB68;
  if (!qword_1ED39EB68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineActionEvent, &type metadata for FormatStateMachineActionEvent);
    atomic_store(result, (unint64_t *)&qword_1ED39EB68);
  }
  return result;
}

uint64_t sub_1BAE87884()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAE878B4()
{
  return objectdestroy_118Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

unint64_t sub_1BAE878C4()
{
  unint64_t result;

  result = qword_1ED39FD70;
  if (!qword_1ED39FD70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Action, &type metadata for FormatIssueBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1ED39FD70);
  }
  return result;
}

void sub_1BAE87908()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C68)
  {
    sub_1BAE87980();
    sub_1BA4A2870(&qword_1ED3D1190, (uint64_t (*)(uint64_t))sub_1BAE87980, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C68);
  }
}

uint64_t sub_1BAE87980()
{
  uint64_t result;

  result = qword_1ED3D1198;
  if (!qword_1ED3D1198)
  {
    sub_1BAE87A00();
    sub_1BA5426A4();
    sub_1BAE87A44();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE87A00()
{
  unint64_t result;

  result = qword_1ED3D0B68[0];
  if (!qword_1ED3D0B68[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCE70, &_s10CodingKeysON_165);
    atomic_store(result, qword_1ED3D0B68);
  }
  return result;
}

unint64_t sub_1BAE87A44()
{
  unint64_t result;

  result = qword_1ED3D0B60;
  if (!qword_1ED3D0B60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCDF8, &_s10CodingKeysON_165);
    atomic_store(result, (unint64_t *)&qword_1ED3D0B60);
  }
  return result;
}

void sub_1BAE87A88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE010)
  {
    sub_1BAE87B00();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEDD0, (uint64_t (*)(uint64_t))sub_1BAE87B00, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE010);
  }
}

void sub_1BAE87B00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEDD8)
  {
    sub_1BAE87980();
    sub_1BA4A2870(&qword_1ED3D1190, (uint64_t (*)(uint64_t))sub_1BAE87980, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEDD8);
  }
}

unint64_t sub_1BAE87B78()
{
  unint64_t result;

  result = qword_1ED3A6608;
  if (!qword_1ED3A6608)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellSelection.DimContent, &type metadata for FormatCellSelection.DimContent);
    atomic_store(result, (unint64_t *)&qword_1ED3A6608);
  }
  return result;
}

void sub_1BAE87BBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2AA0)
  {
    sub_1BAE87C34();
    sub_1BA4A2870(&qword_1EF2B2AC8, (uint64_t (*)(uint64_t))sub_1BAE87C34, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2AA0);
  }
}

uint64_t sub_1BAE87C34()
{
  uint64_t result;

  result = qword_1EF2B2AA8;
  if (!qword_1EF2B2AA8)
  {
    sub_1BAE87CB4();
    sub_1BAE87CF8();
    sub_1BAE87D3C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE87CB4()
{
  unint64_t result;

  result = qword_1EF2B2AB0;
  if (!qword_1EF2B2AB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCDC0, &_s10CodingKeysON_164);
    atomic_store(result, (unint64_t *)&qword_1EF2B2AB0);
  }
  return result;
}

unint64_t sub_1BAE87CF8()
{
  unint64_t result;

  result = qword_1EF2B2AB8;
  if (!qword_1EF2B2AB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCD70, &_s10CodingKeysON_164);
    atomic_store(result, (unint64_t *)&qword_1EF2B2AB8);
  }
  return result;
}

unint64_t sub_1BAE87D3C()
{
  unint64_t result;

  result = qword_1EF2B2AC0;
  if (!qword_1EF2B2AC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCD48, &_s10CodingKeysON_164);
    atomic_store(result, (unint64_t *)&qword_1EF2B2AC0);
  }
  return result;
}

void sub_1BAE87D80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2AD0)
  {
    sub_1BAE87DF8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2AE0, (uint64_t (*)(uint64_t))sub_1BAE87DF8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2AD0);
  }
}

void sub_1BAE87DF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2AD8)
  {
    sub_1BAE87C34();
    sub_1BA4A2870(&qword_1EF2B2AC8, (uint64_t (*)(uint64_t))sub_1BAE87C34, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2AD8);
  }
}

void sub_1BAE87E70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2AE8)
  {
    sub_1BAE87EE8();
    sub_1BA4A2870(&qword_1EF2B2B10, (uint64_t (*)(uint64_t))sub_1BAE87EE8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2AE8);
  }
}

uint64_t sub_1BAE87EE8()
{
  uint64_t result;

  result = qword_1EF2B2AF0;
  if (!qword_1EF2B2AF0)
  {
    sub_1BAE87F68();
    sub_1BAE87FAC();
    sub_1BAE87FF0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE87F68()
{
  unint64_t result;

  result = qword_1EF2B2AF8;
  if (!qword_1EF2B2AF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCD10, &_s10CodingKeysON_163);
    atomic_store(result, (unint64_t *)&qword_1EF2B2AF8);
  }
  return result;
}

unint64_t sub_1BAE87FAC()
{
  unint64_t result;

  result = qword_1EF2B2B00;
  if (!qword_1EF2B2B00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCCC0, &_s10CodingKeysON_163);
    atomic_store(result, (unint64_t *)&qword_1EF2B2B00);
  }
  return result;
}

unint64_t sub_1BAE87FF0()
{
  unint64_t result;

  result = qword_1EF2B2B08;
  if (!qword_1EF2B2B08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCC98, &_s10CodingKeysON_163);
    atomic_store(result, (unint64_t *)&qword_1EF2B2B08);
  }
  return result;
}

void sub_1BAE88034(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2B18)
  {
    sub_1BAE880AC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2B28, (uint64_t (*)(uint64_t))sub_1BAE880AC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2B18);
  }
}

void sub_1BAE880AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2B20)
  {
    sub_1BAE87EE8();
    sub_1BA4A2870(&qword_1EF2B2B10, (uint64_t (*)(uint64_t))sub_1BAE87EE8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2B20);
  }
}

unint64_t sub_1BAE88124()
{
  unint64_t result;

  result = qword_1ED3D0180;
  if (!qword_1ED3D0180)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCC70, &_s10CodingTypeON_116);
    atomic_store(result, (unint64_t *)&qword_1ED3D0180);
  }
  return result;
}

uint64_t sub_1BAE88168()
{
  uint64_t result;

  result = qword_1EF2B2B30;
  if (!qword_1EF2B2B30)
  {
    sub_1BA4CDF6C(255, &qword_1ED3BE6B0, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAE88208();
    sub_1BA7FDD98();
    type metadata accessor for FormatUnboundValue();
  }
  return result;
}

unint64_t sub_1BAE88208()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2B38;
  if (!qword_1EF2B2B38)
  {
    sub_1BA4CDF6C(255, &qword_1ED3BE6B0, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2B38);
  }
  return result;
}

uint64_t sub_1BAE88274(uint64_t a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3();
    sub_1BA7FDD98();
    type metadata accessor for FormatUnboundValue();
  }
  return result;
}

unint64_t sub_1BAE882E8()
{
  unint64_t result;

  result = qword_1EF2B2B50;
  if (!qword_1EF2B2B50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProcessedColor, &type metadata for FormatProcessedColor);
    atomic_store(result, (unint64_t *)&qword_1EF2B2B50);
  }
  return result;
}

unint64_t sub_1BAE8832C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2B58;
  if (!qword_1EF2B2B58)
  {
    v1 = sub_1BAE88274(255, &qword_1EF2B2B48, (void (*)(void))sub_1BAE882E8);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnboundValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2B58);
  }
  return result;
}

unint64_t sub_1BAE88390()
{
  unint64_t result;

  result = qword_1EF2B2B68;
  if (!qword_1EF2B2B68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorBinding, &type metadata for FormatColorBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B2B68);
  }
  return result;
}

unint64_t sub_1BAE883D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2B70;
  if (!qword_1EF2B2B70)
  {
    v1 = sub_1BAE88274(255, &qword_1EF2B2B60, (void (*)(void))sub_1BAE88390);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnboundValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2B70);
  }
  return result;
}

uint64_t sub_1BAE88434()
{
  uint64_t v0;

  sub_1BA6F3F50(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BAE8846C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3BE6A8;
  if (!qword_1ED3BE6A8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3BE6B0, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3BE6A8);
  }
  return result;
}

uint64_t sub_1BAE884D4()
{
  return objectdestroy_189Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAE884E0()
{
  return objectdestroy_45Tm((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6F3F50);
}

unint64_t sub_1BAE884EC()
{
  unint64_t result;

  result = qword_1ED39B2B0;
  if (!qword_1ED39B2B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRGBAColor, &type metadata for FormatRGBAColor);
    atomic_store(result, (unint64_t *)&qword_1ED39B2B0);
  }
  return result;
}

uint64_t sub_1BAE88530()
{
  return swift_deallocObject();
}

unint64_t sub_1BAE88540()
{
  unint64_t result;

  result = qword_1EF2B2B78;
  if (!qword_1EF2B2B78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGrayscaleColor, &type metadata for FormatGrayscaleColor);
    atomic_store(result, (unint64_t *)&qword_1EF2B2B78);
  }
  return result;
}

uint64_t sub_1BAE88584()
{
  return swift_deallocObject();
}

uint64_t sub_1BAE88594()
{
  return objectdestroy_189Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

unint64_t sub_1BAE885A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B79E8;
  if (!qword_1ED3B79E8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B79F0, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B79E8);
  }
  return result;
}

unint64_t sub_1BAE8860C()
{
  unint64_t result;

  result = qword_1ED3AD4D8;
  if (!qword_1ED3AD4D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFixedColor, &type metadata for FormatFixedColor);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4D8);
  }
  return result;
}

unint64_t sub_1BAE88650()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AD4B8;
  if (!qword_1ED3AD4B8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AD4C0, (uint64_t (*)(void))sub_1BAE8860C, (uint64_t)&type metadata for FormatFixedColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAlphaColor<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4B8);
  }
  return result;
}

unint64_t sub_1BAE886B8()
{
  unint64_t result;

  result = qword_1ED3D05E0;
  if (!qword_1ED3D05E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSystemColor, &type metadata for FormatSystemColor);
    atomic_store(result, (unint64_t *)&qword_1ED3D05E0);
  }
  return result;
}

unint64_t sub_1BAE886FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D04A8;
  if (!qword_1ED3D04A8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3D04B0, (uint64_t (*)(void))sub_1BAE886B8, (uint64_t)&type metadata for FormatSystemColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAlphaColor<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D04A8);
  }
  return result;
}

void sub_1BAE88764()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC070)
  {
    sub_1BAE887DC();
    sub_1BA4A2870(&qword_1ED3ABEE8, (uint64_t (*)(uint64_t))sub_1BAE887DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC070);
  }
}

uint64_t sub_1BAE887DC()
{
  uint64_t result;

  result = qword_1ED3ABEF0;
  if (!qword_1ED3ABEF0)
  {
    sub_1BAE8885C();
    sub_1BA534AC0();
    sub_1BAE888A0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8885C()
{
  unint64_t result;

  result = qword_1ED3ABE80;
  if (!qword_1ED3ABE80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCC38, &_s10CodingKeysON_162);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE80);
  }
  return result;
}

unint64_t sub_1BAE888A0()
{
  unint64_t result;

  result = qword_1ED3ABE78;
  if (!qword_1ED3ABE78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCBC0, &_s10CodingKeysON_162);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE78);
  }
  return result;
}

void sub_1BAE888E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFC0)
  {
    sub_1BAE8895C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AED30, (uint64_t (*)(uint64_t))sub_1BAE8895C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFC0);
  }
}

void sub_1BAE8895C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AED38)
  {
    sub_1BAE887DC();
    sub_1BA4A2870(&qword_1ED3ABEE8, (uint64_t (*)(uint64_t))sub_1BAE887DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AED38);
  }
}

void sub_1BAE889D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DA8)
  {
    sub_1BAE88A4C();
    sub_1BA4A2870(&qword_1ED3D1410, (uint64_t (*)(uint64_t))sub_1BAE88A4C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DA8);
  }
}

uint64_t sub_1BAE88A4C()
{
  uint64_t result;

  result = qword_1ED3D1418;
  if (!qword_1ED3D1418)
  {
    sub_1BAE88ACC();
    sub_1BA6094C4();
    sub_1BAE88B10();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE88ACC()
{
  unint64_t result;

  result = qword_1ED3D1918;
  if (!qword_1ED3D1918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCB88, &_s14descr1E72CBC99O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D1918);
  }
  return result;
}

unint64_t sub_1BAE88B10()
{
  unint64_t result;

  result = qword_1ED3D1910;
  if (!qword_1ED3D1910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCB10, &_s14descr1E72CBC99O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D1910);
  }
  return result;
}

void sub_1BAE88B54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1C0)
  {
    sub_1BAE88BCC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF128, (uint64_t (*)(uint64_t))sub_1BAE88BCC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1C0);
  }
}

void sub_1BAE88BCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF130)
  {
    sub_1BAE88A4C();
    sub_1BA4A2870(&qword_1ED3D1410, (uint64_t (*)(uint64_t))sub_1BAE88A4C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF130);
  }
}

unint64_t sub_1BAE88C44()
{
  unint64_t result;

  result = qword_1ED3A7210;
  if (!qword_1ED3A7210)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Color, &type metadata for FormatPuzzleTypeBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1ED3A7210);
  }
  return result;
}

unint64_t sub_1BAE88C88()
{
  unint64_t result;

  result = qword_1ED3A7458;
  if (!qword_1ED3A7458)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Color, &type metadata for FormatSportsEventBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1ED3A7458);
  }
  return result;
}

unint64_t sub_1BAE88CCC()
{
  unint64_t result;

  result = qword_1ED39FD08;
  if (!qword_1ED39FD08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Color, &type metadata for FormatGroupBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1ED39FD08);
  }
  return result;
}

void sub_1BAE88D10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C70)
  {
    sub_1BAE88D88();
    sub_1BA4A2870(&qword_1ED3D11A0, (uint64_t (*)(uint64_t))sub_1BAE88D88, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C70);
  }
}

uint64_t sub_1BAE88D88()
{
  uint64_t result;

  result = qword_1ED3D11A8;
  if (!qword_1ED3D11A8)
  {
    sub_1BAE88E08();
    sub_1BA5249BC();
    sub_1BAE88E4C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE88E08()
{
  unint64_t result;

  result = qword_1ED3D1668;
  if (!qword_1ED3D1668)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCAB0, &_s10CodingKeysON_161);
    atomic_store(result, (unint64_t *)&qword_1ED3D1668);
  }
  return result;
}

unint64_t sub_1BAE88E4C()
{
  unint64_t result;

  result = qword_1ED3D1660;
  if (!qword_1ED3D1660)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCA38, &_s10CodingKeysON_161);
    atomic_store(result, (unint64_t *)&qword_1ED3D1660);
  }
  return result;
}

void sub_1BAE88E90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE018)
  {
    sub_1BAE88F08();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEDE0, (uint64_t (*)(uint64_t))sub_1BAE88F08, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE018);
  }
}

void sub_1BAE88F08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEDE8)
  {
    sub_1BAE88D88();
    sub_1BA4A2870(&qword_1ED3D11A0, (uint64_t (*)(uint64_t))sub_1BAE88D88, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEDE8);
  }
}

void sub_1BAE88F80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC0C0)
  {
    sub_1BAE88FF8();
    sub_1BA4A2870(&qword_1ED3ABF88, (uint64_t (*)(uint64_t))sub_1BAE88FF8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC0C0);
  }
}

uint64_t sub_1BAE88FF8()
{
  uint64_t result;

  result = qword_1ED3ABF90;
  if (!qword_1ED3ABF90)
  {
    sub_1BAE89078();
    sub_1BA5379FC();
    sub_1BAE890BC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE89078()
{
  unint64_t result;

  result = qword_1ED3ABDD0;
  if (!qword_1ED3ABDD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCA00, &_s10CodingKeysON_160);
    atomic_store(result, (unint64_t *)&qword_1ED3ABDD0);
  }
  return result;
}

unint64_t sub_1BAE890BC()
{
  unint64_t result;

  result = qword_1ED3ABDC8;
  if (!qword_1ED3ABDC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC988, &_s10CodingKeysON_160);
    atomic_store(result, (unint64_t *)&qword_1ED3ABDC8);
  }
  return result;
}

void sub_1BAE89100(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE320)
  {
    sub_1BAE89178();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF3E0, (uint64_t (*)(uint64_t))sub_1BAE89178, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE320);
  }
}

void sub_1BAE89178()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF3E8)
  {
    sub_1BAE88FF8();
    sub_1BA4A2870(&qword_1ED3ABF88, (uint64_t (*)(uint64_t))sub_1BAE88FF8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF3E8);
  }
}

void sub_1BAE891F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC098)
  {
    sub_1BAE89268();
    sub_1BA4A2870(&qword_1ED3ABF38, (uint64_t (*)(uint64_t))sub_1BAE89268, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC098);
  }
}

uint64_t sub_1BAE89268()
{
  uint64_t result;

  result = qword_1ED3ABF40;
  if (!qword_1ED3ABF40)
  {
    sub_1BAE892E8();
    sub_1BA56A0B8();
    sub_1BAE8932C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE892E8()
{
  unint64_t result;

  result = qword_1ED3ABFE0;
  if (!qword_1ED3ABFE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC950, &_s10CodingKeysON_159);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFE0);
  }
  return result;
}

unint64_t sub_1BAE8932C()
{
  unint64_t result;

  result = qword_1ED3ABFD8;
  if (!qword_1ED3ABFD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC8D8, &_s10CodingKeysON_159);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFD8);
  }
  return result;
}

void sub_1BAE89370(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE130)
  {
    sub_1BAE893E8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF008, (uint64_t (*)(uint64_t))sub_1BAE893E8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE130);
  }
}

void sub_1BAE893E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF010)
  {
    sub_1BAE89268();
    sub_1BA4A2870(&qword_1ED3ABF38, (uint64_t (*)(uint64_t))sub_1BAE89268, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF010);
  }
}

uint64_t sub_1BAE89460()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BAE89494()
{
  unint64_t result;

  result = qword_1EF2B2B80;
  if (!qword_1EF2B2B80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorNotExpression, &type metadata for FormatColorNotExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2B2B80);
  }
  return result;
}

uint64_t objectdestroy_80Tm()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BAE89504()
{
  unint64_t result;

  result = qword_1EF2B2B88;
  if (!qword_1EF2B2B88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorOrExpression, &type metadata for FormatColorOrExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2B2B88);
  }
  return result;
}

void sub_1BAE89550()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC0B0)
  {
    sub_1BAE895C8();
    sub_1BA4A2870(&qword_1ED3ABF68, (uint64_t (*)(uint64_t))sub_1BAE895C8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC0B0);
  }
}

uint64_t sub_1BAE895C8()
{
  uint64_t result;

  result = qword_1ED3ABF70;
  if (!qword_1ED3ABF70)
  {
    sub_1BAE89648();
    sub_1BA544358();
    sub_1BAE8968C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE89648()
{
  unint64_t result;

  result = qword_1ED3AC010;
  if (!qword_1ED3AC010)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC878, &_s10CodingKeysON_158);
    atomic_store(result, (unint64_t *)&qword_1ED3AC010);
  }
  return result;
}

unint64_t sub_1BAE8968C()
{
  unint64_t result;

  result = qword_1ED3AC008;
  if (!qword_1ED3AC008)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC800, &_s10CodingKeysON_158);
    atomic_store(result, (unint64_t *)&qword_1ED3AC008);
  }
  return result;
}

void sub_1BAE896D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1C8)
  {
    sub_1BAE89748();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF138, (uint64_t (*)(uint64_t))sub_1BAE89748, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1C8);
  }
}

void sub_1BAE89748()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF140)
  {
    sub_1BAE895C8();
    sub_1BA4A2870(&qword_1ED3ABF68, (uint64_t (*)(uint64_t))sub_1BAE895C8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF140);
  }
}

void sub_1BAE897C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2B90)
  {
    sub_1BAE89838();
    sub_1BA4A2870(&qword_1EF2B2BB8, (uint64_t (*)(uint64_t))sub_1BAE89838, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2B90);
  }
}

uint64_t sub_1BAE89838()
{
  uint64_t result;

  result = qword_1EF2B2B98;
  if (!qword_1EF2B2B98)
  {
    sub_1BAE898B8();
    sub_1BAE898FC();
    sub_1BAE89940();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE898B8()
{
  unint64_t result;

  result = qword_1EF2B2BA0;
  if (!qword_1EF2B2BA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC7C8, &_s10CodingKeysON_157);
    atomic_store(result, (unint64_t *)&qword_1EF2B2BA0);
  }
  return result;
}

unint64_t sub_1BAE898FC()
{
  unint64_t result;

  result = qword_1EF2B2BA8;
  if (!qword_1EF2B2BA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC778, &_s10CodingKeysON_157);
    atomic_store(result, (unint64_t *)&qword_1EF2B2BA8);
  }
  return result;
}

unint64_t sub_1BAE89940()
{
  unint64_t result;

  result = qword_1EF2B2BB0;
  if (!qword_1EF2B2BB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC750, &_s10CodingKeysON_157);
    atomic_store(result, (unint64_t *)&qword_1EF2B2BB0);
  }
  return result;
}

void sub_1BAE89984(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2BC0)
  {
    sub_1BAE899FC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2BD0, (uint64_t (*)(uint64_t))sub_1BAE899FC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2BC0);
  }
}

void sub_1BAE899FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2BC8)
  {
    sub_1BAE89838();
    sub_1BA4A2870(&qword_1EF2B2BB8, (uint64_t (*)(uint64_t))sub_1BAE89838, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2BC8);
  }
}

void sub_1BAE89A74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2BD8)
  {
    sub_1BAE89AEC();
    sub_1BA4A2870(&qword_1EF2B2C00, (uint64_t (*)(uint64_t))sub_1BAE89AEC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2BD8);
  }
}

uint64_t sub_1BAE89AEC()
{
  uint64_t result;

  result = qword_1EF2B2BE0;
  if (!qword_1EF2B2BE0)
  {
    sub_1BAE89B6C();
    sub_1BAE89BB0();
    sub_1BAE89BF4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE89B6C()
{
  unint64_t result;

  result = qword_1EF2B2BE8;
  if (!qword_1EF2B2BE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC718, &_s14descr1E72CBE69O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2BE8);
  }
  return result;
}

unint64_t sub_1BAE89BB0()
{
  unint64_t result;

  result = qword_1EF2B2BF0;
  if (!qword_1EF2B2BF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC6C8, &_s14descr1E72CBE69O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2BF0);
  }
  return result;
}

unint64_t sub_1BAE89BF4()
{
  unint64_t result;

  result = qword_1EF2B2BF8;
  if (!qword_1EF2B2BF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC6A0, &_s14descr1E72CBE69O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2BF8);
  }
  return result;
}

void sub_1BAE89C38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2C08)
  {
    sub_1BAE89CB0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2C18, (uint64_t (*)(uint64_t))sub_1BAE89CB0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2C08);
  }
}

void sub_1BAE89CB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2C10)
  {
    sub_1BAE89AEC();
    sub_1BA4A2870(&qword_1EF2B2C00, (uint64_t (*)(uint64_t))sub_1BAE89AEC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2C10);
  }
}

void sub_1BAE89D28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A80)
  {
    sub_1BAE89DA0();
    sub_1BA4A2870(&qword_1ED3D0DC0, (uint64_t (*)(uint64_t))sub_1BAE89DA0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A80);
  }
}

uint64_t sub_1BAE89DA0()
{
  uint64_t result;

  result = qword_1ED3D0DC8;
  if (!qword_1ED3D0DC8)
  {
    sub_1BAE89E20();
    sub_1BA54F27C();
    sub_1BAE89E64();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE89E20()
{
  unint64_t result;

  result = qword_1ED3D0710;
  if (!qword_1ED3D0710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC668, &_s10CodingKeysON_156);
    atomic_store(result, (unint64_t *)&qword_1ED3D0710);
  }
  return result;
}

unint64_t sub_1BAE89E64()
{
  unint64_t result;

  result = qword_1ED3D0708;
  if (!qword_1ED3D0708)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC5F0, &_s10CodingKeysON_156);
    atomic_store(result, (unint64_t *)&qword_1ED3D0708);
  }
  return result;
}

void sub_1BAE89EA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDB8)
  {
    sub_1BAE89F20();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE910, (uint64_t (*)(uint64_t))sub_1BAE89F20, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDB8);
  }
}

void sub_1BAE89F20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE918)
  {
    sub_1BAE89DA0();
    sub_1BA4A2870(&qword_1ED3D0DC0, (uint64_t (*)(uint64_t))sub_1BAE89DA0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE918);
  }
}

uint64_t sub_1BAE89F98()
{
  uint64_t v0;

  sub_1BAE70D80(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(_BYTE *)(v0 + 41), (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  return swift_deallocObject();
}

unint64_t sub_1BAE89FD8()
{
  unint64_t result;

  result = qword_1ED3C42D0;
  if (!qword_1ED3C42D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLiveActivityBinding.Command, &type metadata for FormatLiveActivityBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED3C42D0);
  }
  return result;
}

unint64_t sub_1BAE8A01C()
{
  unint64_t result;

  result = qword_1ED3A66A8;
  if (!qword_1ED3A66A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Command, &type metadata for FormatPuzzleBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED3A66A8);
  }
  return result;
}

unint64_t sub_1BAE8A060()
{
  unint64_t result;

  result = qword_1ED39D2C0;
  if (!qword_1ED39D2C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrackBinding.Command, &type metadata for FormatAudioTrackBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED39D2C0);
  }
  return result;
}

unint64_t sub_1BAE8A0A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B34C8;
  if (!qword_1ED3B34C8)
  {
    sub_1BA50CAA8(255, &qword_1ED3B34D0, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B34C8);
  }
  return result;
}

void sub_1BAE8A10C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C98)
  {
    sub_1BAE8A184();
    sub_1BA4A2870(&qword_1ED3D11F0, (uint64_t (*)(uint64_t))sub_1BAE8A184, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C98);
  }
}

uint64_t sub_1BAE8A184()
{
  uint64_t result;

  result = qword_1ED3D11F8;
  if (!qword_1ED3D11F8)
  {
    sub_1BAE8A204();
    sub_1BA51B49C();
    sub_1BAE8A248();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8A204()
{
  unint64_t result;

  result = qword_1ED3D16C0;
  if (!qword_1ED3D16C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC490, &_s10CodingKeysON_155);
    atomic_store(result, (unint64_t *)&qword_1ED3D16C0);
  }
  return result;
}

unint64_t sub_1BAE8A248()
{
  unint64_t result;

  result = qword_1ED3D16B8;
  if (!qword_1ED3D16B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC418, &_s10CodingKeysON_155);
    atomic_store(result, (unint64_t *)&qword_1ED3D16B8);
  }
  return result;
}

void sub_1BAE8A28C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE050)
  {
    sub_1BAE8A304();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEE50, (uint64_t (*)(uint64_t))sub_1BAE8A304, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE050);
  }
}

void sub_1BAE8A304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEE58)
  {
    sub_1BAE8A184();
    sub_1BA4A2870(&qword_1ED3D11F0, (uint64_t (*)(uint64_t))sub_1BAE8A184, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEE58);
  }
}

unint64_t sub_1BAE8A37C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CD618;
  if (!qword_1ED3CD618)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CD618);
  }
  return result;
}

uint64_t sub_1BAE8A3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5, type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

unint64_t sub_1BAE8A440()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2C20;
  if (!qword_1EF2B2C20)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2C20);
  }
  return result;
}

unint64_t sub_1BAE8A4A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A9100;
  if (!qword_1ED3A9100)
  {
    sub_1BA50CAA8(255, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A9100);
  }
  return result;
}

unint64_t sub_1BAE8A510()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A90D8;
  if (!qword_1ED3A90D8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A90D8);
  }
  return result;
}

unint64_t sub_1BAE8A578()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CD638;
  if (!qword_1ED3CD638)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CD638);
  }
  return result;
}

uint64_t sub_1BAE8A5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v6;

  v6 = a5(0, a2, a3, a4, type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1BAE8A628()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DB0)
  {
    sub_1BAE8A6A0();
    sub_1BA4A2870(&qword_1ED3D1420, (uint64_t (*)(uint64_t))sub_1BAE8A6A0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DB0);
  }
}

uint64_t sub_1BAE8A6A0()
{
  uint64_t result;

  result = qword_1ED3D1428;
  if (!qword_1ED3D1428)
  {
    sub_1BAE8A720();
    sub_1BAE8A764();
    sub_1BAE8A7A8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8A720()
{
  unint64_t result;

  result = qword_1ED3D1928;
  if (!qword_1ED3D1928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC308, &_s10CodingKeysON_154);
    atomic_store(result, (unint64_t *)&qword_1ED3D1928);
  }
  return result;
}

unint64_t sub_1BAE8A764()
{
  unint64_t result;

  result = qword_1ED3CE5B0;
  if (!qword_1ED3CE5B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC2B8, &_s10CodingKeysON_154);
    atomic_store(result, (unint64_t *)&qword_1ED3CE5B0);
  }
  return result;
}

unint64_t sub_1BAE8A7A8()
{
  unint64_t result;

  result = qword_1ED3D1920;
  if (!qword_1ED3D1920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC290, &_s10CodingKeysON_154);
    atomic_store(result, (unint64_t *)&qword_1ED3D1920);
  }
  return result;
}

unint64_t sub_1BAE8A7EC()
{
  unint64_t result;

  result = qword_1ED3CF550;
  if (!qword_1ED3CF550)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSetAuxiliary, &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliary);
    atomic_store(result, (unint64_t *)&qword_1ED3CF550);
  }
  return result;
}

void sub_1BAE8A830(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1D0)
  {
    sub_1BAE8A8A8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF148, (uint64_t (*)(uint64_t))sub_1BAE8A8A8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1D0);
  }
}

void sub_1BAE8A8A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF150)
  {
    sub_1BAE8A6A0();
    sub_1BA4A2870(&qword_1ED3D1420, (uint64_t (*)(uint64_t))sub_1BAE8A6A0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF150);
  }
}

void sub_1BAE8A920()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DD0)
  {
    sub_1BAE8A998();
    sub_1BA4A2870(&qword_1ED3D1460, (uint64_t (*)(uint64_t))sub_1BAE8A998, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DD0);
  }
}

uint64_t sub_1BAE8A998()
{
  uint64_t result;

  result = qword_1ED3D1468;
  if (!qword_1ED3D1468)
  {
    sub_1BAE8AA18();
    sub_1BAE8AA5C();
    sub_1BAE8AAA0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8AA18()
{
  unint64_t result;

  result = qword_1ED3D1980;
  if (!qword_1ED3D1980)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC258, &_s10CodingKeysON_153);
    atomic_store(result, (unint64_t *)&qword_1ED3D1980);
  }
  return result;
}

unint64_t sub_1BAE8AA5C()
{
  unint64_t result;

  result = qword_1ED3CF538;
  if (!qword_1ED3CF538)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC208, &_s10CodingKeysON_153);
    atomic_store(result, (unint64_t *)&qword_1ED3CF538);
  }
  return result;
}

unint64_t sub_1BAE8AAA0()
{
  unint64_t result;

  result = qword_1ED3D1978;
  if (!qword_1ED3D1978)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC1E0, &_s10CodingKeysON_153);
    atomic_store(result, (unint64_t *)&qword_1ED3D1978);
  }
  return result;
}

unint64_t sub_1BAE8AAE4()
{
  unint64_t result;

  result = qword_1ED3C5028;
  if (!qword_1ED3C5028)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet, &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet);
    atomic_store(result, (unint64_t *)&qword_1ED3C5028);
  }
  return result;
}

void sub_1BAE8AB28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE200)
  {
    sub_1BAE8ABA0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF1A8, (uint64_t (*)(uint64_t))sub_1BAE8ABA0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE200);
  }
}

void sub_1BAE8ABA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF1B0)
  {
    sub_1BAE8A998();
    sub_1BA4A2870(&qword_1ED3D1460, (uint64_t (*)(uint64_t))sub_1BAE8A998, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF1B0);
  }
}

void sub_1BAE8AC18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2C30)
  {
    sub_1BAE8AC90();
    sub_1BA4A2870(&qword_1EF2B2C58, (uint64_t (*)(uint64_t))sub_1BAE8AC90, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2C30);
  }
}

uint64_t sub_1BAE8AC90()
{
  uint64_t result;

  result = qword_1EF2B2C38;
  if (!qword_1EF2B2C38)
  {
    sub_1BAE8AD10();
    sub_1BAE8AD54();
    sub_1BAE8AD98();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8AD10()
{
  unint64_t result;

  result = qword_1EF2B2C40;
  if (!qword_1EF2B2C40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC1A8, &_s10CodingKeysON_152);
    atomic_store(result, (unint64_t *)&qword_1EF2B2C40);
  }
  return result;
}

unint64_t sub_1BAE8AD54()
{
  unint64_t result;

  result = qword_1EF2B2C48;
  if (!qword_1EF2B2C48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC158, &_s10CodingKeysON_152);
    atomic_store(result, (unint64_t *)&qword_1EF2B2C48);
  }
  return result;
}

unint64_t sub_1BAE8AD98()
{
  unint64_t result;

  result = qword_1EF2B2C50;
  if (!qword_1EF2B2C50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC130, &_s10CodingKeysON_152);
    atomic_store(result, (unint64_t *)&qword_1EF2B2C50);
  }
  return result;
}

void sub_1BAE8ADDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2C60)
  {
    sub_1BAE8AE54();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2C70, (uint64_t (*)(uint64_t))sub_1BAE8AE54, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2C60);
  }
}

void sub_1BAE8AE54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2C68)
  {
    sub_1BAE8AC90();
    sub_1BA4A2870(&qword_1EF2B2C58, (uint64_t (*)(uint64_t))sub_1BAE8AC90, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2C68);
  }
}

uint64_t sub_1BAE8AECC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564496B636F6C62 && a2 == 0xEF7265696669746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73776F726874 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAE8B170(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7365676465 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7465736E69 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x706143656E696CLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74746150656E696CLL && a2 == 0xEB000000006E7265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1BAE8B43C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701734764 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6D756C6F63 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x68746150656C6966 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646C696863 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAE8B698(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95F8D0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAE8B818(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x73614D6574617473 && a2 == 0xEA0000000000736BLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x614E6E6F69746361 && a2 == 0xEA0000000000656DLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x73657250676E6F6CLL && a2 == 0xEF6E6F6974634173 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB961C00 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x726F697661686562 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x7449656372756F73 && a2 == 0xEB00000000736D65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 19;
    else
      return 20;
  }
}

uint64_t sub_1BAE8C018(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAE8C0F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E4965676465 && a2 == 0xEA00000000007374 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAE8C2B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6168706C61 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAE8C38C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6973736572707865 && a2 == 0xEA00000000006E6FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE8C4D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656E6F706D6F63 && a2 == 0xE900000000000074;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F74617265706FLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAE8C680(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656E6F706D6F63 && a2 == 0xE900000000000074;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE8C7C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1937207154 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746172 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE8C8F4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465726975716572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746C7561666564 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7461636572706564 && a2 == 0xEA00000000006465 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x72656C69706D6F63 && a2 == 0xED00007367616C46 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95B4E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1BAE8CD1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746F6C73 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6F6F727377656ELL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95B4E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72656C69706D6F63 && a2 == 0xED00007367616C46 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAE8CFAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D6E6F7269766E65 && a2 == 0xEC00000073746E65;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95B4E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE8D100(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 24945 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6967617473 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746375646F7270 && a2 == 0xEA00000000006E6FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAE8D29C()
{
  return 9;
}

uint64_t sub_1BAE8D2A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F66736E617274 && a2 == 0xEA0000000000736DLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95B4E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1BAE8D63C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261696C69787561 && a2 == 0xE900000000000079 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95B4E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAE8D7F4(_QWORD *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  void *v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v31 = type metadata accessor for FormatContent(0);
  MEMORY[0x1E0C80A78](v31);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29 - v5;
  sub_1BAEF42C0();
  v32 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = sub_1BAE8DCA0();
  sub_1BA4A2870(&qword_1EF2B2CA8, (uint64_t (*)(uint64_t))sub_1BAE8DCA0, (uint64_t)&unk_1BB8FFC6C);
  v12 = v33;
  sub_1BB87468C();
  v13 = v12;
  if (v12)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v13);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v33 = v6;
  v30 = v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14 = sub_1BB872874();
  v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  v16 = v32;
  if ((v15 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v22 = *((_QWORD *)v19 - 2);
      v23 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      v25 = v8;
      MEMORY[0x1E0C80A78](v24);
      *(&v29 - 4) = (uint64_t)&_s10CodingKeysON_151;
      *(&v29 - 3) = sub_1BAE8DD20();
      *(&v29 - 2) = sub_1BAE8DD64();
      *(&v29 - 1) = sub_1BAE8DDA8();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71130((uint64_t)&unk_1E726B308);
      swift_release_n();
      sub_1BA98D1F0();
      v13 = (void *)swift_allocError();
      *(_QWORD *)v27 = v22;
      *(_QWORD *)(v27 + 8) = v23;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v32);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4A2870(&qword_1EF2B2570, type metadata accessor for FormatContent, (uint64_t)&protocol conformance descriptor for FormatContent);
  v34 = 0;
  v35 = 0;
  v36 = 0;
  v20 = (uint64_t)v33;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  v21 = (uint64_t)v30;
  sub_1BA5193C4(v20, (uint64_t)v30, type metadata accessor for FormatContent);
  type metadata accessor for FormatContentBackground();
  KeyPath = swift_allocObject();
  sub_1BA5193C4(v21, KeyPath + OBJC_IVAR____TtC8NewsFeed23FormatContentBackground_content, type metadata accessor for FormatContent);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

void sub_1BAE8DBB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2C78)
  {
    sub_1BAE8DC28();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2CB0, (uint64_t (*)(uint64_t))sub_1BAE8DC28, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2C78);
  }
}

void sub_1BAE8DC28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2C80)
  {
    sub_1BAE8DCA0();
    sub_1BA4A2870(&qword_1EF2B2CA8, (uint64_t (*)(uint64_t))sub_1BAE8DCA0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2C80);
  }
}

uint64_t sub_1BAE8DCA0()
{
  uint64_t result;

  result = qword_1EF2B2C88;
  if (!qword_1EF2B2C88)
  {
    sub_1BAE8DD20();
    sub_1BAE8DD64();
    sub_1BAE8DDA8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8DD20()
{
  unint64_t result;

  result = qword_1EF2B2C90;
  if (!qword_1EF2B2C90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC0D0, &_s10CodingKeysON_151);
    atomic_store(result, (unint64_t *)&qword_1EF2B2C90);
  }
  return result;
}

unint64_t sub_1BAE8DD64()
{
  unint64_t result;

  result = qword_1EF2B2C98;
  if (!qword_1EF2B2C98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC080, &_s10CodingKeysON_151);
    atomic_store(result, (unint64_t *)&qword_1EF2B2C98);
  }
  return result;
}

unint64_t sub_1BAE8DDA8()
{
  unint64_t result;

  result = qword_1EF2B2CA0;
  if (!qword_1EF2B2CA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC058, &_s10CodingKeysON_151);
    atomic_store(result, (unint64_t *)&qword_1EF2B2CA0);
  }
  return result;
}

uint64_t sub_1BAE8DDEC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAE8DDF8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE38138);
}

void sub_1BAE8DE04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE658)
  {
    sub_1BAE8DE7C();
    sub_1BA4A2870(&qword_1ED3AD9F8, (uint64_t (*)(uint64_t))sub_1BAE8DE7C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE658);
  }
}

uint64_t sub_1BAE8DE7C()
{
  uint64_t result;

  result = qword_1ED3ADA00;
  if (!qword_1ED3ADA00)
  {
    sub_1BAE8DEFC();
    sub_1BAE8DF40();
    sub_1BAE8DF84();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8DEFC()
{
  unint64_t result;

  result = qword_1ED3ACA70;
  if (!qword_1ED3ACA70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CC020, &_s10CodingKeysON_150);
    atomic_store(result, (unint64_t *)&qword_1ED3ACA70);
  }
  return result;
}

unint64_t sub_1BAE8DF40()
{
  unint64_t result;

  result = qword_1ED3A9FA8;
  if (!qword_1ED3A9FA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBFD0, &_s10CodingKeysON_150);
    atomic_store(result, (unint64_t *)&qword_1ED3A9FA8);
  }
  return result;
}

unint64_t sub_1BAE8DF84()
{
  unint64_t result;

  result = qword_1ED3AE380;
  if (!qword_1ED3AE380)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBFA8, &_s10CodingKeysON_150);
    atomic_store(result, (unint64_t *)&qword_1ED3AE380);
  }
  return result;
}

void sub_1BAE8DFC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1D8)
  {
    sub_1BAE8E040();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF158, (uint64_t (*)(uint64_t))sub_1BAE8E040, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1D8);
  }
}

void sub_1BAE8E040()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF160)
  {
    sub_1BAE8DE7C();
    sub_1BA4A2870(&qword_1ED3AD9F8, (uint64_t (*)(uint64_t))sub_1BAE8DE7C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF160);
  }
}

void sub_1BAE8E0B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A18)
  {
    sub_1BAE8E130();
    sub_1BA4A2870(&qword_1ED3D0CF0, (uint64_t (*)(uint64_t))sub_1BAE8E130, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A18);
  }
}

uint64_t sub_1BAE8E130()
{
  uint64_t result;

  result = qword_1ED3D0CF8;
  if (!qword_1ED3D0CF8)
  {
    sub_1BAE8E1B0();
    sub_1BA53F0DC();
    sub_1BAE8E1F4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8E1B0()
{
  unint64_t result;

  result = qword_1ED3D0630;
  if (!qword_1ED3D0630)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBF48, &_s10CodingKeysON_149);
    atomic_store(result, (unint64_t *)&qword_1ED3D0630);
  }
  return result;
}

unint64_t sub_1BAE8E1F4()
{
  unint64_t result;

  result = qword_1ED3D0628;
  if (!qword_1ED3D0628)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBED0, &_s10CodingKeysON_149);
    atomic_store(result, (unint64_t *)&qword_1ED3D0628);
  }
  return result;
}

void sub_1BAE8E238(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD40)
  {
    sub_1BAE8E2B0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE820, (uint64_t (*)(uint64_t))sub_1BAE8E2B0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD40);
  }
}

void sub_1BAE8E2B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE828)
  {
    sub_1BAE8E130();
    sub_1BA4A2870(&qword_1ED3D0CF0, (uint64_t (*)(uint64_t))sub_1BAE8E130, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE828);
  }
}

void sub_1BAE8E328()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A20)
  {
    sub_1BAE8E3A0();
    sub_1BA4A2870(&qword_1ED3D0D00, (uint64_t (*)(uint64_t))sub_1BAE8E3A0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A20);
  }
}

uint64_t sub_1BAE8E3A0()
{
  uint64_t result;

  result = qword_1ED3D0D08;
  if (!qword_1ED3D0D08)
  {
    sub_1BAE8E420();
    sub_1BA6124BC();
    sub_1BAE8E464();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8E420()
{
  unint64_t result;

  result = qword_1ED3D0640;
  if (!qword_1ED3D0640)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBE98, &_s10CodingKeysON_148);
    atomic_store(result, (unint64_t *)&qword_1ED3D0640);
  }
  return result;
}

unint64_t sub_1BAE8E464()
{
  unint64_t result;

  result = qword_1ED3D0638;
  if (!qword_1ED3D0638)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBE20, &_s10CodingKeysON_148);
    atomic_store(result, (unint64_t *)&qword_1ED3D0638);
  }
  return result;
}

void sub_1BAE8E4A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD48)
  {
    sub_1BAE8E520();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE830, (uint64_t (*)(uint64_t))sub_1BAE8E520, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD48);
  }
}

void sub_1BAE8E520()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE838)
  {
    sub_1BAE8E3A0();
    sub_1BA4A2870(&qword_1ED3D0D00, (uint64_t (*)(uint64_t))sub_1BAE8E3A0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE838);
  }
}

unint64_t sub_1BAE8E598()
{
  unint64_t result;

  result = qword_1EF2B2CB8;
  if (!qword_1EF2B2CB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F9744, &_s4TextO10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1EF2B2CB8);
  }
  return result;
}

void sub_1BAE8E5DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CA0)
  {
    sub_1BAE8E654();
    sub_1BA4A2870(&qword_1ED3D1200, (uint64_t (*)(uint64_t))sub_1BAE8E654, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CA0);
  }
}

uint64_t sub_1BAE8E654()
{
  uint64_t result;

  result = qword_1ED3D1208;
  if (!qword_1ED3D1208)
  {
    sub_1BAE8E6D4();
    sub_1BA508AA8();
    sub_1BAE8E718();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8E6D4()
{
  unint64_t result;

  result = qword_1ED3D16D0;
  if (!qword_1ED3D16D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBDE8, &_s10CodingKeysON_147);
    atomic_store(result, (unint64_t *)&qword_1ED3D16D0);
  }
  return result;
}

unint64_t sub_1BAE8E718()
{
  unint64_t result;

  result = qword_1ED3D16C8;
  if (!qword_1ED3D16C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBD70, &_s10CodingKeysON_147);
    atomic_store(result, (unint64_t *)&qword_1ED3D16C8);
  }
  return result;
}

void sub_1BAE8E75C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE058)
  {
    sub_1BAE8E7D4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEE60, (uint64_t (*)(uint64_t))sub_1BAE8E7D4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE058);
  }
}

void sub_1BAE8E7D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEE68)
  {
    sub_1BAE8E654();
    sub_1BA4A2870(&qword_1ED3D1200, (uint64_t (*)(uint64_t))sub_1BAE8E654, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEE68);
  }
}

unint64_t sub_1BAE8E84C()
{
  unint64_t result;

  result = qword_1ED3A10F8;
  if (!qword_1ED3A10F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Custom, &type metadata for FormatDateFormat.Custom);
    atomic_store(result, (unint64_t *)&qword_1ED3A10F8);
  }
  return result;
}

void sub_1BAE8E890()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE690)
  {
    sub_1BAE8E908();
    sub_1BA4A2870(&qword_1ED3ADA68, (uint64_t (*)(uint64_t))sub_1BAE8E908, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE690);
  }
}

uint64_t sub_1BAE8E908()
{
  uint64_t result;

  result = qword_1ED3ADA70;
  if (!qword_1ED3ADA70)
  {
    sub_1BAE8E988();
    sub_1BAE8E9CC();
    sub_1BAE8EA10();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8E988()
{
  unint64_t result;

  result = qword_1ED3AD278;
  if (!qword_1ED3AD278)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBD10, &_s10CodingKeysON_146);
    atomic_store(result, (unint64_t *)&qword_1ED3AD278);
  }
  return result;
}

unint64_t sub_1BAE8E9CC()
{
  unint64_t result;

  result = qword_1ED3A41C0;
  if (!qword_1ED3A41C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBCC0, &_s10CodingKeysON_146);
    atomic_store(result, (unint64_t *)&qword_1ED3A41C0);
  }
  return result;
}

unint64_t sub_1BAE8EA10()
{
  unint64_t result;

  result = qword_1ED3AD270;
  if (!qword_1ED3AD270)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBC98, &_s10CodingKeysON_146);
    atomic_store(result, (unint64_t *)&qword_1ED3AD270);
  }
  return result;
}

unint64_t sub_1BAE8EA54()
{
  unint64_t result;

  result = qword_1ED3A41A8;
  if (!qword_1ED3A41A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Style, &type metadata for FormatDateFormat.Style);
    atomic_store(result, (unint64_t *)&qword_1ED3A41A8);
  }
  return result;
}

unint64_t sub_1BAE8EA98()
{
  unint64_t result;

  result = qword_1ED3A41E0;
  if (!qword_1ED3A41E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Context, &type metadata for FormatDateFormat.Context);
    atomic_store(result, (unint64_t *)&qword_1ED3A41E0);
  }
  return result;
}

void sub_1BAE8EADC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE318)
  {
    sub_1BAE8EB54();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF3D0, (uint64_t (*)(uint64_t))sub_1BAE8EB54, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE318);
  }
}

void sub_1BAE8EB54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF3D8)
  {
    sub_1BAE8E908();
    sub_1BA4A2870(&qword_1ED3ADA68, (uint64_t (*)(uint64_t))sub_1BAE8E908, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF3D8);
  }
}

unint64_t sub_1BAE8EBCC()
{
  unint64_t result;

  result = qword_1EF2B2CC0;
  if (!qword_1EF2B2CC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.DateTime, &type metadata for FormatSportsEventBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2B2CC0);
  }
  return result;
}

unint64_t sub_1BAE8EC10()
{
  unint64_t result;

  result = qword_1EF2B2CC8;
  if (!qword_1EF2B2CC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.DateTime, &type metadata for FormatGroupBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2B2CC8);
  }
  return result;
}

unint64_t sub_1BAE8EC54()
{
  unint64_t result;

  result = qword_1EF2B2CD0;
  if (!qword_1EF2B2CD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.DateTime, &type metadata for FormatIssueBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2B2CD0);
  }
  return result;
}

unint64_t sub_1BAE8EC98()
{
  unint64_t result;

  result = qword_1EF2B2CD8;
  if (!qword_1EF2B2CD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.DateTime, &type metadata for FormatPuzzleBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2B2CD8);
  }
  return result;
}

unint64_t sub_1BAE8ECDC()
{
  unint64_t result;

  result = qword_1ED3A2A40;
  if (!qword_1ED3A2A40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBC48, &_s10CodingTypeON_105);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A40);
  }
  return result;
}

void sub_1BAE8ED20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19A8)
  {
    sub_1BAE8ED98();
    sub_1BA4A2870(&qword_1ED3D0C10, (uint64_t (*)(uint64_t))sub_1BAE8ED98, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19A8);
  }
}

uint64_t sub_1BAE8ED98()
{
  uint64_t result;

  result = qword_1ED3D0C18;
  if (!qword_1ED3D0C18)
  {
    sub_1BAE8EE18();
    sub_1BA551050();
    sub_1BAE8EE5C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8EE18()
{
  unint64_t result;

  result = qword_1ED3D04F8;
  if (!qword_1ED3D04F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBC10, &_s10CodingKeysON_145);
    atomic_store(result, (unint64_t *)&qword_1ED3D04F8);
  }
  return result;
}

unint64_t sub_1BAE8EE5C()
{
  unint64_t result;

  result = qword_1ED3D04F0;
  if (!qword_1ED3D04F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBB98, &_s10CodingKeysON_145);
    atomic_store(result, (unint64_t *)&qword_1ED3D04F0);
  }
  return result;
}

void sub_1BAE8EEA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCB0)
  {
    sub_1BAE8EF18();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE708, (uint64_t (*)(uint64_t))sub_1BAE8EF18, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCB0);
  }
}

void sub_1BAE8EF18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE710)
  {
    sub_1BAE8ED98();
    sub_1BA4A2870(&qword_1ED3D0C10, (uint64_t (*)(uint64_t))sub_1BAE8ED98, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE710);
  }
}

uint64_t sub_1BAE8EF90()
{
  uint64_t result;

  result = qword_1EF2B2CE0;
  if (!qword_1EF2B2CE0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3C85B8, (uint64_t (*)(void))sub_1BA829604, (uint64_t)&type metadata for FormatDecorationContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAE8F030();
    sub_1BA829604();
    type metadata accessor for FormatUnboundValue();
  }
  return result;
}

unint64_t sub_1BAE8F030()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2CE8;
  if (!qword_1EF2B2CE8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3C85B8, (uint64_t (*)(void))sub_1BA829604, (uint64_t)&type metadata for FormatDecorationContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2CE8);
  }
  return result;
}

uint64_t sub_1BAE8F09C()
{
  return objectdestroy_189Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

unint64_t sub_1BAE8F0A8()
{
  unint64_t result;

  result = qword_1ED39CBD0;
  if (!qword_1ED39CBD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPattern, &type metadata for FormatPattern);
    atomic_store(result, (unint64_t *)&qword_1ED39CBD0);
  }
  return result;
}

uint64_t sub_1BAE8F0EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAE8F114(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1BAE8F140(uint64_t a1)
{
  swift_release();
  return a1;
}

void sub_1BAE8F16C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B80)
  {
    sub_1BAE8F1E4();
    sub_1BA4A2870(&qword_1ED3D0FC0, (uint64_t (*)(uint64_t))sub_1BAE8F1E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B80);
  }
}

uint64_t sub_1BAE8F1E4()
{
  uint64_t result;

  result = qword_1ED3D0FC8;
  if (!qword_1ED3D0FC8)
  {
    sub_1BAE8F264();
    sub_1BA5A798C();
    sub_1BAE8F2A8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8F264()
{
  unint64_t result;

  result = qword_1ED3D0930;
  if (!qword_1ED3D0930)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBB38, &_s10CodingKeysON_144);
    atomic_store(result, (unint64_t *)&qword_1ED3D0930);
  }
  return result;
}

unint64_t sub_1BAE8F2A8()
{
  unint64_t result;

  result = qword_1ED3D0928;
  if (!qword_1ED3D0928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBAC0, &_s10CodingKeysON_144);
    atomic_store(result, (unint64_t *)&qword_1ED3D0928);
  }
  return result;
}

void sub_1BAE8F2EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADED0)
  {
    sub_1BAE8F364();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEB50, (uint64_t (*)(uint64_t))sub_1BAE8F364, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADED0);
  }
}

void sub_1BAE8F364()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEB58)
  {
    sub_1BAE8F1E4();
    sub_1BA4A2870(&qword_1ED3D0FC0, (uint64_t (*)(uint64_t))sub_1BAE8F1E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEB58);
  }
}

unint64_t sub_1BAE8F3DC()
{
  unint64_t result;

  result = qword_1EF2B2CF8;
  if (!qword_1EF2B2CF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBA98, &_s10CodingTypeON_103);
    atomic_store(result, (unint64_t *)&qword_1EF2B2CF8);
  }
  return result;
}

unint64_t sub_1BAE8F420()
{
  unint64_t result;

  result = qword_1EF2B2D00;
  if (!qword_1EF2B2D00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBA70, &_s10CodingTypeON_102);
    atomic_store(result, (unint64_t *)&qword_1EF2B2D00);
  }
  return result;
}

void sub_1BAE8F464()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19B0)
  {
    sub_1BAE8F4DC();
    sub_1BA4A2870(&qword_1ED3D0C20, (uint64_t (*)(uint64_t))sub_1BAE8F4DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19B0);
  }
}

uint64_t sub_1BAE8F4DC()
{
  uint64_t result;

  result = qword_1ED3D0C28;
  if (!qword_1ED3D0C28)
  {
    sub_1BAE8F55C();
    sub_1BA512988();
    sub_1BAE8F5A0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8F55C()
{
  unint64_t result;

  result = qword_1ED3D0520;
  if (!qword_1ED3D0520)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CBA38, &_s10CodingKeysON_143);
    atomic_store(result, (unint64_t *)&qword_1ED3D0520);
  }
  return result;
}

unint64_t sub_1BAE8F5A0()
{
  unint64_t result;

  result = qword_1ED3D0518;
  if (!qword_1ED3D0518)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB9C0, &_s10CodingKeysON_143);
    atomic_store(result, (unint64_t *)&qword_1ED3D0518);
  }
  return result;
}

void sub_1BAE8F5E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCB8)
  {
    sub_1BAE8F65C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE718, (uint64_t (*)(uint64_t))sub_1BAE8F65C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCB8);
  }
}

void sub_1BAE8F65C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE720)
  {
    sub_1BAE8F4DC();
    sub_1BA4A2870(&qword_1ED3D0C20, (uint64_t (*)(uint64_t))sub_1BAE8F4DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE720);
  }
}

void sub_1BAE8F6D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C28)
  {
    sub_1BAE8F74C();
    sub_1BA4A2870(&qword_1ED3D1110, (uint64_t (*)(uint64_t))sub_1BAE8F74C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C28);
  }
}

uint64_t sub_1BAE8F74C()
{
  uint64_t result;

  result = qword_1ED3D1118;
  if (!qword_1ED3D1118)
  {
    sub_1BAE8F7CC();
    sub_1BA5ABBB0();
    sub_1BAE8F810();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8F7CC()
{
  unint64_t result;

  result = qword_1ED3D0AB0;
  if (!qword_1ED3D0AB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB988, &_s10CodingKeysON_142);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AB0);
  }
  return result;
}

unint64_t sub_1BAE8F810()
{
  unint64_t result;

  result = qword_1ED3D0AA8;
  if (!qword_1ED3D0AA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB910, &_s10CodingKeysON_142);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AA8);
  }
  return result;
}

void sub_1BAE8F854(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFC8)
  {
    sub_1BAE8F8CC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AED40, (uint64_t (*)(uint64_t))sub_1BAE8F8CC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFC8);
  }
}

void sub_1BAE8F8CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AED48)
  {
    sub_1BAE8F74C();
    sub_1BA4A2870(&qword_1ED3D1110, (uint64_t (*)(uint64_t))sub_1BAE8F74C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AED48);
  }
}

void sub_1BAE8F944()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D18)
  {
    sub_1BAE8F9BC();
    sub_1BA4A2870(&qword_1ED3D12F0, (uint64_t (*)(uint64_t))sub_1BAE8F9BC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D18);
  }
}

uint64_t sub_1BAE8F9BC()
{
  uint64_t result;

  result = qword_1ED3D12F8;
  if (!qword_1ED3D12F8)
  {
    sub_1BAE8FA3C();
    sub_1BA7F52E0();
    sub_1BAE8FA80();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE8FA3C()
{
  unint64_t result;

  result = qword_1ED3D17D8;
  if (!qword_1ED3D17D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB8D8, &_s10CodingKeysON_141);
    atomic_store(result, (unint64_t *)&qword_1ED3D17D8);
  }
  return result;
}

unint64_t sub_1BAE8FA80()
{
  unint64_t result;

  result = qword_1ED3D17D0;
  if (!qword_1ED3D17D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB860, &_s10CodingKeysON_141);
    atomic_store(result, (unint64_t *)&qword_1ED3D17D0);
  }
  return result;
}

void sub_1BAE8FAC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0F8)
  {
    sub_1BAE8FB3C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEFA0, (uint64_t (*)(uint64_t))sub_1BAE8FB3C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0F8);
  }
}

void sub_1BAE8FB3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEFA8)
  {
    sub_1BAE8F9BC();
    sub_1BA4A2870(&qword_1ED3D12F0, (uint64_t (*)(uint64_t))sub_1BAE8F9BC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEFA8);
  }
}

uint64_t sub_1BAE8FBB4()
{
  return objectdestroy_11Tm_1((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_11Tm_1(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

unint64_t sub_1BAE8FBF8()
{
  unint64_t result;

  result = qword_1ED39EB58;
  if (!qword_1ED39EB58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpression, &type metadata for FormatFrameExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39EB58);
  }
  return result;
}

uint64_t sub_1BAE8FC3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BAA376C0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

unint64_t sub_1BAE8FC70()
{
  unint64_t result;

  result = qword_1ED39D6F8;
  if (!qword_1ED39D6F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategoryExpression, &type metadata for FormatContentSizeCategoryExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39D6F8);
  }
  return result;
}

uint64_t sub_1BAE8FCBC()
{
  return objectdestroy_24Tm();
}

uint64_t sub_1BAE8FCC4()
{
  uint64_t v0;

  sub_1BA752A0C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(unsigned __int16 *)(v0 + 120) | (*(unsigned __int8 *)(v0 + 122) << 16));
  return swift_deallocObject();
}

uint64_t sub_1BAE8FD1C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAE8FD50()
{
  uint64_t v0;

  sub_1BA636D30(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_WORD *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1BAE8FD7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  swift_bridgeObjectRetain();
  sub_1BAA37668(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_1BAE8FDD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  swift_bridgeObjectRelease();
  sub_1BAA376C0(v2, v3, v4, v5);
  return a1;
}

uint64_t sub_1BAE8FE2C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16));
  return a1;
}

uint64_t sub_1BAE8FE90(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int16 *)(a1 + 32));
  return a1;
}

unint64_t sub_1BAE8FEC8()
{
  unint64_t result;

  result = qword_1ED3B4038;
  if (!qword_1ED3B4038)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileKind, &type metadata for FormatFileKind);
    atomic_store(result, (unint64_t *)&qword_1ED3B4038);
  }
  return result;
}

unint64_t sub_1BAE8FF0C()
{
  unint64_t result;

  result = qword_1EF2B2D08;
  if (!qword_1EF2B2D08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageList, &type metadata for FormatPackageList);
    atomic_store(result, (unint64_t *)&qword_1EF2B2D08);
  }
  return result;
}

uint64_t sub_1BAE8FF50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_BYTE *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6C0C20(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_1BAE8FFD4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAE90040(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAE90090(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 96);
  v3 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA771864(v2, v3);
  return a1;
}

uint64_t sub_1BAE90134(uint64_t result)
{
  *(_QWORD *)(result + 104) = *(_QWORD *)(result + 104) & 1 | 0xC000000000000000;
  return result;
}

uint64_t sub_1BAE90148(uint64_t result)
{
  *(_QWORD *)(result + 104) = *(_QWORD *)(result + 104) & 1 | 0x8000000000000000;
  return result;
}

uint64_t sub_1BAE9015C(uint64_t result)
{
  *(_QWORD *)(result + 104) = *(_QWORD *)(result + 104) & 1 | 0x4000000000000000;
  return result;
}

uint64_t sub_1BAE90170(uint64_t result)
{
  *(_QWORD *)(result + 104) &= 1uLL;
  return result;
}

void sub_1BAE90180()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2D10)
  {
    sub_1BAE901F8();
    sub_1BA4A2870(&qword_1EF2B2D30, (uint64_t (*)(uint64_t))sub_1BAE901F8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2D10);
  }
}

uint64_t sub_1BAE901F8()
{
  uint64_t result;

  result = qword_1EF2B2D18;
  if (!qword_1EF2B2D18)
  {
    sub_1BAE90278();
    sub_1BA4FC44C();
    sub_1BAE902BC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE90278()
{
  unint64_t result;

  result = qword_1EF2B2D20;
  if (!qword_1EF2B2D20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB7D8, &_s10CodingKeysON_140);
    atomic_store(result, (unint64_t *)&qword_1EF2B2D20);
  }
  return result;
}

unint64_t sub_1BAE902BC()
{
  unint64_t result;

  result = qword_1EF2B2D28;
  if (!qword_1EF2B2D28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB760, &_s10CodingKeysON_140);
    atomic_store(result, (unint64_t *)&qword_1EF2B2D28);
  }
  return result;
}

void sub_1BAE90300(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2D38)
  {
    sub_1BAE90378();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2D48, (uint64_t (*)(uint64_t))sub_1BAE90378, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2D38);
  }
}

void sub_1BAE90378()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2D40)
  {
    sub_1BAE901F8();
    sub_1BA4A2870(&qword_1EF2B2D30, (uint64_t (*)(uint64_t))sub_1BAE901F8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2D40);
  }
}

unint64_t sub_1BAE903F0()
{
  unint64_t result;

  result = qword_1ED3A6180;
  if (!qword_1ED3A6180)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB738, &_s10CodingTypeON_99);
    atomic_store(result, (unint64_t *)&qword_1ED3A6180);
  }
  return result;
}

void sub_1BAE90434()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5C8)
  {
    sub_1BAE904AC();
    sub_1BA4A2870(&qword_1ED3AD8C8, (uint64_t (*)(uint64_t))sub_1BAE904AC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5C8);
  }
}

uint64_t sub_1BAE904AC()
{
  uint64_t result;

  result = qword_1ED3AD8D0;
  if (!qword_1ED3AD8D0)
  {
    sub_1BAE9052C();
    sub_1BAE90570();
    sub_1BAE905B4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9052C()
{
  unint64_t result;

  result = qword_1ED3AD6A0;
  if (!qword_1ED3AD6A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB700, &_s10CodingKeysON_139);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6A0);
  }
  return result;
}

unint64_t sub_1BAE90570()
{
  unint64_t result;

  result = qword_1ED3AD698;
  if (!qword_1ED3AD698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB6B0, &_s10CodingKeysON_139);
    atomic_store(result, (unint64_t *)&qword_1ED3AD698);
  }
  return result;
}

unint64_t sub_1BAE905B4()
{
  unint64_t result;

  result = qword_1ED3AD690;
  if (!qword_1ED3AD690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB688, &_s10CodingKeysON_139);
    atomic_store(result, (unint64_t *)&qword_1ED3AD690);
  }
  return result;
}

unint64_t sub_1BAE905F8()
{
  unint64_t result;

  result = qword_1ED3ACA10;
  if (!qword_1ED3ACA10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFocusPosition, &type metadata for FormatFocusPosition);
    atomic_store(result, (unint64_t *)&qword_1ED3ACA10);
  }
  return result;
}

void sub_1BAE9063C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADED8)
  {
    sub_1BAE906B4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEB60, (uint64_t (*)(uint64_t))sub_1BAE906B4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADED8);
  }
}

void sub_1BAE906B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEB68)
  {
    sub_1BAE904AC();
    sub_1BA4A2870(&qword_1ED3AD8C8, (uint64_t (*)(uint64_t))sub_1BAE904AC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEB68);
  }
}

unint64_t sub_1BAE9072C()
{
  unint64_t result;

  result = qword_1EF2B2D50;
  if (!qword_1EF2B2D50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB660, &_s10CodingTypeON_98);
    atomic_store(result, (unint64_t *)&qword_1EF2B2D50);
  }
  return result;
}

void sub_1BAE90770()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AF8)
  {
    sub_1BAE907E8();
    sub_1BA4A2870(&qword_1ED3D0EB0, (uint64_t (*)(uint64_t))sub_1BAE907E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AF8);
  }
}

uint64_t sub_1BAE907E8()
{
  uint64_t result;

  result = qword_1ED3D0EB8;
  if (!qword_1ED3D0EB8)
  {
    sub_1BAE90868();
    sub_1BA4E697C();
    sub_1BAE908AC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE90868()
{
  unint64_t result;

  result = qword_1ED3D0818;
  if (!qword_1ED3D0818)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB628, &_s10CodingKeysON_138);
    atomic_store(result, (unint64_t *)&qword_1ED3D0818);
  }
  return result;
}

unint64_t sub_1BAE908AC()
{
  unint64_t result;

  result = qword_1ED3D0810;
  if (!qword_1ED3D0810)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB5B0, &_s10CodingKeysON_138);
    atomic_store(result, (unint64_t *)&qword_1ED3D0810);
  }
  return result;
}

void sub_1BAE908F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE30)
  {
    sub_1BAE90968();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEA10, (uint64_t (*)(uint64_t))sub_1BAE90968, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE30);
  }
}

void sub_1BAE90968()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEA18)
  {
    sub_1BAE907E8();
    sub_1BA4A2870(&qword_1ED3D0EB0, (uint64_t (*)(uint64_t))sub_1BAE907E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEA18);
  }
}

void sub_1BAE909E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2D58)
  {
    sub_1BAE90A58();
    sub_1BA4A2870(&qword_1EF2B2D80, (uint64_t (*)(uint64_t))sub_1BAE90A58, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2D58);
  }
}

uint64_t sub_1BAE90A58()
{
  uint64_t result;

  result = qword_1EF2B2D60;
  if (!qword_1EF2B2D60)
  {
    sub_1BAE90AD8();
    sub_1BAE90B1C();
    sub_1BAE90B60();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE90AD8()
{
  unint64_t result;

  result = qword_1EF2B2D68;
  if (!qword_1EF2B2D68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB578, &_s10CodingKeysON_137);
    atomic_store(result, (unint64_t *)&qword_1EF2B2D68);
  }
  return result;
}

unint64_t sub_1BAE90B1C()
{
  unint64_t result;

  result = qword_1EF2B2D70;
  if (!qword_1EF2B2D70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB528, &_s10CodingKeysON_137);
    atomic_store(result, (unint64_t *)&qword_1EF2B2D70);
  }
  return result;
}

unint64_t sub_1BAE90B60()
{
  unint64_t result;

  result = qword_1EF2B2D78;
  if (!qword_1EF2B2D78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB500, &_s10CodingKeysON_137);
    atomic_store(result, (unint64_t *)&qword_1EF2B2D78);
  }
  return result;
}

void sub_1BAE90BA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2D88)
  {
    sub_1BAE90C1C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2D98, (uint64_t (*)(uint64_t))sub_1BAE90C1C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2D88);
  }
}

void sub_1BAE90C1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2D90)
  {
    sub_1BAE90A58();
    sub_1BA4A2870(&qword_1EF2B2D80, (uint64_t (*)(uint64_t))sub_1BAE90A58, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2D90);
  }
}

void sub_1BAE90C94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BA0)
  {
    sub_1BAE90D0C();
    sub_1BA4A2870(&qword_1ED3D1000, (uint64_t (*)(uint64_t))sub_1BAE90D0C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BA0);
  }
}

uint64_t sub_1BAE90D0C()
{
  uint64_t result;

  result = qword_1ED3D1008;
  if (!qword_1ED3D1008)
  {
    sub_1BAE90D8C();
    sub_1BA532540();
    sub_1BAE90DD0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE90D8C()
{
  unint64_t result;

  result = qword_1ED3D0978;
  if (!qword_1ED3D0978)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB4C8, &_s10CodingKeysON_136);
    atomic_store(result, (unint64_t *)&qword_1ED3D0978);
  }
  return result;
}

unint64_t sub_1BAE90DD0()
{
  unint64_t result;

  result = qword_1ED3D0970;
  if (!qword_1ED3D0970)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB450, &_s10CodingKeysON_136);
    atomic_store(result, (unint64_t *)&qword_1ED3D0970);
  }
  return result;
}

void sub_1BAE90E14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF18)
  {
    sub_1BAE90E8C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEBE0, (uint64_t (*)(uint64_t))sub_1BAE90E8C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF18);
  }
}

void sub_1BAE90E8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEBE8)
  {
    sub_1BAE90D0C();
    sub_1BA4A2870(&qword_1ED3D1000, (uint64_t (*)(uint64_t))sub_1BAE90D0C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEBE8);
  }
}

void sub_1BAE90F04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B88)
  {
    sub_1BAE90F7C();
    sub_1BA4A2870(&qword_1ED3D0FD0, (uint64_t (*)(uint64_t))sub_1BAE90F7C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B88);
  }
}

uint64_t sub_1BAE90F7C()
{
  uint64_t result;

  result = qword_1ED3D0FD8;
  if (!qword_1ED3D0FD8)
  {
    sub_1BAE90FFC();
    sub_1BA5B4E08();
    sub_1BAE91040();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE90FFC()
{
  unint64_t result;

  result = qword_1ED3D0940;
  if (!qword_1ED3D0940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB3F0, &_s10CodingKeysON_135);
    atomic_store(result, (unint64_t *)&qword_1ED3D0940);
  }
  return result;
}

unint64_t sub_1BAE91040()
{
  unint64_t result;

  result = qword_1ED3D0938;
  if (!qword_1ED3D0938)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB378, &_s10CodingKeysON_135);
    atomic_store(result, (unint64_t *)&qword_1ED3D0938);
  }
  return result;
}

void sub_1BAE91084(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADEE0)
  {
    sub_1BAE910FC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEB70, (uint64_t (*)(uint64_t))sub_1BAE910FC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADEE0);
  }
}

void sub_1BAE910FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEB78)
  {
    sub_1BAE90F7C();
    sub_1BA4A2870(&qword_1ED3D0FD0, (uint64_t (*)(uint64_t))sub_1BAE90F7C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEB78);
  }
}

void sub_1BAE91174()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5D0)
  {
    sub_1BAE911EC();
    sub_1BA4A2870(&qword_1ED3AD8D8, (uint64_t (*)(uint64_t))sub_1BAE911EC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5D0);
  }
}

uint64_t sub_1BAE911EC()
{
  uint64_t result;

  result = qword_1ED3AD8E0;
  if (!qword_1ED3AD8E0)
  {
    sub_1BAE9126C();
    sub_1BAE912B0();
    sub_1BAE912F4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9126C()
{
  unint64_t result;

  result = qword_1ED3AD6D0;
  if (!qword_1ED3AD6D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB340, &_s10CodingKeysON_134);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6D0);
  }
  return result;
}

unint64_t sub_1BAE912B0()
{
  unint64_t result;

  result = qword_1ED3A6B08;
  if (!qword_1ED3A6B08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB2F0, &_s10CodingKeysON_134);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B08);
  }
  return result;
}

unint64_t sub_1BAE912F4()
{
  unint64_t result;

  result = qword_1ED3AD6C8;
  if (!qword_1ED3AD6C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB2C8, &_s10CodingKeysON_134);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6C8);
  }
  return result;
}

void sub_1BAE91338(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADEE8)
  {
    sub_1BAE913B0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEB80, (uint64_t (*)(uint64_t))sub_1BAE913B0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADEE8);
  }
}

void sub_1BAE913B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEB88)
  {
    sub_1BAE911EC();
    sub_1BA4A2870(&qword_1ED3AD8D8, (uint64_t (*)(uint64_t))sub_1BAE911EC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEB88);
  }
}

void sub_1BAE91428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE650)
  {
    sub_1BAE914A0();
    sub_1BA4A2870(&qword_1ED3AD9E8, (uint64_t (*)(uint64_t))sub_1BAE914A0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE650);
  }
}

uint64_t sub_1BAE914A0()
{
  uint64_t result;

  result = qword_1ED3AD9F0;
  if (!qword_1ED3AD9F0)
  {
    sub_1BAE91520();
    sub_1BAE91564();
    sub_1BAE915A8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE91520()
{
  unint64_t result;

  result = qword_1ED3AE378;
  if (!qword_1ED3AE378)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB290, &_s10CodingKeysON_133);
    atomic_store(result, (unint64_t *)&qword_1ED3AE378);
  }
  return result;
}

unint64_t sub_1BAE91564()
{
  unint64_t result;

  result = qword_1ED3A9918;
  if (!qword_1ED3A9918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB240, &_s10CodingKeysON_133);
    atomic_store(result, (unint64_t *)&qword_1ED3A9918);
  }
  return result;
}

unint64_t sub_1BAE915A8()
{
  unint64_t result;

  result = qword_1ED3AE370;
  if (!qword_1ED3AE370)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB218, &_s10CodingKeysON_133);
    atomic_store(result, (unint64_t *)&qword_1ED3AE370);
  }
  return result;
}

void sub_1BAE915EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE170)
  {
    sub_1BAE91664();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF088, (uint64_t (*)(uint64_t))sub_1BAE91664, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE170);
  }
}

void sub_1BAE91664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF090)
  {
    sub_1BAE914A0();
    sub_1BA4A2870(&qword_1ED3AD9E8, (uint64_t (*)(uint64_t))sub_1BAE914A0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF090);
  }
}

void sub_1BAE916DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2DA0)
  {
    sub_1BAE91754();
    sub_1BA4A2870(&qword_1EF2B2DC8, (uint64_t (*)(uint64_t))sub_1BAE91754, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2DA0);
  }
}

uint64_t sub_1BAE91754()
{
  uint64_t result;

  result = qword_1EF2B2DA8;
  if (!qword_1EF2B2DA8)
  {
    sub_1BAE917D4();
    sub_1BAE91818();
    sub_1BAE9185C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE917D4()
{
  unint64_t result;

  result = qword_1EF2B2DB0;
  if (!qword_1EF2B2DB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB1E0, &_s10CodingKeysON_132);
    atomic_store(result, (unint64_t *)&qword_1EF2B2DB0);
  }
  return result;
}

unint64_t sub_1BAE91818()
{
  unint64_t result;

  result = qword_1EF2B2DB8;
  if (!qword_1EF2B2DB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB190, &_s10CodingKeysON_132);
    atomic_store(result, (unint64_t *)&qword_1EF2B2DB8);
  }
  return result;
}

unint64_t sub_1BAE9185C()
{
  unint64_t result;

  result = qword_1EF2B2DC0;
  if (!qword_1EF2B2DC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB168, &_s10CodingKeysON_132);
    atomic_store(result, (unint64_t *)&qword_1EF2B2DC0);
  }
  return result;
}

void sub_1BAE918A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2DD0)
  {
    sub_1BAE91918();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2DE0, (uint64_t (*)(uint64_t))sub_1BAE91918, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2DD0);
  }
}

void sub_1BAE91918()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2DD8)
  {
    sub_1BAE91754();
    sub_1BA4A2870(&qword_1EF2B2DC8, (uint64_t (*)(uint64_t))sub_1BAE91754, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2DD8);
  }
}

void sub_1BAE91990()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2DE8)
  {
    sub_1BAE91A08();
    sub_1BA4A2870(&qword_1EF2B2E10, (uint64_t (*)(uint64_t))sub_1BAE91A08, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2DE8);
  }
}

uint64_t sub_1BAE91A08()
{
  uint64_t result;

  result = qword_1EF2B2DF0;
  if (!qword_1EF2B2DF0)
  {
    sub_1BAE91A88();
    sub_1BAE91ACC();
    sub_1BAE91B10();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE91A88()
{
  unint64_t result;

  result = qword_1EF2B2DF8;
  if (!qword_1EF2B2DF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB130, &_s10CodingKeysON_131);
    atomic_store(result, (unint64_t *)&qword_1EF2B2DF8);
  }
  return result;
}

unint64_t sub_1BAE91ACC()
{
  unint64_t result;

  result = qword_1EF2B2E00;
  if (!qword_1EF2B2E00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB0E0, &_s10CodingKeysON_131);
    atomic_store(result, (unint64_t *)&qword_1EF2B2E00);
  }
  return result;
}

unint64_t sub_1BAE91B10()
{
  unint64_t result;

  result = qword_1EF2B2E08;
  if (!qword_1EF2B2E08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB0B8, &_s10CodingKeysON_131);
    atomic_store(result, (unint64_t *)&qword_1EF2B2E08);
  }
  return result;
}

void sub_1BAE91B54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2E18)
  {
    sub_1BAE91BCC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2E28, (uint64_t (*)(uint64_t))sub_1BAE91BCC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2E18);
  }
}

void sub_1BAE91BCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2E20)
  {
    sub_1BAE91A08();
    sub_1BA4A2870(&qword_1EF2B2E10, (uint64_t (*)(uint64_t))sub_1BAE91A08, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2E20);
  }
}

uint64_t sub_1BAE91C44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAE91D24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F756E69746E6F63 && a2 == 0xEA00000000007375;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAE91E10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7372656E726F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F756E69746E6F63 && a2 == 0xEA00000000007375 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAE91FBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E696C616373 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAE92144(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAE92230(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1BAE92688(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAE92828(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C79745365746164 && a2 == 0xE900000000000065;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C797453656D6974 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574616C706D6574 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAE92AB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73646E6F636573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D695465746164 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE92BF4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E6D756C6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 7235952 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1BAE92FFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7368564 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1952867692 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6F74746F62 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE931D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E6D756E65 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6465726975716572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746C7561666564 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7365736163 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461636572706564 && a2 == 0xEA00000000006465 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x72656C69706D6F63 && a2 == 0xED00007367616C46 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95B4E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_1BAE936BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAE937A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65736E4965676465 && a2 == 0xEA00000000007374;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE938F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E616C73 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6564617267 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6769736564 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE93AE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x664F7265626D756ELL && a2 == 0xED000073656E694CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE93C44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE93D70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657A695378616DLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE93EAC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BB959E20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6369676F6CLL && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE93FE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F74617265706FLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61726765746E69 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE941E0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 120 && a2 == 0xE100000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 121 && a2 == 0xE100000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_1BAE943A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD50)
  {
    sub_1BAE94420();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE840, (uint64_t (*)(uint64_t))sub_1BAE94420, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD50);
  }
}

void sub_1BAE94420()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE848)
  {
    sub_1BAE94498();
    sub_1BA4A2870(&qword_1ED3D0D10, (uint64_t (*)(uint64_t))sub_1BAE94498, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE848);
  }
}

uint64_t sub_1BAE94498()
{
  uint64_t result;

  result = qword_1ED3D0D18;
  if (!qword_1ED3D0D18)
  {
    sub_1BAE94518();
    sub_1BA502A0C();
    sub_1BAE9455C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE94518()
{
  unint64_t result;

  result = qword_1ED3D0650;
  if (!qword_1ED3D0650)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB080, &_s10CodingKeysON_130);
    atomic_store(result, (unint64_t *)&qword_1ED3D0650);
  }
  return result;
}

unint64_t sub_1BAE9455C()
{
  unint64_t result;

  result = qword_1ED3D0648;
  if (!qword_1ED3D0648)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB008, &_s10CodingKeysON_130);
    atomic_store(result, (unint64_t *)&qword_1ED3D0648);
  }
  return result;
}

void sub_1BAE945A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E40)
  {
    sub_1BAE94618();
    sub_1BA4A2870(&qword_1ED3D1540, (uint64_t (*)(uint64_t))sub_1BAE94618, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E40);
  }
}

uint64_t sub_1BAE94618()
{
  uint64_t result;

  result = qword_1ED3D1548;
  if (!qword_1ED3D1548)
  {
    sub_1BAE94698();
    sub_1BA5995D4();
    sub_1BAE946DC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE94698()
{
  unint64_t result;

  result = qword_1ED3D02A8;
  if (!qword_1ED3D02A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAFD0, &_s10CodingKeysON_129);
    atomic_store(result, (unint64_t *)&qword_1ED3D02A8);
  }
  return result;
}

unint64_t sub_1BAE946DC()
{
  unint64_t result;

  result = qword_1ED3D02A0;
  if (!qword_1ED3D02A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAF58, &_s10CodingKeysON_129);
    atomic_store(result, (unint64_t *)&qword_1ED3D02A0);
  }
  return result;
}

void sub_1BAE94720(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE278)
  {
    sub_1BAE94798();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF290, (uint64_t (*)(uint64_t))sub_1BAE94798, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE278);
  }
}

void sub_1BAE94798()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF298)
  {
    sub_1BAE94618();
    sub_1BA4A2870(&qword_1ED3D1540, (uint64_t (*)(uint64_t))sub_1BAE94618, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF298);
  }
}

void sub_1BAE94810()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BD8)
  {
    sub_1BAE94888();
    sub_1BA4A2870(&qword_1ED3D1070, (uint64_t (*)(uint64_t))sub_1BAE94888, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BD8);
  }
}

uint64_t sub_1BAE94888()
{
  uint64_t result;

  result = qword_1ED3D1078;
  if (!qword_1ED3D1078)
  {
    sub_1BAE94908();
    sub_1BA583470();
    sub_1BAE9494C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE94908()
{
  unint64_t result;

  result = qword_1ED3D0A00;
  if (!qword_1ED3D0A00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAF20, &_s10CodingKeysON_128);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A00);
  }
  return result;
}

unint64_t sub_1BAE9494C()
{
  unint64_t result;

  result = qword_1ED3D09F8;
  if (!qword_1ED3D09F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAEA8, &_s10CodingKeysON_128);
    atomic_store(result, (unint64_t *)&qword_1ED3D09F8);
  }
  return result;
}

void sub_1BAE94990(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF60)
  {
    sub_1BAE94A08();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEC70, (uint64_t (*)(uint64_t))sub_1BAE94A08, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF60);
  }
}

void sub_1BAE94A08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEC78)
  {
    sub_1BAE94888();
    sub_1BA4A2870(&qword_1ED3D1070, (uint64_t (*)(uint64_t))sub_1BAE94888, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEC78);
  }
}

void sub_1BAE94A80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2E30)
  {
    sub_1BAE94AF8();
    sub_1BA4A2870(&qword_1EF2B2E58, (uint64_t (*)(uint64_t))sub_1BAE94AF8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2E30);
  }
}

uint64_t sub_1BAE94AF8()
{
  uint64_t result;

  result = qword_1EF2B2E38;
  if (!qword_1EF2B2E38)
  {
    sub_1BAE94B78();
    sub_1BAE94BBC();
    sub_1BAE94C00();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE94B78()
{
  unint64_t result;

  result = qword_1EF2B2E40;
  if (!qword_1EF2B2E40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAE70, &_s10CodingKeysON_127);
    atomic_store(result, (unint64_t *)&qword_1EF2B2E40);
  }
  return result;
}

unint64_t sub_1BAE94BBC()
{
  unint64_t result;

  result = qword_1EF2B2E48;
  if (!qword_1EF2B2E48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAE20, &_s10CodingKeysON_127);
    atomic_store(result, (unint64_t *)&qword_1EF2B2E48);
  }
  return result;
}

unint64_t sub_1BAE94C00()
{
  unint64_t result;

  result = qword_1EF2B2E50;
  if (!qword_1EF2B2E50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CADF8, &_s10CodingKeysON_127);
    atomic_store(result, (unint64_t *)&qword_1EF2B2E50);
  }
  return result;
}

void sub_1BAE94C44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2E60)
  {
    sub_1BAE94CBC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2E70, (uint64_t (*)(uint64_t))sub_1BAE94CBC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2E60);
  }
}

void sub_1BAE94CBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2E68)
  {
    sub_1BAE94AF8();
    sub_1BA4A2870(&qword_1EF2B2E58, (uint64_t (*)(uint64_t))sub_1BAE94AF8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2E68);
  }
}

void sub_1BAE94D34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DF0)
  {
    sub_1BAE94DAC();
    sub_1BA4A2870(&qword_1ED3D14A0, (uint64_t (*)(uint64_t))sub_1BAE94DAC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DF0);
  }
}

uint64_t sub_1BAE94DAC()
{
  uint64_t result;

  result = qword_1ED3D14A8;
  if (!qword_1ED3D14A8)
  {
    sub_1BAE94E2C();
    sub_1BA5EF7A0();
    sub_1BAE94E70();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE94E2C()
{
  unint64_t result;

  result = qword_1ED3D0198;
  if (!qword_1ED3D0198)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CADC0, &_s10CodingKeysON_126);
    atomic_store(result, (unint64_t *)&qword_1ED3D0198);
  }
  return result;
}

unint64_t sub_1BAE94E70()
{
  unint64_t result;

  result = qword_1ED3D0190;
  if (!qword_1ED3D0190)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAD48, &_s10CodingKeysON_126);
    atomic_store(result, (unint64_t *)&qword_1ED3D0190);
  }
  return result;
}

unint64_t sub_1BAE94EB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C46C0;
  if (!qword_1ED3C46C0)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C46C8, (void (*)(void))sub_1BA82A400, (void (*)(void))sub_1BA82A444);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C46C0);
  }
  return result;
}

void sub_1BAE94F1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE220)
  {
    sub_1BAE94F94();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE220);
  }
}

void sub_1BAE94F94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF1F0)
  {
    sub_1BAE94DAC();
    sub_1BA4A2870(&qword_1ED3D14A0, (uint64_t (*)(uint64_t))sub_1BAE94DAC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF1F0);
  }
}

void sub_1BAE9500C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C78)
  {
    sub_1BAE95084();
    sub_1BA4A2870(&qword_1ED3D11B0, (uint64_t (*)(uint64_t))sub_1BAE95084, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C78);
  }
}

uint64_t sub_1BAE95084()
{
  uint64_t result;

  result = qword_1ED3D11B8;
  if (!qword_1ED3D11B8)
  {
    sub_1BAE95104();
    sub_1BA557D3C();
    sub_1BAE95148();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE95104()
{
  unint64_t result;

  result = qword_1ED3D1678;
  if (!qword_1ED3D1678)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAD10, &_s10CodingKeysON_125);
    atomic_store(result, (unint64_t *)&qword_1ED3D1678);
  }
  return result;
}

unint64_t sub_1BAE95148()
{
  unint64_t result;

  result = qword_1ED3D1670;
  if (!qword_1ED3D1670)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAC98, &_s10CodingKeysON_125);
    atomic_store(result, (unint64_t *)&qword_1ED3D1670);
  }
  return result;
}

void sub_1BAE9518C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE020)
  {
    sub_1BAE95204();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEDF0, (uint64_t (*)(uint64_t))sub_1BAE95204, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE020);
  }
}

void sub_1BAE95204()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEDF8)
  {
    sub_1BAE95084();
    sub_1BA4A2870(&qword_1ED3D11B0, (uint64_t (*)(uint64_t))sub_1BAE95084, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEDF8);
  }
}

unint64_t sub_1BAE9527C()
{
  unint64_t result;

  result = qword_1EF2B2E78;
  if (!qword_1EF2B2E78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPaywallBinding.Bool, &type metadata for FormatPaywallBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B2E78);
  }
  return result;
}

unint64_t sub_1BAE952C0()
{
  unint64_t result;

  result = qword_1ED3A61C8;
  if (!qword_1ED3A61C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAC48, &_s10CodingTypeON_95);
    atomic_store(result, (unint64_t *)&qword_1ED3A61C8);
  }
  return result;
}

unint64_t sub_1BAE95304()
{
  unint64_t result;

  result = qword_1EF2B2E80;
  if (!qword_1EF2B2E80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAC20, &_s10CodingTypeON_94);
    atomic_store(result, (unint64_t *)&qword_1EF2B2E80);
  }
  return result;
}

unint64_t sub_1BAE95348()
{
  unint64_t result;

  result = qword_1ED3A61A8;
  if (!qword_1ED3A61A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CABF8, &_s10CodingTypeON_93);
    atomic_store(result, (unint64_t *)&qword_1ED3A61A8);
  }
  return result;
}

unint64_t sub_1BAE9538C()
{
  unint64_t result;

  result = qword_1EF2B2E88;
  if (!qword_1EF2B2E88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Image, &type metadata for FormatSportsEventBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2B2E88);
  }
  return result;
}

unint64_t sub_1BAE953D0()
{
  unint64_t result;

  result = qword_1EF2B2E90;
  if (!qword_1EF2B2E90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CABA8, &_s10CodingTypeON_91);
    atomic_store(result, (unint64_t *)&qword_1EF2B2E90);
  }
  return result;
}

unint64_t sub_1BAE95414()
{
  unint64_t result;

  result = qword_1ED3D2B00;
  if (!qword_1ED3D2B00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAB80, &_s10CodingTypeON_90);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B00);
  }
  return result;
}

unint64_t sub_1BAE95458()
{
  unint64_t result;

  result = qword_1ED3AD758;
  if (!qword_1ED3AD758)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.SourceItemTip, &type metadata for FormatWebEmbedBinding.SourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1ED3AD758);
  }
  return result;
}

unint64_t sub_1BAE9549C()
{
  unint64_t result;

  result = qword_1ED3D2AE0;
  if (!qword_1ED3D2AE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.SourceItemTip, &type metadata for FormatTagBinding.SourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1ED3D2AE0);
  }
  return result;
}

unint64_t sub_1BAE954E0()
{
  unint64_t result;

  result = qword_1EF2B2E98;
  if (!qword_1EF2B2E98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAB58, &_s10CodingTypeON_89);
    atomic_store(result, (unint64_t *)&qword_1EF2B2E98);
  }
  return result;
}

unint64_t sub_1BAE95524()
{
  unint64_t result;

  result = qword_1EF2B2EA0;
  if (!qword_1EF2B2EA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Temperature, &type metadata for FormatWeatherBinding.Temperature);
    atomic_store(result, (unint64_t *)&qword_1EF2B2EA0);
  }
  return result;
}

unint64_t sub_1BAE95568()
{
  unint64_t result;

  result = qword_1ED3CA490;
  if (!qword_1ED3CA490)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAB30, &_s10CodingTypeON_88);
    atomic_store(result, (unint64_t *)&qword_1ED3CA490);
  }
  return result;
}

unint64_t sub_1BAE955AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C85C0;
  if (!qword_1ED3C85C0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3C85C8, (uint64_t (*)(void))sub_1BA9275C8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C85C0);
  }
  return result;
}

uint64_t sub_1BAE95614(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65706F6373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x636E657265666572 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE95828(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE95A34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6581861 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE95B60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574696877 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE95C94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E6D756C6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x79536E6D756C6F63 && a2 == 0xEC0000006D657473 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73656C797473 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x794274726F73 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7365707974 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB95BC00 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6D65726975716572 && a2 == 0xEC00000073746E65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_1BAE962B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73646E696BLL && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BAE96400(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2D0)
  {
    sub_1BAE96478();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2D0);
  }
}

void sub_1BAE96478()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF348)
  {
    sub_1BAE964F0();
    sub_1BA4A2870(&qword_1ED3D15E0, (uint64_t (*)(uint64_t))sub_1BAE964F0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF348);
  }
}

uint64_t sub_1BAE964F0()
{
  uint64_t result;

  result = qword_1ED3D15E8;
  if (!qword_1ED3D15E8)
  {
    sub_1BAE96570();
    sub_1BA5C87F0();
    sub_1BAE965B4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE96570()
{
  unint64_t result;

  result = qword_1ED3D0348;
  if (!qword_1ED3D0348)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAAF8, &_s14descr1E72CBFF1V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0348);
  }
  return result;
}

unint64_t sub_1BAE965B4()
{
  unint64_t result;

  result = qword_1ED3D0340;
  if (!qword_1ED3D0340)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAA80, &_s14descr1E72CBFF1V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0340);
  }
  return result;
}

uint64_t sub_1BAE965F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1802723693 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

void sub_1BAE96B6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDC0)
  {
    sub_1BAE96BE4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE920, (uint64_t (*)(uint64_t))sub_1BAE96BE4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDC0);
  }
}

void sub_1BAE96BE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE928)
  {
    sub_1BAE96C5C();
    sub_1BA4A2870(&qword_1ED3D0DD0, (uint64_t (*)(uint64_t))sub_1BAE96C5C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE928);
  }
}

uint64_t sub_1BAE96C5C()
{
  uint64_t result;

  result = qword_1ED3D0DD8;
  if (!qword_1ED3D0DD8)
  {
    sub_1BAE96CDC();
    sub_1BA513B68();
    sub_1BAE96D20();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE96CDC()
{
  unint64_t result;

  result = qword_1ED3D0720;
  if (!qword_1ED3D0720)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CAA48, &_s10CodingKeysON_124);
    atomic_store(result, (unint64_t *)&qword_1ED3D0720);
  }
  return result;
}

unint64_t sub_1BAE96D20()
{
  unint64_t result;

  result = qword_1ED3D0718;
  if (!qword_1ED3D0718)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA9D0, &_s10CodingKeysON_124);
    atomic_store(result, (unint64_t *)&qword_1ED3D0718);
  }
  return result;
}

uint64_t sub_1BAE96D64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_1BAE96F7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFD0)
  {
    sub_1BAE96FF4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AED50, (uint64_t (*)(uint64_t))sub_1BAE96FF4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFD0);
  }
}

void sub_1BAE96FF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AED58)
  {
    sub_1BAE9706C();
    sub_1BA4A2870(&qword_1ED3D1120, (uint64_t (*)(uint64_t))sub_1BAE9706C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AED58);
  }
}

uint64_t sub_1BAE9706C()
{
  uint64_t result;

  result = qword_1ED3D1128;
  if (!qword_1ED3D1128)
  {
    sub_1BAE970EC();
    sub_1BA572920();
    sub_1BAE97130();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE970EC()
{
  unint64_t result;

  result = qword_1ED3D0AC0;
  if (!qword_1ED3D0AC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA998, &_s10CodingKeysON_123);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AC0);
  }
  return result;
}

unint64_t sub_1BAE97130()
{
  unint64_t result;

  result = qword_1ED3D0AB8;
  if (!qword_1ED3D0AB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA920, &_s10CodingKeysON_123);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AB8);
  }
  return result;
}

void sub_1BAE97174()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C38)
  {
    sub_1BAE971EC();
    sub_1BA4A2870(&qword_1ED3D1130, (uint64_t (*)(uint64_t))sub_1BAE971EC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C38);
  }
}

uint64_t sub_1BAE971EC()
{
  uint64_t result;

  result = qword_1ED3D1138;
  if (!qword_1ED3D1138)
  {
    sub_1BAE9726C();
    sub_1BA5697D0();
    sub_1BAE972B0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9726C()
{
  unint64_t result;

  result = qword_1ED3D0AD0;
  if (!qword_1ED3D0AD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA8E8, &_s10CodingKeysON_122);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AD0);
  }
  return result;
}

unint64_t sub_1BAE972B0()
{
  unint64_t result;

  result = qword_1ED3D0AC8;
  if (!qword_1ED3D0AC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA870, &_s10CodingKeysON_122);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AC8);
  }
  return result;
}

void sub_1BAE972F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFD8)
  {
    sub_1BAE9736C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AED60, (uint64_t (*)(uint64_t))sub_1BAE9736C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFD8);
  }
}

void sub_1BAE9736C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AED68)
  {
    sub_1BAE971EC();
    sub_1BA4A2870(&qword_1ED3D1130, (uint64_t (*)(uint64_t))sub_1BAE971EC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AED68);
  }
}

unint64_t sub_1BAE973E4()
{
  unint64_t result;

  result = qword_1ED3C9DF8;
  if (!qword_1ED3C9DF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA848, &_s10CodingTypeON_87);
    atomic_store(result, (unint64_t *)&qword_1ED3C9DF8);
  }
  return result;
}

unint64_t sub_1BAE97428()
{
  unint64_t result;

  result = qword_1ED3AD490;
  if (!qword_1ED3AD490)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelector, &type metadata for FormatSelector);
    atomic_store(result, (unint64_t *)&qword_1ED3AD490);
  }
  return result;
}

unint64_t sub_1BAE9746C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AD420;
  if (!qword_1ED3AD420)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AD428, (uint64_t (*)(void))sub_1BAE97428, (uint64_t)&type metadata for FormatSelector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AD420);
  }
  return result;
}

unint64_t sub_1BAE974D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3CF7F0;
  if (!qword_1ED3CF7F0)
  {
    sub_1BA4AD288(255, &qword_1ED3CF7E8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAE9754C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3CF7F0);
  }
  return result;
}

unint64_t sub_1BAE9754C()
{
  unint64_t result;

  result = qword_1ED3CC070;
  if (!qword_1ED3CC070)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystemKind, &type metadata for FormatGroupColumnSystemKind);
    atomic_store(result, (unint64_t *)&qword_1ED3CC070);
  }
  return result;
}

unint64_t sub_1BAE97590()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B2EB0;
  if (!qword_1EF2B2EB0)
  {
    sub_1BA4AD288(255, &qword_1EF2B2EA8, (uint64_t)&type metadata for FormatPlatform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAE97608();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B2EB0);
  }
  return result;
}

unint64_t sub_1BAE97608()
{
  unint64_t result;

  result = qword_1EF2B2EB8;
  if (!qword_1EF2B2EB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPlatform, &type metadata for FormatPlatform);
    atomic_store(result, (unint64_t *)&qword_1EF2B2EB8);
  }
  return result;
}

unint64_t sub_1BAE9764C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3CF730;
  if (!qword_1ED3CF730)
  {
    sub_1BA4AD288(255, &qword_1ED3CF728, (uint64_t)&type metadata for FormatBundle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAE976C4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3CF730);
  }
  return result;
}

unint64_t sub_1BAE976C4()
{
  unint64_t result;

  result = qword_1ED3C6788;
  if (!qword_1ED3C6788)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBundle, &type metadata for FormatBundle);
    atomic_store(result, (unint64_t *)&qword_1ED3C6788);
  }
  return result;
}

uint64_t sub_1BAE97708(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1BAE979D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAE97BC8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x426F547370696C63 && a2 == 0xED000073646E756FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1BAE97FFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x426F547370696C63 && a2 == 0xED000073646E756FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void sub_1BAE98358(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE280)
  {
    sub_1BAE983D0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF2A0, (uint64_t (*)(uint64_t))sub_1BAE983D0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE280);
  }
}

void sub_1BAE983D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF2A8)
  {
    sub_1BAE98448();
    sub_1BA4A2870(&qword_1ED3D1550, (uint64_t (*)(uint64_t))sub_1BAE98448, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF2A8);
  }
}

uint64_t sub_1BAE98448()
{
  uint64_t result;

  result = qword_1ED3D1558;
  if (!qword_1ED3D1558)
  {
    sub_1BAE984C8();
    sub_1BA71CAA8();
    sub_1BAE9850C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE984C8()
{
  unint64_t result;

  result = qword_1ED3D02B8;
  if (!qword_1ED3D02B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA810, &_s10CodingKeysON_121);
    atomic_store(result, (unint64_t *)&qword_1ED3D02B8);
  }
  return result;
}

unint64_t sub_1BAE9850C()
{
  unint64_t result;

  result = qword_1ED3D02B0;
  if (!qword_1ED3D02B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA798, &_s10CodingKeysON_121);
    atomic_store(result, (unint64_t *)&qword_1ED3D02B0);
  }
  return result;
}

uint64_t sub_1BAE98550(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t KeyPath;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  char v71;
  __int128 v72;
  char v73;
  unint64_t v74;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  *(_QWORD *)&v67 = v2;
  v62 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v64 = (char *)&v52 - v3;
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v65 = v4;
  v61 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v63 = (char *)&v52 - v5;
  sub_1BAEE91B8(0, (unint64_t *)&qword_1ED3BBEC0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v68 = (uint64_t)&v52 - v9;
  sub_1BAEF2050();
  *(_QWORD *)&v66 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE99010();
  sub_1BA4A2870(&qword_1ED3D0D20, (uint64_t (*)(uint64_t))sub_1BAE99010, (uint64_t)&unk_1BB8FFC6C);
  v15 = v69;
  sub_1BB87468C();
  v16 = (void *)v15;
  if (v15)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v69 = v8;
  v60 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17 = sub_1BB872874();
  v18 = Dictionary<>.errorOnUnknownKeys.getter(v17);
  swift_bridgeObjectRelease();
  v19 = v66;
  v20 = (uint64_t)v13;
  v21 = v67;
  if ((v18 & 1) != 0)
  {
    v22 = sub_1BB8740EC();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = (_BYTE *)(v22 + 48);
      while (*v24 != 1)
      {
        v24 += 24;
        if (!--v23)
          goto LABEL_7;
      }
      v30 = *((_QWORD *)v24 - 2);
      v29 = *((_QWORD *)v24 - 1);
      swift_bridgeObjectRetain_n();
      v31 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v31);
      v32 = v19;
      sub_1BAE99090();
      sub_1BAE990D4();
      sub_1BAE99118();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v33 = sub_1BAE71220((uint64_t)&unk_1E72514A0);
      swift_release_n();
      sub_1BA98D1F0();
      v16 = (void *)swift_allocError();
      *(_QWORD *)v34 = v30;
      *(_QWORD *)(v34 + 8) = v29;
      *(_QWORD *)(v34 + 16) = v33;
      *(_OWORD *)(v34 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v30, v29, 1);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v20, v32);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v25 = sub_1BAE0F8F8(v20, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF2050);
  v27 = v26;
  v59 = v25;
  v72 = xmmword_1BB8A1A10;
  v73 = 0;
  v28 = sub_1BB874098();
  v58 = v35;
  v56 = v28;
  v57 = xmmword_1BB8D2D60;
  v72 = xmmword_1BB8D2D60;
  v73 = 0;
  v36 = sub_1BB8740F8();
  if ((v36 & 1) != 0)
  {
    v70 = v57;
    v71 = 0;
    sub_1BAEE927C();
    sub_1BB8740D4();
    v37 = v68;
    *(_QWORD *)&v57 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v37, v7);
  }
  else
  {
    *(_QWORD *)&v57 = MEMORY[0x1E0DEE9D8];
  }
  v72 = xmmword_1BB8D2D70;
  v73 = 0;
  v68 = sub_1BB87402C();
  v69 = v39;
  v72 = xmmword_1BB8D2D90;
  v73 = 0;
  v53 = sub_1BB87402C();
  v55 = v40;
  v54 = xmmword_1BB8D2D80;
  v72 = xmmword_1BB8D2D80;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v54;
    v71 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v41 = v19;
    v42 = v74;
  }
  else
  {
    v41 = v19;
    v42 = 0xB000000000000000;
  }
  *(_QWORD *)&v54 = v42;
  v66 = xmmword_1BB8D2DA0;
  v72 = xmmword_1BB8D2DA0;
  v73 = 0;
  v43 = sub_1BB8740F8();
  v44 = v65;
  if ((v43 & 1) != 0)
  {
    v70 = v66;
    v71 = 0;
    sub_1BAEB7D04();
    v45 = v63;
    sub_1BB8740D4();
    v46 = v45;
    v47 = v41;
    v48 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v44);
  }
  else
  {
    v47 = v41;
    v48 = MEMORY[0x1E0DEE9D8];
  }
  v72 = xmmword_1BB8D2DB0;
  v73 = 0;
  sub_1BA4FB6A0();
  v49 = v64;
  sub_1BB8740D4();
  v65 = v48;
  *(_QWORD *)&v66 = v27;
  v50 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v49, v21);
  v67 = xmmword_1BB8D2DD0;
  v72 = xmmword_1BB8D2DD0;
  v73 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v70 = v67;
    v71 = 0;
    sub_1BB8740D4();
    v51 = v74;
  }
  else
  {
    v51 = 0;
  }
  *(_QWORD *)&v72 = v54;
  type metadata accessor for FormatHOverlayNode();
  swift_allocObject();
  KeyPath = FormatHOverlayNode.init(identifier:targetIdentifier:targetPath:name:description:size:adjustments:children:reversed:)(v59, v66, v56, v58, v57, v68, v69, v53, v55, (uint64_t *)&v72, v65, v50, v51);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v20, v47);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

void sub_1BAE98F20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD58)
  {
    sub_1BAE98F98();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE850, (uint64_t (*)(uint64_t))sub_1BAE98F98, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD58);
  }
}

void sub_1BAE98F98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE858)
  {
    sub_1BAE99010();
    sub_1BA4A2870(&qword_1ED3D0D20, (uint64_t (*)(uint64_t))sub_1BAE99010, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE858);
  }
}

uint64_t sub_1BAE99010()
{
  uint64_t result;

  result = qword_1ED3D0D28;
  if (!qword_1ED3D0D28)
  {
    sub_1BAE99090();
    sub_1BAE990D4();
    sub_1BAE99118();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE99090()
{
  unint64_t result;

  result = qword_1ED3D0660;
  if (!qword_1ED3D0660)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA760, &_s10CodingKeysON_120);
    atomic_store(result, (unint64_t *)&qword_1ED3D0660);
  }
  return result;
}

unint64_t sub_1BAE990D4()
{
  unint64_t result;

  result = qword_1ED3C7C98;
  if (!qword_1ED3C7C98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA710, &_s10CodingKeysON_120);
    atomic_store(result, (unint64_t *)&qword_1ED3C7C98);
  }
  return result;
}

unint64_t sub_1BAE99118()
{
  unint64_t result;

  result = qword_1ED3D0658;
  if (!qword_1ED3D0658)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA6E8, &_s10CodingKeysON_120);
    atomic_store(result, (unint64_t *)&qword_1ED3D0658);
  }
  return result;
}

unint64_t sub_1BAE9915C()
{
  unint64_t result;

  result = qword_1EF2B2EC0;
  if (!qword_1EF2B2EC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA698, &_s10CodingTypeON_85);
    atomic_store(result, (unint64_t *)&qword_1EF2B2EC0);
  }
  return result;
}

unint64_t sub_1BAE991A0()
{
  unint64_t result;

  result = qword_1ED3A6B80;
  if (!qword_1ED3A6B80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9191B4, &_s14descr1E7310681C5FloatO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B80);
  }
  return result;
}

unint64_t sub_1BAE991E4()
{
  unint64_t result;

  result = qword_1ED3A6B50;
  if (!qword_1ED3A6B50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB945C14, &_s14descr1E733A881C4FontO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B50);
  }
  return result;
}

unint64_t sub_1BAE99228()
{
  unint64_t result;

  result = qword_1EF2B2EC8;
  if (!qword_1EF2B2EC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA5F8, &_s10CodingTypeON_81);
    atomic_store(result, (unint64_t *)&qword_1EF2B2EC8);
  }
  return result;
}

unint64_t sub_1BAE9926C()
{
  unint64_t result;

  result = qword_1ED3A45A0;
  if (!qword_1ED3A45A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineTrackProgressFormat, &type metadata for FormatHeadlineTrackProgressFormat);
    atomic_store(result, (unint64_t *)&qword_1ED3A45A0);
  }
  return result;
}

unint64_t sub_1BAE992B0()
{
  unint64_t result;

  result = qword_1ED3A4590;
  if (!qword_1ED3A4590)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA5A8, &_s10CodingTypeON_79);
    atomic_store(result, (unint64_t *)&qword_1ED3A4590);
  }
  return result;
}

uint64_t sub_1BAE992F4(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 128);
  *(_QWORD *)(result + 104) &= 0x8000000000000001;
  *(_BYTE *)(result + 128) = v1 & 0xF | 0x80;
  return result;
}

unint64_t sub_1BAE99314()
{
  unint64_t result;

  result = qword_1EF2B2ED0;
  if (!qword_1EF2B2ED0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend.GradientData, &type metadata for FormatImageAdjustmentBlend.GradientData);
    atomic_store(result, (unint64_t *)&qword_1EF2B2ED0);
  }
  return result;
}

uint64_t sub_1BAE99358(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 128) & 0xF;
  *(_QWORD *)(result + 104) &= 0x8000000000000001;
  *(_BYTE *)(result + 128) = v1;
  return result;
}

void sub_1BAE99374()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CA8)
  {
    sub_1BAE993EC();
    sub_1BA4A2870(&qword_1ED3D1210, (uint64_t (*)(uint64_t))sub_1BAE993EC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CA8);
  }
}

uint64_t sub_1BAE993EC()
{
  uint64_t result;

  result = qword_1ED3D1218;
  if (!qword_1ED3D1218)
  {
    sub_1BAE9946C();
    sub_1BA5346C4();
    sub_1BAE994B0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9946C()
{
  unint64_t result;

  result = qword_1ED3D16E0;
  if (!qword_1ED3D16E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA548, &_s10CodingKeysON_119);
    atomic_store(result, (unint64_t *)&qword_1ED3D16E0);
  }
  return result;
}

unint64_t sub_1BAE994B0()
{
  unint64_t result;

  result = qword_1ED3D16D8;
  if (!qword_1ED3D16D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA4D0, &_s10CodingKeysON_119);
    atomic_store(result, (unint64_t *)&qword_1ED3D16D8);
  }
  return result;
}

void sub_1BAE994F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE060)
  {
    sub_1BAE9956C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEE70, (uint64_t (*)(uint64_t))sub_1BAE9956C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE060);
  }
}

void sub_1BAE9956C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEE78)
  {
    sub_1BAE993EC();
    sub_1BA4A2870(&qword_1ED3D1210, (uint64_t (*)(uint64_t))sub_1BAE993EC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEE78);
  }
}

void sub_1BAE995E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2ED8)
  {
    sub_1BAE9965C();
    sub_1BA4A2870(&qword_1EF2B2F00, (uint64_t (*)(uint64_t))sub_1BAE9965C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2ED8);
  }
}

uint64_t sub_1BAE9965C()
{
  uint64_t result;

  result = qword_1EF2B2EE0;
  if (!qword_1EF2B2EE0)
  {
    sub_1BAE996DC();
    sub_1BAE99720();
    sub_1BAE99764();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE996DC()
{
  unint64_t result;

  result = qword_1EF2B2EE8;
  if (!qword_1EF2B2EE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA498, &_s10CodingKeysON_118);
    atomic_store(result, (unint64_t *)&qword_1EF2B2EE8);
  }
  return result;
}

unint64_t sub_1BAE99720()
{
  unint64_t result;

  result = qword_1EF2B2EF0;
  if (!qword_1EF2B2EF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA448, &_s10CodingKeysON_118);
    atomic_store(result, (unint64_t *)&qword_1EF2B2EF0);
  }
  return result;
}

unint64_t sub_1BAE99764()
{
  unint64_t result;

  result = qword_1EF2B2EF8;
  if (!qword_1EF2B2EF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA420, &_s10CodingKeysON_118);
    atomic_store(result, (unint64_t *)&qword_1EF2B2EF8);
  }
  return result;
}

unint64_t sub_1BAE997A8()
{
  unint64_t result;

  result = qword_1EF2B2F08;
  if (!qword_1EF2B2F08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDirectionalGradient, &type metadata for FormatDirectionalGradient);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F08);
  }
  return result;
}

void sub_1BAE997EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2F10)
  {
    sub_1BAE99864();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2F20, (uint64_t (*)(uint64_t))sub_1BAE99864, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2F10);
  }
}

void sub_1BAE99864()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2F18)
  {
    sub_1BAE9965C();
    sub_1BA4A2870(&qword_1EF2B2F00, (uint64_t (*)(uint64_t))sub_1BAE9965C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2F18);
  }
}

unint64_t sub_1BAE998DC()
{
  unint64_t result;

  result = qword_1EF2B2F28;
  if (!qword_1EF2B2F28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA3F8, &_s10CodingTypeON_77);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F28);
  }
  return result;
}

void sub_1BAE99920()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC058)
  {
    sub_1BAE99998();
    sub_1BA4A2870(&qword_1ED3ABEB8, (uint64_t (*)(uint64_t))sub_1BAE99998, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC058);
  }
}

uint64_t sub_1BAE99998()
{
  uint64_t result;

  result = qword_1ED3ABEC0;
  if (!qword_1ED3ABEC0)
  {
    sub_1BAE99A18();
    sub_1BAE99A5C();
    sub_1BAE99AA0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE99A18()
{
  unint64_t result;

  result = qword_1ED3ABE50;
  if (!qword_1ED3ABE50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA3C0, &_s10CodingKeysON_117);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE50);
  }
  return result;
}

unint64_t sub_1BAE99A5C()
{
  unint64_t result;

  result = qword_1ED3A6BC0;
  if (!qword_1ED3A6BC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA370, &_s10CodingKeysON_117);
    atomic_store(result, (unint64_t *)&qword_1ED3A6BC0);
  }
  return result;
}

unint64_t sub_1BAE99AA0()
{
  unint64_t result;

  result = qword_1ED3ABE48;
  if (!qword_1ED3ABE48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA348, &_s10CodingKeysON_117);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE48);
  }
  return result;
}

void sub_1BAE99AE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADEF0)
  {
    sub_1BAE99B5C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEB90, (uint64_t (*)(uint64_t))sub_1BAE99B5C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADEF0);
  }
}

void sub_1BAE99B5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEB98)
  {
    sub_1BAE99998();
    sub_1BA4A2870(&qword_1ED3ABEB8, (uint64_t (*)(uint64_t))sub_1BAE99998, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEB98);
  }
}

uint64_t sub_1BAE99BD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F4D646E656C62 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE99D1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E656964617267 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F4D646E656C62 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE99E6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BAE99FA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2D8)
  {
    sub_1BAE9A020();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2D8);
  }
}

void sub_1BAE9A020()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF358)
  {
    sub_1BAE9A098();
    sub_1BA4A2870(&qword_1ED3D15F0, (uint64_t (*)(uint64_t))sub_1BAE9A098, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF358);
  }
}

uint64_t sub_1BAE9A098()
{
  uint64_t result;

  result = qword_1ED3D15F8;
  if (!qword_1ED3D15F8)
  {
    sub_1BAE9A118();
    sub_1BA650EC0();
    sub_1BAE9A15C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9A118()
{
  unint64_t result;

  result = qword_1ED3D0358;
  if (!qword_1ED3D0358)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA310, &_s10CodingKeysON_116);
    atomic_store(result, (unint64_t *)&qword_1ED3D0358);
  }
  return result;
}

unint64_t sub_1BAE9A15C()
{
  unint64_t result;

  result = qword_1ED3D0350;
  if (!qword_1ED3D0350)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA298, &_s10CodingKeysON_116);
    atomic_store(result, (unint64_t *)&qword_1ED3D0350);
  }
  return result;
}

unint64_t sub_1BAE9A1A0()
{
  unint64_t result;

  result = qword_1EF2B2F30;
  if (!qword_1EF2B2F30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Image, &type metadata for FormatPuzzleStatisticBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F30);
  }
  return result;
}

unint64_t sub_1BAE9A1E4()
{
  unint64_t result;

  result = qword_1ED3A7238;
  if (!qword_1ED3A7238)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Image, &type metadata for FormatPuzzleTypeBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED3A7238);
  }
  return result;
}

unint64_t sub_1BAE9A228()
{
  unint64_t result;

  result = qword_1ED3A6670;
  if (!qword_1ED3A6670)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Image, &type metadata for FormatPuzzleBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED3A6670);
  }
  return result;
}

void sub_1BAE9A26C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BA8)
  {
    sub_1BAE9A2E4();
    sub_1BA4A2870(&qword_1ED3D1010, (uint64_t (*)(uint64_t))sub_1BAE9A2E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BA8);
  }
}

uint64_t sub_1BAE9A2E4()
{
  uint64_t result;

  result = qword_1ED3D1018;
  if (!qword_1ED3D1018)
  {
    sub_1BAE9A364();
    sub_1BA82A3BC();
    sub_1BAE9A3A8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9A364()
{
  unint64_t result;

  result = qword_1ED3D0988;
  if (!qword_1ED3D0988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA238, &_s10CodingKeysON_115);
    atomic_store(result, (unint64_t *)&qword_1ED3D0988);
  }
  return result;
}

unint64_t sub_1BAE9A3A8()
{
  unint64_t result;

  result = qword_1ED3D0980;
  if (!qword_1ED3D0980)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA1C0, &_s10CodingKeysON_115);
    atomic_store(result, (unint64_t *)&qword_1ED3D0980);
  }
  return result;
}

void sub_1BAE9A3EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF20)
  {
    sub_1BAE9A464();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEBF0, (uint64_t (*)(uint64_t))sub_1BAE9A464, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF20);
  }
}

void sub_1BAE9A464()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEBF8)
  {
    sub_1BAE9A2E4();
    sub_1BA4A2870(&qword_1ED3D1010, (uint64_t (*)(uint64_t))sub_1BAE9A2E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEBF8);
  }
}

void sub_1BAE9A4DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CB0)
  {
    sub_1BAE9A554();
    sub_1BA4A2870(&qword_1ED3D1220, (uint64_t (*)(uint64_t))sub_1BAE9A554, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CB0);
  }
}

uint64_t sub_1BAE9A554()
{
  uint64_t result;

  result = qword_1ED3D1228;
  if (!qword_1ED3D1228)
  {
    sub_1BAE9A5D4();
    sub_1BA8251EC();
    sub_1BAE9A618();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9A5D4()
{
  unint64_t result;

  result = qword_1ED3D16F0;
  if (!qword_1ED3D16F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA160, &_s10CodingKeysON_114);
    atomic_store(result, (unint64_t *)&qword_1ED3D16F0);
  }
  return result;
}

unint64_t sub_1BAE9A618()
{
  unint64_t result;

  result = qword_1ED3D16E8;
  if (!qword_1ED3D16E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA0E8, &_s10CodingKeysON_114);
    atomic_store(result, (unint64_t *)&qword_1ED3D16E8);
  }
  return result;
}

unint64_t sub_1BAE9A65C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4750;
  if (!qword_1ED3C4750)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4758, (void (*)(void))sub_1BA821070, (void (*)(void))sub_1BA8210B4);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4750);
  }
  return result;
}

void sub_1BAE9A6C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE068)
  {
    sub_1BAE9A73C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEE80, (uint64_t (*)(uint64_t))sub_1BAE9A73C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE068);
  }
}

void sub_1BAE9A73C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEE88)
  {
    sub_1BAE9A554();
    sub_1BA4A2870(&qword_1ED3D1220, (uint64_t (*)(uint64_t))sub_1BAE9A554, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEE88);
  }
}

void sub_1BAE9A7B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CB8)
  {
    sub_1BAE9A82C();
    sub_1BA4A2870(&qword_1ED3D1230, (uint64_t (*)(uint64_t))sub_1BAE9A82C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CB8);
  }
}

uint64_t sub_1BAE9A82C()
{
  uint64_t result;

  result = qword_1ED3D1238;
  if (!qword_1ED3D1238)
  {
    sub_1BAE9A8AC();
    sub_1BA825084();
    sub_1BAE9A8F0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9A8AC()
{
  unint64_t result;

  result = qword_1ED3D1700;
  if (!qword_1ED3D1700)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA0B0, &_s10CodingKeysON_113);
    atomic_store(result, (unint64_t *)&qword_1ED3D1700);
  }
  return result;
}

unint64_t sub_1BAE9A8F0()
{
  unint64_t result;

  result = qword_1ED3D16F8;
  if (!qword_1ED3D16F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA038, &_s10CodingKeysON_113);
    atomic_store(result, (unint64_t *)&qword_1ED3D16F8);
  }
  return result;
}

void sub_1BAE9A934(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE070)
  {
    sub_1BAE9A9AC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEE90, (uint64_t (*)(uint64_t))sub_1BAE9A9AC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE070);
  }
}

void sub_1BAE9A9AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEE98)
  {
    sub_1BAE9A82C();
    sub_1BA4A2870(&qword_1ED3D1230, (uint64_t (*)(uint64_t))sub_1BAE9A82C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEE98);
  }
}

uint64_t sub_1BAE9AA24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BB962200 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_1BAE9AFF0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAE9B114(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1BAE9B20C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE40)
  {
    sub_1BAE9B284();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE40);
  }
}

void sub_1BAE9B284()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEA38)
  {
    sub_1BAE9B2FC();
    sub_1BA4A2870(&qword_1ED3D0ED0, (uint64_t (*)(uint64_t))sub_1BAE9B2FC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEA38);
  }
}

uint64_t sub_1BAE9B2FC()
{
  uint64_t result;

  result = qword_1ED3D0ED8;
  if (!qword_1ED3D0ED8)
  {
    sub_1BAE9B37C();
    sub_1BA699220();
    sub_1BAE9B3C0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9B37C()
{
  unint64_t result;

  result = qword_1ED3D0838;
  if (!qword_1ED3D0838)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CA000, &_s10CodingKeysON_112);
    atomic_store(result, (unint64_t *)&qword_1ED3D0838);
  }
  return result;
}

unint64_t sub_1BAE9B3C0()
{
  unint64_t result;

  result = qword_1ED3D0830;
  if (!qword_1ED3D0830)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9F88, &_s10CodingKeysON_112);
    atomic_store(result, (unint64_t *)&qword_1ED3D0830);
  }
  return result;
}

unint64_t sub_1BAE9B404()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B2F38;
  if (!qword_1EF2B2F38)
  {
    sub_1BAE81178(255, &qword_1ED3B9530, &qword_1ED3B9520, (uint64_t)&type metadata for FormatImageAdjustment);
    v2 = v1;
    v3 = sub_1BA63B770();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F38);
  }
  return result;
}

void sub_1BAE9B47C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B10)
  {
    sub_1BAE9B4F4();
    sub_1BA4A2870(&qword_1ED3D0EE0, (uint64_t (*)(uint64_t))sub_1BAE9B4F4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B10);
  }
}

uint64_t sub_1BAE9B4F4()
{
  uint64_t result;

  result = qword_1ED3D0EE8;
  if (!qword_1ED3D0EE8)
  {
    sub_1BAE9B574();
    sub_1BA697ED8();
    sub_1BAE9B5B8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9B574()
{
  unint64_t result;

  result = qword_1ED3D0848;
  if (!qword_1ED3D0848)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9F50, &_s10CodingKeysON_111);
    atomic_store(result, (unint64_t *)&qword_1ED3D0848);
  }
  return result;
}

unint64_t sub_1BAE9B5B8()
{
  unint64_t result;

  result = qword_1ED3D0840;
  if (!qword_1ED3D0840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9ED8, &_s10CodingKeysON_111);
    atomic_store(result, (unint64_t *)&qword_1ED3D0840);
  }
  return result;
}

void sub_1BAE9B5FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE48)
  {
    sub_1BAE9B674();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE48);
  }
}

void sub_1BAE9B674()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEA48)
  {
    sub_1BAE9B4F4();
    sub_1BA4A2870(&qword_1ED3D0EE0, (uint64_t (*)(uint64_t))sub_1BAE9B4F4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEA48);
  }
}

uint64_t sub_1BAE9B6EC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16) >= 3uLL)
    swift_release();
  if (*(_QWORD *)(v0 + 24) >= 3uLL)
    swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BAE9B728()
{
  unint64_t result;

  result = qword_1EF2B2F40;
  if (!qword_1EF2B2F40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9E88, &_s10CodingTypeON_73);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F40);
  }
  return result;
}

unint64_t sub_1BAE9B76C()
{
  unint64_t result;

  result = qword_1EF2B2F48;
  if (!qword_1EF2B2F48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9E60, &_s10CodingTypeON_72);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F48);
  }
  return result;
}

unint64_t sub_1BAE9B7B0()
{
  unint64_t result;

  result = qword_1EF2B2F50;
  if (!qword_1EF2B2F50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F7010, &_s8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F50);
  }
  return result;
}

unint64_t sub_1BAE9B7F4()
{
  unint64_t result;

  result = qword_1EF2B2F58;
  if (!qword_1EF2B2F58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94B7C8, &_s4FontO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F58);
  }
  return result;
}

unint64_t sub_1BAE9B838()
{
  unint64_t result;

  result = qword_1EF2B2F60;
  if (!qword_1EF2B2F60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9E10, &_s10CodingTypeON_70);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F60);
  }
  return result;
}

unint64_t sub_1BAE9B87C()
{
  unint64_t result;

  result = qword_1ED39FD00;
  if (!qword_1ED39FD00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.IssueCover, &type metadata for FormatGroupBinding.IssueCover);
    atomic_store(result, (unint64_t *)&qword_1ED39FD00);
  }
  return result;
}

unint64_t sub_1BAE9B8C0()
{
  unint64_t result;

  result = qword_1EF2B2F70;
  if (!qword_1EF2B2F70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverContent, &type metadata for FormatIssueCoverContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F70);
  }
  return result;
}

unint64_t sub_1BAE9B904()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2F78;
  if (!qword_1EF2B2F78)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2F68, (uint64_t (*)(void))sub_1BAE9B8C0, (uint64_t)&type metadata for FormatIssueCoverContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F78);
  }
  return result;
}

void sub_1BAE9B970()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DD8)
  {
    sub_1BAE9B9E8();
    sub_1BA4A2870(&qword_1ED3D1470, (uint64_t (*)(uint64_t))sub_1BAE9B9E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DD8);
  }
}

uint64_t sub_1BAE9B9E8()
{
  uint64_t result;

  result = qword_1ED3D1478;
  if (!qword_1ED3D1478)
  {
    sub_1BAE9BA68();
    sub_1BA5B7CAC();
    sub_1BAE9BAAC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9BA68()
{
  unint64_t result;

  result = qword_1ED3D0120;
  if (!qword_1ED3D0120)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9D88, &_s10CodingKeysON_110);
    atomic_store(result, (unint64_t *)&qword_1ED3D0120);
  }
  return result;
}

unint64_t sub_1BAE9BAAC()
{
  unint64_t result;

  result = qword_1ED3D0118;
  if (!qword_1ED3D0118)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9D10, &_s10CodingKeysON_110);
    atomic_store(result, (unint64_t *)&qword_1ED3D0118);
  }
  return result;
}

void sub_1BAE9BAF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE208)
  {
    sub_1BAE9BB68();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE208);
  }
}

void sub_1BAE9BB68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF1C0)
  {
    sub_1BAE9B9E8();
    sub_1BA4A2870(&qword_1ED3D1470, (uint64_t (*)(uint64_t))sub_1BAE9B9E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF1C0);
  }
}

uint64_t sub_1BAE9BBE0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEB0000000065646FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E697265646E6572 && a2 == 0xED000065646F4D67 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6F6C6F43746E6974 && a2 == 0xE900000000000072 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x73614D6567616D69 && a2 == 0xE90000000000006BLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 16;
    else
      return 17;
  }
}

uint64_t sub_1BAE9C2F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6C6F43746E6974 && a2 == 0xE900000000000072 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEB0000000065646FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E697265646E6572 && a2 == 0xED000065646F4D67 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_1BAE9C8EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x736E6F43657A6973 && a2 == 0xEE00746E69617274 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_1BAE9CE94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x737469617274 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1BAE9D29C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x737469617274 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BAE9D5CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x737469617274 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73656C797473 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7365707974 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t *sub_1BAE9DAE0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t *v74;
  __int128 v75;
  char v76;
  __int128 v77;
  char v78;

  sub_1BAEFBAC0(0, (unint64_t *)&qword_1ED3C4000, (void (*)(void))sub_1BA82E430, (void (*)(void))sub_1BA49B0D0);
  *(_QWORD *)&v71 = v2;
  v64 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v67 = (char *)&v59 - v3;
  sub_1BAEFBAC0(0, &qword_1ED3B07B0, (void (*)(void))sub_1BA76BC58, (void (*)(void))sub_1BA833E3C);
  v69 = v4;
  v63 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v66 = (char *)&v59 - v5;
  sub_1BA692844();
  v70 = v6;
  v65 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v68 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  *(_QWORD *)&v72 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BAEF0CB8();
  v73 = v12;
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE9E500();
  sub_1BA4A2870(&qword_1ED3ABEC8, (uint64_t (*)(uint64_t))sub_1BAE9E500, (uint64_t)&unk_1BB8FFC6C);
  v16 = v74;
  sub_1BB87468C();
  v17 = v16;
  if (v16)
  {
    v18 = a1;
LABEL_21:
    sub_1BA7F8B78(v18, (uint64_t)v17);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    return v15;
  }
  v74 = v11;
  v62 = v9;
  v19 = v72;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v20 = sub_1BB872874();
  v21 = Dictionary<>.errorOnUnknownKeys.getter(v20);
  swift_bridgeObjectRelease();
  v22 = v73;
  v23 = a1;
  if ((v21 & 1) != 0)
  {
    v24 = v73;
    v25 = sub_1BB8740EC();
    v26 = *(_QWORD *)(v25 + 16);
    if (v26)
    {
      v27 = (_BYTE *)(v25 + 48);
      while (*v27 != 1)
      {
        v27 += 24;
        if (!--v26)
          goto LABEL_8;
      }
      v32 = *((_QWORD *)v27 - 2);
      v31 = *((_QWORD *)v27 - 1);
      v33 = v23;
      swift_bridgeObjectRetain_n();
      v34 = swift_bridgeObjectRelease();
      v74 = v15;
      v15 = &v59;
      MEMORY[0x1E0C80A78](v34);
      *(&v59 - 4) = (uint64_t)&_s10CodingKeysON_109;
      *(&v59 - 3) = sub_1BAE9E580();
      *(&v59 - 2) = sub_1BAE9E5C4();
      *(&v59 - 1) = sub_1BAE9E608();
      swift_getKeyPath();
      swift_retain();
      v35 = sub_1BAE71220((uint64_t)&unk_1E7252590);
      swift_release_n();
      sub_1BA98D1F0();
      v17 = (void *)swift_allocError();
      *(_QWORD *)v36 = v32;
      *(_QWORD *)(v36 + 8) = v31;
      *(_QWORD *)(v36 + 16) = v35;
      *(_OWORD *)(v36 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      v18 = v33;
      sub_1BA69C828(v32, v31, 1);
      (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v74, v24);
      goto LABEL_21;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  v28 = sub_1BAE0F8F8((uint64_t)v15, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEF0CB8);
  v30 = v29;
  v77 = xmmword_1BB8A1A10;
  v78 = 0;
  v59 = sub_1BB874098();
  v60 = v28;
  v73 = v37;
  v61 = xmmword_1BB8D2D60;
  v77 = xmmword_1BB8D2D60;
  v78 = 0;
  v38 = sub_1BB8740F8();
  if ((v38 & 1) != 0)
  {
    v75 = v61;
    v76 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v39 = v19;
    sub_1BB8740D4();
    v40 = v71;
    *(_QWORD *)&v61 = v30;
    v41 = v74;
    v42 = sub_1BB86DD08();
    (*(void (**)(uint64_t *, uint64_t))(v62 + 8))(v41, v39);
    v74 = (uint64_t *)v13;
  }
  else
  {
    *(_QWORD *)&v61 = v30;
    v42 = MEMORY[0x1E0DEE9E8];
    v74 = (uint64_t *)v13;
    v40 = v71;
  }
  v43 = v70;
  v72 = xmmword_1BB8D2D70;
  v77 = xmmword_1BB8D2D70;
  v78 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v44 = v42;
    v75 = v72;
    v76 = 0;
    sub_1BA4A2870(&qword_1ED3BBE68, (uint64_t (*)(uint64_t))sub_1BA692844, MEMORY[0x1E0DB3610]);
    v45 = v68;
    sub_1BB8740D4();
    *(_QWORD *)&v72 = v23;
    v46 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v43);
    v42 = v44;
    v47 = v46;
  }
  else
  {
    *(_QWORD *)&v72 = v23;
    v47 = MEMORY[0x1E0DEE9D8];
  }
  v71 = xmmword_1BB8D2D90;
  v77 = xmmword_1BB8D2D90;
  v78 = 0;
  v48 = sub_1BB8740F8();
  v49 = v69;
  if ((v48 & 1) != 0)
  {
    v75 = v71;
    v76 = 0;
    sub_1BAE7C214();
    v50 = v66;
    sub_1BB8740D4();
    *(_QWORD *)&v71 = v47;
    v51 = sub_1BB86DD08();
    v52 = v49;
    v53 = v51;
    (*(void (**)(char *, uint64_t))(v63 + 8))(v50, v52);
  }
  else
  {
    *(_QWORD *)&v71 = v47;
    v53 = MEMORY[0x1E0DEE9D8];
  }
  v77 = xmmword_1BB8D2D80;
  v78 = 0;
  sub_1BA4FB6A0();
  v54 = v67;
  sub_1BB8740D4();
  v56 = sub_1BB86DD08();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v54, v40);
  ((void (*)(uint64_t *, uint64_t))v74[1])(v15, v22);
  type metadata accessor for FormatItemBindingsNode();
  v15 = (uint64_t *)swift_allocObject();
  swift_beginAccess();
  v57 = v61;
  v15[2] = v60;
  v15[3] = v57;
  v58 = v73;
  v15[4] = v59;
  v15[5] = v58;
  swift_beginAccess();
  v15[6] = v42;
  swift_beginAccess();
  v15[7] = v71;
  swift_beginAccess();
  v15[8] = v53;
  swift_beginAccess();
  v15[9] = v56;
  __swift_destroy_boxed_opaque_existential_1(v72);
  return v15;
}

void sub_1BAE9E410(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF28)
  {
    sub_1BAE9E488();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEC00, (uint64_t (*)(uint64_t))sub_1BAE9E488, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF28);
  }
}

void sub_1BAE9E488()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEC08)
  {
    sub_1BAE9E500();
    sub_1BA4A2870(&qword_1ED3ABEC8, (uint64_t (*)(uint64_t))sub_1BAE9E500, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEC08);
  }
}

uint64_t sub_1BAE9E500()
{
  uint64_t result;

  result = qword_1ED3ABED0;
  if (!qword_1ED3ABED0)
  {
    sub_1BAE9E580();
    sub_1BAE9E5C4();
    sub_1BAE9E608();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9E580()
{
  unint64_t result;

  result = qword_1ED3ABE60;
  if (!qword_1ED3ABE60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9CD8, &_s10CodingKeysON_109);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE60);
  }
  return result;
}

unint64_t sub_1BAE9E5C4()
{
  unint64_t result;

  result = qword_1ED3A6DE0;
  if (!qword_1ED3A6DE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9C88, &_s10CodingKeysON_109);
    atomic_store(result, (unint64_t *)&qword_1ED3A6DE0);
  }
  return result;
}

unint64_t sub_1BAE9E608()
{
  unint64_t result;

  result = qword_1ED3ABE58;
  if (!qword_1ED3ABE58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9C60, &_s10CodingKeysON_109);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE58);
  }
  return result;
}

uint64_t sub_1BAE9E64C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6564496D657469 && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73656C797473 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

void sub_1BAE9E954(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE288)
  {
    sub_1BAE9E9CC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE288);
  }
}

void sub_1BAE9E9CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF2B8)
  {
    sub_1BAE9EA44();
    sub_1BA4A2870(&qword_1ED3D1560, (uint64_t (*)(uint64_t))sub_1BAE9EA44, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF2B8);
  }
}

uint64_t sub_1BAE9EA44()
{
  uint64_t result;

  result = qword_1ED3D1568;
  if (!qword_1ED3D1568)
  {
    sub_1BAE9EAC4();
    sub_1BA5DE878();
    sub_1BAE9EB08();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9EAC4()
{
  unint64_t result;

  result = qword_1ED3D02C8;
  if (!qword_1ED3D02C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9C28, &_s10CodingKeysON_108);
    atomic_store(result, (unint64_t *)&qword_1ED3D02C8);
  }
  return result;
}

unint64_t sub_1BAE9EB08()
{
  unint64_t result;

  result = qword_1ED3D02C0;
  if (!qword_1ED3D02C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9BB0, &_s10CodingKeysON_108);
    atomic_store(result, (unint64_t *)&qword_1ED3D02C0);
  }
  return result;
}

uint64_t sub_1BAE9EB4C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6564496D657469 && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73656C797473 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x736B636F6C62 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7449656372756F73 && a2 == 0xEB00000000736D65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

void sub_1BAE9F09C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDC8)
  {
    sub_1BAE9F114();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE930, (uint64_t (*)(uint64_t))sub_1BAE9F114, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDC8);
  }
}

void sub_1BAE9F114()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE938)
  {
    sub_1BAE9F18C();
    sub_1BA4A2870(&qword_1ED3D0DE0, (uint64_t (*)(uint64_t))sub_1BAE9F18C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE938);
  }
}

uint64_t sub_1BAE9F18C()
{
  uint64_t result;

  result = qword_1ED3D0DE8;
  if (!qword_1ED3D0DE8)
  {
    sub_1BAE9F20C();
    sub_1BA5B8C9C();
    sub_1BAE9F250();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9F20C()
{
  unint64_t result;

  result = qword_1ED3D0730;
  if (!qword_1ED3D0730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9B50, &_s10CodingKeysON_107);
    atomic_store(result, (unint64_t *)&qword_1ED3D0730);
  }
  return result;
}

unint64_t sub_1BAE9F250()
{
  unint64_t result;

  result = qword_1ED3D0728;
  if (!qword_1ED3D0728)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9AD8, &_s10CodingKeysON_107);
    atomic_store(result, (unint64_t *)&qword_1ED3D0728);
  }
  return result;
}

void sub_1BAE9F294()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A98)
  {
    sub_1BAE9F30C();
    sub_1BA4A2870(&qword_1ED3D0DF0, (uint64_t (*)(uint64_t))sub_1BAE9F30C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A98);
  }
}

uint64_t sub_1BAE9F30C()
{
  uint64_t result;

  result = qword_1ED3D0DF8;
  if (!qword_1ED3D0DF8)
  {
    sub_1BAE9F38C();
    sub_1BA55B51C();
    sub_1BAE9F3D0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAE9F38C()
{
  unint64_t result;

  result = qword_1ED3D0740;
  if (!qword_1ED3D0740)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9AA0, &_s10CodingKeysON_106);
    atomic_store(result, (unint64_t *)&qword_1ED3D0740);
  }
  return result;
}

unint64_t sub_1BAE9F3D0()
{
  unint64_t result;

  result = qword_1ED3D0738;
  if (!qword_1ED3D0738)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9A28, &_s10CodingKeysON_106);
    atomic_store(result, (unint64_t *)&qword_1ED3D0738);
  }
  return result;
}

unint64_t sub_1BAE9F414()
{
  unint64_t result;

  result = qword_1ED3D2550;
  if (!qword_1ED3D2550)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFocusParameters, &type metadata for FormatFocusParameters);
    atomic_store(result, (unint64_t *)&qword_1ED3D2550);
  }
  return result;
}

void sub_1BAE9F458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDD0)
  {
    sub_1BAE9F4D0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE940, (uint64_t (*)(uint64_t))sub_1BAE9F4D0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDD0);
  }
}

void sub_1BAE9F4D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE948)
  {
    sub_1BAE9F30C();
    sub_1BA4A2870(&qword_1ED3D0DF0, (uint64_t (*)(uint64_t))sub_1BAE9F30C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE948);
  }
}

unint64_t sub_1BAE9F548()
{
  unint64_t result;

  result = qword_1ED3A8D70;
  if (!qword_1ED3A8D70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9A00, &_s10CodingTypeON_67);
    atomic_store(result, (unint64_t *)&qword_1ED3A8D70);
  }
  return result;
}

uint64_t sub_1BAE9F58C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB971830 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C65536C6C6563 && a2 == 0xED00006E6F697463 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x697463416C6C6563 && a2 == 0xEA00000000006E6FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x426F547370696C63 && a2 == 0xED000073646E756FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB971850 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7261507375636F66 && a2 == 0xEF73726574656D61 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1BAE9FA50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB971830 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C65536C6C6563 && a2 == 0xED00006E6F697463 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697463416C6C6563 && a2 == 0xEA00000000006E6FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x426F547370696C63 && a2 == 0xED000073646E756FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB971850 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7261507375636F66 && a2 == 0xEF73726574656D61 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1BAE9FE48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69536E6F74747562 && a2 == 0xEA0000000000657ALL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x57616572416E696DLL && a2 == 0xEC00000068746469 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BAE9FFB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCC0)
  {
    sub_1BAEA0028();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE728, (uint64_t (*)(uint64_t))sub_1BAEA0028, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCC0);
  }
}

void sub_1BAEA0028()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE730)
  {
    sub_1BAEA00A0();
    sub_1BA4A2870(&qword_1ED3D0C30, (uint64_t (*)(uint64_t))sub_1BAEA00A0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE730);
  }
}

uint64_t sub_1BAEA00A0()
{
  uint64_t result;

  result = qword_1ED3D0C38;
  if (!qword_1ED3D0C38)
  {
    sub_1BAEA0120();
    sub_1BA832A74();
    sub_1BAEA0164();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA0120()
{
  unint64_t result;

  result = qword_1ED3D0530;
  if (!qword_1ED3D0530)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C99C8, &_s10CodingKeysON_105);
    atomic_store(result, (unint64_t *)&qword_1ED3D0530);
  }
  return result;
}

unint64_t sub_1BAEA0164()
{
  unint64_t result;

  result = qword_1ED3D0528;
  if (!qword_1ED3D0528)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9950, &_s10CodingKeysON_105);
    atomic_store(result, (unint64_t *)&qword_1ED3D0528);
  }
  return result;
}

unint64_t sub_1BAEA01A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAE60;
  if (!qword_1ED3AAE60)
  {
    sub_1BA4AD288(255, &qword_1ED3AAE58, (uint64_t)&type metadata for FormatJsonConfigKey, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82EAC4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAE60);
  }
  return result;
}

unint64_t sub_1BAEA0220()
{
  unint64_t result;

  result = qword_1ED3D0AE8;
  if (!qword_1ED3D0AE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9928, &_s10CodingTypeON_66);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AE8);
  }
  return result;
}

void sub_1BAEA0264()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C40)
  {
    sub_1BAEA02DC();
    sub_1BA4A2870(&qword_1ED3D1140, (uint64_t (*)(uint64_t))sub_1BAEA02DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C40);
  }
}

uint64_t sub_1BAEA02DC()
{
  uint64_t result;

  result = qword_1ED3D1148;
  if (!qword_1ED3D1148)
  {
    sub_1BAEA035C();
    sub_1BA7F1374();
    sub_1BAEA03A0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA035C()
{
  unint64_t result;

  result = qword_1ED3D0AF8;
  if (!qword_1ED3D0AF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C98F0, &_s10CodingKeysON_104);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AF8);
  }
  return result;
}

unint64_t sub_1BAEA03A0()
{
  unint64_t result;

  result = qword_1ED3D0AF0;
  if (!qword_1ED3D0AF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9878, &_s10CodingKeysON_104);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AF0);
  }
  return result;
}

void sub_1BAEA03E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFE0)
  {
    sub_1BAEA045C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AED70, (uint64_t (*)(uint64_t))sub_1BAEA045C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFE0);
  }
}

void sub_1BAEA045C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AED78)
  {
    sub_1BAEA02DC();
    sub_1BA4A2870(&qword_1ED3D1140, (uint64_t (*)(uint64_t))sub_1BAEA02DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AED78);
  }
}

uint64_t sub_1BAEA04D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1937335659 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEA05A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB971870 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_1BAEA0734(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF30)
  {
    sub_1BAEA07AC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEC10, (uint64_t (*)(uint64_t))sub_1BAEA07AC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF30);
  }
}

void sub_1BAEA07AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEC18)
  {
    sub_1BAEA0824();
    sub_1BA4A2870(&qword_1ED3D1020, (uint64_t (*)(uint64_t))sub_1BAEA0824, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEC18);
  }
}

uint64_t sub_1BAEA0824()
{
  uint64_t result;

  result = qword_1ED3D1028;
  if (!qword_1ED3D1028)
  {
    sub_1BAEA08A4();
    sub_1BA82A19C();
    sub_1BAEA08E8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA08A4()
{
  unint64_t result;

  result = qword_1ED3D0998;
  if (!qword_1ED3D0998)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9840, &_s14descr1E72CBFA1O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0998);
  }
  return result;
}

unint64_t sub_1BAEA08E8()
{
  unint64_t result;

  result = qword_1ED3D0990;
  if (!qword_1ED3D0990)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C97C8, &_s14descr1E72CBFA1O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0990);
  }
  return result;
}

unint64_t sub_1BAEA092C()
{
  unint64_t result;

  result = qword_1EF2B2F88;
  if (!qword_1EF2B2F88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaNodeContent, &type metadata for FormatLayeredMediaNodeContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F88);
  }
  return result;
}

unint64_t sub_1BAEA0970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B2F90;
  if (!qword_1EF2B2F90)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2F80, (uint64_t (*)(void))sub_1BAEA092C, (uint64_t)&type metadata for FormatLayeredMediaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B2F90);
  }
  return result;
}

uint64_t sub_1BAEA09DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

void sub_1BAEA0EFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0B8)
  {
    sub_1BAEA0F74();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0B8);
  }
}

void sub_1BAEA0F74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEF28)
  {
    sub_1BAEA0FEC();
    sub_1BA4A2870(&qword_1ED3D12B0, (uint64_t (*)(uint64_t))sub_1BAEA0FEC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEF28);
  }
}

uint64_t sub_1BAEA0FEC()
{
  uint64_t result;

  result = qword_1ED3D12B8;
  if (!qword_1ED3D12B8)
  {
    sub_1BAEA106C();
    sub_1BA597200();
    sub_1BAEA10B0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA106C()
{
  unint64_t result;

  result = qword_1ED3D1780;
  if (!qword_1ED3D1780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9768, &_s10CodingKeysON_103);
    atomic_store(result, (unint64_t *)&qword_1ED3D1780);
  }
  return result;
}

unint64_t sub_1BAEA10B0()
{
  unint64_t result;

  result = qword_1ED3D1778;
  if (!qword_1ED3D1778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C96F0, &_s10CodingKeysON_103);
    atomic_store(result, (unint64_t *)&qword_1ED3D1778);
  }
  return result;
}

void sub_1BAEA10F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D00)
  {
    sub_1BAEA116C();
    sub_1BA4A2870(&qword_1ED3D12C0, (uint64_t (*)(uint64_t))sub_1BAEA116C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D00);
  }
}

uint64_t sub_1BAEA116C()
{
  uint64_t result;

  result = qword_1ED3D12C8;
  if (!qword_1ED3D12C8)
  {
    sub_1BAEA11EC();
    sub_1BAEA1230();
    sub_1BAEA1274();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA11EC()
{
  unint64_t result;

  result = qword_1ED3D1798;
  if (!qword_1ED3D1798)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C96B8, &_s10CodingKeysON_102);
    atomic_store(result, (unint64_t *)&qword_1ED3D1798);
  }
  return result;
}

unint64_t sub_1BAEA1230()
{
  unint64_t result;

  result = qword_1ED3D1790;
  if (!qword_1ED3D1790)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9668, &_s10CodingKeysON_102);
    atomic_store(result, (unint64_t *)&qword_1ED3D1790);
  }
  return result;
}

unint64_t sub_1BAEA1274()
{
  unint64_t result;

  result = qword_1ED3D1788;
  if (!qword_1ED3D1788)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9640, &_s10CodingKeysON_102);
    atomic_store(result, (unint64_t *)&qword_1ED3D1788);
  }
  return result;
}

void sub_1BAEA12B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0C0)
  {
    sub_1BAEA1330();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEF30, (uint64_t (*)(uint64_t))sub_1BAEA1330, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0C0);
  }
}

void sub_1BAEA1330()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEF38)
  {
    sub_1BAEA116C();
    sub_1BA4A2870(&qword_1ED3D12C0, (uint64_t (*)(uint64_t))sub_1BAEA116C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEF38);
  }
}

void sub_1BAEA13A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BE0)
  {
    sub_1BAEA1420();
    sub_1BA4A2870(&qword_1ED3D1080, (uint64_t (*)(uint64_t))sub_1BAEA1420, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BE0);
  }
}

uint64_t sub_1BAEA1420()
{
  uint64_t result;

  result = qword_1ED3D1088;
  if (!qword_1ED3D1088)
  {
    sub_1BAEA14A0();
    sub_1BA829240();
    sub_1BAEA14E4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA14A0()
{
  unint64_t result;

  result = qword_1ED3D0A10;
  if (!qword_1ED3D0A10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9608, &_s10CodingKeysON_101);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A10);
  }
  return result;
}

unint64_t sub_1BAEA14E4()
{
  unint64_t result;

  result = qword_1ED3D0A08;
  if (!qword_1ED3D0A08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9590, &_s10CodingKeysON_101);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A08);
  }
  return result;
}

void sub_1BAEA1528(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF68)
  {
    sub_1BAEA15A0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEC80, (uint64_t (*)(uint64_t))sub_1BAEA15A0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF68);
  }
}

void sub_1BAEA15A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEC88)
  {
    sub_1BAEA1420();
    sub_1BA4A2870(&qword_1ED3D1080, (uint64_t (*)(uint64_t))sub_1BAEA1420, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEC88);
  }
}

void sub_1BAEA1618()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BB8)
  {
    sub_1BAEA1690();
    sub_1BA4A2870(&qword_1ED3D1030, (uint64_t (*)(uint64_t))sub_1BAEA1690, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BB8);
  }
}

uint64_t sub_1BAEA1690()
{
  uint64_t result;

  result = qword_1ED3D1038;
  if (!qword_1ED3D1038)
  {
    sub_1BAEA1710();
    sub_1BA56BCC4();
    sub_1BAEA1754();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA1710()
{
  unint64_t result;

  result = qword_1ED3D09A8;
  if (!qword_1ED3D09A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9530, &_s10CodingKeysON_100);
    atomic_store(result, (unint64_t *)&qword_1ED3D09A8);
  }
  return result;
}

unint64_t sub_1BAEA1754()
{
  unint64_t result;

  result = qword_1ED3D09A0;
  if (!qword_1ED3D09A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C94B8, &_s10CodingKeysON_100);
    atomic_store(result, (unint64_t *)&qword_1ED3D09A0);
  }
  return result;
}

void sub_1BAEA1798(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF38)
  {
    sub_1BAEA1810();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEC20, (uint64_t (*)(uint64_t))sub_1BAEA1810, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF38);
  }
}

void sub_1BAEA1810()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEC28)
  {
    sub_1BAEA1690();
    sub_1BA4A2870(&qword_1ED3D1030, (uint64_t (*)(uint64_t))sub_1BAEA1690, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEC28);
  }
}

unint64_t sub_1BAEA1888()
{
  unint64_t result;

  result = qword_1ED3C42C8;
  if (!qword_1ED3C42C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9490, &_s10CodingTypeON_63);
    atomic_store(result, (unint64_t *)&qword_1ED3C42C8);
  }
  return result;
}

unint64_t sub_1BAEA18CC()
{
  unint64_t result;

  result = qword_1ED3BCCC8;
  if (!qword_1ED3BCCC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatString, &type metadata for FormatString);
    atomic_store(result, (unint64_t *)&qword_1ED3BCCC8);
  }
  return result;
}

void sub_1BAEA1910()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C48)
  {
    sub_1BAEA1988();
    sub_1BA4A2870(&qword_1ED3D1150, (uint64_t (*)(uint64_t))sub_1BAEA1988, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C48);
  }
}

uint64_t sub_1BAEA1988()
{
  uint64_t result;

  result = qword_1ED3D1158;
  if (!qword_1ED3D1158)
  {
    sub_1BAEA1A08();
    sub_1BA5E63C8();
    sub_1BAEA1A4C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA1A08()
{
  unint64_t result;

  result = qword_1ED3D0B08;
  if (!qword_1ED3D0B08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9458, &_s10CodingKeysON_99);
    atomic_store(result, (unint64_t *)&qword_1ED3D0B08);
  }
  return result;
}

unint64_t sub_1BAEA1A4C()
{
  unint64_t result;

  result = qword_1ED3D0B00;
  if (!qword_1ED3D0B00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C93E0, &_s10CodingKeysON_99);
    atomic_store(result, (unint64_t *)&qword_1ED3D0B00);
  }
  return result;
}

unint64_t sub_1BAEA1A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B07B8;
  if (!qword_1ED3B07B8)
  {
    sub_1BAEFBAC0(255, (unint64_t *)&unk_1ED3B07C0, (void (*)(void))sub_1BA826C64, (void (*)(void))sub_1BA826CA8);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B07B8);
  }
  return result;
}

void sub_1BAEA1AF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFE8)
  {
    sub_1BAEA1B70();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AED80, (uint64_t (*)(uint64_t))sub_1BAEA1B70, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFE8);
  }
}

void sub_1BAEA1B70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AED88)
  {
    sub_1BAEA1988();
    sub_1BA4A2870(&qword_1ED3D1150, (uint64_t (*)(uint64_t))sub_1BAEA1988, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AED88);
  }
}

void sub_1BAEA1BE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C50)
  {
    sub_1BAEA1C60();
    sub_1BA4A2870(&qword_1ED3D1160, (uint64_t (*)(uint64_t))sub_1BAEA1C60, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C50);
  }
}

uint64_t sub_1BAEA1C60()
{
  uint64_t result;

  result = qword_1ED3D1168;
  if (!qword_1ED3D1168)
  {
    sub_1BAEA1CE0();
    sub_1BA5E1B78();
    sub_1BAEA1D24();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA1CE0()
{
  unint64_t result;

  result = qword_1ED3D0B18;
  if (!qword_1ED3D0B18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C93A8, &_s10CodingKeysON_98);
    atomic_store(result, (unint64_t *)&qword_1ED3D0B18);
  }
  return result;
}

unint64_t sub_1BAEA1D24()
{
  unint64_t result;

  result = qword_1ED3D0B10;
  if (!qword_1ED3D0B10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9330, &_s10CodingKeysON_98);
    atomic_store(result, (unint64_t *)&qword_1ED3D0B10);
  }
  return result;
}

void sub_1BAEA1D68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADFF0)
  {
    sub_1BAEA1DE0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AED90, (uint64_t (*)(uint64_t))sub_1BAEA1DE0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADFF0);
  }
}

void sub_1BAEA1DE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AED98)
  {
    sub_1BAEA1C60();
    sub_1BA4A2870(&qword_1ED3D1160, (uint64_t (*)(uint64_t))sub_1BAEA1C60, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AED98);
  }
}

void sub_1BAEA1E58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE580)
  {
    sub_1BAEA1ED0();
    sub_1BA4A2870(&qword_1ED3AD838, (uint64_t (*)(uint64_t))sub_1BAEA1ED0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE580);
  }
}

uint64_t sub_1BAEA1ED0()
{
  uint64_t result;

  result = qword_1ED3AD840;
  if (!qword_1ED3AD840)
  {
    sub_1BAEA1F50();
    sub_1BA4FEC28();
    sub_1BAEA1F94();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA1F50()
{
  unint64_t result;

  result = qword_1ED3AD590;
  if (!qword_1ED3AD590)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C92F8, &_s14descr1E72CC509C10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3AD590);
  }
  return result;
}

unint64_t sub_1BAEA1F94()
{
  unint64_t result;

  result = qword_1ED3AD588;
  if (!qword_1ED3AD588)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9280, &_s14descr1E72CC509C10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3AD588);
  }
  return result;
}

void sub_1BAEA1FD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD10)
  {
    sub_1BAEA2050();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE7C0, (uint64_t (*)(uint64_t))sub_1BAEA2050, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD10);
  }
}

void sub_1BAEA2050()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE7C8)
  {
    sub_1BAEA1ED0();
    sub_1BA4A2870(&qword_1ED3AD838, (uint64_t (*)(uint64_t))sub_1BAEA1ED0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE7C8);
  }
}

void sub_1BAEA20C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2F98)
  {
    sub_1BAEA2140();
    sub_1BA4A2870(&qword_1EF2B2FC0, (uint64_t (*)(uint64_t))sub_1BAEA2140, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2F98);
  }
}

uint64_t sub_1BAEA2140()
{
  uint64_t result;

  result = qword_1EF2B2FA0;
  if (!qword_1EF2B2FA0)
  {
    sub_1BAEA21C0();
    sub_1BAEA2204();
    sub_1BAEA2248();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA21C0()
{
  unint64_t result;

  result = qword_1EF2B2FA8;
  if (!qword_1EF2B2FA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9248, &_s10CodingKeysON_97);
    atomic_store(result, (unint64_t *)&qword_1EF2B2FA8);
  }
  return result;
}

unint64_t sub_1BAEA2204()
{
  unint64_t result;

  result = qword_1EF2B2FB0;
  if (!qword_1EF2B2FB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C91F8, &_s10CodingKeysON_97);
    atomic_store(result, (unint64_t *)&qword_1EF2B2FB0);
  }
  return result;
}

unint64_t sub_1BAEA2248()
{
  unint64_t result;

  result = qword_1EF2B2FB8;
  if (!qword_1EF2B2FB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C91D0, &_s10CodingKeysON_97);
    atomic_store(result, (unint64_t *)&qword_1EF2B2FB8);
  }
  return result;
}

void sub_1BAEA228C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B2FC8)
  {
    sub_1BAEA2304();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B2FD8, (uint64_t (*)(uint64_t))sub_1BAEA2304, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B2FC8);
  }
}

void sub_1BAEA2304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2FD0)
  {
    sub_1BAEA2140();
    sub_1BA4A2870(&qword_1EF2B2FC0, (uint64_t (*)(uint64_t))sub_1BAEA2140, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2FD0);
  }
}

unint64_t sub_1BAEA237C()
{
  unint64_t result;

  result = qword_1EF2B2FE0;
  if (!qword_1EF2B2FE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9180, &_s10CodingTypeON_61);
    atomic_store(result, (unint64_t *)&qword_1EF2B2FE0);
  }
  return result;
}

unint64_t sub_1BAEA23C0()
{
  unint64_t result;

  result = qword_1ED3A0178;
  if (!qword_1ED3A0178)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.SharedMenuItem, &type metadata for FormatHeadlineBinding.SharedMenuItem);
    atomic_store(result, (unint64_t *)&qword_1ED3A0178);
  }
  return result;
}

void sub_1BAEA2404()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B2FE8)
  {
    sub_1BAEA247C();
    sub_1BA4A2870(&qword_1EF2B3010, (uint64_t (*)(uint64_t))sub_1BAEA247C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B2FE8);
  }
}

uint64_t sub_1BAEA247C()
{
  uint64_t result;

  result = qword_1EF2B2FF0;
  if (!qword_1EF2B2FF0)
  {
    sub_1BAEA24FC();
    sub_1BAEA2540();
    sub_1BAEA2584();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA24FC()
{
  unint64_t result;

  result = qword_1EF2B2FF8;
  if (!qword_1EF2B2FF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9148, &_s10CodingKeysON_96);
    atomic_store(result, (unint64_t *)&qword_1EF2B2FF8);
  }
  return result;
}

unint64_t sub_1BAEA2540()
{
  unint64_t result;

  result = qword_1EF2B3000;
  if (!qword_1EF2B3000)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C90F8, &_s10CodingKeysON_96);
    atomic_store(result, (unint64_t *)&qword_1EF2B3000);
  }
  return result;
}

unint64_t sub_1BAEA2584()
{
  unint64_t result;

  result = qword_1EF2B3008;
  if (!qword_1EF2B3008)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C90D0, &_s10CodingKeysON_96);
    atomic_store(result, (unint64_t *)&qword_1EF2B3008);
  }
  return result;
}

unint64_t sub_1BAEA25C8()
{
  unint64_t result;

  result = qword_1ED39E6B8;
  if (!qword_1ED39E6B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaNodeContent, &type metadata for FormatMicaNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED39E6B8);
  }
  return result;
}

void sub_1BAEA260C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3018)
  {
    sub_1BAEA2684();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3028, (uint64_t (*)(uint64_t))sub_1BAEA2684, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3018);
  }
}

void sub_1BAEA2684()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3020)
  {
    sub_1BAEA247C();
    sub_1BA4A2870(&qword_1EF2B3010, (uint64_t (*)(uint64_t))sub_1BAEA247C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3020);
  }
}

uint64_t sub_1BAEA26FC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F65646976 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E6F69746F6DLL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x737265746C6966 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_1BAEA2C30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F65646976 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F69746F6DLL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x737265746C6966 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1BAEA3090(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646E6962 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEA3170(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6974706FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F74617265706FLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEA32AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73676E69727473 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEA34CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEA36A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465657073 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D69546E69676562 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7366664F656D6974 && a2 == 0xEA00000000007465 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65646F4D6C6C6966 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F43746165706572 && a2 == 0xEB00000000746E75 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7544746165706572 && a2 == 0xEE006E6F69746172 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x657665726F747561 && a2 == 0xEC00000073657372 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7546676E696D6974 && a2 == 0xEE006E6F6974636ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB971890 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1BAEA3B70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x31746E696F70 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x32746E696F70 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x33746E696F70 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x34746E696F70 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEA3D5C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567616D69 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEA3F48(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v18[4];

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v1)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BAEE402C();
    v18[3] = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v11 = sub_1BB8740EC();
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v13 = (unint64_t *)(v11 + 40);
  while (1)
  {
    v14 = *v13;
    if (*v13 >= 4)
      break;
    v13 += 2;
    if (!--v12)
      goto LABEL_7;
  }
  v15 = *(v13 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v2 = (void *)swift_allocError();
  *(_QWORD *)v16 = v15;
  *(_QWORD *)(v16 + 8) = v14;
  *(_QWORD *)(v16 + 16) = &unk_1E726CCC0;
  *(_OWORD *)(v16 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v15, v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v2);
  swift_willThrow();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

uint64_t sub_1BAEA44C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567616D69 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEA4650(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6954616964656DLL && a2 == 0xEB00000000676E69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEA47AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  char v65;
  unint64_t v66;
  int v67;
  char v68;
  __int128 v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  char v75;
  __int128 v76;
  char v77;
  __int128 v78;
  char v79;
  char *v80;

  sub_1BA6927D0();
  v60 = v2;
  v58 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v59 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v61 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v47 - v6;
  sub_1BAEEF960();
  v9 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  *(_QWORD *)&v63 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA5578();
  sub_1BA4A2870(&qword_1EF2B3060, (uint64_t (*)(uint64_t))sub_1BAEA5578, (uint64_t)&unk_1BB8FFC6C);
  v13 = (uint64_t)v80;
  sub_1BB87468C();
  v14 = (void *)v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v80 = v7;
  v57 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v18 = v62;
  v17 = v63;
  v19 = (uint64_t)v11;
  if ((v16 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = *((_QWORD *)v22 - 2);
      v26 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v28 = swift_bridgeObjectRelease();
      v80 = (char *)v19;
      MEMORY[0x1E0C80A78](v28);
      sub_1BAEA55F8();
      sub_1BAEA563C();
      sub_1BAEA5680();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E7250B58);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v30 = v27;
      *(_QWORD *)(v30 + 8) = v26;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v27, v26, 1);
      (*(void (**)(char *, uint64_t))(v63 + 8))(v80, v18);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v23 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEF960);
  v25 = v24;
  v56 = v23;
  v78 = xmmword_1BB8A1A10;
  v79 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v31 = v74;
  v78 = xmmword_1BB8D2D60;
  v79 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v54 = v74;
  v55 = v31;
  v53 = xmmword_1BB8D2D70;
  v78 = xmmword_1BB8D2D70;
  v79 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v74 = v53;
    v75 = 0;
    sub_1BAEB7D04();
    v33 = v61;
    sub_1BB8740D4();
    v34 = (uint64_t)v80;
    *(_QWORD *)&v53 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v34, v33);
  }
  else
  {
    *(_QWORD *)&v53 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatMicaNodeStyle();
  v78 = xmmword_1BB8D2D90;
  v79 = 0;
  sub_1BA4A2870(&qword_1EF2B31C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeStyle, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
  sub_1BB874068();
  v35 = v74;
  v78 = xmmword_1BB8D2D80;
  v79 = 0;
  sub_1BAEA25C8();
  sub_1BB8740D4();
  v80 = (char *)v35;
  v61 = v25;
  v36 = v74;
  v76 = xmmword_1BB8D2DA0;
  v77 = 0;
  sub_1BA5015B4();
  sub_1BB874068();
  v57 = v36;
  sub_1BA6A09F0((uint64_t)&v78, (uint64_t)&v74, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  v52 = xmmword_1BB8D2DB0;
  v69 = xmmword_1BB8D2DB0;
  v70 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v64 = v52;
    v65 = 0;
    sub_1BA5331D0();
    sub_1BB8740D4();
    v37 = v17;
    v38 = v73;
    v39 = BYTE4(v73);
  }
  else
  {
    v37 = v17;
    v38 = 2;
    v39 = 2;
  }
  LODWORD(v52) = v39;
  v63 = xmmword_1BB8D2DD0;
  v69 = xmmword_1BB8D2DD0;
  v70 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v64 = v63;
    v65 = 0;
    sub_1BB8740D4();
    *(_QWORD *)&v63 = a1;
    v50 = v73;
  }
  else
  {
    *(_QWORD *)&v63 = a1;
    v50 = 0;
  }
  v51 = xmmword_1BB8D2DE0;
  v69 = xmmword_1BB8D2DE0;
  v70 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v64 = v51;
    v65 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v40 = v73;
  }
  else
  {
    v40 = 0x8000000000000000;
  }
  v51 = xmmword_1BB8D2DF0;
  v69 = xmmword_1BB8D2DF0;
  v70 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v64 = v51;
    v65 = 0;
    sub_1BB8740D4();
    v41 = v19;
    v42 = v73;
  }
  else
  {
    v41 = v19;
    v42 = 1;
  }
  v69 = xmmword_1BB8D2E00;
  v70 = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  LODWORD(v51) = v42;
  v49 = v64;
  v48 = BYTE8(v64);
  v47 = xmmword_1BB8D2E10;
  v69 = xmmword_1BB8D2E10;
  v70 = 0;
  v43 = v41;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v64 = v47;
    v65 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v44 = v59;
    v45 = v60;
    v46 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v44, v45);
  }
  else
  {
    v46 = MEMORY[0x1E0DEE9E8];
  }
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v43, v62);
  v72 = v54;
  v73 = v55;
  v71 = v57;
  sub_1BA6A09F0((uint64_t)&v74, (uint64_t)&v69, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  v67 = v38;
  v68 = v52;
  v66 = v40;
  *(_QWORD *)&v64 = v49;
  BYTE8(v64) = v48;
  type metadata accessor for FormatMicaNode();
  swift_allocObject();
  KeyPath = FormatMicaNode.init(identifier:size:resize:adjustments:style:content:mediaTiming:runMode:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:)(v56, v61, &v73, &v72, v53, (uint64_t)v80, &v71, (uint64_t)&v69, &v67, v50, (uint64_t *)&v66, v51, (uint64_t *)&v64, v46);
  __swift_destroy_boxed_opaque_existential_1(v63);
  return KeyPath;
}

void sub_1BAEA5488(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3030)
  {
    sub_1BAEA5500();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3068, (uint64_t (*)(uint64_t))sub_1BAEA5500, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3030);
  }
}

void sub_1BAEA5500()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3038)
  {
    sub_1BAEA5578();
    sub_1BA4A2870(&qword_1EF2B3060, (uint64_t (*)(uint64_t))sub_1BAEA5578, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3038);
  }
}

uint64_t sub_1BAEA5578()
{
  uint64_t result;

  result = qword_1EF2B3040;
  if (!qword_1EF2B3040)
  {
    sub_1BAEA55F8();
    sub_1BAEA563C();
    sub_1BAEA5680();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA55F8()
{
  unint64_t result;

  result = qword_1EF2B3048;
  if (!qword_1EF2B3048)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9098, &_s10CodingKeysON_95);
    atomic_store(result, (unint64_t *)&qword_1EF2B3048);
  }
  return result;
}

unint64_t sub_1BAEA563C()
{
  unint64_t result;

  result = qword_1EF2B3050;
  if (!qword_1EF2B3050)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9048, &_s10CodingKeysON_95);
    atomic_store(result, (unint64_t *)&qword_1EF2B3050);
  }
  return result;
}

unint64_t sub_1BAEA5680()
{
  unint64_t result;

  result = qword_1EF2B3058;
  if (!qword_1EF2B3058)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C9020, &_s10CodingKeysON_95);
    atomic_store(result, (unint64_t *)&qword_1EF2B3058);
  }
  return result;
}

unint64_t sub_1BAEA56C4()
{
  unint64_t result;

  result = qword_1ED39F910;
  if (!qword_1ED39F910)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRunMode, &type metadata for FormatRunMode);
    atomic_store(result, (unint64_t *)&qword_1ED39F910);
  }
  return result;
}

unint64_t sub_1BAEA5708()
{
  unint64_t result;

  result = qword_1EF2B3070;
  if (!qword_1EF2B3070)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8FF8, &_s10CodingTypeON_60);
    atomic_store(result, (unint64_t *)&qword_1EF2B3070);
  }
  return result;
}

unint64_t sub_1BAEA574C()
{
  unint64_t result;

  result = qword_1EF2B3078;
  if (!qword_1EF2B3078)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8FD0, &_s10CodingTypeON_59);
    atomic_store(result, (unint64_t *)&qword_1EF2B3078);
  }
  return result;
}

unint64_t sub_1BAEA5790()
{
  unint64_t result;

  result = qword_1EF2B3088;
  if (!qword_1EF2B3088)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaNodeContent, &type metadata for FormatMicaNodeContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B3088);
  }
  return result;
}

unint64_t sub_1BAEA57D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B3090;
  if (!qword_1EF2B3090)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3080, (uint64_t (*)(void))sub_1BAEA5790, (uint64_t)&type metadata for FormatMicaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B3090);
  }
  return result;
}

unint64_t sub_1BAEA5840()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B30A0;
  if (!qword_1EF2B30A0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3098, (uint64_t (*)(void))sub_1BAEA5790, (uint64_t)&type metadata for FormatMicaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B30A0);
  }
  return result;
}

uint64_t sub_1BAEA58AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6D6954616964656DLL && a2 == 0xEB00000000676E69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65646F4D6E7572 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_1BAEA5E4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[4];
  int v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  char v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;

  sub_1BAEFBAC0(0, &qword_1EF2B5C98, (void (*)(void))sub_1BAEEF570, (void (*)(void))sub_1BAEEF508);
  v64 = *(_QWORD *)(v2 - 8);
  v65 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = &v49[-v3];
  sub_1BAEEF5B4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v49[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA68B8();
  sub_1BA4A2870(&qword_1EF2B30D8, (uint64_t (*)(uint64_t))sub_1BAEA68B8, (uint64_t)&unk_1BB8FFC6C);
  v10 = v66;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
    goto LABEL_12;
  v61 = v4;
  v62 = 0;
  v12 = v65;
  v63 = v7;
  v66 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    v15 = v66;
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v25 = *((_QWORD *)v18 - 2);
      v26 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      v28 = v15;
      sub_1BAEA6938();
      sub_1BAEA697C();
      sub_1BAEA69C0();
      swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E7251A48);
      swift_release_n();
      sub_1BA98D1F0();
      v11 = swift_allocError();
      *(_QWORD *)v30 = v25;
      *(_QWORD *)(v30 + 8) = v26;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v26, 1);
      (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v9, v28);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v19 = v62;
  v20 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEF5B4);
  v11 = v19;
  if (v19)
  {
    (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v9, v66);
LABEL_12:
    sub_1BA7F8B78(a1, v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  v22 = v20;
  v23 = v21;
  v69 = xmmword_1BB8A1A10;
  LOBYTE(v70) = 0;
  v24 = v66;
  v32 = sub_1BB874098();
  v62 = v33;
  v60 = xmmword_1BB8D2D60;
  v69 = xmmword_1BB8D2D60;
  LOBYTE(v70) = 0;
  v34 = sub_1BB8740F8();
  if ((v34 & 1) != 0)
  {
    *((_QWORD *)&v58 + 1) = v22;
    v67 = v60;
    v68 = 0;
    sub_1BAEEF62C();
    v35 = v61;
    sub_1BB8740D4();
    v59 = v32;
    *(_QWORD *)&v60 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v64 + 8))(v35, v12);
    v22 = *((_QWORD *)&v58 + 1);
  }
  else
  {
    v59 = v32;
    *(_QWORD *)&v60 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v69 = xmmword_1BB8D2D70;
  LOBYTE(v70) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v36 = v67;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v69 = xmmword_1BB8D2D90;
  LOBYTE(v70) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v65 = v36;
  v37 = (_BYTE *)v67;
  v67 = xmmword_1BB8D2D80;
  v68 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v61 = v37;
  v38 = v69;
  LODWORD(v64) = v70;
  v67 = xmmword_1BB8D2DA0;
  v68 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v58 = v38;
  v53 = v69;
  v54 = v70;
  v55 = v71;
  v56 = v72;
  v39 = v74;
  v57 = v73;
  v40 = v75;
  v52 = v76;
  v51 = v77;
  v50 = v78;
  v69 = xmmword_1BB8D2DB0;
  LOBYTE(v70) = 0;
  v41 = sub_1BB874038();
  (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v9, v24);
  type metadata accessor for FormatMicaNodeStyle();
  v11 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = v22;
  *(_QWORD *)(v11 + 24) = v23;
  v42 = v62;
  *(_QWORD *)(v11 + 32) = v59;
  *(_QWORD *)(v11 + 40) = v42;
  swift_beginAccess();
  v43 = v65;
  *(_QWORD *)(v11 + 48) = v60;
  *(_QWORD *)(v11 + 56) = v43;
  v44 = v58;
  *(_QWORD *)(v11 + 64) = v61;
  *(_OWORD *)(v11 + 72) = __PAIR128__(*((unint64_t *)&v58 + 1), v44);
  *(_BYTE *)(v11 + 88) = v64;
  v45 = *((_QWORD *)&v53 + 1);
  *(_QWORD *)(v11 + 96) = v53;
  *(_QWORD *)(v11 + 104) = v45;
  v46 = v55;
  *(_QWORD *)(v11 + 112) = v54;
  *(_QWORD *)(v11 + 120) = v46;
  v47 = v57;
  *(_QWORD *)(v11 + 128) = v56;
  *(_QWORD *)(v11 + 136) = v47;
  *(_QWORD *)(v11 + 144) = v39;
  *(_QWORD *)(v11 + 152) = v40;
  v48 = v51;
  *(_QWORD *)(v11 + 160) = v52;
  *(_QWORD *)(v11 + 168) = v48;
  *(_BYTE *)(v11 + 176) = v50;
  *(_BYTE *)(v11 + 177) = v41;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

void sub_1BAEA67C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B30A8)
  {
    sub_1BAEA6840();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B30E0, (uint64_t (*)(uint64_t))sub_1BAEA6840, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B30A8);
  }
}

void sub_1BAEA6840()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B30B0)
  {
    sub_1BAEA68B8();
    sub_1BA4A2870(&qword_1EF2B30D8, (uint64_t (*)(uint64_t))sub_1BAEA68B8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B30B0);
  }
}

uint64_t sub_1BAEA68B8()
{
  uint64_t result;

  result = qword_1EF2B30B8;
  if (!qword_1EF2B30B8)
  {
    sub_1BAEA6938();
    sub_1BAEA697C();
    sub_1BAEA69C0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA6938()
{
  unint64_t result;

  result = qword_1EF2B30C0;
  if (!qword_1EF2B30C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8F98, &_s10CodingKeysON_94);
    atomic_store(result, (unint64_t *)&qword_1EF2B30C0);
  }
  return result;
}

unint64_t sub_1BAEA697C()
{
  unint64_t result;

  result = qword_1EF2B30C8;
  if (!qword_1EF2B30C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8F48, &_s10CodingKeysON_94);
    atomic_store(result, (unint64_t *)&qword_1EF2B30C8);
  }
  return result;
}

unint64_t sub_1BAEA69C0()
{
  unint64_t result;

  result = qword_1EF2B30D0;
  if (!qword_1EF2B30D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8F20, &_s10CodingKeysON_94);
    atomic_store(result, (unint64_t *)&qword_1EF2B30D0);
  }
  return result;
}

void sub_1BAEA6A04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B30E8)
  {
    sub_1BAEA6A7C();
    sub_1BA4A2870(&qword_1EF2B3110, (uint64_t (*)(uint64_t))sub_1BAEA6A7C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B30E8);
  }
}

uint64_t sub_1BAEA6A7C()
{
  uint64_t result;

  result = qword_1EF2B30F0;
  if (!qword_1EF2B30F0)
  {
    sub_1BAEA6AFC();
    sub_1BAEA6B40();
    sub_1BAEA6B84();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA6AFC()
{
  unint64_t result;

  result = qword_1EF2B30F8;
  if (!qword_1EF2B30F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8EE8, &_s10CodingKeysON_93);
    atomic_store(result, (unint64_t *)&qword_1EF2B30F8);
  }
  return result;
}

unint64_t sub_1BAEA6B40()
{
  unint64_t result;

  result = qword_1EF2B3100;
  if (!qword_1EF2B3100)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8E98, &_s10CodingKeysON_93);
    atomic_store(result, (unint64_t *)&qword_1EF2B3100);
  }
  return result;
}

unint64_t sub_1BAEA6B84()
{
  unint64_t result;

  result = qword_1EF2B3108;
  if (!qword_1EF2B3108)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8E70, &_s10CodingKeysON_93);
    atomic_store(result, (unint64_t *)&qword_1EF2B3108);
  }
  return result;
}

void sub_1BAEA6BC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3118)
  {
    sub_1BAEA6C40();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3128, (uint64_t (*)(uint64_t))sub_1BAEA6C40, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3118);
  }
}

void sub_1BAEA6C40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3120)
  {
    sub_1BAEA6A7C();
    sub_1BA4A2870(&qword_1EF2B3110, (uint64_t (*)(uint64_t))sub_1BAEA6A7C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3120);
  }
}

unint64_t sub_1BAEA6CB8()
{
  unint64_t result;

  result = qword_1EF2B3130;
  if (!qword_1EF2B3130)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8E48, &_s10CodingTypeON_58);
    atomic_store(result, (unint64_t *)&qword_1EF2B3130);
  }
  return result;
}

unint64_t sub_1BAEA6CFC()
{
  unint64_t result;

  result = qword_1EF2B3138;
  if (!qword_1EF2B3138)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMotion.TranslateWithScale, &type metadata for FormatMotion.TranslateWithScale);
    atomic_store(result, (unint64_t *)&qword_1EF2B3138);
  }
  return result;
}

void sub_1BAEA6D40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD *))
{
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!*a2)
  {
    v6[0] = MEMORY[0x1E0DEB070];
    v6[1] = &protocol witness table for Double;
    v6[2] = MEMORY[0x1E0DEB098];
    v6[3] = MEMORY[0x1E0DEB0B0];
    v4 = a3(0, v6);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BAEA6DB4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAEA6D40(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAEA6DF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B3160;
  if (!qword_1EF2B3160)
  {
    sub_1BA50CAA8(255, (unint64_t *)&qword_1EF2B3158, MEMORY[0x1E0DEB070], (uint64_t)&protocol witness table for Double, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B3160);
  }
  return result;
}

void sub_1BAEA6E5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3168)
  {
    sub_1BAEA6ED4();
    sub_1BA4A2870(&qword_1EF2B3190, (uint64_t (*)(uint64_t))sub_1BAEA6ED4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3168);
  }
}

uint64_t sub_1BAEA6ED4()
{
  uint64_t result;

  result = qword_1EF2B3170;
  if (!qword_1EF2B3170)
  {
    sub_1BAEA6F54();
    sub_1BAEA6F98();
    sub_1BAEA6FDC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA6F54()
{
  unint64_t result;

  result = qword_1EF2B3178;
  if (!qword_1EF2B3178)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8E10, &_s10CodingKeysON_92);
    atomic_store(result, (unint64_t *)&qword_1EF2B3178);
  }
  return result;
}

unint64_t sub_1BAEA6F98()
{
  unint64_t result;

  result = qword_1EF2B3180;
  if (!qword_1EF2B3180)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8DC0, &_s10CodingKeysON_92);
    atomic_store(result, (unint64_t *)&qword_1EF2B3180);
  }
  return result;
}

unint64_t sub_1BAEA6FDC()
{
  unint64_t result;

  result = qword_1EF2B3188;
  if (!qword_1EF2B3188)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8D98, &_s10CodingKeysON_92);
    atomic_store(result, (unint64_t *)&qword_1EF2B3188);
  }
  return result;
}

void sub_1BAEA7020(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3198)
  {
    sub_1BAEA7098();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B31A8, (uint64_t (*)(uint64_t))sub_1BAEA7098, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3198);
  }
}

void sub_1BAEA7098()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B31A0)
  {
    sub_1BAEA6ED4();
    sub_1BA4A2870(&qword_1EF2B3190, (uint64_t (*)(uint64_t))sub_1BAEA6ED4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B31A0);
  }
}

uint64_t sub_1BAEA7110()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAEA715C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1BAEA7508(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1BAEA77DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74616C736E617274 && a2 == 0xE900000000000065;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEA7924(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v2);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAEA7994(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRelease();
  sub_1BA719718(v2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(v3);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1BAEA7A04()
{
  unint64_t result;

  result = qword_1ED3A7CB0;
  if (!qword_1ED3A7CB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeStyle, &type metadata for FormatPuzzleEmbedNodeStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3A7CB0);
  }
  return result;
}

void sub_1BAEA7A48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AA0)
  {
    sub_1BAEA7AC0();
    sub_1BA4A2870(&qword_1ED3D0E00, (uint64_t (*)(uint64_t))sub_1BAEA7AC0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AA0);
  }
}

uint64_t sub_1BAEA7AC0()
{
  uint64_t result;

  result = qword_1ED3D0E08;
  if (!qword_1ED3D0E08)
  {
    sub_1BAEA7B40();
    sub_1BA57E284();
    sub_1BAEA7B84();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA7B40()
{
  unint64_t result;

  result = qword_1ED3D0750;
  if (!qword_1ED3D0750)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8D38, &_s10CodingKeysON_91);
    atomic_store(result, (unint64_t *)&qword_1ED3D0750);
  }
  return result;
}

unint64_t sub_1BAEA7B84()
{
  unint64_t result;

  result = qword_1ED3D0748;
  if (!qword_1ED3D0748)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8CC0, &_s10CodingKeysON_91);
    atomic_store(result, (unint64_t *)&qword_1ED3D0748);
  }
  return result;
}

void sub_1BAEA7BC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDD8)
  {
    sub_1BAEA7C40();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE950, (uint64_t (*)(uint64_t))sub_1BAEA7C40, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDD8);
  }
}

void sub_1BAEA7C40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE958)
  {
    sub_1BAEA7AC0();
    sub_1BA4A2870(&qword_1ED3D0E00, (uint64_t (*)(uint64_t))sub_1BAEA7AC0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE958);
  }
}

unint64_t sub_1BAEA7CB8()
{
  unint64_t result;

  result = qword_1ED3A54D0;
  if (!qword_1ED3A54D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8C98, &_s10CodingTypeON_56);
    atomic_store(result, (unint64_t *)&qword_1ED3A54D0);
  }
  return result;
}

unint64_t sub_1BAEA7CFC()
{
  unint64_t result;

  result = qword_1EF2B31C8;
  if (!qword_1EF2B31C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberBinding, &type metadata for FormatNumberBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B31C8);
  }
  return result;
}

unint64_t sub_1BAEA7D40()
{
  unint64_t result;

  result = qword_1EF2B31D0;
  if (!qword_1EF2B31D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8C70, &_s10CodingTypeON_55);
    atomic_store(result, (unint64_t *)&qword_1EF2B31D0);
  }
  return result;
}

void sub_1BAEA7D84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E18)
  {
    sub_1BAEA7DFC();
    sub_1BA4A2870(&qword_1ED3D14F0, (uint64_t (*)(uint64_t))sub_1BAEA7DFC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E18);
  }
}

uint64_t sub_1BAEA7DFC()
{
  uint64_t result;

  result = qword_1ED3D14F8;
  if (!qword_1ED3D14F8)
  {
    sub_1BAEA7E7C();
    sub_1BA63A84C();
    sub_1BAEA7EC0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA7E7C()
{
  unint64_t result;

  result = qword_1ED3D0220;
  if (!qword_1ED3D0220)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8C38, &_s10CodingKeysON_90);
    atomic_store(result, (unint64_t *)&qword_1ED3D0220);
  }
  return result;
}

unint64_t sub_1BAEA7EC0()
{
  unint64_t result;

  result = qword_1ED3D0218;
  if (!qword_1ED3D0218)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8BC0, &_s10CodingKeysON_90);
    atomic_store(result, (unint64_t *)&qword_1ED3D0218);
  }
  return result;
}

void sub_1BAEA7F04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE248)
  {
    sub_1BAEA7F7C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF238, (uint64_t (*)(uint64_t))sub_1BAEA7F7C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE248);
  }
}

void sub_1BAEA7F7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF240)
  {
    sub_1BAEA7DFC();
    sub_1BA4A2870(&qword_1ED3D14F0, (uint64_t (*)(uint64_t))sub_1BAEA7DFC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF240);
  }
}

void sub_1BAEA7FF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AA8)
  {
    sub_1BAEA806C();
    sub_1BA4A2870(&qword_1ED3D0E10, (uint64_t (*)(uint64_t))sub_1BAEA806C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AA8);
  }
}

uint64_t sub_1BAEA806C()
{
  uint64_t result;

  result = qword_1ED3D0E18;
  if (!qword_1ED3D0E18)
  {
    sub_1BAEA80EC();
    sub_1BA64745C();
    sub_1BAEA8130();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA80EC()
{
  unint64_t result;

  result = qword_1ED3D0760;
  if (!qword_1ED3D0760)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8B88, &_s10CodingKeysON_89);
    atomic_store(result, (unint64_t *)&qword_1ED3D0760);
  }
  return result;
}

unint64_t sub_1BAEA8130()
{
  unint64_t result;

  result = qword_1ED3D0758;
  if (!qword_1ED3D0758)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8B10, &_s10CodingKeysON_89);
    atomic_store(result, (unint64_t *)&qword_1ED3D0758);
  }
  return result;
}

unint64_t sub_1BAEA8174()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4720;
  if (!qword_1ED3C4720)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4728, (void (*)(void))sub_1BA823D28, (void (*)(void))sub_1BA823D6C);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4720);
  }
  return result;
}

void sub_1BAEA81DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDE0)
  {
    sub_1BAEA8254();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE960, (uint64_t (*)(uint64_t))sub_1BAEA8254, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDE0);
  }
}

void sub_1BAEA8254()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE968)
  {
    sub_1BAEA806C();
    sub_1BA4A2870(&qword_1ED3D0E10, (uint64_t (*)(uint64_t))sub_1BAEA806C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE968);
  }
}

void sub_1BAEA82CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19C0)
  {
    sub_1BAEA8344();
    sub_1BA4A2870(&qword_1ED3D0C40, (uint64_t (*)(uint64_t))sub_1BAEA8344, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19C0);
  }
}

uint64_t sub_1BAEA8344()
{
  uint64_t result;

  result = qword_1ED3D0C48;
  if (!qword_1ED3D0C48)
  {
    sub_1BAEA83C4();
    sub_1BA606604();
    sub_1BAEA8408();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA83C4()
{
  unint64_t result;

  result = qword_1ED3D0540;
  if (!qword_1ED3D0540)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8AD8, &_s10CodingKeysON_88);
    atomic_store(result, (unint64_t *)&qword_1ED3D0540);
  }
  return result;
}

unint64_t sub_1BAEA8408()
{
  unint64_t result;

  result = qword_1ED3D0538;
  if (!qword_1ED3D0538)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8A60, &_s10CodingKeysON_88);
    atomic_store(result, (unint64_t *)&qword_1ED3D0538);
  }
  return result;
}

void sub_1BAEA844C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCC8)
  {
    sub_1BAEA84C4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE738, (uint64_t (*)(uint64_t))sub_1BAEA84C4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCC8);
  }
}

void sub_1BAEA84C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE740)
  {
    sub_1BAEA8344();
    sub_1BA4A2870(&qword_1ED3D0C40, (uint64_t (*)(uint64_t))sub_1BAEA8344, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE740);
  }
}

void sub_1BAEA853C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC0B8)
  {
    sub_1BAEA85B4();
    sub_1BA4A2870(&qword_1ED3ABF78, (uint64_t (*)(uint64_t))sub_1BAEA85B4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC0B8);
  }
}

uint64_t sub_1BAEA85B4()
{
  uint64_t result;

  result = qword_1ED3ABF80;
  if (!qword_1ED3ABF80)
  {
    sub_1BAEA8634();
    sub_1BAEA8678();
    sub_1BAEA86BC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA8634()
{
  unint64_t result;

  result = qword_1ED3ABDE0;
  if (!qword_1ED3ABDE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8A28, &_s10CodingKeysON_87);
    atomic_store(result, (unint64_t *)&qword_1ED3ABDE0);
  }
  return result;
}

unint64_t sub_1BAEA8678()
{
  unint64_t result;

  result = qword_1ED3A5840;
  if (!qword_1ED3A5840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C89D8, &_s10CodingKeysON_87);
    atomic_store(result, (unint64_t *)&qword_1ED3A5840);
  }
  return result;
}

unint64_t sub_1BAEA86BC()
{
  unint64_t result;

  result = qword_1ED3ABDD8;
  if (!qword_1ED3ABDD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C89B0, &_s10CodingKeysON_87);
    atomic_store(result, (unint64_t *)&qword_1ED3ABDD8);
  }
  return result;
}

void sub_1BAEA8700(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE298)
  {
    sub_1BAEA8778();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF2D0, (uint64_t (*)(uint64_t))sub_1BAEA8778, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE298);
  }
}

void sub_1BAEA8778()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF2D8)
  {
    sub_1BAEA85B4();
    sub_1BA4A2870(&qword_1ED3ABF78, (uint64_t (*)(uint64_t))sub_1BAEA85B4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF2D8);
  }
}

uint64_t sub_1BAEA87F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEA88D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6973736572707865 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEA89BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69646E756F72 && a2 == 0xEC00000065646F4DLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB971770 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB971790 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB9717B0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BB9717D0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB9717F0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB971810 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C7069746C756DLL && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1BAEA8D80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65646E65706564 && a2 == 0xEA00000000007963 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB9718B0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEA8F8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265696669646F6DLL && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1BAEA90E8(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  unint64_t v20;

  v2 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v10 = (unint64_t)v9;
  sub_1BB87468C();
  if (v1)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v10 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v16 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v2 = (void *)swift_allocError();
      *(_QWORD *)v17 = v16;
      *(_QWORD *)(v17 + 8) = v10;
      *(_QWORD *)(v17 + 16) = &unk_1E726D170;
      *(_OWORD *)(v17 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v16, v10);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAEE36E0();
  v19 = 0uLL;
  sub_1BB8740D4();
  if ((v20 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = 0;
  }
  else
  {
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B96C0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA978], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v19 = xmmword_1BB87FC90;
    sub_1BA64D430((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v20;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v10;
}

uint64_t sub_1BAEA93F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEA9594(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F74617265706FLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_1BAEA9738(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD18)
  {
    sub_1BAEA97B0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE7D0, (uint64_t (*)(uint64_t))sub_1BAEA97B0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD18);
  }
}

void sub_1BAEA97B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE7D8)
  {
    sub_1BAEA9828();
    sub_1BA4A2870(&qword_1ED3D0CA0, (uint64_t (*)(uint64_t))sub_1BAEA9828, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE7D8);
  }
}

uint64_t sub_1BAEA9828()
{
  uint64_t result;

  result = qword_1ED3D0CA8;
  if (!qword_1ED3D0CA8)
  {
    sub_1BAEA98A8();
    sub_1BA7B1C40();
    sub_1BAEA98EC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA98A8()
{
  unint64_t result;

  result = qword_1ED3D05A0;
  if (!qword_1ED3D05A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8978, &_s10CodingKeysON_86);
    atomic_store(result, (unint64_t *)&qword_1ED3D05A0);
  }
  return result;
}

unint64_t sub_1BAEA98EC()
{
  unint64_t result;

  result = qword_1ED3D0598;
  if (!qword_1ED3D0598)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8900, &_s10CodingKeysON_86);
    atomic_store(result, (unint64_t *)&qword_1ED3D0598);
  }
  return result;
}

void sub_1BAEA9930()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CC0)
  {
    sub_1BAEA99A8();
    sub_1BA4A2870(&qword_1ED3D1240, (uint64_t (*)(uint64_t))sub_1BAEA99A8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CC0);
  }
}

uint64_t sub_1BAEA99A8()
{
  uint64_t result;

  result = qword_1ED3D1248;
  if (!qword_1ED3D1248)
  {
    sub_1BAEA9A28();
    sub_1BA540300();
    sub_1BAEA9A6C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA9A28()
{
  unint64_t result;

  result = qword_1ED3D1710;
  if (!qword_1ED3D1710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C88C8, &_s10CodingKeysON_85);
    atomic_store(result, (unint64_t *)&qword_1ED3D1710);
  }
  return result;
}

unint64_t sub_1BAEA9A6C()
{
  unint64_t result;

  result = qword_1ED3D1708;
  if (!qword_1ED3D1708)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8850, &_s10CodingKeysON_85);
    atomic_store(result, (unint64_t *)&qword_1ED3D1708);
  }
  return result;
}

unint64_t sub_1BAEA9AB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A3828;
  if (!qword_1ED3A3828)
  {
    sub_1BAEFBAC0(255, (unint64_t *)&qword_1ED3C4760, (void (*)(void))sub_1BA82089C, (void (*)(void))sub_1BA8208E0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A3828);
  }
  return result;
}

void sub_1BAEA9B18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE078)
  {
    sub_1BAEA9B90();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEEA0, (uint64_t (*)(uint64_t))sub_1BAEA9B90, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE078);
  }
}

void sub_1BAEA9B90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEEA8)
  {
    sub_1BAEA99A8();
    sub_1BA4A2870(&qword_1ED3D1240, (uint64_t (*)(uint64_t))sub_1BAEA99A8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEEA8);
  }
}

uint64_t sub_1BAEA9C08()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEA9C14()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE35C3C);
}

unint64_t sub_1BAEA9C20()
{
  unint64_t result;

  result = qword_1ED3A9BE8;
  if (!qword_1ED3A9BE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8800, &_s10CodingTypeON_53);
    atomic_store(result, (unint64_t *)&qword_1ED3A9BE8);
  }
  return result;
}

unint64_t sub_1BAEA9C64()
{
  unint64_t result;

  result = qword_1ED3A9BD0;
  if (!qword_1ED3A9BD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C87D8, &_s14descr1E72CC479V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A9BD0);
  }
  return result;
}

void sub_1BAEA9CA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A40)
  {
    sub_1BAEA9D20();
    sub_1BA4A2870(&qword_1ED3D0D40, (uint64_t (*)(uint64_t))sub_1BAEA9D20, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A40);
  }
}

uint64_t sub_1BAEA9D20()
{
  uint64_t result;

  result = qword_1ED3D0D48;
  if (!qword_1ED3D0D48)
  {
    sub_1BAEA9DA0();
    sub_1BA5ADB40();
    sub_1BAEA9DE4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEA9DA0()
{
  unint64_t result;

  result = qword_1ED3D0690;
  if (!qword_1ED3D0690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C87A0, &_s14descr1E72CBEB9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0690);
  }
  return result;
}

unint64_t sub_1BAEA9DE4()
{
  unint64_t result;

  result = qword_1ED3D0688;
  if (!qword_1ED3D0688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8728, &_s14descr1E72CBEB9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0688);
  }
  return result;
}

void sub_1BAEA9E28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD68)
  {
    sub_1BAEA9EA0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE870, (uint64_t (*)(uint64_t))sub_1BAEA9EA0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD68);
  }
}

void sub_1BAEA9EA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE878)
  {
    sub_1BAEA9D20();
    sub_1BA4A2870(&qword_1ED3D0D40, (uint64_t (*)(uint64_t))sub_1BAEA9D20, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE878);
  }
}

void sub_1BAEA9F18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B31D8)
  {
    sub_1BAEA9F90();
    sub_1BA4A2870(&qword_1EF2B3200, (uint64_t (*)(uint64_t))sub_1BAEA9F90, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B31D8);
  }
}

uint64_t sub_1BAEA9F90()
{
  uint64_t result;

  result = qword_1EF2B31E0;
  if (!qword_1EF2B31E0)
  {
    sub_1BAEAA010();
    sub_1BAEAA054();
    sub_1BAEAA098();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAA010()
{
  unint64_t result;

  result = qword_1EF2B31E8;
  if (!qword_1EF2B31E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C86F0, &_s10CodingKeysON_84);
    atomic_store(result, (unint64_t *)&qword_1EF2B31E8);
  }
  return result;
}

unint64_t sub_1BAEAA054()
{
  unint64_t result;

  result = qword_1EF2B31F0;
  if (!qword_1EF2B31F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C86A0, &_s10CodingKeysON_84);
    atomic_store(result, (unint64_t *)&qword_1EF2B31F0);
  }
  return result;
}

unint64_t sub_1BAEAA098()
{
  unint64_t result;

  result = qword_1EF2B31F8;
  if (!qword_1EF2B31F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8678, &_s10CodingKeysON_84);
    atomic_store(result, (unint64_t *)&qword_1EF2B31F8);
  }
  return result;
}

void sub_1BAEAA0DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3208)
  {
    sub_1BAEAA154();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3218, (uint64_t (*)(uint64_t))sub_1BAEAA154, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3208);
  }
}

void sub_1BAEAA154()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3210)
  {
    sub_1BAEA9F90();
    sub_1BA4A2870(&qword_1EF2B3200, (uint64_t (*)(uint64_t))sub_1BAEA9F90, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3210);
  }
}

void sub_1BAEAA1CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3220)
  {
    sub_1BAEAA244();
    sub_1BA4A2870(&qword_1EF2B3248, (uint64_t (*)(uint64_t))sub_1BAEAA244, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3220);
  }
}

uint64_t sub_1BAEAA244()
{
  uint64_t result;

  result = qword_1EF2B3228;
  if (!qword_1EF2B3228)
  {
    sub_1BAEAA2C4();
    sub_1BAEAA308();
    sub_1BAEAA34C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAA2C4()
{
  unint64_t result;

  result = qword_1EF2B3230;
  if (!qword_1EF2B3230)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8640, &_s10CodingKeysON_83);
    atomic_store(result, (unint64_t *)&qword_1EF2B3230);
  }
  return result;
}

unint64_t sub_1BAEAA308()
{
  unint64_t result;

  result = qword_1EF2B3238;
  if (!qword_1EF2B3238)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C85F0, &_s10CodingKeysON_83);
    atomic_store(result, (unint64_t *)&qword_1EF2B3238);
  }
  return result;
}

unint64_t sub_1BAEAA34C()
{
  unint64_t result;

  result = qword_1EF2B3240;
  if (!qword_1EF2B3240)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C85C8, &_s10CodingKeysON_83);
    atomic_store(result, (unint64_t *)&qword_1EF2B3240);
  }
  return result;
}

void sub_1BAEAA390(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3250)
  {
    sub_1BAEAA408();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3260, (uint64_t (*)(uint64_t))sub_1BAEAA408, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3250);
  }
}

void sub_1BAEAA408()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3258)
  {
    sub_1BAEAA244();
    sub_1BA4A2870(&qword_1EF2B3248, (uint64_t (*)(uint64_t))sub_1BAEAA244, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3258);
  }
}

void sub_1BAEAA480()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3268)
  {
    sub_1BAEAA4F8();
    sub_1BA4A2870(&qword_1EF2B3290, (uint64_t (*)(uint64_t))sub_1BAEAA4F8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3268);
  }
}

uint64_t sub_1BAEAA4F8()
{
  uint64_t result;

  result = qword_1EF2B3270;
  if (!qword_1EF2B3270)
  {
    sub_1BAEAA578();
    sub_1BAEAA5BC();
    sub_1BAEAA600();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAA578()
{
  unint64_t result;

  result = qword_1EF2B3278;
  if (!qword_1EF2B3278)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8590, &_s10CodingKeysON_82);
    atomic_store(result, (unint64_t *)&qword_1EF2B3278);
  }
  return result;
}

unint64_t sub_1BAEAA5BC()
{
  unint64_t result;

  result = qword_1EF2B3280;
  if (!qword_1EF2B3280)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8540, &_s10CodingKeysON_82);
    atomic_store(result, (unint64_t *)&qword_1EF2B3280);
  }
  return result;
}

unint64_t sub_1BAEAA600()
{
  unint64_t result;

  result = qword_1EF2B3288;
  if (!qword_1EF2B3288)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8518, &_s10CodingKeysON_82);
    atomic_store(result, (unint64_t *)&qword_1EF2B3288);
  }
  return result;
}

unint64_t sub_1BAEAA644()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2B32A0;
  if (!qword_1EF2B32A0)
  {
    sub_1BA4B07F0(255, &qword_1EF2B3298, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3B3B08, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B32A0);
  }
  return result;
}

void sub_1BAEAA6D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B32A8)
  {
    sub_1BAEAA74C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B32B8, (uint64_t (*)(uint64_t))sub_1BAEAA74C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B32A8);
  }
}

void sub_1BAEAA74C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B32B0)
  {
    sub_1BAEAA4F8();
    sub_1BA4A2870(&qword_1EF2B3290, (uint64_t (*)(uint64_t))sub_1BAEAA4F8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B32B0);
  }
}

void sub_1BAEAA7C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE668)
  {
    sub_1BAEAA83C();
    sub_1BA4A2870(&qword_1ED3ADA18, (uint64_t (*)(uint64_t))sub_1BAEAA83C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE668);
  }
}

uint64_t sub_1BAEAA83C()
{
  uint64_t result;

  result = qword_1ED3ADA20;
  if (!qword_1ED3ADA20)
  {
    sub_1BAEAA8BC();
    sub_1BAEAA900();
    sub_1BAEAA944();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAA8BC()
{
  unint64_t result;

  result = qword_1ED3AD488;
  if (!qword_1ED3AD488)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C84E0, &_s10CodingKeysON_81);
    atomic_store(result, (unint64_t *)&qword_1ED3AD488);
  }
  return result;
}

unint64_t sub_1BAEAA900()
{
  unint64_t result;

  result = qword_1ED3A5758;
  if (!qword_1ED3A5758)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8490, &_s10CodingKeysON_81);
    atomic_store(result, (unint64_t *)&qword_1ED3A5758);
  }
  return result;
}

unint64_t sub_1BAEAA944()
{
  unint64_t result;

  result = qword_1ED3AD480;
  if (!qword_1ED3AD480)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8468, &_s10CodingKeysON_81);
    atomic_store(result, (unint64_t *)&qword_1ED3AD480);
  }
  return result;
}

unint64_t sub_1BAEAA988()
{
  unint64_t result;

  result = qword_1ED39D010;
  if (!qword_1ED39D010)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternContent, &type metadata for FormatPatternContent);
    atomic_store(result, (unint64_t *)&qword_1ED39D010);
  }
  return result;
}

unint64_t sub_1BAEAA9CC()
{
  unint64_t result;

  result = qword_1ED39D130;
  if (!qword_1ED39D130)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPosition, &type metadata for FormatPatternPosition);
    atomic_store(result, (unint64_t *)&qword_1ED39D130);
  }
  return result;
}

void sub_1BAEAAA10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE260)
  {
    sub_1BAEAAA88();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF268, (uint64_t (*)(uint64_t))sub_1BAEAAA88, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE260);
  }
}

void sub_1BAEAAA88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3ACAC0)
  {
    sub_1BAEAA83C();
    sub_1BA4A2870(&qword_1ED3ADA18, (uint64_t (*)(uint64_t))sub_1BAEAA83C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3ACAC0);
  }
}

unint64_t sub_1BAEAAB00()
{
  unint64_t result;

  result = qword_1ED3A6858;
  if (!qword_1ED3A6858)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8440, &_s10CodingTypeON_52);
    atomic_store(result, (unint64_t *)&qword_1ED3A6858);
  }
  return result;
}

unint64_t sub_1BAEAAB44()
{
  unint64_t result;

  result = qword_1ED3A6860;
  if (!qword_1ED3A6860)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternContent, &type metadata for FormatPatternContent);
    atomic_store(result, (unint64_t *)&qword_1ED3A6860);
  }
  return result;
}

unint64_t sub_1BAEAAB88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39D2D0;
  if (!qword_1ED39D2D0)
  {
    sub_1BA4CDF6C(255, &qword_1ED39D2D8, (uint64_t (*)(void))sub_1BAEAAB44, (uint64_t)&type metadata for FormatPatternContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39D2D0);
  }
  return result;
}

uint64_t sub_1BAEAABF0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BAEAAC24()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B32C0)
  {
    sub_1BAEAAC9C();
    sub_1BA4A2870(&qword_1EF2B32E0, (uint64_t (*)(uint64_t))sub_1BAEAAC9C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B32C0);
  }
}

uint64_t sub_1BAEAAC9C()
{
  uint64_t result;

  result = qword_1EF2B32C8;
  if (!qword_1EF2B32C8)
  {
    sub_1BAEAAD1C();
    sub_1BAEAAD60();
    sub_1BAEAADA4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAAD1C()
{
  unint64_t result;

  result = qword_1EF2B32D0;
  if (!qword_1EF2B32D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8408, &_s10CodingKeysON_80);
    atomic_store(result, (unint64_t *)&qword_1EF2B32D0);
  }
  return result;
}

unint64_t sub_1BAEAAD60()
{
  unint64_t result;

  result = qword_1ED3AFAD8;
  if (!qword_1ED3AFAD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C83B8, &_s10CodingKeysON_80);
    atomic_store(result, (unint64_t *)&qword_1ED3AFAD8);
  }
  return result;
}

unint64_t sub_1BAEAADA4()
{
  unint64_t result;

  result = qword_1EF2B32D8;
  if (!qword_1EF2B32D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8390, &_s10CodingKeysON_80);
    atomic_store(result, (unint64_t *)&qword_1EF2B32D8);
  }
  return result;
}

unint64_t sub_1BAEAADE8()
{
  unint64_t result;

  result = qword_1ED39D450;
  if (!qword_1ED39D450)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPositionRelative, &type metadata for FormatPatternPositionRelative);
    atomic_store(result, (unint64_t *)&qword_1ED39D450);
  }
  return result;
}

unint64_t sub_1BAEAAE2C()
{
  unint64_t result;

  result = qword_1ED39D4A8;
  if (!qword_1ED39D4A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPositionAdjustment, &type metadata for FormatPatternPositionAdjustment);
    atomic_store(result, (unint64_t *)&qword_1ED39D4A8);
  }
  return result;
}

void sub_1BAEAAE70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B32E8)
  {
    sub_1BAEAAEE8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B32F8, (uint64_t (*)(uint64_t))sub_1BAEAAEE8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B32E8);
  }
}

void sub_1BAEAAEE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B32F0)
  {
    sub_1BAEAAC9C();
    sub_1BA4A2870(&qword_1EF2B32E0, (uint64_t (*)(uint64_t))sub_1BAEAAC9C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B32F0);
  }
}

unint64_t sub_1BAEAAF60()
{
  unint64_t result;

  result = qword_1EF2B3300;
  if (!qword_1EF2B3300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8368, &_s10CodingTypeON_51);
    atomic_store(result, (unint64_t *)&qword_1EF2B3300);
  }
  return result;
}

unint64_t sub_1BAEAAFA4()
{
  unint64_t result;

  result = qword_1EF2B3308;
  if (!qword_1EF2B3308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E6248, &_s4BoolO10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1EF2B3308);
  }
  return result;
}

unint64_t sub_1BAEAAFE8()
{
  unint64_t result;

  result = qword_1ED3C90D8;
  if (!qword_1ED3C90D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91B5F0, &_s4TextO10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3C90D8);
  }
  return result;
}

void sub_1BAEAB02C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE568)
  {
    sub_1BAEAB0A4();
    sub_1BA4A2870(&qword_1ED3AD808, (uint64_t (*)(uint64_t))sub_1BAEAB0A4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE568);
  }
}

uint64_t sub_1BAEAB0A4()
{
  uint64_t result;

  result = qword_1ED3AD810;
  if (!qword_1ED3AD810)
  {
    sub_1BAEAB124();
    sub_1BA4DC2B4();
    sub_1BAEAB168();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAB124()
{
  unint64_t result;

  result = qword_1ED3AD4E8;
  if (!qword_1ED3AD4E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8330, &_s10CodingKeysON_79);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4E8);
  }
  return result;
}

unint64_t sub_1BAEAB168()
{
  unint64_t result;

  result = qword_1ED3AD4E0;
  if (!qword_1ED3AD4E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C82B8, &_s10CodingKeysON_79);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4E0);
  }
  return result;
}

void sub_1BAEAB1AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCD0)
  {
    sub_1BAEAB224();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE748, (uint64_t (*)(uint64_t))sub_1BAEAB224, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCD0);
  }
}

void sub_1BAEAB224()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE750)
  {
    sub_1BAEAB0A4();
    sub_1BA4A2870(&qword_1ED3AD808, (uint64_t (*)(uint64_t))sub_1BAEAB0A4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE750);
  }
}

void sub_1BAEAB29C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AB0)
  {
    sub_1BAEAB314();
    sub_1BA4A2870(&qword_1ED3D0E20, (uint64_t (*)(uint64_t))sub_1BAEAB314, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AB0);
  }
}

uint64_t sub_1BAEAB314()
{
  uint64_t result;

  result = qword_1ED3D0E28;
  if (!qword_1ED3D0E28)
  {
    sub_1BAEAB394();
    sub_1BA571534();
    sub_1BAEAB3D8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAB394()
{
  unint64_t result;

  result = qword_1ED3D0770;
  if (!qword_1ED3D0770)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8280, &_s10CodingKeysON_78);
    atomic_store(result, (unint64_t *)&qword_1ED3D0770);
  }
  return result;
}

unint64_t sub_1BAEAB3D8()
{
  unint64_t result;

  result = qword_1ED3D0768;
  if (!qword_1ED3D0768)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8208, &_s10CodingKeysON_78);
    atomic_store(result, (unint64_t *)&qword_1ED3D0768);
  }
  return result;
}

void sub_1BAEAB41C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDE8)
  {
    sub_1BAEAB494();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE970, (uint64_t (*)(uint64_t))sub_1BAEAB494, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDE8);
  }
}

void sub_1BAEAB494()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE978)
  {
    sub_1BAEAB314();
    sub_1BA4A2870(&qword_1ED3D0E20, (uint64_t (*)(uint64_t))sub_1BAEAB314, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE978);
  }
}

void sub_1BAEAB50C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BF0)
  {
    sub_1BAEAB584();
    sub_1BA4A2870(&qword_1ED3D10A0, (uint64_t (*)(uint64_t))sub_1BAEAB584, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BF0);
  }
}

uint64_t sub_1BAEAB584()
{
  uint64_t result;

  result = qword_1ED3D10A8;
  if (!qword_1ED3D10A8)
  {
    sub_1BAEAB604();
    sub_1BA545118();
    sub_1BAEAB648();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAB604()
{
  unint64_t result;

  result = qword_1ED3D0A30;
  if (!qword_1ED3D0A30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C81D0, &_s10CodingKeysON_77);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A30);
  }
  return result;
}

unint64_t sub_1BAEAB648()
{
  unint64_t result;

  result = qword_1ED3D0A28;
  if (!qword_1ED3D0A28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8158, &_s10CodingKeysON_77);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A28);
  }
  return result;
}

void sub_1BAEAB68C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF78)
  {
    sub_1BAEAB704();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AECA0, (uint64_t (*)(uint64_t))sub_1BAEAB704, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF78);
  }
}

void sub_1BAEAB704()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AECA8)
  {
    sub_1BAEAB584();
    sub_1BA4A2870(&qword_1ED3D10A0, (uint64_t (*)(uint64_t))sub_1BAEAB584, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AECA8);
  }
}

uint64_t sub_1BAEAB77C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6574617473 && a2 == 0xEA00000000007374 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEAB934(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265696669646F6DLL && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEABAEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73776F726874 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEABC34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657270784573686CLL && a2 == 0xED00006E6F697373;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6572707845736872 && a2 == 0xED00006E6F697373 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEABD9C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001BB9718D0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB9718F0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEABED4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6C6F726373 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEABFAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567616B636170 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEAC0FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E656D6E67696C61 && a2 == 0xE900000000000074;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB9715C0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65646E4964616568 && a2 == 0xEA0000000000746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646E496C696174 && a2 == 0xEA0000000000746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61657242656E696CLL && a2 == 0xED000065646F4D6BLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB9715E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB971600 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB971620 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x63617053656E696CLL && a2 == 0xEB00000000676E69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB971640 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB971660 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB971680 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001BB9716A0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB9716C0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB9716E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001BB971700 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 16;
    else
      return 17;
  }
}

uint64_t sub_1BAEAC784(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080941 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEAC91C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65766974616C6572 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEA0000000000746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEACA6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61746E6563726570 && a2 == 0xEA00000000006567;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6963617073 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEACBBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x61746E6563726570 && a2 == 0xEA00000000006567;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEACCA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E4965676465 && a2 == 0xEA00000000007374 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEACE98()
{
  return 10;
}

_QWORD *sub_1BAEACEA0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD);
  uint64_t v8;
  char *v9;
  _QWORD *KeyPath;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (**v34)(char *, _QWORD);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (**v46)(char *, _QWORD);
  __int128 v47;
  char v48;
  __int128 v49;
  char v50;

  sub_1BAEEE2EC();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEEE3B0();
  v6 = v5;
  v7 = *(void (***)(char *, _QWORD))(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = (_QWORD *)sub_1BAEAD45C();
  sub_1BA4A2870(&qword_1EF2B3340, (uint64_t (*)(uint64_t))sub_1BAEAD45C, (uint64_t)&unk_1BB8FFC6C);
  v11 = v46;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v43 = v4;
  v13 = v45;
  v46 = v7;
  v14 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v23 = *((_QWORD *)v19 - 2);
      v24 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v25 = swift_bridgeObjectRelease();
      v26 = v9;
      MEMORY[0x1E0C80A78](v25);
      *(&v38 - 4) = (uint64_t)&_s10CodingKeysON_76;
      *(&v38 - 3) = sub_1BAEAD4DC();
      *(&v38 - 2) = sub_1BAEAD520();
      *(&v38 - 1) = sub_1BAEAD564();
      KeyPath = (_QWORD *)swift_getKeyPath();
      swift_retain();
      v27 = sub_1BAE71220((uint64_t)&unk_1E726D808);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v28 = v23;
      *(_QWORD *)(v28 + 8) = v24;
      *(_QWORD *)(v28 + 16) = v27;
      *(_OWORD *)(v28 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v23, v24, 1);
      v46[1](v26, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v20 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEE3B0);
  v22 = v21;
  v42 = v20;
  v49 = xmmword_1BB8A1A10;
  v50 = 0;
  v30 = sub_1BB87402C();
  v32 = v31;
  v41 = v22;
  v40 = xmmword_1BB8D2D60;
  v49 = xmmword_1BB8D2D60;
  v50 = 0;
  v33 = sub_1BB8740F8();
  v34 = v46;
  if ((v33 & 1) != 0)
  {
    v39 = v30;
    v47 = v40;
    v48 = 0;
    sub_1BA4A2870(&qword_1EF2B5BF8, (uint64_t (*)(uint64_t))sub_1BAEEE2EC, MEMORY[0x1E0DB3140]);
    v35 = v43;
    sub_1BB8740D4();
    v36 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v13);
    v30 = v39;
  }
  else
  {
    v36 = MEMORY[0x1E0DEE9E8];
  }
  v34[1](v9, v14);
  type metadata accessor for FormatPrintNode();
  KeyPath = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v37 = v41;
  KeyPath[2] = v42;
  KeyPath[3] = v37;
  KeyPath[4] = v30;
  KeyPath[5] = v32;
  swift_beginAccess();
  KeyPath[6] = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

void sub_1BAEAD36C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3310)
  {
    sub_1BAEAD3E4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3348, (uint64_t (*)(uint64_t))sub_1BAEAD3E4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3310);
  }
}

void sub_1BAEAD3E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3318)
  {
    sub_1BAEAD45C();
    sub_1BA4A2870(&qword_1EF2B3340, (uint64_t (*)(uint64_t))sub_1BAEAD45C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3318);
  }
}

uint64_t sub_1BAEAD45C()
{
  uint64_t result;

  result = qword_1EF2B3320;
  if (!qword_1EF2B3320)
  {
    sub_1BAEAD4DC();
    sub_1BAEAD520();
    sub_1BAEAD564();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAD4DC()
{
  unint64_t result;

  result = qword_1EF2B3328;
  if (!qword_1EF2B3328)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8070, &_s10CodingKeysON_76);
    atomic_store(result, (unint64_t *)&qword_1EF2B3328);
  }
  return result;
}

unint64_t sub_1BAEAD520()
{
  unint64_t result;

  result = qword_1EF2B3330;
  if (!qword_1EF2B3330)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8020, &_s10CodingKeysON_76);
    atomic_store(result, (unint64_t *)&qword_1EF2B3330);
  }
  return result;
}

unint64_t sub_1BAEAD564()
{
  unint64_t result;

  result = qword_1EF2B3338;
  if (!qword_1EF2B3338)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7FF8, &_s10CodingKeysON_76);
    atomic_store(result, (unint64_t *)&qword_1EF2B3338);
  }
  return result;
}

unint64_t sub_1BAEAD5A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B3358;
  if (!qword_1EF2B3358)
  {
    sub_1BA4AD288(255, &qword_1EF2B3350, (uint64_t)&type metadata for FormatPrintNodeValue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEAD620();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B3358);
  }
  return result;
}

unint64_t sub_1BAEAD620()
{
  unint64_t result;

  result = qword_1EF2B3360;
  if (!qword_1EF2B3360)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPrintNodeValue, &type metadata for FormatPrintNodeValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B3360);
  }
  return result;
}

void sub_1BAEAD664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B20)
  {
    sub_1BAEAD6DC();
    sub_1BA4A2870(&qword_1ED3D0F00, (uint64_t (*)(uint64_t))sub_1BAEAD6DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B20);
  }
}

uint64_t sub_1BAEAD6DC()
{
  uint64_t result;

  result = qword_1ED3D0F08;
  if (!qword_1ED3D0F08)
  {
    sub_1BAEAD75C();
    sub_1BA60FB3C();
    sub_1BAEAD7A0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAD75C()
{
  unint64_t result;

  result = qword_1ED3D0870;
  if (!qword_1ED3D0870)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7FC0, &_s10CodingKeysON_75);
    atomic_store(result, (unint64_t *)&qword_1ED3D0870);
  }
  return result;
}

unint64_t sub_1BAEAD7A0()
{
  unint64_t result;

  result = qword_1ED3D0868;
  if (!qword_1ED3D0868)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7F48, &_s10CodingKeysON_75);
    atomic_store(result, (unint64_t *)&qword_1ED3D0868);
  }
  return result;
}

void sub_1BAEAD7E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE60)
  {
    sub_1BAEAD85C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEA70, (uint64_t (*)(uint64_t))sub_1BAEAD85C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE60);
  }
}

void sub_1BAEAD85C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEA78)
  {
    sub_1BAEAD6DC();
    sub_1BA4A2870(&qword_1ED3D0F00, (uint64_t (*)(uint64_t))sub_1BAEAD6DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEA78);
  }
}

void sub_1BAEAD8D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC078)
  {
    sub_1BAEAD94C();
    sub_1BA4A2870(&qword_1ED3ABEF8, (uint64_t (*)(uint64_t))sub_1BAEAD94C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC078);
  }
}

uint64_t sub_1BAEAD94C()
{
  uint64_t result;

  result = qword_1ED3ABF00;
  if (!qword_1ED3ABF00)
  {
    sub_1BAEAD9CC();
    sub_1BAEADA10();
    sub_1BAEADA54();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAD9CC()
{
  unint64_t result;

  result = qword_1ED3ABFA0;
  if (!qword_1ED3ABFA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7F10, &_s10CodingKeysON_74);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFA0);
  }
  return result;
}

unint64_t sub_1BAEADA10()
{
  unint64_t result;

  result = qword_1ED3A2C18;
  if (!qword_1ED3A2C18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7EC0, &_s10CodingKeysON_74);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C18);
  }
  return result;
}

unint64_t sub_1BAEADA54()
{
  unint64_t result;

  result = qword_1ED3ABF98;
  if (!qword_1ED3ABF98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7E98, &_s10CodingKeysON_74);
    atomic_store(result, (unint64_t *)&qword_1ED3ABF98);
  }
  return result;
}

void sub_1BAEADA98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0C8)
  {
    sub_1BAEADB10();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEF40, (uint64_t (*)(uint64_t))sub_1BAEADB10, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0C8);
  }
}

void sub_1BAEADB10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEF48)
  {
    sub_1BAEAD94C();
    sub_1BA4A2870(&qword_1ED3ABEF8, (uint64_t (*)(uint64_t))sub_1BAEAD94C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEF48);
  }
}

unint64_t sub_1BAEADB88()
{
  unint64_t result;

  result = qword_1ED3A62B0;
  if (!qword_1ED3A62B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7E70, &_s10CodingTypeON_50);
    atomic_store(result, (unint64_t *)&qword_1ED3A62B0);
  }
  return result;
}

unint64_t sub_1BAEADBCC()
{
  unint64_t result;

  result = qword_1ED3A2C38;
  if (!qword_1ED3A2C38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressCircleOptions, &type metadata for FormatProgressCircleOptions);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C38);
  }
  return result;
}

uint64_t sub_1BAEADC10(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEADDBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F737365636F7270 && a2 == 0xEA00000000007372 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEADF04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7369776B636F6C63 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6372655070657473 && a2 == 0xEE00656761746E65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65637265506E696DLL && a2 == 0xED0000656761746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656372655078616DLL && a2 == 0xED0000656761746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x706143656E696CLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1BAEAE240(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7369776B636F6C63 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6372655070657473 && a2 == 0xEE00656761746E65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65637265506E696DLL && a2 == 0xED0000656761746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656372655078616DLL && a2 == 0xED0000656761746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAEAE518(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  char *v71;
  __int128 v72;
  char v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int16 v86;
  uint64_t v87;
  uint64_t v88;

  sub_1BA6927D0();
  v67 = v2;
  v66 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v70 = (uint64_t *)((char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v68 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v47 - v6;
  sub_1BAEEE02C();
  v69 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEAF5AC();
  sub_1BA4A2870(&qword_1ED3ABED8, (uint64_t (*)(uint64_t))sub_1BAEAF5AC, (uint64_t)&unk_1BB8FFC6C);
  v13 = v71;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v71 = v7;
  v64 = v5;
  v65 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v69;
  v18 = v11;
  if ((v16 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v21 - 2);
      v25 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      sub_1BAEAF62C();
      sub_1BAEAF670();
      sub_1BAEAF6B4();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7252638);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v29 = v26;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v25, 1);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v18, v17);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEE02C);
  v24 = v23;
  v63 = xmmword_1BB8A1A10;
  v75 = xmmword_1BB8A1A10;
  LOBYTE(v76) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v82 = v63;
    LOBYTE(v83) = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v31 = v72;
  }
  else
  {
    v31 = 0xB000000000000008;
  }
  *(_QWORD *)&v63 = v31;
  v75 = xmmword_1BB8D2D60;
  LOBYTE(v76) = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v62 = v82;
  v61 = xmmword_1BB8D2D70;
  v75 = xmmword_1BB8D2D70;
  LOBYTE(v76) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    *(_QWORD *)&v60 = v24;
    v82 = v61;
    LOBYTE(v83) = 0;
    sub_1BAEB7D04();
    v32 = v71;
    v33 = v68;
    sub_1BB8740D4();
    *(_QWORD *)&v61 = v22;
    v34 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v32, v33);
    v24 = v60;
  }
  else
  {
    *(_QWORD *)&v61 = v22;
    v34 = MEMORY[0x1E0DEE9D8];
  }
  v82 = xmmword_1BB8D2D90;
  LOBYTE(v83) = 0;
  sub_1BAEEE0A4();
  sub_1BB8740D4();
  v57 = v75;
  v58 = BYTE8(v75);
  v59 = v76;
  v64 = v77;
  v68 = v78;
  LODWORD(v71) = (unsigned __int16)v79;
  v60 = xmmword_1BB8D2D80;
  v75 = xmmword_1BB8D2D80;
  LOBYTE(v76) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v82 = v60;
    LOBYTE(v83) = 0;
    sub_1BB8740D4();
    v56 = v72;
  }
  else
  {
    v56 = 0;
  }
  type metadata accessor for FormatProgressViewNodeStyle();
  v75 = xmmword_1BB8D2DA0;
  LOBYTE(v76) = 0;
  sub_1BA4A2870(qword_1ED3A8030, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewNodeStyle, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
  sub_1BB874068();
  v55 = v82;
  v60 = xmmword_1BB8D2DB0;
  v82 = xmmword_1BB8D2DB0;
  LOBYTE(v83) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v72 = v60;
    v73 = 0;
    sub_1BAEEE0E8();
    sub_1BB8740D4();
    v48 = v75;
    v49 = v76;
    v50 = v77;
    v51 = v78;
    v52 = v79;
    v53 = v80;
    v35 = v81;
  }
  else
  {
    v48 = 0uLL;
    v49 = 0;
    v50 = 0;
    v51 = 0;
    v52 = 0;
    v53 = 0;
    v35 = 128;
  }
  v54 = v35;
  v60 = xmmword_1BB8D2DD0;
  v75 = xmmword_1BB8D2DD0;
  LOBYTE(v76) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v82 = v60;
    LOBYTE(v83) = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v36 = v72;
  }
  else
  {
    v36 = 0x8000000000000000;
  }
  v47 = v36;
  v60 = xmmword_1BB8D2DE0;
  v75 = xmmword_1BB8D2DE0;
  LOBYTE(v76) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v82 = v60;
    LOBYTE(v83) = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v37 = v67;
    sub_1BB8740D4();
    v38 = (uint64_t)v70;
    v39 = sub_1BB86DD08();
    v40 = v37;
    v41 = v39;
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v38, v40);
  }
  else
  {
    v41 = MEMORY[0x1E0DEE9E8];
  }
  v75 = xmmword_1BB8D2DF0;
  LOBYTE(v76) = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  *(_QWORD *)&v60 = v24;
  v70 = a1;
  v42 = v82;
  v43 = BYTE8(v82);
  v75 = xmmword_1BB8D2E00;
  LOBYTE(v76) = 0;
  v44 = sub_1BB87402C();
  v46 = v45;
  v88 = v63;
  v87 = v62;
  *(_QWORD *)&v82 = v57;
  BYTE8(v82) = v58;
  v83 = v59;
  v84 = v64;
  v85 = v68;
  v86 = (__int16)v71;
  v75 = v48;
  v76 = v49;
  v77 = v50;
  v78 = v51;
  v79 = v52;
  v80 = v53;
  v81 = v54;
  v74 = v47;
  *(_QWORD *)&v72 = v42;
  BYTE8(v72) = v43;
  type metadata accessor for FormatProgressViewNode();
  swift_allocObject();
  KeyPath = FormatProgressViewNode.init(identifier:size:resize:adjustments:content:zIndex:style:kind:visibility:selectors:accessibilityRole:name:)(v61, v60, &v88, &v87, v34, (uint64_t *)&v82, v56, v55, &v75, &v74, v41, (uint64_t *)&v72, v44, v46);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v18, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  return KeyPath;
}

void sub_1BAEAF4BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF48)
  {
    sub_1BAEAF534();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEC40, (uint64_t (*)(uint64_t))sub_1BAEAF534, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF48);
  }
}

void sub_1BAEAF534()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEC48)
  {
    sub_1BAEAF5AC();
    sub_1BA4A2870(&qword_1ED3ABED8, (uint64_t (*)(uint64_t))sub_1BAEAF5AC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEC48);
  }
}

uint64_t sub_1BAEAF5AC()
{
  uint64_t result;

  result = qword_1ED3ABEE0;
  if (!qword_1ED3ABEE0)
  {
    sub_1BAEAF62C();
    sub_1BAEAF670();
    sub_1BAEAF6B4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAF62C()
{
  unint64_t result;

  result = qword_1ED3ABE70;
  if (!qword_1ED3ABE70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7E38, &_s10CodingKeysON_73);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE70);
  }
  return result;
}

unint64_t sub_1BAEAF670()
{
  unint64_t result;

  result = qword_1ED3A6ED0;
  if (!qword_1ED3A6ED0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7DE8, &_s10CodingKeysON_73);
    atomic_store(result, (unint64_t *)&qword_1ED3A6ED0);
  }
  return result;
}

unint64_t sub_1BAEAF6B4()
{
  unint64_t result;

  result = qword_1ED3ABE68;
  if (!qword_1ED3ABE68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7DC0, &_s10CodingKeysON_73);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE68);
  }
  return result;
}

uint64_t sub_1BAEAF6F8(uint64_t a1, void (*a2)(_QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(unsigned __int16 *)(a1 + 40);
  a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  a3(v5, v6, v7, v8);
  return a1;
}

uint64_t sub_1BAEAF75C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8(a2, a1);
  return a2;
}

uint64_t sub_1BAEAF798(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  char v10;
  uint64_t result;

  if ((a8 & 0x80) == 0)
  {
    v10 = a4 & 1;
    swift_bridgeObjectRetain();
    sub_1BA69C808(a2, a3, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1BAEAF808()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC090)
  {
    sub_1BAEAF880();
    sub_1BA4A2870(&qword_1ED3ABF28, (uint64_t (*)(uint64_t))sub_1BAEAF880, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC090);
  }
}

uint64_t sub_1BAEAF880()
{
  uint64_t result;

  result = qword_1ED3ABF30;
  if (!qword_1ED3ABF30)
  {
    sub_1BAEAF900();
    sub_1BAEAF944();
    sub_1BAEAF988();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAF900()
{
  unint64_t result;

  result = qword_1ED3ABFD0;
  if (!qword_1ED3ABFD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7D88, &_s10CodingKeysON_72);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFD0);
  }
  return result;
}

unint64_t sub_1BAEAF944()
{
  unint64_t result;

  result = qword_1ED3A88C8;
  if (!qword_1ED3A88C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7D38, &_s10CodingKeysON_72);
    atomic_store(result, (unint64_t *)&qword_1ED3A88C8);
  }
  return result;
}

unint64_t sub_1BAEAF988()
{
  unint64_t result;

  result = qword_1ED3ABFC8;
  if (!qword_1ED3ABFC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7D10, &_s10CodingKeysON_72);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFC8);
  }
  return result;
}

unint64_t sub_1BAEAF9CC()
{
  unint64_t result;

  result = qword_1ED3A8DB0;
  if (!qword_1ED3A8DB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressViewNodeDuration, &type metadata for FormatProgressViewNodeDuration);
    atomic_store(result, (unint64_t *)&qword_1ED3A8DB0);
  }
  return result;
}

void sub_1BAEAFA10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE120)
  {
    sub_1BAEAFA88();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEFF0, (uint64_t (*)(uint64_t))sub_1BAEAFA88, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE120);
  }
}

void sub_1BAEAFA88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEFF8)
  {
    sub_1BAEAF880();
    sub_1BA4A2870(&qword_1ED3ABF28, (uint64_t (*)(uint64_t))sub_1BAEAF880, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEFF8);
  }
}

unint64_t sub_1BAEAFB00()
{
  unint64_t result;

  result = qword_1ED3A8DA0;
  if (!qword_1ED3A8DA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7CE8, &_s10CodingTypeON_49);
    atomic_store(result, (unint64_t *)&qword_1ED3A8DA0);
  }
  return result;
}

void sub_1BAEAFB44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BF8)
  {
    sub_1BAEAFBBC();
    sub_1BA4A2870(&qword_1ED3D10B0, (uint64_t (*)(uint64_t))sub_1BAEAFBBC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BF8);
  }
}

uint64_t sub_1BAEAFBBC()
{
  uint64_t result;

  result = qword_1ED3D10B8;
  if (!qword_1ED3D10B8)
  {
    sub_1BAEAFC3C();
    sub_1BA569BCC();
    sub_1BAEAFC80();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAFC3C()
{
  unint64_t result;

  result = qword_1ED3D0A40;
  if (!qword_1ED3D0A40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7CB0, &_s10CodingKeysON_71);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A40);
  }
  return result;
}

unint64_t sub_1BAEAFC80()
{
  unint64_t result;

  result = qword_1ED3D0A38;
  if (!qword_1ED3D0A38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7C38, &_s10CodingKeysON_71);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A38);
  }
  return result;
}

void sub_1BAEAFCC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF80)
  {
    sub_1BAEAFD3C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AECB0, (uint64_t (*)(uint64_t))sub_1BAEAFD3C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF80);
  }
}

void sub_1BAEAFD3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AECB8)
  {
    sub_1BAEAFBBC();
    sub_1BA4A2870(&qword_1ED3D10B0, (uint64_t (*)(uint64_t))sub_1BAEAFBBC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AECB8);
  }
}

void sub_1BAEAFDB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D2BF8)
  {
    sub_1BAEAFE2C();
    sub_1BA4A2870(&qword_1ED3D2B68, (uint64_t (*)(uint64_t))sub_1BAEAFE2C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D2BF8);
  }
}

uint64_t sub_1BAEAFE2C()
{
  uint64_t result;

  result = qword_1ED3D2B70;
  if (!qword_1ED3D2B70)
  {
    sub_1BAEAFEAC();
    sub_1BAEAFEF0();
    sub_1BAEAFF34();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEAFEAC()
{
  unint64_t result;

  result = qword_1ED3D2560;
  if (!qword_1ED3D2560)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7BB0, &_s14descr1E72CC401O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D2560);
  }
  return result;
}

unint64_t sub_1BAEAFEF0()
{
  unint64_t result;

  result = qword_1ED3CB230;
  if (!qword_1ED3CB230)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7B60, &_s14descr1E72CC401O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3CB230);
  }
  return result;
}

unint64_t sub_1BAEAFF34()
{
  unint64_t result;

  result = qword_1ED3D2B78;
  if (!qword_1ED3D2B78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7B38, &_s14descr1E72CC401O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B78);
  }
  return result;
}

void sub_1BAEAFF78(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3368)
  {
    sub_1BAEAFFF0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3378, (uint64_t (*)(uint64_t))sub_1BAEAFFF0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3368);
  }
}

void sub_1BAEAFFF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3370)
  {
    sub_1BAEAFE2C();
    sub_1BA4A2870(&qword_1ED3D2B68, (uint64_t (*)(uint64_t))sub_1BAEAFE2C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3370);
  }
}

unint64_t sub_1BAEB0068()
{
  unint64_t result;

  result = qword_1EF2B3380;
  if (!qword_1EF2B3380)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB921764, &_s4BoolO10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1EF2B3380);
  }
  return result;
}

unint64_t sub_1BAEB00AC()
{
  unint64_t result;

  result = qword_1ED3A6698;
  if (!qword_1ED3A6698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7B10, &_s10CodingTypeON_46);
    atomic_store(result, (unint64_t *)&qword_1ED3A6698);
  }
  return result;
}

unint64_t sub_1BAEB00F0()
{
  unint64_t result;

  result = qword_1EF2B3388;
  if (!qword_1EF2B3388)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB948BC8, &_s8DateTimeO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2B3388);
  }
  return result;
}

unint64_t sub_1BAEB0134()
{
  unint64_t result;

  result = qword_1ED3A6660;
  if (!qword_1ED3A6660)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7AE8, &_s10CodingTypeON_45);
    atomic_store(result, (unint64_t *)&qword_1ED3A6660);
  }
  return result;
}

unint64_t sub_1BAEB0178()
{
  unint64_t result;

  result = qword_1ED3A6638;
  if (!qword_1ED3A6638)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Text.CodingType, &type metadata for FormatPuzzleBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A6638);
  }
  return result;
}

uint64_t sub_1BAEB01BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_1BAEB06CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEB0810(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xED0000726F6C6F43 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6F436B63617274 && a2 == 0xEA0000000000726FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BAEB0B70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xED0000726F6C6F43 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6F436B63617274 && a2 == 0xEA0000000000726FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAEB0E00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646E6962 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEB0F90(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001BB959EA0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6372755074736F70 && a2 == 0xEC00000065736168 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEB10E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  void (**v9)(_BYTE *, _QWORD);
  uint64_t v10;
  _BYTE *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[12];
  int v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void (**v73)(_BYTE *, _QWORD);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  char v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;

  sub_1BA6927D0();
  v70 = (_QWORD *)v2;
  v68 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v69 = &v50[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v71 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v50[-v6];
  sub_1BAEED928();
  v72 = v8;
  v9 = *(void (***)(_BYTE *, _QWORD))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEB21A8();
  sub_1BA4A2870(&qword_1ED3AD8E8, (uint64_t (*)(uint64_t))sub_1BAEB21A8, (uint64_t)&unk_1BB8FFC6C);
  v13 = v73;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v67 = v7;
  *(_QWORD *)&v66 = v5;
  v73 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v72;
  v18 = v11;
  if ((v16 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v21 - 2);
      v25 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      sub_1BAEB2228();
      sub_1BAEB226C();
      sub_1BAEB22B0();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7252408);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v29 = v26;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v25, 1);
      v73[1](v18, v17);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEED928);
  v24 = v23;
  v79 = xmmword_1BB8A1A10;
  LOBYTE(v80) = 0;
  v31 = sub_1BB87402C();
  v33 = v32;
  v65 = xmmword_1BB8D2D60;
  v79 = xmmword_1BB8D2D60;
  LOBYTE(v80) = 0;
  v34 = sub_1BB8740F8();
  if ((v34 & 1) != 0)
  {
    v77 = v65;
    v78 = 0;
    sub_1BA636C74();
    sub_1BB8740D4();
    v35 = v86;
  }
  else
  {
    v35 = 0xB000000000000008;
  }
  *(_QWORD *)&v65 = v35;
  v79 = xmmword_1BB8D2D70;
  LOBYTE(v80) = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v61 = v31;
  v36 = v77;
  v63 = xmmword_1BB8D2D90;
  v79 = xmmword_1BB8D2D90;
  LOBYTE(v80) = 0;
  v37 = sub_1BB8740F8();
  v64 = v36;
  if ((v37 & 1) != 0)
  {
    *(_QWORD *)&v62 = v33;
    v77 = v63;
    v78 = 0;
    sub_1BAEB7D04();
    v38 = (uint64_t)v67;
    v39 = v71;
    sub_1BB8740D4();
    *(_QWORD *)&v63 = v22;
    v40 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v38, v39);
    v33 = v62;
  }
  else
  {
    *(_QWORD *)&v63 = v22;
    v40 = MEMORY[0x1E0DEE9D8];
  }
  v79 = xmmword_1BB8D2D80;
  LOBYTE(v80) = 0;
  sub_1BAEED9A0();
  sub_1BB8740D4();
  v71 = v40;
  v41 = v77;
  type metadata accessor for FormatJsonConfig();
  v79 = xmmword_1BB8D2DA0;
  LOBYTE(v80) = 0;
  sub_1BA4A2870(&qword_1ED3C7478, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonConfig, (uint64_t)&protocol conformance descriptor for FormatJsonConfig);
  sub_1BB874068();
  v67 = (_BYTE *)v77;
  v66 = xmmword_1BB8D2DB0;
  v79 = xmmword_1BB8D2DB0;
  LOBYTE(v80) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v77 = v66;
    v78 = 0;
    sub_1BB8740D4();
    *(_QWORD *)&v66 = v86;
  }
  else
  {
    *(_QWORD *)&v66 = 0;
  }
  v77 = xmmword_1BB8D2DD0;
  v78 = 0;
  sub_1BAEA7A04();
  sub_1BB874068();
  v54 = v79;
  v55 = v80;
  v56 = v81;
  v57 = v82;
  v58 = v83;
  v59 = v84;
  v60 = v85;
  v62 = xmmword_1BB8D2DE0;
  v79 = xmmword_1BB8D2DE0;
  LOBYTE(v80) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v77 = v62;
    v78 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)&v62 = v33;
    v42 = v86;
  }
  else
  {
    *(_QWORD *)&v62 = v33;
    v42 = 0x8000000000000000;
  }
  v53 = v42;
  v52 = xmmword_1BB8D2DF0;
  v79 = xmmword_1BB8D2DF0;
  LOBYTE(v80) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v77 = v52;
    v78 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v43 = v69;
    v44 = (uint64_t)v70;
    sub_1BB8740D4();
    *(_QWORD *)&v52 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v43, v44);
  }
  else
  {
    *(_QWORD *)&v52 = MEMORY[0x1E0DEE9E8];
  }
  v79 = xmmword_1BB8D2E00;
  LOBYTE(v80) = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v70 = a1;
  v68 = v77;
  v51 = BYTE8(v77);
  v79 = xmmword_1BB8D2E10;
  LOBYTE(v80) = 0;
  v69 = (_BYTE *)sub_1BB87402C();
  v46 = v45;
  v79 = xmmword_1BB8868A0;
  LOBYTE(v80) = 0;
  v47 = sub_1BB87402C();
  v49 = v48;
  v86 = v65;
  v75 = v41;
  v76 = v64;
  v79 = v54;
  v80 = v55;
  v81 = v56;
  v82 = v57;
  v83 = v58;
  v84 = v59;
  v85 = v60;
  v74 = v53;
  *(_QWORD *)&v77 = v68;
  BYTE8(v77) = v51;
  type metadata accessor for FormatPuzzleEmbedNode();
  swift_allocObject();
  KeyPath = FormatPuzzleEmbedNode.init(identifier:contentFrameIdentifier:size:resize:adjustments:content:config:zIndex:style:visibility:selectors:accessibilityRole:name:location:)(v63, v24, v61, v62, (uint64_t *)&v86, &v76, v71, &v75, (uint64_t)v67, v66, (uint64_t *)&v79, &v74, v52, (uint64_t *)&v77, (uint64_t)v69, v46, v47, v49);
  v73[1](v18, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  return KeyPath;
}

void sub_1BAEB20B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADEF8)
  {
    sub_1BAEB2130();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEBA0, (uint64_t (*)(uint64_t))sub_1BAEB2130, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADEF8);
  }
}

void sub_1BAEB2130()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEBA8)
  {
    sub_1BAEB21A8();
    sub_1BA4A2870(&qword_1ED3AD8E8, (uint64_t (*)(uint64_t))sub_1BAEB21A8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEBA8);
  }
}

uint64_t sub_1BAEB21A8()
{
  uint64_t result;

  result = qword_1ED3AD8F0;
  if (!qword_1ED3AD8F0)
  {
    sub_1BAEB2228();
    sub_1BAEB226C();
    sub_1BAEB22B0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB2228()
{
  unint64_t result;

  result = qword_1ED3AD6E0;
  if (!qword_1ED3AD6E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7AB0, &_s10CodingKeysON_70);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6E0);
  }
  return result;
}

unint64_t sub_1BAEB226C()
{
  unint64_t result;

  result = qword_1ED3A6BE0;
  if (!qword_1ED3A6BE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7A60, &_s10CodingKeysON_70);
    atomic_store(result, (unint64_t *)&qword_1ED3A6BE0);
  }
  return result;
}

unint64_t sub_1BAEB22B0()
{
  unint64_t result;

  result = qword_1ED3AD6D8;
  if (!qword_1ED3AD6D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7A38, &_s10CodingKeysON_70);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6D8);
  }
  return result;
}

_QWORD *sub_1BAEB22F4(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  return a1;
}

unint64_t sub_1BAEB2330()
{
  unint64_t result;

  result = qword_1ED3A8448;
  if (!qword_1ED3A8448)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7A10, &_s10CodingTypeON_44);
    atomic_store(result, (unint64_t *)&qword_1ED3A8448);
  }
  return result;
}

unint64_t sub_1BAEB2374()
{
  unint64_t result;

  result = qword_1ED3A8460;
  if (!qword_1ED3A8460)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C79E8, &_s10CodingTypeON_43);
    atomic_store(result, (unint64_t *)&qword_1ED3A8460);
  }
  return result;
}

unint64_t sub_1BAEB23B8()
{
  unint64_t result;

  result = qword_1EF2B3398;
  if (!qword_1EF2B3398)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeContent, &type metadata for FormatPuzzleEmbedNodeContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B3398);
  }
  return result;
}

unint64_t sub_1BAEB23FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B33A0;
  if (!qword_1EF2B33A0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3390, (uint64_t (*)(void))sub_1BAEB23B8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B33A0);
  }
  return result;
}

uint64_t objectdestroy_346Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BAEB2498()
{
  unint64_t result;

  result = qword_1ED3A8450;
  if (!qword_1ED3A8450)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeBinding, &type metadata for FormatPuzzleEmbedNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A8450);
  }
  return result;
}

unint64_t sub_1BAEB24DC()
{
  unint64_t result;

  result = qword_1ED3A7CA8;
  if (!qword_1ED3A7CA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeStyle.Selector, &type metadata for FormatPuzzleEmbedNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1ED3A7CA8);
  }
  return result;
}

unint64_t sub_1BAEB2520()
{
  unint64_t result;

  result = qword_1ED3A7CA0;
  if (!qword_1ED3A7CA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeStyle.Selector, &type metadata for FormatPuzzleEmbedNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1ED3A7CA0);
  }
  return result;
}

void sub_1BAEB2564()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE618)
  {
    sub_1BAEB25DC();
    sub_1BA4A2870(&qword_1ED3AD978, (uint64_t (*)(uint64_t))sub_1BAEB25DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE618);
  }
}

uint64_t sub_1BAEB25DC()
{
  uint64_t result;

  result = qword_1ED3AD980;
  if (!qword_1ED3AD980)
  {
    sub_1BAEB265C();
    sub_1BAEB26A0();
    sub_1BAEB26E4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB265C()
{
  unint64_t result;

  result = qword_1ED3ADB08;
  if (!qword_1ED3ADB08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C79B0, &_s10CodingKeysON_69);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB08);
  }
  return result;
}

unint64_t sub_1BAEB26A0()
{
  unint64_t result;

  result = qword_1ED3A7C70;
  if (!qword_1ED3A7C70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7960, &_s10CodingKeysON_69);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C70);
  }
  return result;
}

unint64_t sub_1BAEB26E4()
{
  unint64_t result;

  result = qword_1ED3ADB00;
  if (!qword_1ED3ADB00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7938, &_s10CodingKeysON_69);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB00);
  }
  return result;
}

unint64_t sub_1BAEB2728()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A37E0;
  if (!qword_1ED3A37E0)
  {
    sub_1BAEFBAC0(255, &qword_1ED3A37E8, (void (*)(void))sub_1BAEB24DC, (void (*)(void))sub_1BAEB2520);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A37E0);
  }
  return result;
}

void sub_1BAEB2790(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE080)
  {
    sub_1BAEB2808();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEEB0, (uint64_t (*)(uint64_t))sub_1BAEB2808, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE080);
  }
}

void sub_1BAEB2808()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEEB8)
  {
    sub_1BAEB25DC();
    sub_1BA4A2870(&qword_1ED3AD978, (uint64_t (*)(uint64_t))sub_1BAEB25DC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEEB8);
  }
}

void sub_1BAEB2880()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B33A8)
  {
    sub_1BAEB28F8();
    sub_1BA4A2870(&qword_1EF2B33C8, (uint64_t (*)(uint64_t))sub_1BAEB28F8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B33A8);
  }
}

uint64_t sub_1BAEB28F8()
{
  uint64_t result;

  result = qword_1EF2B33B0;
  if (!qword_1EF2B33B0)
  {
    sub_1BAEB2978();
    sub_1BAEB29BC();
    sub_1BAEB2A00();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB2978()
{
  unint64_t result;

  result = qword_1EF2B33B8;
  if (!qword_1EF2B33B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7900, &_s10CodingKeysON_68);
    atomic_store(result, (unint64_t *)&qword_1EF2B33B8);
  }
  return result;
}

unint64_t sub_1BAEB29BC()
{
  unint64_t result;

  result = qword_1ED3A7C88;
  if (!qword_1ED3A7C88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C78B0, &_s10CodingKeysON_68);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C88);
  }
  return result;
}

unint64_t sub_1BAEB2A00()
{
  unint64_t result;

  result = qword_1EF2B33C0;
  if (!qword_1EF2B33C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7888, &_s10CodingKeysON_68);
    atomic_store(result, (unint64_t *)&qword_1EF2B33C0);
  }
  return result;
}

void sub_1BAEB2A44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B33D0)
  {
    sub_1BAEB2ABC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B33E0, (uint64_t (*)(uint64_t))sub_1BAEB2ABC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B33D0);
  }
}

void sub_1BAEB2ABC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B33D8)
  {
    sub_1BAEB28F8();
    sub_1BA4A2870(&qword_1EF2B33C8, (uint64_t (*)(uint64_t))sub_1BAEB28F8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B33D8);
  }
}

unint64_t sub_1BAEB2B34()
{
  unint64_t result;

  result = qword_1ED3ADBE0;
  if (!qword_1ED3ADBE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DCFF4, &_s5FloatO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBE0);
  }
  return result;
}

unint64_t sub_1BAEB2B78()
{
  unint64_t result;

  result = qword_1EF2B33E8;
  if (!qword_1EF2B33E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7860, &_s10CodingTypeON_42);
    atomic_store(result, (unint64_t *)&qword_1EF2B33E8);
  }
  return result;
}

unint64_t sub_1BAEB2BBC()
{
  unint64_t result;

  result = qword_1ED3ADBC0;
  if (!qword_1ED3ADBC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Text.CodingType, &type metadata for FormatPuzzleStatisticBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBC0);
  }
  return result;
}

unint64_t sub_1BAEB2C00()
{
  unint64_t result;

  result = qword_1ED3A2BA0;
  if (!qword_1ED3A2BA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Color.CodingType, &type metadata for FormatPuzzleTypeBinding.Color.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A2BA0);
  }
  return result;
}

unint64_t sub_1BAEB2C44()
{
  unint64_t result;

  result = qword_1ED3A29E0;
  if (!qword_1ED3A29E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArrayIndex, &type metadata for FormatArrayIndex);
    atomic_store(result, (unint64_t *)&qword_1ED3A29E0);
  }
  return result;
}

unint64_t sub_1BAEB2C88()
{
  unint64_t result;

  result = qword_1ED3A7228;
  if (!qword_1ED3A7228)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7838, &_s10CodingTypeON_41);
    atomic_store(result, (unint64_t *)&qword_1ED3A7228);
  }
  return result;
}

unint64_t sub_1BAEB2CCC()
{
  unint64_t result;

  result = qword_1ED3A2B88;
  if (!qword_1ED3A2B88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Text.CodingType, &type metadata for FormatPuzzleTypeBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B88);
  }
  return result;
}

void sub_1BAEB2D10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE670)
  {
    sub_1BAEB2D88();
    sub_1BA4A2870(&qword_1ED3ADA28, (uint64_t (*)(uint64_t))sub_1BAEB2D88, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE670);
  }
}

uint64_t sub_1BAEB2D88()
{
  uint64_t result;

  result = qword_1ED3ADA30;
  if (!qword_1ED3ADA30)
  {
    sub_1BAEB2E08();
    sub_1BAEB2E4C();
    sub_1BAEB2E90();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB2E08()
{
  unint64_t result;

  result = qword_1ED3AC9F8;
  if (!qword_1ED3AC9F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7800, &_s10CodingKeysON_67);
    atomic_store(result, (unint64_t *)&qword_1ED3AC9F8);
  }
  return result;
}

unint64_t sub_1BAEB2E4C()
{
  unint64_t result;

  result = qword_1ED3A58A0;
  if (!qword_1ED3A58A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C77B0, &_s10CodingKeysON_67);
    atomic_store(result, (unint64_t *)&qword_1ED3A58A0);
  }
  return result;
}

unint64_t sub_1BAEB2E90()
{
  unint64_t result;

  result = qword_1ED3AD4A0;
  if (!qword_1ED3AD4A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7788, &_s10CodingKeysON_67);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4A0);
  }
  return result;
}

void sub_1BAEB2ED4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2E0)
  {
    sub_1BAEB2F4C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF360, (uint64_t (*)(uint64_t))sub_1BAEB2F4C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2E0);
  }
}

void sub_1BAEB2F4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF368)
  {
    sub_1BAEB2D88();
    sub_1BA4A2870(&qword_1ED3ADA28, (uint64_t (*)(uint64_t))sub_1BAEB2D88, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF368);
  }
}

void sub_1BAEB2FC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5B0)
  {
    sub_1BAEB303C();
    sub_1BA4A2870(&qword_1ED3AD898, (uint64_t (*)(uint64_t))sub_1BAEB303C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5B0);
  }
}

uint64_t sub_1BAEB303C()
{
  uint64_t result;

  result = qword_1ED3AD8A0;
  if (!qword_1ED3AD8A0)
  {
    sub_1BAEB30BC();
    sub_1BAEB3100();
    sub_1BAEB3144();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB30BC()
{
  unint64_t result;

  result = qword_1ED3AD660;
  if (!qword_1ED3AD660)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7750, &_s10CodingKeysON_66);
    atomic_store(result, (unint64_t *)&qword_1ED3AD660);
  }
  return result;
}

unint64_t sub_1BAEB3100()
{
  unint64_t result;

  result = qword_1ED3C9120;
  if (!qword_1ED3C9120)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7700, &_s10CodingKeysON_66);
    atomic_store(result, (unint64_t *)&qword_1ED3C9120);
  }
  return result;
}

unint64_t sub_1BAEB3144()
{
  unint64_t result;

  result = qword_1ED3AD658;
  if (!qword_1ED3AD658)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C76D8, &_s10CodingKeysON_66);
    atomic_store(result, (unint64_t *)&qword_1ED3AD658);
  }
  return result;
}

unint64_t sub_1BAEB3188()
{
  unint64_t result;

  result = qword_1ED3C1A50;
  if (!qword_1ED3C1A50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradientCircle, &type metadata for FormatRadialGradientCircle);
    atomic_store(result, (unint64_t *)&qword_1ED3C1A50);
  }
  return result;
}

unint64_t sub_1BAEB31CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3CF6C8;
  if (!qword_1ED3CF6C8)
  {
    sub_1BA4AD288(255, &qword_1ED3CF6C0, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA689CD8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3CF6C8);
  }
  return result;
}

void sub_1BAEB3244(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B33F0)
  {
    sub_1BAEB32BC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3400, (uint64_t (*)(uint64_t))sub_1BAEB32BC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B33F0);
  }
}

void sub_1BAEB32BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B33F8)
  {
    sub_1BAEB303C();
    sub_1BA4A2870(&qword_1ED3AD898, (uint64_t (*)(uint64_t))sub_1BAEB303C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B33F8);
  }
}

void sub_1BAEB3334()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE620)
  {
    sub_1BAEB33AC();
    sub_1BA4A2870(&qword_1ED3AD988, (uint64_t (*)(uint64_t))sub_1BAEB33AC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE620);
  }
}

uint64_t sub_1BAEB33AC()
{
  uint64_t result;

  result = qword_1ED3AD990;
  if (!qword_1ED3AD990)
  {
    sub_1BAEB342C();
    sub_1BAEB3470();
    sub_1BAEB34B4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB342C()
{
  unint64_t result;

  result = qword_1ED3ADB18;
  if (!qword_1ED3ADB18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C76A0, &_s10CodingKeysON_65);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB18);
  }
  return result;
}

unint64_t sub_1BAEB3470()
{
  unint64_t result;

  result = qword_1ED3CBA30;
  if (!qword_1ED3CBA30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7650, &_s10CodingKeysON_65);
    atomic_store(result, (unint64_t *)&qword_1ED3CBA30);
  }
  return result;
}

unint64_t sub_1BAEB34B4()
{
  unint64_t result;

  result = qword_1ED3ADB10;
  if (!qword_1ED3ADB10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7628, &_s10CodingKeysON_65);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB10);
  }
  return result;
}

void sub_1BAEB34F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3408)
  {
    sub_1BAEB3570();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3418, (uint64_t (*)(uint64_t))sub_1BAEB3570, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3408);
  }
}

void sub_1BAEB3570()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3410)
  {
    sub_1BAEB33AC();
    sub_1BA4A2870(&qword_1ED3AD988, (uint64_t (*)(uint64_t))sub_1BAEB33AC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3410);
  }
}

uint64_t sub_1BAEB35E8(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

void sub_1BAEB3624()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19F8)
  {
    sub_1BAEB369C();
    sub_1BA4A2870(&qword_1ED3D0CB0, (uint64_t (*)(uint64_t))sub_1BAEB369C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19F8);
  }
}

uint64_t sub_1BAEB369C()
{
  uint64_t result;

  result = qword_1ED3D0CB8;
  if (!qword_1ED3D0CB8)
  {
    sub_1BAEB371C();
    sub_1BA5BF42C();
    sub_1BAEB3760();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB371C()
{
  unint64_t result;

  result = qword_1ED3D05B0;
  if (!qword_1ED3D05B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C75C8, &_s10CodingKeysON_64);
    atomic_store(result, (unint64_t *)&qword_1ED3D05B0);
  }
  return result;
}

unint64_t sub_1BAEB3760()
{
  unint64_t result;

  result = qword_1ED3D05A8;
  if (!qword_1ED3D05A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7550, &_s10CodingKeysON_64);
    atomic_store(result, (unint64_t *)&qword_1ED3D05A8);
  }
  return result;
}

void sub_1BAEB37A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD20)
  {
    sub_1BAEB381C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE7E0, (uint64_t (*)(uint64_t))sub_1BAEB381C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD20);
  }
}

void sub_1BAEB381C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE7E8)
  {
    sub_1BAEB369C();
    sub_1BA4A2870(&qword_1ED3D0CB0, (uint64_t (*)(uint64_t))sub_1BAEB369C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE7E8);
  }
}

uint64_t sub_1BAEB3894()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEB38A0()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE13A28, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEB38B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEB38C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEB38CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE588)
  {
    sub_1BAEB3944();
    sub_1BA4A2870(&qword_1ED3AD848, (uint64_t (*)(uint64_t))sub_1BAEB3944, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE588);
  }
}

uint64_t sub_1BAEB3944()
{
  uint64_t result;

  result = qword_1ED3AD850;
  if (!qword_1ED3AD850)
  {
    sub_1BAEB39C4();
    sub_1BAEB3A08();
    sub_1BAEB3A4C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB39C4()
{
  unint64_t result;

  result = qword_1ED3AD5A0;
  if (!qword_1ED3AD5A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7518, &_s10CodingKeysON_63);
    atomic_store(result, (unint64_t *)&qword_1ED3AD5A0);
  }
  return result;
}

unint64_t sub_1BAEB3A08()
{
  unint64_t result;

  result = qword_1ED3A5C80;
  if (!qword_1ED3A5C80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C74C8, &_s10CodingKeysON_63);
    atomic_store(result, (unint64_t *)&qword_1ED3A5C80);
  }
  return result;
}

unint64_t sub_1BAEB3A4C()
{
  unint64_t result;

  result = qword_1ED3AD598;
  if (!qword_1ED3AD598)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C74A0, &_s10CodingKeysON_63);
    atomic_store(result, (unint64_t *)&qword_1ED3AD598);
  }
  return result;
}

void sub_1BAEB3A90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3420)
  {
    sub_1BAEB3B08();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3430, (uint64_t (*)(uint64_t))sub_1BAEB3B08, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3420);
  }
}

void sub_1BAEB3B08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3428)
  {
    sub_1BAEB3944();
    sub_1BA4A2870(&qword_1ED3AD848, (uint64_t (*)(uint64_t))sub_1BAEB3944, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3428);
  }
}

uint64_t sub_1BAEB3B80()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEB3B8C()
{
  return sub_1BAEB3B98((void (*)(uint64_t))sub_1BADE2718);
}

uint64_t sub_1BAEB3B98(void (*a1)(uint64_t))
{
  uint64_t v1;

  return sub_1BAE3DB58(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(uint64_t (**)(void))(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_1BAEB3BBC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEB3BC8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEB3BD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB959E40 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_1BAEB41A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAEB4438(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEB45F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEB471C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEB48F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1836020326 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 28532 && a2 == 0xE200000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEB4AE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEB4C14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E696C616373 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEB4DF0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4C52553178 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C52553278 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C52553378 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x365F4C52553178 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x365F4C52553278 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x365F4C52553378 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x385F4C52553178 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x385F4C52553278 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x385F4C52553378 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x32315F4C52553178 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x32315F4C52553278 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x32315F4C52553378 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x38315F4C52553178 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x38315F4C52553278 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x38315F4C52553378 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t sub_1BAEB5330(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x556F656469563178 && a2 == 0xEA00000000004C52;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x556F656469563278 && a2 == 0xEA00000000004C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x556F656469563378 && a2 == 0xEA00000000004C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x556F656469563178 && a2 == 0xEC000000365F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x556F656469563278 && a2 == 0xEC000000365F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x556F656469563378 && a2 == 0xEC000000365F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x556F656469563178 && a2 == 0xEC000000385F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x556F656469563278 && a2 == 0xEC000000385F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x556F656469563378 && a2 == 0xEC000000385F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x556F656469563178 && a2 == 0xED000032315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x556F656469563278 && a2 == 0xED000032315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x556F656469563378 && a2 == 0xED000032315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x556F656469563178 && a2 == 0xED000038315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x556F656469563278 && a2 == 0xED000038315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x556F656469563378 && a2 == 0xED000038315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x556567616D493178 && a2 == 0xEA00000000004C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x556567616D493278 && a2 == 0xEA00000000004C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x556567616D493378 && a2 == 0xEA00000000004C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x556567616D493178 && a2 == 0xEC000000365F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x556567616D493278 && a2 == 0xEC000000365F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x556567616D493378 && a2 == 0xEC000000365F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x556567616D493178 && a2 == 0xEC000000385F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x556567616D493278 && a2 == 0xEC000000385F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x556567616D493378 && a2 == 0xEC000000385F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x556567616D493178 && a2 == 0xED000032315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x556567616D493278 && a2 == 0xED000032315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x556567616D493378 && a2 == 0xED000032315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x556567616D493178 && a2 == 0xED000038315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x556567616D493278 && a2 == 0xED000038315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0x556567616D493378 && a2 == 0xED000038315F4C52 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 30;
    else
      return 31;
  }
}

void sub_1BAEB5ED8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCE0)
  {
    sub_1BAEB5F50();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE768, (uint64_t (*)(uint64_t))sub_1BAEB5F50, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCE0);
  }
}

void sub_1BAEB5F50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE770)
  {
    sub_1BAEB5FC8();
    sub_1BA4A2870(&qword_1ED3D0C50, (uint64_t (*)(uint64_t))sub_1BAEB5FC8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE770);
  }
}

uint64_t sub_1BAEB5FC8()
{
  uint64_t result;

  result = qword_1ED3D0C58;
  if (!qword_1ED3D0C58)
  {
    sub_1BAEB6048();
    sub_1BA5B69EC();
    sub_1BAEB608C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB6048()
{
  unint64_t result;

  result = qword_1ED3D0550;
  if (!qword_1ED3D0550)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7468, &_s10CodingKeysON_62);
    atomic_store(result, (unint64_t *)&qword_1ED3D0550);
  }
  return result;
}

unint64_t sub_1BAEB608C()
{
  unint64_t result;

  result = qword_1ED3D0548;
  if (!qword_1ED3D0548)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C73F0, &_s10CodingKeysON_62);
    atomic_store(result, (unint64_t *)&qword_1ED3D0548);
  }
  return result;
}

void sub_1BAEB60D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE638)
  {
    sub_1BAEB6148();
    sub_1BA4A2870(&qword_1ED3AD9B8, (uint64_t (*)(uint64_t))sub_1BAEB6148, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE638);
  }
}

uint64_t sub_1BAEB6148()
{
  uint64_t result;

  result = qword_1ED3AD9C0;
  if (!qword_1ED3AD9C0)
  {
    sub_1BAEB61C8();
    sub_1BAEB620C();
    sub_1BAEB6250();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB61C8()
{
  unint64_t result;

  result = qword_1ED3ACA50;
  if (!qword_1ED3ACA50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C73B8, &_s10CodingKeysON_61);
    atomic_store(result, (unint64_t *)&qword_1ED3ACA50);
  }
  return result;
}

unint64_t sub_1BAEB620C()
{
  unint64_t result;

  result = qword_1ED3A88E8;
  if (!qword_1ED3A88E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7368, &_s10CodingKeysON_61);
    atomic_store(result, (unint64_t *)&qword_1ED3A88E8);
  }
  return result;
}

unint64_t sub_1BAEB6250()
{
  unint64_t result;

  result = qword_1ED3ADBF8;
  if (!qword_1ED3ADBF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7340, &_s10CodingKeysON_61);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBF8);
  }
  return result;
}

void sub_1BAEB6294(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE128)
  {
    sub_1BAEB630C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF000, (uint64_t (*)(uint64_t))sub_1BAEB630C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE128);
  }
}

void sub_1BAEB630C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3ACAB8)
  {
    sub_1BAEB6148();
    sub_1BA4A2870(&qword_1ED3AD9B8, (uint64_t (*)(uint64_t))sub_1BAEB6148, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3ACAB8);
  }
}

uint64_t sub_1BAEB6384(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746172657469 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7235949 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7889261 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656469727473 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65706F6373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BAEB66A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73776F726874 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1BAEB677C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2E8)
  {
    sub_1BAEB67F4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF370, (uint64_t (*)(uint64_t))sub_1BAEB67F4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2E8);
  }
}

void sub_1BAEB67F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF378)
  {
    sub_1BAEB686C();
    sub_1BA4A2870(&qword_1ED3D1600, (uint64_t (*)(uint64_t))sub_1BAEB686C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF378);
  }
}

uint64_t sub_1BAEB686C()
{
  uint64_t result;

  result = qword_1ED3D1608;
  if (!qword_1ED3D1608)
  {
    sub_1BAEB68EC();
    sub_1BA833DF8();
    sub_1BAEB6930();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB68EC()
{
  unint64_t result;

  result = qword_1ED3D0368;
  if (!qword_1ED3D0368)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7308, &_s10CodingKeysON_60);
    atomic_store(result, (unint64_t *)&qword_1ED3D0368);
  }
  return result;
}

unint64_t sub_1BAEB6930()
{
  unint64_t result;

  result = qword_1ED3D0360;
  if (!qword_1ED3D0360)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7290, &_s10CodingKeysON_60);
    atomic_store(result, (unint64_t *)&qword_1ED3D0360);
  }
  return result;
}

unint64_t sub_1BAEB6974()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3AAE30;
  if (!qword_1ED3AAE30)
  {
    sub_1BA4B07F0(255, &qword_1ED3AAE28, (uint64_t (*)(uint64_t))type metadata accessor for FormatRegex, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3C6678, (uint64_t (*)(uint64_t))type metadata accessor for FormatRegex, (uint64_t)&protocol conformance descriptor for FormatRegex);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAE30);
  }
  return result;
}

uint64_t sub_1BAEB6A04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C65537865676572 && a2 == 0xEE0073726F746365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEB6C4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD);
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (**v32)(char *, _QWORD);
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  sub_1BA4CFB94();
  v3 = v2;
  v31 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAEECC5C();
  v30 = v6;
  v7 = *(void (***)(char *, _QWORD))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = sub_1BAEB711C();
  sub_1BA4A2870(&qword_1ED3ABEA8, (uint64_t (*)(uint64_t))sub_1BAEB711C, (uint64_t)&unk_1BB8FFC6C);
  v11 = v32;
  sub_1BB87468C();
  if (v11)
  {
    v12 = v11;
LABEL_3:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v29 = v5;
  v32 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v30;
  v16 = v31;
  if ((v14 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_9;
      }
      v21 = v9;
      v22 = *((_QWORD *)v19 - 2);
      v23 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v24);
      *(&v29 - 4) = (char *)&_s10CodingKeysON_59;
      *(&v29 - 3) = (char *)sub_1BAEB719C();
      *(&v29 - 2) = (char *)sub_1BAEB71E0();
      *(&v29 - 1) = (char *)sub_1BAEB7224();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v25 = sub_1BAE71130((uint64_t)&unk_1E726DFD8);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v26 = v22;
      *(_QWORD *)(v26 + 8) = v23;
      *(_QWORD *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v22, v23, 1);
      v32[1](v21, v15);
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
  }
  v36 = 0;
  v37 = 0;
  v38 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    sub_1BA4A2870(&qword_1ED3C4600, (uint64_t (*)(uint64_t))sub_1BA4CFB94, MEMORY[0x1E0DB3140]);
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v20 = v29;
    sub_1BB8740D4();
    v27 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v3);
  }
  else
  {
    v27 = MEMORY[0x1E0DEE9E8];
  }
  v32[1](v9, v15);
  type metadata accessor for FormatResizeAuto();
  KeyPath = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 16) = v27;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

void sub_1BAEB702C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3438)
  {
    sub_1BAEB70A4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3448, (uint64_t (*)(uint64_t))sub_1BAEB70A4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3438);
  }
}

void sub_1BAEB70A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3440)
  {
    sub_1BAEB711C();
    sub_1BA4A2870(&qword_1ED3ABEA8, (uint64_t (*)(uint64_t))sub_1BAEB711C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3440);
  }
}

uint64_t sub_1BAEB711C()
{
  uint64_t result;

  result = qword_1ED3ABEB0;
  if (!qword_1ED3ABEB0)
  {
    sub_1BAEB719C();
    sub_1BAEB71E0();
    sub_1BAEB7224();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB719C()
{
  unint64_t result;

  result = qword_1ED3ABE30;
  if (!qword_1ED3ABE30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7230, &_s10CodingKeysON_59);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE30);
  }
  return result;
}

unint64_t sub_1BAEB71E0()
{
  unint64_t result;

  result = qword_1ED3ABE28;
  if (!qword_1ED3ABE28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C71E0, &_s10CodingKeysON_59);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE28);
  }
  return result;
}

unint64_t sub_1BAEB7224()
{
  unint64_t result;

  result = qword_1ED3ABE20;
  if (!qword_1ED3ABE20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C71B8, &_s10CodingKeysON_59);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE20);
  }
  return result;
}

unint64_t sub_1BAEB7268()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAEA0;
  if (!qword_1ED3AAEA0)
  {
    sub_1BA4AD288(255, &qword_1ED3AAE98, (uint64_t)&type metadata for FormatResizeAutoMask, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82C9D4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAEA0);
  }
  return result;
}

void sub_1BAEB72E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BC8)
  {
    sub_1BAEB7358();
    sub_1BA4A2870(&qword_1ED3D1050, (uint64_t (*)(uint64_t))sub_1BAEB7358, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BC8);
  }
}

uint64_t sub_1BAEB7358()
{
  uint64_t result;

  result = qword_1ED3D1058;
  if (!qword_1ED3D1058)
  {
    sub_1BAEB73D8();
    sub_1BA52B4F4();
    sub_1BAEB741C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB73D8()
{
  unint64_t result;

  result = qword_1ED3D09C8;
  if (!qword_1ED3D09C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7180, &_s10CodingKeysON_58);
    atomic_store(result, (unint64_t *)&qword_1ED3D09C8);
  }
  return result;
}

unint64_t sub_1BAEB741C()
{
  unint64_t result;

  result = qword_1ED3D09C0;
  if (!qword_1ED3D09C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7108, &_s10CodingKeysON_58);
    atomic_store(result, (unint64_t *)&qword_1ED3D09C0);
  }
  return result;
}

void sub_1BAEB7460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF50)
  {
    sub_1BAEB74D8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEC50, (uint64_t (*)(uint64_t))sub_1BAEB74D8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF50);
  }
}

void sub_1BAEB74D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEC58)
  {
    sub_1BAEB7358();
    sub_1BA4A2870(&qword_1ED3D1050, (uint64_t (*)(uint64_t))sub_1BAEB7358, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEC58);
  }
}

unint64_t sub_1BAEB7550()
{
  unint64_t result;

  result = qword_1EF2B3450;
  if (!qword_1EF2B3450)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C70E0, &_s10CodingTypeON_38);
    atomic_store(result, (unint64_t *)&qword_1EF2B3450);
  }
  return result;
}

unint64_t sub_1BAEB7594()
{
  unint64_t result;

  result = qword_1ED3A4308;
  if (!qword_1ED3A4308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7090, &_s10CodingTypeON_36);
    atomic_store(result, (unint64_t *)&qword_1ED3A4308);
  }
  return result;
}

unint64_t sub_1BAEB75D8()
{
  unint64_t result;

  result = qword_1ED3A4340;
  if (!qword_1ED3A4340)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatScoreMatchupFormatName, &type metadata for FormatScoreMatchupFormatName);
    atomic_store(result, (unint64_t *)&qword_1ED3A4340);
  }
  return result;
}

unint64_t sub_1BAEB761C()
{
  unint64_t result;

  result = qword_1ED3A4330;
  if (!qword_1ED3A4330)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7068, &_s10CodingTypeON_35);
    atomic_store(result, (unint64_t *)&qword_1ED3A4330);
  }
  return result;
}

unint64_t sub_1BAEB7660()
{
  unint64_t result;

  result = qword_1EF2B3458;
  if (!qword_1EF2B3458)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7040, &_s10CodingTypeON_34);
    atomic_store(result, (unint64_t *)&qword_1EF2B3458);
  }
  return result;
}

void sub_1BAEB76A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E20)
  {
    sub_1BAEB771C();
    sub_1BA4A2870(&qword_1ED3D1500, (uint64_t (*)(uint64_t))sub_1BAEB771C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E20);
  }
}

uint64_t sub_1BAEB771C()
{
  uint64_t result;

  result = qword_1ED3D1508;
  if (!qword_1ED3D1508)
  {
    sub_1BAEB779C();
    sub_1BA58DE68();
    sub_1BAEB77E0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB779C()
{
  unint64_t result;

  result = qword_1ED3D0240;
  if (!qword_1ED3D0240)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C7008, &_s10CodingKeysON_57);
    atomic_store(result, (unint64_t *)&qword_1ED3D0240);
  }
  return result;
}

unint64_t sub_1BAEB77E0()
{
  unint64_t result;

  result = qword_1ED3D0238;
  if (!qword_1ED3D0238)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6F90, &_s10CodingKeysON_57);
    atomic_store(result, (unint64_t *)&qword_1ED3D0238);
  }
  return result;
}

void sub_1BAEB7824(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE250)
  {
    sub_1BAEB789C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF248, (uint64_t (*)(uint64_t))sub_1BAEB789C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE250);
  }
}

void sub_1BAEB789C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF250)
  {
    sub_1BAEB771C();
    sub_1BA4A2870(&qword_1ED3D1500, (uint64_t (*)(uint64_t))sub_1BAEB771C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF250);
  }
}

void sub_1BAEB7914()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E28)
  {
    sub_1BAEB798C();
    sub_1BA4A2870(&qword_1ED3D1510, (uint64_t (*)(uint64_t))sub_1BAEB798C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E28);
  }
}

uint64_t sub_1BAEB798C()
{
  uint64_t result;

  result = qword_1ED3D1518;
  if (!qword_1ED3D1518)
  {
    sub_1BAEB7A0C();
    sub_1BA55E640();
    sub_1BAEB7A50();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB7A0C()
{
  unint64_t result;

  result = qword_1ED3D0250;
  if (!qword_1ED3D0250)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6F58, &_s10CodingKeysON_56);
    atomic_store(result, (unint64_t *)&qword_1ED3D0250);
  }
  return result;
}

unint64_t sub_1BAEB7A50()
{
  unint64_t result;

  result = qword_1ED3D0248;
  if (!qword_1ED3D0248)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6EE0, &_s10CodingKeysON_56);
    atomic_store(result, (unint64_t *)&qword_1ED3D0248);
  }
  return result;
}

void sub_1BAEB7A94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE258)
  {
    sub_1BAEB7B0C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF258, (uint64_t (*)(uint64_t))sub_1BAEB7B0C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE258);
  }
}

void sub_1BAEB7B0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF260)
  {
    sub_1BAEB798C();
    sub_1BA4A2870(&qword_1ED3D1510, (uint64_t (*)(uint64_t))sub_1BAEB798C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF260);
  }
}

void sub_1BAEB7B84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CC8)
  {
    sub_1BAEB7BFC();
    sub_1BA4A2870(&qword_1ED3D1250, (uint64_t (*)(uint64_t))sub_1BAEB7BFC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CC8);
  }
}

uint64_t sub_1BAEB7BFC()
{
  uint64_t result;

  result = qword_1ED3D1258;
  if (!qword_1ED3D1258)
  {
    sub_1BAEB7C7C();
    sub_1BA824DDC();
    sub_1BAEB7CC0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB7C7C()
{
  unint64_t result;

  result = qword_1ED3D1720;
  if (!qword_1ED3D1720)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6EA8, &_s10CodingKeysON_55);
    atomic_store(result, (unint64_t *)&qword_1ED3D1720);
  }
  return result;
}

unint64_t sub_1BAEB7CC0()
{
  unint64_t result;

  result = qword_1ED3D1718;
  if (!qword_1ED3D1718)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6E30, &_s10CodingKeysON_55);
    atomic_store(result, (unint64_t *)&qword_1ED3D1718);
  }
  return result;
}

unint64_t sub_1BAEB7D04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3BBE88;
  if (!qword_1ED3BBE88)
  {
    sub_1BAEFBAC0(255, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3BBE88);
  }
  return result;
}

void sub_1BAEB7D6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE088)
  {
    sub_1BAEB7DE4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEEC0, (uint64_t (*)(uint64_t))sub_1BAEB7DE4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE088);
  }
}

void sub_1BAEB7DE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEEC8)
  {
    sub_1BAEB7BFC();
    sub_1BA4A2870(&qword_1ED3D1250, (uint64_t (*)(uint64_t))sub_1BAEB7BFC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEEC8);
  }
}

unint64_t sub_1BAEB7E5C()
{
  unint64_t result;

  result = qword_1EF2B3460;
  if (!qword_1EF2B3460)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6DB8, &_s10CodingTypeON_31);
    atomic_store(result, (unint64_t *)&qword_1EF2B3460);
  }
  return result;
}

unint64_t sub_1BAEB7EA0()
{
  unint64_t result;

  result = qword_1EF2B3468;
  if (!qword_1EF2B3468)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6D90, &_s14descr1E72CC351C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B3468);
  }
  return result;
}

void sub_1BAEB7EE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3470)
  {
    sub_1BAEB7F5C();
    sub_1BA4A2870(&qword_1EF2B3498, (uint64_t (*)(uint64_t))sub_1BAEB7F5C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3470);
  }
}

uint64_t sub_1BAEB7F5C()
{
  uint64_t result;

  result = qword_1EF2B3478;
  if (!qword_1EF2B3478)
  {
    sub_1BAEB7FDC();
    sub_1BAEB8020();
    sub_1BAEB8064();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB7FDC()
{
  unint64_t result;

  result = qword_1EF2B3480;
  if (!qword_1EF2B3480)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6D58, &_s10CodingKeysON_54);
    atomic_store(result, (unint64_t *)&qword_1EF2B3480);
  }
  return result;
}

unint64_t sub_1BAEB8020()
{
  unint64_t result;

  result = qword_1EF2B3488;
  if (!qword_1EF2B3488)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6D08, &_s10CodingKeysON_54);
    atomic_store(result, (unint64_t *)&qword_1EF2B3488);
  }
  return result;
}

unint64_t sub_1BAEB8064()
{
  unint64_t result;

  result = qword_1EF2B3490;
  if (!qword_1EF2B3490)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6CE0, &_s10CodingKeysON_54);
    atomic_store(result, (unint64_t *)&qword_1EF2B3490);
  }
  return result;
}

unint64_t sub_1BAEB80A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B34A8;
  if (!qword_1EF2B34A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B34A0, (uint64_t)&type metadata for FormatShineBlend, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAAC2B08();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B34A8);
  }
  return result;
}

void sub_1BAEB8120(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B34B0)
  {
    sub_1BAEB8198();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B34C0, (uint64_t (*)(uint64_t))sub_1BAEB8198, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B34B0);
  }
}

void sub_1BAEB8198()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B34B8)
  {
    sub_1BAEB7F5C();
    sub_1BA4A2870(&qword_1EF2B3498, (uint64_t (*)(uint64_t))sub_1BAEB7F5C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B34B8);
  }
}

uint64_t sub_1BAEB8210(uint64_t a1, uint64_t a2)
{
  __swift_memcpy41_8(a2, a1);
  return a2;
}

uint64_t sub_1BAEB824C()
{
  return objectdestroy_118Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BAEB825C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_1BAEB8288()
{
  unint64_t result;

  result = qword_1ED3ADB58;
  if (!qword_1ED3ADB58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSponsoredBannerSizing, &type metadata for FormatSponsoredBannerSizing);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB58);
  }
  return result;
}

uint64_t sub_1BAEB82CC()
{
  uint64_t v0;
  unint64_t v1;

  sub_1BA719718(*(_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 24);
  if ((~v1 & 0xF000000000000007) != 0)
    sub_1BA719718(v1);
  return swift_deallocObject();
}

uint64_t sub_1BAEB8304()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) >= 3uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAEB8330()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BAEB8354()
{
  unint64_t result;

  result = qword_1EF2B34C8;
  if (!qword_1EF2B34C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontLineSizing, &type metadata for FormatFontLineSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2B34C8);
  }
  return result;
}

uint64_t sub_1BAEB8398()
{
  return objectdestroy_118Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_118Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAEB83E4()
{
  return objectdestroy_36Tm((void (*)(_QWORD))sub_1BA7635EC);
}

uint64_t sub_1BAEB83F0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAEB8424()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B30)
  {
    sub_1BAEB849C();
    sub_1BA4A2870(&qword_1ED3D0F20, (uint64_t (*)(uint64_t))sub_1BAEB849C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B30);
  }
}

uint64_t sub_1BAEB849C()
{
  uint64_t result;

  result = qword_1ED3D0F28;
  if (!qword_1ED3D0F28)
  {
    sub_1BAEB851C();
    sub_1BA5542B0();
    sub_1BAEB8560();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB851C()
{
  unint64_t result;

  result = qword_1ED3D0890;
  if (!qword_1ED3D0890)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6BD0, &_s10CodingKeysON_53);
    atomic_store(result, (unint64_t *)&qword_1ED3D0890);
  }
  return result;
}

unint64_t sub_1BAEB8560()
{
  unint64_t result;

  result = qword_1ED3D0888;
  if (!qword_1ED3D0888)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6B58, &_s10CodingKeysON_53);
    atomic_store(result, (unint64_t *)&qword_1ED3D0888);
  }
  return result;
}

void sub_1BAEB85A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE70)
  {
    sub_1BAEB861C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEA90, (uint64_t (*)(uint64_t))sub_1BAEB861C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE70);
  }
}

void sub_1BAEB861C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEA98)
  {
    sub_1BAEB849C();
    sub_1BA4A2870(&qword_1ED3D0F20, (uint64_t (*)(uint64_t))sub_1BAEB849C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEA98);
  }
}

void sub_1BAEB8694()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C46F8)
  {
    type metadata accessor for FormatPropertyDefinition(255);
    sub_1BA4A2870(&qword_1ED3B7880, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
    sub_1BA4A2870(&qword_1ED3BB1A0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C46F8);
  }
}

void sub_1BAEB8738()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DB8)
  {
    sub_1BAEB87B0();
    sub_1BA4A2870(&qword_1ED3D1430, (uint64_t (*)(uint64_t))sub_1BAEB87B0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DB8);
  }
}

uint64_t sub_1BAEB87B0()
{
  uint64_t result;

  result = qword_1ED3D1438;
  if (!qword_1ED3D1438)
  {
    sub_1BAEB8830();
    sub_1BAEB8874();
    sub_1BAEB88B8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB8830()
{
  unint64_t result;

  result = qword_1ED3D1940;
  if (!qword_1ED3D1940)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6B20, &_s10CodingKeysON_52);
    atomic_store(result, (unint64_t *)&qword_1ED3D1940);
  }
  return result;
}

unint64_t sub_1BAEB8874()
{
  unint64_t result;

  result = qword_1ED3D1938;
  if (!qword_1ED3D1938)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6AD0, &_s10CodingKeysON_52);
    atomic_store(result, (unint64_t *)&qword_1ED3D1938);
  }
  return result;
}

unint64_t sub_1BAEB88B8()
{
  unint64_t result;

  result = qword_1ED3D1930;
  if (!qword_1ED3D1930)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6AA8, &_s10CodingKeysON_52);
    atomic_store(result, (unint64_t *)&qword_1ED3D1930);
  }
  return result;
}

void sub_1BAEB88FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1E0)
  {
    sub_1BAEB8974();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF168, (uint64_t (*)(uint64_t))sub_1BAEB8974, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1E0);
  }
}

void sub_1BAEB8974()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF170)
  {
    sub_1BAEB87B0();
    sub_1BA4A2870(&qword_1ED3D1430, (uint64_t (*)(uint64_t))sub_1BAEB87B0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF170);
  }
}

unint64_t sub_1BAEB89EC()
{
  unint64_t result;

  result = qword_1EF2B34D0;
  if (!qword_1EF2B34D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6A80, &_s10CodingTypeON_29);
    atomic_store(result, (unint64_t *)&qword_1EF2B34D0);
  }
  return result;
}

unint64_t sub_1BAEB8A30()
{
  unint64_t result;

  result = qword_1ED3AE398;
  if (!qword_1ED3AE398)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6A30, &_s10CodingTypeON_27);
    atomic_store(result, (unint64_t *)&qword_1ED3AE398);
  }
  return result;
}

unint64_t sub_1BAEB8A74()
{
  unint64_t result;

  result = qword_1EF2B34D8;
  if (!qword_1EF2B34D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6A08, &_s10CodingTypeON_26);
    atomic_store(result, (unint64_t *)&qword_1EF2B34D8);
  }
  return result;
}

unint64_t sub_1BAEB8AB8(uint64_t a1)
{
  return sub_1BA6F5D74(a1 & 0xDFFFFFFFFFFFFFFFLL);
}

void sub_1BAEB8AD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B34E0)
  {
    sub_1BAEB8B48();
    sub_1BA4A2870(&qword_1EF2B3508, (uint64_t (*)(uint64_t))sub_1BAEB8B48, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B34E0);
  }
}

uint64_t sub_1BAEB8B48()
{
  uint64_t result;

  result = qword_1EF2B34E8;
  if (!qword_1EF2B34E8)
  {
    sub_1BAEB8BC8();
    sub_1BAEB8C0C();
    sub_1BAEB8C50();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB8BC8()
{
  unint64_t result;

  result = qword_1EF2B34F0;
  if (!qword_1EF2B34F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C69D0, &_s10CodingKeysON_51);
    atomic_store(result, (unint64_t *)&qword_1EF2B34F0);
  }
  return result;
}

unint64_t sub_1BAEB8C0C()
{
  unint64_t result;

  result = qword_1EF2B34F8;
  if (!qword_1EF2B34F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6980, &_s10CodingKeysON_51);
    atomic_store(result, (unint64_t *)&qword_1EF2B34F8);
  }
  return result;
}

unint64_t sub_1BAEB8C50()
{
  unint64_t result;

  result = qword_1EF2B3500;
  if (!qword_1EF2B3500)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6958, &_s10CodingKeysON_51);
    atomic_store(result, (unint64_t *)&qword_1EF2B3500);
  }
  return result;
}

void sub_1BAEB8C94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3510)
  {
    sub_1BAEB8D0C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3520, (uint64_t (*)(uint64_t))sub_1BAEB8D0C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3510);
  }
}

void sub_1BAEB8D0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3518)
  {
    sub_1BAEB8B48();
    sub_1BA4A2870(&qword_1EF2B3508, (uint64_t (*)(uint64_t))sub_1BAEB8B48, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3518);
  }
}

void sub_1BAEB8D84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3528)
  {
    sub_1BAEB8DFC();
    sub_1BA4A2870(&qword_1EF2B3550, (uint64_t (*)(uint64_t))sub_1BAEB8DFC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3528);
  }
}

uint64_t sub_1BAEB8DFC()
{
  uint64_t result;

  result = qword_1EF2B3530;
  if (!qword_1EF2B3530)
  {
    sub_1BAEB8E7C();
    sub_1BAEB8EC0();
    sub_1BAEB8F04();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEB8E7C()
{
  unint64_t result;

  result = qword_1EF2B3538;
  if (!qword_1EF2B3538)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6920, &_s10CodingKeysON_50);
    atomic_store(result, (unint64_t *)&qword_1EF2B3538);
  }
  return result;
}

unint64_t sub_1BAEB8EC0()
{
  unint64_t result;

  result = qword_1EF2B3540;
  if (!qword_1EF2B3540)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C68D0, &_s10CodingKeysON_50);
    atomic_store(result, (unint64_t *)&qword_1EF2B3540);
  }
  return result;
}

unint64_t sub_1BAEB8F04()
{
  unint64_t result;

  result = qword_1EF2B3548;
  if (!qword_1EF2B3548)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C68A8, &_s10CodingKeysON_50);
    atomic_store(result, (unint64_t *)&qword_1EF2B3548);
  }
  return result;
}

void sub_1BAEB8F48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3558)
  {
    sub_1BAEB8FC0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3568, (uint64_t (*)(uint64_t))sub_1BAEB8FC0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3558);
  }
}

void sub_1BAEB8FC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3560)
  {
    sub_1BAEB8DFC();
    sub_1BA4A2870(&qword_1EF2B3550, (uint64_t (*)(uint64_t))sub_1BAEB8DFC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3560);
  }
}

uint64_t sub_1BAEB9038(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1802723693 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEB9108(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F69736E656D6964 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB959E20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEB9250(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEB9330(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEB941C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974696361706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F69746F6DLL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAEB966C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746867696568 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874646977 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEB97A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1BAEB9C04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F4D646E656C62 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F72506168706C61 && a2 == 0xEE00726F73736563 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEB9DD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72657A6973 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6152657461746F72 && a2 == 0xED0000736E616964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F69746F6DLL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73646E656C62 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BAEBA114(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEBA248(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F66736E617274 && a2 == 0xEA0000000000736DLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95B4E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BAEBA584(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEBA6CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F697469646E6F63 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEBA7B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x69646E6F4373686CLL && a2 == 0xEC0000006E6F6974;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69646E6F43736872 && a2 == 0xEC0000006E6F6974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BAEBA90C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2A0)
  {
    sub_1BAEBA984();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF2E0, (uint64_t (*)(uint64_t))sub_1BAEBA984, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2A0);
  }
}

void sub_1BAEBA984()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF2E8)
  {
    sub_1BAEBA9FC();
    sub_1BA4A2870(&qword_1ED3D1580, (uint64_t (*)(uint64_t))sub_1BAEBA9FC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF2E8);
  }
}

uint64_t sub_1BAEBA9FC()
{
  uint64_t result;

  result = qword_1ED3D1588;
  if (!qword_1ED3D1588)
  {
    sub_1BAEBAA7C();
    sub_1BA6074C0();
    sub_1BAEBAAC0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBAA7C()
{
  unint64_t result;

  result = qword_1ED3D02E8;
  if (!qword_1ED3D02E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6870, &_s10CodingKeysON_49);
    atomic_store(result, (unint64_t *)&qword_1ED3D02E8);
  }
  return result;
}

unint64_t sub_1BAEBAAC0()
{
  unint64_t result;

  result = qword_1ED3D02E0;
  if (!qword_1ED3D02E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C67F8, &_s10CodingKeysON_49);
    atomic_store(result, (unint64_t *)&qword_1ED3D02E0);
  }
  return result;
}

unint64_t sub_1BAEBAB04()
{
  unint64_t result;

  result = qword_1ED3AE3A8;
  if (!qword_1ED3AE3A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemPuzzleStatisticTransform, &type metadata for FormatSlotItemPuzzleStatisticTransform);
    atomic_store(result, (unint64_t *)&qword_1ED3AE3A8);
  }
  return result;
}

unint64_t sub_1BAEBAB48()
{
  unint64_t result;

  result = qword_1EF2B3570;
  if (!qword_1EF2B3570)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilter, &type metadata for FormatSlotItemTagFilter);
    atomic_store(result, (unint64_t *)&qword_1EF2B3570);
  }
  return result;
}

uint64_t sub_1BAEBAB8C()
{
  uint64_t v0;

  sub_1BAEB8AB8(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

unint64_t sub_1BAEBABB0()
{
  unint64_t result;

  result = qword_1EF2B3578;
  if (!qword_1EF2B3578)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotExpireContent, &type metadata for FormatSlotExpireContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B3578);
  }
  return result;
}

unint64_t sub_1BAEBABF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AE510;
  if (!qword_1ED3AE510)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A08D0, (uint64_t (*)(void))sub_1BA833F0C, (uint64_t)&type metadata for FormatItemTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v2 = v1;
    v3 = sub_1BAEBAC74();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for <> Set<A>, v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AE510);
  }
  return result;
}

unint64_t sub_1BAEBAC74()
{
  unint64_t result;

  result = qword_1ED3AD498;
  if (!qword_1ED3AD498)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemTrait, &type metadata for FormatItemTrait);
    atomic_store(result, (unint64_t *)&qword_1ED3AD498);
  }
  return result;
}

unint64_t sub_1BAEBACB8(uint64_t a1)
{
  return sub_1BA739250(a1 & 0xDFFFFFFFFFFFFFFFLL);
}

uint64_t sub_1BAEBACD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465646E65747865 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAEBAF58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7365707974 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void sub_1BAEBB2A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD28)
  {
    sub_1BAEBB320();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE7F0, (uint64_t (*)(uint64_t))sub_1BAEBB320, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD28);
  }
}

void sub_1BAEBB320()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE7F8)
  {
    sub_1BAEBB398();
    sub_1BA4A2870(&qword_1ED3D0CC0, (uint64_t (*)(uint64_t))sub_1BAEBB398, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE7F8);
  }
}

uint64_t sub_1BAEBB398()
{
  uint64_t result;

  result = qword_1ED3D0CC8;
  if (!qword_1ED3D0CC8)
  {
    sub_1BAEBB418();
    sub_1BA6928E8();
    sub_1BAEBB45C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBB418()
{
  unint64_t result;

  result = qword_1ED3D05C0;
  if (!qword_1ED3D05C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6798, &_s10CodingKeysON_48);
    atomic_store(result, (unint64_t *)&qword_1ED3D05C0);
  }
  return result;
}

unint64_t sub_1BAEBB45C()
{
  unint64_t result;

  result = qword_1ED3D05B8;
  if (!qword_1ED3D05B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6720, &_s10CodingKeysON_48);
    atomic_store(result, (unint64_t *)&qword_1ED3D05B8);
  }
  return result;
}

void sub_1BAEBB4A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1EA8)
  {
    sub_1BAEBB518();
    sub_1BA4A2870(&qword_1ED3D1610, (uint64_t (*)(uint64_t))sub_1BAEBB518, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1EA8);
  }
}

uint64_t sub_1BAEBB518()
{
  uint64_t result;

  result = qword_1ED3D1618;
  if (!qword_1ED3D1618)
  {
    sub_1BAEBB598();
    sub_1BA62C9E4();
    sub_1BAEBB5DC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBB598()
{
  unint64_t result;

  result = qword_1ED3D0378;
  if (!qword_1ED3D0378)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C66E8, &_s10CodingKeysON_47);
    atomic_store(result, (unint64_t *)&qword_1ED3D0378);
  }
  return result;
}

unint64_t sub_1BAEBB5DC()
{
  unint64_t result;

  result = qword_1ED3D0370;
  if (!qword_1ED3D0370)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6670, &_s10CodingKeysON_47);
    atomic_store(result, (unint64_t *)&qword_1ED3D0370);
  }
  return result;
}

void sub_1BAEBB620(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2F0)
  {
    sub_1BAEBB698();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF380, (uint64_t (*)(uint64_t))sub_1BAEBB698, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2F0);
  }
}

void sub_1BAEBB698()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF388)
  {
    sub_1BAEBB518();
    sub_1BA4A2870(&qword_1ED3D1610, (uint64_t (*)(uint64_t))sub_1BAEBB518, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF388);
  }
}

unint64_t sub_1BAEBB710()
{
  unint64_t result;

  result = qword_1ED3D2430;
  if (!qword_1ED3D2430)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6648, &_s10CodingTypeON_24);
    atomic_store(result, (unint64_t *)&qword_1ED3D2430);
  }
  return result;
}

unint64_t sub_1BAEBB754()
{
  unint64_t result;

  result = qword_1ED3D2B38;
  if (!qword_1ED3D2B38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTip, &type metadata for FormatSourceItemTip);
    atomic_store(result, &qword_1ED3D2B38);
  }
  return result;
}

void sub_1BAEBB798()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D2BF0)
  {
    sub_1BAEBB810();
    sub_1BA4A2870(&qword_1ED3D2B58, (uint64_t (*)(uint64_t))sub_1BAEBB810, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D2BF0);
  }
}

uint64_t sub_1BAEBB810()
{
  uint64_t result;

  result = qword_1ED3D2B60;
  if (!qword_1ED3D2B60)
  {
    sub_1BAEBB890();
    sub_1BAEBB8D4();
    sub_1BAEBB918();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBB890()
{
  unint64_t result;

  result = qword_1ED3D2B20;
  if (!qword_1ED3D2B20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6610, &_s10CodingKeysON_46);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B20);
  }
  return result;
}

unint64_t sub_1BAEBB8D4()
{
  unint64_t result;

  result = qword_1ED3D2B18;
  if (!qword_1ED3D2B18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C65C0, &_s10CodingKeysON_46);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B18);
  }
  return result;
}

unint64_t sub_1BAEBB918()
{
  unint64_t result;

  result = qword_1ED3D2B10;
  if (!qword_1ED3D2B10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6598, &_s10CodingKeysON_46);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B10);
  }
  return result;
}

unint64_t sub_1BAEBB95C()
{
  unint64_t result;

  result = qword_1ED3D2B90;
  if (!qword_1ED3D2B90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipObject, &type metadata for FormatSourceItemTipObject);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B90);
  }
  return result;
}

unint64_t sub_1BAEBB9A0()
{
  unint64_t result;

  result = qword_1EF2B3580;
  if (!qword_1EF2B3580)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipTraits, &type metadata for FormatSourceItemTipTraits);
    atomic_store(result, (unint64_t *)&qword_1EF2B3580);
  }
  return result;
}

void sub_1BAEBB9E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDF0)
  {
    sub_1BAEBBA5C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE980, (uint64_t (*)(uint64_t))sub_1BAEBBA5C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDF0);
  }
}

void sub_1BAEBBA5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE988)
  {
    sub_1BAEBB810();
    sub_1BA4A2870(&qword_1ED3D2B58, (uint64_t (*)(uint64_t))sub_1BAEBB810, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE988);
  }
}

unint64_t sub_1BAEBBAD4()
{
  unint64_t result;

  result = qword_1ED3D2BA0;
  if (!qword_1ED3D2BA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6570, &_s10CodingTypeON_23);
    atomic_store(result, (unint64_t *)&qword_1ED3D2BA0);
  }
  return result;
}

unint64_t sub_1BAEBBB18()
{
  unint64_t result;

  result = qword_1ED3D2B08;
  if (!qword_1ED3D2B08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.SourceItemTip, &type metadata for FormatGroupBinding.SourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B08);
  }
  return result;
}

unint64_t sub_1BAEBBB5C()
{
  unint64_t result;

  result = qword_1ED3D2B88;
  if (!qword_1ED3D2B88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6548, &_s10CodingTypeON_22);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B88);
  }
  return result;
}

unint64_t sub_1BAEBBBA0()
{
  unint64_t result;

  result = qword_1ED3D2BA8;
  if (!qword_1ED3D2BA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipBinding, &type metadata for FormatSourceItemTipBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3D2BA8);
  }
  return result;
}

unint64_t sub_1BAEBBBE4()
{
  unint64_t result;

  result = qword_1EF2B3588;
  if (!qword_1EF2B3588)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6520, &_s10CodingTypeON_21);
    atomic_store(result, (unint64_t *)&qword_1EF2B3588);
  }
  return result;
}

unint64_t sub_1BAEBBC28()
{
  unint64_t result;

  result = qword_1EF2B3590;
  if (!qword_1EF2B3590)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C64F8, &_s10CodingTypeON_20);
    atomic_store(result, (unint64_t *)&qword_1EF2B3590);
  }
  return result;
}

void sub_1BAEBBC6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3598)
  {
    sub_1BA4AD288(255, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v3 = v2;
    v4 = sub_1BAEBBCE4();
    v6 = type metadata accessor for FormatSelectorValue(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3598);
  }
}

unint64_t sub_1BAEBBCE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B35A0;
  if (!qword_1EF2B35A0)
  {
    sub_1BA4AD288(255, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEBBD5C();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for <A> [A], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B35A0);
  }
  return result;
}

unint64_t sub_1BAEBBD5C()
{
  unint64_t result;

  result = qword_1EF2B35A8;
  if (!qword_1EF2B35A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipTrait, &type metadata for FormatSourceItemTipTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2B35A8);
  }
  return result;
}

unint64_t sub_1BAEBBDA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B35B8;
  if (!qword_1EF2B35B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEBBE18();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B35B8);
  }
  return result;
}

unint64_t sub_1BAEBBE18()
{
  unint64_t result;

  result = qword_1EF2B35C0;
  if (!qword_1EF2B35C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipTrait, &type metadata for FormatSourceItemTipTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2B35C0);
  }
  return result;
}

void sub_1BAEBBE5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B35C8)
  {
    sub_1BAEBBED4();
    sub_1BA4A2870(&qword_1EF2B35F0, (uint64_t (*)(uint64_t))sub_1BAEBBED4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B35C8);
  }
}

uint64_t sub_1BAEBBED4()
{
  uint64_t result;

  result = qword_1EF2B35D0;
  if (!qword_1EF2B35D0)
  {
    sub_1BAEBBF54();
    sub_1BAEBBF98();
    sub_1BAEBBFDC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBBF54()
{
  unint64_t result;

  result = qword_1EF2B35D8;
  if (!qword_1EF2B35D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C64C0, &_s10CodingKeysON_45);
    atomic_store(result, (unint64_t *)&qword_1EF2B35D8);
  }
  return result;
}

unint64_t sub_1BAEBBF98()
{
  unint64_t result;

  result = qword_1EF2B35E0;
  if (!qword_1EF2B35E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6470, &_s10CodingKeysON_45);
    atomic_store(result, (unint64_t *)&qword_1EF2B35E0);
  }
  return result;
}

unint64_t sub_1BAEBBFDC()
{
  unint64_t result;

  result = qword_1EF2B35E8;
  if (!qword_1EF2B35E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6448, &_s10CodingKeysON_45);
    atomic_store(result, (unint64_t *)&qword_1EF2B35E8);
  }
  return result;
}

void sub_1BAEBC020(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B35F8)
  {
    sub_1BAEBC098();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3608, (uint64_t (*)(uint64_t))sub_1BAEBC098, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B35F8);
  }
}

void sub_1BAEBC098()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3600)
  {
    sub_1BAEBBED4();
    sub_1BA4A2870(&qword_1EF2B35F0, (uint64_t (*)(uint64_t))sub_1BAEBBED4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3600);
  }
}

unint64_t sub_1BAEBC110()
{
  unint64_t result;

  result = qword_1ED3A7898;
  if (!qword_1ED3A7898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6420, &_s10CodingTypeON_19);
    atomic_store(result, (unint64_t *)&qword_1ED3A7898);
  }
  return result;
}

uint64_t sub_1BAEBC154(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB959DE0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736B636F6C62 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BAEBC49C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F726765726F66 && a2 == 0xEA0000000000646ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEBC5F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7367028 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737469617274 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEBC724(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x68746150656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701734764 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6D756C6F63 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEBC8B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEBCA70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F68636E4178 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656572676564 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656469537466656CLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6469537468676972 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEBCC88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t KeyPath;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _BYTE v46[12];
  int v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  char v60;
  uint64_t v61;
  __int128 v62;
  char v63;
  unint64_t v64;

  sub_1BA6927D0();
  v57 = v2;
  v53 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v54 = &v46[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  *(_QWORD *)&v55 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v46[-v6];
  sub_1BAEEB7A4();
  v56 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v46[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEBD6C0();
  sub_1BA4A2870(&qword_1ED3AD968, (uint64_t (*)(uint64_t))sub_1BAEBD6C0, (uint64_t)&unk_1BB8FFC6C);
  v13 = (void *)v58;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  *(_QWORD *)&v58 = v7;
  v51 = v5;
  v52 = v9;
  v15 = v55;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = sub_1BB872874();
  v17 = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v19 = v56;
  v18 = v57;
  v20 = (uint64_t)v11;
  if ((v17 & 1) != 0)
  {
    v21 = v56;
    v22 = sub_1BB8740EC();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = (_BYTE *)(v22 + 48);
      while (*v24 != 1)
      {
        v24 += 24;
        if (!--v23)
          goto LABEL_7;
      }
      v27 = v20;
      v29 = *((_QWORD *)v24 - 2);
      v28 = *((_QWORD *)v24 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      *(_QWORD *)&v46[-32] = &_s10CodingKeysON_44;
      *(_QWORD *)&v46[-24] = sub_1BAEBD740();
      v44 = sub_1BAEBD784();
      v45 = sub_1BAEBD7C8();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v31 = sub_1BAE71220((uint64_t)&unk_1E7252DF8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v32 = v29;
      *(_QWORD *)(v32 + 8) = v28;
      *(_QWORD *)(v32 + 16) = v31;
      *(_OWORD *)(v32 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v29, v28, 1);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v27, v21);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v56 = sub_1BAE0F8F8(v20, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEB7A4);
  v26 = v25;
  v62 = xmmword_1BB8A1A10;
  v63 = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v33 = v59;
  v62 = xmmword_1BB8D2D60;
  v63 = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v49 = v59;
  v50 = v33;
  v48 = xmmword_1BB8D2D70;
  v62 = xmmword_1BB8D2D70;
  v63 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v59 = v48;
    v60 = 0;
    sub_1BAEB7D04();
    sub_1BB8740D4();
    v35 = v58;
    *(_QWORD *)&v48 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v35, v15);
  }
  else
  {
    *(_QWORD *)&v48 = MEMORY[0x1E0DEE9D8];
  }
  v58 = xmmword_1BB8D2D90;
  v62 = xmmword_1BB8D2D90;
  v63 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v59 = v58;
    v60 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v36 = v64;
  }
  else
  {
    v36 = 0x8000000000000000;
  }
  *(_QWORD *)&v58 = v36;
  v55 = xmmword_1BB8D2D80;
  v62 = xmmword_1BB8D2D80;
  v63 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v59 = v55;
    v60 = 0;
    sub_1BB8740D4();
    v37 = v19;
    LODWORD(v19) = v64;
  }
  else
  {
    v37 = v19;
    LODWORD(v19) = 1;
  }
  v62 = xmmword_1BB8D2DA0;
  v63 = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v38 = v59;
  LODWORD(v51) = BYTE8(v59);
  v55 = xmmword_1BB8D2DB0;
  v62 = xmmword_1BB8D2DB0;
  v63 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v47 = v19;
    v59 = v55;
    v60 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    v19 = (uint64_t)v54;
    sub_1BB8740D4();
    *(_QWORD *)&v55 = v38;
    v39 = v37;
    v40 = v18;
    v41 = v26;
    v42 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v19, v40);
    LOBYTE(v19) = v47;
  }
  else
  {
    *(_QWORD *)&v55 = v38;
    v39 = v37;
    v41 = v26;
    v42 = MEMORY[0x1E0DEE9E8];
  }
  type metadata accessor for FormatSponsoredBannerNodeStyle();
  v62 = xmmword_1BB8D2DD0;
  v63 = 0;
  sub_1BA4A2870(&qword_1ED3ADC58, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNodeStyle, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
  sub_1BB874068();
  v43 = v59;
  *(_QWORD *)&v59 = v50;
  v64 = v49;
  v61 = v58;
  *(_QWORD *)&v62 = v55;
  BYTE8(v62) = v51;
  type metadata accessor for FormatSponsoredBannerNode();
  swift_allocObject();
  KeyPath = FormatSponsoredBannerNode.init(identifier:size:resize:adjustments:visibility:isUserInteractionEnabled:accessibilityRole:selectors:style:)(v56, v41, (uint64_t *)&v59, (uint64_t *)&v64, v48, &v61, v19, (uint64_t *)&v62, v42, v43);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v20, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

void sub_1BAEBD5D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3610)
  {
    sub_1BAEBD648();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3620, (uint64_t (*)(uint64_t))sub_1BAEBD648, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3610);
  }
}

void sub_1BAEBD648()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3618)
  {
    sub_1BAEBD6C0();
    sub_1BA4A2870(&qword_1ED3AD968, (uint64_t (*)(uint64_t))sub_1BAEBD6C0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3618);
  }
}

uint64_t sub_1BAEBD6C0()
{
  uint64_t result;

  result = qword_1ED3AD970;
  if (!qword_1ED3AD970)
  {
    sub_1BAEBD740();
    sub_1BAEBD784();
    sub_1BAEBD7C8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBD740()
{
  unint64_t result;

  result = qword_1ED3ADAB0;
  if (!qword_1ED3ADAB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C63E8, &_s10CodingKeysON_44);
    atomic_store(result, (unint64_t *)&qword_1ED3ADAB0);
  }
  return result;
}

unint64_t sub_1BAEBD784()
{
  unint64_t result;

  result = qword_1ED3ADAA8;
  if (!qword_1ED3ADAA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6398, &_s10CodingKeysON_44);
    atomic_store(result, (unint64_t *)&qword_1ED3ADAA8);
  }
  return result;
}

unint64_t sub_1BAEBD7C8()
{
  unint64_t result;

  result = qword_1ED3ADAA0;
  if (!qword_1ED3ADAA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6370, &_s10CodingKeysON_44);
    atomic_store(result, (unint64_t *)&qword_1ED3ADAA0);
  }
  return result;
}

uint64_t sub_1BAEBD80C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1BAEBDC0C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char *v9;
  uint64_t KeyPath;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  __int128 v56;
  char v57;
  __int128 v58;
  char v59;

  sub_1BAEFBAC0(0, &qword_1ED3AD1B0, (void (*)(void))sub_1BAEEB5D8, (void (*)(void))sub_1BAEEB570);
  v53 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v47 - v4;
  sub_1BAEEB61C();
  v7 = v6;
  v54 = *((_QWORD *)v6 - 1);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  KeyPath = sub_1BAEBE320();
  sub_1BA4A2870(&qword_1ED3AD9C8, (uint64_t (*)(uint64_t))sub_1BAEBE320, (uint64_t)&unk_1BB8FFC6C);
  v11 = v55;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v12);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v50 = v3;
  v51 = v5;
  v13 = v53;
  v55 = v7;
  v14 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v15 = sub_1BB872874();
  LOBYTE(v14) = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v16 = v54;
  if ((v14 & 1) != 0)
  {
    v17 = v55;
    v18 = sub_1BB8740EC();
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      v20 = (_BYTE *)(v18 + 48);
      while (*v20 != 1)
      {
        v20 += 24;
        if (!--v19)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v20 - 2);
      v27 = *((_QWORD *)v20 - 1);
      swift_bridgeObjectRetain_n();
      v28 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v28);
      *(&v47 - 4) = (uint64_t)&_s10CodingKeysON_43;
      *(&v47 - 3) = sub_1BAEBE3A0();
      *(&v47 - 2) = sub_1BAEBE3E4();
      *(&v47 - 1) = sub_1BAEBE428();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v29 = sub_1BAE71220((uint64_t)&unk_1E72534F8);
      swift_release_n();
      sub_1BA98D1F0();
      v12 = (void *)swift_allocError();
      *(_QWORD *)v30 = v26;
      *(_QWORD *)(v30 + 8) = v27;
      *(_QWORD *)(v30 + 16) = v29;
      *(_OWORD *)(v30 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v27, 1);
      (*(void (**)(char *, void *))(v16 + 8))(v9, v17);
      a1 = v52;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v21 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEEB61C);
  v23 = v22;
  v58 = xmmword_1BB8A1A10;
  v59 = 0;
  v24 = v55;
  v25 = sub_1BB874098();
  v32 = v31;
  v47 = v21;
  v48 = v25;
  v49 = xmmword_1BB8D2D60;
  v58 = xmmword_1BB8D2D60;
  v59 = 0;
  v33 = sub_1BB8740F8();
  if ((v33 & 1) != 0)
  {
    v56 = v49;
    v57 = 0;
    sub_1BAEEB694();
    v34 = v51;
    sub_1BB8740D4();
    v35 = v34;
    v36 = v9;
    *(_QWORD *)&v49 = v32;
    v37 = sub_1BB86DD08();
    v38 = v13;
    v39 = v37;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v38);
  }
  else
  {
    v36 = v9;
    *(_QWORD *)&v49 = v32;
    v39 = MEMORY[0x1E0DEE9D8];
  }
  v58 = xmmword_1BB8D2D70;
  v59 = 0;
  sub_1BA62C9A0();
  v40 = v36;
  sub_1BB874068();
  v41 = v56;
  v58 = xmmword_1BB8D2D90;
  v59 = 0;
  sub_1BB874068();
  v53 = v39;
  v43 = v56;
  v58 = xmmword_1BB8D2D80;
  v59 = 0;
  v44 = sub_1BB874038();
  (*(void (**)(char *, void *))(v16 + 8))(v40, v24);
  type metadata accessor for FormatSponsoredBannerNodeStyle();
  KeyPath = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(KeyPath + 16) = v47;
  *(_QWORD *)(KeyPath + 24) = v23;
  v45 = v49;
  *(_QWORD *)(KeyPath + 32) = v48;
  *(_QWORD *)(KeyPath + 40) = v45;
  swift_beginAccess();
  v46 = (uint64_t)v52;
  *(_QWORD *)(KeyPath + 48) = v53;
  *(_QWORD *)(KeyPath + 56) = v41;
  *(_QWORD *)(KeyPath + 64) = v43;
  *(_BYTE *)(KeyPath + 72) = v44;
  __swift_destroy_boxed_opaque_existential_1(v46);
  return KeyPath;
}

void sub_1BAEBE230(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3628)
  {
    sub_1BAEBE2A8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3638, (uint64_t (*)(uint64_t))sub_1BAEBE2A8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3628);
  }
}

void sub_1BAEBE2A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3630)
  {
    sub_1BAEBE320();
    sub_1BA4A2870(&qword_1ED3AD9C8, (uint64_t (*)(uint64_t))sub_1BAEBE320, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3630);
  }
}

uint64_t sub_1BAEBE320()
{
  uint64_t result;

  result = qword_1ED3AD9D0;
  if (!qword_1ED3AD9D0)
  {
    sub_1BAEBE3A0();
    sub_1BAEBE3E4();
    sub_1BAEBE428();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBE3A0()
{
  unint64_t result;

  result = qword_1ED3ADC30;
  if (!qword_1ED3ADC30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6338, &_s10CodingKeysON_43);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC30);
  }
  return result;
}

unint64_t sub_1BAEBE3E4()
{
  unint64_t result;

  result = qword_1ED3ADC28;
  if (!qword_1ED3ADC28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C62E8, &_s10CodingKeysON_43);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC28);
  }
  return result;
}

unint64_t sub_1BAEBE428()
{
  unint64_t result;

  result = qword_1ED3ADC20;
  if (!qword_1ED3ADC20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C62C0, &_s10CodingKeysON_43);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC20);
  }
  return result;
}

void sub_1BAEBE46C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3640)
  {
    sub_1BAEBE4E4();
    sub_1BA4A2870(&qword_1EF2B3668, (uint64_t (*)(uint64_t))sub_1BAEBE4E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3640);
  }
}

uint64_t sub_1BAEBE4E4()
{
  uint64_t result;

  result = qword_1EF2B3648;
  if (!qword_1EF2B3648)
  {
    sub_1BAEBE564();
    sub_1BAEBE5A8();
    sub_1BAEBE5EC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBE564()
{
  unint64_t result;

  result = qword_1EF2B3650;
  if (!qword_1EF2B3650)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6288, &_s10CodingKeysON_42);
    atomic_store(result, (unint64_t *)&qword_1EF2B3650);
  }
  return result;
}

unint64_t sub_1BAEBE5A8()
{
  unint64_t result;

  result = qword_1EF2B3658;
  if (!qword_1EF2B3658)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6238, &_s10CodingKeysON_42);
    atomic_store(result, (unint64_t *)&qword_1EF2B3658);
  }
  return result;
}

unint64_t sub_1BAEBE5EC()
{
  unint64_t result;

  result = qword_1EF2B3660;
  if (!qword_1EF2B3660)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6210, &_s10CodingKeysON_42);
    atomic_store(result, (unint64_t *)&qword_1EF2B3660);
  }
  return result;
}

void sub_1BAEBE630(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3670)
  {
    sub_1BAEBE6A8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3680, (uint64_t (*)(uint64_t))sub_1BAEBE6A8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3670);
  }
}

void sub_1BAEBE6A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3678)
  {
    sub_1BAEBE4E4();
    sub_1BA4A2870(&qword_1EF2B3668, (uint64_t (*)(uint64_t))sub_1BAEBE4E4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3678);
  }
}

void sub_1BAEBE720()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE628)
  {
    sub_1BAEBE798();
    sub_1BA4A2870(&qword_1ED3AD998, (uint64_t (*)(uint64_t))sub_1BAEBE798, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE628);
  }
}

uint64_t sub_1BAEBE798()
{
  uint64_t result;

  result = qword_1ED3AD9A0;
  if (!qword_1ED3AD9A0)
  {
    sub_1BAEBE818();
    sub_1BAEBE85C();
    sub_1BAEBE8A0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBE818()
{
  unint64_t result;

  result = qword_1ED3ADB40;
  if (!qword_1ED3ADB40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C61D8, &_s10CodingKeysON_41);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB40);
  }
  return result;
}

unint64_t sub_1BAEBE85C()
{
  unint64_t result;

  result = qword_1ED3ADB38;
  if (!qword_1ED3ADB38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6188, &_s10CodingKeysON_41);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB38);
  }
  return result;
}

unint64_t sub_1BAEBE8A0()
{
  unint64_t result;

  result = qword_1ED3ADB30;
  if (!qword_1ED3ADB30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6160, &_s10CodingKeysON_41);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB30);
  }
  return result;
}

void sub_1BAEBE8E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3688)
  {
    sub_1BAEBE95C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3698, (uint64_t (*)(uint64_t))sub_1BAEBE95C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3688);
  }
}

void sub_1BAEBE95C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3690)
  {
    sub_1BAEBE798();
    sub_1BA4A2870(&qword_1ED3AD998, (uint64_t (*)(uint64_t))sub_1BAEBE798, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3690);
  }
}

unint64_t sub_1BAEBE9D4()
{
  unint64_t result;

  result = qword_1ED3A7450;
  if (!qword_1ED3A7450)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FC9D4, &_s5ColorO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3A7450);
  }
  return result;
}

unint64_t sub_1BAEBEA18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B36A8;
  if (!qword_1EF2B36A8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B36A0, (uint64_t (*)(void))sub_1BA9BD17C, (uint64_t)&type metadata for FormatTagBinding.Color, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B36A8);
  }
  return result;
}

unint64_t sub_1BAEBEA80()
{
  unint64_t result;

  result = qword_1EF2B36B0;
  if (!qword_1EF2B36B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB921AA8, &_s7CommandO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2B36B0);
  }
  return result;
}

unint64_t sub_1BAEBEAC4()
{
  unint64_t result;

  result = qword_1EF2B36C0;
  if (!qword_1EF2B36C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Command, &type metadata for FormatTagBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2B36C0);
  }
  return result;
}

unint64_t sub_1BAEBEB08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B36C8;
  if (!qword_1EF2B36C8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B36B8, (uint64_t (*)(void))sub_1BAEBEAC4, (uint64_t)&type metadata for FormatTagBinding.Command, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B36C8);
  }
  return result;
}

unint64_t sub_1BAEBEB70()
{
  unint64_t result;

  result = qword_1EF2B36D0;
  if (!qword_1EF2B36D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB943474, &_s8DateTimeO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B36D0);
  }
  return result;
}

unint64_t sub_1BAEBEBB4()
{
  unint64_t result;

  result = qword_1EF2B36D8;
  if (!qword_1EF2B36D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94B9DC, &_s5ImageO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B36D8);
  }
  return result;
}

unint64_t sub_1BAEBEBF8()
{
  unint64_t result;

  result = qword_1EF2B36E8;
  if (!qword_1EF2B36E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Image, &type metadata for FormatTagBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2B36E8);
  }
  return result;
}

unint64_t sub_1BAEBEC3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B36F0;
  if (!qword_1EF2B36F0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B36E0, (uint64_t (*)(void))sub_1BAEBEBF8, (uint64_t)&type metadata for FormatTagBinding.Image, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B36F0);
  }
  return result;
}

unint64_t sub_1BAEBECA4()
{
  unint64_t result;

  result = qword_1EF2B36F8;
  if (!qword_1EF2B36F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD978, &_s4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B36F8);
  }
  return result;
}

unint64_t sub_1BAEBECE8()
{
  unint64_t result;

  result = qword_1EF2B3708;
  if (!qword_1EF2B3708)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Text, &type metadata for FormatTagBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B3708);
  }
  return result;
}

unint64_t sub_1BAEBED2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B3710;
  if (!qword_1EF2B3710)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3700, (uint64_t (*)(void))sub_1BAEBECE8, (uint64_t)&type metadata for FormatTagBinding.Text, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B3710);
  }
  return result;
}

void sub_1BAEBED94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3718)
  {
    sub_1BAEBEE0C();
    sub_1BA4A2870(&qword_1EF2B3740, (uint64_t (*)(uint64_t))sub_1BAEBEE0C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3718);
  }
}

uint64_t sub_1BAEBEE0C()
{
  uint64_t result;

  result = qword_1EF2B3720;
  if (!qword_1EF2B3720)
  {
    sub_1BAEBEE8C();
    sub_1BAEBEED0();
    sub_1BAEBEF14();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBEE8C()
{
  unint64_t result;

  result = qword_1EF2B3728;
  if (!qword_1EF2B3728)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6128, &_s10CodingKeysON_40);
    atomic_store(result, (unint64_t *)&qword_1EF2B3728);
  }
  return result;
}

unint64_t sub_1BAEBEED0()
{
  unint64_t result;

  result = qword_1EF2B3730;
  if (!qword_1EF2B3730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C60D8, &_s10CodingKeysON_40);
    atomic_store(result, (unint64_t *)&qword_1EF2B3730);
  }
  return result;
}

unint64_t sub_1BAEBEF14()
{
  unint64_t result;

  result = qword_1EF2B3738;
  if (!qword_1EF2B3738)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C60B0, &_s10CodingKeysON_40);
    atomic_store(result, (unint64_t *)&qword_1EF2B3738);
  }
  return result;
}

void sub_1BAEBEF58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3748)
  {
    sub_1BAEBEFD0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3758, (uint64_t (*)(uint64_t))sub_1BAEBEFD0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3748);
  }
}

void sub_1BAEBEFD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3750)
  {
    sub_1BAEBEE0C();
    sub_1BA4A2870(&qword_1EF2B3740, (uint64_t (*)(uint64_t))sub_1BAEBEE0C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3750);
  }
}

void sub_1BAEBF048()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C00)
  {
    sub_1BAEBF0C0();
    sub_1BA4A2870(&qword_1ED3D10C0, (uint64_t (*)(uint64_t))sub_1BAEBF0C0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C00);
  }
}

uint64_t sub_1BAEBF0C0()
{
  uint64_t result;

  result = qword_1ED3D10C8;
  if (!qword_1ED3D10C8)
  {
    sub_1BAEBF140();
    sub_1BA5AD4C0();
    sub_1BAEBF184();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBF140()
{
  unint64_t result;

  result = qword_1ED3D0A50;
  if (!qword_1ED3D0A50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6078, &_s10CodingKeysON_39);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A50);
  }
  return result;
}

unint64_t sub_1BAEBF184()
{
  unint64_t result;

  result = qword_1ED3D0A48;
  if (!qword_1ED3D0A48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C6000, &_s10CodingKeysON_39);
    atomic_store(result, (unint64_t *)&qword_1ED3D0A48);
  }
  return result;
}

void sub_1BAEBF1C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF88)
  {
    sub_1BAEBF240();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AECC0, (uint64_t (*)(uint64_t))sub_1BAEBF240, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF88);
  }
}

void sub_1BAEBF240()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AECC8)
  {
    sub_1BAEBF0C0();
    sub_1BA4A2870(&qword_1ED3D10C0, (uint64_t (*)(uint64_t))sub_1BAEBF0C0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AECC8);
  }
}

void sub_1BAEBF2B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D20)
  {
    sub_1BAEBF330();
    sub_1BA4A2870(&qword_1ED3D1300, (uint64_t (*)(uint64_t))sub_1BAEBF330, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D20);
  }
}

uint64_t sub_1BAEBF330()
{
  uint64_t result;

  result = qword_1ED3D1308;
  if (!qword_1ED3D1308)
  {
    sub_1BAEBF3B0();
    sub_1BA597748();
    sub_1BAEBF3F4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEBF3B0()
{
  unint64_t result;

  result = qword_1ED3D17E8;
  if (!qword_1ED3D17E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5FC8, &_s10CodingKeysON_38);
    atomic_store(result, (unint64_t *)&qword_1ED3D17E8);
  }
  return result;
}

unint64_t sub_1BAEBF3F4()
{
  unint64_t result;

  result = qword_1ED3D17E0;
  if (!qword_1ED3D17E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5F50, &_s10CodingKeysON_38);
    atomic_store(result, (unint64_t *)&qword_1ED3D17E0);
  }
  return result;
}

void sub_1BAEBF438(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE100)
  {
    sub_1BAEBF4B0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEFB0, (uint64_t (*)(uint64_t))sub_1BAEBF4B0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE100);
  }
}

void sub_1BAEBF4B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEFB8)
  {
    sub_1BAEBF330();
    sub_1BA4A2870(&qword_1ED3D1300, (uint64_t (*)(uint64_t))sub_1BAEBF330, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEFB8);
  }
}

uint64_t sub_1BAEBF528(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F4364656C6C6966 && a2 == 0xEB00000000726F6CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64656C6C69666E75 && a2 == 0xED0000726F6C6F43 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1BAEBF840(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F4364656C6C6966 && a2 == 0xEB00000000726F6CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C6C69666E75 && a2 == 0xED0000726F6C6F43 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEBFA80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64656C6C6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C6C69666E75 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEBFBBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656449746E657665 && a2 == 0xEF7265696669746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEBFD14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746174536D6F7266 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746174536F74 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEBFED4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEBFFC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x536C616974696E69 && a2 == 0xEC00000065746174;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65706F6373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BAEC0114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADDF8)
  {
    sub_1BAEC018C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE990, (uint64_t (*)(uint64_t))sub_1BAEC018C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADDF8);
  }
}

void sub_1BAEC018C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE998)
  {
    sub_1BAEC0204();
    sub_1BA4A2870(&qword_1ED3D0E30, (uint64_t (*)(uint64_t))sub_1BAEC0204, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE998);
  }
}

uint64_t sub_1BAEC0204()
{
  uint64_t result;

  result = qword_1ED3D0E38;
  if (!qword_1ED3D0E38)
  {
    sub_1BAEC0284();
    sub_1BA82E3EC();
    sub_1BAEC02C8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC0284()
{
  unint64_t result;

  result = qword_1ED3D0780;
  if (!qword_1ED3D0780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5EF0, &_s10CodingKeysON_37);
    atomic_store(result, (unint64_t *)&qword_1ED3D0780);
  }
  return result;
}

unint64_t sub_1BAEC02C8()
{
  unint64_t result;

  result = qword_1ED3D0778;
  if (!qword_1ED3D0778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5E78, &_s10CodingKeysON_37);
    atomic_store(result, (unint64_t *)&qword_1ED3D0778);
  }
  return result;
}

unint64_t sub_1BAEC030C()
{
  unint64_t result;

  result = qword_1ED3C68A8;
  if (!qword_1ED3C68A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5E50, &_s10CodingTypeON_17);
    atomic_store(result, (unint64_t *)&qword_1ED3C68A8);
  }
  return result;
}

void sub_1BAEC0350()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E00)
  {
    sub_1BAEC03C8();
    sub_1BA4A2870(&qword_1ED3D14C0, (uint64_t (*)(uint64_t))sub_1BAEC03C8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E00);
  }
}

uint64_t sub_1BAEC03C8()
{
  uint64_t result;

  result = qword_1ED3D14C8;
  if (!qword_1ED3D14C8)
  {
    sub_1BAEC0448();
    sub_1BA5EE610();
    sub_1BAEC048C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC0448()
{
  unint64_t result;

  result = qword_1ED3D01D0;
  if (!qword_1ED3D01D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5E18, &_s14descr1E72CC2B1O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D01D0);
  }
  return result;
}

unint64_t sub_1BAEC048C()
{
  unint64_t result;

  result = qword_1ED3D01C8;
  if (!qword_1ED3D01C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5DA0, &_s14descr1E72CC2B1O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D01C8);
  }
  return result;
}

void sub_1BAEC04D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE230)
  {
    sub_1BAEC0548();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF208, (uint64_t (*)(uint64_t))sub_1BAEC0548, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE230);
  }
}

void sub_1BAEC0548()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF210)
  {
    sub_1BAEC03C8();
    sub_1BA4A2870(&qword_1ED3D14C0, (uint64_t (*)(uint64_t))sub_1BAEC03C8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF210);
  }
}

void sub_1BAEC05C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19D0)
  {
    sub_1BAEC0638();
    sub_1BA4A2870(&qword_1ED3D0C60, (uint64_t (*)(uint64_t))sub_1BAEC0638, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19D0);
  }
}

uint64_t sub_1BAEC0638()
{
  uint64_t result;

  result = qword_1ED3D0C68;
  if (!qword_1ED3D0C68)
  {
    sub_1BAEC06B8();
    sub_1BA53D7E4();
    sub_1BAEC06FC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC06B8()
{
  unint64_t result;

  result = qword_1ED3D0560;
  if (!qword_1ED3D0560)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5D68, &_s10CodingKeysON_36);
    atomic_store(result, (unint64_t *)&qword_1ED3D0560);
  }
  return result;
}

unint64_t sub_1BAEC06FC()
{
  unint64_t result;

  result = qword_1ED3D0558;
  if (!qword_1ED3D0558)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5CF0, &_s10CodingKeysON_36);
    atomic_store(result, (unint64_t *)&qword_1ED3D0558);
  }
  return result;
}

void sub_1BAEC0740(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCE8)
  {
    sub_1BAEC07B8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE778, (uint64_t (*)(uint64_t))sub_1BAEC07B8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCE8);
  }
}

void sub_1BAEC07B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE780)
  {
    sub_1BAEC0638();
    sub_1BA4A2870(&qword_1ED3D0C60, (uint64_t (*)(uint64_t))sub_1BAEC0638, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE780);
  }
}

uint64_t sub_1BAEC0830(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB971910 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736574617473 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_1BAEC0CEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73656C797473 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7365707974 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1BAEC0FC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEC1170(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73656C797473 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7365707974 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_1BAEC1628(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BB959E00 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73656C797473 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x736B636F6C62 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

void sub_1BAEC1A84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE108)
  {
    sub_1BAEC1AFC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEFC0, (uint64_t (*)(uint64_t))sub_1BAEC1AFC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE108);
  }
}

void sub_1BAEC1AFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEFC8)
  {
    sub_1BAEC1B74();
    sub_1BA4A2870(&qword_1ED3D1310, (uint64_t (*)(uint64_t))sub_1BAEC1B74, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEFC8);
  }
}

uint64_t sub_1BAEC1B74()
{
  uint64_t result;

  result = qword_1ED3D1318;
  if (!qword_1ED3D1318)
  {
    sub_1BAEC1BF4();
    sub_1BA4FACD8();
    sub_1BAEC1C38();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC1BF4()
{
  unint64_t result;

  result = qword_1ED3D1800;
  if (!qword_1ED3D1800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5C40, &_s10CodingKeysON_35);
    atomic_store(result, (unint64_t *)&qword_1ED3D1800);
  }
  return result;
}

unint64_t sub_1BAEC1C38()
{
  unint64_t result;

  result = qword_1ED3D17F8;
  if (!qword_1ED3D17F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5BC8, &_s10CodingKeysON_35);
    atomic_store(result, (unint64_t *)&qword_1ED3D17F8);
  }
  return result;
}

void sub_1BAEC1C7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D30)
  {
    sub_1BAEC1CF4();
    sub_1BA4A2870(&qword_1ED3D1320, (uint64_t (*)(uint64_t))sub_1BAEC1CF4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D30);
  }
}

uint64_t sub_1BAEC1CF4()
{
  uint64_t result;

  result = qword_1ED3D1328;
  if (!qword_1ED3D1328)
  {
    sub_1BAEC1D74();
    sub_1BA82309C();
    sub_1BAEC1DB8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC1D74()
{
  unint64_t result;

  result = qword_1ED3D1810;
  if (!qword_1ED3D1810)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5B90, &_s10CodingKeysON_34);
    atomic_store(result, (unint64_t *)&qword_1ED3D1810);
  }
  return result;
}

unint64_t sub_1BAEC1DB8()
{
  unint64_t result;

  result = qword_1ED3D1808;
  if (!qword_1ED3D1808)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5B18, &_s10CodingKeysON_34);
    atomic_store(result, (unint64_t *)&qword_1ED3D1808);
  }
  return result;
}

void sub_1BAEC1DFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE110)
  {
    sub_1BAEC1E74();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEFD0, (uint64_t (*)(uint64_t))sub_1BAEC1E74, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE110);
  }
}

void sub_1BAEC1E74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEFD8)
  {
    sub_1BAEC1CF4();
    sub_1BA4A2870(&qword_1ED3D1320, (uint64_t (*)(uint64_t))sub_1BAEC1CF4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEFD8);
  }
}

uint64_t sub_1BAEC1EEC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x426F547370696C63 && a2 == 0xED000073646E756FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7235952 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6162726562627572 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1BAEC21EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x426F547370696C63 && a2 == 0xED000073646E756FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7235952 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6162726562627572 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

void sub_1BAEC2418(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCF0)
  {
    sub_1BAEC2490();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE788, (uint64_t (*)(uint64_t))sub_1BAEC2490, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCF0);
  }
}

void sub_1BAEC2490()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE790)
  {
    sub_1BAEC2508();
    sub_1BA4A2870(&qword_1ED3D0C70, (uint64_t (*)(uint64_t))sub_1BAEC2508, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE790);
  }
}

uint64_t sub_1BAEC2508()
{
  uint64_t result;

  result = qword_1ED3D0C78;
  if (!qword_1ED3D0C78)
  {
    sub_1BAEC2588();
    sub_1BA646E28();
    sub_1BAEC25CC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC2588()
{
  unint64_t result;

  result = qword_1ED3D0570;
  if (!qword_1ED3D0570)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5980, &_s10CodingKeysON_33);
    atomic_store(result, (unint64_t *)&qword_1ED3D0570);
  }
  return result;
}

unint64_t sub_1BAEC25CC()
{
  unint64_t result;

  result = qword_1ED3D0568;
  if (!qword_1ED3D0568)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5908, &_s10CodingKeysON_33);
    atomic_store(result, (unint64_t *)&qword_1ED3D0568);
  }
  return result;
}

uint64_t sub_1BAEC2610(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365736163 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746C7561666564 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73776F726874 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x776F726874 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void sub_1BAEC2874(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE78)
  {
    sub_1BAEC28EC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEAA0, (uint64_t (*)(uint64_t))sub_1BAEC28EC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE78);
  }
}

void sub_1BAEC28EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEAA8)
  {
    sub_1BAEC2964();
    sub_1BA4A2870(&qword_1ED3D0F30, (uint64_t (*)(uint64_t))sub_1BAEC2964, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEAA8);
  }
}

uint64_t sub_1BAEC2964()
{
  uint64_t result;

  result = qword_1ED3D0F38;
  if (!qword_1ED3D0F38)
  {
    sub_1BAEC29E4();
    sub_1BA63C800();
    sub_1BAEC2A28();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC29E4()
{
  unint64_t result;

  result = qword_1ED3D08A0;
  if (!qword_1ED3D08A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C58D0, &_s10CodingKeysON_32);
    atomic_store(result, (unint64_t *)&qword_1ED3D08A0);
  }
  return result;
}

unint64_t sub_1BAEC2A28()
{
  unint64_t result;

  result = qword_1ED3D0898;
  if (!qword_1ED3D0898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5858, &_s10CodingKeysON_32);
    atomic_store(result, (unint64_t *)&qword_1ED3D0898);
  }
  return result;
}

unint64_t sub_1BAEC2A6C()
{
  unint64_t result;

  result = qword_1ED3A62E8;
  if (!qword_1ED3A62E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Scale, &type metadata for FormatSymbolConfig.Scale);
    atomic_store(result, (unint64_t *)&qword_1ED3A62E8);
  }
  return result;
}

unint64_t sub_1BAEC2AB0()
{
  unint64_t result;

  result = qword_1ED3C41D0;
  if (!qword_1ED3C41D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Weight, &type metadata for FormatSymbolConfig.Weight);
    atomic_store(result, (unint64_t *)&qword_1ED3C41D0);
  }
  return result;
}

unint64_t sub_1BAEC2AF4()
{
  unint64_t result;

  result = qword_1EF2B3760;
  if (!qword_1EF2B3760)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.TextStyle, &type metadata for FormatSymbolConfig.TextStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2B3760);
  }
  return result;
}

unint64_t sub_1BAEC2B38()
{
  unint64_t result;

  result = qword_1EF2B3768;
  if (!qword_1EF2B3768)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Font, &type metadata for FormatSymbolConfig.Font);
    atomic_store(result, (unint64_t *)&qword_1EF2B3768);
  }
  return result;
}

void sub_1BAEC2B7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3770)
  {
    sub_1BAEC2BF4();
    sub_1BA4A2870(&qword_1EF2B3798, (uint64_t (*)(uint64_t))sub_1BAEC2BF4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3770);
  }
}

uint64_t sub_1BAEC2BF4()
{
  uint64_t result;

  result = qword_1EF2B3778;
  if (!qword_1EF2B3778)
  {
    sub_1BAEC2C74();
    sub_1BAEC2CB8();
    sub_1BAEC2CFC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC2C74()
{
  unint64_t result;

  result = qword_1EF2B3780;
  if (!qword_1EF2B3780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5698, &_s10CodingKeysON_31);
    atomic_store(result, (unint64_t *)&qword_1EF2B3780);
  }
  return result;
}

unint64_t sub_1BAEC2CB8()
{
  unint64_t result;

  result = qword_1EF2B3788;
  if (!qword_1EF2B3788)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5648, &_s10CodingKeysON_31);
    atomic_store(result, (unint64_t *)&qword_1EF2B3788);
  }
  return result;
}

unint64_t sub_1BAEC2CFC()
{
  unint64_t result;

  result = qword_1EF2B3790;
  if (!qword_1EF2B3790)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5620, &_s10CodingKeysON_31);
    atomic_store(result, (unint64_t *)&qword_1EF2B3790);
  }
  return result;
}

void sub_1BAEC2D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B37A0)
  {
    sub_1BAEC2DB8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B37B0, (uint64_t (*)(uint64_t))sub_1BAEC2DB8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B37A0);
  }
}

void sub_1BAEC2DB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B37A8)
  {
    sub_1BAEC2BF4();
    sub_1BA4A2870(&qword_1EF2B3798, (uint64_t (*)(uint64_t))sub_1BAEC2BF4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B37A8);
  }
}

void sub_1BAEC2E30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE590)
  {
    sub_1BAEC2EA8();
    sub_1BA4A2870(&qword_1ED3AD858, (uint64_t (*)(uint64_t))sub_1BAEC2EA8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE590);
  }
}

uint64_t sub_1BAEC2EA8()
{
  uint64_t result;

  result = qword_1ED3AD860;
  if (!qword_1ED3AD860)
  {
    sub_1BAEC2F28();
    sub_1BAEC2F6C();
    sub_1BAEC2FB0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC2F28()
{
  unint64_t result;

  result = qword_1ED3AD5C8;
  if (!qword_1ED3AD5C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C55E8, &_s10CodingKeysON_30);
    atomic_store(result, (unint64_t *)&qword_1ED3AD5C8);
  }
  return result;
}

unint64_t sub_1BAEC2F6C()
{
  unint64_t result;

  result = qword_1ED3A62D0;
  if (!qword_1ED3A62D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5598, &_s10CodingKeysON_30);
    atomic_store(result, (unint64_t *)&qword_1ED3A62D0);
  }
  return result;
}

unint64_t sub_1BAEC2FB0()
{
  unint64_t result;

  result = qword_1ED3AD5C0;
  if (!qword_1ED3AD5C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5570, &_s10CodingKeysON_30);
    atomic_store(result, (unint64_t *)&qword_1ED3AD5C0);
  }
  return result;
}

void sub_1BAEC2FF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD78)
  {
    sub_1BAEC306C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE890, (uint64_t (*)(uint64_t))sub_1BAEC306C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD78);
  }
}

void sub_1BAEC306C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE898)
  {
    sub_1BAEC2EA8();
    sub_1BA4A2870(&qword_1ED3AD858, (uint64_t (*)(uint64_t))sub_1BAEC2EA8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE898);
  }
}

void sub_1BAEC30E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A48)
  {
    sub_1BAEC315C();
    sub_1BA4A2870(&qword_1ED3D0D50, (uint64_t (*)(uint64_t))sub_1BAEC315C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A48);
  }
}

uint64_t sub_1BAEC315C()
{
  uint64_t result;

  result = qword_1ED3D0D58;
  if (!qword_1ED3D0D58)
  {
    sub_1BAEC31DC();
    sub_1BA598EF8();
    sub_1BAEC3220();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC31DC()
{
  unint64_t result;

  result = qword_1ED3D06A0;
  if (!qword_1ED3D06A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5538, &_s10CodingKeysON_29);
    atomic_store(result, (unint64_t *)&qword_1ED3D06A0);
  }
  return result;
}

unint64_t sub_1BAEC3220()
{
  unint64_t result;

  result = qword_1ED3D0698;
  if (!qword_1ED3D0698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C54C0, &_s10CodingKeysON_29);
    atomic_store(result, (unint64_t *)&qword_1ED3D0698);
  }
  return result;
}

void sub_1BAEC3264(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD70)
  {
    sub_1BAEC32DC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE880, (uint64_t (*)(uint64_t))sub_1BAEC32DC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD70);
  }
}

void sub_1BAEC32DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE888)
  {
    sub_1BAEC315C();
    sub_1BA4A2870(&qword_1ED3D0D50, (uint64_t (*)(uint64_t))sub_1BAEC315C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE888);
  }
}

void sub_1BAEC3354()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B37B8)
  {
    sub_1BAEC33CC();
    sub_1BA4A2870(&qword_1EF2B37E0, (uint64_t (*)(uint64_t))sub_1BAEC33CC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B37B8);
  }
}

uint64_t sub_1BAEC33CC()
{
  uint64_t result;

  result = qword_1EF2B37C0;
  if (!qword_1EF2B37C0)
  {
    sub_1BAEC344C();
    sub_1BAEC3490();
    sub_1BAEC34D4();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC344C()
{
  unint64_t result;

  result = qword_1EF2B37C8;
  if (!qword_1EF2B37C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5488, &_s10CodingKeysON_28);
    atomic_store(result, (unint64_t *)&qword_1EF2B37C8);
  }
  return result;
}

unint64_t sub_1BAEC3490()
{
  unint64_t result;

  result = qword_1EF2B37D0;
  if (!qword_1EF2B37D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5438, &_s10CodingKeysON_28);
    atomic_store(result, (unint64_t *)&qword_1EF2B37D0);
  }
  return result;
}

unint64_t sub_1BAEC34D4()
{
  unint64_t result;

  result = qword_1EF2B37D8;
  if (!qword_1EF2B37D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5410, &_s10CodingKeysON_28);
    atomic_store(result, (unint64_t *)&qword_1EF2B37D8);
  }
  return result;
}

void sub_1BAEC3518(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B37E8)
  {
    sub_1BAEC3590();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B37F8, (uint64_t (*)(uint64_t))sub_1BAEC3590, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B37E8);
  }
}

void sub_1BAEC3590()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B37F0)
  {
    sub_1BAEC33CC();
    sub_1BA4A2870(&qword_1EF2B37E0, (uint64_t (*)(uint64_t))sub_1BAEC33CC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B37F0);
  }
}

void sub_1BAEC3608()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3800)
  {
    sub_1BAEC3680();
    sub_1BA4A2870(&qword_1EF2B3820, (uint64_t (*)(uint64_t))sub_1BAEC3680, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3800);
  }
}

uint64_t sub_1BAEC3680()
{
  uint64_t result;

  result = qword_1EF2B3808;
  if (!qword_1EF2B3808)
  {
    sub_1BAEC3700();
    sub_1BAEC3744();
    sub_1BAEC3788();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC3700()
{
  unint64_t result;

  result = qword_1EF2B3810;
  if (!qword_1EF2B3810)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C53D8, &_s10CodingKeysON_27);
    atomic_store(result, (unint64_t *)&qword_1EF2B3810);
  }
  return result;
}

unint64_t sub_1BAEC3744()
{
  unint64_t result;

  result = qword_1ED3C41B8;
  if (!qword_1ED3C41B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5388, &_s10CodingKeysON_27);
    atomic_store(result, (unint64_t *)&qword_1ED3C41B8);
  }
  return result;
}

unint64_t sub_1BAEC3788()
{
  unint64_t result;

  result = qword_1EF2B3818;
  if (!qword_1EF2B3818)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5360, &_s10CodingKeysON_27);
    atomic_store(result, (unint64_t *)&qword_1EF2B3818);
  }
  return result;
}

void sub_1BAEC37CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3828)
  {
    sub_1BAEC3844();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3838, (uint64_t (*)(uint64_t))sub_1BAEC3844, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3828);
  }
}

void sub_1BAEC3844()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3830)
  {
    sub_1BAEC3680();
    sub_1BA4A2870(&qword_1EF2B3820, (uint64_t (*)(uint64_t))sub_1BAEC3680, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3830);
  }
}

void sub_1BAEC38BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19E0)
  {
    sub_1BAEC3934();
    sub_1BA4A2870(&qword_1ED3D0C80, (uint64_t (*)(uint64_t))sub_1BAEC3934, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19E0);
  }
}

uint64_t sub_1BAEC3934()
{
  uint64_t result;

  result = qword_1ED3D0C88;
  if (!qword_1ED3D0C88)
  {
    sub_1BAEC39B4();
    sub_1BA6101B8();
    sub_1BAEC39F8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC39B4()
{
  unint64_t result;

  result = qword_1ED3D0580;
  if (!qword_1ED3D0580)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5328, &_s10CodingKeysON_26);
    atomic_store(result, (unint64_t *)&qword_1ED3D0580);
  }
  return result;
}

unint64_t sub_1BAEC39F8()
{
  unint64_t result;

  result = qword_1ED3D0578;
  if (!qword_1ED3D0578)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C52B0, &_s10CodingKeysON_26);
    atomic_store(result, (unint64_t *)&qword_1ED3D0578);
  }
  return result;
}

void sub_1BAEC3A3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADCF8)
  {
    sub_1BAEC3AB4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE798, (uint64_t (*)(uint64_t))sub_1BAEC3AB4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADCF8);
  }
}

void sub_1BAEC3AB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE7A0)
  {
    sub_1BAEC3934();
    sub_1BA4A2870(&qword_1ED3D0C80, (uint64_t (*)(uint64_t))sub_1BAEC3934, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE7A0);
  }
}

unint64_t sub_1BAEC3B2C()
{
  unint64_t result;

  result = qword_1ED39E260;
  if (!qword_1ED39E260)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagMoreActions, &type metadata for FormatTagMoreActions);
    atomic_store(result, (unint64_t *)&qword_1ED39E260);
  }
  return result;
}

unint64_t sub_1BAEC3B70()
{
  unint64_t result;

  result = qword_1ED3D2AD8;
  if (!qword_1ED3D2AD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5260, &_s10CodingTypeON_11);
    atomic_store(result, (unint64_t *)&qword_1ED3D2AD8);
  }
  return result;
}

unint64_t sub_1BAEC3BB4()
{
  unint64_t result;

  result = qword_1ED3D2C20;
  if (!qword_1ED3D2C20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5238, &_s10CodingTypeON_10);
    atomic_store(result, (unint64_t *)&qword_1ED3D2C20);
  }
  return result;
}

void sub_1BAEC3BF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A50)
  {
    sub_1BAEC3C70();
    sub_1BA4A2870(&qword_1ED3D0D60, (uint64_t (*)(uint64_t))sub_1BAEC3C70, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A50);
  }
}

uint64_t sub_1BAEC3C70()
{
  uint64_t result;

  result = qword_1ED3D0D68;
  if (!qword_1ED3D0D68)
  {
    sub_1BAEC3CF0();
    sub_1BA5050A0();
    sub_1BAEC3D34();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC3CF0()
{
  unint64_t result;

  result = qword_1ED3D06B0;
  if (!qword_1ED3D06B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5200, &_s10CodingKeysON_25);
    atomic_store(result, (unint64_t *)&qword_1ED3D06B0);
  }
  return result;
}

unint64_t sub_1BAEC3D34()
{
  unint64_t result;

  result = qword_1ED3D06A8;
  if (!qword_1ED3D06A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5188, &_s10CodingKeysON_25);
    atomic_store(result, (unint64_t *)&qword_1ED3D06A8);
  }
  return result;
}

unint64_t sub_1BAEC3D78()
{
  unint64_t result;

  result = qword_1ED3BFA70;
  if (!qword_1ED3BFA70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagIconPreferredSource, &type metadata for FormatTagIconPreferredSource);
    atomic_store(result, (unint64_t *)&qword_1ED3BFA70);
  }
  return result;
}

void sub_1BAEC3DBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD80)
  {
    sub_1BAEC3E34();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE8A0, (uint64_t (*)(uint64_t))sub_1BAEC3E34, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD80);
  }
}

void sub_1BAEC3E34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE8A8)
  {
    sub_1BAEC3C70();
    sub_1BA4A2870(&qword_1ED3D0D60, (uint64_t (*)(uint64_t))sub_1BAEC3C70, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE8A8);
  }
}

void sub_1BAEC3EAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A10)
  {
    sub_1BAEC3F24();
    sub_1BA4A2870(&qword_1ED3D0CE0, (uint64_t (*)(uint64_t))sub_1BAEC3F24, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A10);
  }
}

uint64_t sub_1BAEC3F24()
{
  uint64_t result;

  result = qword_1ED3D0CE8;
  if (!qword_1ED3D0CE8)
  {
    sub_1BAEC3FA4();
    sub_1BA544AFC();
    sub_1BAEC3FE8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC3FA4()
{
  unint64_t result;

  result = qword_1ED3D05F0;
  if (!qword_1ED3D05F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5150, &_s10CodingKeysON_24);
    atomic_store(result, (unint64_t *)&qword_1ED3D05F0);
  }
  return result;
}

unint64_t sub_1BAEC3FE8()
{
  unint64_t result;

  result = qword_1ED3D05E8;
  if (!qword_1ED3D05E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C50D8, &_s10CodingKeysON_24);
    atomic_store(result, (unint64_t *)&qword_1ED3D05E8);
  }
  return result;
}

void sub_1BAEC402C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD38)
  {
    sub_1BAEC40A4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE810, (uint64_t (*)(uint64_t))sub_1BAEC40A4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD38);
  }
}

void sub_1BAEC40A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE818)
  {
    sub_1BAEC3F24();
    sub_1BA4A2870(&qword_1ED3D0CE0, (uint64_t (*)(uint64_t))sub_1BAEC3F24, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE818);
  }
}

void sub_1BAEC411C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE680)
  {
    sub_1BAEC4194();
    sub_1BA4A2870(&qword_1ED3ADA48, (uint64_t (*)(uint64_t))sub_1BAEC4194, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE680);
  }
}

uint64_t sub_1BAEC4194()
{
  uint64_t result;

  result = qword_1ED3ADA50;
  if (!qword_1ED3ADA50)
  {
    sub_1BAEC4214();
    sub_1BAEC4258();
    sub_1BAEC429C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC4214()
{
  unint64_t result;

  result = qword_1ED3AD288;
  if (!qword_1ED3AD288)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C50A0, &_s10CodingKeysON_23);
    atomic_store(result, (unint64_t *)&qword_1ED3AD288);
  }
  return result;
}

unint64_t sub_1BAEC4258()
{
  unint64_t result;

  result = qword_1ED3A42D0;
  if (!qword_1ED3A42D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5050, &_s10CodingKeysON_23);
    atomic_store(result, (unint64_t *)&qword_1ED3A42D0);
  }
  return result;
}

unint64_t sub_1BAEC429C()
{
  unint64_t result;

  result = qword_1ED3AD280;
  if (!qword_1ED3AD280)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C5028, &_s10CodingKeysON_23);
    atomic_store(result, (unint64_t *)&qword_1ED3AD280);
  }
  return result;
}

void sub_1BAEC42E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE308)
  {
    sub_1BAEC4358();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF3B0, (uint64_t (*)(uint64_t))sub_1BAEC4358, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE308);
  }
}

void sub_1BAEC4358()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF3B8)
  {
    sub_1BAEC4194();
    sub_1BA4A2870(&qword_1ED3ADA48, (uint64_t (*)(uint64_t))sub_1BAEC4194, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF3B8);
  }
}

void sub_1BAEC43D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D98)
  {
    sub_1BAEC4448();
    sub_1BA4A2870(&qword_1ED3D13F0, (uint64_t (*)(uint64_t))sub_1BAEC4448, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D98);
  }
}

uint64_t sub_1BAEC4448()
{
  uint64_t result;

  result = qword_1ED3D13F8;
  if (!qword_1ED3D13F8)
  {
    sub_1BAEC44C8();
    sub_1BA5415BC();
    sub_1BAEC450C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC44C8()
{
  unint64_t result;

  result = qword_1ED3D18F8;
  if (!qword_1ED3D18F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4FF0, &_s10CodingKeysON_22);
    atomic_store(result, (unint64_t *)&qword_1ED3D18F8);
  }
  return result;
}

unint64_t sub_1BAEC450C()
{
  unint64_t result;

  result = qword_1ED3D18F0;
  if (!qword_1ED3D18F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4F78, &_s10CodingKeysON_22);
    atomic_store(result, (unint64_t *)&qword_1ED3D18F0);
  }
  return result;
}

void sub_1BAEC4550(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1B0)
  {
    sub_1BAEC45C8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF108, (uint64_t (*)(uint64_t))sub_1BAEC45C8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1B0);
  }
}

void sub_1BAEC45C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF110)
  {
    sub_1BAEC4448();
    sub_1BA4A2870(&qword_1ED3D13F0, (uint64_t (*)(uint64_t))sub_1BAEC4448, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF110);
  }
}

unint64_t sub_1BAEC4640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A2A98;
  if (!qword_1ED3A2A98)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A0ED0, (uint64_t (*)(void))sub_1BA830FA0, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A98);
  }
  return result;
}

uint64_t sub_1BAEC46A8()
{
  return objectdestroy_189Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

unint64_t sub_1BAEC46B4()
{
  unint64_t result;

  result = qword_1EF2B3840;
  if (!qword_1EF2B3840)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeDateTimeFormat, &type metadata for FormatTextNodeDateTimeFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B3840);
  }
  return result;
}

uint64_t sub_1BAEC46F8()
{
  uint64_t v0;

  sub_1BA6F5D74(*(_QWORD *)(v0 + 16));
  if ((unint64_t)(*(_QWORD *)(v0 + 40) - 1) >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1BAEC4738()
{
  uint64_t v0;

  sub_1BA93DB08(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroy_198Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAEC4794()
{
  uint64_t v0;

  swift_release();
  sub_1BA69C828(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_1BAEC47C8()
{
  return objectdestroy_189Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_189Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject();
}

_QWORD *sub_1BAEC4810(_QWORD *a1, void (*a2)(_QWORD), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = a1[6];
  a2(*a1);
  a3(v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1BAEC487C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  swift_retain();
  sub_1BA69C808(v2, v3, v4);
  return a1;
}

uint64_t sub_1BAEC48C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  swift_release();
  sub_1BA69C828(v2, v3, v4);
  return a1;
}

unint64_t sub_1BAEC4914()
{
  unint64_t result;

  result = qword_1EF2B3850;
  if (!qword_1EF2B3850)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.LogicalOperator, &type metadata for FormatTextNodeAlternativeLogic.LogicalOperator);
    atomic_store(result, (unint64_t *)&qword_1EF2B3850);
  }
  return result;
}

uint64_t objectdestroy_357Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BAEC4990()
{
  unint64_t result;

  result = qword_1EF2B3858;
  if (!qword_1EF2B3858)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.AlternativeLogic, &type metadata for FormatTextNodeAlternativeLogic.AlternativeLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2B3858);
  }
  return result;
}

uint64_t sub_1BAEC49D4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BAEC4A04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3860)
  {
    sub_1BAEC4A7C();
    sub_1BA4A2870(&qword_1EF2B3888, (uint64_t (*)(uint64_t))sub_1BAEC4A7C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3860);
  }
}

uint64_t sub_1BAEC4A7C()
{
  uint64_t result;

  result = qword_1EF2B3868;
  if (!qword_1EF2B3868)
  {
    sub_1BAEC4AFC();
    sub_1BAEC4B40();
    sub_1BAEC4B84();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC4AFC()
{
  unint64_t result;

  result = qword_1EF2B3870;
  if (!qword_1EF2B3870)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4EF0, &_s10CodingKeysON_21);
    atomic_store(result, (unint64_t *)&qword_1EF2B3870);
  }
  return result;
}

unint64_t sub_1BAEC4B40()
{
  unint64_t result;

  result = qword_1EF2B3878;
  if (!qword_1EF2B3878)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4EA0, &_s10CodingKeysON_21);
    atomic_store(result, (unint64_t *)&qword_1EF2B3878);
  }
  return result;
}

unint64_t sub_1BAEC4B84()
{
  unint64_t result;

  result = qword_1EF2B3880;
  if (!qword_1EF2B3880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4E78, &_s10CodingKeysON_21);
    atomic_store(result, (unint64_t *)&qword_1EF2B3880);
  }
  return result;
}

void sub_1BAEC4BC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3890)
  {
    sub_1BAEC4C40();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B38A0, (uint64_t (*)(uint64_t))sub_1BAEC4C40, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3890);
  }
}

void sub_1BAEC4C40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3898)
  {
    sub_1BAEC4A7C();
    sub_1BA4A2870(&qword_1EF2B3888, (uint64_t (*)(uint64_t))sub_1BAEC4A7C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3898);
  }
}

void sub_1BAEC4CB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B38A8)
  {
    sub_1BAEC4D30();
    sub_1BA4A2870(&qword_1EF2B38D0, (uint64_t (*)(uint64_t))sub_1BAEC4D30, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B38A8);
  }
}

uint64_t sub_1BAEC4D30()
{
  uint64_t result;

  result = qword_1EF2B38B0;
  if (!qword_1EF2B38B0)
  {
    sub_1BAEC4DB0();
    sub_1BAEC4DF4();
    sub_1BAEC4E38();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC4DB0()
{
  unint64_t result;

  result = qword_1EF2B38B8;
  if (!qword_1EF2B38B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4E40, &_s10CodingKeysON_20);
    atomic_store(result, (unint64_t *)&qword_1EF2B38B8);
  }
  return result;
}

unint64_t sub_1BAEC4DF4()
{
  unint64_t result;

  result = qword_1EF2B38C0;
  if (!qword_1EF2B38C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4DF0, &_s10CodingKeysON_20);
    atomic_store(result, (unint64_t *)&qword_1EF2B38C0);
  }
  return result;
}

unint64_t sub_1BAEC4E38()
{
  unint64_t result;

  result = qword_1EF2B38C8;
  if (!qword_1EF2B38C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4DC8, &_s10CodingKeysON_20);
    atomic_store(result, (unint64_t *)&qword_1EF2B38C8);
  }
  return result;
}

void sub_1BAEC4E7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B38D8)
  {
    sub_1BAEC4EF4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B38E8, (uint64_t (*)(uint64_t))sub_1BAEC4EF4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B38D8);
  }
}

void sub_1BAEC4EF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B38E0)
  {
    sub_1BAEC4D30();
    sub_1BA4A2870(&qword_1EF2B38D0, (uint64_t (*)(uint64_t))sub_1BAEC4D30, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B38E0);
  }
}

void sub_1BAEC4F6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D40)
  {
    sub_1BAEC4FE4();
    sub_1BA4A2870(&qword_1ED3D1340, (uint64_t (*)(uint64_t))sub_1BAEC4FE4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D40);
  }
}

uint64_t sub_1BAEC4FE4()
{
  uint64_t result;

  result = qword_1ED3D1348;
  if (!qword_1ED3D1348)
  {
    sub_1BAEC5064();
    sub_1BA53E618();
    sub_1BAEC50A8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC5064()
{
  unint64_t result;

  result = qword_1ED3D1840;
  if (!qword_1ED3D1840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4D90, &_s10CodingKeysON_19);
    atomic_store(result, (unint64_t *)&qword_1ED3D1840);
  }
  return result;
}

unint64_t sub_1BAEC50A8()
{
  unint64_t result;

  result = qword_1ED3D1838;
  if (!qword_1ED3D1838)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4D18, &_s10CodingKeysON_19);
    atomic_store(result, (unint64_t *)&qword_1ED3D1838);
  }
  return result;
}

void sub_1BAEC50EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE138)
  {
    sub_1BAEC5164();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF018, (uint64_t (*)(uint64_t))sub_1BAEC5164, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE138);
  }
}

void sub_1BAEC5164()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF020)
  {
    sub_1BAEC4FE4();
    sub_1BA4A2870(&qword_1ED3D1340, (uint64_t (*)(uint64_t))sub_1BAEC4FE4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF020);
  }
}

void sub_1BAEC51DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C60)
  {
    sub_1BAEC5254();
    sub_1BA4A2870(&qword_1ED3D1180, (uint64_t (*)(uint64_t))sub_1BAEC5254, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C60);
  }
}

uint64_t sub_1BAEC5254()
{
  uint64_t result;

  result = qword_1ED3D1188;
  if (!qword_1ED3D1188)
  {
    sub_1BAEC52D4();
    sub_1BA574B7C();
    sub_1BAEC5318();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC52D4()
{
  unint64_t result;

  result = qword_1ED3D0B38;
  if (!qword_1ED3D0B38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4CE0, &_s10CodingKeysON_18);
    atomic_store(result, (unint64_t *)&qword_1ED3D0B38);
  }
  return result;
}

unint64_t sub_1BAEC5318()
{
  unint64_t result;

  result = qword_1ED3D0B30;
  if (!qword_1ED3D0B30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4C68, &_s10CodingKeysON_18);
    atomic_store(result, (unint64_t *)&qword_1ED3D0B30);
  }
  return result;
}

void sub_1BAEC535C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE008)
  {
    sub_1BAEC53D4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEDC0, (uint64_t (*)(uint64_t))sub_1BAEC53D4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE008);
  }
}

void sub_1BAEC53D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEDC8)
  {
    sub_1BAEC5254();
    sub_1BA4A2870(&qword_1ED3D1180, (uint64_t (*)(uint64_t))sub_1BAEC5254, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEDC8);
  }
}

void sub_1BAEC544C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B38F0)
  {
    sub_1BAEC54C4();
    sub_1BA4A2870(&qword_1EF2B3918, (uint64_t (*)(uint64_t))sub_1BAEC54C4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B38F0);
  }
}

uint64_t sub_1BAEC54C4()
{
  uint64_t result;

  result = qword_1EF2B38F8;
  if (!qword_1EF2B38F8)
  {
    sub_1BAEC5544();
    sub_1BAEC5588();
    sub_1BAEC55CC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC5544()
{
  unint64_t result;

  result = qword_1EF2B3900;
  if (!qword_1EF2B3900)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4C30, &_s10CodingKeysON_17);
    atomic_store(result, (unint64_t *)&qword_1EF2B3900);
  }
  return result;
}

unint64_t sub_1BAEC5588()
{
  unint64_t result;

  result = qword_1EF2B3908;
  if (!qword_1EF2B3908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4BE0, &_s10CodingKeysON_17);
    atomic_store(result, (unint64_t *)&qword_1EF2B3908);
  }
  return result;
}

unint64_t sub_1BAEC55CC()
{
  unint64_t result;

  result = qword_1EF2B3910;
  if (!qword_1EF2B3910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4BB8, &_s10CodingKeysON_17);
    atomic_store(result, (unint64_t *)&qword_1EF2B3910);
  }
  return result;
}

void sub_1BAEC5610(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3920)
  {
    sub_1BAEC5688();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3930, (uint64_t (*)(uint64_t))sub_1BAEC5688, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3920);
  }
}

void sub_1BAEC5688()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3928)
  {
    sub_1BAEC54C4();
    sub_1BA4A2870(&qword_1EF2B3918, (uint64_t (*)(uint64_t))sub_1BAEC54C4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3928);
  }
}

uint64_t sub_1BAEC5700(uint64_t a1, uint64_t a2)
{
  __swift_memcpy48_8(a2, a1);
  return a2;
}

void sub_1BAEC573C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3938)
  {
    sub_1BAEC57B4();
    sub_1BA4A2870(&qword_1EF2B3960, (uint64_t (*)(uint64_t))sub_1BAEC57B4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3938);
  }
}

uint64_t sub_1BAEC57B4()
{
  uint64_t result;

  result = qword_1EF2B3940;
  if (!qword_1EF2B3940)
  {
    sub_1BAEC5834();
    sub_1BAEC5878();
    sub_1BAEC58BC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC5834()
{
  unint64_t result;

  result = qword_1EF2B3948;
  if (!qword_1EF2B3948)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4B80, &_s10CodingKeysON_16);
    atomic_store(result, (unint64_t *)&qword_1EF2B3948);
  }
  return result;
}

unint64_t sub_1BAEC5878()
{
  unint64_t result;

  result = qword_1EF2B3950;
  if (!qword_1EF2B3950)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4B30, &_s10CodingKeysON_16);
    atomic_store(result, (unint64_t *)&qword_1EF2B3950);
  }
  return result;
}

unint64_t sub_1BAEC58BC()
{
  unint64_t result;

  result = qword_1EF2B3958;
  if (!qword_1EF2B3958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4B08, &_s10CodingKeysON_16);
    atomic_store(result, (unint64_t *)&qword_1EF2B3958);
  }
  return result;
}

void sub_1BAEC5900(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3968)
  {
    sub_1BAEC5978();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3978, (uint64_t (*)(uint64_t))sub_1BAEC5978, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3968);
  }
}

void sub_1BAEC5978()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3970)
  {
    sub_1BAEC57B4();
    sub_1BA4A2870(&qword_1EF2B3960, (uint64_t (*)(uint64_t))sub_1BAEC57B4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3970);
  }
}

uint64_t sub_1BAEC59F0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEC59FC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3B99C);
}

uint64_t sub_1BAEC5A08(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6973736572707865 && a2 == 0xEA00000000006E6FLL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC5B58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEC5C38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1953394534 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC5D64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C616373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC5E98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEC6020(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEC61A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746867696577 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC62DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1819044198 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C616E7265746E69 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAEC651C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F6C6F436C6C6966 && a2 == 0xE900000000000072;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F436C6F626D7973 && a2 == 0xEB00000000726F6CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC6684(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702521203 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E696C616373 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737469617274 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAEC68E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5373726566657270 && a2 == 0xED0000656372756FLL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953394534 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E6964646170 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEC6B18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74696E55776F6873 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEC6BF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAEC6CD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x63697274656DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEA0000000000746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEC6E74(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BB959E20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC6FAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6164696C61766E69 && a2 == 0xEC0000006E6F6974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6269737365636361 && a2 == 0xED00007974696C69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t sub_1BAEC7624(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6369676F6CLL && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEC77D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6369676F6CLL && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC7918(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7563372 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7563378 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC7A38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F74617265706FLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC7B74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6E67696C61 && a2 == 0xE900000000000074 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C616373 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAEC7D18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E69646E6962 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616D726F66 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC7E54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74616D726F66 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736E656B6F74 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC7F88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAEC81A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAEC82D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265626D756ELL && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616D726F66 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BAEC840C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE08)
  {
    sub_1BAEC8484();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE08);
  }
}

void sub_1BAEC8484()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE9B8)
  {
    sub_1BAEC84FC();
    sub_1BA4A2870(&qword_1ED3D0E50, (uint64_t (*)(uint64_t))sub_1BAEC84FC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE9B8);
  }
}

uint64_t sub_1BAEC84FC()
{
  uint64_t result;

  result = qword_1ED3D0E58;
  if (!qword_1ED3D0E58)
  {
    sub_1BAEC857C();
    sub_1BA69B438();
    sub_1BAEC85C0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC857C()
{
  unint64_t result;

  result = qword_1ED3D07B0;
  if (!qword_1ED3D07B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4AD0, &_s10CodingKeysON_15);
    atomic_store(result, (unint64_t *)&qword_1ED3D07B0);
  }
  return result;
}

unint64_t sub_1BAEC85C0()
{
  unint64_t result;

  result = qword_1ED3D07A8;
  if (!qword_1ED3D07A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4A58, &_s10CodingKeysON_15);
    atomic_store(result, (unint64_t *)&qword_1ED3D07A8);
  }
  return result;
}

void sub_1BAEC8604()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AD0)
  {
    sub_1BAEC867C();
    sub_1BA4A2870(&qword_1ED3D0E60, (uint64_t (*)(uint64_t))sub_1BAEC867C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AD0);
  }
}

uint64_t sub_1BAEC867C()
{
  uint64_t result;

  result = qword_1ED3D0E68;
  if (!qword_1ED3D0E68)
  {
    sub_1BAEC86FC();
    sub_1BA69C308();
    sub_1BAEC8740();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC86FC()
{
  unint64_t result;

  result = qword_1ED3D07C0;
  if (!qword_1ED3D07C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4A20, &_s10CodingKeysON_14);
    atomic_store(result, (unint64_t *)&qword_1ED3D07C0);
  }
  return result;
}

unint64_t sub_1BAEC8740()
{
  unint64_t result;

  result = qword_1ED3D07B8;
  if (!qword_1ED3D07B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C49A8, &_s10CodingKeysON_14);
    atomic_store(result, (unint64_t *)&qword_1ED3D07B8);
  }
  return result;
}

void sub_1BAEC8784(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ACA60)
  {
    sub_1BAEC87FC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ACA60);
  }
}

void sub_1BAEC87FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE9C8)
  {
    sub_1BAEC867C();
    sub_1BA4A2870(&qword_1ED3D0E60, (uint64_t (*)(uint64_t))sub_1BAEC867C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE9C8);
  }
}

void _s10CodingKeysOMa_17()
{
  JUMPOUT(0x1BCCE5A70);
}

void sub_1BAEC8880()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B40)
  {
    sub_1BAEC88F8();
    sub_1BA4A2870(&qword_1ED3D0F40, (uint64_t (*)(uint64_t))sub_1BAEC88F8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B40);
  }
}

uint64_t sub_1BAEC88F8()
{
  uint64_t result;

  result = qword_1ED3D0F48;
  if (!qword_1ED3D0F48)
  {
    sub_1BAEC8978();
    sub_1BA62CE18();
    sub_1BAEC89BC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC8978()
{
  unint64_t result;

  result = qword_1ED3D08B0;
  if (!qword_1ED3D08B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4870, &_s10CodingKeysON_13);
    atomic_store(result, (unint64_t *)&qword_1ED3D08B0);
  }
  return result;
}

unint64_t sub_1BAEC89BC()
{
  unint64_t result;

  result = qword_1ED3D08A8;
  if (!qword_1ED3D08A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C47F8, &_s10CodingKeysON_13);
    atomic_store(result, (unint64_t *)&qword_1ED3D08A8);
  }
  return result;
}

void sub_1BAEC8A00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE88)
  {
    sub_1BAEC8A78();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEAC0, (uint64_t (*)(uint64_t))sub_1BAEC8A78, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE88);
  }
}

void sub_1BAEC8A78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEAC8)
  {
    sub_1BAEC88F8();
    sub_1BA4A2870(&qword_1ED3D0F40, (uint64_t (*)(uint64_t))sub_1BAEC88F8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEAC8);
  }
}

void sub_1BAEC8AF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B48)
  {
    sub_1BAEC8B68();
    sub_1BA4A2870(&qword_1ED3D0F50, (uint64_t (*)(uint64_t))sub_1BAEC8B68, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B48);
  }
}

uint64_t sub_1BAEC8B68()
{
  uint64_t result;

  result = qword_1ED3D0F58;
  if (!qword_1ED3D0F58)
  {
    sub_1BAEC8BE8();
    sub_1BA5C6190();
    sub_1BAEC8C2C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC8BE8()
{
  unint64_t result;

  result = qword_1ED3D08C0;
  if (!qword_1ED3D08C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C47C0, &_s10CodingKeysON_12);
    atomic_store(result, (unint64_t *)&qword_1ED3D08C0);
  }
  return result;
}

unint64_t sub_1BAEC8C2C()
{
  unint64_t result;

  result = qword_1ED3D08B8;
  if (!qword_1ED3D08B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4748, &_s10CodingKeysON_12);
    atomic_store(result, (unint64_t *)&qword_1ED3D08B8);
  }
  return result;
}

void sub_1BAEC8C70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE90)
  {
    sub_1BAEC8CE8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEAD0, (uint64_t (*)(uint64_t))sub_1BAEC8CE8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE90);
  }
}

void sub_1BAEC8CE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEAD8)
  {
    sub_1BAEC8B68();
    sub_1BA4A2870(&qword_1ED3D0F50, (uint64_t (*)(uint64_t))sub_1BAEC8B68, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEAD8);
  }
}

void sub_1BAEC8D60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D68)
  {
    sub_1BAEC8DD8();
    sub_1BA4A2870(&qword_1ED3D1390, (uint64_t (*)(uint64_t))sub_1BAEC8DD8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D68);
  }
}

uint64_t sub_1BAEC8DD8()
{
  uint64_t result;

  result = qword_1ED3D1398;
  if (!qword_1ED3D1398)
  {
    sub_1BAEC8E58();
    sub_1BA545B1C();
    sub_1BAEC8E9C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC8E58()
{
  unint64_t result;

  result = qword_1ED3D1898;
  if (!qword_1ED3D1898)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4710, &_s10CodingKeysON_11);
    atomic_store(result, (unint64_t *)&qword_1ED3D1898);
  }
  return result;
}

unint64_t sub_1BAEC8E9C()
{
  unint64_t result;

  result = qword_1ED3D1890;
  if (!qword_1ED3D1890)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4698, &_s10CodingKeysON_11);
    atomic_store(result, (unint64_t *)&qword_1ED3D1890);
  }
  return result;
}

void sub_1BAEC8EE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE168)
  {
    sub_1BAEC8F58();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF078, (uint64_t (*)(uint64_t))sub_1BAEC8F58, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE168);
  }
}

void sub_1BAEC8F58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF080)
  {
    sub_1BAEC8DD8();
    sub_1BA4A2870(&qword_1ED3D1390, (uint64_t (*)(uint64_t))sub_1BAEC8DD8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF080);
  }
}

void _s10CodingKeysOMa_13()
{
  JUMPOUT(0x1BCCE5A70);
}

void sub_1BAEC8FDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1EB8)
  {
    sub_1BAEC9054();
    sub_1BA4A2870(&qword_1ED3D1630, (uint64_t (*)(uint64_t))sub_1BAEC9054, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1EB8);
  }
}

uint64_t sub_1BAEC9054()
{
  uint64_t result;

  result = qword_1ED3D1638;
  if (!qword_1ED3D1638)
  {
    sub_1BAEC90D4();
    sub_1BA51F5FC();
    sub_1BAEC9118();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEC90D4()
{
  unint64_t result;

  result = qword_1ED3D0398;
  if (!qword_1ED3D0398)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C45B0, &_s10CodingKeysON_10);
    atomic_store(result, (unint64_t *)&qword_1ED3D0398);
  }
  return result;
}

unint64_t sub_1BAEC9118()
{
  unint64_t result;

  result = qword_1ED3D0390;
  if (!qword_1ED3D0390)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4538, &_s10CodingKeysON_10);
    atomic_store(result, (unint64_t *)&qword_1ED3D0390);
  }
  return result;
}

void sub_1BAEC915C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE300)
  {
    sub_1BAEC91D4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF3A0, (uint64_t (*)(uint64_t))sub_1BAEC91D4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE300);
  }
}

void sub_1BAEC91D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF3A8)
  {
    sub_1BAEC9054();
    sub_1BA4A2870(&qword_1ED3D1630, (uint64_t (*)(uint64_t))sub_1BAEC9054, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF3A8);
  }
}

uint64_t sub_1BAEC924C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1953394534 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1819044198 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F66736E617274 && a2 == 0xEA0000000000736DLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7061726761726170 && a2 == 0xEE00656C79745368 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x676E696B63617274 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6874656B69727473 && a2 == 0xED00006867756F72 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E696C7265646E75 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x656E696C65736162 && a2 == 0xEE0074657366664FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t sub_1BAEC98E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953394534 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1819044198 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726F66736E617274 && a2 == 0xEA0000000000736DLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7061726761726170 && a2 == 0xEE00656C79745368 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x676E696B63617274 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6874656B69727473 && a2 == 0xED00006867756F72 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6E696C7265646E75 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x656E696C65736162 && a2 == 0xEE0074657366664FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

uint64_t sub_1BAEC9EC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974696E69666564 && a2 == 0xEA00000000006E6FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAECA080(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAECA23C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7365736163 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAECA314(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574656D61726170 && a2 == 0xEA00000000007372;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAECA400(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

void sub_1BAECA534(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2B0)
  {
    sub_1BAECA5AC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF300, (uint64_t (*)(uint64_t))sub_1BAECA5AC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2B0);
  }
}

void sub_1BAECA5AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF308)
  {
    sub_1BAECA624();
    sub_1BA4A2870(&qword_1ED3D15A0, (uint64_t (*)(uint64_t))sub_1BAECA624, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF308);
  }
}

uint64_t sub_1BAECA624()
{
  uint64_t result;

  result = qword_1ED3D15A8;
  if (!qword_1ED3D15A8)
  {
    sub_1BAECA6A4();
    sub_1BA719928();
    sub_1BAECA6E8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECA6A4()
{
  unint64_t result;

  result = qword_1ED3D0308;
  if (!qword_1ED3D0308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4450, &_s14descr1E72CC061V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0308);
  }
  return result;
}

unint64_t sub_1BAECA6E8()
{
  unint64_t result;

  result = qword_1ED3D0300;
  if (!qword_1ED3D0300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C43D8, &_s14descr1E72CC061V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D0300);
  }
  return result;
}

uint64_t sub_1BAECA72C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6465737265766572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

void sub_1BAECAADC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD88)
  {
    sub_1BAECAB54();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE8B0, (uint64_t (*)(uint64_t))sub_1BAECAB54, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD88);
  }
}

void sub_1BAECAB54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE8B8)
  {
    sub_1BAECABCC();
    sub_1BA4A2870(&qword_1ED3D0D70, (uint64_t (*)(uint64_t))sub_1BAECABCC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE8B8);
  }
}

uint64_t sub_1BAECABCC()
{
  uint64_t result;

  result = qword_1ED3D0D78;
  if (!qword_1ED3D0D78)
  {
    sub_1BAECAC4C();
    sub_1BA61B32C();
    sub_1BAECAC90();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECAC4C()
{
  unint64_t result;

  result = qword_1ED3D06C0;
  if (!qword_1ED3D06C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C43A0, &_s10CodingKeysON_9);
    atomic_store(result, (unint64_t *)&qword_1ED3D06C0);
  }
  return result;
}

unint64_t sub_1BAECAC90()
{
  unint64_t result;

  result = qword_1ED3D06B8;
  if (!qword_1ED3D06B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4328, &_s10CodingKeysON_9);
    atomic_store(result, (unint64_t *)&qword_1ED3D06B8);
  }
  return result;
}

uint64_t sub_1BAECACD4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB959E20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6150746567726174 && a2 == 0xEA00000000006874 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6465737265766572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1BAECB0F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6574617473 && a2 == 0xEA00000000007374 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAECB244(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t KeyPath;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE v44[4];
  int v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  __int128 v65;
  char v66;
  __int128 v67;
  __int128 v68;
  _QWORD *v69;

  sub_1BA6927D0();
  v58 = v2;
  v56 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v57 = &v44[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BAEFBAC0(0, &qword_1ED3BBE90, (void (*)(void))sub_1BA8333A0, (void (*)(void))sub_1BA8333E4);
  v60 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v44[-v6];
  sub_1BAEE90BC();
  v59 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAECC048();
  sub_1BA4A2870(&qword_1ED3ADA38, (uint64_t (*)(uint64_t))sub_1BAECC048, (uint64_t)&unk_1BB8FFC6C);
  v13 = (uint64_t)v69;
  sub_1BB87468C();
  v14 = (void *)v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  v54 = (uint64_t)v7;
  *(_QWORD *)&v53 = v5;
  v55 = v9;
  v15 = a1[3];
  v69 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = sub_1BB872874();
  LOBYTE(v15) = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  v17 = v59;
  v18 = v60;
  if ((v15 & 1) != 0)
  {
    v19 = sub_1BB8740EC();
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = (_BYTE *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20)
          goto LABEL_7;
      }
      v26 = *((_QWORD *)v21 - 2);
      v25 = *((_QWORD *)v21 - 1);
      swift_bridgeObjectRetain_n();
      v27 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v27);
      sub_1BAECC0C8();
      sub_1BAECC10C();
      sub_1BAECC150();
      KeyPath = swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7250E58);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v29 = v26;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v26, v25, 1);
      (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v11, v17);
      a1 = v69;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v22 = sub_1BAE0F8F8((uint64_t)v11, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEE90BC);
  v24 = v23;
  v67 = xmmword_1BB8A1A10;
  LOBYTE(v68) = 0;
  sub_1BA636C74();
  sub_1BB8740D4();
  v30 = v65;
  v67 = xmmword_1BB8D2D60;
  LOBYTE(v68) = 0;
  sub_1BA650B18();
  sub_1BB874068();
  v32 = v65;
  v52 = xmmword_1BB8D2D70;
  v67 = xmmword_1BB8D2D70;
  LOBYTE(v68) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v51 = v32;
    v65 = v52;
    v66 = 0;
    sub_1BAEB7D04();
    v33 = v54;
    sub_1BB8740D4();
    *(_QWORD *)&v52 = v22;
    v34 = sub_1BB86DD08();
    v35 = v18;
    v36 = v34;
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v33, v35);
    v32 = v51;
  }
  else
  {
    *(_QWORD *)&v52 = v22;
    v36 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for FormatVideoNodeStyle();
  v67 = xmmword_1BB8D2D90;
  LOBYTE(v68) = 0;
  sub_1BA4A2870(&qword_1ED3A6890, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeStyle, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
  sub_1BB874068();
  v37 = v65;
  type metadata accessor for FormatAnimationNodeStyle();
  v67 = xmmword_1BB8D2D80;
  LOBYTE(v68) = 0;
  sub_1BA4A2870(&qword_1ED3BF0C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  sub_1BB874068();
  v60 = v37;
  v38 = v65;
  v67 = xmmword_1BB8D2DA0;
  LOBYTE(v68) = 0;
  sub_1BA829B78();
  sub_1BB8740D4();
  v54 = v65;
  v53 = xmmword_1BB8D2DB0;
  v67 = xmmword_1BB8D2DB0;
  LOBYTE(v68) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v65 = v53;
    v66 = 0;
    sub_1BB8740D4();
    v51 = v64;
  }
  else
  {
    v51 = 0;
  }
  v53 = xmmword_1BB8D2DD0;
  v67 = xmmword_1BB8D2DD0;
  LOBYTE(v68) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v65 = v53;
    v66 = 0;
    sub_1BA651250();
    sub_1BB8740D4();
    v39 = v64;
  }
  else
  {
    v39 = 0x8000000000000000;
  }
  *(_QWORD *)&v53 = v39;
  v50 = xmmword_1BB8D2DE0;
  v67 = xmmword_1BB8D2DE0;
  LOBYTE(v68) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v65 = v50;
    v66 = 0;
    sub_1BB8740D4();
    v40 = v64;
  }
  else
  {
    v40 = 1;
  }
  LODWORD(v50) = v40;
  v67 = xmmword_1BB8D2DF0;
  LOBYTE(v68) = 0;
  sub_1BA650BA0();
  sub_1BB874068();
  v48 = v38;
  v49 = v24;
  v46 = v65;
  v45 = BYTE8(v65);
  v47 = xmmword_1BB8D2E00;
  v67 = xmmword_1BB8D2E00;
  LOBYTE(v68) = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v65 = v47;
    v66 = 0;
    sub_1BA4A2870(&qword_1ED3BBE20, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
    sub_1BB8740D4();
    v41 = v58;
    v42 = v57;
    v43 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v42, v41);
  }
  else
  {
    v43 = MEMORY[0x1E0DEE9E8];
  }
  v65 = xmmword_1BB8D2E10;
  v66 = 0;
  sub_1BAB106AC();
  sub_1BB874068();
  (*(void (**)(_BYTE *, uint64_t))(v55 + 8))(v11, v17);
  v63 = v32;
  v64 = v30;
  v62 = v54;
  v61 = v53;
  *(_QWORD *)&v65 = v46;
  BYTE8(v65) = v45;
  type metadata accessor for FormatVideoNode();
  swift_allocObject();
  KeyPath = FormatVideoNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:properties:)(v52, v49, (uint64_t *)&v64, &v63, v36, v60, v48, &v62, v51, &v61, v50, (uint64_t *)&v65, v43, &v67);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  return KeyPath;
}

void sub_1BAECBF58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3980)
  {
    sub_1BAECBFD0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3990, (uint64_t (*)(uint64_t))sub_1BAECBFD0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3980);
  }
}

void sub_1BAECBFD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3988)
  {
    sub_1BAECC048();
    sub_1BA4A2870(&qword_1ED3ADA38, (uint64_t (*)(uint64_t))sub_1BAECC048, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3988);
  }
}

uint64_t sub_1BAECC048()
{
  uint64_t result;

  result = qword_1ED3ADA40;
  if (!qword_1ED3ADA40)
  {
    sub_1BAECC0C8();
    sub_1BAECC10C();
    sub_1BAECC150();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECC0C8()
{
  unint64_t result;

  result = qword_1ED3AD4B0;
  if (!qword_1ED3AD4B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4240, &_s10CodingKeysON_8);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4B0);
  }
  return result;
}

unint64_t sub_1BAECC10C()
{
  unint64_t result;

  result = qword_1ED3A58C0;
  if (!qword_1ED3A58C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C41F0, &_s10CodingKeysON_8);
    atomic_store(result, (unint64_t *)&qword_1ED3A58C0);
  }
  return result;
}

unint64_t sub_1BAECC150()
{
  unint64_t result;

  result = qword_1ED3AD4A8;
  if (!qword_1ED3AD4A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C41C8, &_s10CodingKeysON_8);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4A8);
  }
  return result;
}

uint64_t sub_1BAECC194(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  sub_1BAC68A98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96), a2);
  return a1;
}

unint64_t sub_1BAECC1F4()
{
  unint64_t result;

  result = qword_1EF2B39A0;
  if (!qword_1EF2B39A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C41A0, &_s10CodingTypeON_5);
    atomic_store(result, (unint64_t *)&qword_1EF2B39A0);
  }
  return result;
}

uint64_t sub_1BAECC238(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 13;
    else
      return 14;
  }
}

_BYTE *sub_1BAECC7C0(_QWORD *a1)
{
  _BYTE *v2;
  uint64_t v3;
  _BYTE *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void *v32;
  char v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char v45;
  void *v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[12];
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  _BYTE *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  void *v79;
  __int128 v80;
  char v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;

  sub_1BAEFBAC0(0, &qword_1EF2B5A40, (void (*)(void))sub_1BAEE8E68, (void (*)(void))sub_1BAEE8E00);
  v77 = *((_QWORD *)v2 - 1);
  v78 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = &v55[-v3];
  sub_1BAEE8EAC();
  v6 = v5;
  v7 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAECD444();
  sub_1BA4A2870(&qword_1EF2B39D8, (uint64_t (*)(uint64_t))sub_1BAECD444, (uint64_t)&unk_1BB8FFC6C);
  v10 = v79;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
    goto LABEL_12;
  v74 = v4;
  v75 = 0;
  v4 = v78;
  v76 = v7;
  v79 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    v14 = (uint64_t)v79;
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v24 = *((_QWORD *)v17 - 2);
      v25 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v26 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v26);
      v27 = v14;
      sub_1BAECD4C4();
      sub_1BAECD508();
      sub_1BAECD54C();
      swift_getKeyPath();
      swift_retain();
      v28 = sub_1BAE71220((uint64_t)&unk_1E7252060);
      swift_release_n();
      sub_1BA98D1F0();
      v11 = (void *)swift_allocError();
      *(_QWORD *)v29 = v24;
      *(_QWORD *)(v29 + 8) = v25;
      *(_QWORD *)(v29 + 16) = v28;
      *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v24, v25, 1);
      (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v9, v27);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v18 = v75;
  v19 = sub_1BAE0F8F8((uint64_t)v9, 0, 0, 0, (void (*)(_QWORD, double))sub_1BAEE8EAC);
  v11 = v18;
  if (v18)
  {
    (*(void (**)(_BYTE *, void *))(v76 + 8))(v9, v79);
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v4;
  }
  v21 = v19;
  v22 = v20;
  v82 = xmmword_1BB8A1A10;
  LOBYTE(v83) = 0;
  v23 = v79;
  v31 = sub_1BB874098();
  v75 = v32;
  v73 = xmmword_1BB8D2D60;
  v82 = xmmword_1BB8D2D60;
  LOBYTE(v83) = 0;
  v33 = sub_1BB8740F8();
  if ((v33 & 1) != 0)
  {
    v72 = v22;
    v80 = v73;
    v81 = 0;
    sub_1BAEE8F24();
    v34 = v74;
    sub_1BB8740D4();
    v71 = v31;
    *(_QWORD *)&v73 = sub_1BB86DD08();
    (*(void (**)(_BYTE *, _BYTE *))(v77 + 8))(v34, v4);
    v22 = v72;
  }
  else
  {
    v71 = v31;
    *(_QWORD *)&v73 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v82 = xmmword_1BB8D2D70;
  LOBYTE(v83) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v35 = (_BYTE *)v80;
  v82 = xmmword_1BB8D2D90;
  LOBYTE(v83) = 0;
  sub_1BA69A538();
  sub_1BB874068();
  v78 = v35;
  v36 = v80;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v82 = xmmword_1BB8D2D80;
  LOBYTE(v83) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v77 = v36;
  v37 = (_BYTE *)v80;
  v80 = xmmword_1BB8D2DA0;
  v81 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v74 = v37;
  v38 = *((_QWORD *)&v82 + 1);
  v70 = v82;
  LODWORD(v72) = v83;
  v80 = xmmword_1BB8D2DB0;
  v81 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v68 = v38;
  v69 = a1;
  v61 = *((_QWORD *)&v82 + 1);
  v39 = v82;
  v62 = v83;
  v63 = v84;
  v64 = v85;
  v65 = v86;
  v66 = v87;
  v40 = v89;
  v67 = v88;
  v41 = v9;
  v42 = v90;
  v43 = v91;
  v82 = xmmword_1BB8D2DD0;
  LOBYTE(v83) = 0;
  sub_1BA62C9A0();
  sub_1BB874068();
  v56 = v43;
  v57 = v42;
  v58 = v40;
  v59 = v39;
  v44 = v80;
  v82 = xmmword_1BB8D2DE0;
  LOBYTE(v83) = 0;
  v45 = sub_1BB874038();
  v60 = 0;
  LOBYTE(v42) = v45;
  (*(void (**)(_BYTE *, void *))(v76 + 8))(v41, v23);
  type metadata accessor for FormatVideoNodeStyle();
  v4 = (_BYTE *)swift_allocObject();
  swift_beginAccess();
  *((_QWORD *)v4 + 2) = v21;
  *((_QWORD *)v4 + 3) = v22;
  v46 = v75;
  *((_QWORD *)v4 + 4) = v71;
  *((_QWORD *)v4 + 5) = v46;
  swift_beginAccess();
  v47 = v78;
  *((_QWORD *)v4 + 6) = v73;
  *((_QWORD *)v4 + 7) = v47;
  v48 = v74;
  *((_QWORD *)v4 + 8) = v77;
  *((_QWORD *)v4 + 9) = v48;
  v49 = v68;
  *((_QWORD *)v4 + 10) = v70;
  *((_QWORD *)v4 + 11) = v49;
  v4[96] = v72;
  v50 = v61;
  *((_QWORD *)v4 + 13) = v59;
  *((_QWORD *)v4 + 14) = v50;
  v51 = v63;
  *((_QWORD *)v4 + 15) = v62;
  *((_QWORD *)v4 + 16) = v51;
  v52 = v65;
  *((_QWORD *)v4 + 17) = v64;
  *((_QWORD *)v4 + 18) = v52;
  v53 = v67;
  *((_QWORD *)v4 + 19) = v66;
  *((_QWORD *)v4 + 20) = v53;
  v54 = v57;
  *((_QWORD *)v4 + 21) = v58;
  *((_QWORD *)v4 + 22) = v54;
  v4[184] = v56;
  *((_QWORD *)v4 + 24) = v44;
  v4[200] = v42;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  return v4;
}

void sub_1BAECD354(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B39A8)
  {
    sub_1BAECD3CC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B39A8);
  }
}

void sub_1BAECD3CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B39B0)
  {
    sub_1BAECD444();
    sub_1BA4A2870(&qword_1EF2B39D8, (uint64_t (*)(uint64_t))sub_1BAECD444, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B39B0);
  }
}

uint64_t sub_1BAECD444()
{
  uint64_t result;

  result = qword_1EF2B39B8;
  if (!qword_1EF2B39B8)
  {
    sub_1BAECD4C4();
    sub_1BAECD508();
    sub_1BAECD54C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECD4C4()
{
  unint64_t result;

  result = qword_1EF2B39C0;
  if (!qword_1EF2B39C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4168, &_s10CodingKeysON_7);
    atomic_store(result, (unint64_t *)&qword_1EF2B39C0);
  }
  return result;
}

unint64_t sub_1BAECD508()
{
  unint64_t result;

  result = qword_1EF2B39C8;
  if (!qword_1EF2B39C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4118, &_s10CodingKeysON_7);
    atomic_store(result, (unint64_t *)&qword_1EF2B39C8);
  }
  return result;
}

unint64_t sub_1BAECD54C()
{
  unint64_t result;

  result = qword_1EF2B39D0;
  if (!qword_1EF2B39D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C40F0, &_s10CodingKeysON_7);
    atomic_store(result, (unint64_t *)&qword_1EF2B39D0);
  }
  return result;
}

void sub_1BAECD590()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B39E8)
  {
    sub_1BAECD608();
    sub_1BA4A2870(&qword_1EF2B3A10, (uint64_t (*)(uint64_t))sub_1BAECD608, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B39E8);
  }
}

uint64_t sub_1BAECD608()
{
  uint64_t result;

  result = qword_1EF2B39F0;
  if (!qword_1EF2B39F0)
  {
    sub_1BAECD688();
    sub_1BAECD6CC();
    sub_1BAECD710();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECD688()
{
  unint64_t result;

  result = qword_1EF2B39F8;
  if (!qword_1EF2B39F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C40B8, &_s10CodingKeysON_6);
    atomic_store(result, (unint64_t *)&qword_1EF2B39F8);
  }
  return result;
}

unint64_t sub_1BAECD6CC()
{
  unint64_t result;

  result = qword_1EF2B3A00;
  if (!qword_1EF2B3A00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4068, &_s10CodingKeysON_6);
    atomic_store(result, (unint64_t *)&qword_1EF2B3A00);
  }
  return result;
}

unint64_t sub_1BAECD710()
{
  unint64_t result;

  result = qword_1EF2B3A08;
  if (!qword_1EF2B3A08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C4040, &_s10CodingKeysON_6);
    atomic_store(result, (unint64_t *)&qword_1EF2B3A08);
  }
  return result;
}

void sub_1BAECD754(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B3A18)
  {
    sub_1BAECD7CC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B3A28, (uint64_t (*)(uint64_t))sub_1BAECD7CC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B3A18);
  }
}

void sub_1BAECD7CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B3A20)
  {
    sub_1BAECD608();
    sub_1BA4A2870(&qword_1EF2B3A10, (uint64_t (*)(uint64_t))sub_1BAECD608, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B3A20);
  }
}

uint64_t sub_1BAECD844()
{
  uint64_t v0;

  sub_1BA896AE4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1BAECD870()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BAECD8A0()
{
  unint64_t result;

  result = qword_1EF2B3A30;
  if (!qword_1EF2B3A30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3FF0, &_s10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1EF2B3A30);
  }
  return result;
}

void sub_1BAECD8E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADF10)
  {
    sub_1BAECD95C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADF10);
  }
}

void sub_1BAECD95C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEBD8)
  {
    sub_1BAECD9D4();
    sub_1BA4A2870(&qword_1ED3D0FF0, (uint64_t (*)(uint64_t))sub_1BAECD9D4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEBD8);
  }
}

uint64_t sub_1BAECD9D4()
{
  uint64_t result;

  result = qword_1ED3D0FF8;
  if (!qword_1ED3D0FF8)
  {
    sub_1BAECDA54();
    sub_1BA82AB78();
    sub_1BAECDA98();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECDA54()
{
  unint64_t result;

  result = qword_1ED3D0960;
  if (!qword_1ED3D0960)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3FB8, &_s10CodingKeysON_5);
    atomic_store(result, (unint64_t *)&qword_1ED3D0960);
  }
  return result;
}

unint64_t sub_1BAECDA98()
{
  unint64_t result;

  result = qword_1ED3D0958;
  if (!qword_1ED3D0958)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3F40, &_s10CodingKeysON_5);
    atomic_store(result, (unint64_t *)&qword_1ED3D0958);
  }
  return result;
}

uint64_t sub_1BAECDADC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F43726574736F70 && a2 == 0xED0000746E65746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7453726574736F70 && a2 == 0xEB00000000656C79 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4379616C7265766FLL && a2 == 0xEE00746E65746E6FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6576694C7369 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB971930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 18;
    else
      return 19;
  }
}

void sub_1BAECE28C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE098)
  {
    sub_1BAECE304();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEEE0, (uint64_t (*)(uint64_t))sub_1BAECE304, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE098);
  }
}

void sub_1BAECE304()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEEE8)
  {
    sub_1BAECE37C();
    sub_1BA4A2870(&qword_1ED3D1270, (uint64_t (*)(uint64_t))sub_1BAECE37C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEEE8);
  }
}

uint64_t sub_1BAECE37C()
{
  uint64_t result;

  result = qword_1ED3D1278;
  if (!qword_1ED3D1278)
  {
    sub_1BAECE3FC();
    sub_1BA7F1204();
    sub_1BAECE440();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECE3FC()
{
  unint64_t result;

  result = qword_1ED3D1740;
  if (!qword_1ED3D1740)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3EE0, &_s10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3D1740);
  }
  return result;
}

unint64_t sub_1BAECE440()
{
  unint64_t result;

  result = qword_1ED3D1738;
  if (!qword_1ED3D1738)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3E68, &_s10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3D1738);
  }
  return result;
}

void sub_1BAECE484()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CE0)
  {
    sub_1BAECE4FC();
    sub_1BA4A2870(&qword_1ED3D1280, (uint64_t (*)(uint64_t))sub_1BAECE4FC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CE0);
  }
}

uint64_t sub_1BAECE4FC()
{
  uint64_t result;

  result = qword_1ED3D1288;
  if (!qword_1ED3D1288)
  {
    sub_1BAECE57C();
    sub_1BA536548();
    sub_1BAECE5C0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECE57C()
{
  unint64_t result;

  result = qword_1ED3D1750;
  if (!qword_1ED3D1750)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3E30, &_s10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_1ED3D1750);
  }
  return result;
}

unint64_t sub_1BAECE5C0()
{
  unint64_t result;

  result = qword_1ED3D1748;
  if (!qword_1ED3D1748)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3DB8, &_s10CodingKeysON_3);
    atomic_store(result, (unint64_t *)&qword_1ED3D1748);
  }
  return result;
}

void sub_1BAECE604(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE0A0)
  {
    sub_1BAECE67C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AEEF0, (uint64_t (*)(uint64_t))sub_1BAECE67C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE0A0);
  }
}

void sub_1BAECE67C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AEEF8)
  {
    sub_1BAECE4FC();
    sub_1BA4A2870(&qword_1ED3D1280, (uint64_t (*)(uint64_t))sub_1BAECE4FC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AEEF8);
  }
}

uint64_t sub_1BAECE6F4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F6C6F43746E6974 && a2 == 0xE900000000000072 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_1BAECEB70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F6C6F43746E6974 && a2 == 0xE900000000000072 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1BAECEF24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E6F436F676F6CLL && a2 == 0xEB00000000746E65;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657A69536F676F6CLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C7974536F676F6CLL && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x697365526F676F6CLL && a2 == 0xEA0000000000657ALL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x61727544776F6873 && a2 == 0xEC0000006E6F6974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BAECF1DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6172476F65646976 && a2 == 0xEC00000079746976;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E69706F6F6CLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB971730 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646574756DLL && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6172476567616D69 && a2 == 0xEC00000079746976 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F69746341646E65 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB971750 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

void sub_1BAECF594(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE2B8)
  {
    sub_1BAECF60C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE2B8);
  }
}

void sub_1BAECF60C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF318)
  {
    sub_1BAECF684();
    sub_1BA4A2870(&qword_1ED3D15B0, (uint64_t (*)(uint64_t))sub_1BAECF684, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF318);
  }
}

uint64_t sub_1BAECF684()
{
  uint64_t result;

  result = qword_1ED3D15B8;
  if (!qword_1ED3D15B8)
  {
    sub_1BAECF704();
    sub_1BA64EEAC();
    sub_1BAECF748();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECF704()
{
  unint64_t result;

  result = qword_1ED3D0318;
  if (!qword_1ED3D0318)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3D80, &_s10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1ED3D0318);
  }
  return result;
}

unint64_t sub_1BAECF748()
{
  unint64_t result;

  result = qword_1ED3D0310;
  if (!qword_1ED3D0310)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3D08, &_s10CodingKeysON_2);
    atomic_store(result, (unint64_t *)&qword_1ED3D0310);
  }
  return result;
}

uint64_t sub_1BAECF78C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

void sub_1BAECFC9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE10)
  {
    sub_1BAECFD14();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE9D0, (uint64_t (*)(uint64_t))sub_1BAECFD14, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE10);
  }
}

void sub_1BAECFD14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE9D8)
  {
    sub_1BAECFD8C();
    sub_1BA4A2870(&qword_1ED3D0E70, (uint64_t (*)(uint64_t))sub_1BAECFD8C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE9D8);
  }
}

uint64_t sub_1BAECFD8C()
{
  uint64_t result;

  result = qword_1ED3D0E78;
  if (!qword_1ED3D0E78)
  {
    sub_1BAECFE0C();
    sub_1BA69C390();
    sub_1BAECFE50();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECFE0C()
{
  unint64_t result;

  result = qword_1ED3D07D0;
  if (!qword_1ED3D07D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3CD0, &_s10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1ED3D07D0);
  }
  return result;
}

unint64_t sub_1BAECFE50()
{
  unint64_t result;

  result = qword_1ED3D07C8;
  if (!qword_1ED3D07C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3C58, &_s10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1ED3D07C8);
  }
  return result;
}

void sub_1BAECFE94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AE0)
  {
    sub_1BAECFF0C();
    sub_1BA4A2870(&qword_1ED3D0E80, (uint64_t (*)(uint64_t))sub_1BAECFF0C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AE0);
  }
}

uint64_t sub_1BAECFF0C()
{
  uint64_t result;

  result = qword_1ED3D0E88;
  if (!qword_1ED3D0E88)
  {
    sub_1BAECFF8C();
    sub_1BA69C34C();
    sub_1BAECFFD0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAECFF8C()
{
  unint64_t result;

  result = qword_1ED3D07E0;
  if (!qword_1ED3D07E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3C20, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3D07E0);
  }
  return result;
}

unint64_t sub_1BAECFFD0()
{
  unint64_t result;

  result = qword_1ED3D07D8;
  if (!qword_1ED3D07D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3BA8, &_s10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3D07D8);
  }
  return result;
}

void sub_1BAED0014(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADE18)
  {
    sub_1BAED008C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE9E0, (uint64_t (*)(uint64_t))sub_1BAED008C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADE18);
  }
}

void sub_1BAED008C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE9E8)
  {
    sub_1BAECFF0C();
    sub_1BA4A2870(&qword_1ED3D0E80, (uint64_t (*)(uint64_t))sub_1BAECFF0C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE9E8);
  }
}

unint64_t sub_1BAED0104()
{
  unint64_t result;

  result = qword_1EF2B3A38;
  if (!qword_1EF2B3A38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3B80, &_s14descr1E72CBDC1C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B3A38);
  }
  return result;
}

unint64_t sub_1BAED0148()
{
  unint64_t result;

  result = qword_1EF2B3A48;
  if (!qword_1EF2B3A48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlurEffectStyle, &type metadata for FormatBlurEffectStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2B3A48);
  }
  return result;
}

unint64_t sub_1BAED018C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B3A50;
  if (!qword_1EF2B3A50)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3A40, (uint64_t (*)(void))sub_1BAED0148, (uint64_t)&type metadata for FormatBlurEffectStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B3A50);
  }
  return result;
}

unint64_t sub_1BAED01F4()
{
  unint64_t result;

  result = qword_1ED3A69F0;
  if (!qword_1ED3A69F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F91A8, &_s7CommandO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3A69F0);
  }
  return result;
}

unint64_t sub_1BAED0238()
{
  unint64_t result;

  result = qword_1EF2B3A58;
  if (!qword_1EF2B3A58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ED9E8, &_s11TemperatureO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B3A58);
  }
  return result;
}

unint64_t sub_1BAED027C()
{
  unint64_t result;

  result = qword_1ED3A69B0;
  if (!qword_1ED3A69B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E2E20, &_s4TextO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3A69B0);
  }
  return result;
}

unint64_t sub_1BAED02C0()
{
  unint64_t result;

  result = qword_1ED3AD748;
  if (!qword_1ED3AD748)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3B30, &_s14descr1E72CC159O10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3AD748);
  }
  return result;
}

unint64_t sub_1BAED0304()
{
  unint64_t result;

  result = qword_1ED3A6D40;
  if (!qword_1ED3A6D40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F94F0, &_s4TextO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D40);
  }
  return result;
}

unint64_t sub_1BAED0348()
{
  unint64_t result;

  result = qword_1ED3A4318;
  if (!qword_1ED3A4318)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatScoreMatchupFormat, &type metadata for FormatScoreMatchupFormat);
    atomic_store(result, (unint64_t *)&qword_1ED3A4318);
  }
  return result;
}

uint64_t sub_1BAED038C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1BAED07A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73726564726F62 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x776F64616873 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void sub_1BAED0AE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3ADD98)
  {
    sub_1BAED0B60();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3ADD98);
  }
}

void sub_1BAED0B60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE8D8)
  {
    sub_1BAED0BD8();
    sub_1BA4A2870(&qword_1ED3D0D80, (uint64_t (*)(uint64_t))sub_1BAED0BD8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE8D8);
  }
}

uint64_t sub_1BAED0BD8()
{
  uint64_t result;

  result = qword_1ED3D0D88;
  if (!qword_1ED3D0D88)
  {
    sub_1BAED0C58();
    sub_1BA5A53CC();
    sub_1BAED0C9C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAED0C58()
{
  unint64_t result;

  result = qword_1ED3D06D0;
  if (!qword_1ED3D06D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3AF8, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D06D0);
  }
  return result;
}

unint64_t sub_1BAED0C9C()
{
  unint64_t result;

  result = qword_1ED3D06C8;
  if (!qword_1ED3D06C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3A80, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3D06C8);
  }
  return result;
}

unint64_t sub_1BAED0CE0()
{
  unint64_t result;

  result = qword_1EF2B3A68;
  if (!qword_1EF2B3A68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedNodeContent, &type metadata for FormatWebEmbedNodeContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B3A68);
  }
  return result;
}

unint64_t sub_1BAED0D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B3A70[0];
  if (!qword_1EF2B3A70[0])
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3A60, (uint64_t (*)(void))sub_1BAED0CE0, (uint64_t)&type metadata for FormatWebEmbedNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, qword_1EF2B3A70);
  }
  return result;
}

uint64_t sub_1BAED0D90()
{
  uint64_t v0;

  sub_1BAED0DBC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1BAED0DBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

ValueMetadata *_s10CodingTypeOMa()
{
  return &_s10CodingTypeON;
}

ValueMetadata *_s10CodingTypeOMa_0()
{
  return &_s10CodingTypeON_0;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

ValueMetadata *_s14descr1E72CC159O10CodingTypeOMa()
{
  return &_s14descr1E72CC159O10CodingTypeON;
}

ValueMetadata *_s10CodingTypeOMa_1()
{
  return &_s10CodingTypeON_1;
}

ValueMetadata *_s14descr1E72CBDC1C10CodingTypeOMa()
{
  return &_s14descr1E72CBDC1C10CodingTypeON;
}

ValueMetadata *_s10CodingKeysOMa_0()
{
  return &_s10CodingKeysON_0;
}

ValueMetadata *_s10CodingKeysOMa_1()
{
  return &_s10CodingKeysON_1;
}

ValueMetadata *_s10CodingKeysOMa_2()
{
  return &_s10CodingKeysON_2;
}

ValueMetadata *_s10CodingKeysOMa_3()
{
  return &_s10CodingKeysON_3;
}

ValueMetadata *_s10CodingKeysOMa_4()
{
  return &_s10CodingKeysON_4;
}

ValueMetadata *_s10CodingTypeOMa_2()
{
  return &_s10CodingTypeON_2;
}

uint64_t _s10CodingKeysOwst_5(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1BAED0EF8 + 4 * byte_1BB8AFA81[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1BAED0F2C + 4 * byte_1BB8AFA7C[v4]))();
}

uint64_t sub_1BAED0F2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED0F34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED0F3CLL);
  return result;
}

uint64_t sub_1BAED0F48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED0F50);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1BAED0F54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED0F5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_5()
{
  return &_s10CodingKeysON_5;
}

ValueMetadata *_s10CodingTypeOMa_3()
{
  return &_s10CodingTypeON_3;
}

ValueMetadata *_s10CodingTypeOMa_4()
{
  return &_s10CodingTypeON_4;
}

ValueMetadata *_s10CodingKeysOMa_6()
{
  return &_s10CodingKeysON_6;
}

ValueMetadata *_s10CodingKeysOMa_7()
{
  return &_s10CodingKeysON_7;
}

ValueMetadata *_s10CodingTypeOMa_5()
{
  return &_s10CodingTypeON_5;
}

ValueMetadata *_s10CodingKeysOMa_8()
{
  return &_s10CodingKeysON_8;
}

ValueMetadata *_s10CodingKeysOMa_10()
{
  return &_s10CodingKeysON_9;
}

ValueMetadata *_s14descr1E72CC061V10CodingKeysOMa()
{
  return &_s14descr1E72CC061V10CodingKeysON;
}

ValueMetadata *_s10CodingKeysOMa_12()
{
  return &_s10CodingKeysON_10;
}

ValueMetadata *_s10CodingKeysOMa_14()
{
  return &_s10CodingKeysON_11;
}

ValueMetadata *_s10CodingKeysOMa_15()
{
  return &_s10CodingKeysON_12;
}

ValueMetadata *_s10CodingKeysOMa_16()
{
  return &_s10CodingKeysON_13;
}

ValueMetadata *_s10CodingTypeOMa_6()
{
  return &_s10CodingTypeON_6;
}

ValueMetadata *_s10CodingTypeOMa_7()
{
  return &_s10CodingTypeON_7;
}

ValueMetadata *_s10CodingKeysOMa_18()
{
  return &_s10CodingKeysON_14;
}

ValueMetadata *_s10CodingKeysOMa_19()
{
  return &_s10CodingKeysON_15;
}

ValueMetadata *_s10CodingKeysOMa_20()
{
  return &_s10CodingKeysON_16;
}

ValueMetadata *_s10CodingKeysOMa_21()
{
  return &_s10CodingKeysON_17;
}

ValueMetadata *_s10CodingKeysOMa_22()
{
  return &_s10CodingKeysON_18;
}

ValueMetadata *_s10CodingKeysOMa_23()
{
  return &_s10CodingKeysON_19;
}

ValueMetadata *_s10CodingKeysOMa_24()
{
  return &_s10CodingKeysON_20;
}

ValueMetadata *_s10CodingKeysOMa_25()
{
  return &_s10CodingKeysON_21;
}

ValueMetadata *_s10CodingTypeOMa_8()
{
  return &_s10CodingTypeON_8;
}

ValueMetadata *_s10CodingTypeOMa_9()
{
  return &_s10CodingTypeON_9;
}

ValueMetadata *_s10CodingKeysOMa_26()
{
  return &_s10CodingKeysON_22;
}

ValueMetadata *_s10CodingKeysOMa_27()
{
  return &_s10CodingKeysON_23;
}

ValueMetadata *_s10CodingKeysOMa_28()
{
  return &_s10CodingKeysON_24;
}

ValueMetadata *_s10CodingKeysOMa_29()
{
  return &_s10CodingKeysON_25;
}

ValueMetadata *_s10CodingTypeOMa_10()
{
  return &_s10CodingTypeON_10;
}

ValueMetadata *_s10CodingTypeOMa_11()
{
  return &_s10CodingTypeON_11;
}

ValueMetadata *_s10CodingTypeOMa_12()
{
  return &_s10CodingTypeON_12;
}

ValueMetadata *_s10CodingKeysOMa_30()
{
  return &_s10CodingKeysON_26;
}

ValueMetadata *_s10CodingKeysOMa_31()
{
  return &_s10CodingKeysON_27;
}

ValueMetadata *_s10CodingKeysOMa_32()
{
  return &_s10CodingKeysON_28;
}

ValueMetadata *_s10CodingKeysOMa_33()
{
  return &_s10CodingKeysON_29;
}

ValueMetadata *_s10CodingKeysOMa_34()
{
  return &_s10CodingKeysON_30;
}

ValueMetadata *_s10CodingKeysOMa_35()
{
  return &_s10CodingKeysON_31;
}

ValueMetadata *_s10CodingTypeOMa_13()
{
  return &_s10CodingTypeON_13;
}

ValueMetadata *_s10CodingKeysOMa_38()
{
  return &_s10CodingKeysON_32;
}

ValueMetadata *_s10CodingKeysOMa_39()
{
  return &_s10CodingKeysON_33;
}

ValueMetadata *_s10CodingKeysOMa_42()
{
  return &_s10CodingKeysON_34;
}

ValueMetadata *_s10CodingKeysOMa_43()
{
  return &_s10CodingKeysON_35;
}

ValueMetadata *_s10CodingTypeOMa_14()
{
  return &_s10CodingTypeON_14;
}

ValueMetadata *_s10CodingTypeOMa_15()
{
  return &_s10CodingTypeON_15;
}

ValueMetadata *_s10CodingTypeOMa_16()
{
  return &_s10CodingTypeON_16;
}

ValueMetadata *_s10CodingKeysOMa_44()
{
  return &_s10CodingKeysON_36;
}

ValueMetadata *_s14descr1E72CC2B1O10CodingKeysOMa()
{
  return &_s14descr1E72CC2B1O10CodingKeysON;
}

ValueMetadata *_s10CodingTypeOMa_17()
{
  return &_s10CodingTypeON_17;
}

ValueMetadata *_s10CodingKeysOMa_45()
{
  return &_s10CodingKeysON_37;
}

ValueMetadata *_s10CodingTypeOMa_18()
{
  return &_s10CodingTypeON_18;
}

ValueMetadata *_s10CodingKeysOMa_46()
{
  return &_s10CodingKeysON_38;
}

ValueMetadata *_s10CodingKeysOMa_47()
{
  return &_s10CodingKeysON_39;
}

ValueMetadata *_s10CodingKeysOMa_48()
{
  return &_s10CodingKeysON_40;
}

ValueMetadata *_s10CodingKeysOMa_49()
{
  return &_s10CodingKeysON_41;
}

ValueMetadata *_s10CodingKeysOMa_50()
{
  return &_s10CodingKeysON_42;
}

ValueMetadata *_s10CodingKeysOMa_51()
{
  return &_s10CodingKeysON_43;
}

ValueMetadata *_s10CodingKeysOMa_52()
{
  return &_s10CodingKeysON_44;
}

ValueMetadata *_s10CodingTypeOMa_19()
{
  return &_s10CodingTypeON_19;
}

ValueMetadata *_s10CodingKeysOMa_53()
{
  return &_s10CodingKeysON_45;
}

ValueMetadata *_s10CodingTypeOMa_20()
{
  return &_s10CodingTypeON_20;
}

ValueMetadata *_s10CodingTypeOMa_21()
{
  return &_s10CodingTypeON_21;
}

ValueMetadata *_s10CodingTypeOMa_22()
{
  return &_s10CodingTypeON_22;
}

ValueMetadata *_s10CodingTypeOMa_23()
{
  return &_s10CodingTypeON_23;
}

ValueMetadata *_s10CodingKeysOMa_54()
{
  return &_s10CodingKeysON_46;
}

ValueMetadata *_s10CodingTypeOMa_24()
{
  return &_s10CodingTypeON_24;
}

ValueMetadata *_s10CodingKeysOMa_55()
{
  return &_s10CodingKeysON_47;
}

ValueMetadata *_s10CodingKeysOMa_56()
{
  return &_s10CodingKeysON_48;
}

ValueMetadata *_s10CodingTypeOMa_25()
{
  return &_s10CodingTypeON_25;
}

ValueMetadata *_s10CodingKeysOMa_57()
{
  return &_s10CodingKeysON_49;
}

ValueMetadata *_s10CodingKeysOMa_58()
{
  return &_s10CodingKeysON_50;
}

ValueMetadata *_s10CodingKeysOMa_59()
{
  return &_s10CodingKeysON_51;
}

ValueMetadata *_s10CodingTypeOMa_26()
{
  return &_s10CodingTypeON_26;
}

ValueMetadata *_s10CodingTypeOMa_27()
{
  return &_s10CodingTypeON_27;
}

ValueMetadata *_s10CodingTypeOMa_28()
{
  return &_s10CodingTypeON_28;
}

ValueMetadata *_s10CodingTypeOMa_29()
{
  return &_s10CodingTypeON_29;
}

ValueMetadata *_s10CodingKeysOMa_60()
{
  return &_s10CodingKeysON_52;
}

ValueMetadata *_s10CodingKeysOMa_61()
{
  return &_s10CodingKeysON_53;
}

ValueMetadata *_s10CodingTypeOMa_30()
{
  return &_s10CodingTypeON_30;
}

ValueMetadata *_s10CodingKeysOMa_63()
{
  return &_s10CodingKeysON_54;
}

ValueMetadata *_s14descr1E72CC351C10CodingTypeOMa()
{
  return &_s14descr1E72CC351C10CodingTypeON;
}

ValueMetadata *_s10CodingTypeOMa_31()
{
  return &_s10CodingTypeON_31;
}

ValueMetadata *_s10CodingTypeOMa_32()
{
  return &_s10CodingTypeON_32;
}

ValueMetadata *_s10CodingTypeOMa_33()
{
  return &_s10CodingTypeON_33;
}

ValueMetadata *_s10CodingKeysOMa_64()
{
  return &_s10CodingKeysON_55;
}

ValueMetadata *_s10CodingKeysOMa_65()
{
  return &_s10CodingKeysON_56;
}

ValueMetadata *_s10CodingKeysOMa_66()
{
  return &_s10CodingKeysON_57;
}

ValueMetadata *_s10CodingTypeOMa_34()
{
  return &_s10CodingTypeON_34;
}

ValueMetadata *_s10CodingTypeOMa_35()
{
  return &_s10CodingTypeON_35;
}

ValueMetadata *_s10CodingTypeOMa_36()
{
  return &_s10CodingTypeON_36;
}

ValueMetadata *_s10CodingTypeOMa_37()
{
  return &_s10CodingTypeON_37;
}

ValueMetadata *_s10CodingTypeOMa_38()
{
  return &_s10CodingTypeON_38;
}

ValueMetadata *_s10CodingKeysOMa_67()
{
  return &_s10CodingKeysON_58;
}

ValueMetadata *_s10CodingKeysOMa_68()
{
  return &_s10CodingKeysON_59;
}

ValueMetadata *_s10CodingTypeOMa_39()
{
  return &_s10CodingTypeON_39;
}

ValueMetadata *_s10CodingKeysOMa_69()
{
  return &_s10CodingKeysON_60;
}

ValueMetadata *_s10CodingKeysOMa_70()
{
  return &_s10CodingKeysON_61;
}

ValueMetadata *_s10CodingKeysOMa_71()
{
  return &_s10CodingKeysON_62;
}

uint64_t _s11ItemOptionsOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE2)
    goto LABEL_17;
  if (a2 + 30 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 30) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 30;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 30;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 30;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1F;
  v8 = v6 - 31;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10CodingKeysOwst_13(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 30 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 30) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE1)
    return ((uint64_t (*)(void))((char *)&loc_1BAED166C + 4 * byte_1BB8AFA95[v4]))();
  *a1 = a2 + 30;
  return ((uint64_t (*)(void))((char *)sub_1BAED16A0 + 4 * byte_1BB8AFA90[v4]))();
}

uint64_t sub_1BAED16A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED16A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED16B0);
  return result;
}

uint64_t sub_1BAED16BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED16C4);
  *(_BYTE *)result = a2 + 30;
  return result;
}

uint64_t sub_1BAED16C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED16D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_72()
{
  return &_s10CodingKeysON_63;
}

ValueMetadata *_s10CodingKeysOMa_73()
{
  return &_s10CodingKeysON_64;
}

ValueMetadata *_s10CodingTypeOMa_40()
{
  return &_s10CodingTypeON_40;
}

ValueMetadata *_s10CodingKeysOMa_74()
{
  return &_s10CodingKeysON_65;
}

ValueMetadata *_s10CodingKeysOMa_75()
{
  return &_s10CodingKeysON_66;
}

ValueMetadata *_s10CodingKeysOMa_76()
{
  return &_s10CodingKeysON_67;
}

ValueMetadata *_s10CodingTypeOMa_41()
{
  return &_s10CodingTypeON_41;
}

ValueMetadata *_s10CodingTypeOMa_42()
{
  return &_s10CodingTypeON_42;
}

ValueMetadata *_s10CodingKeysOMa_77()
{
  return &_s10CodingKeysON_68;
}

ValueMetadata *_s10CodingKeysOMa_78()
{
  return &_s10CodingKeysON_69;
}

ValueMetadata *_s10CodingTypeOMa_43()
{
  return &_s10CodingTypeON_43;
}

ValueMetadata *_s10CodingTypeOMa_44()
{
  return &_s10CodingTypeON_44;
}

ValueMetadata *_s10CodingKeysOMa_79()
{
  return &_s10CodingKeysON_70;
}

ValueMetadata *_s10CodingTypeOMa_45()
{
  return &_s10CodingTypeON_45;
}

ValueMetadata *_s10CodingTypeOMa_46()
{
  return &_s10CodingTypeON_46;
}

ValueMetadata *_s14descr1E72CC401O10CodingKeysOMa()
{
  return &_s14descr1E72CC401O10CodingKeysON;
}

ValueMetadata *_s10CodingTypeOMa_47()
{
  return &_s10CodingTypeON_47;
}

ValueMetadata *_s10CodingTypeOMa_48()
{
  return &_s10CodingTypeON_48;
}

ValueMetadata *_s10CodingKeysOMa_80()
{
  return &_s10CodingKeysON_71;
}

ValueMetadata *_s10CodingTypeOMa_49()
{
  return &_s10CodingTypeON_49;
}

ValueMetadata *_s10CodingKeysOMa_81()
{
  return &_s10CodingKeysON_72;
}

ValueMetadata *_s10CodingKeysOMa_82()
{
  return &_s10CodingKeysON_73;
}

ValueMetadata *_s10CodingTypeOMa_50()
{
  return &_s10CodingTypeON_50;
}

ValueMetadata *_s10CodingKeysOMa_83()
{
  return &_s10CodingKeysON_74;
}

ValueMetadata *_s10CodingKeysOMa_84()
{
  return &_s10CodingKeysON_75;
}

ValueMetadata *_s10CodingKeysOMa_85()
{
  return &_s10CodingKeysON_76;
}

ValueMetadata *_s10CodingKeysOMa_87()
{
  return &_s10CodingKeysON_77;
}

ValueMetadata *_s10CodingKeysOMa_88()
{
  return &_s10CodingKeysON_78;
}

ValueMetadata *_s10CodingKeysOMa_89()
{
  return &_s10CodingKeysON_79;
}

ValueMetadata *_s10CodingTypeOMa_51()
{
  return &_s10CodingTypeON_51;
}

ValueMetadata *_s10CodingKeysOMa_90()
{
  return &_s10CodingKeysON_80;
}

ValueMetadata *_s10CodingTypeOMa_52()
{
  return &_s10CodingTypeON_52;
}

ValueMetadata *_s10CodingKeysOMa_91()
{
  return &_s10CodingKeysON_81;
}

ValueMetadata *_s10CodingKeysOMa_92()
{
  return &_s10CodingKeysON_82;
}

ValueMetadata *_s10CodingKeysOMa_93()
{
  return &_s10CodingKeysON_83;
}

ValueMetadata *_s10CodingKeysOMa_94()
{
  return &_s10CodingKeysON_84;
}

ValueMetadata *_s14descr1E72CBEB9O10CodingKeysOMa()
{
  return &_s14descr1E72CBEB9O10CodingKeysON;
}

ValueMetadata *_s14descr1E72CC479V10CodingTypeOMa()
{
  return &_s14descr1E72CC479V10CodingTypeON;
}

ValueMetadata *_s10CodingTypeOMa_53()
{
  return &_s10CodingTypeON_53;
}

ValueMetadata *_s10CodingTypeOMa_54()
{
  return &_s10CodingTypeON_54;
}

ValueMetadata *_s10CodingKeysOMa_95()
{
  return &_s10CodingKeysON_85;
}

ValueMetadata *_s10CodingKeysOMa_96()
{
  return &_s10CodingKeysON_86;
}

ValueMetadata *_s10CodingKeysOMa_97()
{
  return &_s10CodingKeysON_87;
}

ValueMetadata *_s10CodingKeysOMa_98()
{
  return &_s10CodingKeysON_88;
}

ValueMetadata *_s10CodingKeysOMa_99()
{
  return &_s10CodingKeysON_89;
}

ValueMetadata *_s10CodingKeysOMa_100()
{
  return &_s10CodingKeysON_90;
}

ValueMetadata *_s10CodingTypeOMa_55()
{
  return &_s10CodingTypeON_55;
}

ValueMetadata *_s10CodingTypeOMa_56()
{
  return &_s10CodingTypeON_56;
}

ValueMetadata *_s10CodingKeysOMa_101()
{
  return &_s10CodingKeysON_91;
}

ValueMetadata *_s10CodingTypeOMa_57()
{
  return &_s10CodingTypeON_57;
}

ValueMetadata *_s10CodingKeysOMa_102()
{
  return &_s10CodingKeysON_92;
}

ValueMetadata *_s10CodingTypeOMa_58()
{
  return &_s10CodingTypeON_58;
}

ValueMetadata *_s10CodingKeysOMa_103()
{
  return &_s10CodingKeysON_93;
}

ValueMetadata *_s10CodingKeysOMa_104()
{
  return &_s10CodingKeysON_94;
}

ValueMetadata *_s10CodingTypeOMa_59()
{
  return &_s10CodingTypeON_59;
}

ValueMetadata *_s10CodingTypeOMa_60()
{
  return &_s10CodingTypeON_60;
}

ValueMetadata *_s10CodingKeysOMa_105()
{
  return &_s10CodingKeysON_95;
}

ValueMetadata *_s10CodingKeysOMa_106()
{
  return &_s10CodingKeysON_96;
}

ValueMetadata *_s10CodingTypeOMa_61()
{
  return &_s10CodingTypeON_61;
}

ValueMetadata *_s10CodingTypeOMa_62()
{
  return &_s10CodingTypeON_62;
}

ValueMetadata *_s10CodingKeysOMa_107()
{
  return &_s10CodingKeysON_97;
}

ValueMetadata *_s14descr1E72CC509C10CodingKeysOMa()
{
  return &_s14descr1E72CC509C10CodingKeysON;
}

ValueMetadata *_s10CodingKeysOMa_108()
{
  return &_s10CodingKeysON_98;
}

ValueMetadata *_s10CodingKeysOMa_109()
{
  return &_s10CodingKeysON_99;
}

ValueMetadata *_s10CodingTypeOMa_63()
{
  return &_s10CodingTypeON_63;
}

ValueMetadata *_s10CodingKeysOMa_110()
{
  return &_s10CodingKeysON_100;
}

ValueMetadata *_s10CodingTypeOMa_64()
{
  return &_s10CodingTypeON_64;
}

ValueMetadata *_s10CodingKeysOMa_111()
{
  return &_s10CodingKeysON_101;
}

ValueMetadata *_s10CodingKeysOMa_112()
{
  return &_s10CodingKeysON_102;
}

ValueMetadata *_s10CodingKeysOMa_113()
{
  return &_s10CodingKeysON_103;
}

ValueMetadata *_s10CodingTypeOMa_65()
{
  return &_s10CodingTypeON_65;
}

ValueMetadata *_s14descr1E72CBFA1O10CodingKeysOMa()
{
  return &_s14descr1E72CBFA1O10CodingKeysON;
}

ValueMetadata *_s10CodingKeysOMa_114()
{
  return &_s10CodingKeysON_104;
}

ValueMetadata *_s10CodingTypeOMa_66()
{
  return &_s10CodingTypeON_66;
}

ValueMetadata *_s10CodingKeysOMa_115()
{
  return &_s10CodingKeysON_105;
}

ValueMetadata *_s10CodingTypeOMa_67()
{
  return &_s10CodingTypeON_67;
}

ValueMetadata *_s10CodingKeysOMa_116()
{
  return &_s10CodingKeysON_106;
}

ValueMetadata *_s10CodingKeysOMa_117()
{
  return &_s10CodingKeysON_107;
}

ValueMetadata *_s14descr1E72CC571C10CodingTypeOMa()
{
  return &_s14descr1E72CC571C10CodingTypeON;
}

ValueMetadata *_s10CodingKeysOMa_118()
{
  return &_s10CodingKeysON_108;
}

ValueMetadata *_s10CodingKeysOMa_119()
{
  return &_s10CodingKeysON_109;
}

ValueMetadata *_s10CodingKeysOMa_120()
{
  return &_s10CodingKeysON_110;
}

ValueMetadata *_s10CodingTypeOMa_68()
{
  return &_s10CodingTypeON_68;
}

ValueMetadata *_s10CodingTypeOMa_69()
{
  return &_s10CodingTypeON_69;
}

ValueMetadata *_s10CodingTypeOMa_70()
{
  return &_s10CodingTypeON_70;
}

ValueMetadata *_s10CodingTypeOMa_71()
{
  return &_s10CodingTypeON_71;
}

ValueMetadata *_s10CodingTypeOMa_72()
{
  return &_s10CodingTypeON_72;
}

ValueMetadata *_s10CodingTypeOMa_73()
{
  return &_s10CodingTypeON_73;
}

ValueMetadata *_s10CodingTypeOMa_74()
{
  return &_s10CodingTypeON_74;
}

ValueMetadata *_s10CodingKeysOMa_121()
{
  return &_s10CodingKeysON_111;
}

ValueMetadata *_s10CodingKeysOMa_122()
{
  return &_s10CodingKeysON_112;
}

ValueMetadata *_s10CodingKeysOMa_123()
{
  return &_s10CodingKeysON_113;
}

ValueMetadata *_s10CodingKeysOMa_124()
{
  return &_s10CodingKeysON_114;
}

ValueMetadata *_s10CodingTypeOMa_75()
{
  return &_s10CodingTypeON_75;
}

ValueMetadata *_s10CodingKeysOMa_125()
{
  return &_s10CodingKeysON_115;
}

ValueMetadata *_s10CodingTypeOMa_76()
{
  return &_s10CodingTypeON_76;
}

ValueMetadata *_s10CodingKeysOMa_126()
{
  return &_s10CodingKeysON_116;
}

ValueMetadata *_s10CodingKeysOMa_127()
{
  return &_s10CodingKeysON_117;
}

ValueMetadata *_s10CodingTypeOMa_77()
{
  return &_s10CodingTypeON_77;
}

ValueMetadata *_s10CodingKeysOMa_128()
{
  return &_s10CodingKeysON_118;
}

ValueMetadata *_s10CodingKeysOMa_129()
{
  return &_s10CodingKeysON_119;
}

ValueMetadata *_s10CodingTypeOMa_78()
{
  return &_s10CodingTypeON_78;
}

ValueMetadata *_s10CodingTypeOMa_79()
{
  return &_s10CodingTypeON_79;
}

ValueMetadata *_s10CodingTypeOMa_80()
{
  return &_s10CodingTypeON_80;
}

ValueMetadata *_s10CodingTypeOMa_81()
{
  return &_s10CodingTypeON_81;
}

ValueMetadata *_s10CodingTypeOMa_82()
{
  return &_s10CodingTypeON_82;
}

ValueMetadata *_s10CodingTypeOMa_83()
{
  return &_s10CodingTypeON_83;
}

ValueMetadata *_s10CodingTypeOMa_84()
{
  return &_s10CodingTypeON_84;
}

ValueMetadata *_s10CodingTypeOMa_85()
{
  return &_s10CodingTypeON_85;
}

ValueMetadata *_s10CodingTypeOMa_86()
{
  return &_s10CodingTypeON_86;
}

ValueMetadata *_s10CodingKeysOMa_130()
{
  return &_s10CodingKeysON_120;
}

ValueMetadata *_s10CodingKeysOMa_131()
{
  return &_s10CodingKeysON_121;
}

uint64_t _s10CodingKeysOwst_2_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BAED1E28 + 4 * byte_1BB8AFAA9[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BAED1E5C + 4 * byte_1BB8AFAA4[v4]))();
}

uint64_t sub_1BAED1E5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED1E64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED1E6CLL);
  return result;
}

uint64_t sub_1BAED1E78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED1E80);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BAED1E84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED1E8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingTypeOMa_87()
{
  return &_s10CodingTypeON_87;
}

ValueMetadata *_s10CodingKeysOMa_132()
{
  return &_s10CodingKeysON_122;
}

ValueMetadata *_s10CodingKeysOMa_133()
{
  return &_s10CodingKeysON_123;
}

ValueMetadata *_s10CodingKeysOMa_134()
{
  return &_s10CodingKeysON_124;
}

ValueMetadata *_s14descr1E72CBFF1V10CodingKeysOMa()
{
  return &_s14descr1E72CBFF1V10CodingKeysON;
}

ValueMetadata *_s10CodingTypeOMa_88()
{
  return &_s10CodingTypeON_88;
}

ValueMetadata *_s10CodingTypeOMa_89()
{
  return &_s10CodingTypeON_89;
}

ValueMetadata *_s10CodingTypeOMa_90()
{
  return &_s10CodingTypeON_90;
}

ValueMetadata *_s10CodingTypeOMa_91()
{
  return &_s10CodingTypeON_91;
}

ValueMetadata *_s10CodingTypeOMa_92()
{
  return &_s10CodingTypeON_92;
}

ValueMetadata *_s10CodingTypeOMa_93()
{
  return &_s10CodingTypeON_93;
}

ValueMetadata *_s10CodingTypeOMa_94()
{
  return &_s10CodingTypeON_94;
}

ValueMetadata *_s10CodingTypeOMa_95()
{
  return &_s10CodingTypeON_95;
}

ValueMetadata *_s10CodingTypeOMa_96()
{
  return &_s10CodingTypeON_96;
}

ValueMetadata *_s10CodingKeysOMa_135()
{
  return &_s10CodingKeysON_125;
}

ValueMetadata *_s10CodingKeysOMa_136()
{
  return &_s10CodingKeysON_126;
}

ValueMetadata *_s10CodingKeysOMa_137()
{
  return &_s10CodingKeysON_127;
}

ValueMetadata *_s10CodingKeysOMa_138()
{
  return &_s10CodingKeysON_128;
}

ValueMetadata *_s10CodingKeysOMa_139()
{
  return &_s10CodingKeysON_129;
}

ValueMetadata *_s10CodingKeysOMa_140()
{
  return &_s10CodingKeysON_130;
}

ValueMetadata *_s10CodingKeysOMa_141()
{
  return &_s10CodingKeysON_131;
}

ValueMetadata *_s10CodingKeysOMa_142()
{
  return &_s10CodingKeysON_132;
}

ValueMetadata *_s10CodingKeysOMa_143()
{
  return &_s10CodingKeysON_133;
}

ValueMetadata *_s10CodingKeysOMa_144()
{
  return &_s10CodingKeysON_134;
}

ValueMetadata *_s10CodingKeysOMa_145()
{
  return &_s10CodingKeysON_135;
}

ValueMetadata *_s10CodingTypeOMa_97()
{
  return &_s10CodingTypeON_97;
}

ValueMetadata *_s10CodingKeysOMa_146()
{
  return &_s10CodingKeysON_136;
}

ValueMetadata *_s10CodingKeysOMa_147()
{
  return &_s10CodingKeysON_137;
}

ValueMetadata *_s10CodingKeysOMa_148()
{
  return &_s10CodingKeysON_138;
}

ValueMetadata *_s10CodingTypeOMa_98()
{
  return &_s10CodingTypeON_98;
}

ValueMetadata *_s10CodingKeysOMa_149()
{
  return &_s10CodingKeysON_139;
}

ValueMetadata *_s10CodingTypeOMa_99()
{
  return &_s10CodingTypeON_99;
}

ValueMetadata *_s10CodingKeysOMa_150()
{
  return &_s10CodingKeysON_140;
}

ValueMetadata *_s10CodingTypeOMa_100()
{
  return &_s10CodingTypeON_100;
}

uint64_t getEnumTagSinglePayload for FormatBlurEffectStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10CodingKeysOwst_16(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1BAED2194 + 4 * byte_1BB8AFAB3[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1BAED21C8 + 4 * byte_1BB8AFAAE[v4]))();
}

uint64_t sub_1BAED21C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED21D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED21D8);
  return result;
}

uint64_t sub_1BAED21E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED21ECLL);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1BAED21F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED21F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingTypeOMa_101()
{
  return &_s10CodingTypeON_101;
}

ValueMetadata *_s10CodingKeysOMa_151()
{
  return &_s10CodingKeysON_141;
}

ValueMetadata *_s10CodingKeysOMa_152()
{
  return &_s10CodingKeysON_142;
}

ValueMetadata *_s10CodingKeysOMa_153()
{
  return &_s10CodingKeysON_143;
}

ValueMetadata *_s10CodingTypeOMa_102()
{
  return &_s10CodingTypeON_102;
}

ValueMetadata *_s10CodingTypeOMa_103()
{
  return &_s10CodingTypeON_103;
}

ValueMetadata *_s10CodingKeysOMa_154()
{
  return &_s10CodingKeysON_144;
}

ValueMetadata *_s10CodingTypeOMa_104()
{
  return &_s10CodingTypeON_104;
}

ValueMetadata *_s10CodingKeysOMa_155()
{
  return &_s10CodingKeysON_145;
}

ValueMetadata *_s10CodingTypeOMa_105()
{
  return &_s10CodingTypeON_105;
}

ValueMetadata *_s10CodingTypeOMa_106()
{
  return &_s10CodingTypeON_106;
}

ValueMetadata *_s10CodingKeysOMa_156()
{
  return &_s10CodingKeysON_146;
}

ValueMetadata *_s10CodingTypeOMa_107()
{
  return &_s10CodingTypeON_107;
}

ValueMetadata *_s10CodingKeysOMa_157()
{
  return &_s10CodingKeysON_147;
}

ValueMetadata *_s10CodingKeysOMa_158()
{
  return &_s10CodingKeysON_148;
}

ValueMetadata *_s10CodingKeysOMa_159()
{
  return &_s10CodingKeysON_149;
}

ValueMetadata *_s10CodingTypeOMa_108()
{
  return &_s10CodingTypeON_108;
}

ValueMetadata *_s10CodingKeysOMa_160()
{
  return &_s10CodingKeysON_150;
}

ValueMetadata *_s10CodingKeysOMa_161()
{
  return &_s10CodingKeysON_151;
}

ValueMetadata *_s10CodingTypeOMa_109()
{
  return &_s10CodingTypeON_109;
}

ValueMetadata *_s10CodingKeysOMa_162()
{
  return &_s10CodingKeysON_152;
}

ValueMetadata *_s10CodingKeysOMa_163()
{
  return &_s10CodingKeysON_153;
}

ValueMetadata *_s10CodingKeysOMa_164()
{
  return &_s10CodingKeysON_154;
}

ValueMetadata *_s10CodingTypeOMa_110()
{
  return &_s10CodingTypeON_110;
}

ValueMetadata *_s10CodingKeysOMa_166()
{
  return &_s10CodingKeysON_155;
}

ValueMetadata *_s10CodingTypeOMa_111()
{
  return &_s10CodingTypeON_111;
}

ValueMetadata *_s10CodingTypeOMa_112()
{
  return &_s10CodingTypeON_112;
}

ValueMetadata *_s10CodingTypeOMa_113()
{
  return &_s10CodingTypeON_113;
}

ValueMetadata *_s10CodingKeysOMa_168()
{
  return &_s10CodingKeysON_156;
}

ValueMetadata *_s14descr1E72CBE69O10CodingKeysOMa()
{
  return &_s14descr1E72CBE69O10CodingKeysON;
}

ValueMetadata *_s10CodingKeysOMa_169()
{
  return &_s10CodingKeysON_157;
}

ValueMetadata *_s10CodingKeysOMa_170()
{
  return &_s10CodingKeysON_158;
}

ValueMetadata *_s10CodingTypeOMa_114()
{
  return &_s10CodingTypeON_114;
}

ValueMetadata *_s10CodingKeysOMa_171()
{
  return &_s10CodingKeysON_159;
}

ValueMetadata *_s10CodingKeysOMa_172()
{
  return &_s10CodingKeysON_160;
}

ValueMetadata *_s10CodingKeysOMa_173()
{
  return &_s10CodingKeysON_161;
}

ValueMetadata *_s10CodingTypeOMa_115()
{
  return &_s10CodingTypeON_115;
}

ValueMetadata *_s14descr1E72CBC99O10CodingKeysOMa()
{
  return &_s14descr1E72CBC99O10CodingKeysON;
}

ValueMetadata *_s10CodingKeysOMa_174()
{
  return &_s10CodingKeysON_162;
}

ValueMetadata *_s10CodingTypeOMa_116()
{
  return &_s10CodingTypeON_116;
}

ValueMetadata *_s10CodingKeysOMa_175()
{
  return &_s10CodingKeysON_163;
}

ValueMetadata *_s10CodingKeysOMa_176()
{
  return &_s10CodingKeysON_164;
}

ValueMetadata *_s10CodingKeysOMa_177()
{
  return &_s10CodingKeysON_165;
}

ValueMetadata *_s10CodingTypeOMa_117()
{
  return &_s10CodingTypeON_117;
}

ValueMetadata *_s10CodingTypeOMa_118()
{
  return &_s10CodingTypeON_118;
}

ValueMetadata *_s14descr1E72CC7B9O10CodingKeysOMa()
{
  return &_s14descr1E72CC7B9O10CodingKeysON;
}

ValueMetadata *_s10CodingKeysOMa_178()
{
  return &_s10CodingKeysON_166;
}

ValueMetadata *_s10CodingTypeOMa_119()
{
  return &_s10CodingTypeON_119;
}

ValueMetadata *_s10CodingKeysOMa_179()
{
  return &_s10CodingKeysON_167;
}

ValueMetadata *_s10CodingKeysOMa_180()
{
  return &_s10CodingKeysON_168;
}

ValueMetadata *_s10CodingKeysOMa_181()
{
  return &_s10CodingKeysON_169;
}

ValueMetadata *_s10CodingTypeOMa_120()
{
  return &_s10CodingTypeON_120;
}

ValueMetadata *_s10CodingKeysOMa_182()
{
  return &_s10CodingKeysON_170;
}

ValueMetadata *_s14descr1E72CC7E9O10CodingKeysOMa()
{
  return &_s14descr1E72CC7E9O10CodingKeysON;
}

ValueMetadata *_s10CodingTypeOMa_121()
{
  return &_s10CodingTypeON_121;
}

ValueMetadata *_s10CodingKeysOMa_183()
{
  return &_s10CodingKeysON_171;
}

ValueMetadata *_s10CodingKeysOMa_184()
{
  return &_s10CodingKeysON_172;
}

ValueMetadata *_s10CodingKeysOMa_185()
{
  return &_s10CodingKeysON_173;
}

ValueMetadata *_s10CodingKeysOMa_186()
{
  return &_s10CodingKeysON_174;
}

ValueMetadata *_s10CodingKeysOMa_187()
{
  return &_s10CodingKeysON_175;
}

ValueMetadata *_s14descr1E72CC821C10CodingTypeOMa()
{
  return &_s14descr1E72CC821C10CodingTypeON;
}

ValueMetadata *_s10CodingKeysOMa_188()
{
  return &_s10CodingKeysON_176;
}

ValueMetadata *_s10CodingTypeOMa_122()
{
  return &_s10CodingTypeON_122;
}

ValueMetadata *_s10CodingKeysOMa_189()
{
  return &_s10CodingKeysON_177;
}

ValueMetadata *_s10CodingKeysOMa_190()
{
  return &_s10CodingKeysON_178;
}

ValueMetadata *_s10CodingKeysOMa_191()
{
  return &_s10CodingKeysON_179;
}

ValueMetadata *_s10CodingKeysOMa_192()
{
  return &_s10CodingKeysON_180;
}

ValueMetadata *_s10CodingKeysOMa_193()
{
  return &_s10CodingKeysON_181;
}

ValueMetadata *_s10CodingTypeOMa_123()
{
  return &_s10CodingTypeON_123;
}

ValueMetadata *_s10CodingKeysOMa_194()
{
  return &_s10CodingKeysON_182;
}

ValueMetadata *_s10CodingKeysOMa_195()
{
  return &_s10CodingKeysON_183;
}

ValueMetadata *_s10CodingTypeOMa_124()
{
  return &_s10CodingTypeON_124;
}

ValueMetadata *_s10CodingKeysOMa_196()
{
  return &_s10CodingKeysON_184;
}

ValueMetadata *_s10CodingTypeOMa_125()
{
  return &_s10CodingTypeON_125;
}

ValueMetadata *_s10CodingTypeOMa_126()
{
  return &_s10CodingTypeON_126;
}

ValueMetadata *_s10CodingTypeOMa_127()
{
  return &_s10CodingTypeON_127;
}

ValueMetadata *_s10CodingKeysOMa_197()
{
  return &_s10CodingKeysON_185;
}

ValueMetadata *_s10CodingKeysOMa_199()
{
  return &_s10CodingKeysON_186;
}

ValueMetadata *_s10CodingKeysOMa_200()
{
  return &_s10CodingKeysON_187;
}

ValueMetadata *_s10CodingKeysOMa_201()
{
  return &_s10CodingKeysON_188;
}

ValueMetadata *_s10CodingKeysOMa_202()
{
  return &_s10CodingKeysON_189;
}

ValueMetadata *_s10CodingTypeOMa_128()
{
  return &_s10CodingTypeON_128;
}

ValueMetadata *_s10CodingKeysOMa_204()
{
  return &_s10CodingKeysON_190;
}

ValueMetadata *_s10CodingTypeOMa_129()
{
  return &_s10CodingTypeON_129;
}

ValueMetadata *_s14descr1E72CC8B9V10CodingTypeOMa()
{
  return &_s14descr1E72CC8B9V10CodingTypeON;
}

ValueMetadata *_s10CodingTypeOMa_130()
{
  return &_s10CodingTypeON_130;
}

ValueMetadata *_s10CodingTypeOMa_131()
{
  return &_s10CodingTypeON_131;
}

ValueMetadata *_s10CodingTypeOMa_132()
{
  return &_s10CodingTypeON_132;
}

ValueMetadata *_s10CodingTypeOMa_133()
{
  return &_s10CodingTypeON_133;
}

ValueMetadata *_s10CodingKeysOMa_206()
{
  return &_s10CodingKeysON_191;
}

ValueMetadata *_s10CodingTypeOMa_134()
{
  return &_s10CodingTypeON_134;
}

ValueMetadata *_s10CodingTypeOMa_135()
{
  return &_s10CodingTypeON_135;
}

ValueMetadata *_s10CodingKeysOMa_207()
{
  return &_s10CodingKeysON_192;
}

ValueMetadata *_s10CodingTypeOMa_136()
{
  return &_s10CodingTypeON_136;
}

ValueMetadata *_s10CodingTypeOMa_137()
{
  return &_s10CodingTypeON_137;
}

ValueMetadata *_s10CodingKeysOMa_208()
{
  return &_s10CodingKeysON_193;
}

ValueMetadata *_s10CodingTypeOMa_138()
{
  return &_s10CodingTypeON_138;
}

ValueMetadata *_s10CodingKeysOMa_209()
{
  return &_s10CodingKeysON_194;
}

ValueMetadata *_s10CodingKeysOMa_210()
{
  return &_s10CodingKeysON_195;
}

ValueMetadata *_s10CodingTypeOMa_139()
{
  return &_s10CodingTypeON_139;
}

ValueMetadata *_s10CodingTypeOMa_140()
{
  return &_s10CodingTypeON_140;
}

ValueMetadata *_s10CodingTypeOMa_141()
{
  return &_s10CodingTypeON_141;
}

ValueMetadata *_s10CodingKeysOMa_211()
{
  return &_s10CodingKeysON_196;
}

ValueMetadata *_s10CodingTypeOMa_142()
{
  return &_s10CodingTypeON_142;
}

ValueMetadata *_s10CodingKeysOMa_212()
{
  return &_s10CodingKeysON_197;
}

ValueMetadata *_s10CodingTypeOMa_143()
{
  return &_s10CodingTypeON_143;
}

ValueMetadata *_s10CodingTypeOMa_144()
{
  return &_s10CodingTypeON_144;
}

ValueMetadata *_s10CodingKeysOMa_213()
{
  return &_s10CodingKeysON_198;
}

ValueMetadata *_s10CodingKeysOMa_214()
{
  return &_s10CodingKeysON_199;
}

ValueMetadata *_s10CodingTypeOMa_145()
{
  return &_s10CodingTypeON_145;
}

ValueMetadata *_s10CodingTypeOMa_146()
{
  return &_s10CodingTypeON_146;
}

ValueMetadata *_s10CodingTypeOMa_147()
{
  return &_s10CodingTypeON_147;
}

ValueMetadata *_s10CodingTypeOMa_148()
{
  return &_s10CodingTypeON_148;
}

ValueMetadata *_s10CodingTypeOMa_149()
{
  return &_s10CodingTypeON_149;
}

ValueMetadata *_s14descr1E72CBD49V10CodingKeysOMa()
{
  return &_s14descr1E72CBD49V10CodingKeysON;
}

ValueMetadata *_s14descr1E72CC979V10CodingKeysOMa()
{
  return &_s14descr1E72CC979V10CodingKeysON;
}

ValueMetadata *_s10CodingKeysOMa_215()
{
  return &_s10CodingKeysON_200;
}

ValueMetadata *_s10CodingKeysOMa_216()
{
  return &_s10CodingKeysON_201;
}

uint64_t _s10CodingKeysOwst_12_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BAED29B0 + 4 * byte_1BB8AFABD[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BAED29E4 + 4 * byte_1BB8AFAB8[v4]))();
}

uint64_t sub_1BAED29E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED29EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED29F4);
  return result;
}

uint64_t sub_1BAED2A00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED2A08);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BAED2A0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED2A14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_217()
{
  return &_s10CodingKeysON_202;
}

ValueMetadata *_s10CodingKeysOMa_218()
{
  return &_s10CodingKeysON_203;
}

ValueMetadata *_s10CodingKeysOMa_219()
{
  return &_s10CodingKeysON_204;
}

ValueMetadata *_s10CodingTypeOMa_150()
{
  return &_s10CodingTypeON_150;
}

ValueMetadata *_s10CodingTypeOMa_151()
{
  return &_s10CodingTypeON_151;
}

ValueMetadata *_s10CodingKeysOMa_220()
{
  return &_s10CodingKeysON_205;
}

ValueMetadata *_s10CodingKeysOMa_221()
{
  return &_s10CodingKeysON_206;
}

ValueMetadata *_s10CodingTypeOMa_152()
{
  return &_s10CodingTypeON_152;
}

ValueMetadata *_s10CodingTypeOMa_153()
{
  return &_s10CodingTypeON_153;
}

ValueMetadata *_s10CodingKeysOMa_222()
{
  return &_s10CodingKeysON_207;
}

ValueMetadata *_s10CodingKeysOMa_223()
{
  return &_s10CodingKeysON_208;
}

ValueMetadata *_s10CodingTypeOMa_154()
{
  return &_s10CodingTypeON_154;
}

ValueMetadata *_s10CodingKeysOMa_226()
{
  return &_s10CodingKeysON_209;
}

ValueMetadata *_s10CodingKeysOMa_227()
{
  return &_s10CodingKeysON_210;
}

ValueMetadata *_s10CodingKeysOMa_228()
{
  return &_s10CodingKeysON_211;
}

ValueMetadata *_s10CodingKeysOMa_229()
{
  return &_s10CodingKeysON_212;
}

ValueMetadata *_s10CodingKeysOMa_230()
{
  return &_s10CodingKeysON_213;
}

ValueMetadata *_s10CodingTypeOMa_155()
{
  return &_s10CodingTypeON_155;
}

ValueMetadata *_s10CodingKeysOMa_231()
{
  return &_s10CodingKeysON_214;
}

ValueMetadata *_s10CodingTypeOMa_156()
{
  return &_s10CodingTypeON_156;
}

ValueMetadata *_s10CodingKeysOMa_232()
{
  return &_s10CodingKeysON_215;
}

ValueMetadata *_s10CodingKeysOMa_233()
{
  return &_s10CodingKeysON_216;
}

ValueMetadata *_s10CodingKeysOMa_234()
{
  return &_s10CodingKeysON_217;
}

ValueMetadata *_s10CodingKeysOMa_235()
{
  return &_s10CodingKeysON_218;
}

ValueMetadata *_s10CodingTypeOMa_157()
{
  return &_s10CodingTypeON_157;
}

ValueMetadata *_s10CodingTypeOMa_158()
{
  return &_s10CodingTypeON_158;
}

ValueMetadata *_s10CodingKeysOMa_236()
{
  return &_s10CodingKeysON_219;
}

ValueMetadata *_s10CodingKeysOMa_237()
{
  return &_s10CodingKeysON_220;
}

ValueMetadata *_s10CodingKeysOMa_238()
{
  return &_s10CodingKeysON_221;
}

ValueMetadata *_s10CodingTypeOMa_159()
{
  return &_s10CodingTypeON_159;
}

ValueMetadata *_s10CodingKeysOMa_239()
{
  return &_s10CodingKeysON_222;
}

uint64_t _s10CodingKeysOwst_8_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1BAED2C5C + 4 * byte_1BB8AFAD1[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1BAED2C90 + 4 * byte_1BB8AFACC[v4]))();
}

uint64_t sub_1BAED2C90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED2C98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED2CA0);
  return result;
}

uint64_t sub_1BAED2CAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED2CB4);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1BAED2CB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED2CC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_240()
{
  return &_s10CodingKeysON_223;
}

ValueMetadata *_s10CodingTypeOMa_160()
{
  return &_s10CodingTypeON_160;
}

ValueMetadata *_s10CodingTypeOMa_161()
{
  return &_s10CodingTypeON_161;
}

ValueMetadata *_s10CodingTypeOMa_162()
{
  return &_s10CodingTypeON_162;
}

ValueMetadata *_s10CodingTypeOMa_163()
{
  return &_s10CodingTypeON_163;
}

ValueMetadata *_s10CodingKeysOMa_241()
{
  return &_s10CodingKeysON_224;
}

ValueMetadata *_s10CodingKeysOMa_242()
{
  return &_s10CodingKeysON_225;
}

ValueMetadata *_s10CodingKeysOMa_243()
{
  return &_s10CodingKeysON_226;
}

uint64_t _s10CodingKeysOwst_4_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BAED2D98 + 4 * byte_1BB8AFADB[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BAED2DCC + 4 * byte_1BB8AFAD6[v4]))();
}

uint64_t sub_1BAED2DCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED2DD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED2DDCLL);
  return result;
}

uint64_t sub_1BAED2DE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED2DF0);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BAED2DF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED2DFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingTypeOMa_164()
{
  return &_s10CodingTypeON_164;
}

ValueMetadata *_s10CodingTypeOMa_165()
{
  return &_s10CodingTypeON_165;
}

ValueMetadata *_s10CodingKeysOMa_244()
{
  return &_s10CodingKeysON_227;
}

ValueMetadata *_s10CodingKeysOMa_245()
{
  return &_s10CodingKeysON_228;
}

ValueMetadata *_s10CodingKeysOMa_246()
{
  return &_s10CodingKeysON_229;
}

ValueMetadata *_s10CodingKeysOMa_247()
{
  return &_s10CodingKeysON_230;
}

ValueMetadata *_s10CodingTypeOMa_166()
{
  return &_s10CodingTypeON_166;
}

uint64_t _s10CodingKeysOwst_3_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BAED2EC4 + 4 * byte_1BB8AFAE5[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BAED2EF8 + 4 * byte_1BB8AFAE0[v4]))();
}

uint64_t sub_1BAED2EF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED2F00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED2F08);
  return result;
}

uint64_t sub_1BAED2F14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED2F1CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BAED2F20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED2F28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_248()
{
  return &_s10CodingKeysON_231;
}

ValueMetadata *_s10CodingKeysOMa_249()
{
  return &_s10CodingKeysON_232;
}

ValueMetadata *_s10CodingKeysOMa_250()
{
  return &_s10CodingKeysON_233;
}

ValueMetadata *_s10CodingKeysOMa_251()
{
  return &_s10CodingKeysON_234;
}

ValueMetadata *_s10CodingTypeOMa_167()
{
  return &_s10CodingTypeON_167;
}

ValueMetadata *_s10CodingKeysOMa_252()
{
  return &_s10CodingKeysON_235;
}

ValueMetadata *_s10CodingKeysOMa_253()
{
  return &_s10CodingKeysON_236;
}

ValueMetadata *_s10CodingKeysOMa_254()
{
  return &_s10CodingKeysON_237;
}

ValueMetadata *_s10CodingKeysOMa_255()
{
  return &_s10CodingKeysON_238;
}

ValueMetadata *_s10CodingKeysOMa_256()
{
  return &_s10CodingKeysON_239;
}

ValueMetadata *_s10CodingTypeOMa_168()
{
  return &_s10CodingTypeON_168;
}

ValueMetadata *_s10CodingKeysOMa_257()
{
  return &_s10CodingKeysON_240;
}

ValueMetadata *_s10CodingKeysOMa_258()
{
  return &_s10CodingKeysON_241;
}

ValueMetadata *_s10CodingKeysOMa_260()
{
  return &_s10CodingKeysON_242;
}

ValueMetadata *_s10CodingTypeOMa_169()
{
  return &_s10CodingTypeON_169;
}

ValueMetadata *_s10CodingTypeOMa_170()
{
  return &_s10CodingTypeON_170;
}

ValueMetadata *_s10CodingKeysOMa_261()
{
  return &_s10CodingKeysON_243;
}

ValueMetadata *_s10CodingKeysOMa_262()
{
  return &_s10CodingKeysON_244;
}

uint64_t _s5FloatOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10CodingKeysOwst_6_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1BAED3130 + 4 * byte_1BB8AFAEF[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1BAED3164 + 4 * byte_1BB8AFAEA[v4]))();
}

uint64_t sub_1BAED3164(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED316C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED3174);
  return result;
}

uint64_t sub_1BAED3180(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED3188);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1BAED318C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED3194(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_263()
{
  return &_s10CodingKeysON_245;
}

ValueMetadata *_s10CodingTypeOMa_171()
{
  return &_s10CodingTypeON_171;
}

ValueMetadata *_s10CodingKeysOMa_264()
{
  return &_s10CodingKeysON_246;
}

ValueMetadata *_s10CodingKeysOMa_265()
{
  return &_s10CodingKeysON_247;
}

ValueMetadata *_s10CodingTypeOMa_172()
{
  return &_s10CodingTypeON_172;
}

uint64_t _s10CodingKeysOwst_1_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BAED323C + 4 * byte_1BB8AFAF9[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BAED3270 + 4 * byte_1BB8AFAF4[v4]))();
}

uint64_t sub_1BAED3270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED3278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED3280);
  return result;
}

uint64_t sub_1BAED328C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED3294);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BAED3298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED32A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_266()
{
  return &_s10CodingKeysON_248;
}

uint64_t _s10CodingKeysOwst_11_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BAED3308 + 4 * byte_1BB8AFB03[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BAED333C + 4 * byte_1BB8AFAFE[v4]))();
}

uint64_t sub_1BAED333C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED3344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED334CLL);
  return result;
}

uint64_t sub_1BAED3358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED3360);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BAED3364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED336C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E72CCB21V10CodingTypeOMa()
{
  return &_s14descr1E72CCB21V10CodingTypeON;
}

ValueMetadata *_s10CodingKeysOMa_267()
{
  return &_s10CodingKeysON_249;
}

ValueMetadata *_s10CodingTypeOMa_173()
{
  return &_s10CodingTypeON_173;
}

ValueMetadata *_s10CodingTypeOMa_174()
{
  return &_s10CodingTypeON_174;
}

ValueMetadata *_s10CodingTypeOMa_175()
{
  return &_s10CodingTypeON_175;
}

ValueMetadata *_s10CodingTypeOMa_176()
{
  return &_s10CodingTypeON_176;
}

ValueMetadata *_s10CodingTypeOMa_177()
{
  return &_s10CodingTypeON_177;
}

uint64_t _s10CodingKeysOwet_7_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s10CodingKeysOwst_14_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_1BAED34C4 + 4 * byte_1BB8AFB0D[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1BAED34F8 + 4 * byte_1BB8AFB08[v4]))();
}

uint64_t sub_1BAED34F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED3500(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED3508);
  return result;
}

uint64_t sub_1BAED3514(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED351CLL);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_1BAED3520(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED3528(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_268()
{
  return &_s10CodingKeysON_250;
}

ValueMetadata *_s10CodingTypeOMa_178()
{
  return &_s10CodingTypeON_178;
}

ValueMetadata *_s10CodingTypeOMa_179()
{
  return &_s10CodingTypeON_179;
}

ValueMetadata *_s10CodingTypeOMa_180()
{
  return &_s10CodingTypeON_180;
}

ValueMetadata *_s10CodingKeysOMa_269()
{
  return &_s10CodingKeysON_251;
}

ValueMetadata *_s10CodingKeysOMa_270()
{
  return &_s10CodingKeysON_252;
}

ValueMetadata *_s10CodingKeysOMa_271()
{
  return &_s10CodingKeysON_253;
}

ValueMetadata *_s10CodingTypeOMa_181()
{
  return &_s10CodingTypeON_181;
}

ValueMetadata *_s10CodingKeysOMa_272()
{
  return &_s10CodingKeysON_254;
}

uint64_t _s10CodingKeysOwst_15(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1BAED3610 + 4 * byte_1BB8AFB17[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1BAED3644 + 4 * byte_1BB8AFB12[v4]))();
}

uint64_t sub_1BAED3644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED364C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED3654);
  return result;
}

uint64_t sub_1BAED3660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED3668);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1BAED366C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED3674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_273()
{
  return &_s10CodingKeysON_255;
}

ValueMetadata *_s14descr1E72CCB69O10CodingTypeOMa()
{
  return &_s14descr1E72CCB69O10CodingTypeON;
}

ValueMetadata *_s10CodingKeysOMa_274()
{
  return &_s10CodingKeysON_256;
}

uint64_t _s10CodingKeysOwst_0_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BAED36FC + 4 * byte_1BB8AFB21[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BAED3730 + 4 * byte_1BB8AFB1C[v4]))();
}

uint64_t sub_1BAED3730(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED3738(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED3740);
  return result;
}

uint64_t sub_1BAED374C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED3754);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BAED3758(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED3760(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_275()
{
  return &_s10CodingKeysON_257;
}

ValueMetadata *_s10CodingTypeOMa_182()
{
  return &_s10CodingTypeON_182;
}

ValueMetadata *_s10CodingTypeOMa_183()
{
  return &_s10CodingTypeON_183;
}

ValueMetadata *_s10CodingTypeOMa_184()
{
  return &_s10CodingTypeON_184;
}

uint64_t _s10CodingKeysOwst_10_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BAED37F8 + 4 * byte_1BB8AFB2B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BAED382C + 4 * byte_1BB8AFB26[v4]))();
}

uint64_t sub_1BAED382C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED3834(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAED383CLL);
  return result;
}

uint64_t sub_1BAED3848(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAED3850);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BAED3854(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAED385C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_276()
{
  return &_s10CodingKeysON_258;
}

ValueMetadata *_s10CodingTypeOMa_185()
{
  return &_s10CodingTypeON_185;
}

ValueMetadata *_s10CodingKeysOMa_277()
{
  return &_s10CodingKeysON_259;
}

unint64_t sub_1BAED38A0()
{
  unint64_t result;

  result = qword_1EF2B3C78;
  if (!qword_1EF2B3C78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AFE00, &_s10CodingTypeON_185);
    atomic_store(result, (unint64_t *)&qword_1EF2B3C78);
  }
  return result;
}

unint64_t sub_1BAED38EC()
{
  unint64_t result;

  result = qword_1EF2B3C80;
  if (!qword_1EF2B3C80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AFF58, &_s10CodingTypeON_184);
    atomic_store(result, (unint64_t *)&qword_1EF2B3C80);
  }
  return result;
}

unint64_t sub_1BAED3934()
{
  unint64_t result;

  result = qword_1EF2B3C88;
  if (!qword_1EF2B3C88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0020, &_s10CodingTypeON_183);
    atomic_store(result, (unint64_t *)&qword_1EF2B3C88);
  }
  return result;
}

unint64_t sub_1BAED397C()
{
  unint64_t result;

  result = qword_1EF2B3C90;
  if (!qword_1EF2B3C90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B00E8, &_s10CodingTypeON_182);
    atomic_store(result, (unint64_t *)&qword_1EF2B3C90);
  }
  return result;
}

unint64_t sub_1BAED39CC()
{
  unint64_t result;

  result = qword_1EF2B3C98;
  if (!qword_1EF2B3C98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B02D0, &_s14descr1E72CCB69O10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B3C98);
  }
  return result;
}

unint64_t sub_1BAED3A1C()
{
  unint64_t result;

  result = qword_1EF2B3CA0;
  if (!qword_1EF2B3CA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B04B8, &_s10CodingTypeON_181);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CA0);
  }
  return result;
}

unint64_t sub_1BAED3A70()
{
  unint64_t result;

  result = qword_1EF2B3CA8;
  if (!qword_1EF2B3CA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0730, &_s10CodingTypeON_180);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CA8);
  }
  return result;
}

unint64_t sub_1BAED3AB8()
{
  unint64_t result;

  result = qword_1EF2B3CB0;
  if (!qword_1EF2B3CB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B07F8, &_s10CodingTypeON_179);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CB0);
  }
  return result;
}

unint64_t sub_1BAED3B00()
{
  unint64_t result;

  result = qword_1EF2B3CB8;
  if (!qword_1EF2B3CB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B08C0, &_s10CodingTypeON_178);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CB8);
  }
  return result;
}

unint64_t sub_1BAED3B4C()
{
  unint64_t result;

  result = qword_1EF2B3CC0;
  if (!qword_1EF2B3CC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0A18, &_s10CodingTypeON_177);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CC0);
  }
  return result;
}

unint64_t sub_1BAED3B94()
{
  unint64_t result;

  result = qword_1EF2B3CC8;
  if (!qword_1EF2B3CC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0AE0, &_s10CodingTypeON_176);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CC8);
  }
  return result;
}

unint64_t sub_1BAED3BDC()
{
  unint64_t result;

  result = qword_1EF2B3CD0;
  if (!qword_1EF2B3CD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0BA8, &_s10CodingTypeON_175);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CD0);
  }
  return result;
}

unint64_t sub_1BAED3C24()
{
  unint64_t result;

  result = qword_1EF2B3CD8;
  if (!qword_1EF2B3CD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0C70, &_s10CodingTypeON_174);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CD8);
  }
  return result;
}

unint64_t sub_1BAED3C6C()
{
  unint64_t result;

  result = qword_1EF2B3CE0;
  if (!qword_1EF2B3CE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0D38, &_s10CodingTypeON_173);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CE0);
  }
  return result;
}

unint64_t sub_1BAED3CB8()
{
  unint64_t result;

  result = qword_1EF2B3CE8;
  if (!qword_1EF2B3CE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0E90, &_s14descr1E72CCB21V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CE8);
  }
  return result;
}

unint64_t sub_1BAED3D04()
{
  unint64_t result;

  result = qword_1EF2B3CF0;
  if (!qword_1EF2B3CF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0FE8, &_s10CodingTypeON_172);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CF0);
  }
  return result;
}

unint64_t sub_1BAED3D54()
{
  unint64_t result;

  result = qword_1EF2B3CF8;
  if (!qword_1EF2B3CF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B11D0, &_s10CodingTypeON_171);
    atomic_store(result, (unint64_t *)&qword_1EF2B3CF8);
  }
  return result;
}

unint64_t sub_1BAED3DA8()
{
  unint64_t result;

  result = qword_1EF2B3D00;
  if (!qword_1EF2B3D00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1448, &_s10CodingTypeON_170);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D00);
  }
  return result;
}

unint64_t sub_1BAED3DF0()
{
  unint64_t result;

  result = qword_1EF2B3D08;
  if (!qword_1EF2B3D08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1510, &_s10CodingTypeON_169);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D08);
  }
  return result;
}

void sub_1BAED3E38()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED3E54()
{
  unint64_t result;

  result = qword_1EF2B3D10;
  if (!qword_1EF2B3D10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1818, &_s10CodingTypeON_168);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D10);
  }
  return result;
}

unint64_t sub_1BAED3EB0()
{
  unint64_t result;

  result = qword_1EF2B3D18;
  if (!qword_1EF2B3D18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1BB0, &_s10CodingTypeON_167);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D18);
  }
  return result;
}

unint64_t sub_1BAED3F08()
{
  unint64_t result;

  result = qword_1EF2B3D20;
  if (!qword_1EF2B3D20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1EB8, &_s10CodingTypeON_166);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D20);
  }
  return result;
}

unint64_t sub_1BAED3F60()
{
  unint64_t result;

  result = qword_1EF2B3D28;
  if (!qword_1EF2B3D28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B21C0, &_s10CodingTypeON_165);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D28);
  }
  return result;
}

unint64_t sub_1BAED3FA8()
{
  unint64_t result;

  result = qword_1EF2B3D30;
  if (!qword_1EF2B3D30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2288, &_s10CodingTypeON_164);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D30);
  }
  return result;
}

unint64_t sub_1BAED3FFC()
{
  unint64_t result;

  result = qword_1EF2B3D38;
  if (!qword_1EF2B3D38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2500, &_s10CodingTypeON_163);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D38);
  }
  return result;
}

unint64_t sub_1BAED4044()
{
  unint64_t result;

  result = qword_1EF2B3D40;
  if (!qword_1EF2B3D40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B25C8, &_s10CodingTypeON_162);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D40);
  }
  return result;
}

unint64_t sub_1BAED408C()
{
  unint64_t result;

  result = qword_1EF2B3D48;
  if (!qword_1EF2B3D48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2690, &_s10CodingTypeON_161);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D48);
  }
  return result;
}

unint64_t sub_1BAED40D4()
{
  unint64_t result;

  result = qword_1EF2B3D50;
  if (!qword_1EF2B3D50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2758, &_s10CodingTypeON_160);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D50);
  }
  return result;
}

unint64_t sub_1BAED4124()
{
  unint64_t result;

  result = qword_1EF2B3D58;
  if (!qword_1EF2B3D58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2940, &_s10CodingTypeON_159);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D58);
  }
  return result;
}

unint64_t sub_1BAED4178()
{
  unint64_t result;

  result = qword_1EF2B3D60;
  if (!qword_1EF2B3D60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2BB8, &_s10CodingTypeON_158);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D60);
  }
  return result;
}

unint64_t sub_1BAED41C0()
{
  unint64_t result;

  result = qword_1EF2B3D68;
  if (!qword_1EF2B3D68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2C80, &_s10CodingTypeON_157);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D68);
  }
  return result;
}

unint64_t sub_1BAED4218()
{
  unint64_t result;

  result = qword_1EF2B3D70;
  if (!qword_1EF2B3D70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2F88, &_s10CodingTypeON_156);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D70);
  }
  return result;
}

unint64_t sub_1BAED4264()
{
  unint64_t result;

  result = qword_1EF2B3D78;
  if (!qword_1EF2B3D78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B30E0, &_s10CodingTypeON_155);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D78);
  }
  return result;
}

void sub_1BAED42BC()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAED42CC()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED42E0()
{
  unint64_t result;

  result = qword_1EF2B3D80;
  if (!qword_1EF2B3D80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3598, &_s10CodingTypeON_154);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D80);
  }
  return result;
}

unint64_t sub_1BAED4330()
{
  unint64_t result;

  result = qword_1EF2B3D88;
  if (!qword_1EF2B3D88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3780, &_s10CodingTypeON_153);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D88);
  }
  return result;
}

unint64_t sub_1BAED4378()
{
  unint64_t result;

  result = qword_1EF2B3D90;
  if (!qword_1EF2B3D90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3848, &_s10CodingTypeON_152);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D90);
  }
  return result;
}

unint64_t sub_1BAED43C8()
{
  unint64_t result;

  result = qword_1EF2B3D98;
  if (!qword_1EF2B3D98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3A30, &_s10CodingTypeON_151);
    atomic_store(result, (unint64_t *)&qword_1EF2B3D98);
  }
  return result;
}

unint64_t sub_1BAED4410()
{
  unint64_t result;

  result = qword_1EF2B3DA0;
  if (!qword_1EF2B3DA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3AF8, &_s10CodingTypeON_150);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DA0);
  }
  return result;
}

unint64_t sub_1BAED4474()
{
  unint64_t result;

  result = qword_1EF2B3DA8;
  if (!qword_1EF2B3DA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3FB0, &_s10CodingTypeON_149);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DA8);
  }
  return result;
}

unint64_t sub_1BAED44BC()
{
  unint64_t result;

  result = qword_1EF2B3DB0;
  if (!qword_1EF2B3DB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4078, &_s10CodingTypeON_148);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DB0);
  }
  return result;
}

unint64_t sub_1BAED4504()
{
  unint64_t result;

  result = qword_1EF2B3DB8;
  if (!qword_1EF2B3DB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4140, &_s10CodingTypeON_147);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DB8);
  }
  return result;
}

unint64_t sub_1BAED454C()
{
  unint64_t result;

  result = qword_1EF2B3DC0;
  if (!qword_1EF2B3DC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4208, &_s10CodingTypeON_146);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DC0);
  }
  return result;
}

unint64_t sub_1BAED4594()
{
  unint64_t result;

  result = qword_1EF2B3DC8;
  if (!qword_1EF2B3DC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B42D0, &_s10CodingTypeON_145);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DC8);
  }
  return result;
}

unint64_t sub_1BAED45E4()
{
  unint64_t result;

  result = qword_1EF2B3DD0;
  if (!qword_1EF2B3DD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B44B8, &_s10CodingTypeON_144);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DD0);
  }
  return result;
}

unint64_t sub_1BAED462C()
{
  unint64_t result;

  result = qword_1EF2B3DD8;
  if (!qword_1EF2B3DD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4580, &_s10CodingTypeON_143);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DD8);
  }
  return result;
}

unint64_t sub_1BAED4678()
{
  unint64_t result;

  result = qword_1EF2B3DE0;
  if (!qword_1EF2B3DE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B46D8, &_s10CodingTypeON_142);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DE0);
  }
  return result;
}

unint64_t sub_1BAED46C4()
{
  unint64_t result;

  result = qword_1EF2B3DE8;
  if (!qword_1EF2B3DE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4830, &_s10CodingTypeON_141);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DE8);
  }
  return result;
}

unint64_t sub_1BAED470C()
{
  unint64_t result;

  result = qword_1EF2B3DF0;
  if (!qword_1EF2B3DF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B48F8, &_s10CodingTypeON_140);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DF0);
  }
  return result;
}

unint64_t sub_1BAED4754()
{
  unint64_t result;

  result = qword_1EF2B3DF8;
  if (!qword_1EF2B3DF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B49C0, &_s10CodingTypeON_139);
    atomic_store(result, (unint64_t *)&qword_1EF2B3DF8);
  }
  return result;
}

unint64_t sub_1BAED47A4()
{
  unint64_t result;

  result = qword_1EF2B3E00;
  if (!qword_1EF2B3E00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4BA8, &_s10CodingTypeON_138);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E00);
  }
  return result;
}

unint64_t sub_1BAED47F0()
{
  unint64_t result;

  result = qword_1EF2B3E08;
  if (!qword_1EF2B3E08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4D00, &_s10CodingTypeON_137);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E08);
  }
  return result;
}

unint64_t sub_1BAED4838()
{
  unint64_t result;

  result = qword_1EF2B3E10;
  if (!qword_1EF2B3E10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4DC8, &_s10CodingTypeON_136);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E10);
  }
  return result;
}

unint64_t sub_1BAED4884()
{
  unint64_t result;

  result = qword_1EF2B3E18;
  if (!qword_1EF2B3E18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4F20, &_s10CodingTypeON_135);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E18);
  }
  return result;
}

unint64_t sub_1BAED48CC()
{
  unint64_t result;

  result = qword_1EF2B3E20;
  if (!qword_1EF2B3E20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4FE8, &_s10CodingTypeON_134);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E20);
  }
  return result;
}

unint64_t sub_1BAED4918()
{
  unint64_t result;

  result = qword_1EF2B3E28;
  if (!qword_1EF2B3E28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5140, &_s10CodingTypeON_133);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E28);
  }
  return result;
}

unint64_t sub_1BAED4960()
{
  unint64_t result;

  result = qword_1EF2B3E30;
  if (!qword_1EF2B3E30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5208, &_s10CodingTypeON_132);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E30);
  }
  return result;
}

unint64_t sub_1BAED49A8()
{
  unint64_t result;

  result = qword_1EF2B3E38;
  if (!qword_1EF2B3E38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B52D0, &_s10CodingTypeON_131);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E38);
  }
  return result;
}

unint64_t sub_1BAED49F0()
{
  unint64_t result;

  result = qword_1EF2B3E40;
  if (!qword_1EF2B3E40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5398, &_s10CodingTypeON_130);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E40);
  }
  return result;
}

unint64_t sub_1BAED4A38()
{
  unint64_t result;

  result = qword_1EF2B3E48;
  if (!qword_1EF2B3E48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5460, &_s14descr1E72CC8B9V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E48);
  }
  return result;
}

void sub_1BAED4A7C()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED4A90()
{
  unint64_t result;

  result = qword_1EF2B3E50;
  if (!qword_1EF2B3E50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B55B8, &_s10CodingTypeON_129);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E50);
  }
  return result;
}

unint64_t sub_1BAED4ADC()
{
  unint64_t result;

  result = qword_1EF2B3E58;
  if (!qword_1EF2B3E58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5710, &_s10CodingTypeON_128);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E58);
  }
  return result;
}

void sub_1BAED4B20()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAED4B40()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED4B58()
{
  unint64_t result;

  result = qword_1EF2B3E60;
  if (!qword_1EF2B3E60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5BC8, &_s10CodingTypeON_127);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E60);
  }
  return result;
}

unint64_t sub_1BAED4BA0()
{
  unint64_t result;

  result = qword_1EF2B3E68;
  if (!qword_1EF2B3E68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5C90, &_s10CodingTypeON_126);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E68);
  }
  return result;
}

unint64_t sub_1BAED4BE8()
{
  unint64_t result;

  result = qword_1EF2B3E70;
  if (!qword_1EF2B3E70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5D58, &_s10CodingTypeON_125);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E70);
  }
  return result;
}

unint64_t sub_1BAED4C34()
{
  unint64_t result;

  result = qword_1EF2B3E78;
  if (!qword_1EF2B3E78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5EB0, &_s10CodingTypeON_124);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E78);
  }
  return result;
}

unint64_t sub_1BAED4C84()
{
  unint64_t result;

  result = qword_1EF2B3E80;
  if (!qword_1EF2B3E80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6098, &_s10CodingTypeON_123);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E80);
  }
  return result;
}

unint64_t sub_1BAED4CE0()
{
  unint64_t result;

  result = qword_1EF2B3E88;
  if (!qword_1EF2B3E88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6430, &_s10CodingTypeON_122);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E88);
  }
  return result;
}

unint64_t sub_1BAED4D2C()
{
  unint64_t result;

  result = qword_1EF2B3E90;
  if (!qword_1EF2B3E90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6588, &_s14descr1E72CC821C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E90);
  }
  return result;
}

unint64_t sub_1BAED4D88()
{
  unint64_t result;

  result = qword_1EF2B3E98;
  if (!qword_1EF2B3E98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6920, &_s10CodingTypeON_121);
    atomic_store(result, (unint64_t *)&qword_1EF2B3E98);
  }
  return result;
}

unint64_t sub_1BAED4DD8()
{
  unint64_t result;

  result = qword_1EF2B3EA0;
  if (!qword_1EF2B3EA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6B08, &_s10CodingTypeON_120);
    atomic_store(result, (unint64_t *)&qword_1EF2B3EA0);
  }
  return result;
}

unint64_t sub_1BAED4E2C()
{
  unint64_t result;

  result = qword_1EF2B3EA8;
  if (!qword_1EF2B3EA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6D80, &_s10CodingTypeON_119);
    atomic_store(result, (unint64_t *)&qword_1EF2B3EA8);
  }
  return result;
}

unint64_t sub_1BAED4E7C()
{
  unint64_t result;

  result = qword_1EF2B3EB0;
  if (!qword_1EF2B3EB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6F68, &_s10CodingTypeON_118);
    atomic_store(result, (unint64_t *)&qword_1EF2B3EB0);
  }
  return result;
}

unint64_t sub_1BAED4EC4()
{
  unint64_t result;

  result = qword_1EF2B3EB8;
  if (!qword_1EF2B3EB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7030, &_s10CodingTypeON_117);
    atomic_store(result, (unint64_t *)&qword_1EF2B3EB8);
  }
  return result;
}

unint64_t sub_1BAED4F18()
{
  unint64_t result;

  result = qword_1EF2B3EC0;
  if (!qword_1EF2B3EC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B72A8, &_s10CodingTypeON_116);
    atomic_store(result, (unint64_t *)&qword_1EF2B3EC0);
  }
  return result;
}

unint64_t sub_1BAED4F68()
{
  unint64_t result;

  result = qword_1EF2B3EC8;
  if (!qword_1EF2B3EC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7490, &_s10CodingTypeON_115);
    atomic_store(result, (unint64_t *)&qword_1EF2B3EC8);
  }
  return result;
}

unint64_t sub_1BAED4FBC()
{
  unint64_t result;

  result = qword_1EF2B3ED0;
  if (!qword_1EF2B3ED0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7708, &_s10CodingTypeON_114);
    atomic_store(result, (unint64_t *)&qword_1EF2B3ED0);
  }
  return result;
}

unint64_t sub_1BAED5014()
{
  unint64_t result;

  result = qword_1EF2B3ED8;
  if (!qword_1EF2B3ED8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7A10, &_s10CodingTypeON_113);
    atomic_store(result, (unint64_t *)&qword_1EF2B3ED8);
  }
  return result;
}

unint64_t sub_1BAED505C()
{
  unint64_t result;

  result = qword_1EF2B3EE0;
  if (!qword_1EF2B3EE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7AD8, &_s10CodingTypeON_112);
    atomic_store(result, (unint64_t *)&qword_1EF2B3EE0);
  }
  return result;
}

unint64_t sub_1BAED50A4()
{
  unint64_t result;

  result = qword_1EF2B3EE8;
  if (!qword_1EF2B3EE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7BA0, &_s10CodingTypeON_111);
    atomic_store(result, (unint64_t *)&qword_1EF2B3EE8);
  }
  return result;
}

void sub_1BAED50E8()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAED50FC()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED5110()
{
  unint64_t result;

  result = qword_1EF2B3EF0;
  if (!qword_1EF2B3EF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7E18, &_s10CodingTypeON_110);
    atomic_store(result, (unint64_t *)&qword_1EF2B3EF0);
  }
  return result;
}

unint64_t sub_1BAED5164()
{
  unint64_t result;

  result = qword_1EF2B3EF8;
  if (!qword_1EF2B3EF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8090, &_s10CodingTypeON_109);
    atomic_store(result, (unint64_t *)&qword_1EF2B3EF8);
  }
  return result;
}

unint64_t sub_1BAED51B4()
{
  unint64_t result;

  result = qword_1EF2B3F00;
  if (!qword_1EF2B3F00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8278, &_s10CodingTypeON_108);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F00);
  }
  return result;
}

unint64_t sub_1BAED5208()
{
  unint64_t result;

  result = qword_1EF2B3F08;
  if (!qword_1EF2B3F08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B84F0, &_s10CodingTypeON_107);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F08);
  }
  return result;
}

unint64_t sub_1BAED5254()
{
  unint64_t result;

  result = qword_1EF2B3F10;
  if (!qword_1EF2B3F10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8648, &_s10CodingTypeON_106);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F10);
  }
  return result;
}

unint64_t sub_1BAED529C()
{
  unint64_t result;

  result = qword_1EF2B3F18;
  if (!qword_1EF2B3F18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8710, &_s10CodingTypeON_105);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F18);
  }
  return result;
}

unint64_t sub_1BAED52E8()
{
  unint64_t result;

  result = qword_1EF2B3F20;
  if (!qword_1EF2B3F20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8868, &_s10CodingTypeON_104);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F20);
  }
  return result;
}

unint64_t sub_1BAED5334()
{
  unint64_t result;

  result = qword_1EF2B3F28;
  if (!qword_1EF2B3F28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B89C0, &_s10CodingTypeON_103);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F28);
  }
  return result;
}

unint64_t sub_1BAED537C()
{
  unint64_t result;

  result = qword_1EF2B3F30;
  if (!qword_1EF2B3F30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8A88, &_s10CodingTypeON_102);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F30);
  }
  return result;
}

unint64_t sub_1BAED53D0()
{
  unint64_t result;

  result = qword_1EF2B3F38;
  if (!qword_1EF2B3F38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8D00, &_s10CodingTypeON_101);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F38);
  }
  return result;
}

unint64_t sub_1BAED5418()
{
  unint64_t result;

  result = qword_1EF2B3F40;
  if (!qword_1EF2B3F40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8DC8, &_s10CodingTypeON_100);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F40);
  }
  return result;
}

unint64_t sub_1BAED5464()
{
  unint64_t result;

  result = qword_1EF2B3F48;
  if (!qword_1EF2B3F48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8F20, &_s10CodingTypeON_99);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F48);
  }
  return result;
}

unint64_t sub_1BAED54B0()
{
  unint64_t result;

  result = qword_1EF2B3F50;
  if (!qword_1EF2B3F50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9078, &_s10CodingTypeON_98);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F50);
  }
  return result;
}

unint64_t sub_1BAED5504()
{
  unint64_t result;

  result = qword_1EF2B3F58;
  if (!qword_1EF2B3F58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B92F0, &_s10CodingTypeON_97);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F58);
  }
  return result;
}

unint64_t sub_1BAED5578()
{
  unint64_t result;

  result = qword_1EF2B3F60;
  if (!qword_1EF2B3F60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B99E8, &_s10CodingTypeON_96);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F60);
  }
  return result;
}

unint64_t sub_1BAED55C0()
{
  unint64_t result;

  result = qword_1EF2B3F68;
  if (!qword_1EF2B3F68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9AB0, &_s10CodingTypeON_95);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F68);
  }
  return result;
}

unint64_t sub_1BAED5608()
{
  unint64_t result;

  result = qword_1EF2B3F70;
  if (!qword_1EF2B3F70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9B78, &_s10CodingTypeON_94);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F70);
  }
  return result;
}

unint64_t sub_1BAED5650()
{
  unint64_t result;

  result = qword_1EF2B3F78;
  if (!qword_1EF2B3F78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9C40, &_s10CodingTypeON_93);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F78);
  }
  return result;
}

unint64_t sub_1BAED5698()
{
  unint64_t result;

  result = qword_1EF2B3F80;
  if (!qword_1EF2B3F80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9D08, &_s10CodingTypeON_92);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F80);
  }
  return result;
}

unint64_t sub_1BAED56E0()
{
  unint64_t result;

  result = qword_1EF2B3F88;
  if (!qword_1EF2B3F88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9DD0, &_s10CodingTypeON_91);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F88);
  }
  return result;
}

unint64_t sub_1BAED5728()
{
  unint64_t result;

  result = qword_1EF2B3F90;
  if (!qword_1EF2B3F90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9E98, &_s10CodingTypeON_90);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F90);
  }
  return result;
}

unint64_t sub_1BAED5770()
{
  unint64_t result;

  result = qword_1EF2B3F98;
  if (!qword_1EF2B3F98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9F60, &_s10CodingTypeON_89);
    atomic_store(result, (unint64_t *)&qword_1EF2B3F98);
  }
  return result;
}

unint64_t sub_1BAED57B8()
{
  unint64_t result;

  result = qword_1EF2B3FA0;
  if (!qword_1EF2B3FA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA028, &_s10CodingTypeON_88);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FA0);
  }
  return result;
}

unint64_t sub_1BAED5810()
{
  unint64_t result;

  result = qword_1EF2B3FA8;
  if (!qword_1EF2B3FA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA330, &_s10CodingTypeON_87);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FA8);
  }
  return result;
}

unint64_t sub_1BAED5860()
{
  unint64_t result;

  result = qword_1EF2B3FB0;
  if (!qword_1EF2B3FB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA518, &_s10CodingTypeON_86);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FB0);
  }
  return result;
}

unint64_t sub_1BAED58A8()
{
  unint64_t result;

  result = qword_1EF2B3FB8;
  if (!qword_1EF2B3FB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA5E0, &_s10CodingTypeON_85);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FB8);
  }
  return result;
}

unint64_t sub_1BAED58F0()
{
  unint64_t result;

  result = qword_1EF2B3FC0;
  if (!qword_1EF2B3FC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA6A8, &_s10CodingTypeON_84);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FC0);
  }
  return result;
}

unint64_t sub_1BAED5938()
{
  unint64_t result;

  result = qword_1EF2B3FC8;
  if (!qword_1EF2B3FC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA770, &_s10CodingTypeON_83);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FC8);
  }
  return result;
}

unint64_t sub_1BAED5980()
{
  unint64_t result;

  result = qword_1EF2B3FD0;
  if (!qword_1EF2B3FD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA838, &_s10CodingTypeON_82);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FD0);
  }
  return result;
}

unint64_t sub_1BAED59C8()
{
  unint64_t result;

  result = qword_1EF2B3FD8;
  if (!qword_1EF2B3FD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA900, &_s10CodingTypeON_81);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FD8);
  }
  return result;
}

unint64_t sub_1BAED5A10()
{
  unint64_t result;

  result = qword_1EF2B3FE0;
  if (!qword_1EF2B3FE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA9C8, &_s10CodingTypeON_80);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FE0);
  }
  return result;
}

unint64_t sub_1BAED5A58()
{
  unint64_t result;

  result = qword_1EF2B3FE8;
  if (!qword_1EF2B3FE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAA90, &_s10CodingTypeON_79);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FE8);
  }
  return result;
}

unint64_t sub_1BAED5AA0()
{
  unint64_t result;

  result = qword_1EF2B3FF0;
  if (!qword_1EF2B3FF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAB58, &_s10CodingTypeON_78);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FF0);
  }
  return result;
}

unint64_t sub_1BAED5AF0()
{
  unint64_t result;

  result = qword_1EF2B3FF8;
  if (!qword_1EF2B3FF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAD40, &_s10CodingTypeON_77);
    atomic_store(result, (unint64_t *)&qword_1EF2B3FF8);
  }
  return result;
}

unint64_t sub_1BAED5B40()
{
  unint64_t result;

  result = qword_1EF2B4000;
  if (!qword_1EF2B4000)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAF28, &_s10CodingTypeON_76);
    atomic_store(result, (unint64_t *)&qword_1EF2B4000);
  }
  return result;
}

unint64_t sub_1BAED5B8C()
{
  unint64_t result;

  result = qword_1EF2B4008;
  if (!qword_1EF2B4008)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB080, &_s10CodingTypeON_75);
    atomic_store(result, (unint64_t *)&qword_1EF2B4008);
  }
  return result;
}

unint64_t sub_1BAED5BE4()
{
  unint64_t result;

  result = qword_1EF2B4010;
  if (!qword_1EF2B4010)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB388, &_s10CodingTypeON_74);
    atomic_store(result, (unint64_t *)&qword_1EF2B4010);
  }
  return result;
}

unint64_t sub_1BAED5C2C()
{
  unint64_t result;

  result = qword_1EF2B4018;
  if (!qword_1EF2B4018)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB450, &_s10CodingTypeON_73);
    atomic_store(result, (unint64_t *)&qword_1EF2B4018);
  }
  return result;
}

unint64_t sub_1BAED5C74()
{
  unint64_t result;

  result = qword_1EF2B4020;
  if (!qword_1EF2B4020)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB518, &_s10CodingTypeON_72);
    atomic_store(result, (unint64_t *)&qword_1EF2B4020);
  }
  return result;
}

unint64_t sub_1BAED5CBC()
{
  unint64_t result;

  result = qword_1EF2B4028;
  if (!qword_1EF2B4028)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB5E0, &_s10CodingTypeON_71);
    atomic_store(result, (unint64_t *)&qword_1EF2B4028);
  }
  return result;
}

unint64_t sub_1BAED5D04()
{
  unint64_t result;

  result = qword_1EF2B4030;
  if (!qword_1EF2B4030)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB6A8, &_s10CodingTypeON_70);
    atomic_store(result, (unint64_t *)&qword_1EF2B4030);
  }
  return result;
}

unint64_t sub_1BAED5D4C()
{
  unint64_t result;

  result = qword_1EF2B4038;
  if (!qword_1EF2B4038)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB770, &_s10CodingTypeON_69);
    atomic_store(result, (unint64_t *)&qword_1EF2B4038);
  }
  return result;
}

unint64_t sub_1BAED5D94()
{
  unint64_t result;

  result = qword_1EF2B4040;
  if (!qword_1EF2B4040)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB838, &_s10CodingTypeON_68);
    atomic_store(result, (unint64_t *)&qword_1EF2B4040);
  }
  return result;
}

unint64_t sub_1BAED5DE8()
{
  unint64_t result;

  result = qword_1EF2B4048;
  if (!qword_1EF2B4048)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBAB0, &_s14descr1E72CC571C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B4048);
  }
  return result;
}

unint64_t sub_1BAED5E38()
{
  unint64_t result;

  result = qword_1EF2B4050;
  if (!qword_1EF2B4050)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBC98, &_s10CodingTypeON_67);
    atomic_store(result, (unint64_t *)&qword_1EF2B4050);
  }
  return result;
}

unint64_t sub_1BAED5E84()
{
  unint64_t result;

  result = qword_1EF2B4058;
  if (!qword_1EF2B4058)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBDF0, &_s10CodingTypeON_66);
    atomic_store(result, (unint64_t *)&qword_1EF2B4058);
  }
  return result;
}

unint64_t sub_1BAED5ED4()
{
  unint64_t result;

  result = qword_1EF2B4060;
  if (!qword_1EF2B4060)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBFD8, &_s10CodingTypeON_65);
    atomic_store(result, (unint64_t *)&qword_1EF2B4060);
  }
  return result;
}

unint64_t sub_1BAED5F28()
{
  unint64_t result;

  result = qword_1EF2B4068;
  if (!qword_1EF2B4068)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC250, &_s10CodingTypeON_64);
    atomic_store(result, (unint64_t *)&qword_1EF2B4068);
  }
  return result;
}

unint64_t sub_1BAED5F74()
{
  unint64_t result;

  result = qword_1EF2B4070;
  if (!qword_1EF2B4070)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC3A8, &_s10CodingTypeON_63);
    atomic_store(result, (unint64_t *)&qword_1EF2B4070);
  }
  return result;
}

unint64_t sub_1BAED5FCC()
{
  unint64_t result;

  result = qword_1EF2B4078;
  if (!qword_1EF2B4078)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC6B0, &_s10CodingTypeON_62);
    atomic_store(result, (unint64_t *)&qword_1EF2B4078);
  }
  return result;
}

unint64_t sub_1BAED6014()
{
  unint64_t result;

  result = qword_1EF2B4080;
  if (!qword_1EF2B4080)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC778, &_s10CodingTypeON_61);
    atomic_store(result, (unint64_t *)&qword_1EF2B4080);
  }
  return result;
}

unint64_t sub_1BAED6064()
{
  unint64_t result;

  result = qword_1EF2B4088;
  if (!qword_1EF2B4088)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC960, &_s10CodingTypeON_60);
    atomic_store(result, (unint64_t *)&qword_1EF2B4088);
  }
  return result;
}

unint64_t sub_1BAED60AC()
{
  unint64_t result;

  result = qword_1EF2B4090;
  if (!qword_1EF2B4090)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCA28, &_s10CodingTypeON_59);
    atomic_store(result, (unint64_t *)&qword_1EF2B4090);
  }
  return result;
}

unint64_t sub_1BAED60FC()
{
  unint64_t result;

  result = qword_1EF2B4098;
  if (!qword_1EF2B4098)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCC10, &_s10CodingTypeON_58);
    atomic_store(result, (unint64_t *)&qword_1EF2B4098);
  }
  return result;
}

unint64_t sub_1BAED6148()
{
  unint64_t result;

  result = qword_1EF2B40A0;
  if (!qword_1EF2B40A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCD68, &_s10CodingTypeON_57);
    atomic_store(result, (unint64_t *)&qword_1EF2B40A0);
  }
  return result;
}

unint64_t sub_1BAED6194()
{
  unint64_t result;

  result = qword_1EF2B40A8;
  if (!qword_1EF2B40A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCEC0, &_s10CodingTypeON_56);
    atomic_store(result, (unint64_t *)&qword_1EF2B40A8);
  }
  return result;
}

unint64_t sub_1BAED61DC()
{
  unint64_t result;

  result = qword_1EF2B40B0;
  if (!qword_1EF2B40B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCF88, &_s10CodingTypeON_55);
    atomic_store(result, (unint64_t *)&qword_1EF2B40B0);
  }
  return result;
}

unint64_t sub_1BAED623C()
{
  unint64_t result;

  result = qword_1EF2B40B8;
  if (!qword_1EF2B40B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD3B0, &_s10CodingTypeON_54);
    atomic_store(result, (unint64_t *)&qword_1EF2B40B8);
  }
  return result;
}

unint64_t sub_1BAED6284()
{
  unint64_t result;

  result = qword_1EF2B40C0;
  if (!qword_1EF2B40C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD478, &_s10CodingTypeON_53);
    atomic_store(result, (unint64_t *)&qword_1EF2B40C0);
  }
  return result;
}

unint64_t sub_1BAED62CC()
{
  unint64_t result;

  result = qword_1EF2B40C8;
  if (!qword_1EF2B40C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD540, &_s14descr1E72CC479V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B40C8);
  }
  return result;
}

unint64_t sub_1BAED6328()
{
  unint64_t result;

  result = qword_1EF2B40D0;
  if (!qword_1EF2B40D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD8D8, &_s10CodingTypeON_52);
    atomic_store(result, (unint64_t *)&qword_1EF2B40D0);
  }
  return result;
}

unint64_t sub_1BAED6374()
{
  unint64_t result;

  result = qword_1EF2B40D8;
  if (!qword_1EF2B40D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDA30, &_s10CodingTypeON_51);
    atomic_store(result, (unint64_t *)&qword_1EF2B40D8);
  }
  return result;
}

void sub_1BAED63C4()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED63E4()
{
  unint64_t result;

  result = qword_1EF2B40E0;
  if (!qword_1EF2B40E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDEE8, &_s10CodingTypeON_50);
    atomic_store(result, (unint64_t *)&qword_1EF2B40E0);
  }
  return result;
}

unint64_t sub_1BAED6434()
{
  unint64_t result;

  result = qword_1EF2B40E8;
  if (!qword_1EF2B40E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE0D0, &_s10CodingTypeON_49);
    atomic_store(result, (unint64_t *)&qword_1EF2B40E8);
  }
  return result;
}

unint64_t sub_1BAED6480()
{
  unint64_t result;

  result = qword_1EF2B40F0;
  if (!qword_1EF2B40F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE228, &_s10CodingTypeON_48);
    atomic_store(result, (unint64_t *)&qword_1EF2B40F0);
  }
  return result;
}

unint64_t sub_1BAED64C8()
{
  unint64_t result;

  result = qword_1EF2B40F8;
  if (!qword_1EF2B40F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE2F0, &_s10CodingTypeON_47);
    atomic_store(result, (unint64_t *)&qword_1EF2B40F8);
  }
  return result;
}

unint64_t sub_1BAED6514()
{
  unint64_t result;

  result = qword_1EF2B4100;
  if (!qword_1EF2B4100)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE448, &_s10CodingTypeON_46);
    atomic_store(result, (unint64_t *)&qword_1EF2B4100);
  }
  return result;
}

unint64_t sub_1BAED655C()
{
  unint64_t result;

  result = qword_1EF2B4108;
  if (!qword_1EF2B4108)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE510, &_s10CodingTypeON_45);
    atomic_store(result, (unint64_t *)&qword_1EF2B4108);
  }
  return result;
}

unint64_t sub_1BAED65A8()
{
  unint64_t result;

  result = qword_1EF2B4110;
  if (!qword_1EF2B4110)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE668, &_s10CodingTypeON_44);
    atomic_store(result, (unint64_t *)&qword_1EF2B4110);
  }
  return result;
}

unint64_t sub_1BAED65F0()
{
  unint64_t result;

  result = qword_1EF2B4118;
  if (!qword_1EF2B4118)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE730, &_s10CodingTypeON_43);
    atomic_store(result, (unint64_t *)&qword_1EF2B4118);
  }
  return result;
}

unint64_t sub_1BAED6640()
{
  unint64_t result;

  result = qword_1EF2B4120;
  if (!qword_1EF2B4120)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE918, &_s10CodingTypeON_42);
    atomic_store(result, (unint64_t *)&qword_1EF2B4120);
  }
  return result;
}

unint64_t sub_1BAED6688()
{
  unint64_t result;

  result = qword_1EF2B4128;
  if (!qword_1EF2B4128)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE9E0, &_s10CodingTypeON_41);
    atomic_store(result, (unint64_t *)&qword_1EF2B4128);
  }
  return result;
}

unint64_t sub_1BAED66DC()
{
  unint64_t result;

  result = qword_1EF2B4130;
  if (!qword_1EF2B4130)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEC58, &_s10CodingTypeON_40);
    atomic_store(result, (unint64_t *)&qword_1EF2B4130);
  }
  return result;
}

unint64_t sub_1BAED6738()
{
  unint64_t result;

  result = qword_1EF2B4138;
  if (!qword_1EF2B4138)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEFF0, &_s10CodingTypeON_39);
    atomic_store(result, (unint64_t *)&qword_1EF2B4138);
  }
  return result;
}

unint64_t sub_1BAED6788()
{
  unint64_t result;

  result = qword_1EF2B4140;
  if (!qword_1EF2B4140)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF1D8, &_s10CodingTypeON_38);
    atomic_store(result, (unint64_t *)&qword_1EF2B4140);
  }
  return result;
}

unint64_t sub_1BAED67D0()
{
  unint64_t result;

  result = qword_1EF2B4148;
  if (!qword_1EF2B4148)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF2A0, &_s10CodingTypeON_37);
    atomic_store(result, (unint64_t *)&qword_1EF2B4148);
  }
  return result;
}

unint64_t sub_1BAED6818()
{
  unint64_t result;

  result = qword_1EF2B4150;
  if (!qword_1EF2B4150)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF368, &_s10CodingTypeON_36);
    atomic_store(result, (unint64_t *)&qword_1EF2B4150);
  }
  return result;
}

unint64_t sub_1BAED6860()
{
  unint64_t result;

  result = qword_1EF2B4158;
  if (!qword_1EF2B4158)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF430, &_s10CodingTypeON_35);
    atomic_store(result, (unint64_t *)&qword_1EF2B4158);
  }
  return result;
}

unint64_t sub_1BAED68A8()
{
  unint64_t result;

  result = qword_1EF2B4160;
  if (!qword_1EF2B4160)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF4F8, &_s10CodingTypeON_34);
    atomic_store(result, (unint64_t *)&qword_1EF2B4160);
  }
  return result;
}

unint64_t sub_1BAED68FC()
{
  unint64_t result;

  result = qword_1EF2B4168;
  if (!qword_1EF2B4168)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF770, &_s10CodingTypeON_33);
    atomic_store(result, (unint64_t *)&qword_1EF2B4168);
  }
  return result;
}

unint64_t sub_1BAED6944()
{
  unint64_t result;

  result = qword_1EF2B4170;
  if (!qword_1EF2B4170)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF838, &_s10CodingTypeON_32);
    atomic_store(result, (unint64_t *)&qword_1EF2B4170);
  }
  return result;
}

unint64_t sub_1BAED698C()
{
  unint64_t result;

  result = qword_1EF2B4178;
  if (!qword_1EF2B4178)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF900, &_s10CodingTypeON_31);
    atomic_store(result, (unint64_t *)&qword_1EF2B4178);
  }
  return result;
}

unint64_t sub_1BAED69D4()
{
  unint64_t result;

  result = qword_1EF2B4180;
  if (!qword_1EF2B4180)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF9C8, &_s14descr1E72CC351C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B4180);
  }
  return result;
}

unint64_t sub_1BAED6A20()
{
  unint64_t result;

  result = qword_1EF2B4188;
  if (!qword_1EF2B4188)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFB20, &_s10CodingTypeON_30);
    atomic_store(result, (unint64_t *)&qword_1EF2B4188);
  }
  return result;
}

void sub_1BAED6A64()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED6A80()
{
  unint64_t result;

  result = qword_1EF2B4190;
  if (!qword_1EF2B4190)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFD98, &_s10CodingTypeON_29);
    atomic_store(result, (unint64_t *)&qword_1EF2B4190);
  }
  return result;
}

unint64_t sub_1BAED6AC8()
{
  unint64_t result;

  result = qword_1EF2B4198;
  if (!qword_1EF2B4198)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFE60, &_s10CodingTypeON_28);
    atomic_store(result, (unint64_t *)&qword_1EF2B4198);
  }
  return result;
}

unint64_t sub_1BAED6B10()
{
  unint64_t result;

  result = qword_1EF2B41A0;
  if (!qword_1EF2B41A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFF28, &_s10CodingTypeON_27);
    atomic_store(result, (unint64_t *)&qword_1EF2B41A0);
  }
  return result;
}

unint64_t sub_1BAED6B58()
{
  unint64_t result;

  result = qword_1EF2B41A8;
  if (!qword_1EF2B41A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFFF0, &_s10CodingTypeON_26);
    atomic_store(result, (unint64_t *)&qword_1EF2B41A8);
  }
  return result;
}

unint64_t sub_1BAED6BAC()
{
  unint64_t result;

  result = qword_1EF2B41B0;
  if (!qword_1EF2B41B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0268, &_s10CodingTypeON_25);
    atomic_store(result, (unint64_t *)&qword_1EF2B41B0);
  }
  return result;
}

unint64_t sub_1BAED6BFC()
{
  unint64_t result;

  result = qword_1EF2B41B8;
  if (!qword_1EF2B41B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0450, &_s10CodingTypeON_24);
    atomic_store(result, (unint64_t *)&qword_1EF2B41B8);
  }
  return result;
}

unint64_t sub_1BAED6C48()
{
  unint64_t result;

  result = qword_1EF2B41C0;
  if (!qword_1EF2B41C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C05A8, &_s10CodingTypeON_23);
    atomic_store(result, (unint64_t *)&qword_1EF2B41C0);
  }
  return result;
}

unint64_t sub_1BAED6C90()
{
  unint64_t result;

  result = qword_1EF2B41C8;
  if (!qword_1EF2B41C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0670, &_s10CodingTypeON_22);
    atomic_store(result, (unint64_t *)&qword_1EF2B41C8);
  }
  return result;
}

unint64_t sub_1BAED6CD8()
{
  unint64_t result;

  result = qword_1EF2B41D0;
  if (!qword_1EF2B41D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0738, &_s10CodingTypeON_21);
    atomic_store(result, (unint64_t *)&qword_1EF2B41D0);
  }
  return result;
}

unint64_t sub_1BAED6D20()
{
  unint64_t result;

  result = qword_1EF2B41D8;
  if (!qword_1EF2B41D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0800, &_s10CodingTypeON_20);
    atomic_store(result, (unint64_t *)&qword_1EF2B41D8);
  }
  return result;
}

unint64_t sub_1BAED6D6C()
{
  unint64_t result;

  result = qword_1EF2B41E0;
  if (!qword_1EF2B41E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0958, &_s10CodingTypeON_19);
    atomic_store(result, (unint64_t *)&qword_1EF2B41E0);
  }
  return result;
}

unint64_t sub_1BAED6DD0()
{
  unint64_t result;

  result = qword_1EF2B41E8;
  if (!qword_1EF2B41E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0E10, &_s10CodingTypeON_18);
    atomic_store(result, (unint64_t *)&qword_1EF2B41E8);
  }
  return result;
}

unint64_t sub_1BAED6E1C()
{
  unint64_t result;

  result = qword_1EF2B41F0;
  if (!qword_1EF2B41F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0F68, &_s10CodingTypeON_17);
    atomic_store(result, (unint64_t *)&qword_1EF2B41F0);
  }
  return result;
}

unint64_t sub_1BAED6E6C()
{
  unint64_t result;

  result = qword_1EF2B41F8;
  if (!qword_1EF2B41F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1150, &_s10CodingTypeON_16);
    atomic_store(result, (unint64_t *)&qword_1EF2B41F8);
  }
  return result;
}

unint64_t sub_1BAED6EB4()
{
  unint64_t result;

  result = qword_1EF2B4200;
  if (!qword_1EF2B4200)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1218, &_s10CodingTypeON_15);
    atomic_store(result, (unint64_t *)&qword_1EF2B4200);
  }
  return result;
}

unint64_t sub_1BAED6EFC()
{
  unint64_t result;

  result = qword_1EF2B4208;
  if (!qword_1EF2B4208)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C12E0, &_s10CodingTypeON_14);
    atomic_store(result, (unint64_t *)&qword_1EF2B4208);
  }
  return result;
}

void sub_1BAED6F48()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAED6F58()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAED6F70()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAED6F80()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED6F94()
{
  unint64_t result;

  result = qword_1EF2B4210;
  if (!qword_1EF2B4210)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1828, &_s10CodingTypeON_13);
    atomic_store(result, (unint64_t *)&qword_1EF2B4210);
  }
  return result;
}

unint64_t sub_1BAED6FF4()
{
  unint64_t result;

  result = qword_1EF2B4218;
  if (!qword_1EF2B4218)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1C50, &_s10CodingTypeON_12);
    atomic_store(result, (unint64_t *)&qword_1EF2B4218);
  }
  return result;
}

unint64_t sub_1BAED703C()
{
  unint64_t result;

  result = qword_1EF2B4220;
  if (!qword_1EF2B4220)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1D18, &_s10CodingTypeON_11);
    atomic_store(result, (unint64_t *)&qword_1EF2B4220);
  }
  return result;
}

unint64_t sub_1BAED7084()
{
  unint64_t result;

  result = qword_1EF2B4228;
  if (!qword_1EF2B4228)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1DE0, &_s10CodingTypeON_10);
    atomic_store(result, (unint64_t *)&qword_1EF2B4228);
  }
  return result;
}

unint64_t sub_1BAED70DC()
{
  unint64_t result;

  result = qword_1EF2B4230;
  if (!qword_1EF2B4230)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C20E8, &_s10CodingTypeON_9);
    atomic_store(result, (unint64_t *)&qword_1EF2B4230);
  }
  return result;
}

unint64_t sub_1BAED7124()
{
  unint64_t result;

  result = qword_1EF2B4238;
  if (!qword_1EF2B4238)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C21B0, &_s10CodingTypeON_8);
    atomic_store(result, (unint64_t *)&qword_1EF2B4238);
  }
  return result;
}

unint64_t sub_1BAED718C()
{
  unint64_t result;

  result = qword_1EF2B4240;
  if (!qword_1EF2B4240)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C26F8, &_s10CodingTypeON_7);
    atomic_store(result, (unint64_t *)&qword_1EF2B4240);
  }
  return result;
}

void sub_1BAED71D0()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED71E4()
{
  unint64_t result;

  result = qword_1EF2B4248;
  if (!qword_1EF2B4248)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2850, &_s10CodingTypeON_6);
    atomic_store(result, (unint64_t *)&qword_1EF2B4248);
  }
  return result;
}

void sub_1BAED7234()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAED7248()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAED7260()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED7278()
{
  unint64_t result;

  result = qword_1EF2B4250;
  if (!qword_1EF2B4250)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2EB8, &_s10CodingTypeON_5);
    atomic_store(result, (unint64_t *)&qword_1EF2B4250);
  }
  return result;
}

unint64_t sub_1BAED72C8()
{
  unint64_t result;

  result = qword_1EF2B4258;
  if (!qword_1EF2B4258)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C30A0, &_s10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1EF2B4258);
  }
  return result;
}

unint64_t sub_1BAED7310()
{
  unint64_t result;

  result = qword_1EF2B4260;
  if (!qword_1EF2B4260)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3168, &_s10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1EF2B4260);
  }
  return result;
}

unint64_t sub_1BAED735C()
{
  unint64_t result;

  result = qword_1EF2B4268;
  if (!qword_1EF2B4268)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C32C0, &_s10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1EF2B4268);
  }
  return result;
}

unint64_t sub_1BAED73B8()
{
  unint64_t result;

  result = qword_1EF2B4270;
  if (!qword_1EF2B4270)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3658, &_s14descr1E72CBDC1C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B4270);
  }
  return result;
}

unint64_t sub_1BAED7400()
{
  unint64_t result;

  result = qword_1EF2B4278;
  if (!qword_1EF2B4278)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3720, &_s10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4278);
  }
  return result;
}

unint64_t sub_1BAED7448()
{
  unint64_t result;

  result = qword_1EF2B4280;
  if (!qword_1EF2B4280)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C37E8, &_s14descr1E72CC159O10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B4280);
  }
  return result;
}

unint64_t sub_1BAED7494()
{
  unint64_t result;

  result = qword_1EF2B4288;
  if (!qword_1EF2B4288)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3940, &_s10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B4288);
  }
  return result;
}

unint64_t sub_1BAED74DC()
{
  unint64_t result;

  result = qword_1EF2B4290;
  if (!qword_1EF2B4290)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3A08, &_s10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B4290);
  }
  return result;
}

unint64_t sub_1BAED7524()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4298;
  if (!qword_1EF2B4298)
  {
    sub_1BA4AD288(255, &qword_1EF2B42A0, (uint64_t)&_s10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4298);
  }
  return result;
}

unint64_t sub_1BAED7588()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B42A8;
  if (!qword_1EF2B42A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B42B0, (uint64_t)&_s10CodingKeysON_0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B42A8);
  }
  return result;
}

unint64_t sub_1BAED75EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B42B8;
  if (!qword_1EF2B42B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B42C0, (uint64_t)&_s10CodingKeysON_1, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B42B8);
  }
  return result;
}

unint64_t sub_1BAED7650()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B42C8;
  if (!qword_1EF2B42C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B42D0, (uint64_t)&_s10CodingKeysON_2, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B42C8);
  }
  return result;
}

unint64_t sub_1BAED76B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B42D8;
  if (!qword_1EF2B42D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B42E0, (uint64_t)&_s10CodingKeysON_3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B42D8);
  }
  return result;
}

unint64_t sub_1BAED7718()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B42E8;
  if (!qword_1EF2B42E8)
  {
    sub_1BA4AD288(255, &qword_1EF2B42F0, (uint64_t)&_s10CodingKeysON_4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B42E8);
  }
  return result;
}

unint64_t sub_1BAED777C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B42F8;
  if (!qword_1EF2B42F8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4300, (uint64_t)&_s10CodingKeysON_5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B42F8);
  }
  return result;
}

unint64_t sub_1BAED77E0()
{
  unint64_t result;

  result = qword_1EF2B4308;
  if (!qword_1EF2B4308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2F70, &_s10CodingKeysON_6);
    atomic_store(result, (unint64_t *)&qword_1EF2B4308);
  }
  return result;
}

unint64_t sub_1BAED7828()
{
  unint64_t result;

  result = qword_1EF2B4310;
  if (!qword_1EF2B4310)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2F98, &_s10CodingKeysON_6);
    atomic_store(result, (unint64_t *)&qword_1EF2B4310);
  }
  return result;
}

unint64_t sub_1BAED7870()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4318;
  if (!qword_1EF2B4318)
  {
    sub_1BA4AD288(255, &qword_1EF2B4320, (uint64_t)&_s10CodingKeysON_6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4318);
  }
  return result;
}

unint64_t sub_1BAED78D4()
{
  unint64_t result;

  result = qword_1EF2B4328;
  if (!qword_1EF2B4328)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2EE0, &_s10CodingKeysON_7);
    atomic_store(result, (unint64_t *)&qword_1EF2B4328);
  }
  return result;
}

unint64_t sub_1BAED791C()
{
  unint64_t result;

  result = qword_1EF2B4330;
  if (!qword_1EF2B4330)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2F08, &_s10CodingKeysON_7);
    atomic_store(result, (unint64_t *)&qword_1EF2B4330);
  }
  return result;
}

unint64_t sub_1BAED7964()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4338;
  if (!qword_1EF2B4338)
  {
    sub_1BA4AD288(255, &qword_1EF2B4340, (uint64_t)&_s10CodingKeysON_7, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4338);
  }
  return result;
}

unint64_t sub_1BAED79C8()
{
  unint64_t result;

  result = qword_1ED3A58D0;
  if (!qword_1ED3A58D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2D88, &_s10CodingKeysON_8);
    atomic_store(result, (unint64_t *)&qword_1ED3A58D0);
  }
  return result;
}

unint64_t sub_1BAED7A10()
{
  unint64_t result;

  result = qword_1ED3A58C8;
  if (!qword_1ED3A58C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2DB0, &_s10CodingKeysON_8);
    atomic_store(result, (unint64_t *)&qword_1ED3A58C8);
  }
  return result;
}

unint64_t sub_1BAED7A58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4348;
  if (!qword_1EF2B4348)
  {
    sub_1BA4AD288(255, &qword_1EF2B4350, (uint64_t)&_s10CodingKeysON_8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4348);
  }
  return result;
}

void sub_1BAED7AB8()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED7ACC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4358;
  if (!qword_1EF2B4358)
  {
    sub_1BA4AD288(255, &qword_1EF2B4360, (uint64_t)&_s10CodingKeysON_9, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4358);
  }
  return result;
}

unint64_t sub_1BAED7B30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4368;
  if (!qword_1EF2B4368)
  {
    sub_1BA4AD288(255, &qword_1EF2B4370, (uint64_t)&_s14descr1E72CC061V10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4368);
  }
  return result;
}

unint64_t sub_1BAED7B94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4378;
  if (!qword_1EF2B4378)
  {
    sub_1BA4AD288(255, &qword_1EF2B4380, (uint64_t)&_s10CodingKeysON_10, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4378);
  }
  return result;
}

void sub_1BAED7BF4()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAED7C04()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED7C18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4388;
  if (!qword_1EF2B4388)
  {
    sub_1BA4AD288(255, &qword_1EF2B4390, (uint64_t)&_s10CodingKeysON_11, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4388);
  }
  return result;
}

unint64_t sub_1BAED7C7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4398;
  if (!qword_1EF2B4398)
  {
    sub_1BA4AD288(255, &qword_1EF2B43A0, (uint64_t)&_s10CodingKeysON_12, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4398);
  }
  return result;
}

unint64_t sub_1BAED7CE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B43A8;
  if (!qword_1EF2B43A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B43B0, (uint64_t)&_s10CodingKeysON_13, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B43A8);
  }
  return result;
}

void sub_1BAED7D40()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAED7D50()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAED7D64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B43B8;
  if (!qword_1EF2B43B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B43C0, (uint64_t)&_s10CodingKeysON_14, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B43B8);
  }
  return result;
}

unint64_t sub_1BAED7DC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B43C8;
  if (!qword_1EF2B43C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B43D0, (uint64_t)&_s10CodingKeysON_15, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B43C8);
  }
  return result;
}

unint64_t sub_1BAED7E2C()
{
  unint64_t result;

  result = qword_1EF2B43D8;
  if (!qword_1EF2B43D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C24A8, &_s10CodingKeysON_16);
    atomic_store(result, (unint64_t *)&qword_1EF2B43D8);
  }
  return result;
}

unint64_t sub_1BAED7E74()
{
  unint64_t result;

  result = qword_1EF2B43E0;
  if (!qword_1EF2B43E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C24D0, &_s10CodingKeysON_16);
    atomic_store(result, (unint64_t *)&qword_1EF2B43E0);
  }
  return result;
}

unint64_t sub_1BAED7EBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B43E8;
  if (!qword_1EF2B43E8)
  {
    sub_1BA4AD288(255, &qword_1EF2B43F0, (uint64_t)&_s10CodingKeysON_16, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B43E8);
  }
  return result;
}

unint64_t sub_1BAED7F20()
{
  unint64_t result;

  result = qword_1EF2B43F8;
  if (!qword_1EF2B43F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2418, &_s10CodingKeysON_17);
    atomic_store(result, (unint64_t *)&qword_1EF2B43F8);
  }
  return result;
}

unint64_t sub_1BAED7F68()
{
  unint64_t result;

  result = qword_1EF2B4400;
  if (!qword_1EF2B4400)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2440, &_s10CodingKeysON_17);
    atomic_store(result, (unint64_t *)&qword_1EF2B4400);
  }
  return result;
}

unint64_t sub_1BAED7FB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4408;
  if (!qword_1EF2B4408)
  {
    sub_1BA4AD288(255, &qword_1EF2B4410, (uint64_t)&_s10CodingKeysON_17, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4408);
  }
  return result;
}

unint64_t sub_1BAED8014()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4418;
  if (!qword_1EF2B4418)
  {
    sub_1BA4AD288(255, &qword_1EF2B4420, (uint64_t)&_s10CodingKeysON_18, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4418);
  }
  return result;
}

unint64_t sub_1BAED8078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4428;
  if (!qword_1EF2B4428)
  {
    sub_1BA4AD288(255, &qword_1EF2B4430, (uint64_t)&_s10CodingKeysON_19, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4428);
  }
  return result;
}

unint64_t sub_1BAED80DC()
{
  unint64_t result;

  result = qword_1EF2B4438;
  if (!qword_1EF2B4438)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2268, &_s10CodingKeysON_20);
    atomic_store(result, (unint64_t *)&qword_1EF2B4438);
  }
  return result;
}

unint64_t sub_1BAED8124()
{
  unint64_t result;

  result = qword_1EF2B4440;
  if (!qword_1EF2B4440)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2290, &_s10CodingKeysON_20);
    atomic_store(result, (unint64_t *)&qword_1EF2B4440);
  }
  return result;
}

unint64_t sub_1BAED816C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4448;
  if (!qword_1EF2B4448)
  {
    sub_1BA4AD288(255, &qword_1EF2B4450, (uint64_t)&_s10CodingKeysON_20, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4448);
  }
  return result;
}

unint64_t sub_1BAED81D0()
{
  unint64_t result;

  result = qword_1EF2B4458;
  if (!qword_1EF2B4458)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C21D8, &_s10CodingKeysON_21);
    atomic_store(result, (unint64_t *)&qword_1EF2B4458);
  }
  return result;
}

unint64_t sub_1BAED8218()
{
  unint64_t result;

  result = qword_1EF2B4460;
  if (!qword_1EF2B4460)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2200, &_s10CodingKeysON_21);
    atomic_store(result, (unint64_t *)&qword_1EF2B4460);
  }
  return result;
}

unint64_t sub_1BAED8260()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4468;
  if (!qword_1EF2B4468)
  {
    sub_1BA4AD288(255, &qword_1EF2B4470, (uint64_t)&_s10CodingKeysON_21, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4468);
  }
  return result;
}

unint64_t sub_1BAED82C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4478;
  if (!qword_1EF2B4478)
  {
    sub_1BA4AD288(255, &qword_1EF2B4480, (uint64_t)&_s10CodingKeysON_22, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4478);
  }
  return result;
}

unint64_t sub_1BAED8328()
{
  unint64_t result;

  result = qword_1ED3A42E0;
  if (!qword_1ED3A42E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1F28, &_s10CodingKeysON_23);
    atomic_store(result, (unint64_t *)&qword_1ED3A42E0);
  }
  return result;
}

unint64_t sub_1BAED8370()
{
  unint64_t result;

  result = qword_1ED3A42D8;
  if (!qword_1ED3A42D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1F50, &_s10CodingKeysON_23);
    atomic_store(result, (unint64_t *)&qword_1ED3A42D8);
  }
  return result;
}

unint64_t sub_1BAED83B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4488;
  if (!qword_1EF2B4488)
  {
    sub_1BA4AD288(255, &qword_1EF2B4490, (uint64_t)&_s10CodingKeysON_23, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4488);
  }
  return result;
}

unint64_t sub_1BAED841C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4498;
  if (!qword_1EF2B4498)
  {
    sub_1BA4AD288(255, &qword_1EF2B44A0, (uint64_t)&_s10CodingKeysON_24, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4498);
  }
  return result;
}

unint64_t sub_1BAED8480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B44A8;
  if (!qword_1EF2B44A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B44B0, (uint64_t)&_s10CodingKeysON_25, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B44A8);
  }
  return result;
}

unint64_t sub_1BAED84E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B44B8;
  if (!qword_1EF2B44B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B44C0, (uint64_t)&_s10CodingKeysON_26, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B44B8);
  }
  return result;
}

unint64_t sub_1BAED8548()
{
  unint64_t result;

  result = qword_1ED3C41C8;
  if (!qword_1ED3C41C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1A90, &_s10CodingKeysON_27);
    atomic_store(result, (unint64_t *)&qword_1ED3C41C8);
  }
  return result;
}

unint64_t sub_1BAED8590()
{
  unint64_t result;

  result = qword_1ED3C41C0;
  if (!qword_1ED3C41C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1AB8, &_s10CodingKeysON_27);
    atomic_store(result, (unint64_t *)&qword_1ED3C41C0);
  }
  return result;
}

unint64_t sub_1BAED85D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B44C8;
  if (!qword_1EF2B44C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B44D0, (uint64_t)&_s10CodingKeysON_27, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B44C8);
  }
  return result;
}

unint64_t sub_1BAED863C()
{
  unint64_t result;

  result = qword_1EF2B44D8;
  if (!qword_1EF2B44D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1A00, &_s10CodingKeysON_28);
    atomic_store(result, (unint64_t *)&qword_1EF2B44D8);
  }
  return result;
}

unint64_t sub_1BAED8684()
{
  unint64_t result;

  result = qword_1EF2B44E0;
  if (!qword_1EF2B44E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1A28, &_s10CodingKeysON_28);
    atomic_store(result, (unint64_t *)&qword_1EF2B44E0);
  }
  return result;
}

unint64_t sub_1BAED86CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B44E8;
  if (!qword_1EF2B44E8)
  {
    sub_1BA4AD288(255, &qword_1EF2B44F0, (uint64_t)&_s10CodingKeysON_28, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B44E8);
  }
  return result;
}

unint64_t sub_1BAED8730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B44F8;
  if (!qword_1EF2B44F8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4500, (uint64_t)&_s10CodingKeysON_29, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B44F8);
  }
  return result;
}

unint64_t sub_1BAED8794()
{
  unint64_t result;

  result = qword_1ED3A62E0;
  if (!qword_1ED3A62E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C18E0, &_s10CodingKeysON_30);
    atomic_store(result, (unint64_t *)&qword_1ED3A62E0);
  }
  return result;
}

unint64_t sub_1BAED87DC()
{
  unint64_t result;

  result = qword_1ED3A62D8;
  if (!qword_1ED3A62D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1908, &_s10CodingKeysON_30);
    atomic_store(result, (unint64_t *)&qword_1ED3A62D8);
  }
  return result;
}

unint64_t sub_1BAED8824()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4508;
  if (!qword_1EF2B4508)
  {
    sub_1BA4AD288(255, &qword_1EF2B4510, (uint64_t)&_s10CodingKeysON_30, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4508);
  }
  return result;
}

unint64_t sub_1BAED8888()
{
  unint64_t result;

  result = qword_1EF2B4518;
  if (!qword_1EF2B4518)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1850, &_s10CodingKeysON_31);
    atomic_store(result, (unint64_t *)&qword_1EF2B4518);
  }
  return result;
}

unint64_t sub_1BAED88D0()
{
  unint64_t result;

  result = qword_1EF2B4520;
  if (!qword_1EF2B4520)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1878, &_s10CodingKeysON_31);
    atomic_store(result, (unint64_t *)&qword_1EF2B4520);
  }
  return result;
}

unint64_t sub_1BAED8918()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4528;
  if (!qword_1EF2B4528)
  {
    sub_1BA4AD288(255, &qword_1EF2B4530, (uint64_t)&_s10CodingKeysON_31, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4528);
  }
  return result;
}

unint64_t sub_1BAED897C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4538;
  if (!qword_1EF2B4538)
  {
    sub_1BA4AD288(255, &qword_1EF2B4540, (uint64_t)&_s10CodingKeysON_32, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4538);
  }
  return result;
}

unint64_t sub_1BAED89E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4548;
  if (!qword_1EF2B4548)
  {
    sub_1BA4AD288(255, &qword_1EF2B4550, (uint64_t)&_s10CodingKeysON_33, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4548);
  }
  return result;
}

unint64_t sub_1BAED8A44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4558;
  if (!qword_1EF2B4558)
  {
    sub_1BA4AD288(255, &qword_1EF2B4560, (uint64_t)&_s10CodingKeysON_34, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4558);
  }
  return result;
}

unint64_t sub_1BAED8AA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4568;
  if (!qword_1EF2B4568)
  {
    sub_1BA4AD288(255, &qword_1EF2B4570, (uint64_t)&_s10CodingKeysON_35, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4568);
  }
  return result;
}

unint64_t sub_1BAED8B0C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4578;
  if (!qword_1EF2B4578)
  {
    sub_1BA4AD288(255, &qword_1EF2B4580, (uint64_t)&_s10CodingKeysON_36, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4578);
  }
  return result;
}

unint64_t sub_1BAED8B70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4588;
  if (!qword_1EF2B4588)
  {
    sub_1BA4AD288(255, &qword_1EF2B4590, (uint64_t)&_s14descr1E72CC2B1O10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4588);
  }
  return result;
}

unint64_t sub_1BAED8BD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4598;
  if (!qword_1EF2B4598)
  {
    sub_1BA4AD288(255, &qword_1EF2B45A0, (uint64_t)&_s10CodingKeysON_37, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4598);
  }
  return result;
}

unint64_t sub_1BAED8C38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B45A8;
  if (!qword_1EF2B45A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B45B0, (uint64_t)&_s10CodingKeysON_38, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B45A8);
  }
  return result;
}

unint64_t sub_1BAED8C9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B45B8;
  if (!qword_1EF2B45B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B45C0, (uint64_t)&_s10CodingKeysON_39, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B45B8);
  }
  return result;
}

unint64_t sub_1BAED8D00()
{
  unint64_t result;

  result = qword_1EF2B45C8;
  if (!qword_1EF2B45C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0BC0, &_s10CodingKeysON_40);
    atomic_store(result, (unint64_t *)&qword_1EF2B45C8);
  }
  return result;
}

unint64_t sub_1BAED8D48()
{
  unint64_t result;

  result = qword_1EF2B45D0;
  if (!qword_1EF2B45D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0BE8, &_s10CodingKeysON_40);
    atomic_store(result, (unint64_t *)&qword_1EF2B45D0);
  }
  return result;
}

unint64_t sub_1BAED8D90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B45D8;
  if (!qword_1EF2B45D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B45E0, (uint64_t)&_s10CodingKeysON_40, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B45D8);
  }
  return result;
}

unint64_t sub_1BAED8DF4()
{
  unint64_t result;

  result = qword_1ED3ADB50;
  if (!qword_1ED3ADB50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0B30, &_s10CodingKeysON_41);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB50);
  }
  return result;
}

unint64_t sub_1BAED8E3C()
{
  unint64_t result;

  result = qword_1ED3ADB48;
  if (!qword_1ED3ADB48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0B58, &_s10CodingKeysON_41);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB48);
  }
  return result;
}

unint64_t sub_1BAED8E84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B45E8;
  if (!qword_1EF2B45E8)
  {
    sub_1BA4AD288(255, &qword_1EF2B45F0, (uint64_t)&_s10CodingKeysON_41, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B45E8);
  }
  return result;
}

unint64_t sub_1BAED8EE8()
{
  unint64_t result;

  result = qword_1EF2B45F8;
  if (!qword_1EF2B45F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0AA0, &_s10CodingKeysON_42);
    atomic_store(result, (unint64_t *)&qword_1EF2B45F8);
  }
  return result;
}

unint64_t sub_1BAED8F30()
{
  unint64_t result;

  result = qword_1EF2B4600;
  if (!qword_1EF2B4600)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0AC8, &_s10CodingKeysON_42);
    atomic_store(result, (unint64_t *)&qword_1EF2B4600);
  }
  return result;
}

unint64_t sub_1BAED8F78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4608;
  if (!qword_1EF2B4608)
  {
    sub_1BA4AD288(255, &qword_1EF2B4610, (uint64_t)&_s10CodingKeysON_42, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4608);
  }
  return result;
}

unint64_t sub_1BAED8FDC()
{
  unint64_t result;

  result = qword_1ED3ADC40;
  if (!qword_1ED3ADC40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0A10, &_s10CodingKeysON_43);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC40);
  }
  return result;
}

unint64_t sub_1BAED9024()
{
  unint64_t result;

  result = qword_1ED3ADC38;
  if (!qword_1ED3ADC38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0A38, &_s10CodingKeysON_43);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC38);
  }
  return result;
}

unint64_t sub_1BAED906C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4618;
  if (!qword_1EF2B4618)
  {
    sub_1BA4AD288(255, &qword_1EF2B4620, (uint64_t)&_s10CodingKeysON_43, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4618);
  }
  return result;
}

unint64_t sub_1BAED90D0()
{
  unint64_t result;

  result = qword_1ED3ADAC0;
  if (!qword_1ED3ADAC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0980, &_s10CodingKeysON_44);
    atomic_store(result, (unint64_t *)&qword_1ED3ADAC0);
  }
  return result;
}

unint64_t sub_1BAED9118()
{
  unint64_t result;

  result = qword_1ED3ADAB8;
  if (!qword_1ED3ADAB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C09A8, &_s10CodingKeysON_44);
    atomic_store(result, (unint64_t *)&qword_1ED3ADAB8);
  }
  return result;
}

unint64_t sub_1BAED9160()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4628;
  if (!qword_1EF2B4628)
  {
    sub_1BA4AD288(255, &qword_1EF2B4630, (uint64_t)&_s10CodingKeysON_44, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4628);
  }
  return result;
}

unint64_t sub_1BAED91C4()
{
  unint64_t result;

  result = qword_1EF2B4638;
  if (!qword_1EF2B4638)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0828, &_s10CodingKeysON_45);
    atomic_store(result, (unint64_t *)&qword_1EF2B4638);
  }
  return result;
}

unint64_t sub_1BAED920C()
{
  unint64_t result;

  result = qword_1EF2B4640;
  if (!qword_1EF2B4640)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0850, &_s10CodingKeysON_45);
    atomic_store(result, (unint64_t *)&qword_1EF2B4640);
  }
  return result;
}

unint64_t sub_1BAED9254()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4648;
  if (!qword_1EF2B4648)
  {
    sub_1BA4AD288(255, &qword_1EF2B4650, (uint64_t)&_s10CodingKeysON_45, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4648);
  }
  return result;
}

unint64_t sub_1BAED92B8()
{
  unint64_t result;

  result = qword_1ED3D2B30;
  if (!qword_1ED3D2B30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0478, &_s10CodingKeysON_46);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B30);
  }
  return result;
}

unint64_t sub_1BAED9300()
{
  unint64_t result;

  result = qword_1ED3D2B28;
  if (!qword_1ED3D2B28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C04A0, &_s10CodingKeysON_46);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B28);
  }
  return result;
}

unint64_t sub_1BAED9348()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4658;
  if (!qword_1EF2B4658)
  {
    sub_1BA4AD288(255, &qword_1EF2B4660, (uint64_t)&_s10CodingKeysON_46, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4658);
  }
  return result;
}

unint64_t sub_1BAED93AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4668;
  if (!qword_1EF2B4668)
  {
    sub_1BA4AD288(255, &qword_1EF2B4670, (uint64_t)&_s10CodingKeysON_47, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4668);
  }
  return result;
}

unint64_t sub_1BAED9410()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4678;
  if (!qword_1EF2B4678)
  {
    sub_1BA4AD288(255, &qword_1EF2B4680, (uint64_t)&_s10CodingKeysON_48, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4678);
  }
  return result;
}

unint64_t sub_1BAED9474()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4688;
  if (!qword_1EF2B4688)
  {
    sub_1BA4AD288(255, &qword_1EF2B4690, (uint64_t)&_s10CodingKeysON_49, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4688);
  }
  return result;
}

unint64_t sub_1BAED94D8()
{
  unint64_t result;

  result = qword_1EF2B4698;
  if (!qword_1EF2B4698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C00A8, &_s10CodingKeysON_50);
    atomic_store(result, (unint64_t *)&qword_1EF2B4698);
  }
  return result;
}

unint64_t sub_1BAED9520()
{
  unint64_t result;

  result = qword_1EF2B46A0;
  if (!qword_1EF2B46A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C00D0, &_s10CodingKeysON_50);
    atomic_store(result, (unint64_t *)&qword_1EF2B46A0);
  }
  return result;
}

unint64_t sub_1BAED9568()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B46A8;
  if (!qword_1EF2B46A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B46B0, (uint64_t)&_s10CodingKeysON_50, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B46A8);
  }
  return result;
}

unint64_t sub_1BAED95CC()
{
  unint64_t result;

  result = qword_1EF2B46B8;
  if (!qword_1EF2B46B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0018, &_s10CodingKeysON_51);
    atomic_store(result, (unint64_t *)&qword_1EF2B46B8);
  }
  return result;
}

unint64_t sub_1BAED9614()
{
  unint64_t result;

  result = qword_1EF2B46C0;
  if (!qword_1EF2B46C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0040, &_s10CodingKeysON_51);
    atomic_store(result, (unint64_t *)&qword_1EF2B46C0);
  }
  return result;
}

unint64_t sub_1BAED965C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B46C8;
  if (!qword_1EF2B46C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B46D0, (uint64_t)&_s10CodingKeysON_51, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B46C8);
  }
  return result;
}

unint64_t sub_1BAED96C0()
{
  unint64_t result;

  result = qword_1ED3D1950;
  if (!qword_1ED3D1950)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFC68, &_s10CodingKeysON_52);
    atomic_store(result, (unint64_t *)&qword_1ED3D1950);
  }
  return result;
}

unint64_t sub_1BAED9708()
{
  unint64_t result;

  result = qword_1ED3D1948;
  if (!qword_1ED3D1948)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFC90, &_s10CodingKeysON_52);
    atomic_store(result, (unint64_t *)&qword_1ED3D1948);
  }
  return result;
}

unint64_t sub_1BAED9750()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B46D8;
  if (!qword_1EF2B46D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B46E0, (uint64_t)&_s10CodingKeysON_52, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B46D8);
  }
  return result;
}

unint64_t sub_1BAED97B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B46E8;
  if (!qword_1EF2B46E8)
  {
    sub_1BA4AD288(255, &qword_1EF2B46F0, (uint64_t)&_s10CodingKeysON_53, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B46E8);
  }
  return result;
}

unint64_t sub_1BAED9818()
{
  unint64_t result;

  result = qword_1EF2B46F8;
  if (!qword_1EF2B46F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF9F0, &_s10CodingKeysON_54);
    atomic_store(result, (unint64_t *)&qword_1EF2B46F8);
  }
  return result;
}

unint64_t sub_1BAED9860()
{
  unint64_t result;

  result = qword_1EF2B4700;
  if (!qword_1EF2B4700)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFA18, &_s10CodingKeysON_54);
    atomic_store(result, (unint64_t *)&qword_1EF2B4700);
  }
  return result;
}

unint64_t sub_1BAED98A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4708;
  if (!qword_1EF2B4708)
  {
    sub_1BA4AD288(255, &qword_1EF2B4710, (uint64_t)&_s10CodingKeysON_54, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4708);
  }
  return result;
}

unint64_t sub_1BAED990C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4718;
  if (!qword_1EF2B4718)
  {
    sub_1BA4AD288(255, &qword_1EF2B4720, (uint64_t)&_s10CodingKeysON_55, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4718);
  }
  return result;
}

unint64_t sub_1BAED9970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4728;
  if (!qword_1EF2B4728)
  {
    sub_1BA4AD288(255, &qword_1EF2B4730, (uint64_t)&_s10CodingKeysON_56, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4728);
  }
  return result;
}

unint64_t sub_1BAED99D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4738;
  if (!qword_1EF2B4738)
  {
    sub_1BA4AD288(255, &qword_1EF2B4740, (uint64_t)&_s10CodingKeysON_57, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4738);
  }
  return result;
}

unint64_t sub_1BAED9A38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4748;
  if (!qword_1EF2B4748)
  {
    sub_1BA4AD288(255, &qword_1EF2B4750, (uint64_t)&_s10CodingKeysON_58, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4748);
  }
  return result;
}

unint64_t sub_1BAED9A9C()
{
  unint64_t result;

  result = qword_1ED3ABE40;
  if (!qword_1ED3ABE40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF018, &_s10CodingKeysON_59);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE40);
  }
  return result;
}

unint64_t sub_1BAED9AE4()
{
  unint64_t result;

  result = qword_1ED3ABE38;
  if (!qword_1ED3ABE38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF040, &_s10CodingKeysON_59);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE38);
  }
  return result;
}

unint64_t sub_1BAED9B2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4758;
  if (!qword_1EF2B4758)
  {
    sub_1BA4AD288(255, &qword_1EF2B4760, (uint64_t)&_s10CodingKeysON_59, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4758);
  }
  return result;
}

unint64_t sub_1BAED9B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4768;
  if (!qword_1EF2B4768)
  {
    sub_1BA4AD288(255, &qword_1EF2B4770, (uint64_t)&_s10CodingKeysON_60, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4768);
  }
  return result;
}

unint64_t sub_1BAED9BF4()
{
  unint64_t result;

  result = qword_1ED3A1628[0];
  if (!qword_1ED3A1628[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEE30, &_s10CodingKeysON_61);
    atomic_store(result, qword_1ED3A1628);
  }
  return result;
}

unint64_t sub_1BAED9C3C()
{
  unint64_t result;

  result = qword_1ED3A88F0;
  if (!qword_1ED3A88F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEE58, &_s10CodingKeysON_61);
    atomic_store(result, (unint64_t *)&qword_1ED3A88F0);
  }
  return result;
}

unint64_t sub_1BAED9C84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4778;
  if (!qword_1EF2B4778)
  {
    sub_1BA4AD288(255, &qword_1EF2B4780, (uint64_t)&_s10CodingKeysON_61, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4778);
  }
  return result;
}

unint64_t sub_1BAED9CE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4788;
  if (!qword_1EF2B4788)
  {
    sub_1BA4AD288(255, &qword_1EF2B4790, (uint64_t)&_s10CodingKeysON_62, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4788);
  }
  return result;
}

unint64_t sub_1BAED9D4C()
{
  unint64_t result;

  result = qword_1ED3A5C90;
  if (!qword_1ED3A5C90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BED10, &_s10CodingKeysON_63);
    atomic_store(result, (unint64_t *)&qword_1ED3A5C90);
  }
  return result;
}

unint64_t sub_1BAED9D94()
{
  unint64_t result;

  result = qword_1ED3A5C88;
  if (!qword_1ED3A5C88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BED38, &_s10CodingKeysON_63);
    atomic_store(result, (unint64_t *)&qword_1ED3A5C88);
  }
  return result;
}

unint64_t sub_1BAED9DDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4798;
  if (!qword_1EF2B4798)
  {
    sub_1BA4AD288(255, &qword_1EF2B47A0, (uint64_t)&_s10CodingKeysON_63, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4798);
  }
  return result;
}

unint64_t sub_1BAED9E40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B47A8;
  if (!qword_1EF2B47A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B47B0, (uint64_t)&_s10CodingKeysON_64, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B47A8);
  }
  return result;
}

unint64_t sub_1BAED9EA4()
{
  unint64_t result;

  result = qword_1ED3CBA40;
  if (!qword_1ED3CBA40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEB28, &_s10CodingKeysON_65);
    atomic_store(result, (unint64_t *)&qword_1ED3CBA40);
  }
  return result;
}

unint64_t sub_1BAED9EEC()
{
  unint64_t result;

  result = qword_1ED3CBA38;
  if (!qword_1ED3CBA38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEB50, &_s10CodingKeysON_65);
    atomic_store(result, (unint64_t *)&qword_1ED3CBA38);
  }
  return result;
}

unint64_t sub_1BAED9F34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B47B8;
  if (!qword_1EF2B47B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B47C0, (uint64_t)&_s10CodingKeysON_65, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B47B8);
  }
  return result;
}

unint64_t sub_1BAED9F98()
{
  unint64_t result;

  result = qword_1ED3C9130;
  if (!qword_1ED3C9130)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEA98, &_s10CodingKeysON_66);
    atomic_store(result, (unint64_t *)&qword_1ED3C9130);
  }
  return result;
}

unint64_t sub_1BAED9FE0()
{
  unint64_t result;

  result = qword_1ED3C9128;
  if (!qword_1ED3C9128)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEAC0, &_s10CodingKeysON_66);
    atomic_store(result, (unint64_t *)&qword_1ED3C9128);
  }
  return result;
}

unint64_t sub_1BAEDA028()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B47C8;
  if (!qword_1EF2B47C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B47D0, (uint64_t)&_s10CodingKeysON_66, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B47C8);
  }
  return result;
}

unint64_t sub_1BAEDA08C()
{
  unint64_t result;

  result = qword_1ED3A58B0;
  if (!qword_1ED3A58B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEA08, &_s10CodingKeysON_67);
    atomic_store(result, (unint64_t *)&qword_1ED3A58B0);
  }
  return result;
}

unint64_t sub_1BAEDA0D4()
{
  unint64_t result;

  result = qword_1ED3A58A8;
  if (!qword_1ED3A58A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEA30, &_s10CodingKeysON_67);
    atomic_store(result, (unint64_t *)&qword_1ED3A58A8);
  }
  return result;
}

unint64_t sub_1BAEDA11C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B47D8;
  if (!qword_1EF2B47D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B47E0, (uint64_t)&_s10CodingKeysON_67, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B47D8);
  }
  return result;
}

unint64_t sub_1BAEDA180()
{
  unint64_t result;

  result = qword_1ED3A7C98;
  if (!qword_1ED3A7C98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE7E8, &_s10CodingKeysON_68);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C98);
  }
  return result;
}

unint64_t sub_1BAEDA1C8()
{
  unint64_t result;

  result = qword_1ED3A7C90;
  if (!qword_1ED3A7C90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE810, &_s10CodingKeysON_68);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C90);
  }
  return result;
}

unint64_t sub_1BAEDA210()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B47E8;
  if (!qword_1EF2B47E8)
  {
    sub_1BA4AD288(255, &qword_1EF2B47F0, (uint64_t)&_s10CodingKeysON_68, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B47E8);
  }
  return result;
}

unint64_t sub_1BAEDA274()
{
  unint64_t result;

  result = qword_1ED3A7C80;
  if (!qword_1ED3A7C80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE758, &_s10CodingKeysON_69);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C80);
  }
  return result;
}

unint64_t sub_1BAEDA2BC()
{
  unint64_t result;

  result = qword_1ED3A7C78;
  if (!qword_1ED3A7C78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE780, &_s10CodingKeysON_69);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C78);
  }
  return result;
}

unint64_t sub_1BAEDA304()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B47F8;
  if (!qword_1EF2B47F8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4800, (uint64_t)&_s10CodingKeysON_69, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B47F8);
  }
  return result;
}

unint64_t sub_1BAEDA368()
{
  unint64_t result;

  result = qword_1ED3A6BF0;
  if (!qword_1ED3A6BF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE538, &_s10CodingKeysON_70);
    atomic_store(result, (unint64_t *)&qword_1ED3A6BF0);
  }
  return result;
}

unint64_t sub_1BAEDA3B0()
{
  unint64_t result;

  result = qword_1ED3A6BE8;
  if (!qword_1ED3A6BE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE560, &_s10CodingKeysON_70);
    atomic_store(result, (unint64_t *)&qword_1ED3A6BE8);
  }
  return result;
}

unint64_t sub_1BAEDA3F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4808;
  if (!qword_1EF2B4808)
  {
    sub_1BA4AD288(255, &qword_1EF2B4810, (uint64_t)&_s10CodingKeysON_70, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4808);
  }
  return result;
}

unint64_t sub_1BAEDA45C()
{
  unint64_t result;

  result = qword_1ED3CB240;
  if (!qword_1ED3CB240)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE318, &_s14descr1E72CC401O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3CB240);
  }
  return result;
}

unint64_t sub_1BAEDA4A4()
{
  unint64_t result;

  result = qword_1ED3CB238;
  if (!qword_1ED3CB238)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE340, &_s14descr1E72CC401O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3CB238);
  }
  return result;
}

unint64_t sub_1BAEDA4EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4818;
  if (!qword_1EF2B4818)
  {
    sub_1BA4AD288(255, &qword_1EF2B4820, (uint64_t)&_s14descr1E72CC401O10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4818);
  }
  return result;
}

unint64_t sub_1BAEDA550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4828;
  if (!qword_1EF2B4828)
  {
    sub_1BA4AD288(255, &qword_1EF2B4830, (uint64_t)&_s10CodingKeysON_71, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4828);
  }
  return result;
}

unint64_t sub_1BAEDA5B4()
{
  unint64_t result;

  result = qword_1ED3A88D8;
  if (!qword_1ED3A88D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDFA0, &_s10CodingKeysON_72);
    atomic_store(result, (unint64_t *)&qword_1ED3A88D8);
  }
  return result;
}

unint64_t sub_1BAEDA5FC()
{
  unint64_t result;

  result = qword_1ED3A88D0;
  if (!qword_1ED3A88D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDFC8, &_s10CodingKeysON_72);
    atomic_store(result, (unint64_t *)&qword_1ED3A88D0);
  }
  return result;
}

unint64_t sub_1BAEDA644()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4838;
  if (!qword_1EF2B4838)
  {
    sub_1BA4AD288(255, &qword_1EF2B4840, (uint64_t)&_s10CodingKeysON_72, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4838);
  }
  return result;
}

unint64_t sub_1BAEDA6A8()
{
  unint64_t result;

  result = qword_1ED3A6EE0;
  if (!qword_1ED3A6EE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDF10, &_s10CodingKeysON_73);
    atomic_store(result, (unint64_t *)&qword_1ED3A6EE0);
  }
  return result;
}

unint64_t sub_1BAEDA6F0()
{
  unint64_t result;

  result = qword_1ED3A6ED8;
  if (!qword_1ED3A6ED8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDF38, &_s10CodingKeysON_73);
    atomic_store(result, (unint64_t *)&qword_1ED3A6ED8);
  }
  return result;
}

unint64_t sub_1BAEDA738()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4848;
  if (!qword_1EF2B4848)
  {
    sub_1BA4AD288(255, &qword_1EF2B4850, (uint64_t)&_s10CodingKeysON_73, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4848);
  }
  return result;
}

unint64_t sub_1BAEDA79C()
{
  unint64_t result;

  result = qword_1ED3A2C28;
  if (!qword_1ED3A2C28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDDB8, &_s10CodingKeysON_74);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C28);
  }
  return result;
}

unint64_t sub_1BAEDA7E4()
{
  unint64_t result;

  result = qword_1ED3A2C20;
  if (!qword_1ED3A2C20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDDE0, &_s10CodingKeysON_74);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C20);
  }
  return result;
}

unint64_t sub_1BAEDA82C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4858;
  if (!qword_1EF2B4858)
  {
    sub_1BA4AD288(255, &qword_1EF2B4860, (uint64_t)&_s10CodingKeysON_74, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4858);
  }
  return result;
}

unint64_t sub_1BAEDA890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4868;
  if (!qword_1EF2B4868)
  {
    sub_1BA4AD288(255, &qword_1EF2B4870, (uint64_t)&_s10CodingKeysON_75, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4868);
  }
  return result;
}

unint64_t sub_1BAEDA8F4()
{
  unint64_t result;

  result = qword_1EF2B4878;
  if (!qword_1EF2B4878)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDC98, &_s10CodingKeysON_76);
    atomic_store(result, (unint64_t *)&qword_1EF2B4878);
  }
  return result;
}

unint64_t sub_1BAEDA93C()
{
  unint64_t result;

  result = qword_1EF2B4880;
  if (!qword_1EF2B4880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDCC0, &_s10CodingKeysON_76);
    atomic_store(result, (unint64_t *)&qword_1EF2B4880);
  }
  return result;
}

unint64_t sub_1BAEDA984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4888;
  if (!qword_1EF2B4888)
  {
    sub_1BA4AD288(255, &qword_1EF2B4890, (uint64_t)&_s10CodingKeysON_76, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4888);
  }
  return result;
}

unint64_t sub_1BAEDA9E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4898;
  if (!qword_1EF2B4898)
  {
    sub_1BA4AD288(255, &qword_1EF2B48A0, (uint64_t)&_s10CodingKeysON_77, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4898);
  }
  return result;
}

unint64_t sub_1BAEDAA4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B48A8;
  if (!qword_1EF2B48A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B48B0, (uint64_t)&_s10CodingKeysON_78, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B48A8);
  }
  return result;
}

unint64_t sub_1BAEDAAB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B48B8;
  if (!qword_1EF2B48B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B48C0, (uint64_t)&_s10CodingKeysON_79, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B48B8);
  }
  return result;
}

unint64_t sub_1BAEDAB14()
{
  unint64_t result;

  result = qword_1ED3AFAE8;
  if (!qword_1ED3AFAE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD900, &_s10CodingKeysON_80);
    atomic_store(result, (unint64_t *)&qword_1ED3AFAE8);
  }
  return result;
}

unint64_t sub_1BAEDAB5C()
{
  unint64_t result;

  result = qword_1ED3AFAE0;
  if (!qword_1ED3AFAE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD928, &_s10CodingKeysON_80);
    atomic_store(result, (unint64_t *)&qword_1ED3AFAE0);
  }
  return result;
}

unint64_t sub_1BAEDABA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B48C8;
  if (!qword_1EF2B48C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B48D0, (uint64_t)&_s10CodingKeysON_80, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B48C8);
  }
  return result;
}

unint64_t sub_1BAEDAC08()
{
  unint64_t result;

  result = qword_1ED3A5768;
  if (!qword_1ED3A5768)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD7A8, &_s10CodingKeysON_81);
    atomic_store(result, (unint64_t *)&qword_1ED3A5768);
  }
  return result;
}

unint64_t sub_1BAEDAC50()
{
  unint64_t result;

  result = qword_1ED3A5760;
  if (!qword_1ED3A5760)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD7D0, &_s10CodingKeysON_81);
    atomic_store(result, (unint64_t *)&qword_1ED3A5760);
  }
  return result;
}

unint64_t sub_1BAEDAC98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B48D8;
  if (!qword_1EF2B48D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B48E0, (uint64_t)&_s10CodingKeysON_81, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B48D8);
  }
  return result;
}

unint64_t sub_1BAEDACFC()
{
  unint64_t result;

  result = qword_1EF2B48E8;
  if (!qword_1EF2B48E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD718, &_s10CodingKeysON_82);
    atomic_store(result, (unint64_t *)&qword_1EF2B48E8);
  }
  return result;
}

unint64_t sub_1BAEDAD44()
{
  unint64_t result;

  result = qword_1EF2B48F0;
  if (!qword_1EF2B48F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD740, &_s10CodingKeysON_82);
    atomic_store(result, (unint64_t *)&qword_1EF2B48F0);
  }
  return result;
}

unint64_t sub_1BAEDAD8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B48F8;
  if (!qword_1EF2B48F8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4900, (uint64_t)&_s10CodingKeysON_82, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B48F8);
  }
  return result;
}

unint64_t sub_1BAEDADF0()
{
  unint64_t result;

  result = qword_1EF2B4908;
  if (!qword_1EF2B4908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD688, &_s10CodingKeysON_83);
    atomic_store(result, (unint64_t *)&qword_1EF2B4908);
  }
  return result;
}

unint64_t sub_1BAEDAE38()
{
  unint64_t result;

  result = qword_1EF2B4910;
  if (!qword_1EF2B4910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD6B0, &_s10CodingKeysON_83);
    atomic_store(result, (unint64_t *)&qword_1EF2B4910);
  }
  return result;
}

unint64_t sub_1BAEDAE80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4918;
  if (!qword_1EF2B4918)
  {
    sub_1BA4AD288(255, &qword_1EF2B4920, (uint64_t)&_s10CodingKeysON_83, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4918);
  }
  return result;
}

unint64_t sub_1BAEDAEE4()
{
  unint64_t result;

  result = qword_1EF2B4928;
  if (!qword_1EF2B4928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD5F8, &_s10CodingKeysON_84);
    atomic_store(result, (unint64_t *)&qword_1EF2B4928);
  }
  return result;
}

unint64_t sub_1BAEDAF2C()
{
  unint64_t result;

  result = qword_1EF2B4930;
  if (!qword_1EF2B4930)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD620, &_s10CodingKeysON_84);
    atomic_store(result, (unint64_t *)&qword_1EF2B4930);
  }
  return result;
}

unint64_t sub_1BAEDAF74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4938;
  if (!qword_1EF2B4938)
  {
    sub_1BA4AD288(255, &qword_1EF2B4940, (uint64_t)&_s10CodingKeysON_84, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4938);
  }
  return result;
}

unint64_t sub_1BAEDAFD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4948;
  if (!qword_1EF2B4948)
  {
    sub_1BA4AD288(255, &qword_1EF2B4950, (uint64_t)&_s14descr1E72CBEB9O10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4948);
  }
  return result;
}

unint64_t sub_1BAEDB03C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4958;
  if (!qword_1EF2B4958)
  {
    sub_1BA4AD288(255, &qword_1EF2B4960, (uint64_t)&_s10CodingKeysON_85, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4958);
  }
  return result;
}

unint64_t sub_1BAEDB0A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4968;
  if (!qword_1EF2B4968)
  {
    sub_1BA4AD288(255, &qword_1EF2B4970, (uint64_t)&_s10CodingKeysON_86, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4968);
  }
  return result;
}

unint64_t sub_1BAEDB104()
{
  unint64_t result;

  result = qword_1ED3A5850;
  if (!qword_1ED3A5850)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD160, &_s10CodingKeysON_87);
    atomic_store(result, (unint64_t *)&qword_1ED3A5850);
  }
  return result;
}

unint64_t sub_1BAEDB14C()
{
  unint64_t result;

  result = qword_1ED3A5848;
  if (!qword_1ED3A5848)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD188, &_s10CodingKeysON_87);
    atomic_store(result, (unint64_t *)&qword_1ED3A5848);
  }
  return result;
}

unint64_t sub_1BAEDB194()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4978;
  if (!qword_1EF2B4978)
  {
    sub_1BA4AD288(255, &qword_1EF2B4980, (uint64_t)&_s10CodingKeysON_87, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4978);
  }
  return result;
}

unint64_t sub_1BAEDB1F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4988;
  if (!qword_1EF2B4988)
  {
    sub_1BA4AD288(255, &qword_1EF2B4990, (uint64_t)&_s10CodingKeysON_88, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4988);
  }
  return result;
}

unint64_t sub_1BAEDB25C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4998;
  if (!qword_1EF2B4998)
  {
    sub_1BA4AD288(255, &qword_1EF2B49A0, (uint64_t)&_s10CodingKeysON_89, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4998);
  }
  return result;
}

unint64_t sub_1BAEDB2C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B49A8;
  if (!qword_1EF2B49A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B49B0, (uint64_t)&_s10CodingKeysON_90, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B49A8);
  }
  return result;
}

unint64_t sub_1BAEDB324()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B49B8;
  if (!qword_1EF2B49B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B49C0, (uint64_t)&_s10CodingKeysON_91, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B49B8);
  }
  return result;
}

unint64_t sub_1BAEDB388()
{
  unint64_t result;

  result = qword_1EF2B49C8;
  if (!qword_1EF2B49C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCC38, &_s10CodingKeysON_92);
    atomic_store(result, (unint64_t *)&qword_1EF2B49C8);
  }
  return result;
}

unint64_t sub_1BAEDB3D0()
{
  unint64_t result;

  result = qword_1EF2B49D0;
  if (!qword_1EF2B49D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCC60, &_s10CodingKeysON_92);
    atomic_store(result, (unint64_t *)&qword_1EF2B49D0);
  }
  return result;
}

unint64_t sub_1BAEDB418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B49D8;
  if (!qword_1EF2B49D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B49E0, (uint64_t)&_s10CodingKeysON_92, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B49D8);
  }
  return result;
}

unint64_t sub_1BAEDB47C()
{
  unint64_t result;

  result = qword_1EF2B49E8;
  if (!qword_1EF2B49E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCAE0, &_s10CodingKeysON_93);
    atomic_store(result, (unint64_t *)&qword_1EF2B49E8);
  }
  return result;
}

unint64_t sub_1BAEDB4C4()
{
  unint64_t result;

  result = qword_1EF2B49F0;
  if (!qword_1EF2B49F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCB08, &_s10CodingKeysON_93);
    atomic_store(result, (unint64_t *)&qword_1EF2B49F0);
  }
  return result;
}

unint64_t sub_1BAEDB50C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B49F8;
  if (!qword_1EF2B49F8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4A00, (uint64_t)&_s10CodingKeysON_93, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B49F8);
  }
  return result;
}

unint64_t sub_1BAEDB570()
{
  unint64_t result;

  result = qword_1EF2B4A08;
  if (!qword_1EF2B4A08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCA50, &_s10CodingKeysON_94);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A08);
  }
  return result;
}

unint64_t sub_1BAEDB5B8()
{
  unint64_t result;

  result = qword_1EF2B4A10;
  if (!qword_1EF2B4A10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCA78, &_s10CodingKeysON_94);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A10);
  }
  return result;
}

unint64_t sub_1BAEDB600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4A18;
  if (!qword_1EF2B4A18)
  {
    sub_1BA4AD288(255, &qword_1EF2B4A20, (uint64_t)&_s10CodingKeysON_94, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A18);
  }
  return result;
}

unint64_t sub_1BAEDB664()
{
  unint64_t result;

  result = qword_1EF2B4A28;
  if (!qword_1EF2B4A28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC830, &_s10CodingKeysON_95);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A28);
  }
  return result;
}

unint64_t sub_1BAEDB6AC()
{
  unint64_t result;

  result = qword_1EF2B4A30;
  if (!qword_1EF2B4A30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC858, &_s10CodingKeysON_95);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A30);
  }
  return result;
}

unint64_t sub_1BAEDB6F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4A38;
  if (!qword_1EF2B4A38)
  {
    sub_1BA4AD288(255, &qword_1EF2B4A40, (uint64_t)&_s10CodingKeysON_95, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A38);
  }
  return result;
}

unint64_t sub_1BAEDB758()
{
  unint64_t result;

  result = qword_1EF2B4A48;
  if (!qword_1EF2B4A48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC7A0, &_s10CodingKeysON_96);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A48);
  }
  return result;
}

unint64_t sub_1BAEDB7A0()
{
  unint64_t result;

  result = qword_1EF2B4A50;
  if (!qword_1EF2B4A50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC7C8, &_s10CodingKeysON_96);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A50);
  }
  return result;
}

unint64_t sub_1BAEDB7E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4A58;
  if (!qword_1EF2B4A58)
  {
    sub_1BA4AD288(255, &qword_1EF2B4A60, (uint64_t)&_s10CodingKeysON_96, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A58);
  }
  return result;
}

unint64_t sub_1BAEDB84C()
{
  unint64_t result;

  result = qword_1EF2B4A68;
  if (!qword_1EF2B4A68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC580, &_s10CodingKeysON_97);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A68);
  }
  return result;
}

unint64_t sub_1BAEDB894()
{
  unint64_t result;

  result = qword_1EF2B4A70;
  if (!qword_1EF2B4A70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC5A8, &_s10CodingKeysON_97);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A70);
  }
  return result;
}

unint64_t sub_1BAEDB8DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4A78;
  if (!qword_1EF2B4A78)
  {
    sub_1BA4AD288(255, &qword_1EF2B4A80, (uint64_t)&_s10CodingKeysON_97, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A78);
  }
  return result;
}

unint64_t sub_1BAEDB940()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4A88;
  if (!qword_1EF2B4A88)
  {
    sub_1BA4AD288(255, &qword_1EF2B4A90, (uint64_t)&_s14descr1E72CC509C10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A88);
  }
  return result;
}

unint64_t sub_1BAEDB9A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4A98;
  if (!qword_1EF2B4A98)
  {
    sub_1BA4AD288(255, &qword_1EF2B4AA0, (uint64_t)&_s10CodingKeysON_98, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4A98);
  }
  return result;
}

unint64_t sub_1BAEDBA08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4AA8;
  if (!qword_1EF2B4AA8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4AB0, (uint64_t)&_s10CodingKeysON_99, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4AA8);
  }
  return result;
}

unint64_t sub_1BAEDBA6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4AB8;
  if (!qword_1EF2B4AB8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4AC0, (uint64_t)&_s10CodingKeysON_100, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4AB8);
  }
  return result;
}

unint64_t sub_1BAEDBAD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4AC8;
  if (!qword_1EF2B4AC8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4AD0, (uint64_t)&_s10CodingKeysON_101, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4AC8);
  }
  return result;
}

unint64_t sub_1BAEDBB34()
{
  unint64_t result;

  result = qword_1ED3D17A8;
  if (!qword_1ED3D17A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC090, &_s10CodingKeysON_102);
    atomic_store(result, (unint64_t *)&qword_1ED3D17A8);
  }
  return result;
}

unint64_t sub_1BAEDBB7C()
{
  unint64_t result;

  result = qword_1ED3D17A0;
  if (!qword_1ED3D17A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC0B8, &_s10CodingKeysON_102);
    atomic_store(result, (unint64_t *)&qword_1ED3D17A0);
  }
  return result;
}

unint64_t sub_1BAEDBBC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4AD8;
  if (!qword_1EF2B4AD8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4AE0, (uint64_t)&_s10CodingKeysON_102, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4AD8);
  }
  return result;
}

unint64_t sub_1BAEDBC28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4AE8;
  if (!qword_1EF2B4AE8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4AF0, (uint64_t)&_s10CodingKeysON_103, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4AE8);
  }
  return result;
}

unint64_t sub_1BAEDBC8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4AF8;
  if (!qword_1EF2B4AF8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4B00, (uint64_t)&_s14descr1E72CBFA1O10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4AF8);
  }
  return result;
}

unint64_t sub_1BAEDBCF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4B08;
  if (!qword_1EF2B4B08)
  {
    sub_1BA4AD288(255, &qword_1EF2B4B10, (uint64_t)&_s10CodingKeysON_104, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4B08);
  }
  return result;
}

unint64_t sub_1BAEDBD54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4B18;
  if (!qword_1EF2B4B18)
  {
    sub_1BA4AD288(255, &qword_1EF2B4B20, (uint64_t)&_s10CodingKeysON_105, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4B18);
  }
  return result;
}

unint64_t sub_1BAEDBDB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4B28;
  if (!qword_1EF2B4B28)
  {
    sub_1BA4AD288(255, &qword_1EF2B4B30, (uint64_t)&_s10CodingKeysON_106, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4B28);
  }
  return result;
}

unint64_t sub_1BAEDBE1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4B38;
  if (!qword_1EF2B4B38)
  {
    sub_1BA4AD288(255, &qword_1EF2B4B40, (uint64_t)&_s10CodingKeysON_107, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4B38);
  }
  return result;
}

unint64_t sub_1BAEDBE80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4B48;
  if (!qword_1EF2B4B48)
  {
    sub_1BA4AD288(255, &qword_1EF2B4B50, (uint64_t)&_s10CodingKeysON_108, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4B48);
  }
  return result;
}

unint64_t sub_1BAEDBEE4()
{
  unint64_t result;

  result = qword_1ED3A6DF0;
  if (!qword_1ED3A6DF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB8F0, &_s10CodingKeysON_109);
    atomic_store(result, (unint64_t *)&qword_1ED3A6DF0);
  }
  return result;
}

unint64_t sub_1BAEDBF2C()
{
  unint64_t result;

  result = qword_1ED3A6DE8;
  if (!qword_1ED3A6DE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB918, &_s10CodingKeysON_109);
    atomic_store(result, (unint64_t *)&qword_1ED3A6DE8);
  }
  return result;
}

unint64_t sub_1BAEDBF74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4B58;
  if (!qword_1EF2B4B58)
  {
    sub_1BA4AD288(255, &qword_1EF2B4B60, (uint64_t)&_s10CodingKeysON_109, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4B58);
  }
  return result;
}

unint64_t sub_1BAEDBFD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4B68;
  if (!qword_1EF2B4B68)
  {
    sub_1BA4AD288(255, &qword_1EF2B4B70, (uint64_t)&_s10CodingKeysON_110, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4B68);
  }
  return result;
}

unint64_t sub_1BAEDC03C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4B78;
  if (!qword_1EF2B4B78)
  {
    sub_1BA4AD288(255, &qword_1EF2B4B80, (uint64_t)&_s10CodingKeysON_111, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4B78);
  }
  return result;
}

unint64_t sub_1BAEDC0A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4B88;
  if (!qword_1EF2B4B88)
  {
    sub_1BA4AD288(255, &qword_1EF2B4B90, (uint64_t)&_s10CodingKeysON_112, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4B88);
  }
  return result;
}

unint64_t sub_1BAEDC104()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4B98;
  if (!qword_1EF2B4B98)
  {
    sub_1BA4AD288(255, &qword_1EF2B4BA0, (uint64_t)&_s10CodingKeysON_113, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4B98);
  }
  return result;
}

unint64_t sub_1BAEDC168()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4BA8;
  if (!qword_1EF2B4BA8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4BB0, (uint64_t)&_s10CodingKeysON_114, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4BA8);
  }
  return result;
}

unint64_t sub_1BAEDC1CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4BB8;
  if (!qword_1EF2B4BB8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4BC0, (uint64_t)&_s10CodingKeysON_115, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4BB8);
  }
  return result;
}

unint64_t sub_1BAEDC230()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4BC8;
  if (!qword_1EF2B4BC8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4BD0, (uint64_t)&_s10CodingKeysON_116, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4BC8);
  }
  return result;
}

unint64_t sub_1BAEDC294()
{
  unint64_t result;

  result = qword_1ED3A6BD0;
  if (!qword_1ED3A6BD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAD68, &_s10CodingKeysON_117);
    atomic_store(result, (unint64_t *)&qword_1ED3A6BD0);
  }
  return result;
}

unint64_t sub_1BAEDC2DC()
{
  unint64_t result;

  result = qword_1ED3A6BC8;
  if (!qword_1ED3A6BC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAD90, &_s10CodingKeysON_117);
    atomic_store(result, (unint64_t *)&qword_1ED3A6BC8);
  }
  return result;
}

unint64_t sub_1BAEDC324()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4BD8;
  if (!qword_1EF2B4BD8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4BE0, (uint64_t)&_s10CodingKeysON_117, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4BD8);
  }
  return result;
}

unint64_t sub_1BAEDC388()
{
  unint64_t result;

  result = qword_1EF2B4BE8;
  if (!qword_1EF2B4BE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAC10, &_s10CodingKeysON_118);
    atomic_store(result, (unint64_t *)&qword_1EF2B4BE8);
  }
  return result;
}

unint64_t sub_1BAEDC3D0()
{
  unint64_t result;

  result = qword_1EF2B4BF0;
  if (!qword_1EF2B4BF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAC38, &_s10CodingKeysON_118);
    atomic_store(result, (unint64_t *)&qword_1EF2B4BF0);
  }
  return result;
}

unint64_t sub_1BAEDC418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4BF8;
  if (!qword_1EF2B4BF8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4C00, (uint64_t)&_s10CodingKeysON_118, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4BF8);
  }
  return result;
}

unint64_t sub_1BAEDC47C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4C08;
  if (!qword_1EF2B4C08)
  {
    sub_1BA4AD288(255, &qword_1EF2B4C10, (uint64_t)&_s10CodingKeysON_119, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4C08);
  }
  return result;
}

unint64_t sub_1BAEDC4E0()
{
  unint64_t result;

  result = qword_1ED3C7CA8;
  if (!qword_1ED3C7CA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA3E8, &_s10CodingKeysON_120);
    atomic_store(result, (unint64_t *)&qword_1ED3C7CA8);
  }
  return result;
}

unint64_t sub_1BAEDC528()
{
  unint64_t result;

  result = qword_1ED3C7CA0;
  if (!qword_1ED3C7CA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA410, &_s10CodingKeysON_120);
    atomic_store(result, (unint64_t *)&qword_1ED3C7CA0);
  }
  return result;
}

unint64_t sub_1BAEDC570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4C18;
  if (!qword_1EF2B4C18)
  {
    sub_1BA4AD288(255, &qword_1EF2B4C20, (uint64_t)&_s10CodingKeysON_120, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4C18);
  }
  return result;
}

unint64_t sub_1BAEDC5D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4C28;
  if (!qword_1EF2B4C28)
  {
    sub_1BA4AD288(255, &qword_1EF2B4C30, (uint64_t)&_s10CodingKeysON_121, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4C28);
  }
  return result;
}

unint64_t sub_1BAEDC638()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4C38;
  if (!qword_1EF2B4C38)
  {
    sub_1BA4AD288(255, &qword_1EF2B4C40, (uint64_t)&_s10CodingKeysON_122, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4C38);
  }
  return result;
}

unint64_t sub_1BAEDC69C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4C48;
  if (!qword_1EF2B4C48)
  {
    sub_1BA4AD288(255, &qword_1EF2B4C50, (uint64_t)&_s10CodingKeysON_123, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4C48);
  }
  return result;
}

unint64_t sub_1BAEDC700()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4C58;
  if (!qword_1EF2B4C58)
  {
    sub_1BA4AD288(255, &qword_1EF2B4C60, (uint64_t)&_s10CodingKeysON_124, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4C58);
  }
  return result;
}

unint64_t sub_1BAEDC764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4C68;
  if (!qword_1EF2B4C68)
  {
    sub_1BA4AD288(255, &qword_1EF2B4C70, (uint64_t)&_s14descr1E72CBFF1V10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4C68);
  }
  return result;
}

unint64_t sub_1BAEDC7C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4C78;
  if (!qword_1EF2B4C78)
  {
    sub_1BA4AD288(255, &qword_1EF2B4C80, (uint64_t)&_s10CodingKeysON_125, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4C78);
  }
  return result;
}

unint64_t sub_1BAEDC82C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4C88;
  if (!qword_1EF2B4C88)
  {
    sub_1BA4AD288(255, &qword_1EF2B4C90, (uint64_t)&_s10CodingKeysON_126, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4C88);
  }
  return result;
}

unint64_t sub_1BAEDC890()
{
  unint64_t result;

  result = qword_1EF2B4C98;
  if (!qword_1EF2B4C98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9798, &_s10CodingKeysON_127);
    atomic_store(result, (unint64_t *)&qword_1EF2B4C98);
  }
  return result;
}

unint64_t sub_1BAEDC8D8()
{
  unint64_t result;

  result = qword_1EF2B4CA0;
  if (!qword_1EF2B4CA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B97C0, &_s10CodingKeysON_127);
    atomic_store(result, (unint64_t *)&qword_1EF2B4CA0);
  }
  return result;
}

unint64_t sub_1BAEDC920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4CA8;
  if (!qword_1EF2B4CA8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4CB0, (uint64_t)&_s10CodingKeysON_127, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4CA8);
  }
  return result;
}

unint64_t sub_1BAEDC984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4CB8;
  if (!qword_1EF2B4CB8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4CC0, (uint64_t)&_s10CodingKeysON_128, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4CB8);
  }
  return result;
}

unint64_t sub_1BAEDC9E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4CC8;
  if (!qword_1EF2B4CC8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4CD0, (uint64_t)&_s10CodingKeysON_129, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4CC8);
  }
  return result;
}

unint64_t sub_1BAEDCA4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4CD8;
  if (!qword_1EF2B4CD8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4CE0, (uint64_t)&_s10CodingKeysON_130, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4CD8);
  }
  return result;
}

unint64_t sub_1BAEDCAB0()
{
  unint64_t result;

  result = qword_1EF2B4CE8;
  if (!qword_1EF2B4CE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9558, &_s10CodingKeysON_131);
    atomic_store(result, (unint64_t *)&qword_1EF2B4CE8);
  }
  return result;
}

unint64_t sub_1BAEDCAF8()
{
  unint64_t result;

  result = qword_1EF2B4CF0;
  if (!qword_1EF2B4CF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9580, &_s10CodingKeysON_131);
    atomic_store(result, (unint64_t *)&qword_1EF2B4CF0);
  }
  return result;
}

unint64_t sub_1BAEDCB40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4CF8;
  if (!qword_1EF2B4CF8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4D00, (uint64_t)&_s10CodingKeysON_131, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4CF8);
  }
  return result;
}

unint64_t sub_1BAEDCBA4()
{
  unint64_t result;

  result = qword_1EF2B4D08;
  if (!qword_1EF2B4D08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B94C8, &_s10CodingKeysON_132);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D08);
  }
  return result;
}

unint64_t sub_1BAEDCBEC()
{
  unint64_t result;

  result = qword_1EF2B4D10;
  if (!qword_1EF2B4D10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B94F0, &_s10CodingKeysON_132);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D10);
  }
  return result;
}

unint64_t sub_1BAEDCC34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4D18;
  if (!qword_1EF2B4D18)
  {
    sub_1BA4AD288(255, &qword_1EF2B4D20, (uint64_t)&_s10CodingKeysON_132, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D18);
  }
  return result;
}

unint64_t sub_1BAEDCC98()
{
  unint64_t result;

  result = qword_1ED3A9928;
  if (!qword_1ED3A9928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9438, &_s10CodingKeysON_133);
    atomic_store(result, (unint64_t *)&qword_1ED3A9928);
  }
  return result;
}

unint64_t sub_1BAEDCCE0()
{
  unint64_t result;

  result = qword_1ED3A9920;
  if (!qword_1ED3A9920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9460, &_s10CodingKeysON_133);
    atomic_store(result, (unint64_t *)&qword_1ED3A9920);
  }
  return result;
}

unint64_t sub_1BAEDCD28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4D28;
  if (!qword_1EF2B4D28)
  {
    sub_1BA4AD288(255, &qword_1EF2B4D30, (uint64_t)&_s10CodingKeysON_133, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D28);
  }
  return result;
}

unint64_t sub_1BAEDCD8C()
{
  unint64_t result;

  result = qword_1ED3A6B18;
  if (!qword_1ED3A6B18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B93A8, &_s10CodingKeysON_134);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B18);
  }
  return result;
}

unint64_t sub_1BAEDCDD4()
{
  unint64_t result;

  result = qword_1ED3A6B10;
  if (!qword_1ED3A6B10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B93D0, &_s10CodingKeysON_134);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B10);
  }
  return result;
}

unint64_t sub_1BAEDCE1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4D38;
  if (!qword_1EF2B4D38)
  {
    sub_1BA4AD288(255, &qword_1EF2B4D40, (uint64_t)&_s10CodingKeysON_134, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D38);
  }
  return result;
}

unint64_t sub_1BAEDCE80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4D48;
  if (!qword_1EF2B4D48)
  {
    sub_1BA4AD288(255, &qword_1EF2B4D50, (uint64_t)&_s10CodingKeysON_135, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D48);
  }
  return result;
}

unint64_t sub_1BAEDCEE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4D58;
  if (!qword_1EF2B4D58)
  {
    sub_1BA4AD288(255, &qword_1EF2B4D60, (uint64_t)&_s10CodingKeysON_136, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D58);
  }
  return result;
}

unint64_t sub_1BAEDCF48()
{
  unint64_t result;

  result = qword_1EF2B4D68;
  if (!qword_1EF2B4D68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9130, &_s10CodingKeysON_137);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D68);
  }
  return result;
}

unint64_t sub_1BAEDCF90()
{
  unint64_t result;

  result = qword_1EF2B4D70;
  if (!qword_1EF2B4D70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9158, &_s10CodingKeysON_137);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D70);
  }
  return result;
}

unint64_t sub_1BAEDCFD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4D78;
  if (!qword_1EF2B4D78)
  {
    sub_1BA4AD288(255, &qword_1EF2B4D80, (uint64_t)&_s10CodingKeysON_137, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D78);
  }
  return result;
}

unint64_t sub_1BAEDD03C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4D88;
  if (!qword_1EF2B4D88)
  {
    sub_1BA4AD288(255, &qword_1EF2B4D90, (uint64_t)&_s10CodingKeysON_138, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D88);
  }
  return result;
}

unint64_t sub_1BAEDD0A0()
{
  unint64_t result;

  result = qword_1ED3AD6B0;
  if (!qword_1ED3AD6B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8F48, &_s10CodingKeysON_139);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6B0);
  }
  return result;
}

unint64_t sub_1BAEDD0E8()
{
  unint64_t result;

  result = qword_1ED3AD6A8;
  if (!qword_1ED3AD6A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8F70, &_s10CodingKeysON_139);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6A8);
  }
  return result;
}

unint64_t sub_1BAEDD130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4D98;
  if (!qword_1EF2B4D98)
  {
    sub_1BA4AD288(255, &qword_1EF2B4DA0, (uint64_t)&_s10CodingKeysON_139, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4D98);
  }
  return result;
}

unint64_t sub_1BAEDD194()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4DA8;
  if (!qword_1EF2B4DA8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4DB0, (uint64_t)&_s10CodingKeysON_140, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4DA8);
  }
  return result;
}

unint64_t sub_1BAEDD1F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4DB8;
  if (!qword_1EF2B4DB8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4DC0, (uint64_t)&_s10CodingKeysON_141, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4DB8);
  }
  return result;
}

unint64_t sub_1BAEDD25C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4DC8;
  if (!qword_1EF2B4DC8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4DD0, (uint64_t)&_s10CodingKeysON_142, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4DC8);
  }
  return result;
}

unint64_t sub_1BAEDD2C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4DD8;
  if (!qword_1EF2B4DD8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4DE0, (uint64_t)&_s10CodingKeysON_143, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4DD8);
  }
  return result;
}

unint64_t sub_1BAEDD324()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4DE8;
  if (!qword_1EF2B4DE8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4DF0, (uint64_t)&_s10CodingKeysON_144, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4DE8);
  }
  return result;
}

unint64_t sub_1BAEDD388()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4DF8;
  if (!qword_1EF2B4DF8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4E00, (uint64_t)&_s10CodingKeysON_145, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4DF8);
  }
  return result;
}

unint64_t sub_1BAEDD3EC()
{
  unint64_t result;

  result = qword_1ED3A41B8;
  if (!qword_1ED3A41B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8518, &_s10CodingKeysON_146);
    atomic_store(result, (unint64_t *)&qword_1ED3A41B8);
  }
  return result;
}

unint64_t sub_1BAEDD434()
{
  unint64_t result;

  result = qword_1ED3A41B0;
  if (!qword_1ED3A41B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8540, &_s10CodingKeysON_146);
    atomic_store(result, (unint64_t *)&qword_1ED3A41B0);
  }
  return result;
}

unint64_t sub_1BAEDD47C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4E08;
  if (!qword_1EF2B4E08)
  {
    sub_1BA4AD288(255, &qword_1EF2B4E10, (uint64_t)&_s10CodingKeysON_146, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E08);
  }
  return result;
}

unint64_t sub_1BAEDD4E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4E18;
  if (!qword_1EF2B4E18)
  {
    sub_1BA4AD288(255, &qword_1EF2B4E20, (uint64_t)&_s10CodingKeysON_147, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E18);
  }
  return result;
}

unint64_t sub_1BAEDD544()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4E28;
  if (!qword_1EF2B4E28)
  {
    sub_1BA4AD288(255, &qword_1EF2B4E30, (uint64_t)&_s10CodingKeysON_148, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E28);
  }
  return result;
}

unint64_t sub_1BAEDD5A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4E38;
  if (!qword_1EF2B4E38)
  {
    sub_1BA4AD288(255, &qword_1EF2B4E40, (uint64_t)&_s10CodingKeysON_149, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E38);
  }
  return result;
}

unint64_t sub_1BAEDD60C()
{
  unint64_t result;

  result = qword_1ED3A9FB8;
  if (!qword_1ED3A9FB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8148, &_s10CodingKeysON_150);
    atomic_store(result, (unint64_t *)&qword_1ED3A9FB8);
  }
  return result;
}

unint64_t sub_1BAEDD654()
{
  unint64_t result;

  result = qword_1ED3A9FB0;
  if (!qword_1ED3A9FB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8170, &_s10CodingKeysON_150);
    atomic_store(result, (unint64_t *)&qword_1ED3A9FB0);
  }
  return result;
}

unint64_t sub_1BAEDD69C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4E48;
  if (!qword_1EF2B4E48)
  {
    sub_1BA4AD288(255, &qword_1EF2B4E50, (uint64_t)&_s10CodingKeysON_150, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E48);
  }
  return result;
}

unint64_t sub_1BAEDD700()
{
  unint64_t result;

  result = qword_1EF2B4E58;
  if (!qword_1EF2B4E58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B80B8, &_s10CodingKeysON_151);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E58);
  }
  return result;
}

unint64_t sub_1BAEDD748()
{
  unint64_t result;

  result = qword_1EF2B4E60;
  if (!qword_1EF2B4E60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B80E0, &_s10CodingKeysON_151);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E60);
  }
  return result;
}

unint64_t sub_1BAEDD790()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4E68;
  if (!qword_1EF2B4E68)
  {
    sub_1BA4AD288(255, &qword_1EF2B4E70, (uint64_t)&_s10CodingKeysON_151, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E68);
  }
  return result;
}

unint64_t sub_1BAEDD7F4()
{
  unint64_t result;

  result = qword_1EF2B4E78;
  if (!qword_1EF2B4E78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7F60, &_s10CodingKeysON_152);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E78);
  }
  return result;
}

unint64_t sub_1BAEDD83C()
{
  unint64_t result;

  result = qword_1EF2B4E80;
  if (!qword_1EF2B4E80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7F88, &_s10CodingKeysON_152);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E80);
  }
  return result;
}

unint64_t sub_1BAEDD884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4E88;
  if (!qword_1EF2B4E88)
  {
    sub_1BA4AD288(255, &qword_1EF2B4E90, (uint64_t)&_s10CodingKeysON_152, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E88);
  }
  return result;
}

unint64_t sub_1BAEDD8E8()
{
  unint64_t result;

  result = qword_1ED3CF548;
  if (!qword_1ED3CF548)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7ED0, &_s10CodingKeysON_153);
    atomic_store(result, (unint64_t *)&qword_1ED3CF548);
  }
  return result;
}

unint64_t sub_1BAEDD930()
{
  unint64_t result;

  result = qword_1ED3CF540;
  if (!qword_1ED3CF540)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7EF8, &_s10CodingKeysON_153);
    atomic_store(result, (unint64_t *)&qword_1ED3CF540);
  }
  return result;
}

unint64_t sub_1BAEDD978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4E98;
  if (!qword_1EF2B4E98)
  {
    sub_1BA4AD288(255, &qword_1EF2B4EA0, (uint64_t)&_s10CodingKeysON_153, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4E98);
  }
  return result;
}

unint64_t sub_1BAEDD9DC()
{
  unint64_t result;

  result = qword_1ED3CE5C0;
  if (!qword_1ED3CE5C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7E40, &_s10CodingKeysON_154);
    atomic_store(result, (unint64_t *)&qword_1ED3CE5C0);
  }
  return result;
}

unint64_t sub_1BAEDDA24()
{
  unint64_t result;

  result = qword_1ED3CE5B8;
  if (!qword_1ED3CE5B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7E68, &_s10CodingKeysON_154);
    atomic_store(result, (unint64_t *)&qword_1ED3CE5B8);
  }
  return result;
}

unint64_t sub_1BAEDDA6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4EA8;
  if (!qword_1EF2B4EA8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4EB0, (uint64_t)&_s10CodingKeysON_154, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4EA8);
  }
  return result;
}

unint64_t sub_1BAEDDAD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4EB8;
  if (!qword_1EF2B4EB8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4EC0, (uint64_t)&_s10CodingKeysON_155, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4EB8);
  }
  return result;
}

unint64_t sub_1BAEDDB34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4EC8;
  if (!qword_1EF2B4EC8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4ED0, (uint64_t)&_s10CodingKeysON_156, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4EC8);
  }
  return result;
}

unint64_t sub_1BAEDDB98()
{
  unint64_t result;

  result = qword_1EF2B4ED8;
  if (!qword_1EF2B4ED8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7850, &_s14descr1E72CBE69O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2B4ED8);
  }
  return result;
}

unint64_t sub_1BAEDDBE0()
{
  unint64_t result;

  result = qword_1EF2B4EE0;
  if (!qword_1EF2B4EE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7878, &_s14descr1E72CBE69O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF2B4EE0);
  }
  return result;
}

unint64_t sub_1BAEDDC28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4EE8;
  if (!qword_1EF2B4EE8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4EF0, (uint64_t)&_s14descr1E72CBE69O10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4EE8);
  }
  return result;
}

unint64_t sub_1BAEDDC8C()
{
  unint64_t result;

  result = qword_1EF2B4EF8;
  if (!qword_1EF2B4EF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B77C0, &_s10CodingKeysON_157);
    atomic_store(result, (unint64_t *)&qword_1EF2B4EF8);
  }
  return result;
}

unint64_t sub_1BAEDDCD4()
{
  unint64_t result;

  result = qword_1EF2B4F00;
  if (!qword_1EF2B4F00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B77E8, &_s10CodingKeysON_157);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F00);
  }
  return result;
}

unint64_t sub_1BAEDDD1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4F08;
  if (!qword_1EF2B4F08)
  {
    sub_1BA4AD288(255, &qword_1EF2B4F10, (uint64_t)&_s10CodingKeysON_157, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F08);
  }
  return result;
}

unint64_t sub_1BAEDDD80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4F18;
  if (!qword_1EF2B4F18)
  {
    sub_1BA4AD288(255, &qword_1EF2B4F20, (uint64_t)&_s10CodingKeysON_158, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F18);
  }
  return result;
}

unint64_t sub_1BAEDDDE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4F28;
  if (!qword_1EF2B4F28)
  {
    sub_1BA4AD288(255, &qword_1EF2B4F30, (uint64_t)&_s10CodingKeysON_159, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F28);
  }
  return result;
}

unint64_t sub_1BAEDDE48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4F38;
  if (!qword_1EF2B4F38)
  {
    sub_1BA4AD288(255, &qword_1EF2B4F40, (uint64_t)&_s10CodingKeysON_160, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F38);
  }
  return result;
}

unint64_t sub_1BAEDDEAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4F48;
  if (!qword_1EF2B4F48)
  {
    sub_1BA4AD288(255, &qword_1EF2B4F50, (uint64_t)&_s10CodingKeysON_161, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F48);
  }
  return result;
}

unint64_t sub_1BAEDDF10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4F58;
  if (!qword_1EF2B4F58)
  {
    sub_1BA4AD288(255, &qword_1EF2B4F60, (uint64_t)&_s14descr1E72CBC99O10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F58);
  }
  return result;
}

unint64_t sub_1BAEDDF74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4F68;
  if (!qword_1EF2B4F68)
  {
    sub_1BA4AD288(255, &qword_1EF2B4F70, (uint64_t)&_s10CodingKeysON_162, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F68);
  }
  return result;
}

unint64_t sub_1BAEDDFD8()
{
  unint64_t result;

  result = qword_1EF2B4F78;
  if (!qword_1EF2B4F78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7178, &_s10CodingKeysON_163);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F78);
  }
  return result;
}

unint64_t sub_1BAEDE020()
{
  unint64_t result;

  result = qword_1EF2B4F80;
  if (!qword_1EF2B4F80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B71A0, &_s10CodingKeysON_163);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F80);
  }
  return result;
}

unint64_t sub_1BAEDE068()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4F88;
  if (!qword_1EF2B4F88)
  {
    sub_1BA4AD288(255, &qword_1EF2B4F90, (uint64_t)&_s10CodingKeysON_163, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F88);
  }
  return result;
}

unint64_t sub_1BAEDE0CC()
{
  unint64_t result;

  result = qword_1EF2B4F98;
  if (!qword_1EF2B4F98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B70E8, &_s10CodingKeysON_164);
    atomic_store(result, (unint64_t *)&qword_1EF2B4F98);
  }
  return result;
}

unint64_t sub_1BAEDE114()
{
  unint64_t result;

  result = qword_1EF2B4FA0;
  if (!qword_1EF2B4FA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7110, &_s10CodingKeysON_164);
    atomic_store(result, (unint64_t *)&qword_1EF2B4FA0);
  }
  return result;
}

unint64_t sub_1BAEDE15C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4FA8;
  if (!qword_1EF2B4FA8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4FB0, (uint64_t)&_s10CodingKeysON_164, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4FA8);
  }
  return result;
}

unint64_t sub_1BAEDE1C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4FB8;
  if (!qword_1EF2B4FB8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4FC0, (uint64_t)&_s10CodingKeysON_165, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4FB8);
  }
  return result;
}

unint64_t sub_1BAEDE224()
{
  unint64_t result;

  result = qword_1ED3C6780;
  if (!qword_1ED3C6780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6E38, &_s14descr1E72CC7B9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3C6780);
  }
  return result;
}

unint64_t sub_1BAEDE26C()
{
  unint64_t result;

  result = qword_1ED3C6778;
  if (!qword_1ED3C6778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6E60, &_s14descr1E72CC7B9O10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED3C6778);
  }
  return result;
}

unint64_t sub_1BAEDE2B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4FC8;
  if (!qword_1EF2B4FC8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4FD0, (uint64_t)&_s14descr1E72CC7B9O10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4FC8);
  }
  return result;
}

unint64_t sub_1BAEDE318()
{
  unint64_t result;

  result = qword_1ED3A65E8;
  if (!qword_1ED3A65E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6DA8, &_s10CodingKeysON_166);
    atomic_store(result, (unint64_t *)&qword_1ED3A65E8);
  }
  return result;
}

unint64_t sub_1BAEDE360()
{
  unint64_t result;

  result = qword_1ED3A65E0;
  if (!qword_1ED3A65E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6DD0, &_s10CodingKeysON_166);
    atomic_store(result, (unint64_t *)&qword_1ED3A65E0);
  }
  return result;
}

unint64_t sub_1BAEDE3A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4FD8;
  if (!qword_1EF2B4FD8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4FE0, (uint64_t)&_s10CodingKeysON_166, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4FD8);
  }
  return result;
}

unint64_t sub_1BAEDE40C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4FE8;
  if (!qword_1EF2B4FE8)
  {
    sub_1BA4AD288(255, &qword_1EF2B4FF0, (uint64_t)&_s10CodingKeysON_167, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4FE8);
  }
  return result;
}

unint64_t sub_1BAEDE470()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B4FF8;
  if (!qword_1EF2B4FF8)
  {
    sub_1BA4AD288(255, &qword_1EF2B5000, (uint64_t)&_s10CodingKeysON_168, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B4FF8);
  }
  return result;
}

unint64_t sub_1BAEDE4D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5008;
  if (!qword_1EF2B5008)
  {
    sub_1BA4AD288(255, &qword_1EF2B5010, (uint64_t)&_s10CodingKeysON_169, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5008);
  }
  return result;
}

unint64_t sub_1BAEDE538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5018;
  if (!qword_1EF2B5018)
  {
    sub_1BA4AD288(255, &qword_1EF2B5020, (uint64_t)&_s10CodingKeysON_170, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5018);
  }
  return result;
}

unint64_t sub_1BAEDE59C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5028;
  if (!qword_1EF2B5028)
  {
    sub_1BA4AD288(255, &qword_1EF2B5030, (uint64_t)&_s14descr1E72CC7E9O10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5028);
  }
  return result;
}

unint64_t sub_1BAEDE600()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5038;
  if (!qword_1EF2B5038)
  {
    sub_1BA4AD288(255, &qword_1EF2B5040, (uint64_t)&_s10CodingKeysON_171, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5038);
  }
  return result;
}

unint64_t sub_1BAEDE664()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5048;
  if (!qword_1EF2B5048)
  {
    sub_1BA4AD288(255, &qword_1EF2B5050, (uint64_t)&_s10CodingKeysON_172, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5048);
  }
  return result;
}

unint64_t sub_1BAEDE6C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5058;
  if (!qword_1EF2B5058)
  {
    sub_1BA4AD288(255, &qword_1EF2B5060, (uint64_t)&_s10CodingKeysON_173, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5058);
  }
  return result;
}

unint64_t sub_1BAEDE72C()
{
  unint64_t result;

  result = qword_1ED3A6A38;
  if (!qword_1ED3A6A38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6640, &_s10CodingKeysON_174);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A38);
  }
  return result;
}

unint64_t sub_1BAEDE774()
{
  unint64_t result;

  result = qword_1ED3A6A30;
  if (!qword_1ED3A6A30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6668, &_s10CodingKeysON_174);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A30);
  }
  return result;
}

unint64_t sub_1BAEDE7BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5068;
  if (!qword_1EF2B5068)
  {
    sub_1BA4AD288(255, &qword_1EF2B5070, (uint64_t)&_s10CodingKeysON_174, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5068);
  }
  return result;
}

unint64_t sub_1BAEDE820()
{
  unint64_t result;

  result = qword_1ED3AE3F8;
  if (!qword_1ED3AE3F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B65B0, &_s10CodingKeysON_175);
    atomic_store(result, (unint64_t *)&qword_1ED3AE3F8);
  }
  return result;
}

unint64_t sub_1BAEDE868()
{
  unint64_t result;

  result = qword_1ED3AE3F0;
  if (!qword_1ED3AE3F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B65D8, &_s10CodingKeysON_175);
    atomic_store(result, (unint64_t *)&qword_1ED3AE3F0);
  }
  return result;
}

unint64_t sub_1BAEDE8B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5078;
  if (!qword_1EF2B5078)
  {
    sub_1BA4AD288(255, &qword_1EF2B5080, (uint64_t)&_s10CodingKeysON_175, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5078);
  }
  return result;
}

unint64_t sub_1BAEDE914()
{
  unint64_t result;

  result = qword_1ED3ADBA0;
  if (!qword_1ED3ADBA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6458, &_s10CodingKeysON_176);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBA0);
  }
  return result;
}

unint64_t sub_1BAEDE95C()
{
  unint64_t result;

  result = qword_1ED3ADB98;
  if (!qword_1ED3ADB98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6480, &_s10CodingKeysON_176);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB98);
  }
  return result;
}

unint64_t sub_1BAEDE9A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5088;
  if (!qword_1EF2B5088)
  {
    sub_1BA4AD288(255, &qword_1EF2B5090, (uint64_t)&_s10CodingKeysON_176, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5088);
  }
  return result;
}

unint64_t sub_1BAEDEA08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5098;
  if (!qword_1EF2B5098)
  {
    sub_1BA4AD288(255, &qword_1EF2B50A0, (uint64_t)&_s10CodingKeysON_177, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5098);
  }
  return result;
}

unint64_t sub_1BAEDEA6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B50A8;
  if (!qword_1EF2B50A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B50B0, (uint64_t)&_s10CodingKeysON_178, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B50A8);
  }
  return result;
}

unint64_t sub_1BAEDEAD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B50B8;
  if (!qword_1EF2B50B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B50C0, (uint64_t)&_s10CodingKeysON_179, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B50B8);
  }
  return result;
}

unint64_t sub_1BAEDEB34()
{
  unint64_t result;

  result = qword_1EF2B50C8;
  if (!qword_1EF2B50C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6150, &_s10CodingKeysON_180);
    atomic_store(result, (unint64_t *)&qword_1EF2B50C8);
  }
  return result;
}

unint64_t sub_1BAEDEB7C()
{
  unint64_t result;

  result = qword_1EF2B50D0;
  if (!qword_1EF2B50D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6178, &_s10CodingKeysON_180);
    atomic_store(result, (unint64_t *)&qword_1EF2B50D0);
  }
  return result;
}

unint64_t sub_1BAEDEBC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B50D8;
  if (!qword_1EF2B50D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B50E0, (uint64_t)&_s10CodingKeysON_180, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B50D8);
  }
  return result;
}

unint64_t sub_1BAEDEC28()
{
  unint64_t result;

  result = qword_1EF2B50E8;
  if (!qword_1EF2B50E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B60C0, &_s10CodingKeysON_181);
    atomic_store(result, (unint64_t *)&qword_1EF2B50E8);
  }
  return result;
}

unint64_t sub_1BAEDEC70()
{
  unint64_t result;

  result = qword_1EF2B50F0;
  if (!qword_1EF2B50F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B60E8, &_s10CodingKeysON_181);
    atomic_store(result, (unint64_t *)&qword_1EF2B50F0);
  }
  return result;
}

unint64_t sub_1BAEDECB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B50F8;
  if (!qword_1EF2B50F8)
  {
    sub_1BA4AD288(255, &qword_1EF2B5100, (uint64_t)&_s10CodingKeysON_181, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B50F8);
  }
  return result;
}

unint64_t sub_1BAEDED1C()
{
  unint64_t result;

  result = qword_1EF2B5108;
  if (!qword_1EF2B5108)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5F68, &_s10CodingKeysON_182);
    atomic_store(result, (unint64_t *)&qword_1EF2B5108);
  }
  return result;
}

unint64_t sub_1BAEDED64()
{
  unint64_t result;

  result = qword_1EF2B5110;
  if (!qword_1EF2B5110)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5F90, &_s10CodingKeysON_182);
    atomic_store(result, (unint64_t *)&qword_1EF2B5110);
  }
  return result;
}

unint64_t sub_1BAEDEDAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5118;
  if (!qword_1EF2B5118)
  {
    sub_1BA4AD288(255, &qword_1EF2B5120, (uint64_t)&_s10CodingKeysON_182, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5118);
  }
  return result;
}

unint64_t sub_1BAEDEE10()
{
  unint64_t result;

  result = qword_1ED3A58F8;
  if (!qword_1ED3A58F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5ED8, &_s10CodingKeysON_183);
    atomic_store(result, (unint64_t *)&qword_1ED3A58F8);
  }
  return result;
}

unint64_t sub_1BAEDEE58()
{
  unint64_t result;

  result = qword_1ED3A58F0;
  if (!qword_1ED3A58F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5F00, &_s10CodingKeysON_183);
    atomic_store(result, (unint64_t *)&qword_1ED3A58F0);
  }
  return result;
}

unint64_t sub_1BAEDEEA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5128;
  if (!qword_1EF2B5128)
  {
    sub_1BA4AD288(255, &qword_1EF2B5130, (uint64_t)&_s10CodingKeysON_183, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5128);
  }
  return result;
}

unint64_t sub_1BAEDEF04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5138;
  if (!qword_1EF2B5138)
  {
    sub_1BA4AD288(255, &qword_1EF2B5140, (uint64_t)&_s10CodingKeysON_184, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5138);
  }
  return result;
}

unint64_t sub_1BAEDEF68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5148;
  if (!qword_1EF2B5148)
  {
    sub_1BA4AD288(255, &qword_1EF2B5150, (uint64_t)&_s10CodingKeysON_185, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5148);
  }
  return result;
}

void sub_1BAEDEFC8()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAEDEFD8()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAEDEFEC()
{
  unint64_t result;

  result = qword_1ED3ABE08;
  if (!qword_1ED3ABE08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5978, &_s10CodingKeysON_186);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE08);
  }
  return result;
}

unint64_t sub_1BAEDF034()
{
  unint64_t result;

  result = qword_1ED3ABE00;
  if (!qword_1ED3ABE00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B59A0, &_s10CodingKeysON_186);
    atomic_store(result, (unint64_t *)&qword_1ED3ABE00);
  }
  return result;
}

unint64_t sub_1BAEDF07C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5158;
  if (!qword_1EF2B5158)
  {
    sub_1BA4AD288(255, &qword_1EF2B5160, (uint64_t)&_s10CodingKeysON_186, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5158);
  }
  return result;
}

unint64_t sub_1BAEDF0E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5168;
  if (!qword_1EF2B5168)
  {
    sub_1BA4AD288(255, &qword_1EF2B5170, (uint64_t)&_s10CodingKeysON_187, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5168);
  }
  return result;
}

unint64_t sub_1BAEDF144()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5178;
  if (!qword_1EF2B5178)
  {
    sub_1BA4AD288(255, &qword_1EF2B5180, (uint64_t)&_s10CodingKeysON_188, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5178);
  }
  return result;
}

unint64_t sub_1BAEDF1A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5188;
  if (!qword_1EF2B5188)
  {
    sub_1BA4AD288(255, &qword_1EF2B5190, (uint64_t)&_s10CodingKeysON_189, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5188);
  }
  return result;
}

unint64_t sub_1BAEDF20C()
{
  unint64_t result;

  result = qword_1EF2B5198;
  if (!qword_1EF2B5198)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B55E0, &_s10CodingKeysON_190);
    atomic_store(result, (unint64_t *)&qword_1EF2B5198);
  }
  return result;
}

unint64_t sub_1BAEDF254()
{
  unint64_t result;

  result = qword_1EF2B51A0;
  if (!qword_1EF2B51A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5608, &_s10CodingKeysON_190);
    atomic_store(result, (unint64_t *)&qword_1EF2B51A0);
  }
  return result;
}

unint64_t sub_1BAEDF29C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B51A8;
  if (!qword_1EF2B51A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B51B0, (uint64_t)&_s10CodingKeysON_190, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B51A8);
  }
  return result;
}

void sub_1BAEDF2FC()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAEDF30C()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAEDF320()
{
  unint64_t result;

  result = qword_1EF2B51B8;
  if (!qword_1EF2B51B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5010, &_s10CodingKeysON_191);
    atomic_store(result, (unint64_t *)&qword_1EF2B51B8);
  }
  return result;
}

unint64_t sub_1BAEDF368()
{
  unint64_t result;

  result = qword_1EF2B51C0;
  if (!qword_1EF2B51C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5038, &_s10CodingKeysON_191);
    atomic_store(result, (unint64_t *)&qword_1EF2B51C0);
  }
  return result;
}

unint64_t sub_1BAEDF3B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B51C8;
  if (!qword_1EF2B51C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B51D0, (uint64_t)&_s10CodingKeysON_191, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B51C8);
  }
  return result;
}

unint64_t sub_1BAEDF414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B51D8;
  if (!qword_1EF2B51D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B51E0, (uint64_t)&_s10CodingKeysON_192, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B51D8);
  }
  return result;
}

unint64_t sub_1BAEDF478()
{
  unint64_t result;

  result = qword_1EF2B51E8;
  if (!qword_1EF2B51E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4BD0, &_s10CodingKeysON_193);
    atomic_store(result, (unint64_t *)&qword_1EF2B51E8);
  }
  return result;
}

unint64_t sub_1BAEDF4C0()
{
  unint64_t result;

  result = qword_1EF2B51F0;
  if (!qword_1EF2B51F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4BF8, &_s10CodingKeysON_193);
    atomic_store(result, (unint64_t *)&qword_1EF2B51F0);
  }
  return result;
}

unint64_t sub_1BAEDF508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B51F8;
  if (!qword_1EF2B51F8)
  {
    sub_1BA4AD288(255, &qword_1EF2B5200, (uint64_t)&_s10CodingKeysON_193, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B51F8);
  }
  return result;
}

unint64_t sub_1BAEDF56C()
{
  unint64_t result;

  result = qword_1ED3D04D8;
  if (!qword_1ED3D04D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4A78, &_s10CodingKeysON_194);
    atomic_store(result, (unint64_t *)&qword_1ED3D04D8);
  }
  return result;
}

unint64_t sub_1BAEDF5B4()
{
  unint64_t result;

  result = qword_1ED3D04D0;
  if (!qword_1ED3D04D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4AA0, &_s10CodingKeysON_194);
    atomic_store(result, (unint64_t *)&qword_1ED3D04D0);
  }
  return result;
}

unint64_t sub_1BAEDF5FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5208;
  if (!qword_1EF2B5208)
  {
    sub_1BA4AD288(255, &qword_1EF2B5210, (uint64_t)&_s10CodingKeysON_194, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5208);
  }
  return result;
}

unint64_t sub_1BAEDF660()
{
  unint64_t result;

  result = qword_1EF2B5218;
  if (!qword_1EF2B5218)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B49E8, &_s10CodingKeysON_195);
    atomic_store(result, (unint64_t *)&qword_1EF2B5218);
  }
  return result;
}

unint64_t sub_1BAEDF6A8()
{
  unint64_t result;

  result = qword_1EF2B5220;
  if (!qword_1EF2B5220)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4A10, &_s10CodingKeysON_195);
    atomic_store(result, (unint64_t *)&qword_1EF2B5220);
  }
  return result;
}

unint64_t sub_1BAEDF6F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5228;
  if (!qword_1EF2B5228)
  {
    sub_1BA4AD288(255, &qword_1EF2B5230, (uint64_t)&_s10CodingKeysON_195, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5228);
  }
  return result;
}

unint64_t sub_1BAEDF754()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5238;
  if (!qword_1EF2B5238)
  {
    sub_1BA4AD288(255, &qword_1EF2B5240, (uint64_t)&_s10CodingKeysON_196, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5238);
  }
  return result;
}

unint64_t sub_1BAEDF7B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5248;
  if (!qword_1EF2B5248)
  {
    sub_1BA4AD288(255, &qword_1EF2B5250, (uint64_t)&_s10CodingKeysON_197, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5248);
  }
  return result;
}

unint64_t sub_1BAEDF81C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5258;
  if (!qword_1EF2B5258)
  {
    sub_1BA4AD288(255, &qword_1EF2B5260, (uint64_t)&_s10CodingKeysON_198, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5258);
  }
  return result;
}

unint64_t sub_1BAEDF880()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5268;
  if (!qword_1EF2B5268)
  {
    sub_1BA4AD288(255, &qword_1EF2B5270, (uint64_t)&_s10CodingKeysON_199, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5268);
  }
  return result;
}

unint64_t sub_1BAEDF8E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5278;
  if (!qword_1EF2B5278)
  {
    sub_1BA4AD288(255, &qword_1EF2B5280, (uint64_t)&_s14descr1E72CBD49V10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5278);
  }
  return result;
}

unint64_t sub_1BAEDF948()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5288;
  if (!qword_1EF2B5288)
  {
    sub_1BA4AD288(255, &qword_1EF2B5290, (uint64_t)&_s14descr1E72CC979V10CodingKeysON, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5288);
  }
  return result;
}

unint64_t sub_1BAEDF9AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5298;
  if (!qword_1EF2B5298)
  {
    sub_1BA4AD288(255, &qword_1EF2B52A0, (uint64_t)&_s10CodingKeysON_200, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5298);
  }
  return result;
}

unint64_t sub_1BAEDFA10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B52A8;
  if (!qword_1EF2B52A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B52B0, (uint64_t)&_s10CodingKeysON_201, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B52A8);
  }
  return result;
}

