_QWORD *sub_1BA7592C4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *result;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  void *v30;
  id v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  unint64_t *v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _BYTE v46[40];
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;

  sub_1BA4A3FB4(0, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v40 - v5;
  v6 = type metadata accessor for FeedWebEmbed();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v43 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v40 - v12;
  v45 = type metadata accessor for FeedHeadline(0);
  v14 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v41 = (uint64_t)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v40 - v17;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 24))(&v49, v19, v20);
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v22 + 40))(&v47, v21, v22);
  if (v48 - 5 >= 0xC && v48 >= 3)
  {
    if (v48 == 3)
    {
      sub_1BA4C010C((uint64_t)a1, (uint64_t)v46);
      sub_1BA7C2A4C();
      v27 = v45;
      v28 = swift_dynamicCast();
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      if ((v28 & 1) == 0)
      {
        v29(v13, 1, 1, v27);
        goto LABEL_20;
      }
      v29(v13, 0, 1, v27);
      sub_1BA5193C4((uint64_t)v13, (uint64_t)v18, type metadata accessor for FeedHeadline);
      v30 = (void *)*((_QWORD *)v18 + 5);
      if ((objc_msgSend(v30, sel_respondsToSelector_, sel_parentIssue) & 1) != 0)
      {
        v31 = objc_msgSend(v30, sel_parentIssue);
        if (v31)
        {

          if ((v49 & 0x40) == 0)
            v49 |= 0x40uLL;
        }
      }
      if (*(_QWORD *)&v18[*(int *)(v27 + 56)] && (v49 & 0x200000) == 0)
        v49 |= 0x200000uLL;
      v32 = type metadata accessor for FeedHeadline;
      v33 = (uint64_t)v18;
LABEL_27:
      result = (_QWORD *)sub_1BA4A2E80(v33, v32);
      goto LABEL_28;
    }
    if (v48 == 4)
    {
      sub_1BA4C010C((uint64_t)a1, (uint64_t)v46);
      sub_1BA7C2A4C();
      v13 = v44;
      v24 = swift_dynamicCast();
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      if ((v24 & 1) == 0)
      {
        v25(v13, 1, 1, v6);
        v34 = &qword_1ED3AFE68;
        v35 = (void (*)(uint64_t))type metadata accessor for FeedWebEmbed;
LABEL_21:
        result = (_QWORD *)sub_1BA502AD0((uint64_t)v13, v34, v35);
        goto LABEL_28;
      }
      v25(v13, 0, 1, v6);
      v26 = v43;
      sub_1BA5193C4((uint64_t)v13, v43, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      v13 = v42;
      sub_1BAB374E4(v26 + *(int *)(v6 + 48), (uint64_t)v42);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v45) == 1)
      {
        sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
LABEL_20:
        v34 = (unint64_t *)&unk_1ED3B2DB0;
        v35 = (void (*)(uint64_t))type metadata accessor for FeedHeadline;
        goto LABEL_21;
      }
      v36 = v41;
      sub_1BA5193C4((uint64_t)v13, v41, type metadata accessor for FeedHeadline);
      v37 = *(void **)(v36 + 40);
      v38 = v49 | *(_QWORD *)(v36 + 32);
      v49 = v38;
      if ((objc_msgSend(v37, sel_respondsToSelector_, sel_parentIssue) & 1) != 0)
      {
        v39 = objc_msgSend(v37, sel_parentIssue);
        if (v39)
        {

          if ((v38 & 0x40) == 0)
            v49 = v38 | 0x40;
        }
      }
      sub_1BA4A2E80(v36, type metadata accessor for FeedHeadline);
      v32 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
      v33 = v26;
      goto LABEL_27;
    }
    result = (_QWORD *)sub_1BA6E0CBC(v47, v48);
  }
LABEL_28:
  *a2 = v49;
  return result;
}

unint64_t sub_1BA759734(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  unint64_t v32;
  char v34;
  uint64_t v35;
  int v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _BYTE v78[72];
  uint64_t v79;
  unint64_t v80;

  v4 = type metadata accessor for WebEmbedDataVisualization();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)&v78[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BA4A3FB4(0, &qword_1ED3CB5E0, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v78[-v10 - 8];
  sub_1BA4A3FB4(0, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v78[-v13 - 8];
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 40))(&v79, v15, v16);
  v17 = v80;
  LOBYTE(v18) = 0;
  switch(v80)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 6uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xFuLL:
    case 0x10uLL:
      return v18 & 1;
    case 3uLL:
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_64;
      sub_1BB8745CC();
      sub_1BB8745D8();
      v19 = sub_1BB874608();
      v20 = -1 << *(_BYTE *)(a2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(a2 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_64;
      v22 = ~v20;
      do
      {
        v23 = *(_QWORD *)(a2 + 48) + 16 * v21;
        v18 = *(_QWORD *)v23;
        v24 = *(_QWORD *)(v23 + 8);
        if (!v24)
        {
          sub_1BA766C18(*(_QWORD *)v23, 0);
          v74 = 0;
          goto LABEL_75;
        }
        sub_1BA682148(*(_QWORD *)v23, *(_QWORD *)(v23 + 8));
        sub_1BA766C18(v18, v24);
        sub_1BA766C18(0, 0);
        LOBYTE(v18) = 0;
        v21 = (v21 + 1) & v22;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
      return v18 & 1;
    case 4uLL:
      sub_1BA4C010C((uint64_t)a1, (uint64_t)v78);
      sub_1BA7C2A4C();
      v35 = type metadata accessor for FeedWebEmbed();
      v36 = swift_dynamicCast();
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
      if (v36)
      {
        v37(v14, 0, 1, v35);
        sub_1BB044324((uint64_t)&v14[*(int *)(v35 + 52)], (uint64_t)v11);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
        {
          sub_1BA502AD0((uint64_t)v11, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        }
        else
        {
          sub_1BB05D18C((uint64_t)v11, (uint64_t)v7);
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            v75 = *v7;
            sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
            __asm { BR              X10 }
          }
          sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        }
        sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
        if (!*(_QWORD *)(a2 + 16))
          goto LABEL_64;
      }
      else
      {
        v37(v14, 1, 1, v35);
        sub_1BA502AD0((uint64_t)v14, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        if (!*(_QWORD *)(a2 + 16))
          goto LABEL_64;
      }
      sub_1BB8745CC();
      sub_1BB8745D8();
      v68 = sub_1BB874608();
      v69 = -1 << *(_BYTE *)(a2 + 32);
      v70 = v68 & ~v69;
      if (((*(_QWORD *)(a2 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFF8)) >> v70) & 1) == 0)
        goto LABEL_64;
      v71 = ~v69;
      do
      {
        v72 = *(_QWORD *)(a2 + 48) + 16 * v70;
        v18 = *(_QWORD *)v72;
        v73 = *(_QWORD *)(v72 + 8);
        if (v73 == 2)
        {
          sub_1BA766C18(*(_QWORD *)v72, 2uLL);
          v74 = 2;
          goto LABEL_75;
        }
        sub_1BA682148(*(_QWORD *)v72, *(_QWORD *)(v72 + 8));
        sub_1BA766C18(v18, v73);
        sub_1BA766C18(0, 2uLL);
        LOBYTE(v18) = 0;
        v70 = (v70 + 1) & v71;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFF8)) >> v70) & 1) != 0);
      return v18 & 1;
    case 5uLL:
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_64;
      sub_1BB8745CC();
      sub_1BB8745D8();
      v38 = sub_1BB874608();
      v39 = -1 << *(_BYTE *)(a2 + 32);
      v40 = v38 & ~v39;
      if (((*(_QWORD *)(a2 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
        goto LABEL_64;
      v41 = ~v39;
      while (1)
      {
        v42 = *(_QWORD *)(a2 + 48) + 16 * v40;
        v43 = *(_QWORD *)v42;
        v18 = *(_QWORD *)(v42 + 8);
        if (v18 == 1)
          break;
        sub_1BA682148(*(_QWORD *)v42, *(_QWORD *)(v42 + 8));
        sub_1BA766C18(v43, v18);
        sub_1BA766C18(0, 1uLL);
        LOBYTE(v18) = 0;
        v40 = (v40 + 1) & v41;
        if (((*(_QWORD *)(a2 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
          return v18 & 1;
      }
      sub_1BA766C18(*(_QWORD *)v42, 1uLL);
      sub_1BA766C18(0, 1uLL);
      return v18 & 1;
    case 7uLL:
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_64;
      sub_1BB8745CC();
      sub_1BB8745D8();
      v44 = sub_1BB874608();
      v45 = -1 << *(_BYTE *)(a2 + 32);
      v46 = v44 & ~v45;
      if (((*(_QWORD *)(a2 + 56 + ((v46 >> 3) & 0xFFFFFFFFFFFFF8)) >> v46) & 1) == 0)
        goto LABEL_64;
      v47 = ~v45;
      do
      {
        v48 = *(_QWORD *)(a2 + 48) + 16 * v46;
        v18 = *(_QWORD *)v48;
        v49 = *(_QWORD *)(v48 + 8);
        if (v49 == 4)
        {
          sub_1BA766C18(*(_QWORD *)v48, 4uLL);
          v74 = 4;
          goto LABEL_75;
        }
        sub_1BA682148(*(_QWORD *)v48, *(_QWORD *)(v48 + 8));
        sub_1BA766C18(v18, v49);
        sub_1BA766C18(0, 4uLL);
        LOBYTE(v18) = 0;
        v46 = (v46 + 1) & v47;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v46 >> 3) & 0xFFFFFFFFFFFFF8)) >> v46) & 1) != 0);
      return v18 & 1;
    case 0xCuLL:
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_64;
      sub_1BB8745CC();
      sub_1BB8745D8();
      v50 = sub_1BB874608();
      v51 = -1 << *(_BYTE *)(a2 + 32);
      v52 = v50 & ~v51;
      if (((*(_QWORD *)(a2 + 56 + ((v52 >> 3) & 0xFFFFFFFFFFFFF8)) >> v52) & 1) == 0)
        goto LABEL_64;
      v53 = ~v51;
      do
      {
        v54 = *(_QWORD *)(a2 + 48) + 16 * v52;
        v18 = *(_QWORD *)v54;
        v55 = *(_QWORD *)(v54 + 8);
        if (v55 == 12)
        {
          sub_1BA766C18(*(_QWORD *)v54, 0xCuLL);
          v74 = 12;
          goto LABEL_75;
        }
        sub_1BA682148(*(_QWORD *)v54, *(_QWORD *)(v54 + 8));
        sub_1BA766C18(v18, v55);
        sub_1BA766C18(0, 0xCuLL);
        LOBYTE(v18) = 0;
        v52 = (v52 + 1) & v53;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v52 >> 3) & 0xFFFFFFFFFFFFF8)) >> v52) & 1) != 0);
      return v18 & 1;
    case 0xDuLL:
      if (!*(_QWORD *)(a2 + 16))
        goto LABEL_64;
      sub_1BB8745CC();
      sub_1BB8745D8();
      v56 = sub_1BB874608();
      v57 = -1 << *(_BYTE *)(a2 + 32);
      v58 = v56 & ~v57;
      if (((*(_QWORD *)(a2 + 56 + ((v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) == 0)
        goto LABEL_64;
      v59 = ~v57;
      do
      {
        v60 = *(_QWORD *)(a2 + 48) + 16 * v58;
        v18 = *(_QWORD *)v60;
        v61 = *(_QWORD *)(v60 + 8);
        if (v61 == 13)
        {
          sub_1BA766C18(*(_QWORD *)v60, 0xDuLL);
          v74 = 13;
          goto LABEL_75;
        }
        sub_1BA682148(*(_QWORD *)v60, *(_QWORD *)(v60 + 8));
        sub_1BA766C18(v18, v61);
        sub_1BA766C18(0, 0xDuLL);
        LOBYTE(v18) = 0;
        v58 = (v58 + 1) & v59;
      }
      while (((*(_QWORD *)(a2 + 56 + ((v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) != 0);
      return v18 & 1;
    case 0xEuLL:
      if (*(_QWORD *)(a2 + 16)
        && (sub_1BB8745CC(),
            sub_1BB8745D8(),
            v62 = sub_1BB874608(),
            v63 = -1 << *(_BYTE *)(a2 + 32),
            v64 = v62 & ~v63,
            ((*(_QWORD *)(a2 + 56 + ((v64 >> 3) & 0xFFFFFFFFFFFFF8)) >> v64) & 1) != 0))
      {
        v65 = ~v63;
        while (1)
        {
          v66 = *(_QWORD *)(a2 + 48) + 16 * v64;
          v18 = *(_QWORD *)v66;
          v67 = *(_QWORD *)(v66 + 8);
          if (v67 == 14)
            break;
          sub_1BA682148(*(_QWORD *)v66, *(_QWORD *)(v66 + 8));
          sub_1BA766C18(v18, v67);
          sub_1BA766C18(0, 0xEuLL);
          LOBYTE(v18) = 0;
          v64 = (v64 + 1) & v65;
          if (((*(_QWORD *)(a2 + 56 + ((v64 >> 3) & 0xFFFFFFFFFFFFF8)) >> v64) & 1) == 0)
            return v18 & 1;
        }
        sub_1BA766C18(*(_QWORD *)v66, 0xEuLL);
        v74 = 14;
LABEL_75:
        sub_1BA766C18(0, v74);
        LOBYTE(v18) = 1;
      }
      else
      {
LABEL_64:
        LOBYTE(v18) = 0;
      }
      return v18 & 1;
    default:
      v25 = v79;
      if (!*(_QWORD *)(a2 + 16)
        || (sub_1BB8745CC(),
            sub_1BB8745D8(),
            sub_1BB872A90(),
            v26 = sub_1BB874608(),
            v27 = -1 << *(_BYTE *)(a2 + 32),
            v28 = v26 & ~v27,
            ((*(_QWORD *)(a2 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0))
      {
LABEL_53:
        sub_1BA6E0CBC(v25, v17);
        LOBYTE(v18) = 0;
        return v18 & 1;
      }
      v29 = ~v27;
      break;
  }
  while (1)
  {
    v30 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * v28);
    v31 = *v30;
    v32 = v30[1];
    if (v32 < 0xF)
    {
      swift_bridgeObjectRetain();
      sub_1BA766C18(v31, v32);
      sub_1BA766C18(v25, v17);
      goto LABEL_12;
    }
    if (v31 == v25 && v32 == v17)
      break;
    v34 = sub_1BB874398();
    sub_1BA75A650(v25, v17);
    sub_1BA682148(v31, v32);
    sub_1BA766C18(v31, v32);
    sub_1BA766C18(v25, v17);
    if ((v34 & 1) != 0)
      goto LABEL_73;
LABEL_12:
    v28 = (v28 + 1) & v29;
    if (((*(_QWORD *)(a2 + 56 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
      goto LABEL_53;
  }
  sub_1BA75A650(v25, v17);
  sub_1BA682148(v25, v17);
  sub_1BA766C18(v25, v17);
  sub_1BA766C18(v25, v17);
LABEL_73:
  sub_1BA6E0CBC(v25, v17);
  LOBYTE(v18) = 1;
  return v18 & 1;
}

uint64_t sub_1BA75A650(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0x11)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BA75A664@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v2 + *(int *)(a1 + 48));
  v4 = *v3;
  v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_1BA75A650(v4, v5);
}

uint64_t type metadata accessor for WebEmbedDataVisualization()
{
  uint64_t result;

  result = qword_1ED3C2778;
  if (!qword_1ED3C2778)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA75A6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t *v54;
  char v55;
  _QWORD v56[3];
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  unsigned __int8 v69;

  v5 = type metadata accessor for FormatOption();
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v57 = (uint64_t)v56 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v56 - v10;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, v12);
  MEMORY[0x1E0C80A78](v13);
  v63 = (uint64_t)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v62 = (uint64_t)v56 - v16;
  v17 = *(_QWORD *)(a2 + 16);
  if (!v17)
    return;
  v56[1] = v2;
  v61 = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
  swift_bridgeObjectRetain();
  v56[2] = a2;
  v18 = (_BYTE *)(a2 + 49);
  v59 = a1;
  v60 = (uint64_t *)v11;
  while (1)
  {
    if ((*v18 & 1) != 0)
      goto LABEL_5;
    v20 = *(_QWORD *)(v18 - 17);
    v21 = *(_QWORD *)(v18 - 9);
    v19 = *(v18 - 1);
    if ((v19 & 1) != 0)
      break;
LABEL_4:
    sub_1BA728F8C(v20, v21, v19, 0);
LABEL_5:
    v18 += 24;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  sub_1BA8569BC(*(_QWORD *)(v18 - 17), *(_QWORD *)(v18 - 9), *(v18 - 1), 0);
  sub_1BA69C808(v20, v21, 1);
  v66 = sub_1BA862600((uint64_t)&unk_1E7254498);
  v22 = *(_QWORD *)(a1 + v61);
  v23 = *(_QWORD *)(v22 + 16);
  swift_beginAccess();
  v24 = *(_QWORD *)(v23 + 16);
  v25 = *(_QWORD *)(v24 + 16);
  v68 = v19;
  if (v25)
  {
    swift_bridgeObjectRetain();
    v26 = sub_1BA6E35A8(v20, v21);
    if ((v27 & 1) != 0)
    {
      v28 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v26);
      swift_endAccess();
      swift_retain();
      sub_1BA728F8C(v20, v21, v19, 0);
      v29 = *(_QWORD *)(v28 + 16);
      swift_retain();
      swift_release();
      v30 = v58;
      sub_1BA6E9B50(v29);
      swift_release();
      v31 = (uint64_t)v30;
      v32 = v57;
      sub_1BA5193C4(v31, v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v33 = v63;
      sub_1BA5193C4(v32, v63, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
LABEL_16:
      v39 = v65;
      v40 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56);
      v40(v33, 0, 1, v65);
      v41 = v60;
      sub_1BA5193C4(v33, (uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v67 = v41[2];
      FormatOptionValue.type.getter();
      if ((sub_1BA713E54(v69, v66) & 1) == 0)
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1BA4A2870((unint64_t *)&qword_1EF2A9668, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
        swift_allocError();
        v49 = v48;
        v50 = *v41;
        v51 = v41[1];
        v67 = v41[2];
        swift_bridgeObjectRetain();
        FormatOptionValue.type.getter();
        v52 = v66;
        v53 = v69;
        *(_QWORD *)v49 = v50;
        *(_QWORD *)(v49 + 8) = v51;
        *(_BYTE *)(v49 + 16) = v53;
        *(_QWORD *)(v49 + 24) = v52;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_willThrow();
        sub_1BA4A2E80((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        goto LABEL_26;
      }
      v42 = (uint64_t)v41;
      v43 = v62;
      sub_1BA5193C4(v42, v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v40(v43, 0, 1, v39);
      v44 = v43;
      a1 = v59;
      goto LABEL_3;
    }
    swift_endAccess();
    sub_1BA728F8C(v20, v21, v19, 0);
  }
  else
  {
    swift_endAccess();
  }
  swift_beginAccess();
  v34 = *(_QWORD *)(v22 + 24);
  if (*(_QWORD *)(v34 + 16))
  {
    swift_bridgeObjectRetain();
    v35 = sub_1BA6E35A8(v20, v21);
    if ((v36 & 1) != 0)
    {
      v37 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v35);
      swift_endAccess();
      swift_retain();
      sub_1BA728F8C(v20, v21, v19, 0);
      v38 = *(_QWORD *)(v37 + 16);
      swift_retain();
      swift_release();
      v33 = v63;
      sub_1BA6E9B50(v38);
      swift_release();
      goto LABEL_16;
    }
    swift_endAccess();
    sub_1BA728F8C(v20, v21, v19, 0);
  }
  else
  {
    swift_endAccess();
  }
  v45 = v63;
  v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
  v47 = v65;
  v46(v63, 1, 1, v65);
  sub_1BA502AD0(v45, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  if ((*(_BYTE *)(a1 + 48) & 1) != 0)
  {
    v44 = v62;
    v46(v62, 1, 1, v47);
LABEL_3:
    LOBYTE(v19) = v68;
    sub_1BA502AD0(v44, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    sub_1BA728F8C(v20, v21, v19, 0);
    goto LABEL_4;
  }
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v54 = v20;
  v54[1] = v21;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_willThrow();
LABEL_26:
  swift_bridgeObjectRelease();
  v55 = v68;
  sub_1BA728F8C(v20, v21, v68, 0);
  sub_1BA728F8C(v20, v21, v55, 0);
  swift_bridgeObjectRelease();
}

void sub_1BA75ACDC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[5];
  uint64_t v19;

  v4 = v3;
  v6 = *(_OWORD *)(a2 + 48);
  v18[2] = *(_OWORD *)(a2 + 32);
  v18[3] = v6;
  v18[4] = *(_OWORD *)(a2 + 64);
  v19 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v18[0] = *(_OWORD *)a2;
  v18[1] = v7;
  v8 = v2[4];
  if ((v8 & 0x8000000000000000) == 0)
    goto LABEL_12;
  v16 = *(_QWORD *)(v8 + 16);
  v17 = *(_QWORD *)(v8 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB57402C(a1, (uint64_t)v18, v16, v17);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v4)
  {
LABEL_12:
    sub_1BA6FA63C();
    if (!v4)
    {
      swift_beginAccess();
      v9 = v2[10];
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain_n();
        for (i = 0; i != v10; ++i)
        {
          v12 = *(_QWORD *)(v9 + 8 * i + 32);
          sub_1BA7196DC(v12);
          sub_1BA6FA7EC();
          sub_1BA719340(v12);
        }
        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      v13 = v2[13];
      if (v13 >> 62 == 1)
      {
        v14 = *(_QWORD *)(v13 + 16);
        v15 = *(_QWORD *)(v13 + 24);
        sub_1BA67D3F4(v14);
        swift_bridgeObjectRetain();
        sub_1BB5742EC(a1, (uint64_t)v18, v14, v15);
        sub_1BA6EEDB4(v14);
        swift_bridgeObjectRelease();
      }
    }
  }
}

_QWORD *initializeWithCopy for FormatLocalization(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA75AF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _OWORD v64[2];
  uint64_t v65;
  uint64_t v66;

  v6 = v5;
  v48 = a5;
  v58 = a2;
  v47 = a1;
  v9 = type metadata accessor for FormatOption();
  v53 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v57);
  v13 = (uint64_t *)((char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for FormatOptionsNodeStatement();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = MEMORY[0x1E0DEE9D8];
  swift_unownedRetainStrong();
  swift_beginAccess();
  v18 = *(_QWORD *)(a4 + 32);
  swift_bridgeObjectRetain();
  v46 = a4;
  swift_release();
  v56 = *(_QWORD *)(v18 + 16);
  if (v56)
  {
    v55 = v18 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    result = swift_retain();
    v20 = 0;
    v52 = v9;
    v51 = v13;
    v50 = v17;
    v49 = v18;
    v54 = v15;
    while (v20 < *(_QWORD *)(v18 + 16))
    {
      v21 = *(_QWORD *)(v15 + 72);
      v62 = v20;
      sub_1BA4C2DD8(v55 + v21 * v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      v22 = swift_retain();
      MEMORY[0x1BCCE36AC](v22);
      if (*(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      sub_1BA75BF9C();
      v24 = (char *)v13 + *(int *)(v23 + 48);
      *v13 = a3;
      sub_1BA75C00C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, v58, v25);
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v26 = sub_1BB2CEF34((uint64_t)v13);
      if (v6)
      {
        swift_release();
        sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
        sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v27 = v26;
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
      v28 = *(_QWORD *)(v27 + 16);
      if (v28)
      {
        v60 = a3;
        v61 = 0;
        v63 = MEMORY[0x1E0DEE9D8];
        sub_1BA76B828(0, v28, 0);
        v29 = v63;
        v30 = *(unsigned __int8 *)(v53 + 80);
        v59 = v27;
        v31 = v27 + ((v30 + 32) & ~v30);
        v32 = *(_QWORD *)(v53 + 72);
        do
        {
          sub_1BA4C2DD8(v31, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v33 = swift_allocBox();
          sub_1BA5193C4((uint64_t)v11, v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v63 = v29;
          v36 = *(_QWORD *)(v29 + 16);
          v35 = *(_QWORD *)(v29 + 24);
          if (v36 >= v35 >> 1)
          {
            sub_1BA76B828(v35 > 1, v36 + 1, 1);
            v29 = v63;
          }
          *(_QWORD *)(v29 + 16) = v36 + 1;
          *(_QWORD *)(v29 + 8 * v36 + 32) = v33 | 0x6000000000000004;
          v31 += v32;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease();
        a3 = sub_1BA70B0DC(v29);
        swift_release();
        swift_release();
        v17 = v50;
        result = sub_1BA4A2E80((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
        v6 = v61;
        v13 = v51;
        v18 = v49;
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
        result = swift_bridgeObjectRelease();
      }
      v20 = v62 + 1;
      v15 = v54;
      if (v62 + 1 == v56)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRelease();
LABEL_18:
    v37 = v48;
    v38 = v47;
    v39 = v46;
    swift_bridgeObjectRelease();
    swift_unownedRetainStrong();
    swift_beginAccess();
    v40 = *(_QWORD *)(v39 + 40);
    swift_bridgeObjectRetain();
    swift_release();
    v41 = *(_QWORD *)(v40 + 16);
    if (v41)
    {
      v42 = 32;
      while (1)
      {
        v43 = *(_OWORD *)(v40 + v42);
        v44 = *(_OWORD *)(v40 + v42 + 16);
        v65 = *(_QWORD *)(v40 + v42 + 32);
        v64[0] = v43;
        v64[1] = v44;
        sub_1BA7086BC((uint64_t)v64);
        sub_1BA7086F8(v38, a3, v37);
        if (v6)
          break;
        sub_1BA708680((uint64_t)v64);
        v42 += 40;
        if (!--v41)
          goto LABEL_22;
      }
      swift_bridgeObjectRelease();
      swift_release();
      return sub_1BA708680((uint64_t)v64);
    }
    else
    {
LABEL_22:
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t destroy for FormatOptionsNodeStatement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FormatOptionsNodeStatementValue();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
      goto LABEL_13;
    case 2u:
      sub_1BA60DFC4(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24));
      return swift_bridgeObjectRelease();
    case 4u:
      sub_1BAC68BE0(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(unsigned __int16 *)(v4 + 48), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
      return swift_bridgeObjectRelease();
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 6u:
      sub_1BA6F5D74(*(_QWORD *)v4);
      return swift_bridgeObjectRelease();
    case 7u:
      type metadata accessor for FormatURL();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        sub_1BA5A7EF8(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24));
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if (EnumCaseMultiPayload)
            return swift_bridgeObjectRelease();
          v6 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
          type metadata accessor for FormatAbsoluteURL();
        }
LABEL_13:
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    case 8u:
      swift_release();
      return swift_bridgeObjectRelease();
    default:
      return swift_bridgeObjectRelease();
  }
}

void initializeWithCopy for FormatOptionsNodeStatement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  char *v3;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  type metadata accessor for FormatOptionsNodeStatementValue();
  swift_bridgeObjectRetain();
  v3 = (char *)sub_1BA75B66C + 4 * byte_1BB9040E4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA75B66C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  *v3 = *v4;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v0 + *(int *)(v2 + 24)) = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BA75B87C(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload != 1)
    return swift_release();
  sub_1BA75BF9C();
  v4 = a1 + *(int *)(v3 + 48);
  sub_1BA75C00C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void sub_1BA75B8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  _OWORD v12[5];
  uint64_t v13;

  sub_1BA75C064(0);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA75BCB4(0);
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1E0C80A78](v6);
  v8 = *(_OWORD *)(a2 + 48);
  v12[2] = *(_OWORD *)(a2 + 32);
  v12[3] = v8;
  v12[4] = *(_OWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 80);
  v9 = *(_OWORD *)(a2 + 16);
  v12[0] = *(_OWORD *)a2;
  v12[1] = v9;
  sub_1BA4C2DD8(v2, (uint64_t)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v11 = (char *)sub_1BA75BA18 + 4 * byte_1BB8A652F[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA75BA18()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA75BBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  return ((uint64_t (*)(void))((char *)&loc_1BA75BA94 + 4 * byte_1BB8A654F[a7 >> 4]))();
}

void sub_1BA75BC00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3C79D0)
  {
    v2 = type metadata accessor for FormatOptionsNodeStatementValue();
    v3 = sub_1BA4A2870(&qword_1ED3CD880, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatementValue);
    v5 = type metadata accessor for FormatSwitchValue.CaseValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3C79D0);
  }
}

uint64_t type metadata accessor for FormatOptionsNodeStatementContext()
{
  uint64_t result;

  result = qword_1ED3CDF88;
  if (!qword_1ED3CDF88)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA75BCB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3C79E8)
  {
    v2 = type metadata accessor for FormatOptionsNodeStatementValue();
    v3 = sub_1BA4A2870(&qword_1ED3CD880, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatementValue);
    v5 = type metadata accessor for FormatSwitchValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3C79E8);
  }
}

uint64_t type metadata accessor for FormatOptionsNodeStatementValue()
{
  uint64_t result;

  result = qword_1ED3CD888;
  if (!qword_1ED3CD888)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t destroy for FormatOptionsNodeStatementValue(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
      return swift_bridgeObjectRelease();
    case 2:
      return sub_1BA60DFC4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
    case 4:
      return sub_1BAC68BE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int16 *)(a1 + 48), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA6EF090, (uint64_t (*)(void))sub_1BA5A7EF8);
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 6:
      return sub_1BA6F5D74(*(_QWORD *)a1);
    case 7:
      type metadata accessor for FormatURL();
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
        return sub_1BA5A7EF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
      if ((_DWORD)result == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((_DWORD)result)
          return result;
        v3 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
        type metadata accessor for FormatAbsoluteURL();
      }
      return swift_bridgeObjectRelease();
    case 8:
      return swift_release();
    default:
      return result;
  }
}

_QWORD *sub_1BA75BED0(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BA75BF9C();
    v6 = *(int *)(v5 + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BA75C00C();
    v10 = v9;
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v11(v7, v8, v10);
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void sub_1BA75BF9C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C41B0)
  {
    type metadata accessor for FormatNodeContext();
    sub_1BA75C00C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C41B0);
  }
}

void sub_1BA75C00C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0740)
  {
    sub_1BA7399D0();
    v0 = sub_1BB86DBB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0740);
  }
}

void sub_1BA75C064(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3C79D8)
  {
    v2 = type metadata accessor for FormatOptionsNodeStatementValue();
    v3 = sub_1BA4A2870(&qword_1ED3CD880, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatementValue);
    v5 = type metadata accessor for FormatSwitchValue.DefaultValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3C79D8);
  }
}

uint64_t sub_1BA75C0DC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1BA75C120(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  v9(v7, v8, v4);
  return a1;
}

void sub_1BA75C190(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[8];

  v12[7] = a1;
  v12[6] = a2;
  v3 = sub_1BB86C8B0();
  v12[2] = *(_QWORD *)(v3 - 8);
  v12[3] = v3;
  MEMORY[0x1E0C80A78](v3);
  v12[5] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86C67C();
  v12[0] = *(_QWORD *)(v5 - 8);
  v12[1] = v5;
  MEMORY[0x1E0C80A78](v5);
  v12[4] = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8E5458();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  __asm { BR              X11 }
}

uint64_t sub_1BA75C300()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;

  v4 = v0;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  v6 = *(_QWORD *)(v3 - 144);
  sub_1BB86118C(*(_QWORD *)(v3 - 152), v4, v1);
  if (v6)
    return sub_1BB6C02E8(v2);
  v9 = v7;
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v9 & 1;
  *(_QWORD *)(v10 + 24) = MEMORY[0x1E0DEE9D8];
  v11 = *(uint64_t **)(v3 - 160);
  *v11 = v10;
  v11[1] = 0;
  v12 = type metadata accessor for FormatOptionsNodeStatementResult();
  sub_1BA8D81BC(v2, (uint64_t)v11 + *(int *)(v12 + 24));
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
}

void sub_1BA75C6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE v17[272];
  uint64_t v18;

  v16 = a2;
  v18 = a1;
  v12 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v12);
  v13 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v5);
  v6 = type metadata accessor for FormatOptionsNodeStatementContext();
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v15 = &v11[-v8];
  v9 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  sub_1BAE79BFC(v2, (uint64_t)v17);
  __asm { BR              X11 }
}

uint64_t sub_1BA75C854@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v1 + 864) = a1 & 0xF7;
  v4 = *(_QWORD *)(v1 + 832);
  v5 = *(_QWORD *)(v1 + 824);
  v6 = *(_QWORD *)(v1 + 816);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAE79C38(v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA713CDC);
  v7 = sub_1BA7E6BD4(*(_QWORD *)(v3 - 72), v6, v5, v4, v6, v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BA75D1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatOptionsNodeStatementContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA75D20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatOptionsNodeStatementContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA75D250()
{
  return sub_1BA75D26C((void (*)(_QWORD, _QWORD))sub_1BA70DDB0);
}

uint64_t sub_1BA75D26C(void (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t (*v6)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8(v1, (uint64_t)v5, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v8 = *v5;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BA75BF9C();
    v10 = (char *)v5 + *(int *)(v9 + 48);
    a1(*(_QWORD *)(v8 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), *(_QWORD *)(v8 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8));
    swift_release();
    sub_1BA75C00C();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
    a1(*(_QWORD *)(v8 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), *(_QWORD *)(v8 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8));
    return swift_release();
  }
}

uint64_t sub_1BA75D3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a1;
  sub_1BA75D5C8(0, (unint64_t *)&qword_1ED3C79D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue.CaseValue);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v23 - v9);
  sub_1BA75D5C8(0, (unint64_t *)&qword_1ED3C79D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue.DefaultValue);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - v12;
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 16);
  if (v15)
  {
    v24 = (char *)&v23 - v12;
    v25 = v7;
    v26 = v3;
    v27 = v14;
    v28 = a3;
    v16 = v14 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v17 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BA75D644(v16, (uint64_t)v10, (unint64_t *)&qword_1ED3C79D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue.CaseValue);
      v30 = *v10;
      swift_retain();
      sub_1BA710B08();
      v20 = (v19 & 1) != 0 ? v18(a2, v29) : ((uint64_t (*)(uint64_t))v18)(a2);
      sub_1BA7114E4();
      swift_release();
      if ((v20 & 1) != 0)
        break;
      sub_1BA75D704((uint64_t)v10);
      v16 += v17;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        a3 = v28;
        v3 = v26;
        v13 = v24;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    sub_1BA4C2DD8((uint64_t)v10 + *(int *)(v25 + 36), v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
    return sub_1BA75D704((uint64_t)v10);
  }
  else
  {
LABEL_9:
    sub_1BA75D5C8(0, (unint64_t *)&qword_1ED3C79E8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BA75D644((uint64_t)v3 + *(int *)(v21 + 36), (uint64_t)v13, (unint64_t *)&qword_1ED3C79D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue.DefaultValue);
    return sub_1BA7DEB88((uint64_t)v13, a3);
  }
}

void sub_1BA75D5C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for FormatOptionsNodeStatementValue();
    v7 = sub_1BA4A2870(&qword_1ED3CD880, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatementValue);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BA75D644(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;

  sub_1BA75D5C8(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

_QWORD *sub_1BA75D690(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_retain();
  v9(v7, v8, v4);
  return a1;
}

uint64_t sub_1BA75D704(uint64_t a1)
{
  uint64_t v2;

  sub_1BA75D5C8(0, (unint64_t *)&qword_1ED3C79D0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue.CaseValue);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA75D750(uint64_t a1, uint64_t a2)
{
  swift_release();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t *initializeWithCopy for FormatItemNodeAction(uint64_t *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for FormatCommandOpenURL();
    v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 2)
    {
      v14 = *((_QWORD *)a2 + 1);
      *a1 = *(_QWORD *)a2;
      a1[1] = v14;
      a1[2] = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v12 == 1)
      {
        v13 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v13;
        a1[2] = *((_QWORD *)a2 + 2);
        swift_bridgeObjectRetain();
      }
      else
      {
        v15 = sub_1BB86C67C();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)a1 + *(int *)(v16 + 20)) = *(_QWORD *)&a2[*(int *)(v16 + 20)];
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = *(_QWORD *)a2;
    v8 = *((_QWORD *)a2 + 1);
    v9 = *((_QWORD *)a2 + 2);
    v10 = a2[25];
    v11 = a2[24];
    sub_1BAF709B8(v7, v8, v9, v11, v10, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    *a1 = v7;
    a1[1] = v8;
    a1[2] = v9;
    *((_BYTE *)a1 + 24) = v11;
    *((_BYTE *)a1 + 25) = v10;
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatSize(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1BA71CA6C(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1BA75D96C(unint64_t result, unint64_t a2)
{
  if ((result & 0xFE) != 0xC)
    return sub_1BA739250(a2);
  return result;
}

void sub_1BA75D984()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C9970)
  {
    sub_1BA5B089C(255, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C9970);
  }
}

uint64_t sub_1BA75D9F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA75DA04(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1BA75DA04(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;

  type metadata accessor for GroupLayoutContext();
  v5 = sub_1BB86D63C();
  v6 = swift_allocObject();
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v7;
  v8 = v6 | 0x4000000000000000;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = v7;
  sub_1BA713440();
  swift_release();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = v7;
  sub_1BA70FF28(v8, v10 | 0x4000000000000000, a3);
  v12 = v11;
  swift_release();
  swift_release();
  return v12 & 1;
}

uint64_t destroy for FormatItemNodeAction(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    type metadata accessor for FormatCommandOpenURL();
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 2 || (_DWORD)result == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((_DWORD)result)
        return result;
      v3 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for FormatAbsoluteURL();
    }
    return swift_bridgeObjectRelease();
  }
  if (!(_DWORD)result)
    return sub_1BAF709B8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_BYTE *)(a1 + 25), (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  return result;
}

void sub_1BA75DC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);

  sub_1BA75DD88();
  if (!v6)
  {
    v11 = *(_QWORD *)(a4 + 16);
    if (v11)
    {
      v16 = a2;
      v17 = a6;
      swift_bridgeObjectRetain();
      v12 = a4 + 56;
      do
      {
        v14 = *(_QWORD *)(v12 - 24);
        v13 = *(_QWORD *)(v12 - 16);
        v15 = *(_BYTE *)(v12 - 8);
        sub_1BA73B1CC(v14, v13, v15);
        swift_retain();
        v17(a1, v16);
        v12 += 32;
        sub_1BA73B1B8(v14, v13, v15);
        swift_release();
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      a6 = v17;
      a2 = v16;
    }
    a6(a1, a2);
  }
}

void sub_1BA75DD88()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 25))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X20 }
}

void sub_1BA75DE08()
{
  sub_1BA7644D0();
  sub_1BA75DDF4();
}

void sub_1BA75DE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, char a7)
{
  if (a6 >> 6 > 1)
  {
    if ((a6 & 0x33333333) == 0 && (a5 & 0xF000000000000007) != 0xF000000000000007)
      goto LABEL_5;
  }
  else if (!a7 && (a2 & 0xF000000000000007) != 0xF000000000000007)
  {
LABEL_5:
    sub_1BA645F4C();
  }
  sub_1BA75DDF4();
}

uint64_t sub_1BA75DEC0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unsigned __int8 v44;
  uint64_t v45;

  v31 = *(_QWORD *)(a3 + 16);
  if (v31)
  {
    v32 = a3 + 32;
    swift_bridgeObjectRetain();
    v4 = 0;
LABEL_5:
    v5 = (__int128 *)(v32 + 184 * v4);
    v6 = v5[9];
    v41 = v5[8];
    v42 = v6;
    v43 = v5[10];
    v44 = *((_BYTE *)v5 + 176);
    v7 = v5[5];
    v37 = v5[4];
    v38 = v7;
    v8 = v5[7];
    v39 = v5[6];
    v40 = v8;
    v9 = v5[1];
    v33 = *v5;
    v34 = v9;
    v10 = v5[3];
    v35 = v5[2];
    v36 = v10;
    v11 = v34;
    switch((char)v38)
    {
      case 1:
        if (!v3)
          goto LABEL_14;
        return swift_bridgeObjectRelease();
      case 2:
        v12 = *(_QWORD *)(v34 + 16);
        if (!v12)
          goto LABEL_14;
        sub_1BAC68298((uint64_t)&v33);
        swift_bridgeObjectRetain();
        for (i = 0; i != v12; ++i)
        {
          v45 = *(_QWORD *)(v11 + 8 * i + 32);
          swift_retain();
          sub_1BA7547AC();
          if (v3)
          {
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_27;
          }
          swift_release();
        }
        swift_bridgeObjectRelease();
        v14 = *((_QWORD *)&v38 + 1);
        if (*((_QWORD *)&v38 + 1))
          goto LABEL_17;
        goto LABEL_22;
      case 3:
        v15 = *((_QWORD *)&v36 + 1);
        v29 = v37;
        v16 = v4;
        v18 = *((_QWORD *)&v35 + 1);
        v17 = v36;
        v20 = *((_QWORD *)&v34 + 1);
        v19 = v35;
        sub_1BAC68298((uint64_t)&v33);
        v21 = v18;
        v4 = v16;
        sub_1BA7AF9E4(v11, v20, v19, v21, v17, v15, v29, *((uint64_t *)&v29 + 1), 3u);
        v14 = *((_QWORD *)&v38 + 1);
        if (*((_QWORD *)&v38 + 1))
          goto LABEL_17;
        goto LABEL_22;
      default:
LABEL_14:
        sub_1BAC68298((uint64_t)&v33);
        v14 = *((_QWORD *)&v38 + 1);
        if (!*((_QWORD *)&v38 + 1))
          goto LABEL_22;
LABEL_17:
        v22 = *(_QWORD *)(v14 + 16);
        if (!v22)
          goto LABEL_22;
        v23 = swift_bridgeObjectRetain() + 64;
        break;
    }
    while (1)
    {
      v45 = *(_QWORD *)(v23 - 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA7547AC();
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v23 += 40;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
LABEL_22:
        v24 = v44;
        if (v44 == 254)
        {
          sub_1BAC68394((uint64_t)&v33);
        }
        else
        {
          v28 = v43;
          v30 = v42;
          v25 = v41;
          v26 = v40;
          v27 = v39;
          v45 = v41;
          swift_retain();
          sub_1BA7547AC();
          sub_1BA6E8A78(v27, *((uint64_t *)&v27 + 1), v26, *((uint64_t *)&v26 + 1), v25, *((uint64_t *)&v25 + 1), v30, *((uint64_t *)&v30 + 1), v28, *((uint64_t *)&v28 + 1), v24);
          sub_1BAC68394((uint64_t)&v33);
          if (v3)
            return swift_bridgeObjectRelease();
        }
        if (++v4 == v31)
          return swift_bridgeObjectRelease();
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
LABEL_27:
    sub_1BAC68394((uint64_t)&v33);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for HeadlineViewLayout.Options(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3B5838);
}

void destroy for HeadlineViewLayout.Options(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86DA20();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

}

uint64_t destroy for FormatRemoteImage(uint64_t a1, int *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;

  v4 = type metadata accessor for FormatURL();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_1BA5A7EF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_8;
      v6 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_8:
  v7 = a1 + a2[5];
  v8 = swift_getEnumCaseMultiPayload();
  if (v8 == 2)
  {
    sub_1BA5A7EF8(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_BYTE *)(v7 + 24));
  }
  else
  {
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v8)
        goto LABEL_15;
      v9 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_15:
  v10 = a1 + a2[6];
  v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 2)
  {
    sub_1BA5A7EF8(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_BYTE *)(v10 + 24));
  }
  else
  {
    if (v11 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v11)
        goto LABEL_22;
      v12 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_22:
  v13 = a1 + a2[7];
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v14(v13, 1, v4))
  {
    v27 = swift_getEnumCaseMultiPayload();
    switch(v27)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_BYTE *)(v13 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v28 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v13, v28);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v15 = a1 + a2[8];
  if (!v14(v15, 1, v4))
  {
    v29 = swift_getEnumCaseMultiPayload();
    switch(v29)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), *(_BYTE *)(v15 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v30 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v15, v30);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v16 = a1 + a2[9];
  if (!v14(v16, 1, v4))
  {
    v31 = swift_getEnumCaseMultiPayload();
    switch(v31)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v16, *(_QWORD *)(v16 + 8), *(_QWORD *)(v16 + 16), *(_BYTE *)(v16 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v32 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v16, v32);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v17 = a1 + a2[10];
  if (!v14(v17, 1, v4))
  {
    v33 = swift_getEnumCaseMultiPayload();
    switch(v33)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), *(_QWORD *)(v17 + 16), *(_BYTE *)(v17 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v34 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v17, v34);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v18 = a1 + a2[11];
  if (!v14(v18, 1, v4))
  {
    v35 = swift_getEnumCaseMultiPayload();
    switch(v35)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_QWORD *)(v18 + 16), *(_BYTE *)(v18 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v36 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v18, v36);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v19 = a1 + a2[12];
  if (!v14(v19, 1, v4))
  {
    v37 = swift_getEnumCaseMultiPayload();
    switch(v37)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_QWORD *)(v19 + 16), *(_BYTE *)(v19 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v38 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v19, v38);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v20 = a1 + a2[13];
  if (!v14(v20, 1, v4))
  {
    v39 = swift_getEnumCaseMultiPayload();
    switch(v39)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v20, *(_QWORD *)(v20 + 8), *(_QWORD *)(v20 + 16), *(_BYTE *)(v20 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v40 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v20, v40);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v21 = a1 + a2[14];
  if (!v14(v21, 1, v4))
  {
    v41 = swift_getEnumCaseMultiPayload();
    switch(v41)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), *(_QWORD *)(v21 + 16), *(_BYTE *)(v21 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v42 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v21, v42);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v22 = a1 + a2[15];
  if (!v14(v22, 1, v4))
  {
    v43 = swift_getEnumCaseMultiPayload();
    switch(v43)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v22, *(_QWORD *)(v22 + 8), *(_QWORD *)(v22 + 16), *(_BYTE *)(v22 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v44 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v22, v44);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v23 = a1 + a2[16];
  if (!v14(v23, 1, v4))
  {
    v45 = swift_getEnumCaseMultiPayload();
    switch(v45)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_QWORD *)(v23 + 16), *(_BYTE *)(v23 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v46 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v23, v46);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v24 = a1 + a2[17];
  if (!v14(v24, 1, v4))
  {
    v47 = swift_getEnumCaseMultiPayload();
    switch(v47)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v24, *(_QWORD *)(v24 + 8), *(_QWORD *)(v24 + 16), *(_BYTE *)(v24 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v48 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v24, v48);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v25 = a1 + a2[18];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v25, 1, v4);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result == 2)
      return sub_1BA5A7EF8(*(_QWORD *)v25, *(_QWORD *)(v25 + 8), *(_QWORD *)(v25 + 16), *(_BYTE *)(v25 + 24));
    if ((_DWORD)result == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((_DWORD)result)
        return result;
      v49 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v25, v49);
      type metadata accessor for FormatAbsoluteURL();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for FormatResource(uint64_t a1)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for FormatFontResource(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      return sub_1BA6F3F50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
    swift_bridgeObjectRelease();
    v6 = a1 + *(int *)(type metadata accessor for FormatRemoteFont() + 20);
    type metadata accessor for FormatURL();
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result != 2)
    {
      if ((_DWORD)result == 1)
      {
LABEL_88:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
LABEL_10:
      if ((_DWORD)result)
        return result;
      v7 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      type metadata accessor for FormatAbsoluteURL();
      return swift_bridgeObjectRelease();
    }
    return sub_1BA5A7EF8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_BYTE *)(v6 + 24));
  }
  v2 = type metadata accessor for FormatURL();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_1BA5A7EF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_15;
      v4 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_15:
  v8 = (int *)type metadata accessor for FormatRemoteImage();
  v9 = a1 + v8[5];
  v10 = swift_getEnumCaseMultiPayload();
  if (v10 == 2)
  {
    sub_1BA5A7EF8(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_BYTE *)(v9 + 24));
  }
  else
  {
    if (v10 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v10)
        goto LABEL_22;
      v11 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_22:
  v12 = a1 + v8[6];
  v13 = swift_getEnumCaseMultiPayload();
  if (v13 == 2)
  {
    sub_1BA5A7EF8(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_BYTE *)(v12 + 24));
  }
  else
  {
    if (v13 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v13)
        goto LABEL_29;
      v14 = sub_1BB86C67C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_29:
  v15 = a1 + v8[7];
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48);
  if (!v16(v15, 1, v2))
  {
    v27 = swift_getEnumCaseMultiPayload();
    switch(v27)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), *(_BYTE *)(v15 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v28 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v15, v28);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v17 = a1 + v8[8];
  if (!v16(v17, 1, v2))
  {
    v29 = swift_getEnumCaseMultiPayload();
    switch(v29)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), *(_QWORD *)(v17 + 16), *(_BYTE *)(v17 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v30 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v17, v30);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v18 = a1 + v8[9];
  if (!v16(v18, 1, v2))
  {
    v31 = swift_getEnumCaseMultiPayload();
    switch(v31)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v18, *(_QWORD *)(v18 + 8), *(_QWORD *)(v18 + 16), *(_BYTE *)(v18 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v32 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v18, v32);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v19 = a1 + v8[10];
  if (!v16(v19, 1, v2))
  {
    v33 = swift_getEnumCaseMultiPayload();
    switch(v33)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_QWORD *)(v19 + 16), *(_BYTE *)(v19 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v34 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v19, v34);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v20 = a1 + v8[11];
  if (!v16(v20, 1, v2))
  {
    v35 = swift_getEnumCaseMultiPayload();
    switch(v35)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v20, *(_QWORD *)(v20 + 8), *(_QWORD *)(v20 + 16), *(_BYTE *)(v20 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v36 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v20, v36);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v21 = a1 + v8[12];
  if (!v16(v21, 1, v2))
  {
    v37 = swift_getEnumCaseMultiPayload();
    switch(v37)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v21, *(_QWORD *)(v21 + 8), *(_QWORD *)(v21 + 16), *(_BYTE *)(v21 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v38 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v21, v38);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v22 = a1 + v8[13];
  if (!v16(v22, 1, v2))
  {
    v39 = swift_getEnumCaseMultiPayload();
    switch(v39)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v22, *(_QWORD *)(v22 + 8), *(_QWORD *)(v22 + 16), *(_BYTE *)(v22 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v40 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v22, v40);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v23 = a1 + v8[14];
  if (!v16(v23, 1, v2))
  {
    v41 = swift_getEnumCaseMultiPayload();
    switch(v41)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_QWORD *)(v23 + 16), *(_BYTE *)(v23 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v42 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v23, v42);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v24 = a1 + v8[15];
  if (!v16(v24, 1, v2))
  {
    v43 = swift_getEnumCaseMultiPayload();
    switch(v43)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v24, *(_QWORD *)(v24 + 8), *(_QWORD *)(v24 + 16), *(_BYTE *)(v24 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v44 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v24, v44);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v25 = a1 + v8[16];
  if (!v16(v25, 1, v2))
  {
    v45 = swift_getEnumCaseMultiPayload();
    switch(v45)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v25, *(_QWORD *)(v25 + 8), *(_QWORD *)(v25 + 16), *(_BYTE *)(v25 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v46 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v25, v46);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v26 = a1 + v8[17];
  if (!v16(v26, 1, v2))
  {
    v47 = swift_getEnumCaseMultiPayload();
    switch(v47)
    {
      case 2:
        sub_1BA5A7EF8(*(_QWORD *)v26, *(_QWORD *)(v26 + 8), *(_QWORD *)(v26 + 16), *(_BYTE *)(v26 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        v48 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v26, v48);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  v6 = a1 + v8[18];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v16)(v6, 1, v2);
  if (!(_DWORD)result)
  {
    result = swift_getEnumCaseMultiPayload();
    if ((_DWORD)result != 2)
    {
      if ((_DWORD)result == 1)
        goto LABEL_88;
      goto LABEL_10;
    }
    return sub_1BA5A7EF8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_BYTE *)(v6 + 24));
  }
  return result;
}

void sub_1BA75F574()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C04D0)
  {
    type metadata accessor for FormatVisibilityDataValue();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C04D0);
  }
}

void sub_1BA75F5D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBAB0)
  {
    type metadata accessor for FormatLayoutViewContainer();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBAB0);
  }
}

BOOL sub_1BA75F63C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA6D4A7C(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_1BA75F644@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void (**v10)(_BYTE *, _QWORD);
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[12];
  int v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  void (**v68)(_BYTE *, _QWORD);
  __int128 v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  char v74;
  int v75;
  unsigned __int8 v76;

  v67 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v66 = &v52[-v4];
  sub_1BA7607C8();
  v64 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB13FA58();
  v65 = v9;
  v10 = *(void (***)(_BYTE *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE6238();
  sub_1BA4A2870(&qword_1ED3D13D0, (uint64_t (*)(uint64_t))sub_1BAEE6238, (uint64_t)&unk_1BB8FFC6C);
  v13 = v68;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v62 = v6;
  v63 = v8;
  v68 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1BB872874();
  v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  v17 = v65;
  v18 = (uint64_t)v66;
  v19 = v67;
  if ((v16 & 1) != 0)
  {
    v20 = sub_1BB8740EC();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v22 = (_BYTE *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21)
          goto LABEL_7;
      }
      v27 = v17;
      v28 = *((_QWORD *)v22 - 2);
      v29 = *((_QWORD *)v22 - 1);
      swift_bridgeObjectRetain_n();
      v30 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v30);
      sub_1BA50CAA8(0, &qword_1ED3CE0E8, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
      *(_QWORD *)&v52[-32] = v31;
      *(_QWORD *)&v52[-24] = sub_1BAEE62DC();
      *(_QWORD *)&v52[-16] = sub_1BA75FE70();
      *(_QWORD *)&v52[-8] = sub_1BAEE6344();
      swift_getKeyPath();
      swift_retain();
      v32 = sub_1BAE71220((uint64_t)&unk_1E726D6E8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v33 = v28;
      *(_QWORD *)(v33 + 8) = v29;
      *(_QWORD *)(v33 + 16) = v32;
      *(_OWORD *)(v33 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v28, v29, 1);
      v68[1](v12, v27);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v73 = 0uLL;
  v74 = 0;
  v23 = sub_1BB874098();
  v25 = v24;
  v61 = v23;
  v73 = xmmword_1BB8A1A10;
  v74 = 0;
  v26 = sub_1BB874098();
  v35 = v34;
  v60 = v26;
  v73 = xmmword_1BB8D2D60;
  v74 = 0;
  v58 = sub_1BB874098();
  v59 = v36;
  v73 = xmmword_1BB8D2D70;
  v74 = 0;
  v56 = sub_1BB874098();
  v57 = v37;
  v73 = xmmword_1BB8D2D90;
  v74 = 0;
  v75 = sub_1BB8740A4();
  v73 = xmmword_1BB8D2D80;
  v74 = 0;
  sub_1BB874068();
  v55 = v35;
  v54 = xmmword_1BB8D2DA0;
  v73 = xmmword_1BB8D2DA0;
  v74 = 0;
  v39 = sub_1BB8740F8();
  if ((v39 & 1) != 0)
  {
    v69 = v54;
    v70 = 0;
    sub_1BB8740D4();
    v53 = v76;
  }
  else
  {
    v53 = 0;
  }
  v54 = xmmword_1BB8D2DB0;
  v73 = xmmword_1BB8D2DB0;
  v74 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v69 = v54;
    v70 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v40 = v64;
    sub_1BB8740D4();
    *(_QWORD *)&v54 = v25;
    v41 = v63;
    v42 = sub_1BB86DD08();
    v43 = v40;
    v44 = v42;
    (*(void (**)(_BYTE *, uint64_t))(v62 + 8))(v41, v43);
  }
  else
  {
    *(_QWORD *)&v54 = v25;
    v44 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v73 = xmmword_1BB8D2DD0;
  v74 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v68[1](v12, v17);
  v45 = v71;
  v46 = v72;
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BA646EFC(v18, v19 + *(int *)(v47 + 64), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  *(_QWORD *)(v19 + 72) = v45;
  *(_QWORD *)(v19 + 80) = v46;
  v48 = v54;
  *(_QWORD *)v19 = v61;
  *(_QWORD *)(v19 + 8) = v48;
  v49 = v55;
  *(_QWORD *)(v19 + 16) = v60;
  *(_QWORD *)(v19 + 24) = v49;
  v50 = v59;
  *(_QWORD *)(v19 + 32) = v58;
  *(_QWORD *)(v19 + 40) = v50;
  v51 = v57;
  *(_QWORD *)(v19 + 48) = v56;
  *(_QWORD *)(v19 + 56) = v51;
  *(_BYTE *)(v19 + 64) = v75 & 1;
  *(_BYTE *)(v19 + 88) = v53;
  *(_QWORD *)(v19 + 96) = v44;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA75FE70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CE0E0;
  if (!qword_1ED3CE0E0)
  {
    sub_1BA50CAA8(255, &qword_1ED3CE0E8, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80D0, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CE0E0);
  }
  return result;
}

uint64_t sub_1BA75FED8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(_BYTE *, _QWORD);
  uint64_t v14;
  _BYTE *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[12];
  int v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  void (**v70)(_BYTE *, _QWORD);
  __int128 v71;
  char v72;
  __int128 v73;
  char v74;
  int v75;
  unsigned __int8 v76;

  v69 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v68 = &v53[-v5];
  sub_1BA7607C8();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  MEMORY[0x1E0C80A78](v6);
  v67 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], v3);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v53[-v9];
  sub_1BB13FAD0();
  v12 = v11;
  v13 = *(void (***)(_BYTE *, _QWORD))(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = &v53[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE6530();
  sub_1BA4A2870(&qword_1ED3D13A0, (uint64_t (*)(uint64_t))sub_1BAEE6530, (uint64_t)&unk_1BB8FFC6C);
  v16 = v70;
  sub_1BB87468C();
  v17 = v16;
  if (v16)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v17);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v64 = v10;
  v70 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v18 = sub_1BB872874();
  v19 = Dictionary<>.errorOnUnknownKeys.getter(v18);
  swift_bridgeObjectRelease();
  v21 = (uint64_t)v68;
  v20 = v69;
  if ((v19 & 1) != 0)
  {
    v22 = sub_1BB8740EC();
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = (_BYTE *)(v22 + 48);
      while (*v24 != 1)
      {
        v24 += 24;
        if (!--v23)
          goto LABEL_7;
      }
      v29 = v15;
      v31 = *((_QWORD *)v24 - 2);
      v30 = *((_QWORD *)v24 - 1);
      swift_bridgeObjectRetain_n();
      v32 = swift_bridgeObjectRelease();
      v69 = v12;
      MEMORY[0x1E0C80A78](v32);
      sub_1BA68B0A4(0);
      *(_QWORD *)&v53[-32] = v33;
      *(_QWORD *)&v53[-24] = sub_1BA4A2870(&qword_1ED3D18A8, (uint64_t (*)(uint64_t))sub_1BA68B0A4, (uint64_t)&unk_1BB8C8120);
      *(_QWORD *)&v53[-16] = sub_1BA4A2870(&qword_1ED3CE0B0, (uint64_t (*)(uint64_t))sub_1BA68B0A4, (uint64_t)&unk_1BB8C80D0);
      *(_QWORD *)&v53[-8] = sub_1BA4A2870(&qword_1ED3D18A0, (uint64_t (*)(uint64_t))sub_1BA68B0A4, (uint64_t)&unk_1BB8C80A8);
      swift_getKeyPath();
      swift_retain();
      v34 = sub_1BAE71220((uint64_t)&unk_1E726D718);
      swift_release_n();
      sub_1BA98D1F0();
      v17 = (void *)swift_allocError();
      *(_QWORD *)v35 = v31;
      *(_QWORD *)(v35 + 8) = v30;
      *(_QWORD *)(v35 + 16) = v34;
      *(_OWORD *)(v35 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v31, v30, 1);
      v70[1](v29, v69);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v73 = 0uLL;
  v74 = 0;
  v25 = sub_1BB874098();
  v27 = v26;
  v63 = v25;
  v73 = xmmword_1BB8A1A10;
  v74 = 0;
  v28 = sub_1BB874098();
  v37 = v36;
  v62 = v28;
  v73 = xmmword_1BB8D2D60;
  v74 = 0;
  v60 = sub_1BB874098();
  v61 = v38;
  v73 = xmmword_1BB8D2D70;
  v74 = 0;
  v58 = sub_1BB874098();
  v59 = v39;
  v73 = xmmword_1BB8D2D90;
  v74 = 0;
  v75 = sub_1BB8740A4();
  v57 = v37;
  sub_1BB86C67C();
  v73 = xmmword_1BB8D2D80;
  v74 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  sub_1BB874068();
  v56 = v27;
  v55 = xmmword_1BB8D2DA0;
  v73 = xmmword_1BB8D2DA0;
  v74 = 0;
  v41 = sub_1BB8740F8();
  if ((v41 & 1) != 0)
  {
    v71 = v55;
    v72 = 0;
    sub_1BB8740D4();
    v54 = v76;
  }
  else
  {
    v54 = 0;
  }
  v55 = xmmword_1BB8D2DB0;
  v73 = xmmword_1BB8D2DB0;
  v74 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v71 = v55;
    v72 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v42 = v66;
    sub_1BB8740D4();
    v43 = v67;
    v44 = sub_1BB86DD08();
    v45 = v42;
    v46 = v44;
    (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v43, v45);
  }
  else
  {
    v46 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v73 = xmmword_1BB8D2DD0;
  v74 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v70[1](v15, v12);
  sub_1BA74E21C(0);
  v48 = v47;
  sub_1BA646EFC((uint64_t)v64, v20 + v47[13], (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  sub_1BA646EFC(v21, v20 + v48[16], (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v49 = v56;
  *(_QWORD *)v20 = v63;
  *(_QWORD *)(v20 + 8) = v49;
  v50 = v57;
  *(_QWORD *)(v20 + 16) = v62;
  *(_QWORD *)(v20 + 24) = v50;
  v51 = v61;
  *(_QWORD *)(v20 + 32) = v60;
  *(_QWORD *)(v20 + 40) = v51;
  v52 = v59;
  *(_QWORD *)(v20 + 48) = v58;
  *(_QWORD *)(v20 + 56) = v52;
  *(_BYTE *)(v20 + 64) = v75 & 1;
  *(_BYTE *)(v20 + v48[14]) = v54;
  *(_QWORD *)(v20 + v48[15]) = v46;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA7607C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C45E8)
  {
    sub_1BA830868();
    sub_1BA830934();
    sub_1BA8308F0();
    v0 = sub_1BB86DD14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C45E8);
  }
}

_QWORD *sub_1BA760848(double *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  char v12;
  char v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;

  v5 = *(unsigned __int8 *)(a2 + 8);
  type metadata accessor for FormatGroupLayoutFactory.Bound();
  sub_1BB86D708();
  v7 = v6;
  v9 = v8;
  v10 = a1[2];
  v11 = a1[3];
  if (v5 >= 0x40)
    v12 = 7;
  else
    v12 = 5;
  if (v5 <= 0xFD)
    v13 = v12;
  else
    v13 = 7;
  v15 = a1[4];
  v14 = a1[5];
  v16 = *((_QWORD *)a1 + 7);
  v17 = *((_QWORD *)a1 + 11);
  v26 = *((_QWORD *)a1 + 10);
  v27 = *((_QWORD *)a1 + 6);
  v18 = *((_QWORD *)a1 + 12);
  v19 = *((_QWORD *)a1 + 13);
  v20 = *((_QWORD *)a1 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = sub_1BA792088(v20, v7, v9);
  v30 = *((_QWORD *)a1 + 15);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3CF818, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A5C((unint64_t *)&unk_1ED3CF820, (uint64_t)&qword_1ED3CF818, (uint64_t)type metadata accessor for FormatAccessibilityLayoutValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  v22 = sub_1BB872BC8();
  v29 = a3;
  v23 = sub_1BA760A5C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BB684510, (uint64_t)v28, v22);
  swift_bridgeObjectRelease();
  sub_1BA4AD288(0, &qword_1ED3CB8E0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
  swift_allocObject();
  v24 = sub_1BB6821EC(v27, v16, v26, v17, v18, v19, v10, v11, v15, v14, v7, v9, v21, v23, v13);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1BA760A5C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9D8];
  if (a3 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      for (i = 4; ; ++i)
      {
        v7 = i - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x1BCCE4630](i - 4, a3);
          v9 = i - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_17;
        }
        else
        {
          v8 = *(_QWORD *)(a3 + 8 * i);
          swift_retain();
          v9 = i - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        v14 = v8;
        a1(&v13, &v14);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        v10 = swift_release();
        if (v13)
        {
          MEMORY[0x1BCCE36AC](v10);
          if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
        if (v9 == v5)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA760C08@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA760C20(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BA760C20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;

  sub_1BA760FAC();
  v34 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - v13;
  v15 = *a1;
  v16 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 40));
  v18 = *(_QWORD *)(v15 + 16);
  v17 = *(_QWORD *)(v15 + 24);
  swift_beginAccess();
  v19 = *(_QWORD *)(v16 + 24);
  if (*(_QWORD *)(v19 + 16))
  {
    v33 = v11;
    swift_bridgeObjectRetain();
    v20 = sub_1BA6E35A8(v18, v17);
    if ((v21 & 1) != 0)
    {
      v22 = v20;
      v23 = *(_QWORD *)(v19 + 56);
      v24 = type metadata accessor for FormatNodeStateData.Data();
      v32 = a3;
      v25 = *(_QWORD *)(v24 - 8);
      sub_1BA4C2DD8(v23 + *(_QWORD *)(v25 + 72) * v22, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
      a3 = v32;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v14, 0, 1, v24);
    }
    else
    {
      v24 = type metadata accessor for FormatNodeStateData.Data();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v14, 1, 1, v24);
    }
    swift_bridgeObjectRelease();
    v11 = v33;
  }
  else
  {
    v24 = type metadata accessor for FormatNodeStateData.Data();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v14, 1, 1, v24);
  }
  swift_endAccess();
  v26 = *(unsigned __int8 *)(v15 + 32);
  v27 = (uint64_t)&v8[*(int *)(v34 + 48)];
  *v8 = v26;
  sub_1BA646EFC((uint64_t)v14, v27, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v27, 1, v24) == 1)
  {
    if ((v26 - 18) >= 6)
    {
      type metadata accessor for FormatDataAccessibilityValue();
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v15;
      *(_QWORD *)(v28 + 24) = 0xF000000000000007;
LABEL_12:
      *a3 = v28;
      swift_retain();
      return sub_1BA5C699C(v27, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    }
  }
  else
  {
    sub_1BA5E01A4(v27, (uint64_t)v11, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      v29 = *v11;
      type metadata accessor for FormatDataAccessibilityValue();
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v15;
      *(_QWORD *)(v28 + 24) = v29;
      goto LABEL_12;
    }
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  }
  *a3 = 0;
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA760FAC);
}

uint64_t sub_1BA760F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t type metadata accessor for FormatDataAccessibilityValue()
{
  return objc_opt_self();
}

void sub_1BA760FAC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C4298)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C4298);
  }
}

unint64_t sub_1BA761028@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  double *v14;
  _QWORD *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v26[2];
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _BYTE v37[16];
  _BYTE v38[8];
  unint64_t v39[2];

  if (((result >> 59) & 0x1E | (result >> 2) & 1) == 2)
  {
    v11 = *(_OWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x30);
    v33 = *(_OWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    v34 = v11;
    v12 = *(_OWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x50);
    v35 = *(_OWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x40);
    v36 = v12;
    v32 = *(_OWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BA761348((uint64_t)&v32);
    sub_1BA7613B4((uint64_t)&v32, a2, a3, a4, a5, (uint64_t)&v29);
    v22 = v30;
    v23 = v29;
    v13 = v31;
    v14 = (double *)v32;
    sub_1BA6A09F0((uint64_t)&v35, (uint64_t)v37, &qword_1ED3B80E8, (uint64_t)&type metadata for FormatNodeAccessibilityRole);
    sub_1BA6A09F0((uint64_t)v37, (uint64_t)&v29, &qword_1ED3B80E8, (uint64_t)&type metadata for FormatNodeAccessibilityRole);
    v15 = sub_1BA760848(v14, (uint64_t)&v29, a2);
    sub_1BA6A09F0((uint64_t)&v32 + 8, (uint64_t)v38, &qword_1ED3C6C08, (uint64_t)&type metadata for FormatResizing);
    sub_1BA6A09F0((uint64_t)v38, (uint64_t)&v28, &qword_1ED3C6C08, (uint64_t)&type metadata for FormatResizing);
    v16 = v33;
    sub_1BA76127C((_QWORD *)&v33 + 1, v39);
    sub_1BA76127C(v39, &v27);
    v17 = v34 & 1;
    v18 = *((_QWORD *)&v34 + 1);
    sub_1BA6A09F0((uint64_t)v37, (uint64_t)v26, &qword_1ED3B80E8, (uint64_t)&type metadata for FormatNodeAccessibilityRole);
    v29 = v23;
    v30 = v22;
    v31 = v13;
    v19 = *((_QWORD *)&v36 + 1);
    type metadata accessor for FormatGroupNodeDataLayoutAttributes();
    swift_allocObject();
    v20 = FormatGroupNodeDataLayoutAttributes.init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)((uint64_t)v15, &v28, v16, &v27, v17, v18, v26, (uint64_t)&v29, v19);
    sub_1BA761748((uint64_t)v38);
    sub_1BA761720(v39);
    swift_retain();
    swift_retain();
    sub_1BA7612D8((uint64_t)&v32);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = a6;
    *(_QWORD *)(v21 + 32) = a3;
    *(_QWORD *)(v21 + 40) = a4;
    *(_QWORD *)(v21 + 48) = a5;
    *a7 = v21 | 0x2000000000000000;
    swift_retain();
    return sub_1BA8E9488(a3, a4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1BA76127C(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

uint64_t type metadata accessor for FormatGroupNodeDataLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t sub_1BA7612D8(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  swift_release();
  swift_release();
  sub_1BA6EEDB4(v2);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1BA761348(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  swift_retain();
  swift_retain();
  sub_1BA67D3F4(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_1BA7613B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v44 - v13;
  v15 = *(_QWORD *)(a1 + 64);
  if (!v15)
    goto LABEL_16;
  v16 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 40));
  v18 = *(_QWORD *)(v15 + 16);
  v17 = *(_QWORD *)(v15 + 24);
  swift_beginAccess();
  v19 = *(_QWORD *)(v16 + 24);
  if (*(_QWORD *)(v19 + 16))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    v52 = v18;
    v20 = sub_1BA6E35A8(v18, v17);
    if ((v21 & 1) != 0)
    {
      v22 = v20;
      v51 = a5;
      v23 = *(_QWORD *)(v19 + 56);
      v24 = type metadata accessor for FormatNodeStateData.Data();
      v50 = v17;
      v25 = a3;
      v26 = a4;
      v27 = *(_QWORD *)(v24 - 8);
      v28 = v23 + *(_QWORD *)(v27 + 72) * v22;
      a5 = v51;
      sub_1BA4C2DD8(v28, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
      v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
      a4 = v26;
      a3 = v25;
      v17 = v50;
      v29(v14, 0, 1, v24);
    }
    else
    {
      v24 = type metadata accessor for FormatNodeStateData.Data();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v14, 1, 1, v24);
    }
    swift_bridgeObjectRelease();
    v18 = v52;
  }
  else
  {
    v24 = type metadata accessor for FormatNodeStateData.Data();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v14, 1, 1, v24);
    swift_retain();
  }
  swift_endAccess();
  type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v14, 1, v24) == 1)
  {
    sub_1BA5C699C((uint64_t)v14, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
LABEL_15:
    swift_release();
LABEL_16:
    *(_QWORD *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    return;
  }
  if (swift_getEnumCaseMultiPayload() != 16)
  {
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    goto LABEL_15;
  }
  v52 = v18;
  v30 = *((_QWORD *)v14 + 1);
  v31 = *((_QWORD *)v14 + 2);
  v45 = *(_QWORD *)v14;
  v46 = v30;
  v32 = *((_QWORD *)v14 + 3);
  v50 = *((_QWORD *)v14 + 4);
  v51 = v32;
  v33 = *((_QWORD *)v14 + 5);
  v48 = *((_QWORD *)v14 + 6);
  v49 = v33;
  v47 = *((_QWORD *)v14 + 7);
  v34 = v14[64];
  swift_beginAccess();
  v35 = *(_QWORD *)(v16 + 32);
  if (*(_QWORD *)(v35 + 16))
  {
    swift_bridgeObjectRetain();
    v36 = sub_1BA6E35A8(v52, v17);
    v37 = v45;
    if ((v38 & 1) != 0)
    {
      v39 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v36);
      swift_retain();
    }
    else
    {
      v39 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
    v37 = v45;
  }
  v40 = v46;
  swift_endAccess();
  sub_1BA4B07F0(0, &qword_1ED3AA7F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatGroupNodeMaskDataLayoutAttributes);
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v15;
  *(_QWORD *)(v41 + 24) = v37;
  *(_QWORD *)(v41 + 32) = v40;
  *(_QWORD *)(v41 + 40) = v31;
  v42 = v50;
  *(_QWORD *)(v41 + 48) = v51;
  *(_QWORD *)(v41 + 56) = v42;
  v43 = v48;
  *(_QWORD *)(v41 + 64) = v49;
  *(_QWORD *)(v41 + 72) = v43;
  *(_QWORD *)(v41 + 80) = v47;
  *(_BYTE *)(v41 + 88) = v34;
  *(_QWORD *)a6 = v41;
  *(_QWORD *)(a6 + 8) = v39;
  *(_QWORD *)(a6 + 16) = a3;
  *(_QWORD *)(a6 + 24) = a4;
  *(_QWORD *)(a6 + 32) = a5;
  sub_1BA8E9488(a3, a4);
}

unint64_t *sub_1BA761720(unint64_t *a1)
{
  sub_1BA67D3F4(*a1);
  return a1;
}

uint64_t sub_1BA761748(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1BA761770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v69;
  uint64_t v70[3];
  _QWORD v71[3];
  uint64_t v72;
  uint64_t v73[3];
  uint64_t v74[3];
  uint64_t v75[3];
  uint64_t v76[3];
  uint64_t v77[3];
  uint64_t v78[3];
  uint64_t v79[3];
  uint64_t v80;
  char v81;
  uint64_t v82;

  v1 = v0;
  v81 = *(_BYTE *)(v0 + 16);
  v82 = FeedKind.contextMenuItemOptions.getter();
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16))
  {
    v80 = *(_QWORD *)(v1 + 56);
    v4 = swift_bridgeObjectRetain();
    v5 = sub_1BA6E42A0(v4);
    sub_1BA6E3FB8(v5);
    v6 = v80;
  }
  else
  {
    v6 = sub_1BA6E3F38();
  }
  v7 = sub_1BA761FE4(0xD00000000000001ELL, 0x80000001BB9638A0, v6);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
    goto LABEL_9;
  v8 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v8 + 16) + 16))
  {
    v79[0] = *(_QWORD *)(v1 + 56);
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA6E42A0(v9);
    sub_1BA6E3FB8(v10);
    v11 = v79[0];
  }
  else
  {
    v11 = sub_1BA6E3F38();
  }
  v12 = sub_1BA761FE4(0xD000000000000019, 0x80000001BB963830, v11);
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
LABEL_9:
    sub_1BA9D7058(v79, 11);
  v13 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v13 + 16) + 16))
  {
    v78[0] = *(_QWORD *)(v1 + 56);
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1BA6E42A0(v14);
    sub_1BA6E3FB8(v15);
    v16 = v78[0];
  }
  else
  {
    v16 = sub_1BA6E3F38();
  }
  v17 = sub_1BA761FE4(0xD000000000000011, 0x80000001BB962800, v16);
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    sub_1BA9D7058(v78, 12);
  v18 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v18 + 16) + 16))
  {
    v77[0] = *(_QWORD *)(v1 + 56);
    v19 = swift_bridgeObjectRetain();
    v20 = sub_1BA6E42A0(v19);
    sub_1BA6E3FB8(v20);
    v21 = v77[0];
  }
  else
  {
    v21 = sub_1BA6E3F38();
  }
  v22 = sub_1BA761FE4(0xD000000000000011, 0x80000001BB962900, v21);
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    sub_1BA9D7058(v77, 13);
  v23 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v23 + 16) + 16))
  {
    v76[0] = *(_QWORD *)(v1 + 56);
    v24 = swift_bridgeObjectRetain();
    v25 = sub_1BA6E42A0(v24);
    sub_1BA6E3FB8(v25);
    v26 = v76[0];
  }
  else
  {
    v26 = sub_1BA6E3F38();
  }
  v27 = sub_1BA761FE4(0xD000000000000016, 0x80000001BB991180, v26);
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
    sub_1BA9D7058(v76, 9);
  v28 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v28 + 16) + 16))
  {
    v75[0] = *(_QWORD *)(v1 + 56);
    v29 = swift_bridgeObjectRetain();
    v30 = sub_1BA6E42A0(v29);
    sub_1BA6E3FB8(v30);
    v31 = v75[0];
  }
  else
  {
    v31 = sub_1BA6E3F38();
  }
  v32 = sub_1BA761FE4(0xD00000000000001BLL, 0x80000001BB9911A0, v31);
  swift_bridgeObjectRelease();
  if ((v32 & 1) != 0)
    sub_1BA9D7058(v75, 2);
  v33 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v33 + 16) + 16))
  {
    v74[0] = *(_QWORD *)(v1 + 56);
    v34 = swift_bridgeObjectRetain();
    v35 = sub_1BA6E42A0(v34);
    sub_1BA6E3FB8(v35);
    v36 = v74[0];
  }
  else
  {
    v36 = sub_1BA6E3F38();
  }
  v37 = sub_1BA761FE4(0xD00000000000001ELL, 0x80000001BB9911C0, v36);
  swift_bridgeObjectRelease();
  if ((v37 & 1) != 0)
    sub_1BA9D7058(v74, 4);
  v38 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v38 + 16) + 16))
  {
    v73[0] = *(_QWORD *)(v1 + 56);
    v39 = swift_bridgeObjectRetain();
    v40 = sub_1BA6E42A0(v39);
    sub_1BA6E3FB8(v40);
    v41 = v73[0];
  }
  else
  {
    v41 = sub_1BA6E3F38();
  }
  v42 = sub_1BA761FE4(0xD00000000000001DLL, 0x80000001BB9911E0, v41);
  swift_bridgeObjectRelease();
  if ((v42 & 1) != 0)
    sub_1BA9D7058(v73, 3);
  v43 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v43 + 16) + 16))
  {
    v72 = *(_QWORD *)(v1 + 56);
    v44 = swift_bridgeObjectRetain();
    v45 = sub_1BA6E42A0(v44);
    sub_1BA6E3FB8(v45);
    v46 = v72;
  }
  else
  {
    v46 = sub_1BA6E3F38();
  }
  v47 = sub_1BA761FE4(0xD00000000000001BLL, 0x80000001BB991200, v46);
  swift_bridgeObjectRelease();
  if ((v47 & 1) != 0)
    goto LABEL_44;
  v48 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v48 + 16) + 16))
  {
    v71[0] = *(_QWORD *)(v1 + 56);
    v49 = swift_bridgeObjectRetain();
    v50 = sub_1BA6E42A0(v49);
    sub_1BA6E3FB8(v50);
    v51 = v71[0];
  }
  else
  {
    v51 = sub_1BA6E3F38();
  }
  v52 = sub_1BA761FE4(0xD000000000000010, 0x80000001BB991220, v51);
  swift_bridgeObjectRelease();
  if ((v52 & 1) != 0)
  {
    v53 = *(_QWORD *)(v2 + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v53 + 16) + 16))
    {
      v71[0] = *(_QWORD *)(v1 + 56);
      v54 = swift_bridgeObjectRetain();
      v55 = sub_1BA6E42A0(v54);
      sub_1BA6E3FB8(v55);
      v56 = v71[0];
    }
    else
    {
      v56 = sub_1BA6E3F38();
    }
    v57 = sub_1BA761FE4(0xD000000000000021, 0x80000001BB991240, v56);
    swift_bridgeObjectRelease();
    if ((v57 & 1) != 0)
    {
LABEL_44:
      sub_1BA9D7058(v71, 21);
      sub_1BA9D7058(v71, 26);
    }
  }
  v58 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v58 + 16) + 16))
  {
    v70[0] = *(_QWORD *)(v1 + 56);
    v59 = swift_bridgeObjectRetain();
    v60 = sub_1BA6E42A0(v59);
    sub_1BA6E3FB8(v60);
    v61 = v70[0];
  }
  else
  {
    v61 = sub_1BA6E3F38();
  }
  v62 = sub_1BA761FE4(0xD000000000000015, 0x80000001BB962780, v61);
  swift_bridgeObjectRelease();
  if ((v62 & 1) != 0)
    sub_1BA9D7058(v70, 10);
  v63 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v63 + 16) + 16))
  {
    v69 = *(_QWORD *)(v1 + 56);
    v64 = swift_bridgeObjectRetain();
    v65 = sub_1BA6E42A0(v64);
    sub_1BA6E3FB8(v65);
    v66 = v69;
  }
  else
  {
    v66 = sub_1BA6E3F38();
  }
  v67 = sub_1BA761FE4(0xD000000000000016, 0x80000001BB966450, v66);
  swift_bridgeObjectRelease();
  if ((v67 & 1) != 0)
    sub_1BA9D7058(&v69, 25);
  return v82;
}

uint64_t sub_1BA761F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;

  sub_1BB86DD80();
  v5 = *(_QWORD *)(*(_QWORD *)(v12 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16))
  {
    v11 = *(_QWORD *)(v12 + 56);
    v6 = swift_bridgeObjectRetain();
    v7 = sub_1BA6E42A0(v6);
    sub_1BA6E3FB8(v7);
    swift_release();
    v8 = v11;
  }
  else
  {
    v8 = sub_1BA6E3F38();
    swift_release();
  }
  swift_bridgeObjectRetain();
  v9 = sub_1BA761FE4(a2, a3, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1BA761FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    v6 = sub_1BB874608();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1BB874398() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1BB874398() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t FormatDimensionSizing.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  unint64_t v25;
  char *v26;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  sub_1BAE8F2EC(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v25 = v1[1];
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE8F1E4();
  v16 = sub_1BA4A2870(&qword_1ED3D0FC0, (uint64_t (*)(uint64_t))sub_1BAE8F1E4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatDimensionSizing, v17, v13, (uint64_t)&type metadata for FormatDimensionSizing, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v16, (uint64_t)&off_1E734BD80);
  sub_1BA7635BC(v12);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v8, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1819C(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  sub_1BA7635EC(v12);
  if (!v2)
  {
    v21 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v22 = v25;
    sub_1BA7635BC(v25);
    sub_1BAD1819C(v22, 1, 0, 0, v21, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
    sub_1BA7635EC(v22);
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAE8F2EC);
}

uint64_t FormatTextNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int16 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t);
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t *v131;
  uint64_t v132;
  _QWORD *v133;
  __int128 v134;
  char v135;
  __int128 v136;
  char v137;
  __int128 v138;
  char v139;
  __int128 v140;
  char v141;
  uint64_t v142;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v117 = (char *)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v118 = (char *)&v114 - v8;
  MEMORY[0x1E0C80A78](v9);
  v119 = (char *)&v114 - v10;
  MEMORY[0x1E0C80A78](v11);
  v120 = (char *)&v114 - v12;
  MEMORY[0x1E0C80A78](v13);
  v121 = (char *)&v114 - v14;
  MEMORY[0x1E0C80A78](v15);
  v122 = (char *)&v114 - v16;
  MEMORY[0x1E0C80A78](v17);
  v123 = (char *)&v114 - v18;
  MEMORY[0x1E0C80A78](v19);
  v124 = (char *)&v114 - v20;
  MEMORY[0x1E0C80A78](v21);
  v125 = (char *)&v114 - v22;
  MEMORY[0x1E0C80A78](v23);
  v126 = (char *)&v114 - v24;
  MEMORY[0x1E0C80A78](v25);
  v127 = (char *)&v114 - v26;
  MEMORY[0x1E0C80A78](v27);
  v128 = (char *)&v114 - v28;
  MEMORY[0x1E0C80A78](v29);
  v129 = (char *)&v114 - v30;
  MEMORY[0x1E0C80A78](v31);
  v130 = (char *)&v114 - v32;
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v114 - v34;
  sub_1BAE78274(0);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)&v114 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a1[3];
  v40 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v39);
  v41 = sub_1BAE78364();
  v42 = sub_1BA4A2870(&qword_1ED3D1590, (uint64_t (*)(uint64_t))sub_1BAE78364, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v43, v39, v4, v41, (uint64_t)&type metadata for FormatVersions.JazzkonC, v40, (uint64_t)v38, v42, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v44 = v2[2];
  v45 = v2[3];
  v131 = v2;
  v46 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v46 != -1)
    swift_once();
  v47 = sub_1BB86EB84();
  v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1ED476C20);
  v49 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
  v49(v35, v48, v47);
  v50 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v51 = v44;
  v52 = (uint64_t)v38;
  v53 = v132;
  sub_1BAD265E8(v51, v45, 0, 0, 0, (uint64_t)v35, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE55F94, (uint64_t (*)(uint64_t))sub_1BAE782EC, &qword_1ED3AF2F0);
  if (v53)
  {
    sub_1BA4A2E80((uint64_t)v35, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v54 = v131;
    v55 = v131[4];
    v56 = (uint64_t)v130;
    v49(v130, v48, v47);
    swift_storeEnumTagMultiPayload();
    sub_1BA7635BC(v55);
    sub_1BAD21AAC(v55, 1, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v132 = v47;
    v115 = v48;
    v116 = v49;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    sub_1BA7635EC(v55);
    v57 = v54[5];
    v58 = qword_1ED3C6D50;
    swift_retain();
    if (v58 != -1)
      swift_once();
    v59 = v132;
    v60 = __swift_project_value_buffer(v132, (uint64_t)qword_1ED476BF0);
    v61 = (uint64_t)v129;
    v62 = v116;
    v116(v129, v60, v59);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6A890(v57, 2, 0, 0, v61, (uint64_t)sub_1BA90CF04, 0);
    v63 = v115;
    v65 = (char *)v50;
    sub_1BA4A2E80(v61, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    v66 = (uint64_t)v128;
    v62(v128, v63, v59);
    v130 = v65;
    swift_storeEnumTagMultiPayload();
    v67 = swift_bridgeObjectRetain();
    sub_1BAD2D734(v67, 3, 0, 0);
    sub_1BA4A2E80(v66, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v68 = v131;
    v69 = (uint64_t)v127;
    v116(v127, v63, v59);
    swift_storeEnumTagMultiPayload();
    v70 = swift_retain();
    sub_1BAD6AAA0(v70, 4, 0, 0, v69, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v69, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v71 = v68[8];
    v72 = qword_1ED3C6D58;
    swift_retain();
    if (v72 != -1)
      swift_once();
    v73 = __swift_project_value_buffer(v59, (uint64_t)qword_1ED476C08);
    v74 = (uint64_t)v126;
    v75 = v116;
    v116(v126, v73, v59);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6ACB8(v71, 5, 0, 0, v74, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v74, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v76 = v59;
    v77 = v131;
    v78 = v131[9];
    v79 = (uint64_t)v125;
    v75(v125, v63, v76);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_1BAD21C08(v78, 6, 0, 0, v79, (uint64_t)sub_1BA90CF04, 0);
    v129 = (char *)v73;
    sub_1BA4A2E80(v79, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v80 = v77[10];
    v81 = v77[11];
    v82 = v77[12];
    v83 = *((_WORD *)v77 + 52);
    sub_1BA72FFC4(v80, v81, v82, v83);
    if (qword_1ED3C6D18 != -1)
      swift_once();
    v84 = v132;
    v85 = __swift_project_value_buffer(v132, (uint64_t)qword_1ED476B60);
    v86 = (uint64_t)v124;
    v116(v124, v85, v84);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6AED0(v80, v81, v82, v83, 7, 0, 0, v86);
    sub_1BA4A2E80(v86, type metadata accessor for FormatVersionRequirement);
    sub_1BA72E4BC(v80, v81, v82, v83);
    v87 = v131;
    swift_beginAccess();
    v88 = v87[14];
    v89 = (uint64_t)v123;
    v116(v123, v115, v84);
    swift_storeEnumTagMultiPayload();
    if (v88 && (sub_1BAE55F94(v89, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v140 = xmmword_1BB8D2DD0;
      v141 = 0;
      *(_QWORD *)&v138 = v88;
      sub_1BAE782EC();
      sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
      v87 = v131;
      v106 = (uint64_t)v122;
      v107 = v129;
      v89 = (uint64_t)v123;
    }
    else
    {
      v106 = (uint64_t)v122;
      v107 = v129;
    }
    sub_1BA4A2E80(v89, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    v90 = v87[15];
    v91 = (void (*)(uint64_t, uint64_t, uint64_t))v116;
    v116((char *)v106, (uint64_t)v107, v132);
    swift_storeEnumTagMultiPayload();
    if (v90 == 0x8000000000000000)
    {
      v92 = v52;
      v93 = (uint64_t)v121;
    }
    else
    {
      sub_1BA67D3F4(v90);
      v92 = v52;
      if ((sub_1BAE55F94(v106, 9, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v138 = xmmword_1BB8D2DE0;
        v139 = 0;
        *(_QWORD *)&v136 = v90;
        sub_1BAE782EC();
        sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
        sub_1BA84B088();
        sub_1BB874464();
      }
      v87 = v131;
      v91 = (void (*)(uint64_t, uint64_t, uint64_t))v116;
      v93 = (uint64_t)v121;
      v106 = (uint64_t)v122;
    }
    sub_1BA4A2E80(v106, type metadata accessor for FormatVersionRequirement);
    sub_1BA6EEDB4(v90);
    swift_beginAccess();
    v94 = *((_BYTE *)v87 + 128);
    if (qword_1ED3C6D70 != -1)
      swift_once();
    v95 = v132;
    v96 = __swift_project_value_buffer(v132, (uint64_t)qword_1ED476C50);
    v91(v93, v96, v95);
    swift_storeEnumTagMultiPayload();
    if ((v94 & 1) == 0)
    {
      if ((sub_1BAE55F94(v93, 10, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v136 = xmmword_1BB8D2DF0;
        v137 = 0;
        LOBYTE(v134) = 0;
        sub_1BAE782EC();
        sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
        sub_1BB874464();
      }
      v87 = v131;
      v91 = (void (*)(uint64_t, uint64_t, uint64_t))v116;
      v93 = (uint64_t)v121;
    }
    sub_1BA4A2E80(v93, type metadata accessor for FormatVersionRequirement);
    v97 = *((_BYTE *)v87 + 129);
    v98 = (uint64_t)v120;
    v99 = v132;
    v91((uint64_t)v120, v115, v132);
    swift_storeEnumTagMultiPayload();
    v100 = v97;
    v52 = v92;
    sub_1BAD6B118(v100, 11, 0, 0, v98, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v98, type metadata accessor for FormatVersionRequirement);
    v101 = v87[17];
    LOBYTE(v98) = *((_BYTE *)v87 + 144);
    v102 = (uint64_t)v119;
    v91((uint64_t)v119, v115, v99);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6B2E0(v101, v98, 12, 0, 0, v102, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v102, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    v103 = v87[19];
    v104 = qword_1ED3C6D60;
    swift_bridgeObjectRetain();
    if (v104 != -1)
      swift_once();
    v105 = __swift_project_value_buffer(v99, (uint64_t)qword_1ED476C38);
    v116(v118, v105, v99);
    swift_storeEnumTagMultiPayload();
    if (*(_QWORD *)(v103 + 16) && (sub_1BAE55F94((uint64_t)v118, 13, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v134 = xmmword_1BB8868A0;
      v135 = 0;
      v108 = swift_bridgeObjectRetain();
      v109 = sub_1BA67F4CC(v108);
      swift_bridgeObjectRelease();
      v133 = v109;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v133, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v142 = (uint64_t)v133;
      sub_1BAE782EC();
      v128 = (char *)sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
      v110 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v110, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
    }
    sub_1BA4A2E80((uint64_t)v118, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v111 = v131[20];
    v112 = v131[21];
    v113 = (uint64_t)v117;
    v116(v117, (uint64_t)v129, v99);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD6B4B4(v111, v112, 14, 0, 0, v113, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v113, type metadata accessor for FormatVersionRequirement);
  }
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))sub_1BAE78274);
}

unint64_t sub_1BA7635BC(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BA7635EC(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BA76361C()
{
  unint64_t result;

  result = qword_1ED3B5150;
  if (!qword_1ED3B5150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextContent, &type metadata for FormatTextContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B5150);
  }
  return result;
}

unint64_t sub_1BA763660()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BEA8;
  if (!qword_1ED39BEA8)
  {
    sub_1BA4AD288(255, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8333E4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BEA8);
  }
  return result;
}

unint64_t sub_1BA7636D8()
{
  unint64_t result;

  result = qword_1ED3AFE98;
  if (!qword_1ED3AFE98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextSize, &type metadata for FormatTextSize);
    atomic_store(result, (unint64_t *)&qword_1ED3AFE98);
  }
  return result;
}

unint64_t sub_1BA76371C()
{
  unint64_t result;

  result = qword_1ED39BA70;
  if (!qword_1ED39BA70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDimensionSizingValue, &type metadata for FormatDimensionSizingValue);
    atomic_store(result, (unint64_t *)&qword_1ED39BA70);
  }
  return result;
}

unint64_t sub_1BA763760()
{
  unint64_t result;

  result = qword_1ED39B500;
  if (!qword_1ED39B500)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibility, &type metadata for FormatAccessibility);
    atomic_store(result, (unint64_t *)&qword_1ED39B500);
  }
  return result;
}

uint64_t FormatItemNodeStyle.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA7643E8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112), (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
  sub_1BA7644AC(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_BYTE *)(v0 + 176));
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  sub_1BA7644C0(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA763860(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 == 1)
    return sub_1BAC67EF0(result);
  if (!a8)
    return sub_1BA7638A4(result, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_1BA5E800C, sub_1BA6E6CD8);
  return result;
}

uint64_t sub_1BA7638A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t (*a9)(uint64_t))
{
  uint64_t result;

  if ((a7 & 0xF000000000000007) != 0xD000000000000007)
  {
    a8();
    return a9(a7);
  }
  return result;
}

uint64_t FormatItemNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t *v83;
  _BYTE v84[40];
  _BYTE v85[64];
  _BYTE v86[24];
  char *v87;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v74 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v75 = (char *)&v73 - v8;
  MEMORY[0x1E0C80A78](v9);
  v76 = (char *)&v73 - v10;
  MEMORY[0x1E0C80A78](v11);
  v77 = (char *)&v73 - v12;
  MEMORY[0x1E0C80A78](v13);
  v78 = (char *)&v73 - v14;
  MEMORY[0x1E0C80A78](v15);
  v79 = (char *)&v73 - v16;
  MEMORY[0x1E0C80A78](v17);
  v80 = (char *)&v73 - v18;
  MEMORY[0x1E0C80A78](v19);
  v81 = (char *)&v73 - v20;
  MEMORY[0x1E0C80A78](v21);
  v82 = (char *)&v73 - v22;
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v73 - v24;
  sub_1BAE9F09C(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1[3];
  v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  v31 = sub_1BAE9F18C();
  v32 = sub_1BA4A2870(&qword_1ED3D0DE0, (uint64_t (*)(uint64_t))sub_1BAE9F18C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v33, v30, v4, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v29, (uint64_t)v28, v32, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v34 = v2[2];
  v35 = v2[3];
  v83 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v25, v38, v37);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v40 = v34;
  v41 = (uint64_t)v28;
  v42 = v87;
  sub_1BAD265E8(v40, v35, 0, 0, 0, (uint64_t)v25, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4F4D4, (uint64_t (*)(uint64_t))sub_1BAE9F114, &qword_1ED3AE930);
  if (v42)
  {
    sub_1BA4A2E80((uint64_t)v25, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))sub_1BAE9F09C);
  }
  sub_1BA4A2E80((uint64_t)v25, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v87 = v28;
  v43 = v83;
  v44 = v83[4];
  v45 = v83[5];
  v46 = (uint64_t)v82;
  v39(v82, v38, v37);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v47 = v44;
  v41 = (uint64_t)v87;
  sub_1BAD1C3F4(v47, v45, 1, 0, 0, v46, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  sub_1BA6A09F0((uint64_t)(v43 + 6), (uint64_t)v86, &qword_1ED3A7208, (uint64_t)&type metadata for FormatPreviewParameters);
  v48 = (uint64_t)v81;
  v39(v81, v38, v37);
  swift_storeEnumTagMultiPayload();
  sub_1BA764394((uint64_t)v86, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  sub_1BAD5E82C((uint64_t)v86, 2, 0, 0, v48, (uint64_t)sub_1BA90CF04, 0);
  v49 = (char *)v38;
  sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
  sub_1BA764394((uint64_t)v86, (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
  sub_1BA6A09F0((uint64_t)(v43 + 15), (uint64_t)v85, &qword_1ED39FE68, (uint64_t)&type metadata for FormatCellSelection);
  v50 = (uint64_t)v80;
  v39(v80, (uint64_t)v49, v37);
  swift_storeEnumTagMultiPayload();
  sub_1BA76445C((uint64_t)v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA764498);
  sub_1BAD5EC34((uint64_t)v85, 3, 0, 0, v50, (uint64_t)sub_1BA90CF04, 0);
  v82 = 0;
  sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
  sub_1BA76445C((uint64_t)v85, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7644AC);
  v51 = (uint64_t)v43 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  if (qword_1ED3C6D78 != -1)
    swift_once();
  v52 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C68);
  v53 = (uint64_t)v79;
  v39(v79, v52, v37);
  swift_storeEnumTagMultiPayload();
  v54 = v82;
  sub_1BAD5EF1C(v51, 4, 0, 0, v53, (uint64_t)sub_1BA90CF04, 0);
  if (v54)
    goto LABEL_11;
  v82 = 0;
  sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
  v55 = *((unsigned __int8 *)v43 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
  if (qword_1ED3C6D60 != -1)
    swift_once();
  v56 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C38);
  v53 = (uint64_t)v78;
  v39(v78, v56, v37);
  swift_storeEnumTagMultiPayload();
  v57 = v82;
  sub_1BAD5F224(v55, 5, 0, 0, v53, (uint64_t)sub_1BA90CF04, 0);
  if (v57)
  {
LABEL_11:
    v58 = v53;
LABEL_12:
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))sub_1BAE9F09C);
  }
  v82 = 0;
  v81 = v49;
  sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
  v60 = *((unsigned __int8 *)v43 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  if (qword_1ED3C6D20 != -1)
    swift_once();
  v61 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476B78);
  v62 = (uint64_t)v77;
  v39(v77, v61, v37);
  swift_storeEnumTagMultiPayload();
  v63 = v82;
  sub_1BAD5F224(v60, 6, 0, 0, v62, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
  if (!v63)
  {
    v64 = v39;
    v66 = *(uint64_t *)((char *)v43 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    v65 = *(uint64_t *)((char *)v43 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
    sub_1BA77567C(v66);
    if (qword_1ED3C6D00 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476B48);
    v68 = (uint64_t)v76;
    v64(v76, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5F3EC(v66, v65, 7, 0, 0, v68, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    sub_1BA7644C0(v66);
    swift_beginAccess();
    v69 = (uint64_t)v75;
    v64(v75, (uint64_t)v81, v37);
    swift_storeEnumTagMultiPayload();
    v70 = swift_bridgeObjectRetain();
    sub_1BAD2A7E0(v70, 8, 0, 0);
    sub_1BA4A2E80(v69, type metadata accessor for FormatVersionRequirement);
    v41 = (uint64_t)v87;
    swift_bridgeObjectRelease();
    sub_1BA6A09F0((uint64_t)v43 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters, (uint64_t)v84, &qword_1ED3AD6C0, (uint64_t)&type metadata for FormatFocusParameters);
    if (qword_1ED3C4170 != -1)
      swift_once();
    v71 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476998);
    v72 = (uint64_t)v74;
    v64(v74, v71, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD5F60C((uint64_t)v84, 9, 0, 0, v72, (uint64_t)sub_1BA90CF04, 0);
    v58 = v72;
    goto LABEL_12;
  }
  return sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))sub_1BAE9F09C);
}

uint64_t sub_1BA764394(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, _QWORD))
{
  sub_1BA7643E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64), a2, a3);
  return a1;
}

uint64_t sub_1BA7643E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, void (*a10)(void), uint64_t (*a11)(uint64_t, uint64_t, _QWORD))
{
  uint64_t result;

  if ((a9 & 0xFE) != 0x7E)
  {
    a10();
    return a11(a7, a8, a9);
  }
  return result;
}

uint64_t sub_1BA76445C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  return a1;
}

uint64_t sub_1BA764498(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 != -1)
    return sub_1BA7756B8(result, a2, a3, a4, a5, a6, a7, a8);
  return result;
}

uint64_t sub_1BA7644AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 != -1)
    return sub_1BA763860(result, a2, a3, a4, a5, a6, a7, a8);
  return result;
}

unint64_t sub_1BA7644C0(unint64_t result)
{
  if (result != 3)
    return sub_1BAC687B4(result);
  return result;
}

void sub_1BA7644D0()
{
  __asm { BR              X20 }
}

void sub_1BA76452C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  if (!a6 && (a2 & 0xF000000000000007) != 0xF000000000000007)
  {
    *(_QWORD *)(v6 - 24) = a2;
    sub_1BA645F4C();
  }
}

void sub_1BA764584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;

  if (a7 >> 6 > 1)
  {
    if ((a7 & 0xF) == 0 && (a5 & 0xF000000000000007) != 0xF000000000000007)
    {
      *(_QWORD *)(v7 - 24) = a5;
      JUMPOUT(0x1BA764544);
    }
    JUMPOUT(0x1BA764570);
  }
  sub_1BA76452C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1BA7645B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA6EDCD4(&qword_1ED3C6D70, (uint64_t)qword_1ED476C50, a1);
}

uint64_t FormatGroup.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  int v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  _QWORD *v114;
  __int128 v115;
  char v116;
  uint64_t v117;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v88 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v91 = (uint64_t)&v87 - v6;
  MEMORY[0x1E0C80A78](v7);
  v93 = (char *)&v87 - v8;
  MEMORY[0x1E0C80A78](v9);
  v95 = (char *)&v87 - v10;
  MEMORY[0x1E0C80A78](v11);
  v96 = (char *)&v87 - v12;
  MEMORY[0x1E0C80A78](v13);
  v99 = (char *)&v87 - v14;
  MEMORY[0x1E0C80A78](v15);
  v101 = (char *)&v87 - v16;
  MEMORY[0x1E0C80A78](v17);
  v102 = (uint64_t)&v87 - v18;
  MEMORY[0x1E0C80A78](v19);
  v106 = (char *)&v87 - v20;
  MEMORY[0x1E0C80A78](v21);
  v108 = (char *)&v87 - v22;
  MEMORY[0x1E0C80A78](v23);
  v111 = (char *)&v87 - v24;
  MEMORY[0x1E0C80A78](v25);
  v110 = (char *)&v87 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v87 - v28;
  sub_1BAE94F1C(0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v87 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(v1 + 8);
  v112 = *(_QWORD *)v1;
  v109 = *(unsigned __int8 *)(v1 + 48);
  v107 = *(_QWORD *)(v1 + 56);
  v34 = *(_QWORD *)(v1 + 72);
  v104 = *(_QWORD *)(v1 + 64);
  v105 = v34;
  v103 = *(_QWORD *)(v1 + 80);
  v100 = *(_QWORD *)(v1 + 88);
  v35 = *(_QWORD *)(v1 + 96);
  v97 = *(_QWORD *)(v1 + 104);
  v98 = v35;
  v94 = *(_QWORD *)(v1 + 112);
  v92 = *(_QWORD *)(v1 + 120);
  v89 = *(unsigned __int8 *)(v1 + 128);
  v90 = *(_QWORD *)(v1 + 136);
  v36 = a1[3];
  v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v36);
  v38 = sub_1BAE94DAC();
  v39 = sub_1BA4A2870(&qword_1ED3D14A0, (uint64_t (*)(uint64_t))sub_1BAE94DAC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGroup, v40, v36, (uint64_t)&type metadata for FormatGroup, v38, (uint64_t)&type metadata for FormatVersions.JazzkonC, v37, (uint64_t)v32, v39, (uint64_t)&off_1E734BD80);
  v41 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v41 != -1)
    swift_once();
  v42 = sub_1BB86EB84();
  v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476C20);
  v44 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
  v44(v29, v43, v42);
  v45 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v46 = v113;
  sub_1BAD24340(v112, v33, 0, 0, 0, (uint64_t)v29, (uint64_t)sub_1BA90CF04, 0);
  if (v46)
  {
    sub_1BA4A2E80((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v49 = (uint64_t)v32;
    return sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BAE94F1C);
  }
  sub_1BA4A2E80((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v47 = (uint64_t)v110;
  v44(v110, v43, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
  v44((char *)v47, v43, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
  v48 = (uint64_t)v111;
  v44(v111, v43, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BAD2FDA0(v109);
  v51 = v45;
  v52 = (void (*)(uint64_t, uint64_t, uint64_t))v44;
  sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
  v53 = (uint64_t)v108;
  v44(v108, v43, v42);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v54 = sub_1BAE57BD4(v53, 4, 0, 0, (uint64_t)sub_1BA90CF04, 0);
  if ((v54 & 1) != 0)
  {
    v87 = v42;
    v110 = (char *)v44;
    v111 = (char *)v43;
    v55 = v51;
    v113 = v32;
    v115 = xmmword_1BB8D2D90;
    v116 = 0;
    v56 = swift_bridgeObjectRetain();
    v57 = sub_1BA766C70(v56);
    swift_bridgeObjectRelease();
    v114 = v57;
    swift_retain();
    sub_1BA766EFC((uint64_t *)&v114);
    swift_release();
    v117 = (uint64_t)v114;
    sub_1BAE94F94();
    sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
    v58 = MEMORY[0x1E0DEB418];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9610, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA67F470((unint64_t *)&qword_1ED39BF68, (unint64_t *)&qword_1ED3B9610, v58, MEMORY[0x1E0DEB420]);
    sub_1BB874464();
    swift_release();
    v32 = v113;
    v51 = v55;
    v52 = (void (*)(uint64_t, uint64_t, uint64_t))v110;
    v43 = (uint64_t)v111;
    v42 = v87;
    v53 = (uint64_t)v108;
  }
  sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v60 = v104;
  v59 = v105;
  sub_1BA6BAD2C(v104, v105);
  v61 = (uint64_t)v106;
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v62 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476C08);
  v52(v61, v62, v42);
  swift_storeEnumTagMultiPayload();
  v112 = v51;
  sub_1BAD6D870(v60, v59, 5, 0, 0, v61, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80(v61, type metadata accessor for FormatVersionRequirement);
  sub_1BA79DDC8(v60, v59);
  v63 = v102;
  v52(v102, v43, v42);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  if ((sub_1BAE57BD4(v63, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
  {
    v87 = v42;
    v111 = (char *)v43;
    v115 = xmmword_1BB8D2DA0;
    v116 = 0;
    v117 = v103;
    sub_1BAE94F94();
    sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA653FC0();
    sub_1BB874464();
    v43 = (uint64_t)v111;
    v42 = v87;
  }
  sub_1BA4A2E80(v102, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v64 = (uint64_t)v101;
  v52((uint64_t)v101, v43, v42);
  swift_storeEnumTagMultiPayload();
  v65 = swift_bridgeObjectRetain();
  sub_1BAD2FF50(v65, 7, 0, 0);
  sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v66 = qword_1ED3C6D30;
  v67 = v98;
  swift_bridgeObjectRetain();
  if (v66 != -1)
    swift_once();
  v68 = __swift_project_value_buffer(v42, (uint64_t)qword_1ED476B90);
  v69 = (uint64_t)v99;
  v52((uint64_t)v99, v68, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BAD30080(v67, 8, 0, 0);
  sub_1BA4A2E80(v69, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v70 = v43;
  v71 = (uint64_t)v96;
  v72 = v42;
  v73 = v70;
  v87 = v72;
  ((void (*)(char *))v52)(v96);
  swift_storeEnumTagMultiPayload();
  v74 = *(_QWORD *)(v97 + 16);
  swift_bridgeObjectRetain();
  if (v74)
  {
    if ((sub_1BAE57BD4(v71, 9, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v110 = (char *)v52;
      v113 = v32;
      v115 = xmmword_1BB8D2DE0;
      v116 = 0;
      v75 = swift_bridgeObjectRetain();
      v76 = sub_1BA67F4CC(v75);
      swift_bridgeObjectRelease();
      v114 = v76;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v114, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v117 = (uint64_t)v114;
      sub_1BAE94F94();
      sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
      v77 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v77, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
      v32 = v113;
      v52 = (void (*)(uint64_t, uint64_t, uint64_t))v110;
      v86 = (uint64_t)v95;
      v71 = (uint64_t)v96;
      goto LABEL_20;
    }
    v71 = (uint64_t)v96;
  }
  v86 = (uint64_t)v95;
LABEL_20:
  sub_1BA4A2E80(v71, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v78 = v87;
  v52(v86, v73, v87);
  swift_storeEnumTagMultiPayload();
  v79 = swift_bridgeObjectRetain();
  sub_1BAD301B0(v79, 10, 0, 0);
  sub_1BA4A2E80(v86, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v80 = (uint64_t)v93;
  v52((uint64_t)v93, v73, v78);
  swift_storeEnumTagMultiPayload();
  v81 = swift_bridgeObjectRetain();
  sub_1BAD302E0(v81, 11, 0, 0);
  sub_1BA4A2E80(v80, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v52(v91, v73, v87);
  swift_storeEnumTagMultiPayload();
  if (v89 != 192 && (sub_1BAE57BD4(v91, 12, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
  {
    v115 = xmmword_1BB8D2E10;
    v116 = 0;
    LOBYTE(v117) = v89;
    sub_1BAE94F94();
    sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
    sub_1BA785D18();
    sub_1BB874464();
  }
  sub_1BA4A2E80(v91, type metadata accessor for FormatVersionRequirement);
  v82 = qword_1ED3C6D78;
  swift_bridgeObjectRetain();
  if (v82 != -1)
    swift_once();
  v83 = v87;
  v84 = __swift_project_value_buffer(v87, (uint64_t)qword_1ED476C68);
  v85 = (uint64_t)v88;
  v52((uint64_t)v88, v84, v83);
  swift_storeEnumTagMultiPayload();
  sub_1BAD30410(v90, 13, 0, 0);
  sub_1BA4A2E80(v85, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v49 = (uint64_t)v32;
  return sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BAE94F1C);
}

uint64_t FormatImageNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  char *v81;
  uint64_t *v82;
  unint64_t v83;
  uint64_t *v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t *v90;
  char v91;
  uint64_t *v92;
  uint64_t v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t *v121;
  void (*v122)(char *, uint64_t, uint64_t);
  _QWORD *v123;
  __int128 v124;
  char v125;
  __int128 v126;
  char v127;
  __int128 v128;
  char v129;
  __int128 v130;
  char v131;
  __int128 v132;
  char v133;
  uint64_t v134;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v108 = (char *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v109 = (char *)&v106 - v8;
  MEMORY[0x1E0C80A78](v9);
  v110 = (char *)&v106 - v10;
  MEMORY[0x1E0C80A78](v11);
  v111 = (char *)&v106 - v12;
  MEMORY[0x1E0C80A78](v13);
  v112 = (char *)&v106 - v14;
  MEMORY[0x1E0C80A78](v15);
  v113 = (char *)&v106 - v16;
  MEMORY[0x1E0C80A78](v17);
  v114 = (char *)&v106 - v18;
  MEMORY[0x1E0C80A78](v19);
  v115 = (char *)&v106 - v20;
  MEMORY[0x1E0C80A78](v21);
  v116 = (char *)&v106 - v22;
  MEMORY[0x1E0C80A78](v23);
  v117 = (char *)&v106 - v24;
  MEMORY[0x1E0C80A78](v25);
  v118 = (char *)&v106 - v26;
  MEMORY[0x1E0C80A78](v27);
  v119 = (char *)&v106 - v28;
  MEMORY[0x1E0C80A78](v29);
  v120 = (char *)&v106 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v106 - v32;
  sub_1BAE99FA8(0);
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v106 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1[3];
  v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v38);
  v39 = sub_1BAE9A098();
  v40 = sub_1BA4A2870(&qword_1ED3D15F0, (uint64_t (*)(uint64_t))sub_1BAE9A098, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v41, v38, v4, v39, (uint64_t)&type metadata for FormatVersions.JazzkonC, v37, (uint64_t)v36, v40, (uint64_t)&off_1E734BD80);
  swift_beginAccess();
  v42 = v2[2];
  v43 = v2[3];
  v121 = v2;
  v44 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v44 != -1)
    swift_once();
  v45 = sub_1BB86EB84();
  v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1ED476C20);
  v47 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
  v47(v33, v46, v45);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v48 = v42;
  v49 = v36;
  v50 = v122;
  sub_1BAD265E8(v48, v43, 0, 0, 0, (uint64_t)v33, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE55424, (uint64_t (*)(uint64_t))sub_1BAE9A020, &qword_1ED3AF350);
  if (v50)
  {
    sub_1BA4A2E80((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v61 = (uint64_t)v36;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v51 = v121;
    v52 = v121[4];
    v53 = (uint64_t)v120;
    v47(v120, v46, v45);
    swift_storeEnumTagMultiPayload();
    sub_1BA71CA6C(v52);
    sub_1BAD213E4(v52, 1, 0, 0, v53, (uint64_t)sub_1BA90CF04, 0);
    v107 = v45;
    v106 = v46;
    v122 = v47;
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    sub_1BA719718(v52);
    v54 = v51[5];
    v55 = qword_1ED3C6D50;
    swift_retain();
    if (v55 != -1)
      swift_once();
    v56 = v107;
    v57 = __swift_project_value_buffer(v107, (uint64_t)qword_1ED476BF0);
    v58 = (uint64_t)v119;
    v59 = v122;
    v122(v119, v57, v56);
    swift_storeEnumTagMultiPayload();
    sub_1BAD68A28(v54, 2, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    v60 = v106;
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v63 = v121;
    swift_beginAccess();
    v64 = (uint64_t)v118;
    v59(v118, v60, v56);
    swift_storeEnumTagMultiPayload();
    v65 = swift_bridgeObjectRetain();
    sub_1BAD2D014(v65, 3, 0, 0);
    sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v66 = (uint64_t)v117;
    v59(v117, v60, v56);
    swift_storeEnumTagMultiPayload();
    v67 = swift_retain();
    sub_1BAD68C38(v67, 4, 0, 0, v66, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v66, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v68 = v63[8];
    v69 = qword_1ED3C6D58;
    swift_retain();
    if (v69 != -1)
      swift_once();
    v70 = __swift_project_value_buffer(v56, (uint64_t)qword_1ED476C08);
    v71 = (uint64_t)v116;
    v59(v116, v70, v56);
    swift_storeEnumTagMultiPayload();
    sub_1BAD68E50(v68, 5, 0, 0, v71, (uint64_t)sub_1BA90CF04, 0);
    v120 = (char *)v70;
    sub_1BA4A2E80(v71, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v72 = v56;
    v73 = v121;
    v74 = v121[9];
    v75 = (uint64_t)v115;
    v59(v115, v60, v72);
    swift_storeEnumTagMultiPayload();
    swift_retain();
    sub_1BAD21540(v74, 6, 0, 0, v75, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v75, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    v76 = v73[10];
    v77 = (uint64_t)v114;
    v78 = v107;
    v59(v114, v60, v107);
    swift_storeEnumTagMultiPayload();
    if (v76)
    {
      v79 = sub_1BAE55424(v77, 7, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      v80 = (uint64_t)v113;
      v81 = v120;
      if ((v79 & 1) != 0)
      {
        v132 = xmmword_1BB8D2DB0;
        v133 = 0;
        *(_QWORD *)&v130 = v76;
        sub_1BAE9A020();
        sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
        sub_1BB874464();
      }
    }
    else
    {
      v80 = (uint64_t)v113;
      v81 = v120;
    }
    sub_1BA4A2E80((uint64_t)v114, type metadata accessor for FormatVersionRequirement);
    v82 = v121;
    swift_beginAccess();
    v83 = v82[11];
    v59((char *)v80, (uint64_t)v81, v78);
    swift_storeEnumTagMultiPayload();
    if (v83 != 0x8000000000000000)
    {
      sub_1BA67D3F4(v83);
      if ((sub_1BAE55424(v80, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v130 = xmmword_1BB8D2DD0;
        v131 = 0;
        *(_QWORD *)&v128 = v83;
        sub_1BAE9A020();
        sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
        sub_1BA84B088();
        sub_1BB874464();
        v59 = v122;
        v80 = (uint64_t)v113;
      }
      else
      {
        v59 = v122;
      }
    }
    sub_1BA4A2E80(v80, type metadata accessor for FormatVersionRequirement);
    sub_1BA6EEDB4(v83);
    v84 = v121;
    swift_beginAccess();
    v85 = *((_BYTE *)v84 + 96);
    if (qword_1ED3C6D70 != -1)
      swift_once();
    v86 = v107;
    v87 = __swift_project_value_buffer(v107, (uint64_t)qword_1ED476C50);
    v88 = (uint64_t)v112;
    v59(v112, v87, v86);
    swift_storeEnumTagMultiPayload();
    if ((v85 & 1) == 0)
    {
      v89 = sub_1BAE55424(v88, 9, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if ((v89 & 1) != 0)
      {
        v128 = xmmword_1BB8D2DE0;
        v129 = 0;
        LOBYTE(v126) = 0;
        sub_1BAE9A020();
        sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
        sub_1BB874464();
      }
      v59 = v122;
    }
    sub_1BA4A2E80((uint64_t)v112, type metadata accessor for FormatVersionRequirement);
    v90 = v121;
    swift_beginAccess();
    LOBYTE(v90) = *((_BYTE *)v90 + 97);
    v59(v111, v87, v107);
    swift_storeEnumTagMultiPayload();
    if ((v90 & 1) != 0)
    {
      v91 = sub_1BAE55424((uint64_t)v111, 10, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if ((v91 & 1) != 0)
      {
        v126 = xmmword_1BB8D2DF0;
        v127 = 0;
        LOBYTE(v124) = 1;
        sub_1BAE9A020();
        sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
        sub_1BB874464();
      }
      v59 = v122;
    }
    sub_1BA4A2E80((uint64_t)v111, type metadata accessor for FormatVersionRequirement);
    v92 = v121;
    v93 = v121[13];
    v94 = *((_BYTE *)v121 + 112);
    v95 = (uint64_t)v110;
    v96 = v107;
    v59(v110, v106, v107);
    swift_storeEnumTagMultiPayload();
    sub_1BAD69068(v93, v94, 11, 0, 0, v95, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v95, type metadata accessor for FormatVersionRequirement);
    v97 = (uint64_t)v49;
    swift_beginAccess();
    v98 = v92[15];
    v99 = qword_1ED3C6D60;
    swift_bridgeObjectRetain();
    if (v99 != -1)
      swift_once();
    v100 = __swift_project_value_buffer(v96, (uint64_t)qword_1ED476C38);
    v122(v109, v100, v96);
    swift_storeEnumTagMultiPayload();
    if (*(_QWORD *)(v98 + 16) && (sub_1BAE55424((uint64_t)v109, 12, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v124 = xmmword_1BB8D2E10;
      v125 = 0;
      v101 = swift_bridgeObjectRetain();
      v102 = sub_1BA67F4CC(v101);
      swift_bridgeObjectRelease();
      v123 = v102;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v123, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v134 = (uint64_t)v123;
      sub_1BAE9A020();
      v121 = v103;
      v119 = (char *)sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
      v104 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v104, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
    }
    sub_1BA4A2E80((uint64_t)v109, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v105 = (uint64_t)v108;
    v122(v108, (uint64_t)v120, v96);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v105, type metadata accessor for FormatVersionRequirement);
    v61 = v97;
  }
  return sub_1BA4A2E80(v61, (uint64_t (*)(_QWORD))sub_1BAE99FA8);
}

uint64_t sub_1BA766644(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;

  v23 = result;
  if (a3 != a2)
  {
    v25 = *a4;
    v4 = *a4 + 16 * a3;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * a3);
      v8 = *v6;
      v7 = v6[1];
      v9 = v23;
      v24 = v4;
      v26 = a3;
      while (2)
      {
        v11 = *(_QWORD *)(v4 - 16);
        v10 = *(_QWORD *)(v4 - 8);
        v12 = (_OWORD *)(v4 - 16);
        v13 = 0xE700000000000000;
        v14 = 0x656C6369747261;
        switch(v7)
        {
          case 0uLL:
            goto LABEL_36;
          case 1uLL:
            v13 = 0xE500000000000000;
            v15 = 1970500457;
            goto LABEL_18;
          case 2uLL:
            v13 = 0xE800000000000000;
            v14 = 0x6465626D45626577;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 3uLL:
            v13 = 0xEA00000000006B63;
            v14 = 0x6172546F69647561;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 4uLL:
            v13 = 0xE300000000000000;
            v14 = 6775156;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 5uLL:
            v13 = 0xE500000000000000;
            v15 = 1919902579;
LABEL_18:
            v14 = v15 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 6uLL:
            v13 = 0xE800000000000000;
            v14 = 0x676E69646E617473;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 7uLL:
            v14 = 0x74656B63617262;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 8uLL:
            v13 = 0xE800000000000000;
            v14 = 0x65726F6353786F62;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 9uLL:
            v14 = 0x726F6353656E696CLL;
            v13 = 0xE900000000000065;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 0xAuLL:
            v14 = 0x65527972756A6E69;
            v13 = 0xEC00000074726F70;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 0xBuLL:
            v13 = 0xE900000000000072;
            v14 = 0x6579616C5079656BLL;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 0xCuLL:
            v13 = 0xE600000000000000;
            v14 = 0x656C7A7A7570;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          case 0xDuLL:
            v14 = 0x7954656C7A7A7570;
            v13 = 0xEA00000000006570;
            goto LABEL_36;
          case 0xEuLL:
            v14 = 0x7453656C7A7A7570;
            v13 = 0xEF63697473697461;
            if (v10 > 0xE)
              goto LABEL_19;
            goto LABEL_36;
          default:
            v14 = v8;
            v13 = v7;
            if (v10 <= 0xE)
            {
LABEL_36:
              v16 = 0xE700000000000000;
              v17 = 0x656C6369747261;
              switch(v10)
              {
                case 0uLL:
                  goto LABEL_64;
                case 1uLL:
                  v16 = 0xE500000000000000;
                  v18 = 1970500457;
                  goto LABEL_47;
                case 2uLL:
                  v16 = 0xE800000000000000;
                  if (v14 != 0x6465626D45626577)
                    goto LABEL_66;
                  goto LABEL_65;
                case 3uLL:
                  v16 = 0xEA00000000006B63;
                  if (v14 != 0x6172546F69647561)
                    goto LABEL_66;
                  goto LABEL_65;
                case 4uLL:
                  v16 = 0xE300000000000000;
                  if (v14 != 6775156)
                    goto LABEL_66;
                  goto LABEL_65;
                case 5uLL:
                  v16 = 0xE500000000000000;
                  v18 = 1919902579;
LABEL_47:
                  if (v14 != (v18 & 0xFFFF0000FFFFFFFFLL | 0x6500000000))
                    goto LABEL_66;
                  goto LABEL_65;
                case 6uLL:
                  v16 = 0xE800000000000000;
                  if (v14 != 0x676E69646E617473)
                    goto LABEL_66;
                  goto LABEL_65;
                case 7uLL:
                  if (v14 != 0x74656B63617262)
                    goto LABEL_66;
                  goto LABEL_65;
                case 8uLL:
                  v16 = 0xE800000000000000;
                  if (v14 != 0x65726F6353786F62)
                    goto LABEL_66;
                  goto LABEL_65;
                case 9uLL:
                  v16 = 0xE900000000000065;
                  if (v14 != 0x726F6353656E696CLL)
                    goto LABEL_66;
                  goto LABEL_65;
                case 0xAuLL:
                  v16 = 0xEC00000074726F70;
                  if (v14 != 0x65527972756A6E69)
                    goto LABEL_66;
                  goto LABEL_65;
                case 0xBuLL:
                  v16 = 0xE900000000000072;
                  if (v14 != 0x6579616C5079656BLL)
                    goto LABEL_66;
                  goto LABEL_65;
                case 0xCuLL:
                  v16 = 0xE600000000000000;
                  if (v14 != 0x656C7A7A7570)
                    goto LABEL_66;
                  goto LABEL_65;
                case 0xDuLL:
                  v17 = 0x7954656C7A7A7570;
                  v16 = 0xEA00000000006570;
LABEL_64:
                  if (v14 == v17)
                    goto LABEL_65;
                  goto LABEL_66;
                case 0xEuLL:
                  v16 = 0xEF63697473697461;
                  if (v14 != 0x7453656C7A7A7570)
                    goto LABEL_66;
                  goto LABEL_65;
                default:
                  break;
              }
            }
LABEL_19:
            v16 = *(_QWORD *)(v4 - 8);
            if (v14 != v11)
              goto LABEL_66;
LABEL_65:
            if (v13 != v16)
            {
LABEL_66:
              v27 = (uint64_t *)v4;
              v19 = v9;
              v20 = sub_1BB874398();
              sub_1BA682148(v11, v10);
              sub_1BA682148(v8, v7);
              sub_1BA682148(v8, v7);
              sub_1BA682148(v11, v10);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1BA766C18(v11, v10);
              result = sub_1BA766C18(v8, v7);
              v21 = v19;
              v5 = v26;
              if ((v20 & 1) == 0)
                goto LABEL_5;
              if (!v25)
              {
                __break(1u);
                return result;
              }
              v8 = *v27;
              v7 = v27[1];
              *(_OWORD *)v27 = *v12;
              *(v27 - 1) = v7;
              *(v27 - 2) = v8;
              v4 = (uint64_t)(v27 - 2);
              v9 = v21 + 1;
              if (v26 == v9)
                goto LABEL_5;
              continue;
            }
            sub_1BA682148(*(_QWORD *)(v4 - 16), *(_QWORD *)(v4 - 8));
            sub_1BA682148(v8, v7);
            sub_1BA682148(v8, v7);
            sub_1BA682148(v11, v10);
            swift_bridgeObjectRelease_n();
            sub_1BA766C18(v11, v10);
            result = sub_1BA766C18(v8, v7);
            v5 = v26;
LABEL_5:
            a3 = v5 + 1;
            v4 = v24 + 16;
            if (a3 == a2)
              return result;
            break;
        }
        break;
      }
    }
  }
  return result;
}

uint64_t sub_1BA766C00()
{
  unsigned __int8 *v0;

  return sub_1BAE0F0D8(*v0);
}

uint64_t sub_1BA766C08()
{
  unsigned __int8 *v0;

  return sub_1BADB219C(*v0);
}

uint64_t sub_1BA766C10()
{
  unsigned __int8 *v0;

  return sub_1BADA57D4(*v0);
}

uint64_t sub_1BA766C18(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 0xF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1BA766C2C()
{
  unint64_t result;

  result = qword_1ED3B7110;
  if (!qword_1ED3B7110)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAsyncImageContent, &type metadata for FormatAsyncImageContent);
    atomic_store(result, (unint64_t *)&qword_1ED3B7110);
  }
  return result;
}

_QWORD *sub_1BA766C70(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9FF0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_1BA766D68(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BA6EBD18();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1BA766D68(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1BA766EFC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA766F64(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BA7670E8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BA766F64(uint64_t a1)
{
  return sub_1BA766F78(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BA766F78(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9FF0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA7670E8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_1BA85E7AC((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_1BACAB464((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BB872E74();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BACAA368(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_1BACAA368((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_1BA85E7AC((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t FeedKind.contextMenuItemOptions.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void *))((char *)sub_1BA767794 + 4 * byte_1BB88D448[*v0]))(&unk_1E724D680);
}

uint64_t sub_1BA767794()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1BA7677A0()
{
  return sub_1BA862B80((uint64_t)&unk_1E724D6A8);
}

uint64_t sub_1BA7677AC()
{
  return sub_1BA862B80((uint64_t)&unk_1E724D6D0);
}

uint64_t sub_1BA7677B8()
{
  return sub_1BA862B80((uint64_t)&unk_1E724D6F8);
}

void sub_1BA7677C4(uint64_t a1)
{
  sub_1BA4A3FB4(a1, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
}

uint64_t sub_1BA7677D8(uint64_t a1, char a2)
{
  return sub_1BA6F01D0(a1, a2, (void (*)(_QWORD))sub_1BA6F7A14);
}

_QWORD *sub_1BA7677E4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *result;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[2];
  uint64_t v66;
  uint64_t v67;

  v62 = a4;
  v9 = type metadata accessor for FormatOption();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BA767D40(*(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks));
  if (!v5)
  {
    v60 = v10;
    v59 = v9;
    v61 = v4;
    v57 = a1;
    if (result)
    {
      v54 = a3;
      v56 = 0;
      v14 = v61;
      v15 = result;
      swift_beginAccess();
      v17 = v14[2];
      v16 = v14[3];
      swift_bridgeObjectRetain();
      sub_1BA709F80(v17, v16);
      swift_bridgeObjectRelease();
      v19 = v14[2];
      v18 = v14[3];
      swift_bridgeObjectRetain();
      v55 = sub_1BA70A468(v19, v18);
      swift_release();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v58 = v15;
      v20 = v15[5];
      v21 = *(_QWORD *)(v20 + 16);
      v22 = MEMORY[0x1E0DEE9D8];
      if (v21)
      {
        v64 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1BA76B828(0, v21, 0);
        v22 = v64;
        v23 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
        v53 = v20;
        v24 = v20 + v23;
        v67 = *(_QWORD *)(v60 + 72);
        do
        {
          sub_1BA4C2DD8(v24, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v25 = swift_allocBox();
          sub_1BA5193C4((uint64_t)v12, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v64 = v22;
          v28 = *(_QWORD *)(v22 + 16);
          v27 = *(_QWORD *)(v22 + 24);
          if (v28 >= v27 >> 1)
          {
            sub_1BA76B828(v27 > 1, v28 + 1, 1);
            v22 = v64;
          }
          *(_QWORD *)(v22 + 16) = v28 + 1;
          *(_QWORD *)(v22 + 8 * v28 + 32) = v25 | 0xB000000000000004;
          v24 += v67;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
        v14 = v61;
      }
      v29 = v60;
      swift_beginAccess();
      v30 = v14[7];
      v31 = *(_QWORD *)(v30 + 16);
      v32 = MEMORY[0x1E0DEE9D8];
      if (v31)
      {
        v63 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1BA76B828(0, v31, 0);
        v32 = v63;
        v33 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
        v60 = v30;
        v34 = v30 + v33;
        v67 = *(_QWORD *)(v29 + 72);
        do
        {
          sub_1BA4C2DD8(v34, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v35 = swift_allocBox();
          sub_1BA5193C4((uint64_t)v12, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v63 = v32;
          v38 = *(_QWORD *)(v32 + 16);
          v37 = *(_QWORD *)(v32 + 24);
          if (v38 >= v37 >> 1)
          {
            sub_1BA76B828(v37 > 1, v38 + 1, 1);
            v32 = v63;
          }
          *(_QWORD *)(v32 + 16) = v38 + 1;
          *(_QWORD *)(v32 + 8 * v38 + 32) = v35 | 0x7000000000000000;
          v34 += v67;
          --v31;
        }
        while (v31);
        swift_bridgeObjectRelease();
      }
      v63 = v22;
      sub_1BA7082C0(v32);
      sub_1BA70B0DC(v63);
      swift_release();
      swift_bridgeObjectRelease();
      v39 = v58;
      swift_beginAccess();
      v40 = v39[6];
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v41 = swift_bridgeObjectRetain();
      v42 = sub_1BA6E4124(v41, v40);
      v43 = sub_1BA707E14(v42, 0);
      swift_release();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v44 = v39[4];
      v45 = *(_QWORD *)(v44 + 16);
      v46 = v57;
      if (v45)
      {
        swift_bridgeObjectRetain();
        v47 = 32;
        v48 = v56;
        v49 = v62;
        v50 = v54;
        while (1)
        {
          v51 = *(_OWORD *)(v44 + v47);
          v52 = *(_OWORD *)(v44 + v47 + 16);
          v66 = *(_QWORD *)(v44 + v47 + 32);
          v65[0] = v51;
          v65[1] = v52;
          sub_1BA7086BC((uint64_t)v65);
          v49(v46, v43, v50);
          if (v48)
            break;
          sub_1BA708680((uint64_t)v65);
          v47 += 40;
          if (!--v45)
          {
            swift_release();
            swift_release();
            return (_QWORD *)swift_bridgeObjectRelease();
          }
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return (_QWORD *)sub_1BA708680((uint64_t)v65);
      }
      else
      {
        swift_release();
        return (_QWORD *)swift_release();
      }
    }
  }
  return result;
}

_QWORD *sub_1BA767D40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 16))
  {
    v4 = *(_QWORD *)(v2 + 40);
    v5 = *(_QWORD *)(v2 + 32);
    swift_bridgeObjectRetain();
    v6 = sub_1BA6E35A8(v5, v4);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v8 = 0;
  if ((*(_BYTE *)(v2 + 48) & 1) != 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA50AD30((unint64_t *)&qword_1EF2A9668, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
    swift_allocError();
    v8 = v9;
    v11 = *(_QWORD *)(v2 + 32);
    v10 = *(_QWORD *)(v2 + 40);
    swift_bridgeObjectRetain();
    v12 = swift_bridgeObjectRetain();
    v13 = sub_1BA85C6FC(v12);
    swift_bridgeObjectRelease();
    *v8 = v11;
    v8[1] = v10;
    v8[2] = v13;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v8;
}

void sub_1BA767E9C()
{
  __asm { BR              X6 }
}

void sub_1BA767EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 - 8) = a5 & 0xFFFFFFFFFFFFFFF8;
  sub_1BA7547AC();
}

uint64_t sub_1BA767F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

unint64_t sub_1BA767F68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C0350;
  if (!qword_1ED3C0350)
  {
    sub_1BA4B07F0(255, &qword_1ED3C0348, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C0350);
  }
  return result;
}

void sub_1BA767FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 *v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 *v21;
  int v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43[5];
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  _BYTE v57[136];
  _BYTE v58[144];
  uint64_t v59;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return;
  v6 = a3 + 32;
  swift_bridgeObjectRetain();
  v7 = 0;
  v41 = v6;
  v42 = v4;
  while (1)
  {
    sub_1BA895BCC(v6 + 136 * v7, (uint64_t)v57);
    sub_1BA895BCC((uint64_t)v57, (uint64_t)v58);
    v8 = sub_1BA895C08((uint64_t)v58);
    if (!v8)
      break;
    if (v8 == 1)
    {
      v9 = sub_1BA895E68((uint64_t)v58);
      sub_1BA53BAD8(v9, (uint64_t)&v51);
      if (sub_1BA895ED8((uint64_t)&v51) == 1)
      {
        v59 = *(_QWORD *)sub_1BA895EE4((uint64_t)&v51);
        v10 = *(_OWORD *)(a2 + 48);
        v43[2] = *(_OWORD *)(a2 + 32);
        v43[3] = v10;
        v43[4] = *(_OWORD *)(a2 + 64);
        v44 = *(_QWORD *)(a2 + 80);
        v11 = *(_OWORD *)(a2 + 16);
        v43[0] = *(_OWORD *)a2;
        v43[1] = v11;
        sub_1BA895BCC((uint64_t)v57, (uint64_t)&v45);
        v12 = sub_1BA895E68((uint64_t)&v45);
        sub_1BA895E78(v12);
        sub_1BA7547AC();
        if (v3)
          goto LABEL_37;
        goto LABEL_35;
      }
      v21 = (__int128 *)sub_1BA895EE4((uint64_t)&v51);
      sub_1BA895FE8(v21, (uint64_t)v43);
      v22 = sub_1BA896024((uint64_t)v43);
      v23 = (_QWORD *)sub_1BA896030((uint64_t)v43);
      if (v22 != 1)
      {
        v34 = *v23;
        v35 = *(_QWORD *)(*v23 + 16);
        if (v35)
        {
          sub_1BA895DFC((uint64_t)v57, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          swift_bridgeObjectRetain();
          v36 = 0;
          while (1)
          {
            v59 = *(_QWORD *)(v34 + 8 * v36 + 32);
            v37 = *(_OWORD *)(a2 + 48);
            v47 = *(_OWORD *)(a2 + 32);
            v48 = v37;
            v49 = *(_OWORD *)(a2 + 64);
            v50 = *(_QWORD *)(a2 + 80);
            v38 = *(_OWORD *)(a2 + 16);
            v45 = *(_OWORD *)a2;
            v46 = v38;
            swift_retain();
            sub_1BA7547AC();
            if (v3)
              goto LABEL_36;
            ++v36;
            swift_release();
            if (v35 == v36)
              goto LABEL_32;
          }
        }
        sub_1BA895BCC((uint64_t)v57, (uint64_t)&v45);
        v40 = sub_1BA895E68((uint64_t)&v45);
        sub_1BA895E78(v40);
        goto LABEL_35;
      }
      v24 = v23[14];
      v25 = *(_QWORD *)(v24 + 16);
      if (v25)
      {
        sub_1BA895DFC((uint64_t)v57, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
        swift_bridgeObjectRetain();
        v26 = 0;
        while (1)
        {
          v59 = *(_QWORD *)(v24 + 8 * v26 + 32);
          v27 = *(_OWORD *)(a2 + 48);
          v47 = *(_OWORD *)(a2 + 32);
          v48 = v27;
          v49 = *(_OWORD *)(a2 + 64);
          v50 = *(_QWORD *)(a2 + 80);
          v28 = *(_OWORD *)(a2 + 16);
          v45 = *(_OWORD *)a2;
          v46 = v28;
          swift_retain();
          sub_1BA7547AC();
          if (v3)
            goto LABEL_36;
          ++v26;
          swift_release();
          if (v25 == v26)
            goto LABEL_21;
        }
      }
    }
    else
    {
      sub_1BA895E68((uint64_t)v58);
    }
LABEL_4:
    if (++v7 == v4)
      goto LABEL_38;
  }
  v13 = (__int128 *)sub_1BA895E68((uint64_t)v58);
  sub_1BA896178(v13, (uint64_t)v43);
  sub_1BA895FE8(v43, (uint64_t)&v45);
  v14 = sub_1BA896024((uint64_t)&v45);
  v15 = (_QWORD *)sub_1BA896030((uint64_t)&v45);
  if (v14 == 1)
  {
    v16 = v15[14];
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      sub_1BA895DFC((uint64_t)v57, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      swift_bridgeObjectRetain();
      v18 = 0;
      while (1)
      {
        v59 = *(_QWORD *)(v16 + 8 * v18 + 32);
        v19 = *(_OWORD *)(a2 + 48);
        v53 = *(_OWORD *)(a2 + 32);
        v54 = v19;
        v55 = *(_OWORD *)(a2 + 64);
        v56 = *(_QWORD *)(a2 + 80);
        v20 = *(_OWORD *)(a2 + 16);
        v51 = *(_OWORD *)a2;
        v52 = v20;
        swift_retain();
        sub_1BA7547AC();
        if (v3)
          goto LABEL_36;
        ++v18;
        swift_release();
        if (v17 == v18)
        {
LABEL_21:
          swift_bridgeObjectRelease();
          sub_1BA895DFC((uint64_t)v57, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
          v6 = v41;
          v4 = v42;
          goto LABEL_4;
        }
      }
    }
    goto LABEL_4;
  }
  v29 = *v15;
  v30 = *(_QWORD *)(*v15 + 16);
  if (!v30)
  {
    sub_1BA895BCC((uint64_t)v57, (uint64_t)&v51);
    v39 = (uint64_t *)sub_1BA895E68((uint64_t)&v51);
    sub_1BA896120(v39);
LABEL_35:
    sub_1BA895DFC((uint64_t)v57, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    goto LABEL_4;
  }
  sub_1BA895DFC((uint64_t)v57, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  swift_bridgeObjectRetain();
  v31 = 0;
  while (1)
  {
    v59 = *(_QWORD *)(v29 + 8 * v31 + 32);
    v32 = *(_OWORD *)(a2 + 48);
    v53 = *(_OWORD *)(a2 + 32);
    v54 = v32;
    v55 = *(_OWORD *)(a2 + 64);
    v56 = *(_QWORD *)(a2 + 80);
    v33 = *(_OWORD *)(a2 + 16);
    v51 = *(_OWORD *)a2;
    v52 = v33;
    swift_retain();
    sub_1BA7547AC();
    if (v3)
      break;
    ++v31;
    swift_release();
    if (v30 == v31)
    {
LABEL_32:
      swift_bridgeObjectRelease();
      v6 = v41;
      v4 = v42;
      goto LABEL_35;
    }
  }
LABEL_36:
  swift_bridgeObjectRelease();
  swift_release();
LABEL_37:
  sub_1BA895DFC((uint64_t)v57, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
LABEL_38:
  swift_bridgeObjectRelease();
}

uint64_t sub_1BA76849C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17, uint64_t (*a18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  int v19;

  v19 = (a17 >> 5) & 3;
  if (v19 == 1)
    return a19(result, a2, a3, a4, a5, a6, a7, a8);
  if (!v19)
    return a18(result, a2, a3, a4, a5, a6, a7, a8);
  return result;
}

uint64_t sub_1BA768518(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1BA768594(a1, (uint64_t)sub_1BA768A08, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BA768594(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_1BA768878();
  if (!v8)
    goto LABEL_24;
  v10 = v7;
  v11 = v8;
  v12 = v9;
  v13 = (_QWORD *)*a5;
  v15 = sub_1BA6E35A8(v7, v8);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      v22 = (_QWORD *)*a5;
      if ((v14 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1BA76AEB0();
      v22 = (_QWORD *)*a5;
      if ((v19 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    v24 = (uint64_t *)(v22[6] + 16 * v15);
    *v24 = v10;
    v24[1] = v11;
    *(_QWORD *)(v22[7] + 8 * v15) = v12;
    v25 = v22[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v22[2] = v27;
LABEL_13:
    v28 = sub_1BA768878();
    if (v29)
    {
      v31 = v28;
      v32 = v29;
      v33 = v30;
      do
      {
        v37 = (_QWORD *)*a5;
        v39 = sub_1BA6E35A8(v31, v32);
        v40 = v37[2];
        v41 = (v38 & 1) == 0;
        v42 = v40 + v41;
        if (__OFADD__(v40, v41))
          goto LABEL_25;
        v43 = v38;
        if (v37[3] < v42)
        {
          sub_1BA7677D8(v42, 1);
          v44 = sub_1BA6E35A8(v31, v32);
          if ((v43 & 1) != (v45 & 1))
            goto LABEL_27;
          v39 = v44;
        }
        v46 = (_QWORD *)*a5;
        if ((v43 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v34 = v46[7];
          swift_release();
          *(_QWORD *)(v34 + 8 * v39) = v33;
        }
        else
        {
          v46[(v39 >> 6) + 8] |= 1 << v39;
          v47 = (uint64_t *)(v46[6] + 16 * v39);
          *v47 = v31;
          v47[1] = v32;
          *(_QWORD *)(v46[7] + 8 * v39) = v33;
          v48 = v46[2];
          v26 = __OFADD__(v48, 1);
          v49 = v48 + 1;
          if (v26)
            goto LABEL_26;
          v46[2] = v49;
        }
        v31 = sub_1BA768878();
        v32 = v35;
        v33 = v36;
      }
      while (v35);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BA6EBD18();
    return swift_release();
  }
  sub_1BA7677D8(v18, a4 & 1);
  v20 = sub_1BA6E35A8(v10, v11);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    v22 = (_QWORD *)*a5;
    if ((v19 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease();
    v23 = v22[7];
    swift_release();
    *(_QWORD *)(v23 + 8 * v15) = v12;
    goto LABEL_13;
  }
LABEL_27:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA768878()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    swift_retain();
    v11(&v19, v20);
    swift_release();
    swift_bridgeObjectRelease();
    return v19;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_1BA768A08@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

void sub_1BA768A3C()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA768A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X5>, char a4@<W7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v19 = *(_QWORD *)(a5 + 24);
  v20 = v7;
  *(_QWORD *)(v15 - 72) = *(_QWORD *)(a5 + 16);
  v24 = v5;
  v25 = v7;
  v26 = a4;
  v27 = v10;
  v28 = a3;
  v29 = a2;
  v30 = v12;
  v31 = v11;
  v32 = v9;
  v33 = v5;
  v34 = v14;
  v35 = v13;
  v36 = v6;
  v22 = v6;
  result = ((uint64_t (*)(uint64_t, uint64_t *))sub_1BA768A3C)(a1, &v25);
  if (!v8)
  {
    *(_QWORD *)(v15 - 72) = v19;
    v25 = v20;
    v26 = a4;
    v27 = v10;
    v28 = a3;
    v29 = a2;
    v30 = v12;
    v31 = v11;
    v32 = v9;
    v33 = v24;
    v34 = v14;
    v35 = v13;
    v36 = v22;
    return ((uint64_t (*)(uint64_t, uint64_t *))sub_1BA768A3C)(a1, &v25);
  }
  return result;
}

uint64_t sub_1BA768B80(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = sub_1BB86E008();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2C40, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  MEMORY[0x1E0C80A78](v6);
  v11[1] = *a1;
  v7 = qword_1ED39E360;
  swift_unknownObjectRetain();
  if (v7 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED39A530);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  MEMORY[0x1E0C80A78](v9);
  v11[-2] = sub_1BA768D08();
  swift_getKeyPath();
  sub_1BB86ED10();
  return sub_1BB86DEA0();
}

unint64_t sub_1BA768D08()
{
  unint64_t result;

  result = qword_1ED3D4450;
  if (!qword_1ED3D4450)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3D4450);
  }
  return result;
}

_QWORD *FormatBlockNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *result;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  char **v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[4];
  _BYTE v69[32];
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  char *v74;

  v6 = type metadata accessor for FormatOption();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v55 - v11;
  result = sub_1BA767D40(*(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_blocks));
  if (!v3)
  {
    v14 = result;
    v74 = v12;
    v62 = v6;
    if (result)
    {
      v60 = a2;
      v57 = v9;
      v65 = a1;
      v67 = 0;
      swift_beginAccess();
      v58 = *(_QWORD *)(v2 + 16);
      v64 = v2;
      v15 = *(_QWORD *)(v2 + 24);
      v56 = (char **)(v14 + 5);
      swift_beginAccess();
      v16 = v14;
      v17 = (_QWORD *)v14[5];
      v18 = v17[2];
      v61 = v7;
      v59 = v15;
      if (v18)
      {
        *(_QWORD *)&v71 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA76B828(0, v18, 0);
        v19 = v71;
        v20 = *(unsigned __int8 *)(v7 + 80);
        v63 = v17;
        v21 = (uint64_t)v17 + ((v20 + 32) & ~v20);
        v66 = *(_QWORD *)(v7 + 72);
        v22 = (uint64_t)v74;
        do
        {
          sub_1BA900B30(v21, v22);
          v23 = swift_allocBox();
          sub_1BA8569CC(v22, v24);
          *(_QWORD *)&v71 = v19;
          v26 = *(_QWORD *)(v19 + 16);
          v25 = *(_QWORD *)(v19 + 24);
          if (v26 >= v25 >> 1)
          {
            sub_1BA76B828(v25 > 1, v26 + 1, 1);
            v19 = v71;
          }
          *(_QWORD *)(v19 + 16) = v26 + 1;
          *(_QWORD *)(v19 + 8 * v26 + 32) = v23 | 0xB000000000000004;
          v21 += v66;
          --v18;
          v22 = (uint64_t)v74;
        }
        while (v18);
        swift_bridgeObjectRelease();
        v7 = v61;
      }
      else
      {
        swift_bridgeObjectRetain();
        v19 = MEMORY[0x1E0DEE9D8];
        v22 = (uint64_t)v74;
      }
      v63 = v16;
      v27 = v64;
      swift_beginAccess();
      v28 = *(_QWORD *)(v27 + 56);
      v29 = *(_QWORD *)(v28 + 16);
      v30 = MEMORY[0x1E0DEE9D8];
      if (v29)
      {
        *(_QWORD *)&v71 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1BA76B828(0, v29, 0);
        v30 = v71;
        v31 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
        v32 = v7;
        v55[1] = v28;
        v33 = v28 + v31;
        v66 = *(_QWORD *)(v32 + 72);
        do
        {
          sub_1BA900B30(v33, v22);
          v34 = swift_allocBox();
          sub_1BA8569CC(v22, v35);
          *(_QWORD *)&v71 = v30;
          v37 = *(_QWORD *)(v30 + 16);
          v36 = *(_QWORD *)(v30 + 24);
          if (v37 >= v36 >> 1)
          {
            sub_1BA76B828(v36 > 1, v37 + 1, 1);
            v30 = v71;
          }
          *(_QWORD *)(v30 + 16) = v37 + 1;
          *(_QWORD *)(v30 + 8 * v37 + 32) = v34 | 0x7000000000000000;
          v33 += v66;
          --v29;
          v22 = (uint64_t)v74;
        }
        while (v29);
        swift_bridgeObjectRelease();
      }
      *(_QWORD *)&v71 = v19;
      sub_1BA7082C0(v30);
      v38 = v71;
      v39 = v63;
      swift_beginAccess();
      v40 = v39[6];
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v41 = swift_bridgeObjectRetain();
      v42 = sub_1BA6E4124(v41, v40);
      v72 = 0u;
      v73 = 0u;
      v71 = 0u;
      v70 = 0;
      memset(v69, 0, sizeof(v69));
      memset(v68, 0, sizeof(v68));
      v43 = sub_1BA706104(v58, v59, v38, v42, 0, 0, 0, MEMORY[0x1E0DEE9D8], (uint64_t *)&v71, (uint64_t)v69, v68);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v69, (uint64_t (*)(_QWORD))sub_1BB179EB4);
      swift_beginAccess();
      v44 = v39[4];
      v45 = *(_QWORD *)(v44 + 16);
      if (v45)
      {
        swift_bridgeObjectRetain_n();
        v46 = (_QWORD *)(v44 + 64);
        while (1)
        {
          v47 = *v46;
          v48 = *((_OWORD *)v46 - 1);
          v71 = *((_OWORD *)v46 - 2);
          v72 = v48;
          *(_QWORD *)&v73 = v47;
          swift_bridgeObjectRetain();
          swift_retain();
          v49 = v67;
          FormatSourceMapNode.bind(binder:context:)(v65, v43);
          if (v49)
            break;
          v67 = 0;
          v46 += 5;
          swift_bridgeObjectRelease();
          swift_release();
          if (!--v45)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_22;
          }
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return (_QWORD *)swift_release();
      }
      else
      {
LABEL_22:
        v50 = (uint64_t)v57;
        v51 = *((_QWORD *)*v56 + 2);
        if (v51)
        {
          v52 = (uint64_t)&(*v56)[(*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80)];
          v53 = *(_QWORD *)(v61 + 72);
          v74 = *v56;
          swift_bridgeObjectRetain_n();
          while (1)
          {
            sub_1BA900B30(v52, v50);
            *(_QWORD *)&v71 = *(_QWORD *)(v50 + 16);
            swift_retain();
            v54 = v67;
            FormatOptionValue.bind(binder:context:)(v65, v43);
            v67 = v54;
            if (v54)
              break;
            swift_release();
            sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v52 += v53;
            if (!--v51)
            {
              swift_release();
              swift_bridgeObjectRelease_n();
              return (_QWORD *)swift_release();
            }
          }
          swift_release();
          sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          swift_release();
          swift_release();
          return (_QWORD *)swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_release();
          return (_QWORD *)swift_release();
        }
      }
    }
  }
  return result;
}

unint64_t destroy for FeedBannerAdViewLayout.Context(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;

  swift_bridgeObjectRelease();
  v2 = type metadata accessor for FeedBannerAd();
  v3 = a1 + *(int *)(v2 + 20);
  v4 = sub_1BB8721C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  result = *(_QWORD *)(a1 + *(int *)(v2 + 32) + 8);
  if (result >= 0x11)
    return swift_bridgeObjectRelease();
  return result;
}

BOOL sub_1BA7693E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  _BYTE v20[40];
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[40];
  uint64_t v30;
  _BYTE v31[40];

  v30 = a1;
  sub_1BA4C010C(a2, (uint64_t)v31);
  v28 = a3;
  sub_1BA4C010C(a4, (uint64_t)v29);
  sub_1BA4C010C((uint64_t)v31, (uint64_t)&v22);
  sub_1BA4CECCC(&v22, (uint64_t)v25);
  sub_1BA4C010C((uint64_t)v29, (uint64_t)&v22);
  sub_1BA4CECCC(&v22, (uint64_t)v20);
  v9 = v26;
  v10 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 24))(&v21, v9, v10);
  v11 = a5 & ~v21;
  sub_1BA4C010C((uint64_t)v20, (uint64_t)&v21);
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
    goto LABEL_5;
  }
  v12 = v23;
  v13 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 24))(&v19, v12, v13);
  v14 = a5 & ~v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  if (v14)
  {
LABEL_5:
    v16 = v26;
    v17 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 24))(&v19, v16, v17);
    v15 = (a5 & ~v19) == 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    sub_1BA7695E4((uint64_t)&v28, (unint64_t *)&qword_1ED3B0400, (void (*)(uint64_t))sub_1BA7C2A4C);
    sub_1BA7695E4((uint64_t)&v30, (unint64_t *)&qword_1ED3B0400, (void (*)(uint64_t))sub_1BA7C2A4C);
    goto LABEL_6;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  sub_1BA7695E4((uint64_t)&v28, (unint64_t *)&qword_1ED3B0400, (void (*)(uint64_t))sub_1BA7C2A4C);
  sub_1BA7695E4((uint64_t)&v30, (unint64_t *)&qword_1ED3B0400, (void (*)(uint64_t))sub_1BA7C2A4C);
  v15 = a1 < a3;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v15;
}

void sub_1BA7695D8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
}

uint64_t sub_1BA7695E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BA6AA16C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BA769620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a17 < 0)
    return swift_retain();
  else
    return sub_1BA895C14(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1BA769654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a17 < 0)
    return swift_release();
  else
    return sub_1BA895D94(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void FeedAdGroupDataProvider.groupData(after:)(unint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  _QWORD *v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  uint64_t v59;
  _QWORD v60[3];
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;

  v3 = v2;
  v58 = a2;
  v5 = (_QWORD *)*v3;
  v50 = sub_1BB871C50();
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v51 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v5[10];
  MEMORY[0x1E0C80A78](v8);
  v52 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v5[11];
  v55 = v5;
  v12 = v5[14];
  v11 = v5[15];
  *(_QWORD *)&v63 = v7;
  *((_QWORD *)&v63 + 1) = v10;
  *(_QWORD *)&v64 = v12;
  *((_QWORD *)&v64 + 1) = v11;
  v13 = sub_1BB86FD0C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v49 - v15;
  v54 = a1;
  v17 = sub_1BB86CBD4();
  v53 = v3;
  v59 = v7;
  *(_QWORD *)&v63 = v7;
  *((_QWORD *)&v63 + 1) = v10;
  v18 = v10;
  v56 = v12;
  v57 = v11;
  *(_QWORD *)&v64 = v12;
  *((_QWORD *)&v64 + 1) = v11;
  v19 = sub_1BB871680();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DBC7C8], v19);
  v20 = sub_1BB873138();
  if (!__OFSUB__(v20, 1))
  {
    if (v17 >= v20 - 1)
    {
      *v58 = xmmword_1BB87FC90;
      sub_1BB871C80();
      *(_QWORD *)&v63 = v59;
    }
    else
    {
      sub_1BA779D68(v54, v53);
      sub_1BB8716A4();
      sub_1BB86FCB8();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      sub_1BA4D9CE8(0, &qword_1ED3B2468);
      v12 = v59;
      if (swift_dynamicCast())
      {
        sub_1BA4CECCC(&v63, (uint64_t)v60);
        v21 = v61;
        v22 = v62;
        __swift_project_boxed_opaque_existential_1(v60, v61);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v22 + 8))(&v63, v21, v22);
        if ((v63 & 1) != 0)
        {
          v43 = v61;
          v44 = v62;
          __swift_project_boxed_opaque_existential_1(v60, v61);
          (*(void (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
          sub_1BA76A2E4(v54, 1, 0);
          v45 = v61;
          v46 = v62;
          __swift_project_boxed_opaque_existential_1(v60, v61);
          (*(void (**)(uint64_t, uint64_t))(v46 + 24))(v45, v46);
          v47 = v61;
          v48 = v62;
          __swift_project_boxed_opaque_existential_1(v60, v61);
          (*(void (**)(uint64_t, uint64_t))(v48 + 32))(v47, v48);
          sub_1BB871C5C();
          sub_1BB871C80();
          *(_QWORD *)&v63 = v12;
          *((_QWORD *)&v63 + 1) = v18;
          v64 = *((_OWORD *)v55 + 6);
          v65 = v56;
          v66 = v57;
          v67 = *((_OWORD *)v55 + 8);
          type metadata accessor for FeedAdGroupDataProvider.FailureReason();
        }
        if (qword_1ED3BA7F0 == -1)
        {
LABEL_6:
          v23 = (void *)qword_1ED476858;
          sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
          v25 = v61;
          v26 = v62;
          __swift_project_boxed_opaque_existential_1(v60, v61);
          v27 = *(void (**)(uint64_t, uint64_t))(v26 + 16);
          v28 = v23;
          v29 = v51;
          v27(v25, v26);
          v54 = sub_1BA7AA9FC();
          v30 = v50;
          v31 = sub_1BB87420C();
          v33 = v32;
          v34 = *(void (**)(char *, uint64_t))(v49 + 8);
          v34(v29, v30);
          *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v24 + 64) = sub_1BA6A2D8C();
          *(_QWORD *)(v24 + 32) = v31;
          *(_QWORD *)(v24 + 40) = v33;
          v35 = sub_1BB87330C();
          sub_1BB86EF44("Skipping request for placement because group does not allow ads to be inserted before group, kind=%{public}@", 108, 2, &dword_1BA493000, v28, v35, v24);

          swift_bridgeObjectRelease();
          v36 = v61;
          v37 = v62;
          __swift_project_boxed_opaque_existential_1(v60, v61);
          (*(void (**)(uint64_t, uint64_t))(v37 + 16))(v36, v37);
          v38 = sub_1BB87420C();
          v40 = v39;
          v34(v29, v30);
          v41 = v58;
          *(_QWORD *)v58 = v38;
          *((_QWORD *)v41 + 1) = v40;
          sub_1BB871C80();
          *(_QWORD *)&v63 = v12;
          *((_QWORD *)&v63 + 1) = v18;
          v64 = *((_OWORD *)v55 + 6);
          v65 = v56;
          v66 = v57;
          v67 = *((_OWORD *)v55 + 8);
          type metadata accessor for FeedAdGroupDataProvider.FailureReason();
        }
LABEL_12:
        swift_once();
        goto LABEL_6;
      }
      v65 = 0;
      v63 = 0u;
      v64 = 0u;
      sub_1BA65DBBC((uint64_t)&v63, qword_1ED3BC760, &qword_1ED3B2468, (uint64_t)&protocol descriptor for FeedAdGroupDataProviding);
      sub_1BB871C80();
      v42 = v58;
      *(_QWORD *)v58 = 0;
      *((_QWORD *)v42 + 1) = 0;
      *(_QWORD *)&v63 = v12;
    }
    *((_QWORD *)&v63 + 1) = v10;
    v64 = *((_OWORD *)v55 + 6);
    v65 = v56;
    v66 = v57;
    v67 = *((_OWORD *)v55 + 8);
    type metadata accessor for FeedAdGroupDataProvider.FailureReason();
  }
  __break(1u);
  goto LABEL_12;
}

void FeedAdGroupDataProvider.groupData(before:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  __int128 v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;

  v3 = v2;
  v6 = *v3;
  v7 = sub_1BB871C50();
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 + 80);
  MEMORY[0x1E0C80A78](v10);
  v11 = *(_QWORD *)(v6 + 88);
  v13 = *(_QWORD *)(v6 + 112);
  v12 = *(_QWORD *)(v6 + 120);
  *(_QWORD *)&v62 = v9;
  *((_QWORD *)&v62 + 1) = v11;
  v57 = v12;
  v58 = v13;
  *(_QWORD *)&v63 = v13;
  *((_QWORD *)&v63 + 1) = v12;
  v14 = sub_1BB86FD0C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v50 - v16;
  if (sub_1BB86CBD4() < 1)
  {
    *(_OWORD *)a2 = xmmword_1BB87FC90;
    sub_1BB871C80();
    *(_QWORD *)&v62 = v9;
    *((_QWORD *)&v62 + 1) = v11;
    v63 = *(_OWORD *)(v6 + 96);
    v64 = v58;
    v65 = v57;
    v41 = *(_OWORD *)(v6 + 128);
  }
  else
  {
    v56 = v6;
    v54 = a2;
    v51 = a1;
    sub_1BA76A7BC(a1, v3);
    *(_QWORD *)&v62 = v9;
    *((_QWORD *)&v62 + 1) = v11;
    *(_QWORD *)&v63 = v58;
    *((_QWORD *)&v63 + 1) = v57;
    sub_1BB871680();
    sub_1BB8716A4();
    sub_1BB86FCB8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    sub_1BA4D9CE8(0, &qword_1ED3B2468);
    if (swift_dynamicCast())
    {
      v18 = v57;
      sub_1BA4CECCC(&v62, (uint64_t)v59);
      v19 = v60;
      v20 = v61;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v20 + 8))(&v62, v19, v20);
      v21 = v56;
      if ((v62 & 2) == 0)
      {
        v51 = v11;
        if (qword_1ED3BA7F0 != -1)
          swift_once();
        v22 = (void *)qword_1ED476858;
        sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_1BB87CE70;
        v24 = v60;
        v25 = v61;
        __swift_project_boxed_opaque_existential_1(v59, v60);
        v26 = *(void (**)(uint64_t, uint64_t))(v25 + 16);
        v27 = v22;
        v28 = v55;
        v26(v24, v25);
        sub_1BA7AA9FC();
        v29 = v53;
        v30 = sub_1BB87420C();
        v32 = v31;
        v33 = *(void (**)(char *, uint64_t))(v52 + 8);
        v33(v28, v29);
        *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v23 + 64) = sub_1BA6A2D8C();
        *(_QWORD *)(v23 + 32) = v30;
        *(_QWORD *)(v23 + 40) = v32;
        v34 = sub_1BB87330C();
        sub_1BB86EF44("Skipping request for placement because group does not allow ads to be inserted after group, kind=%{public}@", 107, 2, &dword_1BA493000, v27, v34, v23);

        swift_bridgeObjectRelease();
        v35 = v60;
        v36 = v61;
        __swift_project_boxed_opaque_existential_1(v59, v60);
        (*(void (**)(uint64_t, uint64_t))(v36 + 16))(v35, v36);
        v37 = sub_1BB87420C();
        v39 = v38;
        v33(v28, v29);
        v40 = v54;
        *v54 = v37;
        v40[1] = v39;
        sub_1BB871C80();
        *(_QWORD *)&v62 = v9;
        *((_QWORD *)&v62 + 1) = v51;
        v63 = *(_OWORD *)(v56 + 96);
        v64 = v58;
        v65 = v18;
        v66 = *(_OWORD *)(v56 + 128);
        type metadata accessor for FeedAdGroupDataProvider.FailureReason();
      }
      v43 = v60;
      v44 = v61;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      (*(void (**)(uint64_t, uint64_t))(v44 + 16))(v43, v44);
      sub_1BA76A2E4(v51, 0, 0);
      v45 = v60;
      v46 = v61;
      v47 = v11;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      (*(void (**)(uint64_t, uint64_t))(v46 + 24))(v45, v46);
      v48 = v60;
      v49 = v61;
      __swift_project_boxed_opaque_existential_1(v59, v60);
      (*(void (**)(uint64_t, uint64_t))(v49 + 32))(v48, v49);
      sub_1BB871C5C();
      sub_1BB871C80();
      *(_QWORD *)&v62 = v9;
      *((_QWORD *)&v62 + 1) = v47;
      v63 = *(_OWORD *)(v21 + 96);
      v64 = v58;
      v65 = v18;
      v66 = *(_OWORD *)(v21 + 128);
      type metadata accessor for FeedAdGroupDataProvider.FailureReason();
    }
    v64 = 0;
    v62 = 0u;
    v63 = 0u;
    sub_1BA65DBBC((uint64_t)&v62, qword_1ED3BC760, &qword_1ED3B2468, (uint64_t)&protocol descriptor for FeedAdGroupDataProviding);
    sub_1BB871C80();
    v42 = v54;
    *v54 = 0;
    v42[1] = 0;
    *(_QWORD *)&v62 = v9;
    *((_QWORD *)&v62 + 1) = v11;
    v63 = *(_OWORD *)(v56 + 96);
    v64 = v58;
    v65 = v57;
    v41 = *(_OWORD *)(v56 + 128);
  }
  v66 = v41;
  type metadata accessor for FeedAdGroupDataProvider.FailureReason();
}

uint64_t sub_1BA76A2E4(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  CGFloat MinX;
  double v29;
  double v30;
  char v31;
  CGFloat v32;
  double v33;
  double v34;
  CGFloat v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  CGRect v59;
  CGRect v60;

  v49 = a1;
  v47 = a2;
  v48 = a3;
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 104);
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 128);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 136);
  v55 = *(_QWORD *)(*(_QWORD *)v3 + 96);
  v5 = v55;
  v56 = v4;
  v57 = v6;
  v58 = v7;
  v8 = sub_1BB870600();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = sub_1BB873A2C();
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v41 - v14);
  v55 = v5;
  v56 = v4;
  v57 = v6;
  v58 = v7;
  v16 = sub_1BB86FAD8();
  v17 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB7708], v16);
  v42 = sub_1BB873F0C();
  MEMORY[0x1E0C80A78](v42);
  v45 = (char *)&v41 - v18;
  v46 = v16;
  v43 = v17;
  v53 = sub_1BB873F00();
  v44 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v54 = (char *)&v41 - v19;
  v20 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v41 - v22;
  v24 = v50;
  v25 = (void *)sub_1BB870AA4();
  v26 = MEMORY[0x1E0DEE9D8];
  if (v25)
  {
    v27 = v25;
    objc_msgSend(v25, sel_frame);
    MinX = CGRectGetMinX(v59);
    v29 = *(double *)((char *)v24 + *(_QWORD *)(*v24 + 168));
    v30 = MinX - v29;
    v31 = v47;
    v32 = sub_1BA76A6E4(v47, v27, (uint64_t)v24);
    objc_msgSend(v27, sel_frame);
    v33 = v29 + v29 + CGRectGetWidth(v60);
    sub_1BA76A740(v31, (int)v24, v27);
    v35 = v34;
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = MEMORY[0x1E0DEE9D8];
    if ((v48 & 1) != 0)
    {
      sub_1BB86CBD4();
      sub_1BB86FAF0();
      v37 = sub_1BB86CBD4();
      sub_1BA6D9428((uint64_t)v23, v37, v50, (char *)v36, v27, v30, v32, v33, v35);

      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v8);
    }
    else
    {
      v49 = v36 + 16;
      v38 = v50;
      sub_1BB872C04();
      sub_1BB873EE8();
      while (1)
      {
        sub_1BB873EF4();
        (*(void (**)(uint64_t *, char *, uint64_t))(v51 + 32))(v15, v12, v52);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v15, 1, TupleTypeMetadata2) == 1)break;
        v39 = *v15;
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, (char *)v15 + *(int *)(TupleTypeMetadata2 + 48), v8);
        sub_1BA6D9428((uint64_t)v23, v39, v38, (char *)v36, v27, v30, v32, v33, v35);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v8);
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v54, v53);

    }
    swift_beginAccess();
    v26 = *(_QWORD *)(v36 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v26;
}

CGFloat sub_1BA76A6E4(unsigned __int8 a1, id a2, uint64_t a3)
{
  int v4;
  uint64_t v5;

  v4 = a1;
  objc_msgSend(a2, sel_frame);
  if (v4 == 1)
    return CGRectGetMaxY(*(CGRect *)&v5);
  else
    return CGRectGetMinY(*(CGRect *)&v5) - *(double *)(a3 + *(_QWORD *)(*(_QWORD *)a3 + 168));
}

void sub_1BA76A740(char a1, int a2, id a3)
{
  CGRect v3;

  if (a1 != 1)
  {
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v3);
  }
}

uint64_t FeedAdGroupDataProviding.adKeywords.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA76A7BC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _BYTE v19[12];
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v2 = (_QWORD *)*a2;
  v3 = sub_1BB871C50();
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v2[10];
  MEMORY[0x1E0C80A78](v7);
  v8 = v2[11];
  v9 = v2[14];
  v10 = v2[15];
  v30[0] = v6;
  v30[1] = v8;
  v25 = v9;
  v26 = v8;
  v30[2] = v9;
  v31 = v10;
  v24 = v10;
  v11 = sub_1BB86FD0C();
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v19[-v12];
  v14 = sub_1BB86CBD4();
  result = v14 - 1;
  if (__OFSUB__(v14, 1))
  {
    __break(1u);
  }
  else if (result >= 1)
  {
    v20 = *MEMORY[0x1E0D52B30];
    while (1)
    {
      --v14;
      *(_QWORD *)&v27 = v6;
      *((_QWORD *)&v27 + 1) = v26;
      *(_QWORD *)&v28 = v25;
      *((_QWORD *)&v28 + 1) = v24;
      sub_1BB871680();
      sub_1BB8716A4();
      sub_1BB86FCB8();
      (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v13, v11);
      sub_1BA4D9CE8(0, &qword_1ED3B2468);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v29 = 0;
        v27 = 0u;
        v28 = 0u;
        sub_1BA65DBBC((uint64_t)&v27, qword_1ED3BC760, &qword_1ED3B2468, (uint64_t)&protocol descriptor for FeedAdGroupDataProviding);
        return v14;
      }
      sub_1BA4CECCC(&v27, (uint64_t)v30);
      v17 = v31;
      v16 = v32;
      __swift_project_boxed_opaque_existential_1(v30, v31);
      (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v17, v16);
      v18 = (*(uint64_t (**)(_BYTE *, uint64_t))(v21 + 88))(v5, v22);
      if (v18 != v20)
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      if (v14 <= 1)
        return 0;
    }
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v5, v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    return v14;
  }
  return result;
}

uint64_t sub_1BA76AA40()
{
  char v0;

  swift_retain();
  v0 = sub_1BB86E074();
  swift_release();
  return v0 & 1;
}

void sub_1BA76AA8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  unint64_t v32;
  uint64_t v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  int v65;
  int v66;

  v4 = v3;
  v5 = v2;
  v8 = type metadata accessor for FormatItemNodeAction();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C8F38, v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v36 - v14;
  v16 = *a2;
  v17 = *((unsigned __int8 *)a2 + 8);
  v18 = *((_BYTE *)a2 + 9);
  v19 = a2[2];
  v20 = a2[3];
  v21 = a2[4];
  v22 = a2[5];
  v24 = a2[6];
  v23 = a2[7];
  v25 = a2[8];
  v26 = a2[9];
  v27 = a2[10];
  v28 = (*(_BYTE *)(v5 + 80) & 0xFE) == 126;
  v65 = v18;
  v66 = v17;
  v46 = v19;
  v47 = v16;
  v44 = v21;
  v45 = v20;
  v42 = v24;
  v43 = v22;
  v41 = v23;
  v40 = v25;
  v39 = v26;
  if (v28)
    goto LABEL_22;
  v29 = *(_QWORD *)(v5 + 16);
  if ((v29 & 0xF000000000000007) == 0xF000000000000007)
    goto LABEL_22;
  v59 = v27;
  v60 = v29;
  v48 = v16;
  v49 = v17;
  v50 = v18;
  v51 = v19;
  v52 = v20;
  v53 = v21;
  v54 = v22;
  v55 = v24;
  v56 = v23;
  v57 = v25;
  v58 = v26;
  sub_1BA7547AC();
  if (!v4)
  {
LABEL_22:
    if (*(_BYTE *)(v5 + 144))
      goto LABEL_5;
    if ((*(_QWORD *)(v5 + 136) & 0xF000000000000007) == 0xD000000000000007)
      goto LABEL_5;
    if ((*(_QWORD *)(v5 + 88) & 0xF000000000000007) == 0xF000000000000007)
      goto LABEL_5;
    v60 = *(_QWORD *)(v5 + 88);
    v48 = v47;
    v49 = v66;
    v50 = v65;
    v51 = v46;
    v52 = v45;
    v53 = v44;
    v54 = v43;
    v55 = v42;
    v56 = v41;
    v57 = v40;
    v58 = v39;
    v59 = v27;
    sub_1BA7547AC();
    if (!v4)
    {
LABEL_5:
      v38 = a1;
      v30 = type metadata accessor for FormatItemNodeStyle.Selector(0);
      sub_1BA57B488(v5 + *(int *)(v30 + 28), (uint64_t)v15, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
      {
        sub_1BA502AD0((uint64_t)v15, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
      }
      else
      {
        sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if ((EnumCaseMultiPayload - 2) >= 6)
        {
          if (EnumCaseMultiPayload)
          {
            sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
          }
          else
          {
            v33 = *(_QWORD *)v11;
            v37 = *((_QWORD *)v11 + 1);
            v36 = *((_QWORD *)v11 + 2);
            v34 = v11[25];
            v35 = v11[24];
            v60 = v33;
            v61 = v37;
            v62 = v36;
            v63 = v35;
            v64 = v34;
            v48 = v47;
            v49 = v66;
            v50 = v65;
            v51 = v46;
            v52 = v45;
            v53 = v44;
            v54 = v43;
            v55 = v42;
            v56 = v41;
            v57 = v40;
            v58 = v39;
            v59 = v27;
            sub_1BA75DD88();
            sub_1BAC65170(v33, v37, v36, v35, v34, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
            if (v4)
            {
              sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
              return;
            }
          }
        }
        sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      }
      v32 = *(_QWORD *)(v5 + *(int *)(v30 + 40));
      if (v32 < 3)
        sub_1BA7644C0(v32);
    }
  }
}

BOOL FeedGroupNativeAdInsertable.supportsNativeAds.getter(uint64_t a1, uint64_t a2)
{
  uint64_t var1;

  (*(void (**)(uint64_t *__return_ptr))(a2 + 24))(&var1);
  return var1 != 2;
}

_BYTE *sub_1BA76AEA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void *sub_1BA76AEB0()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BA6F7A14);
}

uint64_t sub_1BA76AEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[3];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v24 = *(_QWORD *)(a3 + 16);
  if (v24)
  {
    v25 = a3 + 32;
    swift_bridgeObjectRetain();
    v4 = 0;
    while (1)
    {
      v5 = v25 + 152 * v4;
      v6 = *(_OWORD *)(v5 + 112);
      v30 = *(_OWORD *)(v5 + 96);
      v31 = v6;
      v32 = *(_OWORD *)(v5 + 128);
      v33 = *(_QWORD *)(v5 + 144);
      v7 = *(_OWORD *)(v5 + 48);
      v26[2] = *(_OWORD *)(v5 + 32);
      v27 = v7;
      v8 = *(_OWORD *)(v5 + 80);
      v28 = *(_OWORD *)(v5 + 64);
      v29 = v8;
      v9 = *(_OWORD *)(v5 + 16);
      v26[0] = *(_OWORD *)v5;
      v26[1] = v9;
      v10 = *((_QWORD *)&v9 + 1);
      if (*((_QWORD *)&v9 + 1))
      {
        v11 = *(_QWORD *)(*((_QWORD *)&v9 + 1) + 16);
        if (v11)
          break;
      }
      sub_1BAADEEC0((uint64_t)v26);
LABEL_12:
      v13 = BYTE8(v32);
      if (BYTE8(v32) == 254)
      {
        sub_1BAADED48((uint64_t)v26);
      }
      else
      {
        v20 = *((_QWORD *)&v31 + 1);
        v21 = v32;
        v23 = v31;
        v14 = *((_QWORD *)&v29 + 1);
        v22 = v30;
        v15 = *((_QWORD *)&v28 + 1);
        v19 = v29;
        v17 = *((_QWORD *)&v27 + 1);
        v16 = v28;
        v34 = *((_QWORD *)&v29 + 1);
        swift_retain();
        sub_1BA7547AC();
        sub_1BA6E8A78(v17, v16, v15, v19, v14, v22, *((uint64_t *)&v22 + 1), v23, v20, v21, v13);
        sub_1BAADED48((uint64_t)v26);
        if (v3)
          return swift_bridgeObjectRelease();
      }
      if (++v4 == v24)
        return swift_bridgeObjectRelease();
    }
    sub_1BAADEEC0((uint64_t)v26);
    swift_bridgeObjectRetain();
    v12 = v10 + 64;
    while (1)
    {
      v34 = *(_QWORD *)(v12 - 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA7547AC();
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v12 += 40;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_1BAADED48((uint64_t)v26);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BA76B178(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v15 = a2;
  sub_1BA76BAD0(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v20 = (_QWORD **)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v18 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    swift_bridgeObjectRetain();
    v6 = 0;
    v7 = MEMORY[0x1E0DEE9E0];
    v16 = v4;
    v17 = a1;
    do
    {
      if (v6 >= *(_QWORD *)(a1 + 16))
      {
        __break(1u);
        JUMPOUT(0x1BA76B688);
      }
      v8 = *(_QWORD *)(v4 + 72);
      v22 = v6;
      v9 = v20;
      sub_1BA76BB28(v18 + v8 * v6, (uint64_t)v20);
      v10 = v9[1];
      v23 = v9[3];
      v24 = v10;
      v11 = v9[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA76BA94((uint64_t)v9);
      swift_bridgeObjectRelease();
      v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v11 + 16);
      v21 = v12;
      if (v13)
        __asm { BR              X8 }
      v6 = v22 + 1;
      swift_bridgeObjectRelease();
      v4 = v16;
      a1 = v17;
    }
    while (v6 != v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9E0];
  }
  v14 = v15;
  *v15 = a1;
  v14[1] = v7;
}

uint64_t sub_1BA76B698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t result;
  char v8;

  switch(a7 >> 59)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
      result = swift_release();
      break;
    case 0x10uLL:
      v8 = a7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E6CC4(a5, a6, v8);
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BA76B724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t result;
  char v8;

  switch(a7 >> 59)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x11uLL:
      result = swift_retain();
      break;
    case 0x10uLL:
      v8 = a7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA6E6C54(a5, a6, v8);
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1BA76B7B0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E71C(a1, a2, a3, a4, &qword_1ED3B9DA0, (uint64_t (*)(uint64_t))sub_1BA76B7C4);
}

void sub_1BA76B7C4(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B3300)
  {
    v2 = sub_1BA76BC58();
    v3 = sub_1BA833E3C();
    v4 = type metadata accessor for FormatMerge(a1, (uint64_t)&type metadata for FormatNodeStyle, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B3300);
  }
}

uint64_t sub_1BA76B828(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA76B854(a1, a2, a3, (_QWORD *)*v3, (unint64_t *)&unk_1ED3B9D90, (uint64_t (*)(uint64_t))sub_1BA76B9F0);
  *v3 = result;
  return result;
}

uint64_t sub_1BA76B854(char a1, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    sub_1BA4B07F0(0, a5, a6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA76B9F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3B32F0)
  {
    v2 = type metadata accessor for FormatOption();
    v3 = sub_1BA4A2870(&qword_1ED3B37E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
    v4 = sub_1BA4A2870(&qword_1ED3AFE80, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
    v5 = type metadata accessor for FormatMerge(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3B32F0);
  }
}

uint64_t sub_1BA76BA94(uint64_t a1)
{
  uint64_t v2;

  sub_1BA76BAD0(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA76BAD0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B37D0)
  {
    v2 = sub_1BA896988();
    v4 = type metadata accessor for FormatObject(a1, (uint64_t)&type metadata for FormatStyle, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B37D0);
  }
}

uint64_t sub_1BA76BB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA76BAD0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA76BB6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9B20)
  {
    sub_1BA4B07F0(255, &qword_1ED3B93C0, (uint64_t (*)(uint64_t))sub_1BA76B7C4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9B20);
  }
}

uint64_t sub_1BA76BBE8(uint64_t a1, char a2)
{
  return sub_1BB4BD0A4(a1, a2, (void (*)(_QWORD))sub_1BA76BB6C);
}

void sub_1BA76BBF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFAD8)
  {
    sub_1BA81E434();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFAD8);
  }
}

unint64_t sub_1BA76BC58()
{
  unint64_t result;

  result = qword_1ED3B44F0;
  if (!qword_1ED3B44F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNodeStyle, &type metadata for FormatNodeStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3B44F0);
  }
  return result;
}

uint64_t HeadlineViewLayout.Context.init(key:model:styler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void *v56;
  id v57;
  char *v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  void *v79;
  id v80;
  char *v81;
  _QWORD *v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  id v101;
  char *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  __int128 v115;
  char *v116;
  uint64_t v117;
  uint64_t result;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  _QWORD v145[3];
  uint64_t v146;
  uint64_t v147;

  v131 = a1;
  v8 = sub_1BB86C8B0();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v138 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FeedHeadline(0);
  v136 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v136 + 64);
  MEMORY[0x1E0C80A78](v12);
  v125 = (uint64_t)&v119 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v123 = (uint64_t)&v119 - v15;
  MEMORY[0x1E0C80A78](v16);
  v129 = (uint64_t)&v119 - v17;
  MEMORY[0x1E0C80A78](v18);
  v121 = (uint64_t)&v119 - v19;
  MEMORY[0x1E0C80A78](v20);
  v127 = (uint64_t)&v119 - v21;
  MEMORY[0x1E0C80A78](v22);
  v120 = (uint64_t)&v119 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v119 - v25;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v119 - v28;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v30);
  v124 = (char *)&v119 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v122 = (char *)&v119 - v33;
  MEMORY[0x1E0C80A78](v34);
  v128 = (uint64_t)&v119 - v35;
  MEMORY[0x1E0C80A78](v36);
  v126 = (uint64_t)&v119 - v37;
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)&v119 - v39;
  *a4 = a1;
  v41 = type metadata accessor for HeadlineViewLayout.Context(0);
  sub_1BA76C878(a2, (uint64_t)a4 + *(int *)(v41 + 20));
  v130 = v41;
  v42 = *(int *)(v41 + 24);
  v140 = a4;
  sub_1BA4C010C(a3, (uint64_t)a4 + v42);
  v139 = a3;
  sub_1BA4C010C(a3, (uint64_t)v145);
  v133 = v10;
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v141 = v8;
  v137 = v43;
  v43((uint64_t)v40, 1, 1, v8);
  v142 = a2;
  sub_1BA76C878(a2, (uint64_t)v29);
  sub_1BA76C878((uint64_t)v29, (uint64_t)v26);
  v44 = *(unsigned __int8 *)(v136 + 80);
  v45 = (v44 + 16) & ~v44;
  v134 = v44 | 7;
  v135 = v45 + v13;
  v46 = swift_allocObject();
  v136 = v45;
  v119 = v46;
  sub_1BA5193C4((uint64_t)v29, v46 + v45, type metadata accessor for FeedHeadline);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B3020, (uint64_t (*)(uint64_t))sub_1BA81D288, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for CachedText);
  v47 = (_QWORD *)swift_allocObject();
  v47[2] = 0xC04E000000000000;
  v48 = v146;
  v49 = v147;
  __swift_project_boxed_opaque_existential_1(v145, v146);
  v50 = (void *)*((_QWORD *)v26 + 5);
  swift_retain();
  v51 = objc_msgSend(v50, sel_title);
  if (v51)
  {
    v52 = v51;
    v53 = sub_1BB8729A0();
    v55 = v54;

  }
  else
  {
    v53 = 0;
    v55 = 0xE000000000000000;
  }
  v56 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v49 + 40))(v53, v55, v48, v49);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FeedHeadline);
  *(_QWORD *)((char *)v47 + *(_QWORD *)(*v47 + 120)) = v56;
  *(_QWORD *)((char *)v47 + *(_QWORD *)(*v47 + 136)) = v56;
  v57 = v56;
  v58 = v138;
  sub_1BB86C8A4();
  v59 = (char *)v47 + *(_QWORD *)(*v47 + 128);
  v60 = v141;
  v133 = *(_QWORD *)(v133 + 32);
  ((void (*)(char *, char *, uint64_t))v133)(v59, v58, v141);
  v132 = (id)objc_opt_self();
  LOBYTE(v58) = objc_msgSend(v132, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
  *((_BYTE *)v47 + qword_1ED3B2F88) = (_BYTE)v58;
  sub_1BA646EFC((uint64_t)v40, (uint64_t)v47 + qword_1ED3B2F90, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v61 = (_QWORD *)swift_allocObject();
  v62 = v119;
  v61[2] = sub_1BB205FC4;
  v61[3] = v62;
  v61[4] = v57;
  v47[3] = sub_1BB2063AC;
  v47[4] = v61;
  v63 = v130;
  v65 = v139;
  v64 = v140;
  *(_QWORD *)((char *)v140 + *(int *)(v130 + 28)) = v47;
  v66 = v142;
  *(_QWORD *)((char *)v64 + *(int *)(v63 + 32)) = sub_1BA76F9EC(v142, v65);
  sub_1BA4C010C(v65, (uint64_t)v145);
  v137(v126, 1, 1, v60);
  v67 = v66;
  v68 = v120;
  sub_1BA76C878(v67, v120);
  v69 = v127;
  sub_1BA76C878(v68, v127);
  v70 = swift_allocObject();
  sub_1BA5193C4(v68, v70 + v136, type metadata accessor for FeedHeadline);
  v71 = (_QWORD *)swift_allocObject();
  v71[2] = 0xC04E000000000000;
  v72 = v146;
  v73 = v147;
  __swift_project_boxed_opaque_existential_1(v145, v146);
  v74 = objc_msgSend(*(id *)(v69 + 40), sel_sourceName);
  if (v74)
  {
    v75 = v74;
    v76 = sub_1BB8729A0();
    v78 = v77;

  }
  else
  {
    v76 = 0;
    v78 = 0xE000000000000000;
  }
  v79 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v73 + 64))(v76, v78, v72, v73);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80(v127, type metadata accessor for FeedHeadline);
  *(_QWORD *)((char *)v71 + *(_QWORD *)(*v71 + 120)) = v79;
  *(_QWORD *)((char *)v71 + *(_QWORD *)(*v71 + 136)) = v79;
  v80 = v79;
  v81 = v138;
  sub_1BB86C8A4();
  ((void (*)(char *, char *, uint64_t))v133)((char *)v71 + *(_QWORD *)(*v71 + 128), v81, v141);
  LOBYTE(v81) = objc_msgSend(v132, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
  *((_BYTE *)v71 + qword_1ED3B2F88) = (_BYTE)v81;
  sub_1BA646EFC(v126, (uint64_t)v71 + qword_1ED3B2F90, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v82 = (_QWORD *)swift_allocObject();
  v82[2] = sub_1BB2063B4;
  v82[3] = v70;
  v82[4] = v80;
  v71[3] = sub_1BB2063AC;
  v71[4] = v82;
  v83 = v139;
  *(_QWORD *)((char *)v140 + *(int *)(v63 + 36)) = v71;
  sub_1BA4C010C(v83, (uint64_t)v145);
  v84 = objc_msgSend(*(id *)(v142 + 40), sel_publishDate);
  if (v84)
  {
    v85 = v84;
    v86 = v128;
    sub_1BB86C874();

    v87 = 0;
  }
  else
  {
    v87 = 1;
    v86 = v128;
  }
  v88 = 1;
  v137(v86, v87, 1, v141);
  v89 = v121;
  sub_1BA76C878(v142, v121);
  v90 = v129;
  sub_1BA76C878(v89, v129);
  v91 = swift_allocObject();
  sub_1BA5193C4(v89, v91 + v136, type metadata accessor for FeedHeadline);
  v92 = (_QWORD *)swift_allocObject();
  v92[2] = 0xC04E000000000000;
  v93 = v146;
  v94 = v147;
  __swift_project_boxed_opaque_existential_1(v145, v146);
  v95 = objc_msgSend(*(id *)(v90 + 40), sel_publishDate);
  if (v95)
  {
    v96 = v95;
    v97 = (uint64_t)v122;
    sub_1BB86C874();

    v88 = 0;
  }
  else
  {
    v97 = (uint64_t)v122;
  }
  v98 = 1;
  v99 = v141;
  v137(v97, v88, 1, v141);
  v100 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v94 + 56))(v97, v93, v94);
  sub_1BA76D750(v97);
  sub_1BA4A2E80(v129, type metadata accessor for FeedHeadline);
  *(_QWORD *)((char *)v92 + *(_QWORD *)(*v92 + 120)) = v100;
  *(_QWORD *)((char *)v92 + *(_QWORD *)(*v92 + 136)) = v100;
  v101 = v100;
  v102 = v138;
  sub_1BB86C8A4();
  ((void (*)(char *, char *, uint64_t))v133)((char *)v92 + *(_QWORD *)(*v92 + 128), v102, v99);
  LOBYTE(v102) = objc_msgSend(v132, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
  *((_BYTE *)v92 + qword_1ED3B2F88) = (_BYTE)v102;
  sub_1BA646EFC(v128, (uint64_t)v92 + qword_1ED3B2F90, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v103 = (_QWORD *)swift_allocObject();
  v103[2] = sub_1BB2063C8;
  v103[3] = v91;
  v103[4] = v101;
  v92[3] = sub_1BB2063AC;
  v92[4] = v103;
  v104 = v130;
  v105 = v139;
  *(_QWORD *)((char *)v140 + *(int *)(v130 + 40)) = v92;
  sub_1BA4C010C(v105, (uint64_t)v145);
  v106 = objc_msgSend(*(id *)(v142 + 40), sel_publishDate);
  if (v106)
  {
    v107 = v106;
    v108 = (uint64_t)v124;
    sub_1BB86C874();

    v98 = 0;
  }
  else
  {
    v108 = (uint64_t)v124;
  }
  v109 = v141;
  v137(v108, v98, 1, v141);
  v110 = v142;
  v111 = v123;
  sub_1BA76C878(v142, v123);
  v112 = v125;
  sub_1BA76C878(v111, v125);
  v113 = swift_allocObject();
  sub_1BA5193C4(v111, v113 + v136, type metadata accessor for FeedHeadline);
  sub_1BA4B07F0(0, &qword_1ED3B3018, (uint64_t (*)(uint64_t))sub_1BA76D834, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for CachedText);
  v114 = (_QWORD *)swift_allocObject();
  v114[2] = 0xC04E000000000000;
  sub_1BB205FD0(v112, (uint64_t *)&v144);
  sub_1BA4A2E80(v112, type metadata accessor for FeedHeadline);
  v115 = v144;
  *(_OWORD *)((char *)v114 + *(_QWORD *)(*v114 + 120)) = v144;
  *(_OWORD *)((char *)v114 + *(_QWORD *)(*v114 + 136)) = v115;
  swift_bridgeObjectRetain_n();
  v116 = v138;
  sub_1BB86C8A4();
  ((void (*)(char *, char *, uint64_t))v133)((char *)v114 + *(_QWORD *)(*v114 + 128), v116, v109);
  LOBYTE(v109) = objc_msgSend(v132, sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
  *((_BYTE *)v114 + qword_1ED3B2F88) = v109;
  sub_1BA646EFC(v108, (uint64_t)v114 + qword_1ED3B2F90, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v143 = v144;
  v117 = swift_allocObject();
  *(_QWORD *)(v117 + 16) = sub_1BB206438;
  *(_QWORD *)(v117 + 24) = v113;
  sub_1BA5193C4((uint64_t)&v143, v117 + 32, (uint64_t (*)(_QWORD))sub_1BA76D834);
  v114[3] = sub_1BB2064B0;
  v114[4] = v117;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v139);
  result = sub_1BA4A2E80(v110, type metadata accessor for FeedHeadline);
  *(_QWORD *)((char *)v140 + *(int *)(v104 + 44)) = v114;
  return result;
}

uint64_t sub_1BA76C878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA76C8BC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[72];

  v11[5] = a3;
  v11[1] = a2;
  v11[8] = a1;
  v11[71] = a4;
  v5 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v5);
  v11[2] = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v10);
  __asm { BR              X10 }
}

uint64_t sub_1BA76CA38()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;

  v3 = v0;
  v4 = *(_QWORD *)(v1 + 48);
  result = sub_1BB31191C(*(_QWORD *)(*(_QWORD *)(v1 + 64) + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline, 0x6461654864656546, 0xEC000000656E696CLL, v2);
  if (!v4)
  {
    *(_BYTE *)(v1 + 376) = v3;
    FormatHeadlineBinding.Image.image(from:imageContext:)();
    return sub_1BA4A2E80(v2, type metadata accessor for FeedHeadline);
  }
  return result;
}

void FormatHeadlineBinding.Image.image(from:imageContext:)()
{
  uint64_t v1;

  v1 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X10 }
}

uint64_t sub_1BA76D23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  objc_msgSend(*(id *)(v3 + 40), sel_thumbnailFocalFrame);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  *(_QWORD *)(v7 - 176) = v4;
  v16 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v7 - 224) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v7 - 208) = v18;
  *(_OWORD *)(v7 - 240) = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v7 - 192) = v5;
  v19 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v7 - 248) = *(_QWORD *)(v0 + 120);
  *(_DWORD *)(v7 - 68) = *(unsigned __int8 *)(v0 + 128);
  sub_1BA76C878(v3, v1);
  v20 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v21 = swift_allocObject();
  sub_1BA5193C4(v1, v21 + v20, type metadata accessor for FeedHeadline);
  *(_QWORD *)(v21 + ((v2 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v0;
  *(_BYTE *)(v7 - 160) = 0;
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v9;
  *(_QWORD *)(v22 + 24) = v11;
  *(_QWORD *)(v22 + 32) = v13;
  *(_QWORD *)(v22 + 40) = v15;
  *(_BYTE *)(v22 + 48) = *(_BYTE *)(v7 - 160);
  *(_QWORD *)(v22 + 56) = v16;
  *(_QWORD *)(v22 + 64) = v17;
  *(_OWORD *)(v22 + 72) = *(_OWORD *)(v7 - 208);
  *(_OWORD *)(v22 + 88) = *(_OWORD *)(v7 - 224);
  *(_OWORD *)(v22 + 104) = *(_OWORD *)(v7 - 240);
  v23 = *(_QWORD *)(v7 - 248);
  *(_QWORD *)(v22 + 120) = v19;
  *(_QWORD *)(v22 + 128) = v23;
  *(_BYTE *)(v22 + 136) = *(_DWORD *)(v7 - 68);
  *(_QWORD *)(v22 + 144) = sub_1BA7285A8;
  *(_QWORD *)(v22 + 152) = v21;
  **(_QWORD **)(v7 - 192) = v22 | 0x2000000000000000;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1BA76D70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA76D78C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA76D750(uint64_t a1)
{
  uint64_t v2;

  sub_1BA76D78C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA76D78C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0540)
  {
    sub_1BB86C8B0();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0540);
  }
}

void sub_1BA76D7E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C2250)
  {
    sub_1BA840CF0();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C2250);
  }
}

void sub_1BA76D834()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9200)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9200);
  }
}

id sub_1BA76D888()
{
  return sub_1BA76D908();
}

id sub_1BA76D8A8()
{
  return sub_1BA76DA90();
}

id sub_1BA76D8C8(uint64_t a1)
{
  return sub_1BA76DCBC(a1);
}

id sub_1BA76D8E8()
{
  return sub_1BA76DF10();
}

id sub_1BA76D908()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v2 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v3 = *(void **)(v0 + 40);
  v4 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v3;
  v5 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = v5;
  v6 = *(void **)(v0 + 88);
  *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v6;
  swift_bridgeObjectRetain();
  v7 = v2;
  v8 = v3;
  v9 = v5;
  v10 = v6;
  sub_1BA76E82C(inited);
  v11 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v12 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v13 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithString_attributes_, v12, v13);

  return v14;
}

id sub_1BA76DA90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t inited;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v25;

  v1 = sub_1BB86C9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 16);
  sub_1BB86C994();
  v6 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v9 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v5;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = *(void **)(v0 + 64);
  v12 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v11;
  v13 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 112) = v13;
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v6;
  swift_bridgeObjectRetain();
  v14 = v8;
  v15 = v5;
  v16 = v10;
  v17 = v11;
  v18 = v13;
  v19 = v6;
  sub_1BA76E82C(inited);
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v21 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v22 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

id sub_1BA76DCBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  _BYTE v25[112];

  v2 = v1;
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v25[-v6];
  sub_1BA5E01A4(a1, (uint64_t)&v25[-v6], (unint64_t *)&qword_1ED3B0540, v4);
  v8 = sub_1BB86C8B0();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BA5C699C((uint64_t)v7, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    sub_1BB86C760();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v7, v8);
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v11 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v12 = *(void **)(v2 + 32);
  v13 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v12;
  v14 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = v14;
  v15 = *(void **)(v2 + 80);
  *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v15;
  v16 = v11;
  v17 = v12;
  v18 = v14;
  v19 = v15;
  sub_1BA76E82C(inited);
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v21 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v22 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

id sub_1BA76DF10()
{
  uint64_t v0;
  uint64_t inited;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v2 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v3 = *(void **)(v0 + 32);
  v4 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v3;
  v5 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v4;
  *(_QWORD *)(inited + 72) = v5;
  v6 = *(void **)(v0 + 80);
  *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v6;
  swift_bridgeObjectRetain();
  v7 = v2;
  v8 = v3;
  v9 = v5;
  v10 = v6;
  sub_1BA76E82C(inited);
  v11 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v12 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v13 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithString_attributes_, v12, v13);

  return v14;
}

_QWORD *sub_1BA76E098(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  double v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  id v32;
  void *v33;
  uint64_t inited;
  void *v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  id v49;
  uint64_t v50[16];
  _QWORD v51[2];
  char v52;
  _BYTE v53[40];
  double v54[4];
  char v55;
  _QWORD v56[17];

  v45 = a2;
  v5 = (_QWORD *)sub_1BB86D93C();
  v6 = *(v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  v10 = *((unsigned __int8 *)v2 + 8);
  v11 = v2[3];
  v46 = v2[2];
  v47 = v11;
  v48 = *((unsigned __int8 *)v2 + 32);
  v51[0] = v9;
  swift_retain();
  v49 = a1;
  v12 = sub_1BA76F060((uint64_t)a1);
  if (v3)
  {
    swift_release();
  }
  else
  {
    v13 = v12;
    v44 = v10;
    v42 = v5;
    v43 = v8;
    v41 = v6;
    swift_release();
    v14 = objc_msgSend(v13, sel_imageWithRenderingMode_, 2);

    v16 = v46;
    v15 = v47;
    v51[0] = v46;
    v51[1] = v47;
    v17 = v48;
    v52 = v48;
    v18 = (uint64_t)v49;
    sub_1BA69C808(v46, v47, v48);
    sub_1BB86DD80();
    LOBYTE(v13) = FormatBoolean.value(contextLayoutOptions:)(v50[0]);
    swift_release();
    sub_1BA69C828(v16, v15, v17);
    if ((v13 & 1) != 0)
    {
      v19 = v14;
      v20 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v14);
    }
    else
    {
      v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC12B0]), sel_init);
      v19 = v14;
      objc_msgSend(v20, sel_setImage_, v14);
    }
    v21 = v18;
    LOBYTE(v51[0]) = v44;
    sub_1BA76EBAC(v45, (uint64_t)v19, (uint64_t)v53);
    sub_1BA739A14((uint64_t)v53, (uint64_t)v54);
    if ((v55 & 1) == 0)
      objc_msgSend(v20, sel_setBounds_, v54[0], v54[1], v54[2], v54[3]);
    sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98E0);
    v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v20);
    if (v45)
    {
      v22 = v20;
      v23 = *(_QWORD *)(v45 + 56);
      if ((~v23 & 0xF000000000000007) != 0)
      {
        v50[0] = *(_QWORD *)(v45 + 56);
        swift_retain();
        sub_1BA742278();
        v25 = v24;
        sub_1BA6E6CD8(v23);
        v26 = v25;
        sub_1BB86D750();
        sub_1BB86D930();
        v28 = v41;
        if (byte_1EF3D0978 == 1)
        {
          v29 = v27;
          objc_msgSend(v25, sel_pointSize);
          v31 = round(v29 * (v30 * 4.0) * 0.25);
          if (byte_1EF3D0978)
            v30 = v31;
          v32 = objc_msgSend(v25, sel_fontWithSize_, v30);
        }
        else
        {
          v32 = v25;
        }
        v33 = v32;
        v49 = v26;
        (*(void (**)(char *, _QWORD *))(v28 + 8))(v43, v42);
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
        v35 = (void *)*MEMORY[0x1E0DC1138];
        *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
        *(_QWORD *)(inited + 64) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
        *(_QWORD *)(inited + 40) = v33;
        v36 = v35;
        v37 = v33;
        sub_1BA76E82C(inited);
        type metadata accessor for Key(0);
        sub_1BA76F768();
        v38 = (void *)sub_1BB872760();
        swift_bridgeObjectRelease();
        objc_msgSend(v5, sel_addAttributes_range_, v38, 0, objc_msgSend(v5, sel_length));

        v19 = v14;
      }
      v20 = v22;
      sub_1BA7443B4(v45 + 64, (uint64_t)v50);
      sub_1BA6A0C50(v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
    }
    else
    {
      sub_1BB15F374((uint64_t)v50);
    }
    sub_1BA7443B4((uint64_t)v50, (uint64_t)v51);
    sub_1BA7443B4((uint64_t)v51, (uint64_t)v56);
    sub_1BA76EDC0(v56, v5, v21);

    sub_1BA6A0C50(v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
  }
  return v5;
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1BA4AD288(a1, &qword_1ED3B9898, (uint64_t)&unk_1E7271FA8, MEMORY[0x1E0DEEC78]);
}

unint64_t sub_1BA76E600(uint64_t a1)
{
  uint64_t v2;

  sub_1BB8729A0();
  sub_1BB8745CC();
  sub_1BB872A90();
  v2 = sub_1BB874608();
  swift_bridgeObjectRelease();
  return sub_1BA76E690(a1, v2);
}

unint64_t sub_1BA76E690(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1BB8729A0();
    v8 = v7;
    if (v6 == sub_1BB8729A0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1BB8729A0();
          v15 = v14;
          if (v13 == sub_1BB8729A0() && v15 == v16)
            break;
          v18 = sub_1BB874398();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

void sub_1BA76E804(uint64_t a1)
{
  sub_1BB4CE550(a1, (unint64_t *)&unk_1ED3B9BA0, type metadata accessor for Key, (void (*)(void))sub_1BA76F768);
}

unint64_t sub_1BA76E82C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F67E4(0, (unint64_t *)&unk_1ED3B9BA0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (unint64_t *)&qword_1ED3B9880, (uint64_t)&unk_1BB87BE5C);
  v2 = sub_1BB873F6C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA6AA01C(v6, (uint64_t)&v13, (uint64_t)&qword_1ED3B98A0, (uint64_t)type metadata accessor for Key, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA76EB4C);
    v7 = v13;
    result = sub_1BA76E68C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1BA76EAE0(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA76E994(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA7863C0();
  v2 = sub_1BB873F6C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  v7 = MEMORY[0x1E0DEA968];
  while (1)
  {
    sub_1BA6AA01C(v6, (uint64_t)&v16, (uint64_t)&qword_1ED3B9220, v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA76EAF0);
    v8 = v16;
    v9 = v17;
    result = sub_1BA6E35A8(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v3[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_1BA76EAE0(&v18, (_OWORD *)(v3[7] + 32 * result));
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_OWORD *sub_1BA76EAE0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1BA76EAF0(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BA76EB4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BA76EBAC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  BOOL v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  void *v25;
  void *v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];

  v8 = sub_1BB86D93C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0.0;
  v13 = *v3 != 1 || a1 == 0;
  if (v13 || (v32[0] = a2, v14 = *(_QWORD *)(a1 + 56), (~v14 & 0xF000000000000007) == 0))
  {
    v15 = 1;
    v16 = 0;
    v17 = 0;
LABEL_7:
    *(_QWORD *)a3 = 0;
    *(double *)(a3 + 8) = v12;
    *(_QWORD *)(a3 + 16) = v16;
    *(_QWORD *)(a3 + 24) = v17;
    *(_BYTE *)(a3 + 32) = v15;
    return;
  }
  v32[1] = *(_QWORD *)(a1 + 56);
  swift_retain();
  sub_1BA742278();
  v19 = v18;
  sub_1BA6E6CD8(v14);
  if (!v4)
  {
    sub_1BB86D750();
    sub_1BB86D930();
    if (byte_1EF3D0978 == 1)
    {
      v21 = v20;
      objc_msgSend(v19, sel_pointSize);
      v23 = round(v21 * (v22 * 4.0) * 0.25);
      if (byte_1EF3D0978)
        v22 = v23;
      v24 = objc_msgSend(v19, sel_fontWithSize_, v22, v32[0]);
    }
    else
    {
      v24 = v19;
    }
    v25 = v24;
    v26 = (void *)v32[0];
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    objc_msgSend(v25, sel_capHeight);
    v28 = v27;
    objc_msgSend(v26, sel_size);
    v12 = (v28 - v29) * 0.5;
    objc_msgSend(v26, sel_size);
    v16 = v30;
    objc_msgSend(v26, sel_size);
    v17 = v31;

    v15 = 0;
    goto LABEL_7;
  }
}

_QWORD *sub_1BA76EDC0(_QWORD *a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *result;
  id v8;
  id v9;
  char *v10;
  _QWORD v11[16];
  _QWORD v12[16];
  _BYTE v13[128];
  __int128 v14[8];
  __int128 v15[8];
  _BYTE v16[128];
  _BYTE v17[128];

  sub_1BA7443B4((uint64_t)a1, (uint64_t)v13);
  sub_1BA7443B4((uint64_t)v13, (uint64_t)v17);
  sub_1BA7443B4((uint64_t)a1, (uint64_t)v14);
  result = (_QWORD *)sub_1BAB05F98((uint64_t)v14);
  if ((_DWORD)result != 1)
  {
    sub_1BA7439D4(v14, (uint64_t)v15);
    sub_1BA7443B4((uint64_t)v17, (uint64_t)v11);
    sub_1BA6A0C50(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
    v8 = objc_msgSend(a2, sel_length);
    sub_1BA7443B4((uint64_t)v17, (uint64_t)v12);
    sub_1BA6A0C50(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
    v9 = sub_1BA7437B8(a1, a3);
    sub_1BA6A0C50(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
    if (!v3)
    {
      if (v9)
      {
        objc_msgSend(a2, sel_addAttribute_value_range_, *MEMORY[0x1E0DC1140], v9, 0, v8);

      }
      sub_1BA7439D4(v15, (uint64_t)v16);
      v10 = (char *)&loc_1BA76EF04 + *((int *)qword_1BB27C9B8 + sub_1BAB05900((uint64_t)v16));
      __asm { BR              X10 }
    }
    return sub_1BA6A0C50(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8B94);
  }
  return result;
}

_QWORD *sub_1BA76F060(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  id v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  id v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  __int16 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  uint64_t v66;

  v3 = v2;
  v5 = *v1;
  v6 = (unint64_t)*v1 >> 62;
  if (!(_DWORD)v6)
  {
    v14 = *(_QWORD *)(v5 + 32);
    v15 = *(_BYTE *)(v5 + 40);
    v16 = *(_QWORD *)(v5 + 48);
    v17 = *(_QWORD *)(v5 + 56);
    v19 = *(_QWORD *)(v5 + 72);
    v18 = *(_QWORD *)(v5 + 80);
    v21 = *(_QWORD *)(v5 + 88);
    v20 = *(_QWORD *)(v5 + 96);
    v22 = *(_BYTE *)(v5 + 104);
    v23 = *(_QWORD *)(v5 + 112);
    v24 = *(unsigned __int16 *)(v5 + 64);
    v46 = *(_QWORD *)(v5 + 24);
    v47 = *(_QWORD *)(v5 + 16);
    v53 = v47;
    v54 = v46;
    v45 = v14;
    v55 = v14;
    v44 = v15;
    v56 = v15;
    v57 = v16;
    v58 = v17;
    v59 = v24;
    v60 = v19;
    v61 = v18;
    v62 = v21;
    v63 = v20;
    v64 = v22;
    v65 = v23;
    v48 = v23;
    sub_1BA60DF54(v47, v46, v14, v15);
    sub_1BA740E74(v16, v17, v24);
    sub_1BA60DEE4(v19);
    sub_1BA69C808(v21, v20, v22);
    sub_1BA895BA4(v23);
    v25 = &v53;
    v52 = sub_1BA73FF00(a1);
    sub_1BA60DFC4(v47, v46, v45, v44);
    sub_1BA740460(v16, v17, v24);
    sub_1BA60DF1C(v19);
    sub_1BA69C828(v21, v20, v22);
    sub_1BA895BB8(v48);
    if (!v2)
      return v52;
    return v25;
  }
  if ((_DWORD)v6 != 1)
  {
    v26 = *(_QWORD *)(v5 + 16);
    v27 = *(_QWORD *)(v5 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA9A035C(&v53, a1, v26, v27);
    v66 = v53;
    v25 = &v66;
    v28 = sub_1BA76F060(a1);
    if (!v3)
      v25 = (_QWORD *)v28;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return v25;
  }
  v7 = *(_QWORD *)(v5 + 24);
  v50 = *(_QWORD *)(v5 + 16);
  v9 = *(_QWORD *)(v5 + 32);
  v8 = *(_QWORD *)(v5 + 40);
  v11 = *(_QWORD *)(v5 + 48);
  v10 = *(_QWORD *)(v5 + 56);
  v12 = *(unsigned __int8 *)(v5 + 64);
  if (v8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA76F5C4(v11, v10, v12);
    if (qword_1ED3C7890 != -1)
      swift_once();
    v13 = sub_1BA76F5D8(v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA76F520(v11, v10, v12);
    if (!v13)
      goto LABEL_18;
  }
  else
  {
    v13 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    if (!v13)
    {
LABEL_18:
      v25 = (_QWORD *)type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      *v36 = v9;
      v36[1] = v8;
      swift_storeEnumTagMultiPayload();
LABEL_20:
      swift_bridgeObjectRetain();
      swift_willThrow();
      return v25;
    }
  }
  v49 = v10;
  swift_bridgeObjectRetain();
  v29 = v13;
  v30 = (void *)sub_1BB86D738();
  v25 = (_QWORD *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_compatibleWithTraitCollection_, v25, v29, v30);

  if (!v31)
  {
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v37 = v29;
    v37[1] = v50;
    v37[2] = v7;
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  v32 = v31;
  if (v12 == 255)
  {

    return v31;
  }
  v53 = v11;
  v54 = v49;
  LOBYTE(v55) = v12;
  sub_1BA76F534(v11, v49, v12);
  v25 = &v53;
  v33 = sub_1BA76F8B0();
  if (v2)
  {
    sub_1BA76F520(v11, v49, v12);

    return v25;
  }
  v39 = v33;
  v40 = v34;
  v41 = v35;
  sub_1BA76F520(v11, v49, v12);
  v42 = v32;
  v43 = sub_1BA76F7B0(v32, v39, v40, v41);

  return v43;
}

uint64_t sub_1BA76F520(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_1BA76F57C(a1, a2, a3);
  return a1;
}

uint64_t sub_1BA76F534(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 >= 2u)
  {
    if (a3 != 2)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA76F57C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 >= 2u)
  {
    if (a3 != 2)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA76F5C4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_1BA76F534(a1, a2, a3);
  return a1;
}

id sub_1BA76F5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  sub_1BB86DD20();
  v5 = (uint64_t *)(v2 + 24);
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BA6E35A8(a1, a2);
    if ((v8 & 1) != 0)
    {
      v9 = *(id *)(*(_QWORD *)(v6 + 56) + 8 * v7);
      swift_endAccess();
      v10 = v9;
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v11);

  if (v9)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v12 = v9;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v5;
    *v5 = 0x8000000000000000;
    sub_1BA7F2318((uint64_t)v12, a1, a2, isUniquelyReferenced_nonNull_native);
    *v5 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
LABEL_7:
  sub_1BB86DD2C();
  return v9;
}

unint64_t sub_1BA76F768()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B9880;
  if (!qword_1ED3B9880)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1BCCE5B24](&unk_1BB87BE5C, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B9880);
  }
  return result;
}

id sub_1BA76F7B0(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  id v7;

  if (a4)
  {
    if (a4 != 1)
      return (id)sub_1BB873858();
    v7 = a1;
    objc_msgSend(a1, sel_size);
    if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    {
LABEL_6:
      objc_msgSend(v7, sel_size);
      objc_msgSend(v7, sel_size);
      return (id)sub_1BB873858();
    }
  }
  else
  {
    v7 = a1;
    objc_msgSend(a1, sel_size);
    if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0)
      goto LABEL_6;
  }
  return v7;
}

uint64_t sub_1BA76F8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t result;
  uint64_t v5;
  double v6;
  uint64_t v7;

  v2 = *(_QWORD *)v0;
  if (*(_BYTE *)(v0 + 16) && *(_BYTE *)(v0 + 16) != 1)
  {
    v5 = *(_QWORD *)(v0 + 8);
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v6 = sub_1BA72BED4(v7, v2);
    swift_bridgeObjectRelease();
    result = swift_release();
    if (!v1)
    {
      swift_bridgeObjectRetain();
      sub_1BB86DD80();
      sub_1BA72BED4(v7, v5);
      swift_bridgeObjectRelease();
      swift_release();
      return *(_QWORD *)&v6;
    }
  }
  else
  {
    sub_1BB86DD80();
    v3 = sub_1BA72BED4(v7, v2);
    result = swift_release();
    if (!v1)
      return *(_QWORD *)&v3;
  }
  return result;
}

_QWORD *sub_1BA76F9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  void *v20;
  id v21;
  _QWORD *v22;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25[-1] - v6;
  v8 = objc_msgSend(*(id *)(a1 + 40), sel_shortExcerpt, v5);
  if (!v8)
    return 0;
  v9 = v8;
  v10 = sub_1BB8729A0();
  v12 = v11;

  sub_1BA4C010C(a2, (uint64_t)v25);
  v13 = sub_1BB86C8B0();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v10;
  *(_QWORD *)(v15 + 24) = v12;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B3020, (uint64_t (*)(uint64_t))sub_1BA81D288, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for CachedText);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = 0xC04E000000000000;
  v17 = v26;
  v18 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  v20 = (void *)v19(v10, v12, v17, v18);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v16 + *(_QWORD *)(*v16 + 120)) = v20;
  *(_QWORD *)((char *)v16 + *(_QWORD *)(*v16 + 136)) = v20;
  v21 = v20;
  sub_1BB86C8A4();
  LOBYTE(v12) = objc_msgSend((id)objc_opt_self(), sel_isMainThread);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  *((_BYTE *)v16 + qword_1ED3B2F88) = v12;
  sub_1BA646EFC((uint64_t)v7, (uint64_t)v16 + qword_1ED3B2F90, (unint64_t *)&qword_1ED3B0540, v14);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = sub_1BB20863C;
  v22[3] = v15;
  v22[4] = v21;
  v16[3] = sub_1BB2063AC;
  v16[4] = v22;
  return v16;
}

id sub_1BA76FC40()
{
  return sub_1BA76FC60();
}

id sub_1BA76FC60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  uint64_t inited;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v25;

  v1 = sub_1BB86C9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 24);
  sub_1BB86C994();
  v6 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v5);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v9 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v5;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = *(void **)(v0 + 72);
  v12 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v11;
  v13 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 112) = v13;
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v6;
  swift_bridgeObjectRetain();
  v14 = v8;
  v15 = v5;
  v16 = v10;
  v17 = v11;
  v18 = v13;
  v19 = v6;
  sub_1BA76E82C(inited);
  v20 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v21 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v22 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

  return v23;
}

id _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  v3 = sub_1BB86C928();
  if (v4)
  {
    if (v3 == 28261 && v4 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      v6 = objc_msgSend(a1, sel_fontName);
      v7 = sub_1BB8729A0();
      v9 = v8;

      sub_1BA7114A0();
      LOBYTE(v6) = sub_1BB873B40();
      swift_bridgeObjectRelease();
      objc_msgSend(a1, sel_pointSize, 1802859076, 0xE400000000000000, v7, v9);
      if ((v6 & 1) != 0)
      {
        objc_msgSend(v2, sel_setMinimumLineHeight_);
        objc_msgSend(a1, sel_pointSize);
        v12 = v11;
LABEL_12:
        objc_msgSend(v2, sel_setMaximumLineHeight_, v12);
        goto LABEL_13;
      }
      v17 = 1.1;
LABEL_11:
      v12 = ceil(v10 * v17);
      objc_msgSend(v2, sel_setMinimumLineHeight_, v12);
      goto LABEL_12;
    }
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      goto LABEL_6;
  }
  v13 = objc_msgSend(a1, sel_fontName);
  v14 = sub_1BB8729A0();
  v16 = v15;

  v22 = v14;
  v23 = v16;
  v20 = 1802859076;
  v21 = 0xE400000000000000;
  sub_1BA7114A0();
  LOBYTE(v13) = sub_1BB873B40();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
  {
    objc_msgSend(a1, sel_pointSize, 1802859076, 0xE400000000000000, v14, v16);
    v17 = 1.16;
    goto LABEL_11;
  }
LABEL_13:
  objc_msgSend(v2, sel_setLineBreakMode_, 4, v20, v21, v22, v23);
  LODWORD(v18) = 1036831949;
  objc_msgSend(v2, sel_setHyphenationFactor_, v18);
  return v2;
}

uint64_t sub_1BA7700D8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int64_t v47;

  v3 = v2;
  v5 = *v2;
  sub_1BA77043C();
  v45 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v43 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v41 = v3;
  v42 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  v44 = v5;
  while (1)
  {
    if (v10)
    {
      v46 = (v10 - 1) & v10;
      v47 = v13;
      v20 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42)
      break;
    v22 = v43;
    v23 = v43[v21];
    v24 = v13 + 1;
    if (!v23)
    {
      v24 = v13 + 2;
      if (v13 + 2 >= v42)
        goto LABEL_33;
      v23 = v43[v24];
      if (!v23)
      {
        v25 = v13 + 3;
        if (v13 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          v3 = v41;
          if ((v45 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            v24 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v24 >= v42)
              goto LABEL_33;
            v23 = v43[v24];
            ++v25;
            if (v23)
              goto LABEL_30;
          }
        }
        v24 = v13 + 3;
      }
    }
LABEL_30:
    v46 = (v23 - 1) & v23;
    v47 = v24;
    v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    v30 = *(_QWORD *)(v5 + 56);
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v32 = *v31;
    v33 = v31[1];
    v34 = v30 + 40 * v20;
    v35 = *(_QWORD *)v34;
    v36 = *(_QWORD *)(v34 + 8);
    v37 = *(_QWORD *)(v34 + 16);
    v38 = *(_QWORD *)(v34 + 24);
    v39 = *(_BYTE *)(v34 + 32);
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1BA74AFD8(v35, v36, v37, v38, v39);
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27)
          v16 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v33;
    v19 = *(_QWORD *)(v7 + 56) + 40 * v17;
    *(_QWORD *)v19 = v35;
    *(_QWORD *)(v19 + 8) = v36;
    *(_QWORD *)(v19 + 16) = v37;
    *(_QWORD *)(v19 + 24) = v38;
    *(_BYTE *)(v19 + 32) = v39;
    ++*(_QWORD *)(v7 + 16);
    v5 = v44;
    v10 = v46;
    v13 = v47;
  }
  swift_release();
  v3 = v41;
  v22 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v40 = 1 << *(_BYTE *)(v5 + 32);
  if (v40 >= 64)
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v40;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1BA77043C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9AE0)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9AE0);
  }
}

unint64_t sub_1BA7704A0()
{
  unint64_t result;

  result = qword_1ED3C21E0;
  if (!qword_1ED3C21E0)
  {
    type metadata accessor for FormatLayoutView();
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1ED3C21E0);
  }
  return result;
}

uint64_t sub_1BA7704F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unint64_t *a9@<X8>, double a10@<D0>, unsigned __int8 a11)
{
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int16 v38;
  unsigned __int16 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  void (*v72)(unint64_t, char *, uint64_t);
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(_QWORD, _QWORD, _QWORD);
  void (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t *v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t result;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unsigned int *v117;
  uint64_t v118;
  uint64_t v119;
  char **v120;
  uint64_t v121;
  uint64_t v122;
  char **v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t, uint64_t);
  _QWORD *v130;
  unint64_t v131;
  void (*v132)(_QWORD, _QWORD, _QWORD);
  char *v133;
  char *v134;
  char **v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  double *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(char *, uint64_t, uint64_t);
  void (*v157)(_QWORD, _QWORD, _QWORD);
  uint64_t v158;
  uint64_t v159;
  int64_t *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(_QWORD, _QWORD, _QWORD);
  char v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  __int16 v187;
  char v188;
  uint64_t v189;

  v142 = a8;
  v141 = a7;
  v161 = a6;
  v169 = a5;
  v172 = a4;
  v173 = a3;
  v171 = a2;
  v151 = a9;
  v13 = sub_1BB870FA8();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB640];
  v138 = v13;
  v139 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v133 = (char *)&v133 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = sub_1BB871170();
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v135 = (char **)((char *)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3BBF60, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v134 = (char *)&v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v140 = (double *)((char *)&v133 - v20);
  v166 = sub_1BB86D660();
  v150 = *(_QWORD *)(v166 - 8);
  MEMORY[0x1E0C80A78](v166);
  v148 = (char *)&v133 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = v21;
  MEMORY[0x1E0C80A78](v22);
  v165 = (char *)&v133 - v23;
  v164 = sub_1BB86D7A4();
  v149 = *(_QWORD *)(v164 - 8);
  MEMORY[0x1E0C80A78](v164);
  v144 = (char *)&v133 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = v24;
  MEMORY[0x1E0C80A78](v25);
  v163 = (char *)&v133 - v26;
  v167 = type metadata accessor for FormatDecorationContext();
  MEMORY[0x1E0C80A78](v167);
  v146 = (uint64_t *)((char *)&v133 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v28);
  v147 = (uint64_t)&v133 - v29;
  v30 = *(_QWORD *)(a1 + 8);
  v160 = *(int64_t **)a1;
  v31 = *(_QWORD *)(a1 + 24);
  v159 = *(_QWORD *)(a1 + 16);
  v32 = *(_QWORD *)(a1 + 40);
  v158 = *(_QWORD *)(a1 + 32);
  v33 = *(_QWORD *)(a1 + 48);
  v34 = *(_QWORD *)(a1 + 56);
  v157 = *(void (**)(_QWORD, _QWORD, _QWORD))(a1 + 64);
  LODWORD(v156) = *(unsigned __int8 *)(a1 + 72);
  v35 = *(_QWORD *)(a1 + 80);
  v36 = *(_QWORD *)(a1 + 88);
  v37 = *(_QWORD *)(a1 + 96);
  v38 = *(unsigned __int8 *)(a1 + 106);
  v168 = a1;
  v39 = *(_WORD *)(a1 + 104);
  LODWORD(v155) = v39;
  v40 = v39 | (v38 << 16);
  v174 = (unint64_t)v160;
  v175 = v30;
  v176 = v159;
  v177 = v31;
  v178 = v158;
  v179 = v32;
  v153 = v33;
  v180 = v33;
  v181 = v34;
  v182 = v157;
  v183 = (char)v156;
  v184 = v35;
  v185 = v36;
  v186 = v37;
  LODWORD(v154) = v38;
  v188 = v38;
  v187 = v39;
  v152 = v33 & 0xFFFFFFFFFFFFFFFLL;
  v170 = v172[13];
  v41 = v170;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA771834(v37, v40);
  v169 = sub_1BB51F6C4(v173, (uint64_t)&v174, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA771864(v37, v40);
  v174 = (unint64_t)v160;
  v175 = v30;
  v176 = v159;
  v177 = v31;
  v178 = v158;
  v179 = v32;
  v180 = v153;
  v181 = v34;
  v182 = v157;
  v183 = (char)v156;
  v184 = v35;
  v185 = v36;
  v186 = v37;
  v188 = v154;
  v187 = v155;
  v160 = (int64_t *)v172[12];
  v159 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v158 = v32;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA771834(v37, v40);
  v42 = v162;
  v43 = sub_1BB51EC1C(v173, v161, (uint64_t)&v174, v170, v160, v169);
  v171 = v42;
  if (v42)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA771864(v37, v40);
    swift_bridgeObjectRelease();
  }
  else
  {
    LODWORD(v162) = a11;
    v161 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA771864(v37, v40);
    LODWORD(v160) = *((unsigned __int8 *)v172 + 32);
    LODWORD(v159) = *((unsigned __int8 *)v172 + 33);
    v44 = v172[6];
    v158 = v172[5];
    v154 = v44;
    v45 = (void *)v172[8];
    v153 = v172[7];
    v46 = v153;
    v48 = v172[9];
    v47 = v172[10];
    v152 = v172[11];
    v172 = (_QWORD *)v172[3];
    v156 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 16);
    v156(v163, v141, v164);
    v157 = *(void (**)(_QWORD, _QWORD, _QWORD))(v150 + 16);
    v157(v165, v142, v166);
    type metadata accessor for FormatVariableCollection();
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = MEMORY[0x1E0DEE9E0];
    type metadata accessor for FormatOptionCollection();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v50 = v173;
    swift_retain();
    sub_1BA70A884(v46, v45);
    v51 = v172;
    v52 = sub_1BA6E1E0C(v161, v49);
    v155 = v52;
    swift_bridgeObjectRelease();
    v172 = (_QWORD *)sub_1BA6CAEAC(v170);
    v53 = v146;
    *v146 = v50;
    *((_BYTE *)v53 + 8) = (_BYTE)v160;
    *((_BYTE *)v53 + 9) = v159;
    v54 = v154;
    v53[2] = v158;
    v53[3] = v54;
    v53[4] = v153;
    v53[5] = (uint64_t)v45;
    v53[6] = v48;
    v53[7] = v47;
    v53[8] = v152;
    v53[9] = (uint64_t)v51;
    v55 = v167;
    v56 = v163;
    v57 = v164;
    v58 = (void (*)(char *, char *, uint64_t))v156;
    v156((char *)v53 + *(int *)(v167 + 28), (uint64_t)v163, v164);
    v59 = v165;
    v60 = v166;
    v61 = (void (*)(char *, char *, uint64_t))v157;
    v157((char *)v53 + *(int *)(v55 + 32), v165, v166);
    *(uint64_t *)((char *)v53 + *(int *)(v55 + 36)) = v52;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBE40, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3258]);
    v170 = v62;
    v63 = v144;
    v58(v144, v56, v57);
    v61(v148, v59, v60);
    v64 = v149;
    v65 = (*(unsigned __int8 *)(v149 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80);
    v66 = v150;
    v67 = (v143 + *(unsigned __int8 *)(v150 + 80) + v65) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
    v68 = (v145 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
    v69 = swift_allocObject();
    *(_BYTE *)(v69 + 16) = v162;
    v70 = v69 + v65;
    v71 = v64;
    v72 = *(void (**)(unint64_t, char *, uint64_t))(v64 + 32);
    v73 = v164;
    v72(v70, v63, v164);
    v74 = v69 + v67;
    v75 = v166;
    (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v74, v148, v166);
    *(_QWORD *)(v69 + v68) = v155;
    *(_QWORD *)(v69 + ((v68 + 15) & 0xFFFFFFFFFFFFFFF8)) = v169;
    swift_retain();
    v76 = sub_1BB86DD98();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v165, v75);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v163, v73);
    v77 = v167;
    *(uint64_t *)((char *)v53 + *(int *)(v167 + 40)) = v76;
    *(uint64_t *)((char *)v53 + *(int *)(v77 + 44)) = (uint64_t)v172;
    v78 = (uint64_t)v53;
    v79 = v147;
    sub_1BA5193C4(v78, v147, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    v80 = *(_QWORD *)(v168 + 8);
    v161 = *(_QWORD *)v168;
    v81 = *(_QWORD *)(v168 + 24);
    v160 = *(int64_t **)(v168 + 16);
    v82 = *(char **)(v168 + 40);
    v159 = *(_QWORD *)(v168 + 32);
    v83 = *(_QWORD *)(v168 + 48);
    v84 = *(_QWORD *)(v168 + 56);
    v163 = *(char **)(v168 + 64);
    LODWORD(v162) = *(unsigned __int8 *)(v168 + 72);
    v86 = *(void (**)(char *, uint64_t, uint64_t))(v168 + 80);
    v85 = *(void (**)(_QWORD, _QWORD, _QWORD))(v168 + 88);
    v87 = *(unsigned __int16 *)(v168 + 104) | (*(unsigned __int8 *)(v168 + 106) << 16);
    v88 = *(_QWORD **)(v168 + 96);
    v165 = (char *)(v83 & 0xFFFFFFFFFFFFFFFLL);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v172 = v88;
    LODWORD(v169) = v87;
    sub_1BA771834((uint64_t)v88, v87);
    v166 = v80;
    swift_bridgeObjectRetain();
    v170 = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v89 = v171;
    sub_1BA771C34(v79, v83);
    v90 = v167;
    if (v89)
    {
      v171 = v89;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      sub_1BA771864((uint64_t)v172, v169);
      sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
    }
    else
    {
      v164 = v174;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v104 = (uint64_t)v172;
      v105 = v169;
      sub_1BA771834((uint64_t)v172, v169);
      v157 = v85;
      swift_bridgeObjectRelease();
      v156 = v86;
      swift_bridgeObjectRelease();
      v158 = v84;
      swift_bridgeObjectRelease();
      swift_release();
      v165 = v82;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v106 = v166;
      swift_bridgeObjectRelease();
      sub_1BA771864(v104, v105);
      if (BYTE2(v105) == 255)
      {
        v171 = 0;
        v107 = 1;
        v108 = v140;
        v109 = v139;
      }
      else
      {
        v110 = v106;
        v111 = v147;
        v112 = v147 + *(int *)(v90 + 32);
        v113 = (uint64_t)v172;
        sub_1BA77A170((uint64_t)v172, v105, SBYTE2(v105), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        v108 = v140;
        sub_1BAC8999C(v111, v112, v113, v105 & 0xFFFFFF, v140, a10);
        v109 = v139;
        v171 = 0;
        sub_1BA771864(v113, v105);
        v107 = 0;
        v106 = v110;
      }
      v114 = v138;
      (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(v109 + 56))(v108, v107, 1, v138);
      v189 = v164;
      v115 = (uint64_t)v134;
      v116 = v165;
      if ((v162 & 1) != 0)
      {
        v117 = (unsigned int *)MEMORY[0x1E0DBBB50];
        v118 = v137;
        v119 = v136;
        v120 = v135;
      }
      else
      {
        v120 = v135;
        *v135 = v163;
        v117 = (unsigned int *)MEMORY[0x1E0DBBB48];
        v118 = v137;
        v119 = v136;
      }
      (*(void (**)(char **, _QWORD, uint64_t))(v119 + 104))(v120, *v117, v118);
      sub_1BA77A080((uint64_t)v108, v115);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v115, 1, v114) == 1)
      {
        v121 = (uint64_t)v133;
        (*(void (**)(char *, _QWORD, uint64_t))(v109 + 104))(v133, *MEMORY[0x1E0DBB628], v114);
        swift_retain();
        sub_1BA77A02C(v115);
      }
      else
      {
        v121 = (uint64_t)v133;
        (*(void (**)(char *, uint64_t, uint64_t))(v109 + 32))(v133, v115, v114);
        swift_retain();
      }
      v122 = v147;
      v123 = v135;
      v124 = v171;
      sub_1BA7720C8(v147, (uint64_t)v135, v121, (uint64_t)&v174);
      v125 = v169;
      if (!v124)
      {
        v126 = v122;
        (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v121, v138);
        (*(void (**)(char **, uint64_t))(v136 + 8))(v123, v137);
        swift_release();
        v103 = v174;
        v127 = v170;
        if ((~v174 & 0xF000000000000007) != 0)
        {
          v171 = swift_allocObject();
          v173 = 0;
          v168 = v164 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain();
          v128 = v158;
          swift_bridgeObjectRetain();
          v129 = v156;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA771834((uint64_t)v172, v125);
          sub_1BA6E6C68(v103);
          sub_1BB86DD80();
          sub_1BA6E6CD8(v103);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v130 = v172;
          sub_1BA771864((uint64_t)v172, v125);
          v131 = v174;
          sub_1BA77A02C((uint64_t)v140);
          sub_1BA4A2E80(v147, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
          type metadata accessor for FormatDecorationItem();
          result = swift_allocObject();
          *(_QWORD *)(result + 16) = v161;
          *(_QWORD *)(result + 24) = v106;
          *(_QWORD *)(result + 32) = v160;
          *(_QWORD *)(result + 40) = v127;
          *(_QWORD *)(result + 48) = v159;
          *(_QWORD *)(result + 56) = v116;
          *(_QWORD *)(result + 64) = v164;
          *(_QWORD *)(result + 72) = v128;
          *(_QWORD *)(result + 80) = v163;
          *(_BYTE *)(result + 88) = v162;
          v132 = v157;
          *(_QWORD *)(result + 96) = v129;
          *(_QWORD *)(result + 104) = v132;
          *(_QWORD *)(result + 112) = v130;
          *(_BYTE *)(result + 122) = BYTE2(v125);
          *(_WORD *)(result + 120) = v125;
          *(_QWORD *)(result + 128) = v103;
          *(_QWORD *)(result + 136) = v131;
          v103 = v171 | 0xA000000000000000;
          *(_QWORD *)(v171 + 16) = result;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1BA771864((uint64_t)v172, v125);
          sub_1BA77A02C((uint64_t)v140);
          result = sub_1BA4A2E80(v126, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
        }
        v91 = v151;
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BA771864((uint64_t)v172, v125);
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v121, v138);
      (*(void (**)(char **, uint64_t))(v136 + 8))(v123, v137);
      swift_release();
      sub_1BA77A02C((uint64_t)v140);
      sub_1BA4A2E80(v122, (uint64_t (*)(_QWORD))type metadata accessor for FormatDecorationContext);
      v171 = v124;
    }
  }
  v91 = v151;
  v92 = v173;
  if (qword_1ED3BA7F8 != -1)
    swift_once();
  v93 = (id)qword_1ED476860;
  v94 = sub_1BB8732F4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v95 = swift_allocObject();
  *(_OWORD *)(v95 + 16) = xmmword_1BB87A390;
  v97 = *(_QWORD *)v168;
  v96 = *(_QWORD *)(v168 + 8);
  v98 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v95 + 56) = MEMORY[0x1E0DEA968];
  v99 = sub_1BA6A2D8C();
  *(_QWORD *)(v95 + 32) = v97;
  *(_QWORD *)(v95 + 40) = v96;
  v100 = *(_QWORD *)(v92 + 16);
  v101 = *(_QWORD *)(v92 + 24);
  *(_QWORD *)(v95 + 96) = v98;
  *(_QWORD *)(v95 + 104) = v99;
  *(_QWORD *)(v95 + 64) = v99;
  *(_QWORD *)(v95 + 72) = v100;
  *(_QWORD *)(v95 + 80) = v101;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB86EF44("Failed create decoration %{public}@ in package %{public}@; will be ignored",
    74,
    2,
    &dword_1BA493000,
    v93,
    v94,
    v95);

  result = swift_bridgeObjectRelease();
  v103 = 0xF000000000000007;
LABEL_8:
  *v91 = v103;
  return result;
}

uint64_t sub_1BA771834(uint64_t result, uint64_t a2)
{
  if (BYTE2(a2) != 255)
    return sub_1BA77A170(result, a2, SBYTE2(a2), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
  return result;
}

uint64_t sub_1BA771864(uint64_t result, uint64_t a2)
{
  if (BYTE2(a2) != 255)
    return sub_1BA77A170(result, a2, SBYTE2(a2), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
  return result;
}

uint64_t type metadata accessor for FormatVariableCollection()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatOptionCollection()
{
  return objc_opt_self();
}

uint64_t sub_1BA7718D4(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t *v8;
  void *v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  __int128 v34[2];
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  __int128 v40[2];
  uint64_t v41;

  v41 = MEMORY[0x1E0DEE9E8];
  result = sub_1BA6CAEAC(a1);
  v2 = result;
  v3 = 0;
  v4 = *(_QWORD *)(result + 64);
  v32 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & v4;
  v33 = (unint64_t)(v5 + 63) >> 6;
  v8 = (unint64_t *)&qword_1ED3B17D0;
  v9 = &protocol descriptor for FeedGroupItemType;
  v31 = result;
  if ((v6 & v4) != 0)
    goto LABEL_6;
LABEL_7:
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 < v33)
    {
      v13 = *(_QWORD *)(v32 + 8 * v12);
      ++v3;
      if (v13)
        goto LABEL_22;
      v3 = v12 + 1;
      if (v12 + 1 >= v33)
        goto LABEL_32;
      v13 = *(_QWORD *)(v32 + 8 * v3);
      if (v13)
        goto LABEL_22;
      v3 = v12 + 2;
      if (v12 + 2 >= v33)
        goto LABEL_32;
      v13 = *(_QWORD *)(v32 + 8 * v3);
      if (v13)
        goto LABEL_22;
      v3 = v12 + 3;
      if (v12 + 3 >= v33)
        goto LABEL_32;
      v13 = *(_QWORD *)(v32 + 8 * v3);
      if (v13)
      {
LABEL_22:
        v7 = (v13 - 1) & v13;
        for (i = __clz(__rbit64(v13)) + (v3 << 6); ; i = v10 | (v3 << 6))
        {
          sub_1BA4C010C(*(_QWORD *)(v2 + 56) + 40 * i, (uint64_t)v40);
          sub_1BA4CECCC(v40, (uint64_t)&v36);
          sub_1BA4D9CE8(0, v8);
          sub_1BA4D9CE8(0, &qword_1ED3CCE90);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v15 = v9;
            v16 = v8;
            sub_1BA4CECCC(v34, (uint64_t)v37);
            v17 = v38;
            v18 = v39;
            __swift_project_boxed_opaque_existential_1(v37, v38);
            v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
            v20 = *(_QWORD *)(v19 + 16);
            if (v20)
            {
              v21 = (uint64_t *)(v19 + 40);
              do
              {
                v22 = *(v21 - 1);
                v23 = *v21;
                swift_bridgeObjectRetain();
                sub_1BA6EE5AC(&v36, v22, v23);
                swift_bridgeObjectRelease();
                v21 += 2;
                --v20;
              }
              while (v20);
            }
            swift_bridgeObjectRelease();
            v24 = v38;
            v25 = v39;
            __swift_project_boxed_opaque_existential_1(v37, v38);
            v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(v24, v25);
            v27 = *(_QWORD *)(v26 + 16);
            if (v27)
            {
              v28 = (uint64_t *)(v26 + 40);
              do
              {
                v29 = *(v28 - 1);
                v30 = *v28;
                swift_bridgeObjectRetain();
                sub_1BA6EE5AC(&v36, v29, v30);
                swift_bridgeObjectRelease();
                v28 += 2;
                --v27;
              }
              while (v27);
            }
            swift_bridgeObjectRelease();
            result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
            v8 = v16;
            v9 = v15;
            v2 = v31;
            if (!v7)
              goto LABEL_7;
          }
          else
          {
            v35 = 0;
            memset(v34, 0, sizeof(v34));
            result = sub_1BA4A2E80((uint64_t)v34, (uint64_t (*)(_QWORD))sub_1BA6D34CC);
            if (!v7)
              goto LABEL_7;
          }
LABEL_6:
          v10 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      v14 = v12 + 4;
      if (v14 < v33)
      {
        v13 = *(_QWORD *)(v32 + 8 * v14);
        if (v13)
        {
          v3 = v14;
          goto LABEL_22;
        }
        while (1)
        {
          v3 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_34;
          if (v3 >= v33)
            break;
          v13 = *(_QWORD *)(v32 + 8 * v3);
          ++v14;
          if (v13)
            goto LABEL_22;
        }
      }
    }
LABEL_32:
    swift_release();
    return v41;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void sub_1BA771C34(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA771C88(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *v2 = a2;
  return swift_retain();
}

void sub_1BA7720C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[106];

  v24[15] = a2;
  v24[16] = a3;
  v24[17] = a4;
  v24[18] = a1;
  v5 = type metadata accessor for FormatDecorationContext();
  MEMORY[0x1E0C80A78](v5);
  v24[5] = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v24[8] = (char *)v24 - v9;
  sub_1BA4B07F0(0, &qword_1ED3B0A28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB2E0], v7);
  MEMORY[0x1E0C80A78](v10);
  v24[7] = (char *)v24 - v11;
  v12 = sub_1BB870CE4();
  MEMORY[0x1E0C80A78](v12);
  v24[6] = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB870CC0();
  v24[10] = *(_QWORD *)(v14 - 8);
  v24[11] = v14;
  MEMORY[0x1E0C80A78](v14);
  v24[9] = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1BB870A80();
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v19 = sub_1BB8701EC();
  v24[3] = *(_QWORD *)(v19 - 8);
  v24[4] = v19;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v21 = sub_1BB870FA8();
  v24[13] = *(_QWORD *)(v21 - 8);
  v24[14] = v21;
  MEMORY[0x1E0C80A78](v21);
  v24[12] = (char *)v24 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BB871170();
  MEMORY[0x1E0C80A78](v23);
  __asm { BR              X11 }
}

uint64_t sub_1BA772398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v6 = v3;
  v7 = v2;
  v9 = *(_QWORD *)(a2 + 16);
  swift_retain();
  v10 = v9;
  v11 = *(_QWORD *)(v5 - 72);
  sub_1BA772DC0(*(_QWORD *)(v4 + 144), v10);
  if (v11)
    return swift_release();
  v13 = *(_QWORD *)(v4 + 464);
  sub_1BB870BB8();
  *(_QWORD *)(v5 - 72) = swift_allocBox();
  *(_QWORD *)(v4 + 464) = v13;
  FormatColor.color.getter();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 16))(v6, *(_QWORD *)(v4 + 120), a1);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v4 + 104) + 16))(*(_QWORD *)(v4 + 96), *(_QWORD *)(v4 + 128), *(_QWORD *)(v4 + 112));
  sub_1BB870BAC();
  swift_release();
  result = swift_release();
  **(_QWORD **)(v4 + 136) = *(_QWORD *)(v5 - 72);
  return result;
}

uint64_t type metadata accessor for FormatDecorationContext()
{
  uint64_t result;

  result = qword_1ED3B7130;
  if (!qword_1ED3B7130)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA772D64(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA74466C(a1, a2, a3, *v3, (unint64_t *)&qword_1ED3B9D80, (uint64_t)&type metadata for FormatColor);
  *v3 = (char *)result;
  return result;
}

void sub_1BA772D90(uint64_t *a1, _QWORD *a2)
{
  sub_1BB242824(a1, a2);
}

void sub_1BA772DA4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  sub_1BA773548(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1BA772DC0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA772E14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *v2 = a2;
  return swift_retain();
}

void sub_1BA772E50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = swift_allocObject();
  sub_1BA772DC0(v4, v7);
  if (v2)
  {
    swift_deallocUninitializedObject();
  }
  else
  {
    sub_1BA772DC0(v4, v6);
    v9 = *(_QWORD *)(v5 - 128);
    *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 - 120);
    *(_QWORD *)(v8 + 24) = v9;
    *v3 = v8 | 0x3000000000000000;
  }
  JUMPOUT(0x1BA772E20);
}

void sub_1BA773548(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  sub_1BA772DC0(a2, *a1);
  if (v3)
    *a3 = v3;
}

uint64_t type metadata accessor for FormatMicaSectionDecorationItem()
{
  uint64_t result;

  result = qword_1ED3BB3A8;
  if (!qword_1ED3BB3A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA7735BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BA880)
  {
    sub_1BB86FBD4();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BA880);
  }
}

void sub_1BA773610(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  sub_1BB67CD38(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1BA77362C(uint64_t *a1, _QWORD *a2)
{
  sub_1BB68075C(a1, a2);
}

uint64_t destroy for FormatDecorationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FormatDecorationItem()
{
  return objc_opt_self();
}

uint64_t sub_1BA773734@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  unint64_t *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int16 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t result;
  _QWORD *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v127 = a1;
  v102 = a2;
  sub_1BA7754CC(0);
  MEMORY[0x1E0C80A78](v3);
  v105 = (uint64_t)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v124 = (uint64_t)&v97 - v6;
  v107 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  MEMORY[0x1E0C80A78](v107);
  v106 = (uint64_t)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v100 = (char *)&v97 - v9;
  MEMORY[0x1E0C80A78](v10);
  v99 = (char *)&v97 - v11;
  MEMORY[0x1E0C80A78](v12);
  v98 = (uint64_t)&v97 - v13;
  MEMORY[0x1E0C80A78](v14);
  v103 = (uint64_t)&v97 - v15;
  MEMORY[0x1E0C80A78](v16);
  v126 = (uint64_t)&v97 - v17;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v97 - v19;
  v101 = *v2;
  v21 = v2[2];
  v125 = v2[1];
  v22 = v2[4];
  v112 = v2[3];
  v23 = v2[5];
  v24 = v2[6];
  v25 = v2[7];
  v26 = v2[8];
  v27 = v2[9];
  v28 = *((unsigned __int8 *)v2 + 80);
  sub_1BA4C2DD8(v127, (uint64_t)&v97 - v19, v29);
  v114 = v21;
  v123 = v21;
  v30 = v112;
  v121 = v22;
  v122 = v112;
  v119 = v24;
  v120 = v23;
  v117 = v26;
  v118 = v25;
  v116 = v27;
  LODWORD(v113) = v28;
  v115 = v28;
  if ((v28 & 0xFE) == 0x7E)
  {
    v31 = *((_QWORD *)v20 + 2);
    v32 = *((_QWORD *)v20 + 3);
    v33 = *((_QWORD *)v20 + 4);
    v34 = *((_QWORD *)v20 + 5);
    v35 = *((_QWORD *)v20 + 6);
    v36 = *((_QWORD *)v20 + 7);
    v37 = *((_QWORD *)v20 + 8);
    v38 = *((_QWORD *)v20 + 9);
    v115 = v20[80];
    v122 = v32;
    v123 = v31;
    v120 = v34;
    v121 = v33;
    v118 = v36;
    v119 = v35;
    v116 = v38;
    v117 = v37;
    sub_1BA7643E8(v31, v32, v33, v34, v35, v36, v37, v38, v115, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  }
  swift_bridgeObjectRetain();
  sub_1BA7643E8(v114, v30, v22, v23, v24, v25, v26, v27, v113, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatItemNodeStyle.Selector);
  v39 = v2[11];
  v40 = v2[12];
  v41 = v2[13];
  v42 = v2[14];
  v43 = v2[15];
  v44 = v2[16];
  v45 = v2[17];
  v46 = *((unsigned __int8 *)v2 + 144);
  sub_1BA4C2DD8(v127, v126, type metadata accessor for FormatItemNodeStyle.Selector);
  v47 = v39;
  v113 = v41;
  v114 = v40;
  v111 = v43;
  v112 = v42;
  v109 = v45;
  v110 = v44;
  v108 = v46;
  if (v46 == 255)
  {
    v47 = *(_QWORD *)(v126 + 88);
    v48 = *(_QWORD *)(v126 + 96);
    v49 = *(_QWORD *)(v126 + 112);
    v50 = *(_QWORD *)(v126 + 120);
    v51 = *(_QWORD *)(v126 + 128);
    v52 = *(_QWORD *)(v126 + 136);
    v53 = *(unsigned __int8 *)(v126 + 144);
    v113 = *(_QWORD *)(v126 + 104);
    v114 = v48;
    v111 = v50;
    v112 = v49;
    v109 = v52;
    v110 = v51;
    v108 = v53;
    sub_1BA764498(v47, v48, v113, v49, v50, v51, v52, v53);
  }
  v104 = v47;
  sub_1BA764498(v39, v40, v41, v42, v43, v44, v45, v46);
  sub_1BA4A2E80(v126, type metadata accessor for FormatItemNodeStyle.Selector);
  v54 = (int *)v107;
  v55 = v105;
  sub_1BA4C2DD8((uint64_t)v2 + *(int *)(v107 + 28), v105, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  v56 = v127;
  v57 = v103;
  sub_1BA4C2DD8(v127, v103, type metadata accessor for FormatItemNodeStyle.Selector);
  v58 = type metadata accessor for FormatItemNodeAction();
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v55, 1, v58) == 1)
  {
    sub_1BA4C2DD8(v57 + v54[7], v124, (uint64_t (*)(_QWORD))sub_1BA7754CC);
    sub_1BA4A2E80(v57, type metadata accessor for FormatItemNodeStyle.Selector);
    sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  }
  else
  {
    sub_1BA4A2E80(v57, type metadata accessor for FormatItemNodeStyle.Selector);
    v60 = v55;
    v61 = v124;
    sub_1BA5193C4(v60, v124, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v58);
  }
  v62 = (uint64_t)v100;
  v63 = (uint64_t)v99;
  v64 = v98;
  v65 = *((unsigned __int8 *)v2 + v54[8]);
  sub_1BA4C2DD8(v56, v98, type metadata accessor for FormatItemNodeStyle.Selector);
  if (v65 == 2)
    v65 = *(unsigned __int8 *)(v64 + v54[8]);
  LODWORD(v126) = v65;
  sub_1BA4A2E80(v64, type metadata accessor for FormatItemNodeStyle.Selector);
  v66 = *((unsigned __int8 *)v2 + v54[9]);
  sub_1BA4C2DD8(v56, v63, type metadata accessor for FormatItemNodeStyle.Selector);
  if (v66 == 2)
    v66 = *(unsigned __int8 *)(v63 + v54[9]);
  LODWORD(v105) = v66;
  sub_1BA4A2E80(v63, type metadata accessor for FormatItemNodeStyle.Selector);
  v67 = (unint64_t *)((char *)v2 + v54[10]);
  v68 = *v67;
  v69 = v67[1];
  sub_1BA4C2DD8(v56, v62, type metadata accessor for FormatItemNodeStyle.Selector);
  v70 = v68;
  v71 = v69;
  v72 = v56;
  if (v68 == 3)
  {
    v73 = (unint64_t *)(v62 + v54[10]);
    v70 = *v73;
    v71 = v73[1];
    sub_1BA77567C(*v73);
  }
  v103 = v70;
  sub_1BA77567C(v68);
  sub_1BA4A2E80(v62, type metadata accessor for FormatItemNodeStyle.Selector);
  v74 = (uint64_t *)((char *)v2 + v54[11]);
  v75 = *v74;
  v76 = v74[1];
  v77 = v74[2];
  v78 = v74[3];
  v79 = *((_WORD *)v74 + 16);
  v80 = v72;
  v81 = v106;
  sub_1BA4C2DD8(v80, v106, type metadata accessor for FormatItemNodeStyle.Selector);
  if ((v79 & 0xFF00) == 0x400)
  {
    v82 = v81 + v54[11];
    v75 = *(_QWORD *)v82;
    v76 = *(_QWORD *)(v82 + 8);
    v77 = *(_QWORD *)(v82 + 16);
    v78 = *(_QWORD *)(v82 + 24);
    v79 = *(_WORD *)(v82 + 32);
  }
  v83 = v81;
  v84 = v101;
  v85 = v125;
  sub_1BA4A2E80(v83, type metadata accessor for FormatItemNodeStyle.Selector);
  v86 = v102;
  *v102 = v84;
  v86[1] = v85;
  v87 = v122;
  v86[2] = v123;
  v86[3] = v87;
  v88 = v120;
  v86[4] = v121;
  v86[5] = v88;
  v89 = v118;
  v86[6] = v119;
  v86[7] = v89;
  v90 = v116;
  v86[8] = v117;
  v86[9] = v90;
  *((_BYTE *)v86 + 80) = v115;
  v91 = v114;
  v86[11] = v104;
  v86[12] = v91;
  v92 = v112;
  v86[13] = v113;
  v86[14] = v92;
  v93 = v110;
  v86[15] = v111;
  v86[16] = v93;
  v86[17] = v109;
  *((_BYTE *)v86 + 144) = v108;
  result = sub_1BA5193C4(v124, (uint64_t)v86 + v54[7], (uint64_t (*)(_QWORD))sub_1BA7754CC);
  *((_BYTE *)v86 + v54[8]) = v126;
  *((_BYTE *)v86 + v54[9]) = v105;
  v95 = (_QWORD *)((char *)v86 + v54[10]);
  *v95 = v103;
  v95[1] = v71;
  v96 = (char *)v86 + v54[11];
  *(_QWORD *)v96 = v75;
  *((_QWORD *)v96 + 1) = v76;
  *((_QWORD *)v96 + 2) = v77;
  *((_QWORD *)v96 + 3) = v78;
  *((_WORD *)v96 + 16) = v79;
  return result;
}

uint64_t sub_1BA773DE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t *v64;
  int v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t);
  _QWORD *v81;
  int isUniquelyReferenced_nonNull_native;
  char v83;
  unint64_t v84;
  uint64_t v85;
  _BOOL8 v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  char v90;
  _QWORD *v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  int v119;
  char v120;
  unint64_t v121;
  uint64_t v122;
  _BOOL8 v123;
  uint64_t v124;
  char v125;
  unint64_t v126;
  char v127;
  _QWORD *v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  int v144;
  char v145;
  unint64_t v146;
  uint64_t v147;
  _BOOL8 v148;
  uint64_t v149;
  char v150;
  unint64_t v151;
  char v152;
  _QWORD *v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t *v160;
  unint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  __int128 *v175;
  __int16 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  unint64_t *v192;
  uint64_t v193;
  uint64_t result;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  uint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD *v241;
  uint64_t v242;
  __int128 v243;
  _QWORD *v244;
  _QWORD *v245;

  v202 = *(_QWORD *)v1;
  sub_1BA775764(0);
  MEMORY[0x1E0C80A78](v3);
  v235 = (uint64_t)&v195 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v236 = (uint64_t)&v195 - v6;
  v239 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  *(_QWORD *)&v243 = *(_QWORD *)(v239 - 8);
  MEMORY[0x1E0C80A78](v239);
  v242 = (uint64_t)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v233 = (uint64_t)&v195 - v9;
  MEMORY[0x1E0C80A78](v10);
  v230 = (uint64_t *)((char *)&v195 - v11);
  MEMORY[0x1E0C80A78](v12);
  v238 = (uint64_t)&v195 - v13;
  MEMORY[0x1E0C80A78](v14);
  v232 = (uint64_t *)((char *)&v195 - v15);
  MEMORY[0x1E0C80A78](v16);
  v237 = (uint64_t *)((char *)&v195 - v17);
  MEMORY[0x1E0C80A78](v18);
  v234 = (uint64_t)&v195 - v19;
  MEMORY[0x1E0C80A78](v20);
  v231 = (uint64_t)&v195 - v21;
  MEMORY[0x1E0C80A78](v22);
  v24 = (uint64_t *)((char *)&v195 - v23);
  sub_1BA7754CC(0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v195 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v228 = (uint64_t)&v195 - v29;
  swift_beginAccess();
  v201 = *(_QWORD *)(v1 + 16);
  v227 = *(_QWORD *)(v1 + 24);
  v30 = *(_QWORD *)(v1 + 48);
  v31 = *(_QWORD *)(v1 + 56);
  v33 = *(_QWORD *)(v1 + 64);
  v32 = *(_QWORD *)(v1 + 72);
  v34 = *(_QWORD *)(v1 + 80);
  v35 = *(_QWORD **)(v1 + 88);
  v36 = *(unsigned __int8 *)(v1 + 112);
  v212 = v30;
  v211 = v31;
  v225 = v33;
  v229 = v32;
  v224 = v32;
  v240 = v34;
  v223 = v34;
  v38 = *(_QWORD *)(v1 + 96);
  v37 = *(_QWORD *)(v1 + 104);
  v241 = v35;
  v222 = v35;
  v209 = v38;
  v221 = v38;
  v210 = v37;
  v220 = v37;
  v219 = v36;
  v197 = *(_QWORD *)(v1 + 32);
  v226 = *(_QWORD *)(v1 + 40);
  if ((v36 & 0xFE) == 0x7E)
  {
    v30 = *(_QWORD *)(a1 + 48);
    v31 = *(_QWORD *)(a1 + 56);
    v33 = *(_QWORD *)(a1 + 64);
    v39 = *(_QWORD *)(a1 + 72);
    v40 = *(_QWORD *)(a1 + 80);
    v41 = *(_QWORD *)(a1 + 88);
    v42 = *(_QWORD *)(a1 + 96);
    v43 = *(_QWORD *)(a1 + 104);
    v219 = *(unsigned __int8 *)(a1 + 112);
    v224 = v39;
    v223 = v40;
    v222 = (_QWORD *)v41;
    v221 = v42;
    v220 = v43;
    sub_1BA7643E8(v30, v31, v33, v39, v40, v41, v42, v43, v219, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  }
  v198 = v33;
  v199 = v31;
  v200 = v30;
  v45 = *(_QWORD *)(v1 + 120);
  v44 = *(_QWORD *)(v1 + 128);
  v46 = *(_QWORD *)(v1 + 136);
  v47 = *(_QWORD *)(v1 + 144);
  v48 = *(_QWORD *)(v1 + 152);
  v49 = *(_QWORD *)(v1 + 160);
  v50 = *(_QWORD *)(v1 + 168);
  v51 = v45;
  v208 = v44;
  v207 = v46;
  v218 = v46;
  v206 = v47;
  v217 = v47;
  v205 = v48;
  v216 = v48;
  v52 = *(unsigned __int8 *)(v1 + 176);
  v204 = v49;
  v215 = v49;
  v203 = v50;
  v213 = v50;
  v214 = v52;
  if (v52 == 255)
  {
    v51 = *(_QWORD *)(a1 + 120);
    v44 = *(_QWORD *)(a1 + 128);
    v53 = *(_QWORD *)(a1 + 144);
    v54 = *(_QWORD *)(a1 + 152);
    v55 = *(_QWORD *)(a1 + 160);
    v56 = *(_QWORD *)(a1 + 168);
    v57 = *(unsigned __int8 *)(a1 + 176);
    v218 = *(_QWORD *)(a1 + 136);
    v217 = v53;
    v216 = v54;
    v215 = v55;
    v213 = v56;
    v214 = v57;
    sub_1BA764498(v51, v44, v218, v53, v54, v55, v56, v57);
  }
  v195 = v44;
  v196 = v51;
  sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  v58 = type metadata accessor for FormatItemNodeAction();
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v27, 1, v58) == 1)
  {
    sub_1BA4C2DD8(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, v228, (uint64_t (*)(_QWORD))sub_1BA7754CC);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7643E8(v212, v211, v225, v229, v240, (uint64_t)v241, v209, v210, v36, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
    sub_1BA764498(v45, v208, v207, v206, v205, v204, v203, v52);
    sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  }
  else
  {
    v60 = (uint64_t)v27;
    v61 = v228;
    sub_1BA5193C4(v60, v228, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v58);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7643E8(v212, v211, v225, v229, v240, (uint64_t)v241, v209, v210, v36, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
    sub_1BA764498(v45, v208, v207, v206, v205, v204, v203, v52);
  }
  v62 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
  v63 = v243;
  v64 = v237;
  if (v62 == 2)
    v62 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
  LODWORD(v211) = v62;
  v65 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  if (v65 == 2)
    v65 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
  LODWORD(v210) = v65;
  v66 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  v67 = v66;
  v68 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
  if (v66 == 3)
  {
    v67 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    v68 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
    sub_1BA77567C(v67);
  }
  v208 = v68;
  v209 = v67;
  v69 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  v70 = *v69;
  v71 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  v72 = *v71;
  v245 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v73 = *(_QWORD *)(v70 + 16);
  if (__OFADD__(v73, *(_QWORD *)(v72 + 16)))
  {
LABEL_92:
    __break(1u);
LABEL_93:
    result = sub_1BB874560();
    __break(1u);
    return result;
  }
  v212 = *(_QWORD *)(v72 + 16);
  v207 = v1;
  v206 = a1;
  v74 = v72;
  sub_1BA77567C(v66);
  sub_1BA7756FC();
  swift_bridgeObjectRetain();
  v229 = v74;
  swift_bridgeObjectRetain();
  sub_1BB8727C0();
  v241 = sub_1BA6E6D30(0, v73, 0, MEMORY[0x1E0DEE9D8]);
  v75 = *(_QWORD *)(v70 + 16);
  v225 = v70;
  if (!v75)
    goto LABEL_32;
  v76 = v70 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
  v240 = *(_QWORD *)(v63 + 72);
  swift_bridgeObjectRetain();
  v77 = type metadata accessor for FormatItemNodeStyle.Selector;
  do
  {
    sub_1BA4C2DD8(v76, (uint64_t)v24, v77);
    v79 = *v24;
    v78 = v24[1];
    v80 = v77;
    sub_1BA4C2DD8((uint64_t)v24, v242, v77);
    swift_bridgeObjectRetain();
    v81 = v245;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v244 = v81;
    v84 = sub_1BA6E35A8(v79, v78);
    v85 = v81[2];
    v86 = (v83 & 1) == 0;
    v87 = v85 + v86;
    if (__OFADD__(v85, v86))
    {
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
      goto LABEL_92;
    }
    v88 = v83;
    if (v81[3] >= v87)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v91 = v244;
        if ((v83 & 1) != 0)
          goto LABEL_24;
      }
      else
      {
        sub_1BB4C8330();
        v91 = v244;
        if ((v88 & 1) != 0)
          goto LABEL_24;
      }
    }
    else
    {
      sub_1BB4B863C(v87, isUniquelyReferenced_nonNull_native);
      v89 = sub_1BA6E35A8(v79, v78);
      if ((v88 & 1) != (v90 & 1))
        goto LABEL_93;
      v84 = v89;
      v91 = v244;
      if ((v88 & 1) != 0)
      {
LABEL_24:
        sub_1BA775780(v242, v91[7] + v84 * v240);
        v77 = v80;
        goto LABEL_28;
      }
    }
    v91[(v84 >> 6) + 8] |= 1 << v84;
    v92 = (uint64_t *)(v91[6] + 16 * v84);
    *v92 = v79;
    v92[1] = v78;
    v93 = v91[7] + v84 * v240;
    v77 = v80;
    sub_1BA5193C4(v242, v93, v80);
    v94 = v91[2];
    v95 = __OFADD__(v94, 1);
    v96 = v94 + 1;
    if (v95)
      goto LABEL_88;
    v91[2] = v96;
    swift_bridgeObjectRetain();
LABEL_28:
    v245 = v91;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v98 = *v24;
    v97 = v24[1];
    v99 = v241[2];
    v100 = v241[3];
    swift_bridgeObjectRetain();
    if (v99 >= v100 >> 1)
      v241 = sub_1BA6E6D30((_QWORD *)(v100 > 1), v99 + 1, 1, v241);
    v101 = v241;
    v241[2] = v99 + 1;
    v102 = &v101[2 * v99];
    v102[4] = v98;
    v102[5] = v97;
    sub_1BA4A2E80((uint64_t)v24, v77);
    v76 += v240;
    --v75;
  }
  while (v75);
  swift_bridgeObjectRelease();
  v63 = v243;
  v64 = v237;
LABEL_32:
  v103 = sub_1BA6E6D30(0, v212, 0, MEMORY[0x1E0DEE9D8]);
  v104 = *(_QWORD *)(v229 + 16);
  if (!v104)
    goto LABEL_66;
  v105 = v229 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
  v242 = *(_QWORD *)(v63 + 72);
  swift_bridgeObjectRetain();
  while (2)
  {
    sub_1BA4C2DD8(v105, (uint64_t)v64, type metadata accessor for FormatItemNodeStyle.Selector);
    v106 = v245;
    if (!v245[2])
    {
      v112 = v235;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v235, 1, 1, v239);
      goto LABEL_43;
    }
    v107 = *v64;
    v108 = v64[1];
    swift_bridgeObjectRetain();
    v109 = sub_1BA6E35A8(v107, v108);
    if ((v110 & 1) != 0)
    {
      v111 = v106[7] + v109 * v242;
      v112 = v235;
      sub_1BA4C2DD8(v111, v235, type metadata accessor for FormatItemNodeStyle.Selector);
      v113 = 0;
    }
    else
    {
      v113 = 1;
      v112 = v235;
    }
    v114 = v239;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v112, v113, 1, v239);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v112, 1, v114) == 1)
    {
LABEL_43:
      sub_1BA4A2E80(v112, (uint64_t (*)(_QWORD))sub_1BA775764);
      v115 = (uint64_t)v64;
      v116 = *v64;
      v117 = v64[1];
      sub_1BA4C2DD8(v115, v238, type metadata accessor for FormatItemNodeStyle.Selector);
      swift_bridgeObjectRetain();
      v118 = v245;
      v119 = swift_isUniquelyReferenced_nonNull_native();
      v244 = v118;
      v121 = sub_1BA6E35A8(v116, v117);
      v122 = v118[2];
      v123 = (v120 & 1) == 0;
      v124 = v122 + v123;
      if (__OFADD__(v122, v123))
        goto LABEL_87;
      v125 = v120;
      if (v118[3] >= v124)
      {
        if ((v119 & 1) == 0)
          sub_1BB4C8330();
      }
      else
      {
        sub_1BB4B863C(v124, v119);
        v126 = sub_1BA6E35A8(v116, v117);
        if ((v125 & 1) != (v127 & 1))
          goto LABEL_93;
        v121 = v126;
      }
      v128 = v244;
      if ((v125 & 1) != 0)
      {
        sub_1BA775780(v238, v244[7] + v121 * v242);
      }
      else
      {
        v244[(v121 >> 6) + 8] |= 1 << v121;
        v129 = (uint64_t *)(v128[6] + 16 * v121);
        *v129 = v116;
        v129[1] = v117;
        sub_1BA5193C4(v238, v128[7] + v121 * v242, type metadata accessor for FormatItemNodeStyle.Selector);
        v130 = v128[2];
        v95 = __OFADD__(v130, 1);
        v131 = v130 + 1;
        if (v95)
          goto LABEL_89;
        v128[2] = v131;
        swift_bridgeObjectRetain();
      }
      v245 = v128;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v64 = v237;
      v133 = *v237;
      v132 = v237[1];
      v134 = v103[2];
      v135 = v103[3];
      swift_bridgeObjectRetain();
      if (v134 >= v135 >> 1)
        v103 = sub_1BA6E6D30((_QWORD *)(v135 > 1), v134 + 1, 1, v103);
      v63 = v243;
      v103[2] = v134 + 1;
      v136 = &v103[2 * v134];
      v136[4] = v133;
      v136[5] = v132;
    }
    else
    {
      v137 = v112;
      v138 = v232;
      sub_1BA5193C4(v137, (uint64_t)v232, type metadata accessor for FormatItemNodeStyle.Selector);
      v139 = (uint64_t)v64;
      v140 = *v138;
      v141 = v138[1];
      swift_bridgeObjectRetain();
      v142 = v230;
      sub_1BA773734(v139, v230);
      sub_1BA5193C4((uint64_t)v142, v233, type metadata accessor for FormatItemNodeStyle.Selector);
      v143 = v245;
      v144 = swift_isUniquelyReferenced_nonNull_native();
      v244 = v143;
      v146 = sub_1BA6E35A8(v140, v141);
      v147 = v143[2];
      v148 = (v145 & 1) == 0;
      v149 = v147 + v148;
      if (__OFADD__(v147, v148))
        goto LABEL_90;
      v150 = v145;
      if (v143[3] >= v149)
      {
        if ((v144 & 1) == 0)
          sub_1BB4C8330();
      }
      else
      {
        sub_1BB4B863C(v149, v144);
        v151 = sub_1BA6E35A8(v140, v141);
        if ((v150 & 1) != (v152 & 1))
          goto LABEL_93;
        v146 = v151;
      }
      v153 = v244;
      if ((v150 & 1) != 0)
      {
        sub_1BA775780(v233, v244[7] + v146 * v242);
      }
      else
      {
        v244[(v146 >> 6) + 8] |= 1 << v146;
        v154 = (uint64_t *)(v153[6] + 16 * v146);
        *v154 = v140;
        v154[1] = v141;
        sub_1BA5193C4(v233, v153[7] + v146 * v242, type metadata accessor for FormatItemNodeStyle.Selector);
        v155 = v153[2];
        v95 = __OFADD__(v155, 1);
        v156 = v155 + 1;
        if (v95)
          goto LABEL_91;
        v153[2] = v156;
        swift_bridgeObjectRetain();
      }
      v245 = v153;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v232, type metadata accessor for FormatItemNodeStyle.Selector);
      v63 = v243;
      v64 = v237;
    }
    sub_1BA4A2E80((uint64_t)v64, type metadata accessor for FormatItemNodeStyle.Selector);
    v105 += v242;
    if (--v104)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
LABEL_66:
  v244 = v103;
  swift_bridgeObjectRetain();
  v157 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v157);
  v158 = v244;
  v159 = v244[2];
  if (v159)
  {
    v242 = (uint64_t)v103;
    swift_bridgeObjectRetain();
    v160 = v158 + 5;
    v161 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v163 = v245;
      if (v245[2])
      {
        v164 = *(v160 - 1);
        v165 = *v160;
        swift_bridgeObjectRetain();
        v166 = sub_1BA6E35A8(v164, v165);
        if ((v167 & 1) != 0)
        {
          v168 = v243;
          v162 = v236;
          sub_1BA4C2DD8(v163[7] + *(_QWORD *)(v243 + 72) * v166, v236, type metadata accessor for FormatItemNodeStyle.Selector);
          v169 = 0;
        }
        else
        {
          v169 = 1;
          v162 = v236;
          v168 = v243;
        }
        v170 = v239;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v168 + 56))(v162, v169, 1, v239);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v168 + 48))(v162, 1, v170) != 1)
        {
          v171 = v162;
          v172 = v231;
          sub_1BA5193C4(v171, v231, type metadata accessor for FormatItemNodeStyle.Selector);
          sub_1BA5193C4(v172, v234, type metadata accessor for FormatItemNodeStyle.Selector);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v161 = sub_1BA7756A4(0, *(_QWORD *)(v161 + 16) + 1, 1, v161);
          v174 = *(_QWORD *)(v161 + 16);
          v173 = *(_QWORD *)(v161 + 24);
          if (v174 >= v173 >> 1)
            v161 = sub_1BA7756A4(v173 > 1, v174 + 1, 1, v161);
          *(_QWORD *)(v161 + 16) = v174 + 1;
          sub_1BA5193C4(v234, v161+ ((*(unsigned __int8 *)(v243 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80))+ *(_QWORD *)(v243 + 72) * v174, type metadata accessor for FormatItemNodeStyle.Selector);
          goto LABEL_70;
        }
      }
      else
      {
        v162 = v236;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v243 + 56))(v236, 1, 1, v239);
      }
      sub_1BA4A2E80(v162, (uint64_t (*)(_QWORD))sub_1BA775764);
LABEL_70:
      v160 += 2;
      if (!--v159)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_83;
      }
    }
  }
  swift_bridgeObjectRelease();
  v161 = MEMORY[0x1E0DEE9D8];
LABEL_83:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v175 = (__int128 *)(v207 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
  v176 = *(_WORD *)(v207 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
  if ((v176 & 0xFF00) == 0x400)
  {
    v175 = (__int128 *)(v206 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
    v176 = *(_WORD *)(v206 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
  }
  v178 = *((_QWORD *)v175 + 2);
  v177 = *((_QWORD *)v175 + 3);
  v243 = *v175;
  v179 = swift_allocObject();
  swift_beginAccess();
  v180 = v227;
  *(_QWORD *)(v179 + 16) = v201;
  *(_QWORD *)(v179 + 24) = v180;
  v181 = v226;
  *(_QWORD *)(v179 + 32) = v197;
  *(_QWORD *)(v179 + 40) = v181;
  v182 = v199;
  *(_QWORD *)(v179 + 48) = v200;
  *(_QWORD *)(v179 + 56) = v182;
  v183 = v224;
  *(_QWORD *)(v179 + 64) = v198;
  *(_QWORD *)(v179 + 72) = v183;
  v184 = v222;
  *(_QWORD *)(v179 + 80) = v223;
  *(_QWORD *)(v179 + 88) = v184;
  v185 = v220;
  *(_QWORD *)(v179 + 96) = v221;
  *(_QWORD *)(v179 + 104) = v185;
  *(_BYTE *)(v179 + 112) = v219;
  v186 = v195;
  *(_QWORD *)(v179 + 120) = v196;
  *(_QWORD *)(v179 + 128) = v186;
  v187 = v217;
  *(_QWORD *)(v179 + 136) = v218;
  *(_QWORD *)(v179 + 144) = v187;
  v188 = v215;
  *(_QWORD *)(v179 + 152) = v216;
  *(_QWORD *)(v179 + 160) = v188;
  *(_QWORD *)(v179 + 168) = v213;
  v189 = v179 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
  *(_BYTE *)(v179 + 176) = v214;
  sub_1BA5193C4(v228, v189, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  *(_BYTE *)(v179 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = v211;
  *(_BYTE *)(v179 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = v210;
  v190 = (_QWORD *)(v179 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  v191 = v208;
  *v190 = v209;
  v190[1] = v191;
  v192 = (unint64_t *)(v179 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  *v192 = v161;
  v193 = v179 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
  *(_OWORD *)v193 = v243;
  *(_QWORD *)(v193 + 16) = v178;
  *(_QWORD *)(v193 + 24) = v177;
  *(_WORD *)(v193 + 32) = v176;
  return v179;
}

uint64_t type metadata accessor for FormatItemNodeStyle.Selector(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3C8368);
}

uint64_t initializeWithCopy for FormatItemNodeStyle.Selector(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  unsigned int v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unsigned int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  int *v49;
  int *v50;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = (uint64_t *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 80);
  swift_bridgeObjectRetain();
  if ((v8 & 0xFE) == 0x7E)
  {
    v9 = *((_OWORD *)v7 + 3);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)v7 + 2);
    *(_OWORD *)(a1 + 64) = v9;
    *(_BYTE *)(a1 + 80) = *((_BYTE *)v7 + 64);
    v10 = *((_OWORD *)v7 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 32) = v10;
  }
  else
  {
    v11 = *v7;
    if ((~v11 & 0xF000000000000007) != 0)
      swift_retain();
    *(_QWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    if (v8 <= 0xFD)
    {
      v12 = *(_QWORD *)(a2 + 64);
      v13 = *(_QWORD *)(a2 + 72);
      sub_1BA6F2B04(v12, v13, v8);
      *(_QWORD *)(a1 + 64) = v12;
      *(_QWORD *)(a1 + 72) = v13;
      *(_BYTE *)(a1 + 80) = v8;
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    }
  }
  v14 = *(unsigned __int8 *)(a2 + 144);
  if (v14 == 255)
  {
    v22 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v22;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
  }
  else
  {
    v15 = *(_QWORD *)(a2 + 88);
    v16 = *(_QWORD *)(a2 + 96);
    v17 = *(_QWORD *)(a2 + 104);
    v18 = *(_QWORD *)(a2 + 112);
    v49 = a3;
    v19 = *(_QWORD *)(a2 + 120);
    v20 = *(_QWORD *)(a2 + 128);
    v21 = *(_QWORD *)(a2 + 136);
    sub_1BA7756B8(v15, v16, v17, v18, v19, v20, v21, v14);
    *(_QWORD *)(a1 + 88) = v15;
    *(_QWORD *)(a1 + 96) = v16;
    *(_QWORD *)(a1 + 104) = v17;
    *(_QWORD *)(a1 + 112) = v18;
    *(_QWORD *)(a1 + 120) = v19;
    *(_QWORD *)(a1 + 128) = v20;
    a3 = v49;
    *(_QWORD *)(a1 + 136) = v21;
    *(_BYTE *)(a1 + 144) = v14;
  }
  v23 = a3[7];
  v24 = (uint64_t *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = type metadata accessor for FormatItemNodeAction();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1BA7754CC(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_24;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for FormatCommandOpenURL();
    v35 = swift_getEnumCaseMultiPayload();
    if (v35 == 2 || v35 == 1)
    {
      v36 = *((_QWORD *)v25 + 1);
      *v24 = *(_QWORD *)v25;
      v24[1] = v36;
      v24[2] = *((_QWORD *)v25 + 2);
      swift_bridgeObjectRetain();
    }
    else
    {
      v37 = sub_1BB86C67C();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v24, v25, v37);
      v38 = type metadata accessor for FormatAbsoluteURL();
      *(uint64_t *)((char *)v24 + *(int *)(v38 + 20)) = *(_QWORD *)&v25[*(int *)(v38 + 20)];
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    goto LABEL_22;
  }
  if (!EnumCaseMultiPayload)
  {
    v30 = *(_QWORD *)v25;
    v31 = *((_QWORD *)v25 + 1);
    v32 = *((_QWORD *)v25 + 2);
    v50 = a3;
    v33 = v25[25];
    v34 = v25[24];
    sub_1BB193F74(v30, v31, v32, v34, v33, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
    *v24 = v30;
    v24[1] = v31;
    v24[2] = v32;
    *((_BYTE *)v24 + 24) = v34;
    *((_BYTE *)v24 + 25) = v33;
    a3 = v50;
LABEL_22:
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(v24, v25, *(_QWORD *)(v27 + 64));
LABEL_23:
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_24:
  v39 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v39) = *(_BYTE *)(a2 + v39);
  v40 = a3[10];
  v41 = a1 + v40;
  v42 = a2 + v40;
  if (*(_QWORD *)v42 < 4uLL)
  {
    *(_OWORD *)v41 = *(_OWORD *)v42;
  }
  else
  {
    v43 = *(_QWORD *)(v42 + 8);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *(_QWORD *)(v41 + 8) = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v44 = a3[11];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *(_OWORD *)(v45 + 16) = v47;
  *(_WORD *)(v45 + 32) = *(_WORD *)(v46 + 32);
  return a1;
}

uint64_t type metadata accessor for FormatItemNodeAction()
{
  uint64_t result;

  result = qword_1ED3C8F00;
  if (!qword_1ED3C8F00)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA7754CC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t destroy for FormatItemNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  int EnumCaseMultiPayload;
  int v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = *(unsigned __int8 *)(a1 + 80);
  if ((v4 & 0xFE) != 0x7E)
  {
    if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) != 0)
      swift_release();
    if (v4 <= 0xFD)
      sub_1BA6F2B88(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v4);
  }
  v5 = *(unsigned __int8 *)(a1 + 144);
  if (v5 != 255)
    sub_1BA763860(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = type metadata accessor for FormatItemNodeAction();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for FormatCommandOpenURL();
      v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 2 || v10 == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v10)
          goto LABEL_9;
        v11 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v6, v11);
        type metadata accessor for FormatAbsoluteURL();
      }
      swift_bridgeObjectRelease();
    }
    else if (!EnumCaseMultiPayload)
    {
      sub_1BB193F74(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(unsigned __int8 *)(v6 + 24), *(_BYTE *)(v6 + 25), (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    }
  }
LABEL_9:
  result = *(_QWORD *)(a1 + *(int *)(a2 + 40));
  if (result >= 4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BA77567C(unint64_t result)
{
  if (result != 3)
    return sub_1BAC68784(result);
  return result;
}

uint64_t getEnumTagSinglePayload for FormatItemNodeStyle.Selector()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for FormatItemNodeStyle.Selector()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA7756A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3CFB88, type metadata accessor for FormatItemNodeStyle.Selector);
}

uint64_t sub_1BA7756B8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 == 1)
    return sub_1BAC67F0C(result);
  if (!a8)
    return sub_1BA7638A4(result, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_1BA5E7FF4, sub_1BA6E6C68);
  return result;
}

void sub_1BA7756FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CF630)
  {
    type metadata accessor for FormatItemNodeStyle.Selector(255);
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CF630);
  }
}

void sub_1BA775764(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C83B8, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA775780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t assignWithTake for FormatItemNodeStyle.Selector(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _OWORD *v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v53;
  uint64_t v54;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a1 + 16);
  v8 = (_OWORD *)(a2 + 16);
  if ((*(_BYTE *)(a1 + 80) & 0xFE) == 0x7E)
    goto LABEL_4;
  if ((*(_BYTE *)(a2 + 80) & 0xFE) == 0x7E)
  {
    sub_1BB194768((_QWORD *)(a1 + 16));
LABEL_4:
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    v10 = *(_OWORD *)(a2 + 32);
    *v7 = *v8;
    *(_OWORD *)(a1 + 32) = v10;
    goto LABEL_15;
  }
  v11 = *(_QWORD *)v8;
  if ((~*(_QWORD *)v7 & 0xF000000000000007) != 0)
  {
    if ((~v11 & 0xF000000000000007) != 0)
    {
      *(_QWORD *)v7 = v11;
      swift_release();
    }
    else
    {
      sub_1BAA5FA24(a1 + 16);
      *(_QWORD *)v7 = *(_QWORD *)v8;
    }
  }
  else
  {
    *(_QWORD *)v7 = v11;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v12 = (_OWORD *)(a2 + 64);
  v13 = *(unsigned __int8 *)(a1 + 80);
  if (v13 > 0xFD)
    goto LABEL_13;
  v14 = *(unsigned __int8 *)(a2 + 80);
  if (v14 > 0xFD)
  {
    sub_1BA9F0244(a1 + 64);
LABEL_13:
    *(_OWORD *)(a1 + 64) = *v12;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    goto LABEL_15;
  }
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *v12;
  *(_BYTE *)(a1 + 80) = v14;
  sub_1BA6F2B88(v15, v16, v13);
LABEL_15:
  v17 = *(unsigned __int8 *)(a1 + 144);
  if (v17 != 255)
  {
    v18 = *(unsigned __int8 *)(a2 + 144);
    if (v18 != 255)
    {
      v19 = *(_QWORD *)(a2 + 136);
      v20 = *(_QWORD *)(a1 + 88);
      v21 = *(_QWORD *)(a1 + 96);
      v22 = *(_QWORD *)(a1 + 104);
      v23 = *(_QWORD *)(a1 + 112);
      v24 = *(_QWORD *)(a1 + 120);
      v25 = *(_QWORD *)(a1 + 128);
      v26 = *(_QWORD *)(a1 + 136);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 136) = v19;
      *(_BYTE *)(a1 + 144) = v18;
      sub_1BA763860(v20, v21, v22, v23, v24, v25, v26, v17);
      goto LABEL_20;
    }
    sub_1BB19479C(a1 + 88);
  }
  v27 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v27;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 129) = *(_OWORD *)(a2 + 129);
LABEL_20:
  v28 = a3[7];
  v29 = (char *)(a1 + v28);
  v30 = (char *)(a2 + v28);
  v31 = type metadata accessor for FormatItemNodeAction();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      if (a1 == a2)
        goto LABEL_37;
      sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v39 = type metadata accessor for FormatCommandOpenURL();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          v53 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v29, v30, v53);
          v54 = type metadata accessor for FormatAbsoluteURL();
          *(_QWORD *)&v29[*(int *)(v54 + 20)] = *(_QWORD *)&v30[*(int *)(v54 + 20)];
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_37;
      }
      v38 = *(_QWORD *)(v32 + 64);
LABEL_28:
      memcpy(v29, v30, v38);
      goto LABEL_37;
    }
    sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
LABEL_27:
    sub_1BA7754CC(0);
    v38 = *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64);
    goto LABEL_28;
  }
  if (v35)
    goto LABEL_27;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v36 = type metadata accessor for FormatCommandOpenURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v40 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v29, v30, v40);
      v41 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v29[*(int *)(v41 + 20)] = *(_QWORD *)&v30[*(int *)(v41 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v29, v30, *(_QWORD *)(v32 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_37:
  v42 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v42) = *(_BYTE *)(a2 + v42);
  v43 = a3[10];
  v44 = (unint64_t *)(a1 + v43);
  v45 = a2 + v43;
  v46 = *(_QWORD *)(a1 + v43);
  v47 = *(_QWORD *)(a2 + v43);
  if (v46 != 3)
  {
    if (v47 == 3)
    {
      sub_1BB194804(v44);
    }
    else if (v46 >= 3)
    {
      if (v47 >= 3)
      {
        *v44 = v47;
        swift_bridgeObjectRelease();
        v44[1] = *(_QWORD *)(v45 + 8);
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
      sub_1BB1947D0((uint64_t)v44);
    }
  }
  *(_OWORD *)v44 = *(_OWORD *)v45;
LABEL_44:
  v48 = a3[11];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = *(_OWORD *)(v50 + 16);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *(_OWORD *)(v49 + 16) = v51;
  *(_WORD *)(v49 + 32) = *(_WORD *)(v50 + 32);
  return a1;
}

void sub_1BA775C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BA75DD88();
  if (!v5)
  {
    sub_1BA775D34(a1, a2, a4);
    if (a5 >> 62 == 1)
    {
      v10 = *(_QWORD *)(a5 + 16);
      v11 = *(_QWORD *)(a5 + 24);
      v12 = *(_QWORD *)(a5 + 32);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA775C3C(a1, a2, v10, v11, v12);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
}

uint64_t sub_1BA775D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v8 = a3 + 56;
    do
    {
      if (*(_QWORD *)v8 >> 62 == 1)
      {
        v4 = *(_QWORD *)(*(_QWORD *)v8 + 16);
        if (*(_BYTE *)(v4 + 41))
          v5 = 4;
        else
          v5 = 0;
        __asm { BR              X9 }
      }
      v8 += 32;
      --v7;
    }
    while (v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FormatRatio.bind(binder:context:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t result;

  v2 = *v0;
  if (*((_BYTE *)v0 + 8))
  {
    if (*((_BYTE *)v0 + 8) == 1)
    {
      v3 = *(_QWORD *)(v2 + 16);
      if (!v3)
        return result;
      swift_bridgeObjectRetain();
      v4 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v4 & 1) == 0)
        {
          v5 = *((_QWORD *)v4 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v5, 0);
          sub_1BA72C46C(v5, 0);
          if (v1)
            break;
        }
        v4 += 16;
        --v3;
      }
      while (v3);
    }
    else
    {
      v9 = *(_QWORD *)(v2 + 16);
      if (!v9)
        return result;
      swift_bridgeObjectRetain();
      v10 = (_BYTE *)(v2 + 40);
      do
      {
        if ((*v10 & 1) == 0)
        {
          v11 = *((_QWORD *)v10 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)();
          sub_1BA72C46C(v11, 0);
          sub_1BA72C46C(v11, 0);
          if (v1)
            break;
        }
        v10 += 16;
        --v9;
      }
      while (v9);
    }
  }
  else
  {
    v6 = *(_QWORD *)(v2 + 16);
    if (!v6)
      return result;
    swift_bridgeObjectRetain();
    v7 = (_BYTE *)(v2 + 40);
    do
    {
      if ((*v7 & 1) == 0)
      {
        v8 = *((_QWORD *)v7 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v8, 0);
        sub_1BA72C46C(v8, 0);
        if (v1)
          break;
      }
      v7 += 16;
      --v6;
    }
    while (v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA779D68(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  _BYTE v20[4];
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = (_QWORD *)*a2;
  v3 = sub_1BB871C50();
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v2[10];
  MEMORY[0x1E0C80A78](v7);
  v8 = v2[11];
  v10 = v2[14];
  v9 = v2[15];
  v29 = v6;
  v30 = v8;
  v22 = v8;
  v31 = v10;
  v32 = v9;
  v11 = sub_1BB86FD0C();
  v26 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v20[-v12];
  result = sub_1BB86CBD4();
  v15 = result + 1;
  if (__OFADD__(result, 1))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v25 = v6;
  v29 = v6;
  v30 = v22;
  v31 = v10;
  v32 = v9;
  v16 = sub_1BB871680();
  v22 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DBC7C8], v16);
  result = sub_1BB873138();
  if (!__OFSUB__(result, 1))
  {
    if (v15 >= result - 1)
      return v15;
    v21 = *MEMORY[0x1E0D52B30];
    while (1)
    {
      sub_1BB8716A4();
      sub_1BB86FCB8();
      (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v13, v11);
      sub_1BA4D9CE8(0, &qword_1ED3B2468);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v28 = 0;
        memset(v27, 0, sizeof(v27));
        sub_1BA65DBBC((uint64_t)v27, qword_1ED3BC760, &qword_1ED3B2468, (uint64_t)&protocol descriptor for FeedAdGroupDataProviding);
        return v15;
      }
      sub_1BA4CECCC(v27, (uint64_t)&v29);
      v18 = v32;
      v17 = v33;
      __swift_project_boxed_opaque_existential_1(&v29, v32);
      (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v18, v17);
      v19 = (*(uint64_t (**)(_BYTE *, uint64_t))(v23 + 88))(v5, v24);
      if (v19 != v21)
      {
        (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v5, v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
        return v15;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
      result = sub_1BB873138();
      if (__OFSUB__(result, 1))
        break;
      if (++v15 >= result - 1)
        return v15;
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1BA77A02C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3BBF60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB640], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA77A080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3BBF60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBB640], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for FormatCompilerOptions.Newsroom(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  if (*(_QWORD *)(a1 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86E710();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1BA77A170(uint64_t result, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD), uint64_t (*a5)(void))
{
  if (a3 == 2)
    return a5();
  if (a3 == 1)
    return a4(result, a2, (a2 >> 8) & 1);
  return result;
}

uint64_t sub_1BA77A194(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA77A284()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BA808)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95F8, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BA808);
  }
}

uint64_t sub_1BA77A2F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (*(_QWORD *)(a3 + 16))
  {
    v4 = a3 + 32;
    swift_bridgeObjectRetain();
    v5 = *(_QWORD *)(v4 + 8);
    swift_retain();
    swift_retain();
    sub_1BA6F9BF4();
    if (!v3)
      __asm { BR              X9 }
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA77F730(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  char *v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 18;
  v5 = &byte_1E724C270;
  while (1)
  {
    v6 = *v5++;
    if (v6 == 3)
      break;
    if (!--v2)
    {
      sub_1BB873EAC();
      __break(1u);
      break;
    }
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1BB8F4200;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    a1 = sub_1BA76B7B0(0, a1[2] + 1, 1, a1);
  v9 = a1[2];
  v8 = a1[3];
  if (v9 >= v8 >> 1)
    a1 = sub_1BA76B7B0((_QWORD *)(v8 > 1), v9 + 1, 1, a1);
  a1[2] = v9 + 1;
  a1[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BA76B7C4(0);
  swift_bridgeObjectRetain();
  v10 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v11 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BA77F9E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  _QWORD v72[7];
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;

  v3 = v2;
  v4 = (uint64_t)v1;
  v58 = *v1;
  sub_1BA4B07F0(0, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v70 = (uint64_t)&v47 - v7;
  swift_beginAccess();
  v9 = v1[2];
  v8 = v1[3];
  v10 = v1[4];
  v11 = v1[5];
  v12 = v1[6];
  v13 = *(_QWORD *)(v4 + 56);
  v14 = *(_QWORD *)(v4 + 64);
  v16 = *(_QWORD *)(v4 + 72);
  v15 = *(_QWORD *)(v4 + 80);
  v17 = *(_QWORD *)(v4 + 88);
  v18 = *(_QWORD *)(v4 + 96);
  v71 = *(unsigned __int8 *)(v4 + 112);
  v19 = *(_QWORD *)(v4 + 104);
  v67 = v14;
  v66 = v13;
  v69 = v11;
  v68 = v8;
  v57 = v9;
  v56 = v10;
  v65 = a1;
  if ((v71 & 0xFE) == 0x7E)
  {
    v59 = v12;
    v60 = v18;
    v61 = v16;
    v62 = v19;
    v63 = v15;
    v64 = v17;
    v82 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v12 & 0xF000000000000007) == 0)
  {
    v59 = v12;
LABEL_9:
    v61 = v16;
    v63 = v15;
    v82 = v3;
    v64 = v17 & 1;
    v60 = v18;
    v62 = v19;
    sub_1BA6E6C54(v18, v19, v71);
LABEL_10:
    v21 = *(_QWORD *)(v4 + 120);
    v20 = *(_QWORD *)(v4 + 128);
    v23 = *(_QWORD *)(v4 + 136);
    v22 = *(_QWORD *)(v4 + 144);
    v25 = *(_QWORD *)(v4 + 152);
    v24 = *(_QWORD *)(v4 + 160);
    v26 = *(_QWORD *)(v4 + 168);
    v27 = *(unsigned __int8 *)(v4 + 176);
    if (v27 == 255)
    {
      v50 = 255;
      v48 = v22;
      v47 = v23;
      v49 = v21;
      v29 = v20;
    }
    else
    {
      v74 = *(_QWORD *)(v4 + 120);
      v75 = v20;
      v76 = v23;
      v77 = v22;
      v78 = v25;
      v79 = v24;
      v80 = v26;
      v81 = v27;
      v55 = v20;
      sub_1BA7756B8(v21, v20, v23, v22, v25, v24, v26, v27);
      v28 = v82;
      sub_1BA780968(v65, (uint64_t)v72);
      v82 = v28;
      if (v28)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA7644AC(v21, v55, v23, v22, v25, v24, v26, v27);
        sub_1BB680840(v59, v66, v67, v61, v63, v64, v60, v62, v71);
        return v4;
      }
      sub_1BA7644AC(v21, v55, v23, v22, v25, v24, v26, v27);
      v29 = v72[1];
      v49 = v72[0];
      v47 = v72[2];
      v25 = v72[4];
      v48 = v72[3];
      v24 = v72[5];
      v26 = v72[6];
      v50 = v73;
    }
    sub_1BA5E01A4(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, v70, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
    LODWORD(v65) = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
    LODWORD(v55) = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
    v30 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    v31 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
    v32 = (uint64_t *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
    swift_beginAccess();
    v33 = *v32;
    v54 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters);
    v53 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 16);
    v52 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 24);
    v51 = *(unsigned __int16 *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters + 32);
    v4 = swift_allocObject();
    swift_beginAccess();
    v34 = v68;
    *(_QWORD *)(v4 + 16) = v57;
    *(_QWORD *)(v4 + 24) = v34;
    v35 = v69;
    *(_QWORD *)(v4 + 32) = v56;
    *(_QWORD *)(v4 + 40) = v35;
    v36 = v66;
    *(_QWORD *)(v4 + 48) = v59;
    *(_QWORD *)(v4 + 56) = v36;
    v37 = v61;
    *(_QWORD *)(v4 + 64) = v67;
    *(_QWORD *)(v4 + 72) = v37;
    v38 = v64;
    *(_QWORD *)(v4 + 80) = v63;
    *(_QWORD *)(v4 + 88) = v38;
    v39 = v62;
    *(_QWORD *)(v4 + 96) = v60;
    *(_QWORD *)(v4 + 104) = v39;
    *(_BYTE *)(v4 + 112) = v71;
    *(_QWORD *)(v4 + 120) = v49;
    *(_QWORD *)(v4 + 128) = v29;
    v40 = v48;
    *(_QWORD *)(v4 + 136) = v47;
    *(_QWORD *)(v4 + 144) = v40;
    *(_QWORD *)(v4 + 152) = v25;
    *(_QWORD *)(v4 + 160) = v24;
    *(_QWORD *)(v4 + 168) = v26;
    v41 = v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
    *(_BYTE *)(v4 + 176) = v50;
    sub_1BA646EFC(v70, v41, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
    *(_BYTE *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds) = v65;
    *(_BYTE *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors) = v55;
    v42 = (unint64_t *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    *v42 = v30;
    v42[1] = v31;
    v43 = (_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
    swift_beginAccess();
    *v43 = v33;
    v44 = v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters;
    *(_OWORD *)v44 = v54;
    v45 = v52;
    *(_QWORD *)(v44 + 16) = v53;
    *(_QWORD *)(v44 + 24) = v45;
    *(_WORD *)(v44 + 32) = v51;
    sub_1BA77567C(v30);
    swift_bridgeObjectRetain();
    return v4;
  }
  sub_1BA742954(v65, v12);
  if (!v3)
  {
    v59 = v72[0];
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BA780040(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  unint64_t v31;
  size_t v32;
  uint64_t isStackAllocationSafe;
  char *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t result;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86[7];

  v83 = a1;
  v84 = 0;
  v86[5] = *MEMORY[0x1E0C80C00];
  v2 = type metadata accessor for FormatItemNodeStyle.Selector(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v68 = (uint64_t)&v62 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v62 - v9);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v62 - v12;
  sub_1BA7808F0(0);
  v66 = v14;
  v64 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v67 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v77 = (uint64_t)&v62 - v17;
  v65 = v1;
  v18 = v1 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors;
  swift_beginAccess();
  v19 = *(_QWORD *)v18;
  v20 = *(_QWORD *)(*(_QWORD *)v18 + 16);
  swift_bridgeObjectRetain();
  v21 = MEMORY[0x1E0DEE9D8];
  v70 = sub_1BA7756A4(0, v20, 0, MEMORY[0x1E0DEE9D8]);
  v69 = sub_1BA7808DC(0, v20, 0, v21);
  v22 = *(_QWORD *)(v19 + 16);
  v79 = v13;
  v80 = v3;
  v73 = v19;
  v75 = v22;
  if (v22)
  {
    v63 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v74 = v19 + v63;
    swift_bridgeObjectRetain();
    v23 = 0;
    v72 = v5;
    v71 = v10;
LABEL_5:
    if (v23 >= *(_QWORD *)(v19 + 16))
      goto LABEL_44;
    v76 = *(_QWORD *)(v3 + 72);
    sub_1BA4C2DD8(v74 + v76 * v23, (uint64_t)v10, type metadata accessor for FormatItemNodeStyle.Selector);
    if (qword_1ED3BE7F8 != -1)
      swift_once();
    v24 = v10[1];
    v86[0] = *v10;
    v86[1] = v24;
    swift_bridgeObjectRetain();
    v25 = sub_1BA6E583C(v86);
    swift_bridgeObjectRelease();
    v82 = *(char **)(v25 + 16);
    if (!v82)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    v78 = v23;
    v5 = 0;
    v26 = (uint64_t *)(v25 + 64);
    while (1)
    {
      if ((unint64_t)v5 >= *(_QWORD *)(v25 + 16))
      {
        __break(1u);
LABEL_44:
        __break(1u);
      }
      v81 = *(v26 - 2);
      v27 = *(v26 - 1);
      v28 = *v26;
      v29 = *(_BYTE *)(v27 + 32);
      v30 = v29 & 0x3F;
      v31 = (unint64_t)((1 << v29) + 63) >> 6;
      v32 = 8 * v31;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      isStackAllocationSafe = swift_bridgeObjectRetain();
      if (v30 <= 0xD
        || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
      {
        MEMORY[0x1E0C80A78](isStackAllocationSafe);
        v34 = (char *)&v62 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0);
        bzero(v34, v32);
        v35 = v31;
        v36 = v84;
        v37 = sub_1BA6EB5B4((uint64_t)v34, v35, v27, v83);
        swift_bridgeObjectRelease();
        if (v36)
        {
          swift_willThrow();

          __break(1u);
LABEL_46:

          MEMORY[0x1BCCE5C38](v34, -1, -1);
          __break(1u);
LABEL_47:
          sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatItemNodeStyle.Selector);
          swift_bridgeObjectRelease();
          result = swift_release();
          __break(1u);
          return result;
        }
        v84 = 0;
      }
      else
      {
        v34 = (char *)swift_slowAlloc();
        bzero(v34, v32);
        v38 = v31;
        v36 = v84;
        v37 = sub_1BA6EB5B4((uint64_t)v34, v38, v27, v83);
        swift_bridgeObjectRelease();
        if (v36)
          goto LABEL_46;
        v84 = 0;
        MEMORY[0x1BCCE5C38](v34, -1, -1);
      }
      v39 = sub_1BA6EB330(v37, v27);
      swift_release();
      if ((v39 & 1) != 0 && (sub_1BA6EBD20(v83, v28) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v40 = v81;
        if (v81 < 2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v10 = v71;
          sub_1BA4C2DD8((uint64_t)v71, v68, type metadata accessor for FormatItemNodeStyle.Selector);
          v46 = v70;
          v48 = *(_QWORD *)(v70 + 16);
          v47 = *(_QWORD *)(v70 + 24);
          v5 = v72;
          v19 = v73;
          v13 = v79;
          v3 = v80;
          v23 = v78;
          if (v48 >= v47 >> 1)
            v46 = sub_1BA7756A4(v47 > 1, v48 + 1, 1, v70);
          *(_QWORD *)(v46 + 16) = v48 + 1;
          v70 = v46;
          sub_1BA5193C4(v68, v46 + v63 + v48 * v76, type metadata accessor for FormatItemNodeStyle.Selector);
        }
        else
        {
          v10 = v71;
          v41 = v67;
          sub_1BA4C2DD8((uint64_t)v71, v67, type metadata accessor for FormatItemNodeStyle.Selector);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_QWORD *)(v41 + *(int *)(v66 + 36)) = v40;
          v42 = v69;
          v44 = *(_QWORD *)(v69 + 16);
          v43 = *(_QWORD *)(v69 + 24);
          v5 = v72;
          v19 = v73;
          v13 = v79;
          v3 = v80;
          v23 = v78;
          if (v44 >= v43 >> 1)
            v42 = sub_1BA7808DC(v43 > 1, v44 + 1, 1, v69);
          *(_QWORD *)(v42 + 16) = v44 + 1;
          v45 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
          v69 = v42;
          sub_1BA5193C4(v67, v42 + v45 + *(_QWORD *)(v64 + 72) * v44, (uint64_t (*)(_QWORD))sub_1BA7808F0);
        }
LABEL_4:
        ++v23;
        sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatItemNodeStyle.Selector);
        if (v23 == v75)
        {
          swift_bridgeObjectRelease();
          break;
        }
        goto LABEL_5;
      }
      ++v5;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 += 5;
      if (v82 == v5)
      {
        swift_bridgeObjectRelease();
        v5 = v72;
        v19 = v73;
        v13 = v79;
        v3 = v80;
        v10 = v71;
        v23 = v78;
        goto LABEL_4;
      }
    }
  }
  v49 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v50 = *(_QWORD *)(v49 + 16);
  if (v50)
  {
    v51 = v49 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    v52 = *(_QWORD *)(v64 + 72);
    v53 = v70;
    do
    {
      v54 = v77;
      sub_1BA4C2DD8(v51, v77, (uint64_t (*)(_QWORD))sub_1BA7808F0);
      sub_1BA4C2DD8(v54, (uint64_t)v13, type metadata accessor for FormatItemNodeStyle.Selector);
      sub_1BA4A2E80(v54, (uint64_t (*)(_QWORD))sub_1BA7808F0);
      v56 = *(_QWORD *)(v53 + 16);
      v55 = *(_QWORD *)(v53 + 24);
      if (v56 >= v55 >> 1)
        v53 = sub_1BA7756A4(v55 > 1, v56 + 1, 1, v53);
      *(_QWORD *)(v53 + 16) = v56 + 1;
      v13 = v79;
      sub_1BA5193C4((uint64_t)v79, v53+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(_QWORD *)(v80 + 72) * v56, type metadata accessor for FormatItemNodeStyle.Selector);
      v51 += v52;
      --v50;
    }
    while (v50);
    v70 = v53;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v80;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v86[0] = v65;
  v57 = *(_QWORD *)(v70 + 16);
  if (v57)
  {
    v58 = v70 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v59 = *(_QWORD *)(v3 + 72);
    swift_retain();
    swift_bridgeObjectRetain();
    v60 = v84;
    while (1)
    {
      sub_1BA4C2DD8(v58, (uint64_t)v5, type metadata accessor for FormatItemNodeStyle.Selector);
      sub_1BB1924C0(v86, (uint64_t)v5, &v85);
      if (v60)
        break;
      sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatItemNodeStyle.Selector);
      swift_release();
      v86[0] = v85;
      v58 += v59;
      if (!--v57)
      {
        v65 = v85;
        swift_bridgeObjectRelease_n();
        return v65;
      }
    }
    goto LABEL_47;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  return v65;
}

uint64_t sub_1BA7808DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3CFC10, (uint64_t (*)(uint64_t))sub_1BA7808F0);
}

void sub_1BA7808F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3CC680)
  {
    v2 = type metadata accessor for FormatItemNodeStyle.Selector(255);
    v3 = sub_1BA4A2870(&qword_1ED3C8360, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t)&unk_1BB8F3FFC);
    v5 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3CC680);
  }
}

uint64_t sub_1BA780968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[8];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v3 = v2;
  sub_1BA780C98(v2, (uint64_t)v40);
  v5 = v40[0];
  v6 = v40[1];
  v7 = v40[2];
  v8 = v40[3];
  v10 = v40[4];
  v9 = v40[5];
  v11 = v40[6];
  result = sub_1BA780C98(v3, (uint64_t)&v41);
  if (v48)
  {
    if (v48 != 1)
      return sub_1BA780C98(v3, a2);
    v13 = v41;
    if ((v41 & 0xF000000000000007) == 0xD000000000000007)
    {
      *(_QWORD *)a2 = v41;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_OWORD *)(a2 + 40) = 0u;
      *(_BYTE *)(a2 + 56) = 1;
      return result;
    }
    if ((v41 & 0xF000000000000007) == 0xF000000000000007)
    {
      result = sub_1BB680898(v3);
LABEL_22:
      *(_QWORD *)a2 = v13;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_OWORD *)(a2 + 40) = 0u;
      *(_BYTE *)(a2 + 56) = 1;
      return result;
    }
    v22 = swift_allocObject();
    sub_1BAC67F0C(v5);
    sub_1BB86DD80();
    FormatFloat.value(contextLayoutOptions:)();
    v24 = v23;
    swift_release();
    if (!v38)
    {
      *(_QWORD *)(v22 + 16) = v24;
      result = sub_1BB680898(v3);
      v13 = v22;
      goto LABEL_22;
    }
    swift_deallocUninitializedObject();
    return sub_1BB680898(v3);
  }
  v14 = v42;
  v16 = v43;
  v15 = v44;
  v17 = v45;
  v18 = v46;
  v19 = v47;
  if ((v47 & 0xF000000000000007) == 0xD000000000000007)
  {
    *(_QWORD *)a2 = v41;
    *(_QWORD *)(a2 + 8) = v14;
    *(_QWORD *)(a2 + 16) = v16;
    *(_QWORD *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v17;
    *(_QWORD *)(a2 + 40) = v18;
    *(_QWORD *)(a2 + 48) = v19;
    *(_BYTE *)(a2 + 56) = 0;
    return result;
  }
  v33 = v47 & 0xF000000000000007;
  v34 = v47;
  v28 = v46;
  v29 = v42;
  v30 = v43;
  v31 = v44;
  v32 = v45;
  v35 = ~v41 & 0xF000000000000007;
  v36 = v41;
  sub_1BA7638A4(v5, v6, v7, v8, v10, v9, v11, (void (*)(void))sub_1BA5E7FF4, sub_1BA6E6C68);
  if (v35)
  {
    sub_1BA742954(a1, v36);
    v21 = v38;
    if (v38)
      return sub_1BB680898(v3);
    v20 = v39;
  }
  else
  {
    v20 = v36;
    v21 = v38;
  }
  if (v33 == 0xF000000000000007)
  {
    result = sub_1BB680898(v3);
    v25 = v34;
  }
  else
  {
    v25 = swift_allocObject();
    sub_1BB86DD80();
    FormatFloat.value(contextLayoutOptions:)();
    v27 = v26;
    swift_release();
    if (v21)
    {
      swift_deallocUninitializedObject();
      sub_1BA5E800C(v20);
      return sub_1BB680898(v3);
    }
    *(_QWORD *)(v25 + 16) = v27;
    result = sub_1BB680898(v3);
  }
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v29;
  *(_QWORD *)(a2 + 16) = v30;
  *(_QWORD *)(a2 + 24) = v31;
  *(_QWORD *)(a2 + 32) = v32;
  *(_QWORD *)(a2 + 40) = v28 & 1;
  *(_QWORD *)(a2 + 48) = v25;
  *(_BYTE *)(a2 + 56) = 0;
  return result;
}

uint64_t sub_1BA780C98(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8(a2, a1);
  return a2;
}

uint64_t sub_1BA780CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t *v22;
  int v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;

  v40 = a1;
  v41 = a2;
  v6 = sub_1BB86EB00();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  sub_1BA75BC00(0);
  v32 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v42 = (uint64_t *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA75C064(0);
  MEMORY[0x1E0C80A78](v16);
  v34 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v3;
  v18 = *v3;
  v19 = *(_QWORD *)(*v3 + 16);
  if (!v19)
  {
LABEL_13:
    v28 = (uint64_t)v34;
    v27 = v35;
    sub_1BA75BCB4(0);
    sub_1BA4C2DD8((uint64_t)v27 + *(int *)(v29 + 36), v28, (uint64_t (*)(_QWORD))sub_1BA75C064);
    return sub_1BA5193C4(v28, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
  }
  v31 = a3;
  v20 = v18 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v21 = *MEMORY[0x1E0DB4D48];
  v38 = *MEMORY[0x1E0DB4D50];
  v39 = v21;
  v36 = *MEMORY[0x1E0DB4D68];
  v37 = *(_QWORD *)(v14 + 72);
  v33 = v18;
  swift_bridgeObjectRetain();
  while (1)
  {
    v22 = v42;
    sub_1BA4C2DD8(v20, (uint64_t)v42, (uint64_t (*)(_QWORD))sub_1BA75BC00);
    v43 = *v22;
    swift_retain();
    sub_1BA7049A8();
    swift_release();
    if (v4)
    {
      sub_1BA4A2E80((uint64_t)v42, (uint64_t (*)(_QWORD))sub_1BA75BC00);
      return swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    v23 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
    if (v23 == v39)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      swift_bridgeObjectRelease();
      v26 = (uint64_t)v42;
      sub_1BA4C2DD8((uint64_t)v42 + *(int *)(v32 + 36), v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
      return sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))sub_1BA75BC00);
    }
    if (v23 != v38)
      break;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    sub_1BA4A2E80((uint64_t)v42, (uint64_t (*)(_QWORD))sub_1BA75BC00);
LABEL_4:
    v20 += v37;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      a3 = v31;
      goto LABEL_13;
    }
  }
  if (v23 != v36)
  {
    v24 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24(v12, v6);
    sub_1BA4A2E80((uint64_t)v42, (uint64_t (*)(_QWORD))sub_1BA75BC00);
    v24(v9, v6);
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return sub_1BA4A2E80((uint64_t)v42, (uint64_t (*)(_QWORD))sub_1BA75BC00);
}

uint64_t sub_1BA781078(unint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t result;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v2 = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B41D0, (void (*)(uint64_t))type metadata accessor for FormatResource);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v26 - v14;
  sub_1BA4C2DD8(v2, (uint64_t)&v26 - v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
  v16 = type metadata accessor for FormatResource(0);
  swift_storeEnumTagMultiPayload();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  sub_1BA57B488((uint64_t)v15, (uint64_t)v12, (unint64_t *)&qword_1ED3B41D0, (void (*)(uint64_t))type metadata accessor for FormatResource);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v12, 1, v16) == 1)
    return sub_1BA502AD0((uint64_t)v15, (unint64_t *)&qword_1ED3B41D0, (void (*)(uint64_t))type metadata accessor for FormatResource);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA57B488((uint64_t)v15, (uint64_t)v6, (unint64_t *)&qword_1ED3B41D0, (void (*)(uint64_t))type metadata accessor for FormatResource);
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v6, 1, v16);
    if ((_DWORD)result != 1)
    {
      v20 = a1[1];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1BA6D25A4(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v22 = *(_QWORD *)(v20 + 16);
      v21 = *(_QWORD *)(v20 + 24);
      if (v22 >= v21 >> 1)
        v20 = sub_1BA6D25A4(v21 > 1, v22 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v22 + 1;
      sub_1BA5193C4((uint64_t)v6, v20+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v22, type metadata accessor for FormatResource);
      a1[1] = v20;
LABEL_15:
      sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatResource);
      return sub_1BA502AD0((uint64_t)v15, (unint64_t *)&qword_1ED3B41D0, (void (*)(uint64_t))type metadata accessor for FormatResource);
    }
    __break(1u);
  }
  else
  {
    sub_1BA57B488((uint64_t)v15, (uint64_t)v9, (unint64_t *)&qword_1ED3B41D0, (void (*)(uint64_t))type metadata accessor for FormatResource);
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v9, 1, v16);
    if ((_DWORD)result != 1)
    {
      v23 = *a1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v23 = sub_1BA6D25A4(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
      v25 = *(_QWORD *)(v23 + 16);
      v24 = *(_QWORD *)(v23 + 24);
      if (v25 >= v24 >> 1)
        v23 = sub_1BA6D25A4(v24 > 1, v25 + 1, 1, v23);
      *(_QWORD *)(v23 + 16) = v25 + 1;
      sub_1BA5193C4((uint64_t)v9, v23+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v25, type metadata accessor for FormatResource);
      *a1 = v23;
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA7813A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  __int128 v15;
  uint64_t v16;
  uint64_t v17[2];
  _QWORD v18[2];

  v14[0] = a1;
  v3 = sub_1BB8701C8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_OWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  sub_1BA744E38(v1 + 48, (uint64_t)v17, &qword_1ED3C8590);
  v9 = swift_bridgeObjectRetain();
  v14[1] = sub_1BA98444C(v9);
  swift_bridgeObjectRelease();
  *(_OWORD *)v6 = v15;
  *((_QWORD *)v6 + 2) = v7;
  *((_QWORD *)v6 + 3) = v8;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB85B8], v3);
  sub_1BA744E38((uint64_t)v17, (uint64_t)v18, &qword_1ED3C8590);
  v10 = v18[0];
  if (v18[0])
  {
    v11 = v18[1];
    type metadata accessor for FormatDecorationContext();
    swift_bridgeObjectRetain();
    sub_1BB24285C(v17);
    sub_1BB86DD80();
    v12 = v16;
    swift_bridgeObjectRetain();
    sub_1BA72BED4(v12, v10);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB242888(v17);
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BA72BED4(v12, v11);
    swift_bridgeObjectRelease();
    sub_1BB242888(v17);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return sub_1BB870198();
}

uint64_t sub_1BA7815EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v2;
  v7 = v4[1];
  v18 = *v4;
  sub_1BA781758((uint64_t)&v18);
  sub_1BA742954(a1, v7);
  if (v3)
    return sub_1BA4F6CCC((uint64_t)&v18);
  sub_1BA781780(v4 + 2, &v17);
  v9 = v15[1];
  v10 = swift_allocObject();
  sub_1BA781780(&v17, v15);
  sub_1BAC695C4((uint64_t)&v17);
  sub_1BB86DD80();
  FormatFloat.value(contextLayoutOptions:)();
  v12 = v11;
  v13 = *((_WORD *)v4 + 12);
  v14 = v4[4];
  v16 = v14;
  swift_release();
  *(_QWORD *)(v10 + 16) = v12;
  sub_1BAC695F0((uint64_t)&v17);
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v10;
  *(_WORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v14;
  return sub_1BA781758((uint64_t)&v16);
}

uint64_t sub_1BA781758(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BA781780(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

_QWORD *sub_1BA7817C0()
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1BA781D28(0, 0xE000000000000000, ObjectType);
}

_QWORD *sub_1BA7817F4()
{
  uint64_t v0;
  void *v1;
  int v2;
  uint64_t ObjectType;
  _QWORD *v4;
  id v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;

  v1 = *(void **)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 16);
  ObjectType = swift_getObjectType();
  v4 = sub_1BA781D28(0x2D70756F7267, 0xE600000000000000, ObjectType);
  if (v1)
  {
    v5 = v1;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BAA023A0((uint64_t)objc_msgSend(v5, sel_subscriptionOrigin));
    sub_1BB872AFC(v6);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
    v8 = v4[2];
    v7 = v4[3];
    if (v8 >= v7 >> 1)
      v4 = sub_1BA6EA0D0((_QWORD *)(v7 > 1), v8 + 1, 1, v4);
    v4[2] = v8 + 1;
    v9 = &v4[2 * v8];
    v9[4] = 0xD00000000000001ELL;
    v9[5] = 0x80000001BB9807C0;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v10 = (char *)objc_msgSend(v5, sel_subscriptionType);
    switch((unint64_t)v10)
    {
      case 3uLL:
        v10 = "iption-notifications-";
        break;
      default:
        break;
    }
    sub_1BB872AFC(v10);
    swift_bridgeObjectRelease();
    v12 = v4[2];
    v11 = v4[3];
    if (v12 >= v11 >> 1)
      v4 = sub_1BA6EA0D0((_QWORD *)(v11 > 1), v12 + 1, 1, v4);
    v4[2] = v12 + 1;
    v13 = &v4[2 * v12];
    v13[4] = 0xD00000000000001CLL;
    v13[5] = 0x80000001BB9807E0;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_notificationsEnabled);
    sub_1BB872AFC((_QWORD *)0xE800000000000000);
    swift_bridgeObjectRelease();
    v15 = v4[2];
    v14 = v4[3];
    if (v15 >= v14 >> 1)
      v4 = sub_1BA6EA0D0((_QWORD *)(v14 > 1), v15 + 1, 1, v4);
    v4[2] = v15 + 1;
    v16 = &v4[2 * v15];
    v16[4] = 0xD000000000000025;
    v16[5] = 0x80000001BB980800;

  }
  if (v2 == 3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
    v18 = v4[2];
    v17 = v4[3];
    if (v18 >= v17 >> 1)
      v4 = sub_1BA6EA0D0((_QWORD *)(v17 > 1), v18 + 1, 1, v4);
    v4[2] = v18 + 1;
    v19 = &v4[2 * v18];
    v19[4] = 0xD000000000000027;
    v20 = v19 + 4;
    v21 = 0x80000001BB980760;
  }
  else
  {
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB872AFC((_QWORD *)0xEE00646562697263);
    swift_bridgeObjectRelease();
    v21 = 0x80000001BB980790;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
    v23 = v4[2];
    v22 = v4[3];
    if (v23 >= v22 >> 1)
      v4 = sub_1BA6EA0D0((_QWORD *)(v22 > 1), v23 + 1, 1, v4);
    v4[2] = v23 + 1;
    v24 = &v4[2 * v23];
    v24[4] = 0xD000000000000023;
    v20 = v24 + 4;
  }
  v20[1] = v21;
  return v4;
}

_QWORD *sub_1BA781D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  _QWORD *v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  id v19;
  void *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  id v46;
  void *v47;
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  id v59;
  void *v60;
  id v61;
  unint64_t v62;
  unint64_t v63;
  _QWORD *v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  unint64_t v77;
  _QWORD *v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  _QWORD *v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  _QWORD *v114;
  id v115;
  void *v116;
  id v117;
  unint64_t v118;
  unint64_t v119;
  _QWORD *v120;
  id v121;
  unint64_t v122;
  unint64_t v123;
  _QWORD *v124;
  id v125;
  unint64_t v126;
  unint64_t v127;
  _QWORD *v128;
  id v129;
  unint64_t v130;
  unint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v135;
  _QWORD *v138;

  v4 = v3;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v8);
  v9 = objc_msgSend(v3, sel_identifier);
  sub_1BB8729A0();

  sub_1BB872AFC(v10);
  swift_bridgeObjectRelease();
  v11 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v13 = v11[2];
  v12 = v11[3];
  if (v13 >= v12 >> 1)
    v11 = sub_1BA6EA0D0((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
  v11[2] = v13 + 1;
  v14 = &v11[2 * v13];
  v14[4] = a1;
  v14[5] = a2;
  v138 = v11;
  if (FCTagProviding.isTopic.getter(a3))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v15);
    v17 = v11[2];
    v16 = v11[3];
    if (v17 >= v16 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v16 > 1), v17 + 1, 1, v11);
    v11[2] = v17 + 1;
    v18 = &v11[2 * v17];
    v18[4] = a1;
    v18[5] = a2;
    v138 = v11;
  }
  v19 = objc_msgSend(v4, sel_asChannel);
  v135 = a3;
  if (v19)
  {
    v20 = v19;
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-type-section");
    v22 = v11[2];
    v21 = v11[3];
    if (v22 >= v21 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v21 > 1), v22 + 1, 1, v11);
    v11[2] = v22 + 1;
    v23 = &v11[2 * v22];
    v23[4] = a1;
    v23[5] = a2;
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-type-channel");
    objc_msgSend(v20, sel_supportsNotifications);
    sub_1BB872AFC((_QWORD *)0x80000001BB962EB0);
    swift_bridgeObjectRelease();
    v25 = v11[2];
    v24 = v11[3];
    if (v25 >= v24 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v24 > 1), v25 + 1, 1, v11);
    v11[2] = v25 + 1;
    v26 = &v11[2 * v25];
    v26[4] = a1;
    v26[5] = a2;
    swift_unknownObjectRelease();
    v138 = v11;
    a3 = v135;
  }
  if (FCTagProviding.isSection.getter(a3))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-type-newspaper");
    v28 = v11[2];
    v27 = v11[3];
    if (v28 >= v27 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v27 > 1), v28 + 1, 1, v11);
    v11[2] = v28 + 1;
    v29 = &v11[2 * v28];
    v29[4] = a1;
    v29[5] = a2;
    v138 = v11;
  }
  if (objc_msgSend(v4, sel_isLocal, v135))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v30);
    v32 = v11[2];
    v31 = v11[3];
    if (v32 >= v31 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v31 > 1), v32 + 1, 1, v11);
    v11[2] = v32 + 1;
    v33 = &v11[2 * v32];
    v33[4] = a1;
    v33[5] = a2;
    v138 = v11;
  }
  if (objc_msgSend(v4, sel_isNewspaper))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-type-magazine");
    v35 = v11[2];
    v34 = v11[3];
    if (v35 >= v34 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v34 > 1), v35 + 1, 1, v11);
    v11[2] = v35 + 1;
    v36 = &v11[2 * v35];
    v36[4] = a1;
    v36[5] = a2;
    v138 = v11;
  }
  if (objc_msgSend(v4, sel_isMagazine))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-type-my-sports");
    v38 = v11[2];
    v37 = v11[3];
    if (v38 >= v37 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v37 > 1), v38 + 1, 1, v11);
    v11[2] = v38 + 1;
    v39 = &v11[2 * v38];
    v39[4] = a1;
    v39[5] = a2;
    v138 = v11;
  }
  if (objc_msgSend(v4, sel_isMySports))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-type-sports-event");
    v41 = v11[2];
    v40 = v11[3];
    if (v41 >= v40 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v40 > 1), v41 + 1, 1, v11);
    v11[2] = v41 + 1;
    v42 = &v11[2 * v41];
    v42[4] = a1;
    v42[5] = a2;
    v138 = v11;
  }
  if (objc_msgSend(v4, sel_isSportsEvent))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-sports-has-primary-color");
    v44 = v11[2];
    v43 = v11[3];
    if (v44 >= v43 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v43 > 1), v44 + 1, 1, v11);
    v11[2] = v44 + 1;
    v45 = &v11[2 * v44];
    v45[4] = a1;
    v45[5] = a2;
    v138 = v11;
  }
  v46 = objc_msgSend(v4, sel_asSports);
  if (v46)
  {
    v47 = v46;
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v48);
    v50 = v11[2];
    v49 = v11[3];
    if (v50 >= v49 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v49 > 1), v50 + 1, 1, v11);
    v11[2] = v50 + 1;
    v51 = &v11[2 * v50];
    v51[4] = a1;
    v51[5] = a2;
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-type-puzzle-hub");
    FCSportsType.description.getter((uint64_t)objc_msgSend(v47, sel_sportsType));
    sub_1BB872AFC(v52);
    swift_bridgeObjectRelease();
    v54 = v11[2];
    v53 = v11[3];
    if (v54 >= v53 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v53 > 1), v54 + 1, 1, v11);
    v11[2] = v54 + 1;
    v55 = &v11[2 * v54];
    v55[4] = a1;
    v55[5] = a2;
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-sports-type-");
    sub_1BB872AFC(objc_msgSend(v47, sel_sportsLeagueType));
    swift_bridgeObjectRelease();
    v57 = v11[2];
    v56 = v11[3];
    if (v57 >= v56 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v56 > 1), v57 + 1, 1, v11);
    v11[2] = v57 + 1;
    v58 = &v11[2 * v57];
    v58[4] = a1;
    v58[5] = a2;
    v138 = v11;
    v59 = objc_msgSend(v47, sel_sportsTheme);
    if (v59)
    {
      v60 = v59;
      v61 = objc_msgSend(v59, sel_sportsPrimaryColor);

      if (v61)
      {
        sub_1BB873CB4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1BB872AFC("tag-sports-has-secondary-color");
        v63 = v11[2];
        v62 = v11[3];
        if (v63 >= v62 >> 1)
          v11 = sub_1BA6EA0D0((_QWORD *)(v62 > 1), v63 + 1, 1, v11);
        v11[2] = v63 + 1;
        v64 = &v11[2 * v63];
        v64[4] = a1;
        v64[5] = a2;
        v138 = v11;
      }
      v65 = objc_msgSend(v60, sel_sportsSecondaryColor);

      if (v65)
      {
        sub_1BB873CB4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1BB872AFC("foreground-color");
        v67 = v11[2];
        v66 = v11[3];
        if (v67 >= v66 >> 1)
          v11 = sub_1BA6EA0D0((_QWORD *)(v66 > 1), v67 + 1, 1, v11);
        v11[2] = v67 + 1;
        v68 = &v11[2 * v67];
        v68[4] = a1;
        v68[5] = a2;
        v138 = v11;
      }
      v69 = objc_msgSend(v60, sel_sportsEventNavigationForegroundColor);

      if (v69)
      {
        sub_1BB873CB4();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1BB872AFC("tag-sports-league-type-");
        v71 = v11[2];
        v70 = v11[3];
        if (v71 >= v70 >> 1)
          v11 = sub_1BA6EA0D0((_QWORD *)(v70 > 1), v71 + 1, 1, v11);
        v11[2] = v71 + 1;
        v72 = &v11[2 * v71];
        v72[4] = a1;
        v72[5] = a2;
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v138 = v11;
        goto LABEL_60;
      }
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
LABEL_60:
  if (objc_msgSend(v4, sel_isPuzzleHub))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-hide-accessory-text");
    v74 = v11[2];
    v73 = v11[3];
    if (v74 >= v73 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v73 > 1), v74 + 1, 1, v11);
    v11[2] = v74 + 1;
    v75 = &v11[2 * v74];
    v75[4] = a1;
    v75[5] = a2;
    v138 = v11;
  }
  if (objc_msgSend(v4, sel_hideAccessoryText))
  {
    sub_1BB873CB4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC("tag-has-headline-title-font");
    v77 = v11[2];
    v76 = v11[3];
    if (v77 >= v76 >> 1)
      v11 = sub_1BA6EA0D0((_QWORD *)(v76 > 1), v77 + 1, 1, v11);
    v11[2] = v77 + 1;
    v78 = &v11[2 * v77];
    v78[4] = a1;
    v78[5] = a2;
    v138 = v11;
  }
  v79 = objc_msgSend(v4, sel_theme);
  if (v79)
  {
    v80 = objc_msgSend(v79, sel_defaultHeadlineTemplate);
    swift_unknownObjectRelease();
    if (v80)
    {
      v81 = objc_msgSend(v80, sel_headlineTitleTextInfo);

      if (v81)
      {
        v82 = objc_msgSend(v81, sel_font);

        if (v82)
        {
          v83 = objc_msgSend(v82, sel_fontName);

          if (v83)
          {
            v84 = sub_1BB8729A0();
            v86 = v85;

            swift_bridgeObjectRelease();
            v87 = HIBYTE(v86) & 0xF;
            if ((v86 & 0x2000000000000000) == 0)
              v87 = v84 & 0xFFFFFFFFFFFFLL;
            if (v87)
            {
              sub_1BB873CB4();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              sub_1BB872AFC("tag-has-headline-excerpt-font");
              v89 = v11[2];
              v88 = v11[3];
              if (v89 >= v88 >> 1)
                v11 = sub_1BA6EA0D0((_QWORD *)(v88 > 1), v89 + 1, 1, v11);
              v11[2] = v89 + 1;
              v90 = &v11[2 * v89];
              v90[4] = a1;
              v90[5] = a2;
              v138 = v11;
            }
          }
        }
      }
    }
  }
  v91 = objc_msgSend(v4, sel_theme);
  if (v91)
  {
    v92 = objc_msgSend(v91, sel_defaultHeadlineTemplate);
    swift_unknownObjectRelease();
    if (v92)
    {
      v93 = objc_msgSend(v92, sel_headlineExcerptTextInfo);

      if (v93)
      {
        v94 = objc_msgSend(v93, sel_font);

        if (v94)
        {
          v95 = objc_msgSend(v94, sel_fontName);

          if (v95)
          {
            v96 = sub_1BB8729A0();
            v98 = v97;

            swift_bridgeObjectRelease();
            v99 = HIBYTE(v98) & 0xF;
            if ((v98 & 0x2000000000000000) == 0)
              v99 = v96 & 0xFFFFFFFFFFFFLL;
            if (v99)
            {
              sub_1BB873CB4();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              sub_1BB872AFC("tag-has-headline-byline-font");
              v101 = v11[2];
              v100 = v11[3];
              if (v101 >= v100 >> 1)
                v11 = sub_1BA6EA0D0((_QWORD *)(v100 > 1), v101 + 1, 1, v11);
              v11[2] = v101 + 1;
              v102 = &v11[2 * v101];
              v102[4] = a1;
              v102[5] = a2;
              v138 = v11;
            }
          }
        }
      }
    }
  }
  v103 = objc_msgSend(v4, sel_theme);
  if (v103)
  {
    v104 = objc_msgSend(v103, sel_defaultHeadlineTemplate);
    swift_unknownObjectRelease();
    if (v104)
    {
      v105 = objc_msgSend(v104, sel_headlineBylineTextInfo);

      if (v105)
      {
        v106 = objc_msgSend(v105, sel_font);

        if (v106)
        {
          v107 = objc_msgSend(v106, sel_fontName);

          if (v107)
          {
            v108 = sub_1BB8729A0();
            v110 = v109;

            swift_bridgeObjectRelease();
            v111 = HIBYTE(v110) & 0xF;
            if ((v110 & 0x2000000000000000) == 0)
              v111 = v108 & 0xFFFFFFFFFFFFLL;
            if (v111)
            {
              sub_1BB873CB4();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              sub_1BB872AFC("tag-has-background-color");
              v113 = v11[2];
              v112 = v11[3];
              if (v113 >= v112 >> 1)
                v11 = sub_1BA6EA0D0((_QWORD *)(v112 > 1), v113 + 1, 1, v11);
              v11[2] = v113 + 1;
              v114 = &v11[2 * v113];
              v114[4] = a1;
              v114[5] = a2;
              v138 = v11;
            }
          }
        }
      }
    }
  }
  v115 = objc_msgSend(v4, sel_theme);
  if (v115)
  {
    v116 = v115;
    v117 = objc_msgSend(v115, sel_backgroundColor);

    if (v117)
    {
      sub_1BB873CB4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BB872AFC("tag-has-foreground-color");
      v119 = v11[2];
      v118 = v11[3];
      if (v119 >= v118 >> 1)
        v11 = sub_1BA6EA0D0((_QWORD *)(v118 > 1), v119 + 1, 1, v11);
      v11[2] = v119 + 1;
      v120 = &v11[2 * v119];
      v120[4] = a1;
      v120[5] = a2;
      v138 = v11;
    }
    v121 = objc_msgSend(v116, sel_foregroundColor);

    if (v121)
    {
      sub_1BB873CB4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BB872AFC("tag-has-feed-background-color");
      v123 = v11[2];
      v122 = v11[3];
      if (v123 >= v122 >> 1)
        v11 = sub_1BA6EA0D0((_QWORD *)(v122 > 1), v123 + 1, 1, v11);
      v11[2] = v123 + 1;
      v124 = &v11[2 * v123];
      v124[4] = a1;
      v124[5] = a2;
      v138 = v11;
    }
    v125 = objc_msgSend(v116, sel_feedBackgroundColor);

    if (v125)
    {
      sub_1BB873CB4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BB872AFC("tag-has-feed-control-color");
      v127 = v11[2];
      v126 = v11[3];
      if (v127 >= v126 >> 1)
        v11 = sub_1BA6EA0D0((_QWORD *)(v126 > 1), v127 + 1, 1, v11);
      v11[2] = v127 + 1;
      v128 = &v11[2 * v127];
      v128[4] = a1;
      v128[5] = a2;
      v138 = v11;
    }
    v129 = objc_msgSend(v116, sel_feedControlColor);

    if (v129)
    {
      sub_1BB873CB4();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BB872AFC("roller");
      v131 = v11[2];
      v130 = v11[3];
      if (v131 >= v130 >> 1)
        v11 = sub_1BA6EA0D0((_QWORD *)(v130 > 1), v131 + 1, 1, v11);
      v11[2] = v131 + 1;
      v132 = &v11[2 * v131];
      v132[4] = a1;
      v132[5] = a2;
      swift_unknownObjectRelease();
      v138 = v11;
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v133 = sub_1BA783290(a1, a2, (uint64_t)v4);
  sub_1BA67FB48(v133);
  return v138;
}

BOOL sub_1BA783234(uint64_t a1, SEL *a2)
{
  void *v2;
  id v3;

  v3 = objc_msgSend(v2, *a2);
  if (v3)
    swift_unknownObjectRelease();
  return v3 != 0;
}

BOOL FCTagProviding.isSection.getter(uint64_t a1)
{
  return sub_1BA783234(a1, (SEL *)&selRef_asSection);
}

BOOL FCTagProviding.isTopic.getter(uint64_t a1)
{
  return sub_1BA783234(a1, (SEL *)&selRef_asTopic);
}

uint64_t sub_1BA783290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v7;
  uint64_t v8;
  unsigned int v9;
  void *v10;
  void *v11;
  _QWORD v13[2];
  uint64_t v14;

  v14 = MEMORY[0x1E0DEE9E8];
  v4 = 11;
  v7 = &byte_1E724C350;
  do
  {
    v9 = *v7++;
    v8 = v9;
    LOBYTE(v13[0]) = v9;
    sub_1BA7834E0(a3, (uint64_t)v13);
    v11 = v10;

    if (v11)
    {
      v13[0] = a1;
      v13[1] = a2;
      __asm { BR              X8 }
    }
    --v4;
  }
  while (v4);
  return v14;
}

void sub_1BA7834E0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

id sub_1BA783508(void *a1)
{
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(a1, sel_theme);
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_bannerImageForMask);
    swift_unknownObjectRelease();
    v2 = objc_msgSend(v3, sel_assetHandle);

  }
  return v2;
}

void type metadata accessor for FeedAdLayoutEnvironmentBuilder()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA7838A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_1BA7838F8(a1, a2, a3);
  return v6;
}

uint64_t sub_1BA7838F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BB872028();
  v7 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 144);
  v8 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  v9 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 152);
  v10 = sub_1BB86FAD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a2, v10);
  v11 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 160);
  v12 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a3, v12);
  return v3;
}

void type metadata accessor for FeedPrerollAdRequestScheduler()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA7839F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  sub_1BA783A64(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1BA783A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v11 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 144);
  v12 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
  v13 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 152);
  v14 = sub_1BB86FAD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a2, v14);
  v15 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 160);
  v16 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a3, v16);
  *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 168)) = a4;
  *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 176)) = a5;
  return v5;
}

void type metadata accessor for FeedBannerAdRequestScheduler()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BA783B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  sub_1BA783BF8(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t sub_1BA783BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 192)) = MEMORY[0x1E0DEE9D8];
  v13 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 144);
  v14 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a1, v14);
  v15 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 152);
  v16 = sub_1BB86FAD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a2, v16);
  v17 = v6 + *(_QWORD *)(*(_QWORD *)v6 + 160);
  v18 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a3, v18);
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 168)) = a4;
  *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 176)) = a5;
  sub_1BA4CECCC(a6, v6 + *(_QWORD *)(*(_QWORD *)v6 + 184));
  return v6;
}

void type metadata accessor for FeedAdGroupDataProvider()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t FeedAdGroupDataProvider.__allocating_init(blueprint:layoutBlueprint:layoutCollection:adjacentDistance:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  FeedAdGroupDataProvider.init(blueprint:layoutBlueprint:layoutCollection:adjacentDistance:)(a1, a2, a3, a4);
  return v8;
}

uint64_t FeedAdGroupDataProvider.init(blueprint:layoutBlueprint:layoutCollection:adjacentDistance:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v9 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 144);
  v10 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a1, v10);
  v11 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 152);
  v12 = sub_1BB86FAD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a2, v12);
  v13 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 160);
  v14 = sub_1BB870AC8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, a3, v14);
  *(double *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 168)) = a4;
  return v4;
}

void type metadata accessor for FeedNativeAdRequester()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t FeedNativeAdRequester.__allocating_init(blueprint:groupDataProvider:adManager:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  FeedNativeAdRequester.init(blueprint:groupDataProvider:adManager:)(a1, a2, a3);
  return v6;
}

uint64_t FeedNativeAdRequester.init(blueprint:groupDataProvider:adManager:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(*(_QWORD *)v3 + 168);
  *(_QWORD *)(v3 + v7) = dispatch_group_create();
  v8 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 144);
  v9 = sub_1BB871680();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a1, v9);
  *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 152)) = a2;
  sub_1BA4CECCC(a3, v3 + *(_QWORD *)(*(_QWORD *)v3 + 160));
  return v3;
}

uint64_t type metadata accessor for FeedBannerAdRequester()
{
  return objc_opt_self();
}

void sub_1BA783FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDecorationContext();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

id sub_1BA78404C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;

  v3 = *(_BYTE *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v1;
  *(_BYTE *)(v5 + 24) = v3;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  *(_QWORD *)(v2 - 96) = sub_1BA9B00A8;
  *(_QWORD *)(v2 - 88) = v5;
  *(_QWORD *)(v2 - 128) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v2 - 120) = 1107296256;
  *(_QWORD *)(v2 - 112) = sub_1BA61387C;
  *(_QWORD *)(v2 - 104) = &block_descriptor_128;
  v7 = _Block_copy((const void *)(v2 - 128));
  v8 = v1;
  v9 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);
  swift_release();
  return v9;
}

unint64_t sub_1BA7844F0()
{
  unint64_t result;

  result = qword_1ED39B1A8;
  if (!qword_1ED39B1A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoolean, &type metadata for FormatBoolean);
    atomic_store(result, (unint64_t *)&qword_1ED39B1A8);
  }
  return result;
}

uint64_t FormatItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  void (*v65)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE v75[4];
  int v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  unint64_t v93;
  _BYTE *v94;
  uint64_t v95;
  _BYTE *v96;
  _QWORD *v97;
  __int128 v98;
  char v99;
  uint64_t v100;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v77 = &v75[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v79 = &v75[-v6];
  MEMORY[0x1E0C80A78](v7);
  v81 = &v75[-v8];
  MEMORY[0x1E0C80A78](v9);
  v82 = &v75[-v10];
  MEMORY[0x1E0C80A78](v11);
  v87 = &v75[-v12];
  MEMORY[0x1E0C80A78](v13);
  v86 = &v75[-v14];
  MEMORY[0x1E0C80A78](v15);
  v89 = &v75[-v16];
  MEMORY[0x1E0C80A78](v17);
  v91 = &v75[-v18];
  MEMORY[0x1E0C80A78](v19);
  v94 = &v75[-v20];
  MEMORY[0x1E0C80A78](v21);
  v23 = &v75[-v22];
  MEMORY[0x1E0C80A78](v24);
  v26 = &v75[-v25];
  sub_1BAE9BAF0(0);
  MEMORY[0x1E0C80A78](v27);
  v29 = &v75[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = *(_QWORD *)(v1 + 8);
  v95 = *(_QWORD *)v1;
  v31 = *(_QWORD *)(v1 + 56);
  v92 = *(_QWORD *)(v1 + 48);
  v93 = v31;
  v90 = *(_QWORD *)(v1 + 64);
  v88 = *(_QWORD *)(v1 + 72);
  v32 = *(_QWORD *)(v1 + 80);
  v84 = *(_QWORD *)(v1 + 88);
  v85 = v32;
  v83 = *(_QWORD *)(v1 + 96);
  v80 = *(_QWORD *)(v1 + 104);
  v78 = *(_QWORD *)(v1 + 112);
  v76 = *(unsigned __int8 *)(v1 + 120);
  v33 = a1[3];
  v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v33);
  v35 = sub_1BAE9B9E8();
  v36 = sub_1BA4A2870(&qword_1ED3D1470, (uint64_t (*)(uint64_t))sub_1BAE9B9E8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatItem, v37, v33, (uint64_t)&type metadata for FormatItem, v35, (uint64_t)&type metadata for FormatVersions.JazzkonC, v34, (uint64_t)v29, v36, (uint64_t)&off_1E734BD80);
  v38 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v38 != -1)
    swift_once();
  v39 = sub_1BB86EB84();
  v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED476C20);
  v41 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  v41(v26, v40, v39);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v42 = v96;
  sub_1BAD248AC(v95, v30, 0, 0, 0, (uint64_t)v26, (uint64_t)sub_1BA90CF04, 0);
  if (v42)
  {
    sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    v95 = 0;
    sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41(v23, v40, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    v41(v23, v40, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    v43 = (uint64_t)v94;
    v41(v94, v40, v39);
    swift_storeEnumTagMultiPayload();
    v44 = v92;
    v45 = v93;
    sub_1BA682148(v92, v93);
    v96 = v29;
    v46 = v95;
    sub_1BAD24A04(v44, v45, 3, 0, 0, v43, (uint64_t)sub_1BA90CF04, 0);
    if (v46)
    {
      sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
      sub_1BA766C18(v44, v45);
      v29 = v96;
    }
    else
    {
      v48 = v40;
      sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
      sub_1BA766C18(v44, v45);
      v49 = (uint64_t)v91;
      v41(v91, v48, v39);
      swift_storeEnumTagMultiPayload();
      v50 = swift_bridgeObjectRetain();
      v51 = v96;
      sub_1BAD30670(v50, 4, 0, 0);
      v52 = (_BYTE *)v48;
      v29 = v51;
      sub_1BA4A2E80(v49, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      v53 = (uint64_t)v89;
      v41(v89, (uint64_t)v52, v39);
      swift_storeEnumTagMultiPayload();
      v54 = v88;
      swift_bridgeObjectRetain();
      v55 = sub_1BAE57FA4(v53, 5, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      v94 = v52;
      v95 = v39;
      if ((v55 & 1) != 0)
      {
        v98 = xmmword_1BB8D2D80;
        v99 = 0;
        v100 = v54;
        sub_1BAE9BB68();
        sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA653FC0();
        sub_1BB874464();
        v53 = (uint64_t)v89;
      }
      sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      v56 = (uint64_t)v86;
      v58 = v94;
      v57 = v95;
      v41(v86, (uint64_t)v94, v95);
      swift_storeEnumTagMultiPayload();
      v59 = swift_retain();
      sub_1BAD6DA90(v59, 6, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
      v60 = (uint64_t)v87;
      sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
      swift_release();
      v41((_BYTE *)v60, (uint64_t)v58, v57);
      swift_storeEnumTagMultiPayload();
      v61 = swift_bridgeObjectRetain();
      sub_1BAD307A0(v61, 7, 0, 0);
      sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      v62 = (uint64_t)v82;
      v41(v82, (uint64_t)v58, v57);
      swift_storeEnumTagMultiPayload();
      v63 = *(_QWORD *)(v83 + 16);
      swift_bridgeObjectRetain();
      if (v63)
      {
        v64 = sub_1BAE57FA4(v62, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0);
        v65 = (void (*)(_BYTE *, _BYTE *, uint64_t))v41;
        if ((v64 & 1) != 0)
        {
          v98 = xmmword_1BB8D2DD0;
          v99 = 0;
          v66 = swift_bridgeObjectRetain();
          v67 = sub_1BA67F4CC(v66);
          swift_bridgeObjectRelease();
          v97 = v67;
          swift_retain();
          sub_1BA67FABC((uint64_t *)&v97, sub_1BA67FB34, sub_1BA6801F8);
          swift_release();
          v100 = (uint64_t)v97;
          sub_1BAE9BB68();
          sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
          v68 = MEMORY[0x1E0DEA968];
          sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v68, MEMORY[0x1E0DEA970]);
          v29 = v96;
          sub_1BB874464();
          swift_release();
        }
        v62 = (uint64_t)v82;
      }
      else
      {
        v65 = (void (*)(_BYTE *, _BYTE *, uint64_t))v41;
      }
      sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      v69 = (uint64_t)v81;
      v70 = v94;
      v65(v81, v94, v95);
      swift_storeEnumTagMultiPayload();
      v71 = swift_bridgeObjectRetain();
      sub_1BAD308D0(v71, 9, 0, 0);
      sub_1BA4A2E80(v69, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      v72 = (uint64_t)v79;
      v65(v79, v70, v95);
      swift_storeEnumTagMultiPayload();
      v73 = swift_bridgeObjectRetain();
      sub_1BAD30A00(v73, 10, 0, 0);
      sub_1BA4A2E80(v72, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      v74 = (uint64_t)v77;
      v65(v77, v70, v95);
      swift_storeEnumTagMultiPayload();
      sub_1BAD6DCA8(v76, 11, 0, 0, v74, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v74, type metadata accessor for FormatVersionRequirement);
    }
  }
  return sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BAE9BAF0);
}

uint64_t sub_1BA785074()
{
  unsigned __int8 *v0;

  return sub_1BADB99D4(*v0);
}

uint64_t sub_1BA78507C()
{
  unsigned __int8 *v0;

  return sub_1BADB5E6C(*v0);
}

uint64_t sub_1BA785084()
{
  unsigned __int8 *v0;

  return sub_1BAE0A6E4(*v0);
}

unint64_t sub_1BA78508C()
{
  unint64_t result;

  result = qword_1ED3B70F8;
  if (!qword_1ED3B70F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAccessibilityRole, &type metadata for FormatAccessibilityRole);
    atomic_store(result, (unint64_t *)&qword_1ED3B70F8);
  }
  return result;
}

unint64_t sub_1BA7850D0()
{
  unint64_t result;

  result = qword_1ED3AFE90;
  if (!qword_1ED3AFE90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemKind, &type metadata for FormatItemKind);
    atomic_store(result, (unint64_t *)&qword_1ED3AFE90);
  }
  return result;
}

uint64_t sub_1BA785114(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA785130(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA785130(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9DA8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

unint64_t sub_1BA7852C4(unint64_t result, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unint64_t v7;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = result;
  if (a3 < 3)
    goto LABEL_3;
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  sub_1BA6E6E84(a3);
  sub_1BA6E6E84(v9);
  sub_1BA6E6E84(v10);
  sub_1BA7852C4(v7, a2, v9, v10);
  sub_1BA6E7468(v9);
  sub_1BA6E7468(v10);
  result = sub_1BA6E7468(a3);
  if (!v4)
  {
LABEL_3:
    if (a4 >= 3)
    {
      v11 = *(_QWORD *)(a4 + 16);
      v12 = *(_QWORD *)(a4 + 24);
      sub_1BA6E6E84(a4);
      sub_1BA6E6E84(v11);
      sub_1BA6E6E84(v12);
      sub_1BA7852C4(v7, a2, v11, v12);
      sub_1BA6E7468(v11);
      sub_1BA6E7468(v12);
      return sub_1BA6E7468(a4);
    }
  }
  return result;
}

_QWORD *initializeWithCopy for FormatCommandOpenURL(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      v7 = sub_1BB86C67C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)((char *)a1 + *(int *)(v8 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v8 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BA7854AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16))
  {
    type metadata accessor for FormatDecorationContext();
    sub_1BB86DD80();
    v6 = *(_QWORD *)(*(_QWORD *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16))
    {
      v11 = *(_QWORD *)(v12 + 56);
      v7 = swift_bridgeObjectRetain();
      v8 = sub_1BA6E42A0(v7);
      sub_1BA6E3FB8(v8);
      swift_release();
      v9 = v11;
    }
    else
    {
      v9 = sub_1BA6E3F38();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7855E0(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1BA7855E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  unsigned int v45;
  unint64_t v46;
  size_t v47;
  uint64_t isStackAllocationSafe;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t result;
  id v57;
  _QWORD v58[2];
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  id v70;
  uint64_t v71[2];
  _QWORD v72[4];

  v59 = a4;
  v72[3] = *MEMORY[0x1E0C80C00];
  v61 = *(_QWORD *)(a2 + 16);
  if (v61)
  {
    v60 = a2 + 32;
    swift_retain();
    v58[1] = a2;
    swift_bridgeObjectRetain();
    v7 = 0;
    v69 = (void *)a3;
LABEL_5:
    v65 = a1;
    v8 = (uint64_t *)(v60 + 24 * v7);
    v9 = v8[1];
    v68 = *v8;
    v10 = v8[2];
    v11 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    v66 = v10 & 0xFFFFFFFFFFFFFFFLL;
    swift_retain();
    if (v11 != -1)
      swift_once();
    v12 = qword_1ED4768D0;
    v13 = *(_QWORD *)(qword_1ED4768D0 + 24);
    swift_bridgeObjectRetain();
    sub_1BB86DD20();
    v14 = (uint64_t *)(v12 + 16);
    swift_beginAccess();
    v15 = *(_QWORD *)(v12 + 16);
    v16 = *(_QWORD *)(v15 + 16);
    v62 = v10;
    v67 = v7;
    if (v16)
    {
      swift_bridgeObjectRetain();
      v17 = sub_1BA6E35A8(v68, v9);
      if ((v18 & 1) != 0)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 24 * v17 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        sub_1BB86DD2C();
        swift_bridgeObjectRelease();
        v40 = *(_QWORD *)(v19 + 16);
        if (!v40)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          a1 = v65;
          goto LABEL_4;
        }
        v68 = v9;
        v64 = v19;
        v41 = (uint64_t *)(v19 + 64);
        while (1)
        {
          v42 = *(v41 - 1);
          v43 = *v41;
          v44 = *(_BYTE *)(v42 + 32);
          v45 = v44 & 0x3F;
          v46 = (unint64_t)((1 << v44) + 63) >> 6;
          v47 = 8 * v46;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v45 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)v58 - ((v47 + 15) & 0x3FFFFFFFFFFFFFF0), v47);
            v50 = v69;
            v49 = v70;
            v51 = sub_1BA6EB5B4((uint64_t)v58 - ((v47 + 15) & 0x3FFFFFFFFFFFFFF0), v46, v42, (uint64_t)v69);
            swift_bridgeObjectRelease();
            v70 = v49;
            if (v49)
            {
              v57 = v70;
              swift_willThrow();

              __break(1u);
LABEL_42:
              swift_bridgeObjectRelease();

              MEMORY[0x1BCCE5C38](v50, -1, -1);
              __break(1u);
LABEL_43:
              result = sub_1BB874560();
              __break(1u);
              return result;
            }
          }
          else
          {
            v50 = (void *)swift_slowAlloc();
            bzero(v50, v47);
            v52 = v70;
            v53 = sub_1BA6EB5B4((uint64_t)v50, v46, v42, (uint64_t)v69);
            v70 = v52;
            if (v52)
              goto LABEL_42;
            v51 = v53;
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v50, -1, -1);
            v50 = v69;
          }
          v54 = sub_1BA6EB330(v51, v42);
          swift_release();
          if ((v54 & 1) != 0)
          {
            v55 = sub_1BA6EBD20((uint64_t)v50, v43);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v55 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              a1 = v62;
LABEL_4:
              v7 = v67 + 1;
              swift_retain();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              if (v7 == v61)
              {
                swift_bridgeObjectRelease();
                goto LABEL_39;
              }
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v41 += 5;
          if (!--v40)
            goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease();
    }
    v63 = v13;
    swift_endAccess();
    v20 = v68;
    v71[0] = v68;
    v71[1] = v9;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v71, v72);
    v21 = v72[1];
    v64 = v72[0];
    v22 = v72[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v22;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v71[0] = *v14;
    v24 = v71[0];
    *v14 = 0x8000000000000000;
    v26 = sub_1BA6E35A8(v20, v9);
    v27 = *(_QWORD *)(v24 + 16);
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_41:
      __break(1u);
    }
    v30 = v25;
    if (*(_QWORD *)(v24 + 24) < v29)
    {
      sub_1BA7AAAE4(v29, isUniquelyReferenced_nonNull_native);
      v31 = sub_1BA6E35A8(v68, v9);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_43;
      v26 = v31;
      v33 = (_QWORD *)v71[0];
      if ((v30 & 1) == 0)
        goto LABEL_20;
LABEL_18:
      v34 = (_QWORD *)(v33[7] + 24 * v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v34 = v64;
      v34[1] = v21;
      v34[2] = v19;
LABEL_22:
      *v14 = (uint64_t)v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_23;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v33 = (_QWORD *)v71[0];
      if ((v25 & 1) != 0)
        goto LABEL_18;
    }
    else
    {
      sub_1BB4C1F6C();
      v33 = (_QWORD *)v71[0];
      if ((v30 & 1) != 0)
        goto LABEL_18;
    }
LABEL_20:
    v33[(v26 >> 6) + 8] |= 1 << v26;
    v35 = (_QWORD *)(v33[6] + 16 * v26);
    *v35 = v68;
    v35[1] = v9;
    v36 = (_QWORD *)(v33[7] + 24 * v26);
    *v36 = v64;
    v36[1] = v21;
    v36[2] = v19;
    v37 = v33[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_41;
    v33[2] = v39;
    swift_bridgeObjectRetain();
    goto LABEL_22;
  }
  swift_retain();
LABEL_39:
  result = swift_bridgeObjectRelease();
  *v59 = a1;
  return result;
}

uint64_t sub_1BA785BF0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9C50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690]);
}

void sub_1BA785C04(uint64_t a1)
{
  sub_1BB4CE550(a1, &qword_1ED3C0510, type metadata accessor for AttributeName, (void (*)(void))sub_1BA785CB4);
}

void sub_1BA785C2C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3BBA98)
  {
    sub_1BA7425CC();
    sub_1BB86D9F0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3BBA98);
  }
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_1BA4AD288(a1, &qword_1ED3D5FF0, (uint64_t)&unk_1E7271E10, MEMORY[0x1E0DEEC78]);
}

unint64_t sub_1BA785CB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C0460;
  if (!qword_1ED3C0460)
  {
    type metadata accessor for AttributeName(255);
    result = MEMORY[0x1BCCE5B24](&unk_1BB87BDD4, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C0460);
  }
  return result;
}

uint64_t sub_1BA785CFC(uint64_t a1, __int128 *a2, uint64_t a3)
{
  return sub_1BA64655C(a1, a2, a3, (void (*)(uint64_t, __int128 *))sub_1BA73B1E0);
}

unint64_t sub_1BA785D18()
{
  unint64_t result;

  result = qword_1ED39BA00;
  if (!qword_1ED39BA00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategory, &type metadata for FormatContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1ED39BA00);
  }
  return result;
}

uint64_t sub_1BA785D5C()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v2 = *v0;
  v10 = *((_BYTE *)v0 + 8);
  type metadata accessor for GroupLayoutContext();
  v3 = sub_1BB86D63C();
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v5;
  v6 = v4 | 0x4000000000000000;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v5;
  sub_1BA713440();
  swift_release();
  if (v1)
  {
    sub_1BB86EAB8();

  }
  else
  {
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v2;
    *(_QWORD *)(v8 + 24) = v5;
    sub_1BA70FF28(v6, v8 | 0x4000000000000000, v10);
    swift_release();
    sub_1BB86EB0C();
  }
  return swift_release();
}

void sub_1BA785ECC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3BE980)
  {
    v2 = sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3B2E30);
    v5 = type metadata accessor for FormatNodeBindingItem(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3BE980);
  }
}

_OWORD *sub_1BA785F30(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_1BA76EAE0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BB4C18B8();
      goto LABEL_7;
    }
    sub_1BA7860C8(v15, a4 & 1);
    v21 = sub_1BA6E35A8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BA786060(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1BB874560();
  __break(1u);
  return result;
}

_OWORD *sub_1BA786060(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BA76EAE0(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BA7860C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  sub_1BA7863C0();
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1BA76EAE0(v24, v35);
      }
      else
      {
        sub_1BA747A10((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1BA76EAE0(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1BA7863C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9B70)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9B70);
  }
}

void sub_1BA786428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C0588)
  {
    sub_1BA81CFD8();
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C0588);
  }
}

void sub_1BA78647C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C02C0)
  {
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C02C0);
  }
}

unint64_t sub_1BA7864E4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F67E4(0, &qword_1ED3C0510, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (unint64_t *)&qword_1ED3C0460, (uint64_t)&unk_1BB87BDD4);
  v2 = sub_1BB873F6C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA6AA01C(v6, (uint64_t)&v13, (uint64_t)&qword_1ED3C0468, (uint64_t)type metadata accessor for AttributeName, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA76EB4C);
    v7 = v13;
    result = sub_1BA76E68C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1BA76EAE0(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1BA78664C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3C8C30)
  {
    v2 = sub_1BA831B14();
    v4 = type metadata accessor for FormatCellAutomation(a1, (uint64_t)&type metadata for ArticleAutomation, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3C8C30);
  }
}

uint64_t sub_1BA7866A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v2 = sub_1BB86E008();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A600, (uint64_t (*)(uint64_t))sub_1BA78682C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  MEMORY[0x1E0C80A78](v6);
  v11[1] = *a1;
  v7 = qword_1ED39E310;
  swift_unknownObjectRetain();
  if (v7 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED39A4E0);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  MEMORY[0x1E0C80A78](v9);
  v11[-2] = sub_1BA78682C();
  swift_getKeyPath();
  sub_1BB86ED10();
  return sub_1BB86DEA0();
}

unint64_t sub_1BA78682C()
{
  unint64_t result;

  result = qword_1ED3B9800;
  if (!qword_1ED3B9800)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B9800);
  }
  return result;
}

uint64_t sub_1BA786880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  unint64_t v50;
  size_t v51;
  uint64_t isStackAllocationSafe;
  uint64_t v53;
  void *v54;
  char v55;
  char v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  v61 = *(_QWORD *)(a3 + 16);
  if (!v61)
    return a2;
  sub_1BB86DD80();
  v5 = *(_QWORD *)(*(_QWORD *)(v69 + 40) + 16);
  swift_beginAccess();
  v6 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 16);
  v59 = a2;
  if (v6)
  {
    v68[0] = *(_QWORD *)(v69 + 56);
    v7 = swift_bridgeObjectRetain();
    v8 = sub_1BA6E42A0(v7);
    sub_1BA6E3FB8(v8);
    swift_release();
    v66 = v68[0];
  }
  else
  {
    v66 = sub_1BA6E3F38();
    swift_release();
  }
  v60 = a3 + 32;
  v58 = a3;
  swift_bridgeObjectRetain();
  v9 = 0;
LABEL_8:
  v65 = v9;
  v10 = (uint64_t *)(v60 + 24 * v9);
  v12 = *v10;
  v11 = v10[1];
  v62 = v10[2];
  v13 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v14 = qword_1ED4768D0;
  v15 = *(_QWORD *)(qword_1ED4768D0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB86DD20();
  v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  v17 = *(_QWORD *)(v14 + 16);
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(v12, v11);
    if ((v19 & 1) != 0)
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 24 * v18 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v44 = *(_QWORD *)(v20 + 16);
      if (!v44)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      v63 = v20;
      v64 = v11;
      v45 = (uint64_t *)(v20 + 64);
      while (1)
      {
        v46 = *(v45 - 1);
        v47 = *v45;
        v48 = *(_BYTE *)(v46 + 32);
        v49 = v48 & 0x3F;
        v50 = (unint64_t)((1 << v48) + 63) >> 6;
        v51 = 8 * v50;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v49 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v51);
          v53 = sub_1BA6EB5B4((uint64_t)&v58 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v50, v46, v66);
          swift_bridgeObjectRelease();
        }
        else
        {
          v54 = (void *)swift_slowAlloc();
          bzero(v54, v51);
          v53 = sub_1BA6EB5B4((uint64_t)v54, v50, v46, v66);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v54, -1, -1);
        }
        v55 = sub_1BA6EB330(v53, v46);
        swift_release();
        if ((v55 & 1) != 0)
        {
          v56 = sub_1BA6EBD20(v66, v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v59 = v62;
LABEL_7:
            v9 = v65 + 1;
            if (v65 + 1 == v61)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v59;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v45 += 5;
        if (!--v44)
          goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
  }
  v63 = v15;
  swift_endAccess();
  v67[0] = v12;
  v67[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38(v67, v68);
  v21 = v68[1];
  v64 = v68[0];
  v22 = v68[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = v22;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = v12;
  v25 = isUniquelyReferenced_nonNull_native;
  v67[0] = *v16;
  v26 = v67[0];
  *v16 = 0x8000000000000000;
  v27 = v24;
  v28 = v11;
  v30 = sub_1BA6E35A8(v24, v11);
  v31 = *(_QWORD *)(v26 + 16);
  v32 = (v29 & 1) == 0;
  v33 = v31 + v32;
  if (__OFADD__(v31, v32))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  v34 = v29;
  if (*(_QWORD *)(v26 + 24) >= v33)
  {
    if ((v25 & 1) != 0)
    {
      v37 = (_QWORD *)v67[0];
      if ((v29 & 1) != 0)
        goto LABEL_21;
    }
    else
    {
      sub_1BB4C1F6C();
      v37 = (_QWORD *)v67[0];
      if ((v34 & 1) != 0)
        goto LABEL_21;
    }
LABEL_23:
    v37[(v30 >> 6) + 8] |= 1 << v30;
    v39 = (uint64_t *)(v37[6] + 16 * v30);
    *v39 = v27;
    v39[1] = v28;
    v40 = (uint64_t *)(v37[7] + 24 * v30);
    *v40 = v64;
    v40[1] = v21;
    v40[2] = v20;
    v41 = v37[2];
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_41;
    v11 = v28;
    v37[2] = v43;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BA7AAAE4(v33, v25);
  v35 = sub_1BA6E35A8(v27, v28);
  if ((v34 & 1) == (v36 & 1))
  {
    v30 = v35;
    v37 = (_QWORD *)v67[0];
    if ((v34 & 1) == 0)
      goto LABEL_23;
LABEL_21:
    v38 = (uint64_t *)(v37[7] + 24 * v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v38 = v64;
    v38[1] = v21;
    v38[2] = v20;
    v11 = v28;
LABEL_25:
    *v16 = (uint64_t)v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA786EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA786880(a1, a2, a3);
}

uint64_t sub_1BA786EEC()
{
  return sub_1BA786F18();
}

uint64_t sub_1BA786F18()
{
  uint64_t v0;

  sub_1BB86DD80();
  v0 = FormatContextLayoutOptions.selectors.getter();
  swift_release();
  return v0;
}

uint64_t FormatContextLayoutOptions.selectors.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16))
    return sub_1BA6E3F38();
  v5 = *(_QWORD *)(v0 + 56);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BA6E42A0(v2);
  sub_1BA6E3FB8(v3);
  return v5;
}

uint64_t FormatGeometryNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];
  _OWORD v35[2];
  uint64_t v36;
  _OWORD v37[4];
  uint64_t v38;

  v38 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BA7E89D8(v9, v10, v11, v12, v13, v14, v15, v16);
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v30[2] = a2;
    v31 = a1;
    v32 = v2;
    v33 = v3;
    *(_QWORD *)&v37[0] = MEMORY[0x1E0DEE9D8];
    v19 = v17;
    sub_1BA76B828(0, v18, 0);
    v20 = *(_QWORD *)&v37[0];
    v21 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v30[1] = v19;
    v22 = v19 + v21;
    v23 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BA900B30(v22, (uint64_t)v8);
      v24 = swift_allocBox();
      sub_1BA8569CC((uint64_t)v8, v25);
      *(_QWORD *)&v37[0] = v20;
      v27 = *(_QWORD *)(v20 + 16);
      v26 = *(_QWORD *)(v20 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1BA76B828(v26 > 1, v27 + 1, 1);
        v20 = *(_QWORD *)&v37[0];
      }
      *(_QWORD *)(v20 + 16) = v27 + 1;
      *(_QWORD *)(v20 + 8 * v27 + 32) = v24 | 0x9000000000000000;
      v22 += v23;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    a1 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
  }
  memset(v37, 0, 48);
  v36 = 0;
  memset(v35, 0, sizeof(v35));
  memset(v34, 0, sizeof(v34));
  v28 = sub_1BA706104(0, 0, v20, MEMORY[0x1E0DEE9E8], 0, 0, 0, MEMORY[0x1E0DEE9D8], (uint64_t *)v37, (uint64_t)v35, (uint64_t *)v34);
  swift_bridgeObjectRelease();
  sub_1BA706800((uint64_t)v35);
  FormatGeometryNode.bindChildren(binder:context:)(a1, v28);
  return swift_release();
}

uint64_t FormatGeometryNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 56);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain_n();
    v9 = v7 + 64;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(a1, a2);
      if (v3)
        break;
      v9 += 40;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v8)
        return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA78731C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[144];
  _BYTE v8[144];
  _BYTE v9[40];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = swift_bridgeObjectRetain() + 40 * v2 - 8;
    while (1)
    {
      sub_1BA4C010C(v4, (uint64_t)v9);
      sub_1BA7C2A4C();
      if (swift_dynamicCast())
        break;
      v4 -= 40;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    nullsub_1(v8);
    swift_bridgeObjectRelease();
    sub_1BA744E38((uint64_t)v8, (uint64_t)v7, (unint64_t *)&qword_1ED3C23B0);
    return sub_1BA744E38((uint64_t)v7, a2, (unint64_t *)&qword_1ED3C23B0);
  }
  else
  {
LABEL_6:
    sub_1BA758A4C();
    swift_allocError();
    *(_QWORD *)v5 = 0x7573734964656546;
    *(_QWORD *)(v5 + 8) = 0xE900000000000065;
    *(_BYTE *)(v5 + 56) = 6;
    return swift_willThrow();
  }
}

uint64_t sub_1BA787460(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, double);
  uint64_t v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;

  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - v12;
  v14 = *(void (**)(char *, double))(v7 + 16);
  v14((char *)&v21 - v12, v11);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
  sub_1BA6B017C(v15);
  v16 = (_QWORD *)*a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = (uint64_t)v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_1BA6A94A8(0, v16[2] + 1, 1, v16);
    *a2 = (uint64_t)v16;
  }
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    v16 = sub_1BA6A94A8((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
    *a2 = (uint64_t)v16;
  }
  ((void (*)(char *, char *, uint64_t))v14)(v9, v13, a3);
  sub_1BA7875C0(v19, (uint64_t)v9, a2, a3, a4);
  *a2 = (uint64_t)v16;
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, a3);
}

uint64_t sub_1BA7875C0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1BA4CECCC(&v12, v10 + 40 * a1 + 32);
}

uint64_t ArticleAutomation.init(headline:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  char v13;
  uint64_t result;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  v8 = objc_msgSend(a1, sel_hasVideo);
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_hasAudioTrack) & 1) != 0)
    v9 = objc_msgSend(a1, sel_hasAudioTrack);
  else
    v9 = 0;
  v10 = (unint64_t)objc_msgSend(a1, sel_contentType);
  v11 = objc_msgSend(a1, sel_isPaid);
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_isBundlePaid) & 1) != 0)
    v12 = objc_msgSend(a1, sel_isBundlePaid);
  else
    v12 = 0;
  if (v10 >= 4)
    v13 = 0;
  else
    v13 = 0x3010200u >> (8 * v10);
  result = swift_unknownObjectRelease();
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 17) = v9;
  *(_BYTE *)(a2 + 18) = v13;
  *(_BYTE *)(a2 + 19) = v11;
  *(_BYTE *)(a2 + 20) = v12;
  return result;
}

uint64_t sub_1BA787778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  char v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v121;
  int EnumCaseMultiPayload;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(_QWORD);
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t (*v168)();
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t (*v172)();
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t (*v201)(uint64_t);
  uint64_t v202;
  uint64_t (*v203)(uint64_t);
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  BOOL v214;
  char v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unsigned __int8 v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unsigned __int8 v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t *v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _QWORD *v264;
  uint64_t *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int v274;
  char v275;
  uint64_t v276[5];
  unint64_t v277;
  uint64_t v278[6];
  uint64_t v279;

  v269 = a8;
  v258 = a7;
  v257 = a6;
  v271 = a4;
  v272 = a5;
  v270 = a3;
  v261 = a2;
  v273 = a1;
  v256 = a9;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3B78C0, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v260 = (uint64_t)&v233 - v15;
  v247 = type metadata accessor for FormatOption();
  v250 = *(_QWORD *)(v247 - 8);
  MEMORY[0x1E0C80A78](v247);
  v244 = (uint64_t)&v233 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v245 = (uint64_t *)((char *)&v233 - v18);
  MEMORY[0x1E0C80A78](v19);
  v259 = (uint64_t)&v233 - v20;
  MEMORY[0x1E0C80A78](v21);
  v251 = (uint64_t *)((char *)&v233 - v22);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2500, v23, v13);
  MEMORY[0x1E0C80A78](v24);
  v248 = (uint64_t)&v233 - v25;
  v249 = type metadata accessor for FormatPropertyDefinition(0);
  v252 = *(_QWORD *)(v249 - 8);
  MEMORY[0x1E0C80A78](v249);
  v246 = (uint64_t)&v233 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v233 - v28;
  sub_1BA7A2A04(0);
  v240 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v233 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v243);
  v255 = (uint64_t)&v233 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v34);
  v242 = (uint64_t)&v233 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v263 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v263);
  v264 = (uint64_t *)((char *)&v233 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v262 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v262);
  v253 = (char *)&v233 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v267 = (uint64_t)&v233 - v39;
  MEMORY[0x1E0C80A78](v40);
  v266 = v12;
  v41 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
  v42 = *(_QWORD *)(v41 + 16);
  v265 = (uint64_t *)((char *)&v233 - v43);
  if (v42)
  {
    swift_bridgeObjectRetain();
    v44 = 0;
    v45 = 0;
    do
    {
      v275 = *(_BYTE *)(v41 + v44 + 32);
      sub_1BA758024();
      v46 = v276[0];
      if ((v276[0] & ~v45) == 0)
        v46 = 0;
      v45 |= v46;
      ++v44;
    }
    while (v42 != v44);
    swift_bridgeObjectRelease();
  }
  else
  {
    v45 = 0;
  }
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v45;
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v49 = v48;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = MEMORY[0x1E0DEE9D8];
  v51 = (_QWORD *)(v50 + 16);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = sub_1BA7F069C;
  *(_QWORD *)(v52 + 24) = v47;
  swift_beginAccess();
  v53 = *(_QWORD **)(v50 + 16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v50 + 16) = v53;
  v239 = v29;
  v241 = v32;
  v254 = v49;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v53 = sub_1BA7892A0(0, v53[2] + 1, 1, v53);
    *v51 = v53;
  }
  v274 = a11;
  v55 = a10;
  v57 = v53[2];
  v56 = v53[3];
  if (v57 >= v56 >> 1)
  {
    v53 = sub_1BA7892A0((_QWORD *)(v56 > 1), v57 + 1, 1, v53);
    *v51 = v53;
  }
  v53[2] = v57 + 1;
  v58 = &v53[2 * v57];
  v58[4] = sub_1BA7F05A8;
  v58[5] = v52;
  swift_endAccess();
  swift_release();
  v59 = v267;
  v60 = v273;
  v61 = v269;
  v62 = (_QWORD *)v268;
  sub_1BA789374(v270, v271, v50, v272, 1, v269, a10, v274 & 1, v267);
  v63 = v62;
  if (!v62)
  {
    swift_release();
    v70 = v265;
    sub_1BA5193C4(v59, (uint64_t)v265, type metadata accessor for FeedHeadline);
    v72 = *v70;
    v71 = v70[1];
    swift_bridgeObjectRetain();
    v73 = v261;
    v74 = sub_1BA78B1DC(v261, v61, a10, v72, v71);
    swift_bridgeObjectRelease();
    v279 = v74;
    swift_bridgeObjectRetain();
    v75 = sub_1BA78B2D4(v73, v61, a10, v72, v71);
    swift_bridgeObjectRelease();
    v253 = (char *)v75;
    v277 = v75;
    v254 = v74;
    if (!a10)
    {
      v91 = 0;
      v92 = 0;
      v93 = 0;
      v89 = 0;
      v76 = 0;
      goto LABEL_50;
    }
    v76 = *(_QWORD *)(v73 + 16);
    if (v76)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v77 = sub_1BA6E35A8(v269, a10);
      if ((v78 & 1) != 0)
      {
        v79 = *(_QWORD *)(*(_QWORD *)(v73 + 56) + 8 * v77);
        swift_retain();
        swift_bridgeObjectRelease();
        v80 = *(_QWORD *)(v79 + 136);
        swift_bridgeObjectRetain();
        swift_release();
        if (*(_QWORD *)(v80 + 16))
        {
          swift_bridgeObjectRetain();
          v81 = sub_1BA6E35A8(v72, v71);
          if ((v82 & 1) != 0)
          {
            v83 = (uint64_t *)(*(_QWORD *)(v80 + 56) + 48 * v81);
            v84 = v83[1];
            v272 = *v83;
            v85 = v83[2];
            v86 = v83[3];
            v87 = v83[4];
            v88 = v83[5];
            v269 = v84;
            v270 = v87;
            swift_bridgeObjectRetain();
            v271 = v85;
            swift_bridgeObjectRetain();
            v89 = v86;
            swift_bridgeObjectRetain();
            v55 = v88;
            swift_bridgeObjectRetain();
          }
          else
          {
            v271 = 0;
            v272 = 0;
            v269 = 0;
            v270 = 0;
            v89 = 0;
            v55 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v271 = 0;
          v272 = 0;
          v269 = 0;
          v270 = 0;
          v89 = 0;
          v55 = 0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v92 = v269;
        v76 = v270;
        v93 = v271;
        v91 = v272;
        goto LABEL_50;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v91 = 0;
      v92 = 0;
      v93 = 0;
      v89 = 0;
      v76 = 0;
    }
    else
    {
      v91 = 0;
      v92 = 0;
      v93 = 0;
      v89 = 0;
    }
    v55 = 0;
    goto LABEL_50;
  }
  swift_release();
  if ((*(_BYTE *)(v266 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) & 1) == 0)
    return swift_willThrow();
  v64 = *(_QWORD *)(v41 + 16);
  if (v64)
  {
    swift_bridgeObjectRetain();
    v65 = 0;
    v66 = 0;
    v67 = (uint64_t)v253;
    v68 = MEMORY[0x1E0DEE9D8];
    do
    {
      v275 = *(_BYTE *)(v41 + v65 + 32);
      sub_1BA758024();
      v69 = v276[0];
      if ((v276[0] & ~v66) == 0)
        v69 = 0;
      v66 |= v69;
      ++v65;
    }
    while (v64 != v65);
    swift_bridgeObjectRelease();
  }
  else
  {
    v66 = 0;
    v67 = (uint64_t)v253;
    v68 = MEMORY[0x1E0DEE9D8];
  }
  v94 = swift_allocObject();
  *(_QWORD *)(v94 + 16) = v66;
  v95 = swift_allocObject();
  *(_QWORD *)(v95 + 16) = v68;
  v96 = (_QWORD *)(v95 + 16);
  v97 = swift_allocObject();
  *(_QWORD *)(v97 + 16) = sub_1BB46943C;
  *(_QWORD *)(v97 + 24) = v94;
  swift_beginAccess();
  v98 = *(_QWORD **)(v95 + 16);
  swift_retain();
  v99 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v95 + 16) = v98;
  if ((v99 & 1) == 0)
  {
    v98 = sub_1BA7892A0(0, v98[2] + 1, 1, v98);
    *v96 = v98;
  }
  v101 = v98[2];
  v100 = v98[3];
  if (v101 >= v100 >> 1)
  {
    v98 = sub_1BA7892A0((_QWORD *)(v100 > 1), v101 + 1, 1, v98);
    *v96 = v98;
  }
  v98[2] = v101 + 1;
  v102 = &v98[2 * v101];
  v102[4] = sub_1BB469490;
  v102[5] = v97;
  swift_endAccess();
  swift_release();
  v60 = v273;
  sub_1BA789374(v270, v271, v95, v272, 1, 0, 0, v274 & 1, v67);
  swift_release();
  v70 = v265;
  sub_1BA5193C4(v67, (uint64_t)v265, type metadata accessor for FeedHeadline);
  v104 = *v70;
  v103 = v70[1];
  swift_bridgeObjectRetain();
  v105 = v261;
  v106 = sub_1BA78B1DC(v261, 42, 0xE100000000000000, v104, v103);
  swift_bridgeObjectRelease();
  v254 = v106;
  v279 = v106;
  swift_bridgeObjectRetain();
  v107 = sub_1BA78B2D4(v105, 42, 0xE100000000000000, v104, v103);
  swift_bridgeObjectRelease();
  v253 = (char *)v107;
  v277 = v107;
  v108 = *(_QWORD *)(v105 + 16);
  swift_bridgeObjectRetain();
  if (v108 && (v109 = sub_1BA6E35A8(42, 0xE100000000000000), (v110 & 1) != 0))
  {
    v111 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v105 + 56) + 8 * v109) + 136);
    if (*(_QWORD *)(v111 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v112 = sub_1BA6E35A8(v104, v103);
      if ((v113 & 1) != 0)
      {
        v114 = (uint64_t *)(*(_QWORD *)(v111 + 56) + 48 * v112);
        v115 = v114[1];
        v272 = *v114;
        v116 = v114[2];
        v117 = v114[3];
        v118 = v114[4];
        v119 = v114[5];
        v269 = v115;
        v270 = v118;
        swift_bridgeObjectRetain();
        v271 = v116;
        swift_bridgeObjectRetain();
        v268 = v117;
        swift_bridgeObjectRetain();
        v267 = v119;
        swift_bridgeObjectRetain();
      }
      else
      {
        v271 = 0;
        v272 = 0;
        v269 = 0;
        v268 = 0;
        v270 = 0;
        v267 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = v269;
    }
    else
    {
      v271 = 0;
      v272 = 0;
      v92 = 0;
      v268 = 0;
      v270 = 0;
      v267 = 0;
    }

    swift_bridgeObjectRelease();
    v63 = 0;
    v89 = v268;
    v76 = v270;
    v93 = v271;
    v55 = v267;
    v91 = v272;
  }
  else
  {

    swift_bridgeObjectRelease();
    v91 = 0;
    v92 = 0;
    v93 = 0;
    v89 = 0;
    v76 = 0;
    v55 = 0;
    v63 = 0;
  }
LABEL_50:
  v271 = v93;
  v272 = v91;
  v278[0] = v91;
  v278[1] = v92;
  v278[2] = v93;
  v278[3] = v89;
  v268 = v89;
  v270 = v76;
  v278[4] = v76;
  v278[5] = v55;
  v267 = v55;
  v276[3] = v262;
  v276[4] = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v276);
  sub_1BA4C2DD8((uint64_t)v70, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  v121 = (uint64_t)v264;
  sub_1BA7BC210(v276, (uint64_t)v264);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v269 = v92;
  if (EnumCaseMultiPayload == 8)
  {
    v129 = v255;
    sub_1BA5193C4(v121, v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v130 = (uint64_t *)(a12 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
    swift_beginAccess();
    v131 = v130[1];
    v132 = v129 + *(int *)(v243 + 20);
    v133 = *(_QWORD *)(v131 + 16);
    v243 = v132;
    if (v133)
    {
      v134 = *v130;
      v135 = *(_QWORD *)(v132 + 16);
      v136 = *(_QWORD *)(v132 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v137 = sub_1BA6E35A8(v135, v136);
      if ((v138 & 1) != 0)
      {
        v139 = (uint64_t)v241;
        sub_1BA4C2DD8(*(_QWORD *)(v131 + 56) + *(_QWORD *)(v240 + 72) * v137, (uint64_t)v241, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
        v140 = *(_QWORD *)(v139 + 8);
        v237 = *(_QWORD *)v139;
        v141 = *(_QWORD *)(v139 + 24);
        v264 = *(_QWORD **)(v139 + 16);
        v143 = *(_QWORD *)(v139 + 32);
        v142 = *(_QWORD *)(v139 + 40);
        v144 = *(_QWORD *)(v139 + 48);
        v236 = *(_QWORD *)(v139 + 56);
        v233 = v134;
        v146 = *(_QWORD *)(v139 + 64);
        v145 = *(_QWORD *)(v139 + 72);
        v235 = *(char *)(v139 + 80);
        v242 = v140;
        swift_bridgeObjectRetain();
        v240 = v141;
        swift_bridgeObjectRetain();
        v261 = v143;
        v147 = v143;
        v263 = v142;
        v234 = v144;
        v148 = v144;
        v149 = v236;
        v238 = v146;
        v262 = v145;
        v150 = v235;
        sub_1BA709DE8(v147, v142, v148, v236, v146, v145, v235);
        sub_1BA4A2E80(v139, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v150 & 0x80000000) == 0)
        {
          v151 = v149;
          v70 = v265;
          v152 = v234;
          v153 = v238;
          v154 = v262;
LABEL_65:
          sub_1BA70ABF4(v272, v269);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          type metadata accessor for FormatLayoutError();
          sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
          swift_allocError();
          v158 = *(_QWORD *)(v243 + 24);
          *v159 = *(_QWORD *)(v243 + 16);
          v159[1] = v158;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BA8CEA24(v237, v242, (uint64_t)v264, v240, v261, v263, v152, v151, v153, v154, v150);
          sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          goto LABEL_66;
        }
        v276[0] = v261;
        sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA547334((unint64_t *)&qword_1ED3A2F58, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition);
        sub_1BA4A2870(&qword_1ED3A0FB0, type metadata accessor for FormatPropertyDefinition, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition);
        swift_bridgeObjectRetain();
        v161 = sub_1BB872BBC();
        v162 = *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 28);
        v163 = v243;
        v164 = *(_QWORD *)(v243 + v162);
        v165 = *(_QWORD *)(v164 + 16);
        if (!v165)
        {
          v194 = v234;
          v193 = v262;
LABEL_90:
          swift_bridgeObjectRelease();
          v276[0] = *(_QWORD *)(v163 + v162);
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
          sub_1BA547334((unint64_t *)&qword_1ED39EA08, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
          sub_1BA4A2870(&qword_1ED39C9E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t)&protocol conformance descriptor for FormatOption);
          v195 = sub_1BB872BB0();
          v196 = *(_QWORD *)(v261 + 16);
          v197 = (uint64_t)v239;
          v198 = v263;
          v199 = v238;
          if (v196)
          {
            v264 = (_QWORD *)v195;
            v200 = v261
                 + ((*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80));
            v260 = *(_QWORD *)(v252 + 72);
            v201 = type metadata accessor for FormatPropertyDefinition;
            do
            {
              v203 = v201;
              sub_1BA4C2DD8(v200, v197, v201);
              v204 = v197;
              FormatPropertyDefinition.identifier.getter();
              v207 = (uint64_t)v264;
              if (v264[2] && (v208 = sub_1BA6E35A8(v205, v206), (v209 & 1) != 0))
              {
                sub_1BA4C2DD8(*(_QWORD *)(v207 + 56) + *(_QWORD *)(v250 + 72) * v208, v248, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
                v210 = 0;
              }
              else
              {
                v210 = 1;
              }
              v211 = v250;
              v212 = v248;
              v213 = v247;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 56))(v248, v210, 1, v247);
              swift_bridgeObjectRelease();
              LODWORD(v213) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v211 + 48))(v212, 1, v213);
              sub_1BA604728(v212, (uint64_t)&qword_1ED3D2500, (uint64_t)type metadata accessor for FormatOption, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
              v214 = (_DWORD)v213 == 1;
              v197 = v204;
              if (v214)
              {
                sub_1BB12B170();
                if ((v215 & 1) != 0)
                {
                  sub_1BA70ABF4(v272, v269);
                  swift_bridgeObjectRelease();
                  v216 = v261;
                  v217 = v263;
                  v218 = v234;
                  sub_1BA6C0C20(v261, v263, v234, v236, v238, v262, v235);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  type metadata accessor for FormatLayoutError();
                  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
                  swift_allocError();
                  v220 = v219;
                  sub_1BB468FA8();
                  v222 = v220 + *(int *)(v221 + 48);
                  v223 = v255;
                  sub_1BA4C2DD8(v255, v220, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
                  sub_1BA4C2DD8(v197, v222, type metadata accessor for FormatPropertyDefinition);
                  swift_storeEnumTagMultiPayload();
                  swift_willThrow();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1BA6C0C20(v216, v217, v218, v236, v238, v262, v235);
                  sub_1BA4A2E80(v197, type metadata accessor for FormatPropertyDefinition);
                  sub_1BA4A2E80(v223, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
                  v160 = (uint64_t)v265;
                  return sub_1BA4A2E80(v160, type metadata accessor for FeedHeadline);
                }
              }
              v202 = v204;
              v201 = v203;
              sub_1BA4A2E80(v202, v203);
              v200 += v260;
              --v196;
              v198 = v263;
              v199 = v238;
            }
            while (v196);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v194 = v234;
            v149 = v236;
            v193 = v262;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v224 = v261;
          v225 = v235;
          sub_1BA6C0C20(v261, v198, v194, v149, v199, v193, v235);
          sub_1BA6C0C20(v224, v198, v194, v149, v199, v193, v225);
          sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          v70 = v265;
          v60 = v273;
          goto LABEL_59;
        }
        v254 = v161;
        v237 = v162;
        v253 = (char *)((*(unsigned __int8 *)(v250 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v250 + 80));
        v166 = (uint64_t)&v253[v164];
        v167 = *(_QWORD *)(v250 + 72);
        v241 = (char *)v164;
        swift_bridgeObjectRetain();
        v168 = type metadata accessor for FormatOption;
        v169 = v260;
        v170 = v262;
        v171 = v251;
        while (1)
        {
          v264 = v63;
          v172 = v168;
          sub_1BA4C2DD8(v166, (uint64_t)v171, (uint64_t (*)(_QWORD))v168);
          v173 = v254;
          if (!*(_QWORD *)(v254 + 16))
            break;
          v174 = *v171;
          v175 = v171[1];
          swift_bridgeObjectRetain();
          v176 = sub_1BA6E35A8(v174, v175);
          if ((v177 & 1) != 0)
          {
            v178 = *(_QWORD *)(v173 + 56);
            v179 = v252;
            v169 = v260;
            sub_1BA4C2DD8(v178 + *(_QWORD *)(v252 + 72) * v176, v260, type metadata accessor for FormatPropertyDefinition);
            v180 = 0;
          }
          else
          {
            v180 = 1;
            v179 = v252;
            v169 = v260;
          }
          v181 = v249;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v179 + 56))(v169, v180, 1, v249);
          swift_bridgeObjectRelease();
          v182 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v169, 1, v181);
          v170 = v262;
          if (v182 == 1)
            goto LABEL_78;
          v186 = v246;
          sub_1BA5193C4(v169, v246, type metadata accessor for FormatPropertyDefinition);
          type metadata accessor for FormatOptionConverter();
          v187 = v245;
          v188 = (uint64_t)v264;
          sub_1BB24F56C(v171, v186, v245);
          if (v188)
          {
            swift_bridgeObjectRelease();
            v226 = v261;
            v227 = v263;
            v228 = v234;
            v229 = v236;
            v230 = v238;
            v231 = v262;
            v232 = v235;
            sub_1BA6C0C20(v261, v263, v234, v236, v238, v262, v235);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6C0C20(v226, v227, v228, v229, v230, v231, v232);
            sub_1BA70ABF4(v272, v269);
            sub_1BA4A2E80(v246, type metadata accessor for FormatPropertyDefinition);
            sub_1BA4A2E80((uint64_t)v171, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            swift_bridgeObjectRelease();
            sub_1BA4A2E80(v255, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return sub_1BA4A2E80((uint64_t)v265, type metadata accessor for FeedHeadline);
          }
          v168 = v172;
          sub_1BA4C2DD8((uint64_t)v187, v244, (uint64_t (*)(_QWORD))v172);
          v189 = v277;
          v190 = swift_isUniquelyReferenced_nonNull_native();
          v170 = v262;
          if ((v190 & 1) == 0)
            v189 = sub_1BA7AD174(0, *(_QWORD *)(v189 + 16) + 1, 1, v189);
          v63 = 0;
          v192 = *(_QWORD *)(v189 + 16);
          v191 = *(_QWORD *)(v189 + 24);
          if (v192 >= v191 >> 1)
            v189 = sub_1BA7AD174(v191 > 1, v192 + 1, 1, v189);
          *(_QWORD *)(v189 + 16) = v192 + 1;
          sub_1BA5193C4(v244, (uint64_t)&v253[v189 + v192 * v167], (uint64_t (*)(_QWORD))v168);
          v277 = v189;
          sub_1BA4A2E80((uint64_t)v245, (uint64_t (*)(_QWORD))v168);
          sub_1BA4A2E80(v246, type metadata accessor for FormatPropertyDefinition);
LABEL_71:
          v171 = v251;
          sub_1BA4A2E80((uint64_t)v251, (uint64_t (*)(_QWORD))v168);
          v166 += v167;
          --v165;
          v169 = v260;
          if (!v165)
          {
            swift_bridgeObjectRelease();
            v149 = v236;
            v163 = v243;
            v162 = v237;
            v193 = v170;
            v194 = v234;
            goto LABEL_90;
          }
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v252 + 56))(v169, 1, 1, v249);
LABEL_78:
        sub_1BA604728(v169, (uint64_t)&qword_1ED3B78C0, (uint64_t)type metadata accessor for FormatPropertyDefinition, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        v168 = v172;
        sub_1BA4C2DD8((uint64_t)v171, v259, (uint64_t (*)(_QWORD))v172);
        v183 = v277;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v183 = sub_1BA7AD174(0, *(_QWORD *)(v183 + 16) + 1, 1, v183);
        v63 = v264;
        v185 = *(_QWORD *)(v183 + 16);
        v184 = *(_QWORD *)(v183 + 24);
        if (v185 >= v184 >> 1)
          v183 = sub_1BA7AD174(v184 > 1, v185 + 1, 1, v183);
        *(_QWORD *)(v183 + 16) = v185 + 1;
        sub_1BA5193C4(v259, (uint64_t)&v253[v183 + v185 * v167], (uint64_t (*)(_QWORD))v168);
        v277 = v183;
        goto LABEL_71;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v237 = 0;
    v242 = 0;
    v264 = 0;
    v240 = 0;
    v261 = 0;
    v263 = 0;
    v152 = 0;
    v151 = 0;
    v153 = 0;
    v154 = 0;
    LOBYTE(v150) = 0;
    goto LABEL_65;
  }
  if (EnumCaseMultiPayload == 4)
  {
    v123 = v121;
    v124 = v242;
    sub_1BA5193C4(v123, v242, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v125 = sub_1BB11BDF4();
    sub_1BA6D3834(v125);
    v126 = sub_1BB11C124();
    sub_1BA6E3FB8(v126);
    v127 = v124;
    v128 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
  }
  else
  {
    v128 = type metadata accessor for FeedItem;
    v127 = v121;
  }
  sub_1BA4A2E80(v127, v128);
LABEL_59:
  v155 = v279;
  v156 = v277;
  v157 = *(_BYTE *)(v60 + 88);
  if ((v274 & 1) != 0)
  {
    swift_beginAccess();
    sub_1BB4651B4(v70, v155, v156, v278, v257, v258, v157, v256);
  }
  else
  {
    swift_beginAccess();
    sub_1BA78A264(v70, v155, v156, v278, v257, v258, v157, v256);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70ABF4(v272, v269);
LABEL_66:
  v160 = (uint64_t)v70;
  return sub_1BA4A2E80(v160, type metadata accessor for FeedHeadline);
}

_QWORD *sub_1BA7892A0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB3901A8(a1, a2, a3, a4, &qword_1ED3B9FD8, &qword_1ED3B9680, (unint64_t *)&unk_1ED3B9750, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
}

void sub_1BA7892C4(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA78931C(255, a3, a4, a5);
    v6 = sub_1BB874218();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BA78931C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    sub_1BA6AA16C(255, a3, a4);
    result = swift_getFunctionTypeMetadata2();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BA789374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _BYTE v39[4];
  int v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[4];
  uint64_t v47;

  v11 = v10;
  v40 = a8;
  v42 = a5;
  v47 = a4;
  v43 = a3;
  v41 = a9;
  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = &v39[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = type metadata accessor for GroupLayoutBindingContext();
  v20 = v9;
  v21 = *(_QWORD *)(v9 + *(int *)(v19 + 56));
  v22 = *(_QWORD *)(v21 + 16);
  swift_bridgeObjectRetain();
  if (!v22)
    goto LABEL_8;
  v45 = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = a1;
  v23 = sub_1BA6A8790(0x6461654864656546, 0xEC000000656E696CLL, a1, a2);
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v25 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v25 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    a1 = v44;
    a6 = v45;
LABEL_8:
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v29 = xmmword_1BB8E9610;
    *(_QWORD *)(v29 + 16) = a1;
    *(_QWORD *)(v29 + 24) = a2;
    *(_QWORD *)(v29 + 32) = v47;
    *(_QWORD *)(v29 + 40) = 1;
    *(_QWORD *)(v29 + 48) = a6;
    *(_QWORD *)(v29 + 56) = a7;
    *(_BYTE *)(v29 + 64) = 0;
LABEL_9:
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  v26 = v20;
  v27 = sub_1BA6ABE54(v25, v45, a7);
  if (v11)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v30 = (_QWORD *)sub_1BB784398(v27, (uint64_t (*)(_QWORD))sub_1BA7C2AA0, (uint64_t (*)(_QWORD, double))type metadata accessor for FeedHeadline, (void (*)(BOOL, uint64_t, uint64_t))sub_1BA7C2ABC);
  swift_bridgeObjectRelease();
  v31 = v47;
  if (!v30)
    goto LABEL_15;
  if (!v30[2])
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_1BA789738(v30, v43, v47, v42 & 1, (uint64_t)v18);
  swift_bridgeObjectRelease();
  v32 = type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v18, 1, v32) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
LABEL_16:
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v33 = xmmword_1BB8E9610;
    *(_QWORD *)(v33 + 16) = v44;
    *(_QWORD *)(v33 + 24) = a2;
    *(_QWORD *)(v33 + 32) = v31;
    *(_QWORD *)(v33 + 40) = 1;
    *(_QWORD *)(v33 + 48) = v45;
    *(_QWORD *)(v33 + 56) = a7;
    *(_BYTE *)(v33 + 64) = 0;
    goto LABEL_9;
  }
  v34 = v41;
  result = sub_1BA5193C4((uint64_t)v18, v41, type metadata accessor for FeedHeadline);
  if ((*(_BYTE *)(v34 + 33) & 0x10) == 0)
  {
LABEL_20:
    if ((v40 & 1) == 0)
    {
      MEMORY[0x1E0C80A78](result);
      *(_QWORD *)&v39[-16] = v34;
      v25 = sub_1BA6AB7E4((uint64_t)sub_1BA6AB9C8, (uint64_t)&v39[-32], v25);
    }
    strcpy((char *)v46, "FeedHeadline");
    BYTE5(v46[1]) = 0;
    HIWORD(v46[1]) = -5120;
    v46[2] = v44;
    v46[3] = a2;
    sub_1BA6AB5A4(v46, v25);
    goto LABEL_5;
  }
  v35 = *(int *)(v19 + 76);
  v36 = *(_QWORD *)(v26 + v35);
  v37 = __OFADD__(v36, 1);
  v38 = v36 + 1;
  if (!v37)
  {
    *(_QWORD *)(v26 + v35) = v38;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

void sub_1BA789738(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;

  v57 = a4;
  v59 = a3;
  v60 = a2;
  v58 = a1;
  v7 = (int *)type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v7);
  v55 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v9);
  v54 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA78A234(0);
  MEMORY[0x1E0C80A78](v11);
  v53 = (uint64_t)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v51 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v51 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v51 - v20;
  v56 = type metadata accessor for FeedHeadline(0);
  v22 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v51 - v26;
  v28 = v7[19];
  v29 = *(_QWORD *)(v5 + v28);
  if (v29 < *(_QWORD *)(v5 + v7[17]))
  {
    v52 = a5;
    sub_1BA789C70(v58, v59 | 0x1000, v60, 0, 1, v57 & 1, (uint64_t)v21);
    sub_1BA789C54(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v21, 1, v30) != 1)
    {
      swift_bridgeObjectRelease();
      sub_1BA5193C4((uint64_t)v21, (uint64_t)v24, type metadata accessor for FeedHeadline);
      sub_1BA5193C4((uint64_t)v24, (uint64_t)v27, type metadata accessor for FeedHeadline);
      v47 = v52;
      sub_1BA5193C4((uint64_t)v27, v52, type metadata accessor for FeedHeadline);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v47, 0, 1, v56);
      return;
    }
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA78A234);
    v29 = *(_QWORD *)(v5 + v28);
    a5 = v52;
  }
  v31 = *(_QWORD *)(v5 + v7[18]);
  v32 = __OFSUB__(v31, v29);
  v33 = v31 - v29;
  if (v32)
  {
    __break(1u);
  }
  else if (v33 < 1)
  {
    sub_1BA789C70(v58, v59, v60, 4096, 0, v57 & 1, (uint64_t)v15);
    sub_1BA789C54(0);
    v41 = v40;
    v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48);
    v43 = v42(v15, 1, v40);
    v44 = v56;
    if (v43 == 1)
    {
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA78A234);
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v46 = v54;
      v45(v54, 1, 1, v44);
    }
    else
    {
      swift_bridgeObjectRelease();
      v46 = v54;
      sub_1BA5193C4((uint64_t)v15, v54, type metadata accessor for FeedHeadline);
      v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v45(v46, 0, 1, v44);
    }
    v48 = v55;
    sub_1BA4C2DD8(v5, v55, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v46, 1, v44) == 1)
    {
      v49 = v53;
      sub_1BA789C70(v58, v59, v60, 0, 1, v57 & 1, v53);
      if (v42((char *)v49, 1, v41) == 1)
      {
        sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BA78A234);
        v50 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1BA5193C4(v49, a5, type metadata accessor for FeedHeadline);
        v50 = 0;
      }
      v45(a5, v50, 1, v44);
      sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
    }
    else
    {
      sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      sub_1BA5193C4(v46, a5, type metadata accessor for FeedHeadline);
      v45(a5, 0, 1, v44);
    }
  }
  else
  {
    sub_1BA789C70(v58, v59, v60, 0, 1, v57 & 1, (uint64_t)v18);
    sub_1BA789C54(0);
    v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v18, 1, v34);
    v36 = v56;
    if (v35 == 1)
    {
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA78A234);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v38 = a5;
      v39 = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BA5193C4((uint64_t)v18, a5, type metadata accessor for FeedHeadline);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
      v38 = a5;
      v39 = 0;
    }
    v37(v38, v39, 1, v36);
  }
}

void sub_1BA789C54(uint64_t a1)
{
  sub_1BA6AD6B0(a1, &qword_1ED3B2D28, type metadata accessor for FeedHeadline, (unint64_t *)&unk_1ED3B9380);
}

uint64_t sub_1BA789C70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X8>)
{
  char *v7;
  char *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(unint64_t, _QWORD, uint64_t, uint64_t);
  unint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t);
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v8 = v7;
  v70 = a6;
  LODWORD(v74) = a5;
  v73 = a4;
  v75 = a2;
  sub_1BA6ADDD4(0, (unint64_t *)&unk_1ED3B2E20, type metadata accessor for FeedHeadline, (unint64_t *)&unk_1ED3B9380);
  MEMORY[0x1E0C80A78](v12);
  v67 = (uint64_t)&v67 - v13;
  v14 = type metadata accessor for FeedHeadline(0);
  v72 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v69 = (uint64_t)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v67 - v17;
  sub_1BA6AA10C(0, &qword_1ED3B9720, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  v20 = v19;
  v21 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v71 = (char *)&v67 - v22;
  sub_1BA6ADD80(0, (unint64_t *)&unk_1ED3B9728, &qword_1ED3B9720, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1E0C80A78](v23);
  v25 = (unint64_t *)((char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v26);
  v28 = (unint64_t *)((char *)&v67 - v27);
  v29 = a1;
  v30 = a1[2];
  if (!v30)
  {
    sub_1BA789C54(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(a7, 1, 1, v33);
  }
  v31 = *v8;
  v68 = a7;
  if ((v31 & 1) != 0 || !a3)
  {
    v32 = (uint64_t)v29;
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v32 = sub_1BA7EF24C(v29);
    swift_release();
    v30 = *(_QWORD *)(v32 + 16);
  }
  v35 = v74 | (v73 == 0);
  swift_bridgeObjectRetain();
  v36 = 0;
  v37 = type metadata accessor for FeedHeadline;
  while (1)
  {
    if (v36 == v30)
    {
      v38 = 1;
      v36 = v30;
    }
    else
    {
      if (v36 >= *(_QWORD *)(v32 + 16))
      {
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      v74 = v36 + 1;
      v39 = v32
          + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))
          + *(_QWORD *)(v72 + 72) * v36;
      v40 = v35;
      v41 = v18;
      v42 = v21;
      v43 = v30;
      v44 = v32;
      v45 = (uint64_t)&v71[*(int *)(v20 + 48)];
      sub_1BA4C2DD8(v39, v45, type metadata accessor for FeedHeadline);
      v46 = (uint64_t)v25 + *(int *)(v20 + 48);
      *v25 = v36;
      v47 = v45;
      v32 = v44;
      v30 = v43;
      v21 = v42;
      v18 = v41;
      v35 = v40;
      v37 = type metadata accessor for FeedHeadline;
      sub_1BA5193C4(v47, v46, type metadata accessor for FeedHeadline);
      v38 = 0;
      v36 = v74;
    }
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v25, v38, 1, v20);
    sub_1BA6ADD30((uint64_t)v25, (uint64_t)v28, (unint64_t *)&unk_1ED3B9728, &qword_1ED3B9720, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v21 + 48))(v28, 1, v20) == 1)
      break;
    v48 = *v28;
    sub_1BA5193C4((uint64_t)v28 + *(int *)(v20 + 48), (uint64_t)v18, type metadata accessor for FeedHeadline);
    v49 = *((_QWORD *)v18 + 4);
    v50 = (v35 & 1) == 0 && (v73 & ~v49) == 0;
    if ((v75 & ~v49) == 0 && !v50)
    {
      swift_bridgeObjectRelease();
      v76 = v32;
      v51 = v69;
      sub_1BAA675B4(v48, v69);
      sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FeedHeadline);
      sub_1BA789C54(0);
      v53 = v52;
      v54 = *(int *)(v52 + 48);
      v55 = v51;
      v56 = v68;
      sub_1BA5193C4(v55, v68, type metadata accessor for FeedHeadline);
      *(_QWORD *)(v56 + v54) = v76;
      v57 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
      v58 = v56;
      return v57(v58, 0, 1, v53);
    }
    v37 = type metadata accessor for FeedHeadline;
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FeedHeadline);
  }
  swift_bridgeObjectRelease();
  if ((v70 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1BA789C54(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v68, 1, 1, v59);
  }
  v36 = v68;
  if (!v30)
    goto LABEL_34;
  v60 = (uint64_t (*)(uint64_t))v32;
  v61 = *(_QWORD *)(v32 + 16);
  v21 = v67;
  if (!v61)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v35 = (uint64_t)v60 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
  sub_1BA4C2DD8(v35, v67, type metadata accessor for FeedHeadline);
  if (v61 < v30)
  {
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRelease();
    v64 = sub_1BA81BAC4((uint64_t)v37, v35, 1, (2 * v30) | 1);
    goto LABEL_30;
  }
  sub_1BB874434();
  swift_unknownObjectRetain_n();
  v37 = v60;
  v62 = swift_dynamicCastClass();
  if (!v62)
  {
    swift_bridgeObjectRelease();
    v62 = MEMORY[0x1E0DEE9D8];
  }
  v63 = *(_QWORD *)(v62 + 16);
  swift_release();
  if (v63 != v30 - 1)
    goto LABEL_37;
  v64 = swift_dynamicCastClass();
  if (!v64)
  {
    swift_bridgeObjectRelease();
    v64 = MEMORY[0x1E0DEE9D8];
  }
LABEL_30:
  swift_bridgeObjectRelease();
  sub_1BA789C54(0);
  v53 = v65;
  v66 = *(int *)(v65 + 48);
  sub_1BA5193C4(v21, v36, type metadata accessor for FeedHeadline);
  *(_QWORD *)(v36 + v66) = v64;
  v57 = *(uint64_t (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56);
  v58 = v36;
  return v57(v58, 0, 1, v53);
}

uint64_t sub_1BA78A220(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9D50, type metadata accessor for FeedHeadline);
}

void sub_1BA78A234(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B2D30, (uint64_t (*)(uint64_t))sub_1BA789C54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA78A250(unint64_t a1)
{
  return sub_1BA78A220(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1BA78A264@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[5];
  _QWORD v41[14];
  uint64_t v42;

  v42 = a6;
  v39 = a5;
  v37 = a8;
  v15 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v8;
  v38 = v8;
  if ((a7 & 1) == 0
    && *(_QWORD *)(*(_QWORD *)v8 + 16)
    && (swift_bridgeObjectRetain(),
        sub_1BA6E35A8(v39, v42),
        v20 = v19,
        swift_bridgeObjectRelease(),
        v18 = v38,
        (v20 & 1) != 0))
  {
    sub_1BA758A4C();
    swift_allocError();
    v21 = v42;
    *(_QWORD *)v22 = v39;
    *(_QWORD *)(v22 + 8) = v21;
    *(_BYTE *)(v22 + 56) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v36[1] = v9;
    v24 = a1[4];
    v25 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 16);
    if (v25)
    {
      v26 = *a1;
      v27 = a1[1];
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v26, v27);
      v29 = v28;
      swift_bridgeObjectRelease();
      v25 = 0x4000000000;
      if ((v29 & 1) == 0)
        v25 = 0;
    }
    v41[0] = v25 | v24;
    swift_bridgeObjectRetain();
    v30 = sub_1BA78DFA8();
    v31 = sub_1BA78A504(v30, a2);
    swift_bridgeObjectRelease();
    v32 = sub_1BA6AF268();
    v33 = sub_1BA78A504((uint64_t)v32, v31);
    swift_bridgeObjectRelease();
    v40[3] = v15;
    v40[4] = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
    v35 = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    sub_1BA78A840((uint64_t)v40, v33, a3, (uint64_t)a4, (uint64_t)v41);
    sub_1BA78A5B4((uint64_t)v41, v39, v35);
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v17, type metadata accessor for FeedHeadline);
    swift_bridgeObjectRetain();
    sub_1BA78A580(a4);
    return sub_1BB468B38((uint64_t)v17, v33, a3, (uint64_t)a4, type metadata accessor for FeedHeadline, (uint64_t)&unk_1E7254518, (uint64_t (*)(_QWORD))&unk_1E7254538, &qword_1ED3BB8A0, v37);
  }
}

uint64_t sub_1BA78A504(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v8 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(a1 + 40);
    do
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v7, v4, v5);
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return a2;
}

uint64_t *sub_1BA78A580(uint64_t *a1)
{
  sub_1BA70A834(*a1, a1[1]);
  return a1;
}

uint64_t sub_1BA78A5B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  _OWORD v12[6];
  uint64_t v13;

  if (*(_QWORD *)(a1 + 24))
  {
    v6 = *(_OWORD *)(a1 + 80);
    v12[4] = *(_OWORD *)(a1 + 64);
    v12[5] = v6;
    v13 = *(_QWORD *)(a1 + 96);
    v7 = *(_OWORD *)(a1 + 16);
    v12[0] = *(_OWORD *)a1;
    v12[1] = v7;
    v8 = *(_OWORD *)(a1 + 48);
    v12[2] = *(_OWORD *)(a1 + 32);
    v12[3] = v8;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BA78A6B0((uint64_t)v12, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v11;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA5C699C(a1, (unint64_t *)&qword_1ED3C9970, (uint64_t (*)(uint64_t))sub_1BA785ECC);
    sub_1BAA49398(a2, a3, (uint64_t)v12);
    swift_bridgeObjectRelease();
    return sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3C9970, (uint64_t (*)(uint64_t))sub_1BA785ECC);
  }
}

uint64_t sub_1BA78A6B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BB4C3E44();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BA7229AC(a1, v18[7] + 104 * v12, (uint64_t (*)(_QWORD))sub_1BA785ECC);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = v18[7] + 104 * v12;
    v24 = *(_OWORD *)a1;
    v25 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v23 + 16) = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v23 + 32) = v25;
    *(_OWORD *)v23 = v24;
    v26 = *(_OWORD *)(a1 + 48);
    v27 = *(_OWORD *)(a1 + 64);
    v28 = *(_OWORD *)(a1 + 80);
    *(_QWORD *)(v23 + 96) = *(_QWORD *)(a1 + 96);
    *(_OWORD *)(v23 + 64) = v27;
    *(_OWORD *)(v23 + 80) = v28;
    *(_OWORD *)(v23 + 48) = v26;
    v29 = v18[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (!v30)
    {
      v18[2] = v31;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BA7ABA98(v15, a4 & 1);
  v20 = sub_1BA6E35A8(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_1BA7229AC(a1, v18[7] + 104 * v12, (uint64_t (*)(_QWORD))sub_1BA785ECC);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA78A840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[8];
  uint64_t v31;

  v10 = type metadata accessor for FormatOption();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C010C(a1, a5);
  sub_1BA78AA1C(a4, (uint64_t)v30);
  if (v31)
  {
    a2 = sub_1BA78A504((uint64_t)&unk_1E72544E8, a2);
    swift_arrayDestroy();
  }
  *(_QWORD *)(a5 + 40) = a2;
  v14 = *(_QWORD *)(a3 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v25 = a1;
    v27 = a5;
    v28 = a4;
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BA76B828(0, v14, 0);
    v15 = v29;
    v16 = *(unsigned __int8 *)(v11 + 80);
    v26 = a3;
    v17 = a3 + ((v16 + 32) & ~v16);
    v18 = *(_QWORD *)(v11 + 72);
    do
    {
      sub_1BA4C2DD8(v17, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v19 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v13, v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v29 = v15;
      v22 = *(_QWORD *)(v15 + 16);
      v21 = *(_QWORD *)(v15 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1BA76B828(v21 > 1, v22 + 1, 1);
        v15 = v29;
      }
      *(_QWORD *)(v15 + 16) = v22 + 1;
      *(_QWORD *)(v15 + 8 * v22 + 32) = v19 | 0x1000000000000004;
      v17 += v18;
      --v14;
    }
    while (v14);
    a5 = v27;
    a4 = v28;
    a1 = v25;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + 48) = v15;
  return sub_1BA78AA1C(a4, a5 + 56);
}

uint64_t sub_1BA78AA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1ED3C5430, (uint64_t)&type metadata for FeedItemAuxiliary, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA78AA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v32[5];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];
  uint64_t v36;

  v8 = v6;
  v36 = a6;
  sub_1BA4B07F0(0, &qword_1ED3BB8A0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v32 - v16;
  result = sub_1BA78AC7C(a4, a3, a1, a2, (uint64_t)v8, a5, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))sub_1BA787778);
  if (!v7)
  {
    v19 = swift_bridgeObjectRetain();
    sub_1BA6E3FB8(v19);
    v20 = swift_bridgeObjectRetain();
    sub_1BA7082C0(v20);
    v21 = (uint64_t *)&v17[*(int *)(v15 + 36)];
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = v21[3];
    v26 = v21[4];
    v27 = v21[5];
    v28 = v8[26];
    v33 = v8[27];
    v34 = v28;
    v29 = v8[28];
    v32[3] = v8[29];
    v32[4] = v29;
    v30 = v8[30];
    v32[1] = v8[31];
    v32[2] = v30;
    sub_1BA70A834(v22, v23);
    sub_1BA70ABF4(v34, v33);
    v8[26] = v22;
    v8[27] = v23;
    v8[28] = v24;
    v8[29] = v25;
    v8[30] = v26;
    v8[31] = v27;
    v35[3] = type metadata accessor for FeedHeadline(0);
    v35[4] = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
    sub_1BA4C2DD8((uint64_t)v17, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
    sub_1BA6B0198((uint64_t)v35, (uint64_t)(v8 + 19));
    sub_1BA4C2DD8((uint64_t)v17, v36, type metadata accessor for FeedHeadline);
    return sub_1BA604728((uint64_t)v17, (uint64_t)&qword_1ED3BB8A0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t)type metadata accessor for FormatNodeBindingItem, (uint64_t (*)(_QWORD))sub_1BA4B07F0);
  }
  return result;
}

uint64_t sub_1BA78AC7C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t))
{
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t);
  void (*v41)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  v12 = (char *)a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary;
  v13 = *((unsigned __int8 *)a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
  if (v13 == 255)
  {
    v46 = *(_QWORD *)(a5 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78AF84(a6);
    v14 = *(_QWORD *)(v46 + 16);
    v39 = a2;
    v40 = a7;
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = 0;
      v16 = 0;
      do
      {
        v53 = *(_BYTE *)(v46 + v15 + 32);
        sub_1BA758024();
        v17 = v46;
        if ((v46 & ~v16) == 0)
          v17 = 0;
        v16 |= v17;
        ++v15;
      }
      while (v14 != v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = 0;
    }
    swift_bridgeObjectRelease();
    v27 = *(_QWORD *)(a5 + 144);
    v38 = *(_QWORD *)(a5 + 136);
    v28 = a1[4];
    v29 = a1[5];
    v30 = *(_BYTE *)a5;
    v31 = a1[2];
    v32 = *(_QWORD *)(v39 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots);
    v33 = v39 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v40(v33, v32, a3, a4, v16, v38, v27, v28, v29, v30, v31);
    swift_endAccess();
  }
  else
  {
    if ((v13 & 1) == 0)
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    v19 = *(_OWORD *)(v12 + 8);
    v20 = *((_QWORD *)v12 + 3);
    v21 = *((_QWORD *)v12 + 4);
    v22 = *((_QWORD *)v12 + 5);
    v48 = *(_QWORD *)v12;
    v49 = v19;
    v50 = v20;
    v51 = v21;
    v52 = v22;
    v47 = *(_QWORD *)(a5 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA78AF84(a6);
    v23 = *(_QWORD *)(v47 + 16);
    if (v23)
    {
      v41 = a7;
      swift_bridgeObjectRetain();
      v24 = 0;
      v25 = 0;
      do
      {
        v53 = *(_BYTE *)(v47 + v24 + 32);
        sub_1BA758024();
        v26 = v47;
        if ((v47 & ~v25) == 0)
          v26 = 0;
        v25 |= v26;
        ++v24;
      }
      while (v23 != v24);
      swift_bridgeObjectRelease();
      a7 = v41;
    }
    else
    {
      v25 = 0;
    }
    swift_bridgeObjectRelease();
    v34 = *(_QWORD *)(a5 + 136);
    v35 = *(_QWORD *)(a5 + 144);
    v36 = *(_BYTE *)a5;
    v37 = a1[2];
    swift_bridgeObjectRetain();
    sub_1BB4585C8(a3, a4, v25, v34, v35, &v48, v36, v37, a7);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA78AF84(uint64_t a1)
{
  char **v1;
  int64_t v2;
  char *v3;
  int64_t v4;
  int64_t v5;
  char *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 2);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= *((_QWORD *)v3 + 3) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BA78B0D8(isUniquelyReferenced_nonNull_native, v14, 1, v3, (unint64_t *)&unk_1ED3A09F8, (uint64_t)&type metadata for FormatItemTrait);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *((_QWORD *)v3 + 2);
  if ((*((_QWORD *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v11 = *((_QWORD *)v3 + 2);
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    *((_QWORD *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

char *sub_1BA78B0D8(char *result, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  int64_t v9;
  int64_t v10;
  int64_t v11;
  char *v12;
  size_t v13;
  char *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = *((_QWORD *)a4 + 3);
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = *((_QWORD *)a4 + 2);
    if (v9 <= v10)
      v11 = *((_QWORD *)a4 + 2);
    else
      v11 = v9;
    if (v11)
    {
      sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v12 = (char *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      *((_QWORD *)v12 + 2) = v10;
      *((_QWORD *)v12 + 3) = 2 * v13 - 64;
      v14 = v12 + 32;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[v10 + 32])
          memmove(v14, a4 + 32, v10);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (char *)MEMORY[0x1E0DEE9D8];
      v14 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA5C58C4(0, v10, v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA78B1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;

  if (!a3 || !*(_QWORD *)(a1 + 16))
    return MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  v10 = sub_1BA6E35A8(a2, a3);
  if ((v11 & 1) != 0
    && (v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10),
        swift_retain(),
        swift_bridgeObjectRelease(),
        v13 = *(_QWORD *)(v12 + 120),
        swift_bridgeObjectRetain(),
        swift_release(),
        *(_QWORD *)(v13 + 16)))
  {
    swift_bridgeObjectRetain();
    v14 = sub_1BA6E35A8(a4, a5);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = MEMORY[0x1E0DEE9E8];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = MEMORY[0x1E0DEE9E8];
  }
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BA78B2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;

  if (!a3 || !*(_QWORD *)(a1 + 16))
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v10 = sub_1BA6E35A8(a2, a3);
  if ((v11 & 1) != 0
    && (v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10),
        swift_retain(),
        swift_bridgeObjectRelease(),
        v13 = *(_QWORD *)(v12 + 128),
        swift_bridgeObjectRetain(),
        swift_release(),
        *(_QWORD *)(v13 + 16)))
  {
    swift_bridgeObjectRetain();
    v14 = sub_1BA6E35A8(a4, a5);
    if ((v15 & 1) != 0)
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t FormatButtonNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;

  v4 = v2;
  swift_beginAccess();
  v29 = v2[4];
  sub_1BA71CA6C(v29);
  FormatSize.bind(binder:context:)();
  if (v3)
    return sub_1BA719718(v29);
  sub_1BA719718(v29);
  swift_beginAccess();
  v8 = v2[6];
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v9; ++i)
    {
      v11 = *(_QWORD *)(v8 + 8 * i + 32);
      sub_1BA7196DC(v11);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v12 = v2[8];
  if (v12 >> 62 == 1)
  {
    v13 = *(_QWORD *)(v12 + 16);
    v14 = *(_QWORD *)(v12 + 24);
    sub_1BA67D3F4(v4[8]);
    sub_1BA67D3F4(v13);
    swift_bridgeObjectRetain();
    sub_1BABC2BF8(a1, a2, v13, v14);
    sub_1BA6EEDB4(v13);
    swift_bridgeObjectRelease();
    sub_1BA6EEDB4(v12);
  }
  swift_beginAccess();
  v30 = v4;
  v15 = v4[10];
  v16 = *(_QWORD *)(v15 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain_n();
    v17 = v15 + 64;
    do
    {
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(a1, a2);
      v17 += 40;
      swift_bridgeObjectRelease();
      swift_release();
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease_n();
  }
  v18 = v30;
  swift_retain();
  FormatButtonNodeAction.bind(binder:context:)();
  swift_release();
  v19 = v30[13];
  if ((~v19 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatTextContent.bind(binder:context:)();
    sub_1BA5E800C(v19);
  }
  v20 = v30[14];
  if ((~v20 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatButtonNodeAction.bind(binder:context:)();
    sub_1BA5E800C(v20);
  }
  v21 = v30[15];
  if ((~v21 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatTextContent.bind(binder:context:)();
    sub_1BA5E800C(v21);
  }
  v22 = v30[18];
  if (v22)
  {
    swift_beginAccess();
    v23 = *(_QWORD *)(v22 + 72);
    if (v23)
    {
      swift_bridgeObjectRetain();
      sub_1BAB758D0(a1, a2, v23);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v24 = *(_QWORD *)(v22 + 88);
    v25 = *(_QWORD *)(v24 + 16);
    if (v25)
    {
      swift_bridgeObjectRetain_n();
      v26 = (uint64_t *)(v24 + 72);
      do
      {
        v27 = *v26;
        if (*v26)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BAB758D0(a1, a2, v27);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v26 += 7;
        --v25;
      }
      while (v25);
      swift_bridgeObjectRelease_n();
      v18 = v30;
    }
  }
  swift_beginAccess();
  v28 = v18[23];
  swift_bridgeObjectRetain();
  sub_1BAB9FB94(a1, a2, v28);
  return swift_bridgeObjectRelease();
}

uint64_t FormatSlotNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[4];
  _OWORD v60[2];
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;

  v3 = v2;
  v57 = a2;
  v65 = a1;
  v4 = type metadata accessor for FormatOption();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v55 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v51 - v8;
  v56 = v3 + 7;
  swift_beginAccess();
  v10 = v3[7];
  v11 = *(_QWORD *)(v10 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  v54 = v5;
  if (v11)
  {
    v52 = v3;
    *(_QWORD *)&v62 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    v53 = v4;
    sub_1BA76B828(0, v11, 0);
    v12 = v62;
    v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v51 = v10;
    v14 = v10 + v13;
    v15 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_1BA900B30(v14, (uint64_t)v9);
      v16 = swift_allocBox();
      sub_1BA8569CC((uint64_t)v9, v17);
      *(_QWORD *)&v62 = v12;
      v19 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v12 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BA76B828(v18 > 1, v19 + 1, 1);
        v12 = v62;
      }
      *(_QWORD *)(v12 + 16) = v19 + 1;
      *(_QWORD *)(v12 + 8 * v19 + 32) = v16 | 0x6000000000000000;
      v14 += v15;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v3 = v52;
  }
  swift_beginAccess();
  v20 = v3[2];
  v21 = v3[3];
  swift_bridgeObjectRetain();
  v22 = v65;
  v23 = sub_1BA78BE1C(v20, v21);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v62 = v12;
  sub_1BA7082C0(v23);
  v24 = v62;
  swift_beginAccess();
  v25 = v3[6];
  v26 = v3[3];
  v27 = *(_QWORD *)(v22 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots);
  if (*(_QWORD *)(v27 + 16))
  {
    v28 = v3[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = sub_1BA6E35A8(v28, v26);
    v30 = v58;
    if ((v31 & 1) != 0)
    {
      v32 = v3;
      v33 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v29) + 112);
      swift_retain();
      swift_bridgeObjectRetain();
      v34 = sub_1BA78FEA8();
      v35 = v33;
      v3 = v32;
      v36 = sub_1BA6E4124(v34, v35);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_12;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v58;
  }
  swift_bridgeObjectRelease();
  v36 = MEMORY[0x1E0DEE9E8];
LABEL_12:
  v37 = sub_1BA6E4124(v36, v25);
  v38 = v3[2];
  v39 = v3[3];
  v63 = 0u;
  v64 = 0u;
  v62 = 0u;
  v61 = 0;
  memset(v60, 0, sizeof(v60));
  memset(v59, 0, sizeof(v59));
  swift_bridgeObjectRetain();
  v40 = sub_1BA706104(0, 0, v24, v37, 0, v38, v39, MEMORY[0x1E0DEE9D8], (uint64_t *)&v62, (uint64_t)v60, v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v60, (uint64_t (*)(_QWORD))sub_1BB179EB4);
  swift_beginAccess();
  v41 = v3[5];
  v42 = *(_QWORD *)(v41 + 16);
  if (v42)
  {
    swift_bridgeObjectRetain_n();
    v43 = (_QWORD *)(v41 + 64);
    while (1)
    {
      v44 = *v43;
      v45 = *((_OWORD *)v43 - 1);
      v62 = *((_OWORD *)v43 - 2);
      v63 = v45;
      *(_QWORD *)&v64 = v44;
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(v65, v40);
      if (v30)
        break;
      v43 += 5;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v42)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_17;
      }
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
LABEL_17:
  v46 = *(_QWORD *)(*v56 + 16);
  if (!v46)
    return swift_release();
  v47 = *v56 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
  v48 = *(_QWORD *)(v54 + 72);
  v58 = *v56;
  swift_bridgeObjectRetain_n();
  v49 = (uint64_t)v55;
  while (1)
  {
    sub_1BA900B30(v47, v49);
    *(_QWORD *)&v62 = *(_QWORD *)(v49 + 16);
    swift_retain();
    FormatOptionValue.bind(binder:context:)(v65, v40);
    if (v30)
      break;
    swift_release();
    sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v47 += v48;
    if (!--v46)
      goto LABEL_25;
  }
  swift_release();
  sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
LABEL_25:
  swift_release();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BA78BE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots);
  if (!*(_QWORD *)(v3 + 16))
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v6 = sub_1BA6E35A8(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v3 + 16))
    {
      v9 = sub_1BA6E35A8(42, 0xE100000000000000);
      if ((v10 & 1) != 0)
      {
        v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v9);
        swift_retain();
        goto LABEL_7;
      }
    }
    return MEMORY[0x1E0DEE9D8];
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);
  swift_retain();
  swift_bridgeObjectRelease();
LABEL_7:
  v11 = *(_QWORD *)(v8 + 104);
  swift_bridgeObjectRetain();
  swift_release();
  return v11;
}

uint64_t FormatItemNode.bind(binder:context:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[6];
  _OWORD v14[2];
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];
  _QWORD v40[5];
  _OWORD v41[6];
  _OWORD v42[3];

  v40[4] = &protocol witness table for FormatNodeBinderContext;
  v40[3] = type metadata accessor for FormatNodeBinderContext();
  v40[0] = a2;
  swift_retain();
  sub_1BA78D15C(v40, v41);
  if (v3)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  v37 = v41[4];
  v38 = v41[5];
  v39[0] = v42[0];
  *(_OWORD *)((char *)v39 + 9) = *(_OWORD *)((char *)v42 + 9);
  v33 = v41[0];
  v34 = v41[1];
  v35 = v41[2];
  v36 = v41[3];
  swift_beginAccess();
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  v9 = sub_1BA717D44(v7, v8);
  v11 = v10;
  swift_bridgeObjectRelease();
  v26 = 0u;
  v25 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v20 = v37;
  v21 = v38;
  v22[0] = v39[0];
  *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)v39 + 9);
  v16 = v33;
  v17 = v34;
  v18 = v35;
  v27 = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  v29 = MEMORY[0x1E0DEE9E8];
  LOBYTE(v15) = 0;
  v19 = v36;
  v23 = v9;
  v24 = v11;
  sub_1BA8CED9C((uint64_t)&v33);
  sub_1BA78C280(a1, a2);
  v12 = sub_1BA78C814(&v15, (uint64_t)a2);
  v13[4] = v20;
  v13[5] = v21;
  v14[0] = v22[0];
  *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)((char *)v22 + 9);
  v13[0] = v16;
  v13[1] = v17;
  v13[2] = v18;
  v13[3] = v19;
  sub_1BA8CED9C((uint64_t)v13);
  FormatItem.bind(binder:context:)(a1, v12);
  sub_1BA8CEE60((uint64_t)v13);
  FormatItemNode.bindChildren(binder:context:)(a1, v12);
  sub_1BA78C17C(&v15);
  sub_1BA8CEE60((uint64_t)&v33);
  return swift_release();
}

_QWORD *sub_1BA78C17C(_QWORD *a1)
{
  destroy for FormatNodeRebinder(a1);
  return a1;
}

uint64_t destroy for FormatNodeRebinder(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[8] >= 0xFuLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[22])
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 19));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = a1[27];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA78C280(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _OWORD v61[7];
  _OWORD v62[2];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _OWORD v70[4];
  uint64_t v71;

  v59 = a1;
  v60 = a2;
  v3 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v3);
  v58 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v5);
  v57 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v7);
  v56 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v53 - v10;
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v53 - v12;
  MEMORY[0x1E0C80A78](v13);
  v53 = (char *)&v53 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v53 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v53 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v53 - v22;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v53 - v25;
  v27 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v53 - v31;
  v33 = *(_QWORD *)(v2 + 64);
  switch(v33)
  {
    case 0uLL:
      v34 = v71;
      result = sub_1BA78AA78(0, 0, v59, v60, MEMORY[0x1E0DEE9D8], (uint64_t)&v53 - v31);
      if (!v34)
      {
        v36 = type metadata accessor for FeedHeadline;
        v37 = (uint64_t)v32;
        return sub_1BA4A2E80(v37, v36);
      }
      return result;
    case 1uLL:
      v41 = v71;
      result = sub_1BB466734(0, 0, v59, v60, MEMORY[0x1E0DEE9D8], &v63);
      if (!v41)
      {
        v61[6] = v69;
        v62[0] = v70[0];
        *(_OWORD *)((char *)v62 + 9) = *(_OWORD *)((char *)v70 + 9);
        v61[2] = v65;
        v61[3] = v66;
        v61[4] = v67;
        v61[5] = v68;
        v61[0] = v63;
        v61[1] = v64;
        return sub_1BA8D1FE4((uint64_t)v61);
      }
      return result;
    case 2uLL:
      v42 = v71;
      result = sub_1BB466B34(0, 0, v59, v60, MEMORY[0x1E0DEE9D8], (uint64_t)v26);
      if (!v42)
      {
        v36 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
        v37 = (uint64_t)v26;
        return sub_1BA4A2E80(v37, v36);
      }
      return result;
    case 3uLL:
      v43 = v71;
      result = sub_1BA78AA78(0, 0, v59, v60, (uint64_t)&unk_1E7254968, (uint64_t)v29);
      if (!v43)
      {
        v36 = type metadata accessor for FeedHeadline;
        break;
      }
      return result;
    case 4uLL:
      v44 = v71;
      result = sub_1BB4669B8(0, 0, v59, v60, MEMORY[0x1E0DEE9D8], (uint64_t)&v63);
      if (!v44)
        return sub_1BA6A94C4((uint64_t)&v63);
      return result;
    case 5uLL:
      v45 = v71;
      result = sub_1BB466B34(0, 0, v59, v60, (uint64_t)&unk_1E7254990, (uint64_t)v23);
      if (!v45)
      {
        v36 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
        v37 = (uint64_t)v23;
        return sub_1BA4A2E80(v37, v36);
      }
      return result;
    case 6uLL:
      v46 = v71;
      result = sub_1BB466B34(0, 0, v59, v60, (uint64_t)&unk_1E72549B8, (uint64_t)v20);
      if (!v46)
      {
        v36 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
        v37 = (uint64_t)v20;
        return sub_1BA4A2E80(v37, v36);
      }
      return result;
    case 7uLL:
      v47 = v71;
      result = sub_1BB466B34(0, 0, v59, v60, (uint64_t)&unk_1E72549E0, (uint64_t)v17);
      if (!v47)
      {
        v36 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
        v37 = (uint64_t)v17;
        return sub_1BA4A2E80(v37, v36);
      }
      return result;
    case 8uLL:
      v48 = &unk_1E7254A08;
      v29 = v53;
      goto LABEL_25;
    case 9uLL:
      v48 = &unk_1E7254A30;
      v29 = v54;
      goto LABEL_25;
    case 0xAuLL:
      v48 = &unk_1E7254A58;
      v29 = v55;
      goto LABEL_25;
    case 0xBuLL:
      v48 = &unk_1E7254A80;
      v29 = v56;
LABEL_25:
      v49 = v71;
      result = sub_1BB466B34(0, 0, v59, v60, (uint64_t)v48, (uint64_t)v29);
      if (v49)
        return result;
      v36 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
      break;
    case 0xCuLL:
      v50 = v71;
      result = sub_1BB466D38(0, 0, v59, v60, MEMORY[0x1E0DEE9D8], (uint64_t)&v63);
      if (!v50)
        return sub_1BA93EBE8((uint64_t)&v63);
      return result;
    case 0xDuLL:
      v51 = v71;
      result = (uint64_t)sub_1BB466EB4(0, 0, v59, v60, MEMORY[0x1E0DEE9D8], (uint64_t)&v63);
      if (!v51)
      {
        sub_1BA6E0CBC(*((uint64_t *)&v64 + 1), v65);
        swift_unknownObjectRelease();
        return swift_bridgeObjectRelease();
      }
      return result;
    case 0xEuLL:
      v29 = v57;
      v52 = v71;
      result = sub_1BB4670D0(0, 0, v59, v60, MEMORY[0x1E0DEE9D8], (uint64_t)v57);
      if (v52)
        return result;
      v36 = (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic;
      break;
    default:
      v38 = *(_QWORD *)(v2 + 56);
      swift_bridgeObjectRetain();
      v39 = v58;
      v40 = v71;
      sub_1BB4672D4(v38, v33, v59, v60, MEMORY[0x1E0DEE9D8], v58);
      if (!v40)
        sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
      return sub_1BA766C18(v38, v33);
  }
  v37 = (uint64_t)v29;
  return sub_1BA4A2E80(v37, v36);
}

uint64_t sub_1BA78C814(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[2];
  uint64_t v53[6];

  v3 = v2;
  v48 = a2;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = v3[3];
  v45 = v3[2];
  v46 = a1;
  v10 = a1[14];
  v11 = *(_QWORD *)(v10 + 16);
  v47 = v9;
  v49 = v3;
  v50 = v5;
  if (v11)
  {
    v53[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v11, 0);
    v12 = v53[0];
    v13 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v44 = v10;
    v14 = v10 + v13;
    v51 = v6;
    v15 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BA4C2DD8(v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v16 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v8, v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v53[0] = v12;
      v19 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v12 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BA76B828(v18 > 1, v19 + 1, 1);
        v12 = v53[0];
      }
      *(_QWORD *)(v12 + 16) = v19 + 1;
      *(_QWORD *)(v12 + 8 * v19 + 32) = v16 | 0x9000000000000004;
      v14 += v15;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v3 = v49;
    v6 = v51;
  }
  else
  {
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  swift_beginAccess();
  v20 = v3[11];
  v21 = *(_QWORD *)(v20 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  if (v21)
  {
    v53[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v21, 0);
    v22 = v53[0];
    v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v44 = v20;
    v24 = v20 + v23;
    v51 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BA4C2DD8(v24, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v25 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v8, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v53[0] = v22;
      v28 = *(_QWORD *)(v22 + 16);
      v27 = *(_QWORD *)(v22 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1BA76B828(v27 > 1, v28 + 1, 1);
        v22 = v53[0];
      }
      *(_QWORD *)(v22 + 16) = v28 + 1;
      *(_QWORD *)(v22 + 8 * v28 + 32) = v25 | 0x4000000000000004;
      v24 += v51;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    v3 = v49;
  }
  v53[0] = v12;
  sub_1BA7082C0(v22);
  v29 = v46;
  v30 = swift_bridgeObjectRetain();
  sub_1BA7082C0(v30);
  v51 = v53[0];
  v31 = v29[13];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v32 = swift_bridgeObjectRetain();
  v33 = sub_1BA6E4124(v32, v31);
  v34 = swift_bridgeObjectRetain();
  v50 = sub_1BA6E4124(v34, v33);
  swift_beginAccess();
  v35 = v3[12];
  v36 = v29[26];
  v37 = v29[27];
  v38 = v29[28];
  v39 = v29[29];
  v40 = v29[30];
  v41 = v29[31];
  v53[0] = v36;
  v53[1] = v37;
  v49 = (_QWORD *)v36;
  v53[2] = v38;
  v53[3] = v39;
  v53[4] = v40;
  v53[5] = v41;
  memset(v52, 0, sizeof(v52));
  swift_bridgeObjectRetain();
  sub_1BA70A834(v36, v37);
  v42 = sub_1BA706104(v45, v47, v51, v50, 0, 0, 0, v35, v53, (uint64_t)(v29 + 19), (uint64_t *)v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70ABF4((uint64_t)v49, v37);
  return v42;
}

unint64_t FormatItemNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v4 = v2;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2[6];
  v49 = v11;
  sub_1BA71CA6C(v11);
  FormatSize.bind(binder:context:)();
  v12 = v3;
  if (v3)
    return sub_1BA719718(v11);
  v42 = v8;
  v43 = v10;
  sub_1BA719718(v11);
  swift_beginAccess();
  v14 = v2[8];
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v15; ++i)
    {
      v17 = *(_QWORD *)(v14 + 8 * i + 32);
      v49 = v17;
      sub_1BA7196DC(v17);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v17);
    }
    swift_bridgeObjectRelease_n();
  }
  v18 = (uint64_t)v43;
  v19 = v42;
  swift_beginAccess();
  v20 = v4[9];
  v21 = *(_QWORD *)(v20 + 16);
  v45 = a1;
  v41 = v4;
  if (v21)
  {
    v44 = a2;
    v57 = 0;
    swift_bridgeObjectRetain_n();
    v40[1] = v20;
    v22 = (uint64_t *)(v20 + 48);
    while (1)
    {
      v46 = v21;
      v23 = *(v22 - 2);
      v24 = *(v22 - 1);
      v26 = *v22;
      v25 = v22[1];
      v28 = v22[2];
      v27 = v22[3];
      v30 = v22[4];
      v29 = v22[5];
      v49 = v23;
      v50 = v24;
      v51 = v26;
      v52 = v25;
      v53 = v28;
      v54 = v27;
      v55 = v30;
      v56 = v29;
      v47 = v29;
      sub_1BA76B724(v23, v24, v26, v25, v28, v27, v30);
      v31 = v57;
      FormatNodeStyle.bind(binder:context:)();
      v57 = v31;
      if (v31)
        break;
      v22 += 8;
      sub_1BA76B698(v23, v24, v26, v25, v28, v27, v30);
      v21 = v46 - 1;
      if (v46 == 1)
      {
        swift_bridgeObjectRelease_n();
        v12 = v57;
        a2 = v44;
        a1 = v45;
        v4 = v41;
        v18 = (uint64_t)v43;
        v19 = v42;
        goto LABEL_12;
      }
    }
    sub_1BA76B698(v23, v24, v26, v25, v28, v27, v30);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_12:
    swift_beginAccess();
    v32 = v4[11];
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      v34 = v32 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
      v35 = *(_QWORD *)(v19 + 72);
      v57 = v4[11];
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v34, v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v48 = *(_QWORD *)(v18 + 16);
        swift_retain();
        FormatOptionValue.bind(binder:context:)(v45, a2);
        if (v12)
          break;
        swift_release();
        sub_1BA4A2E80(v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v34 += v35;
        if (!--v33)
        {
          swift_bridgeObjectRelease_n();
          a1 = v45;
          v4 = v41;
          goto LABEL_17;
        }
      }
      swift_release();
      sub_1BA4A2E80(v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_17:
      swift_beginAccess();
      v36 = v4[14];
      if (v36 >> 62 != 1)
        goto LABEL_19;
      v37 = *(_QWORD *)(v36 + 16);
      v38 = *(_QWORD *)(v36 + 24);
      sub_1BA67D3F4(v4[14]);
      sub_1BA67D3F4(v37);
      swift_bridgeObjectRetain();
      sub_1BABC2BF8(a1, a2, v37, v38);
      sub_1BA6EEDB4(v37);
      swift_bridgeObjectRelease();
      result = sub_1BA6EEDB4(v36);
      if (!v12)
      {
LABEL_19:
        swift_beginAccess();
        v39 = v4[15];
        swift_bridgeObjectRetain();
        sub_1BAB9FB94(a1, a2, v39);
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

double sub_1BA78D15C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  double result;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[2];

  v3 = v2;
  sub_1BA7BC1BC();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7F8204(0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (__int128 *)((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items;
  swift_beginAccess();
  v17 = *(_QWORD *)(v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  if (*(_QWORD *)(v17 + 16))
  {
    v18 = *(_QWORD *)(v3 + 32);
    v19 = *(_QWORD *)(v3 + 40);
    swift_bridgeObjectRetain();
    v20 = sub_1BA6E35A8(v18, v19);
    if ((v21 & 1) != 0)
    {
      sub_1BA4C2DD8(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v11 + 72) * v20, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA7F8204);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA7BC1BC);
    type metadata accessor for FormatLayoutError();
    sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v22 = v3;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_willThrow();
  }
  else
  {
    sub_1BA5193C4((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA7F8204);
    v24 = v13[5];
    v34 = v13[4];
    v35 = v24;
    v36[0] = v13[6];
    *(_OWORD *)((char *)v36 + 9) = *(__int128 *)((char *)v13 + 105);
    v25 = v13[1];
    v30 = *v13;
    v31 = v25;
    v26 = v13[3];
    v32 = v13[2];
    v33 = v26;
    sub_1BA8CED9C((uint64_t)&v30);
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA7F8204);
    v27 = v35;
    a2[4] = v34;
    a2[5] = v27;
    a2[6] = v36[0];
    *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)((char *)v36 + 9);
    v28 = v31;
    *a2 = v30;
    a2[1] = v28;
    result = *(double *)&v32;
    v29 = v33;
    a2[2] = v32;
    a2[3] = v29;
  }
  return result;
}

uint64_t sub_1BA78D440(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v6;

  sub_1BB68079C(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t FormatItem.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = v3;
  v47 = a2;
  v40 = a1;
  v5 = type metadata accessor for FormatOption();
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2[9];
  v8 = v2[10];
  v9 = v2[11];
  v35 = v2[13];
  v33 = v2[14];
  v10 = *(_QWORD *)(v7 + 16);
  if (v10)
  {
    v36 = v9;
    swift_bridgeObjectRetain_n();
    v11 = (uint64_t *)(v7 + 64);
    while (1)
    {
      v12 = *v11;
      v13 = *((_OWORD *)v11 - 1);
      v41 = *((_OWORD *)v11 - 2);
      v42 = v13;
      v43 = v12;
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(v40, v47);
      if (v3)
        break;
      v11 += 5;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v10)
      {
        swift_bridgeObjectRelease_n();
        v9 = v36;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
LABEL_6:
    if (!v8 || (result = FormatItemNodeStyle.bind(binder:context:)(v40, v47), !v3))
    {
      v15 = *(_QWORD *)(v9 + 16);
      if (v15)
      {
        v39 = v3;
        swift_bridgeObjectRetain_n();
        v36 = v9;
        v16 = (uint64_t *)(v9 + 48);
        while (1)
        {
          v37 = v15;
          v17 = *(v16 - 2);
          v18 = *(v16 - 1);
          v19 = *v16;
          v20 = v16[1];
          v22 = v16[2];
          v21 = v16[3];
          v24 = v16[4];
          v23 = v16[5];
          *(_QWORD *)&v41 = v17;
          *((_QWORD *)&v41 + 1) = v18;
          *(_QWORD *)&v42 = v19;
          *((_QWORD *)&v42 + 1) = v20;
          v43 = v22;
          v44 = v21;
          v45 = v24;
          v46 = v23;
          v38 = v23;
          sub_1BA76B724(v17, v18, v19, v20, v22, v21, v24);
          v25 = v39;
          FormatNodeStyle.bind(binder:context:)();
          v39 = v25;
          if (v25)
            break;
          v16 += 8;
          sub_1BA76B698(v17, v18, v19, v20, v22, v21, v24);
          v15 = v37 - 1;
          if (v37 == 1)
          {
            swift_bridgeObjectRelease_n();
            v4 = v39;
            goto LABEL_13;
          }
        }
        sub_1BA76B698(v17, v18, v19, v20, v22, v21, v24);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_13:
        v26 = (uint64_t)v34;
        v27 = *(_QWORD *)(v35 + 16);
        if (v27)
        {
          v28 = v35 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
          v29 = *(_QWORD *)(v32 + 72);
          swift_bridgeObjectRetain_n();
          while (1)
          {
            sub_1BA4C2DD8(v28, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            *(_QWORD *)&v41 = *(_QWORD *)(v26 + 16);
            swift_retain();
            FormatOptionValue.bind(binder:context:)(v40, v47);
            if (v4)
              break;
            swift_release();
            sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v28 += v29;
            if (!--v27)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_18;
            }
          }
          swift_release();
          sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          return swift_bridgeObjectRelease_n();
        }
        else
        {
LABEL_18:
          v30 = v33;
          swift_bridgeObjectRetain();
          sub_1BA6FB29C(v40, v47, v30);
          return swift_bridgeObjectRelease();
        }
      }
    }
  }
  return result;
}

uint64_t FormatItemNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;

  v4 = v2;
  sub_1BA4A3FB4(0, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  MEMORY[0x1E0C80A78](v7);
  v42 = (uint64_t)&v36 - v8;
  v43 = a1;
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(_BYTE *)(v2 + 112);
  v11 = (v10 & 0xFE) == 0x7E || (v9 & 0xF000000000000007) == 0xF000000000000007;
  v52 = a2;
  if (v11)
    goto LABEL_22;
  v12 = *(_QWORD *)(v2 + 104);
  v40 = *(_QWORD *)(v2 + 96);
  v41 = v12;
  v13 = *(_QWORD *)(v2 + 88);
  v38 = *(_QWORD *)(v2 + 80);
  v39 = v13;
  v14 = *(_QWORD *)(v2 + 64);
  v37 = *(_QWORD *)(v2 + 72);
  v15 = *(_QWORD *)(v2 + 56);
  v44 = v9;
  sub_1BA7643E8(v9, v15, v14, v37, v38, v13, v40, v12, v10, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  sub_1BA5E7FF4(v9);
  FormatColor.bind(binder:context:)();
  sub_1BA5E800C(v9);
  result = sub_1BA7643E8(v9, v15, v14, v37, v38, v39, v40, v41, v10, (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
  if (!v3)
  {
LABEL_22:
    v17 = *(unsigned __int8 *)(v2 + 176);
    if (v17 == 255)
      goto LABEL_8;
    v18 = *(_QWORD *)(v2 + 168);
    v40 = *(_QWORD *)(v2 + 160);
    v41 = v18;
    v20 = *(_QWORD *)(v2 + 144);
    v19 = *(_QWORD *)(v2 + 152);
    v21 = *(_QWORD *)(v2 + 128);
    v22 = *(_QWORD *)(v2 + 136);
    v23 = *(_QWORD *)(v2 + 120);
    v44 = v23;
    v45 = v21;
    v46 = v22;
    v47 = v20;
    v48 = v19;
    v49 = v40;
    v50 = v18;
    v51 = v17;
    sub_1BA7756B8(v23, v21, v22, v20, v19, v40, v18, v17);
    FormatCellSelection.bind(binder:context:)();
    result = sub_1BA7644AC(v23, v21, v22, v20, v19, v40, v41, v17);
    if (!v3)
    {
LABEL_8:
      v24 = v42;
      sub_1BA57B488(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, v42, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
      v25 = type metadata accessor for FormatItemNodeAction();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25) == 1)
      {
        sub_1BA502AD0(v24, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
      }
      else
      {
        FormatItemNodeAction.bind(binder:context:)(v43, v52);
        result = sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
        if (v3)
          return result;
      }
      v26 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
      v27 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
      if (v26 >= 3)
      {
        if (v26 != 3)
        {
          v44 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
          v45 = v27;
          sub_1BAC68784(v26);
          FormatSizeEquation.bind(binder:context:)();
          result = sub_1BA7644C0(v26);
          if (v3)
            return result;
        }
      }
      else
      {
        sub_1BA7644C0(*(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle));
      }
      v28 = (uint64_t *)(v4 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
      result = swift_beginAccess();
      v29 = *v28;
      v30 = *(_QWORD *)(*v28 + 16);
      if (v30)
      {
        v31 = *(_QWORD *)(type metadata accessor for FormatItemNodeStyle.Selector(0) - 8);
        v32 = v29 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
        v33 = *(_QWORD *)(v31 + 72);
        swift_bridgeObjectRetain();
        v34 = v52;
        v35 = v43;
        do
        {
          FormatItemNodeStyle.Selector.bind(binder:context:)(v35, v34);
          if (v3)
            break;
          v32 += v33;
          --v30;
        }
        while (v30);
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1BA78DB88()
{
  _QWORD *v0;
  int64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1BA6AF268();
  v1 = v0[2];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v9;
    v3 = v0 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v4);
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(v9 + 16);
      v5 = *(_QWORD *)(v9 + 24);
      if (v6 >= v5 >> 1)
        sub_1BA7447E8(v5 > 1, v6 + 1, 1);
      v3 += 2;
      *(_QWORD *)(v9 + 16) = v6 + 1;
      v7 = v9 + 16 * v6;
      *(_QWORD *)(v7 + 32) = 0x2D70756F7267;
      *(_QWORD *)(v7 + 40) = 0xE600000000000000;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

uint64_t sub_1BA78DCB0()
{
  _QWORD *v0;
  int64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  type metadata accessor for FeedHeadline(0);
  v0 = FeedHeadline.State.selectors.getter();
  v1 = v0[2];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v9;
    v3 = v0 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v4);
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(v9 + 16);
      v5 = *(_QWORD *)(v9 + 24);
      if (v6 >= v5 >> 1)
        sub_1BA7447E8(v5 > 1, v6 + 1, 1);
      v3 += 2;
      *(_QWORD *)(v9 + 16) = v6 + 1;
      v7 = v9 + 16 * v6;
      *(_QWORD *)(v7 + 32) = 0x65682D70756F7267;
      *(_QWORD *)(v7 + 40) = 0xEF2D656E696C6461;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

uint64_t sub_1BA78DE14(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1BA78DE28()
{
  unint64_t result;

  result = qword_1ED3B99C0;
  if (!qword_1ED3B99C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B99C0);
  }
  return result;
}

uint64_t sub_1BA78DE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA78DEC4()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t result;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_possiblyUnfetchedAppConfiguration);
  if ((objc_msgSend(v1, sel_respondsToSelector_, sel_paidBundleConfig) & 1) != 0)
  {
    v2 = objc_msgSend(v1, sel_paidBundleConfig);
    swift_unknownObjectRelease();
    return (uint64_t)v2;
  }
  else
  {
    result = swift_unknownObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BA78DF44()
{
  return FeedUserInfo.contextSelectors.getter();
}

unint64_t sub_1BA78DF64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B1910;
  if (!qword_1ED3B1910)
  {
    v1 = type metadata accessor for FeedContextFactory();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedContextFactory, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B1910);
  }
  return result;
}

uint64_t sub_1BA78DFA8()
{
  _QWORD *v0;
  int64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1BA78E0E8();
  v1 = v0[2];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v9;
    v3 = v0 + 5;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v4);
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(v9 + 16);
      v5 = *(_QWORD *)(v9 + 24);
      if (v6 >= v5 >> 1)
        sub_1BA7447E8(v5 > 1, v6 + 1, 1);
      v3 += 2;
      *(_QWORD *)(v9 + 16) = v6 + 1;
      v7 = v9 + 16 * v6;
      *(_QWORD *)(v7 + 32) = 0x6172742D6D657469;
      *(_QWORD *)(v7 + 40) = 0xEB000000002D7469;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

_QWORD *sub_1BA78E0E8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  _QWORD *v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  unint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  unint64_t v97;
  _QWORD *v98;
  unint64_t v99;
  unint64_t v100;
  _QWORD *v101;
  unint64_t v102;
  unint64_t v103;
  _QWORD *v104;
  unint64_t v105;
  unint64_t v106;
  _QWORD *v107;
  unint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  unint64_t v111;
  unint64_t v112;
  char *v113;
  unint64_t v114;
  unint64_t v115;
  char *v116;
  unint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v123;
  unint64_t v124;
  _QWORD *v125;
  unint64_t v126;
  unint64_t v127;
  char *v128;
  unint64_t v129;
  unint64_t v130;
  _QWORD *v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;

  v1 = *v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v145 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((*v0 & 1) != 0)
  {
    v2 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v4 = v2[2];
    v3 = v2[3];
    if (v4 >= v3 >> 1)
      v2 = sub_1BA6EA0D0((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
    v2[2] = v4 + 1;
    v5 = &v2[2 * v4];
    v5[4] = 1835365481;
    v5[5] = 0xE400000000000000;
    v145 = v2;
  }
  if ((v1 & 2) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
    v7 = v2[2];
    v6 = v2[3];
    if (v7 >= v6 >> 1)
      v2 = sub_1BA6EA0D0((_QWORD *)(v6 > 1), v7 + 1, 1, v2);
    v2[2] = v7 + 1;
    v8 = &v2[2 * v7];
    v8[4] = 7364967;
    v8[5] = 0xE300000000000000;
    v145 = v2;
  }
  if ((v1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
    v10 = v2[2];
    v9 = v2[3];
    if (v10 >= v9 >> 1)
      v2 = sub_1BA6EA0D0((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
    v2[2] = v10 + 1;
    v11 = &v2[2 * v10];
    v11[4] = 0x69616E626D756874;
    v11[5] = 0xE90000000000006CLL;
    v145 = v2;
    if ((v1 & 8) == 0)
    {
LABEL_13:
      if ((v1 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_34;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_13;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v13 = v2[2];
  v12 = v2[3];
  if (v13 >= v12 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v12 > 1), v13 + 1, 1, v2);
  v2[2] = v13 + 1;
  v14 = &v2[2 * v13];
  v14[4] = 0x6F65646976;
  v14[5] = 0xE500000000000000;
  v145 = v2;
  if ((v1 & 0x10) == 0)
  {
LABEL_14:
    if ((v1 & 0x20) == 0)
      goto LABEL_15;
    goto LABEL_39;
  }
LABEL_34:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v16 = v2[2];
  v15 = v2[3];
  if (v16 >= v15 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v15 > 1), v16 + 1, 1, v2);
  v2[2] = v16 + 1;
  v17 = &v2[2 * v16];
  v17[4] = 0x656E696C66666FLL;
  v17[5] = 0xE700000000000000;
  v145 = v2;
  if ((v1 & 0x20) == 0)
  {
LABEL_15:
    if ((v1 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_44;
  }
LABEL_39:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v19 = v2[2];
  v18 = v2[3];
  if (v19 >= v18 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v18 > 1), v19 + 1, 1, v2);
  v2[2] = v19 + 1;
  v20 = &v2[2 * v19];
  v20[4] = 0x6465727574616566;
  v20[5] = 0xE800000000000000;
  v145 = v2;
  if ((v1 & 0x40) == 0)
  {
LABEL_16:
    if ((v1 & 0x80) == 0)
      goto LABEL_17;
    goto LABEL_49;
  }
LABEL_44:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v22 = v2[2];
  v21 = v2[3];
  if (v22 >= v21 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v21 > 1), v22 + 1, 1, v2);
  v2[2] = v22 + 1;
  v23 = &v2[2 * v22];
  v23[4] = 0x7265766F63;
  v23[5] = 0xE500000000000000;
  v145 = v2;
  if ((v1 & 0x80) == 0)
  {
LABEL_17:
    if ((v1 & 0x100) == 0)
      goto LABEL_18;
    goto LABEL_54;
  }
LABEL_49:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v25 = v2[2];
  v24 = v2[3];
  if (v25 >= v24 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v24 > 1), v25 + 1, 1, v2);
  v2[2] = v25 + 1;
  v26 = &v2[2 * v25];
  v26[4] = 0x656E696C64616568;
  v26[5] = 0xE800000000000000;
  v145 = v2;
  if ((v1 & 0x100) == 0)
  {
LABEL_18:
    if ((v1 & 0x200) == 0)
      goto LABEL_19;
    goto LABEL_59;
  }
LABEL_54:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v28 = v2[2];
  v27 = v2[3];
  if (v28 >= v27 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v27 > 1), v28 + 1, 1, v2);
  v2[2] = v28 + 1;
  v29 = &v2[2 * v28];
  v29[4] = 0x7469617274726F70;
  v29[5] = 0xE800000000000000;
  v145 = v2;
  if ((v1 & 0x200) == 0)
  {
LABEL_19:
    if ((v1 & 0x400) == 0)
      goto LABEL_20;
    goto LABEL_64;
  }
LABEL_59:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v31 = v2[2];
  v30 = v2[3];
  if (v31 >= v30 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v30 > 1), v31 + 1, 1, v2);
  v2[2] = v31 + 1;
  v32 = &v2[2 * v31];
  v32[4] = 0x70616373646E616CLL;
  v32[5] = 0xE900000000000065;
  v145 = v2;
  if ((v1 & 0x400) == 0)
  {
LABEL_20:
    if ((v1 & 0x800) == 0)
      goto LABEL_21;
    goto LABEL_69;
  }
LABEL_64:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v34 = v2[2];
  v33 = v2[3];
  if (v34 >= v33 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v33 > 1), v34 + 1, 1, v2);
  v2[2] = v34 + 1;
  v35 = &v2[2 * v34];
  v35[4] = 0x657261757173;
  v35[5] = 0xE600000000000000;
  v145 = v2;
  if ((v1 & 0x800) == 0)
  {
LABEL_21:
    if ((v1 & 0x1000) == 0)
      goto LABEL_22;
    goto LABEL_74;
  }
LABEL_69:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v37 = v2[2];
  v36 = v2[3];
  if (v37 >= v36 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v36 > 1), v37 + 1, 1, v2);
  v2[2] = v37 + 1;
  v38 = &v2[2 * v37];
  v38[4] = 6448503;
  v38[5] = 0xE300000000000000;
  v145 = v2;
  if ((v1 & 0x1000) == 0)
  {
LABEL_22:
    if ((v1 & 0x2000) == 0)
      goto LABEL_84;
    goto LABEL_79;
  }
LABEL_74:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v40 = v2[2];
  v39 = v2[3];
  if (v40 >= v39 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v39 > 1), v40 + 1, 1, v2);
  v2[2] = v40 + 1;
  v41 = &v2[2 * v40];
  v41[4] = 0x73656363612D6F6ELL;
  v41[5] = 0xE900000000000073;
  v145 = v2;
  if ((v1 & 0x2000) != 0)
  {
LABEL_79:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
    v43 = v2[2];
    v42 = v2[3];
    if (v43 >= v42 >> 1)
      v2 = sub_1BA6EA0D0((_QWORD *)(v42 > 1), v43 + 1, 1, v2);
    v2[2] = v43 + 1;
    v44 = &v2[2 * v43];
    v44[4] = 25697;
    v44[5] = 0xE200000000000000;
    v145 = v2;
  }
LABEL_84:
  if ((v1 & 0x8000) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
    v46 = v2[2];
    v45 = v2[3];
    if (v46 >= v45 >> 1)
      v2 = sub_1BA6EA0D0((_QWORD *)(v45 > 1), v46 + 1, 1, v2);
    v2[2] = v46 + 1;
    v47 = &v2[2 * v46];
    v47[4] = 0xD000000000000016;
    v47[5] = 0x80000001BB999780;
    v145 = v2;
    if ((v1 & 0x10000) == 0)
    {
LABEL_86:
      if ((v1 & 0x20000) == 0)
        goto LABEL_87;
      goto LABEL_103;
    }
  }
  else if ((v1 & 0x10000) == 0)
  {
    goto LABEL_86;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v49 = v2[2];
  v48 = v2[3];
  if (v49 >= v48 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v48 > 1), v49 + 1, 1, v2);
  v2[2] = v49 + 1;
  v50 = &v2[2 * v49];
  v50[4] = 0xD000000000000017;
  v50[5] = 0x80000001BB999760;
  v145 = v2;
  if ((v1 & 0x20000) == 0)
  {
LABEL_87:
    if ((v1 & 0x40000) == 0)
      goto LABEL_88;
    goto LABEL_108;
  }
LABEL_103:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v52 = v2[2];
  v51 = v2[3];
  if (v52 >= v51 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v51 > 1), v52 + 1, 1, v2);
  v2[2] = v52 + 1;
  v53 = &v2[2 * v52];
  v53[4] = 0xD000000000000014;
  v53[5] = 0x80000001BB999740;
  v145 = v2;
  if ((v1 & 0x40000) == 0)
  {
LABEL_88:
    if ((v1 & 0x100000) == 0)
      goto LABEL_89;
    goto LABEL_113;
  }
LABEL_108:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v55 = v2[2];
  v54 = v2[3];
  if (v55 >= v54 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v54 > 1), v55 + 1, 1, v2);
  v2[2] = v55 + 1;
  v56 = &v2[2 * v55];
  v56[4] = 0x79726F6765746163;
  v56[5] = 0xE800000000000000;
  v145 = v2;
  if ((v1 & 0x100000) == 0)
  {
LABEL_89:
    if ((v1 & 0x200000) == 0)
      goto LABEL_90;
    goto LABEL_118;
  }
LABEL_113:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v58 = v2[2];
  v57 = v2[3];
  if (v58 >= v57 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v57 > 1), v58 + 1, 1, v2);
  v2[2] = v58 + 1;
  v59 = &v2[2 * v58];
  v59[4] = 0x6E6967756C70;
  v59[5] = 0xE600000000000000;
  v145 = v2;
  if ((v1 & 0x200000) == 0)
  {
LABEL_90:
    if ((v1 & 0x400000) == 0)
      goto LABEL_91;
    goto LABEL_123;
  }
LABEL_118:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v61 = v2[2];
  v60 = v2[3];
  if (v61 >= v60 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v60 > 1), v61 + 1, 1, v2);
  v2[2] = v61 + 1;
  v62 = &v2[2 * v61];
  v62[4] = 0x72742D6F69647561;
  v62[5] = 0xEB000000006B6361;
  v145 = v2;
  if ((v1 & 0x400000) == 0)
  {
LABEL_91:
    if ((v1 & 0x800000) == 0)
      goto LABEL_133;
    goto LABEL_128;
  }
LABEL_123:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v64 = v2[2];
  v63 = v2[3];
  if (v64 >= v63 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v63 > 1), v64 + 1, 1, v2);
  v2[2] = v64 + 1;
  v65 = (char *)&v2[2 * v64];
  strcpy(v65 + 32, "sports-score");
  v65[45] = 0;
  *((_WORD *)v65 + 23) = -5120;
  v145 = v2;
  if ((v1 & 0x800000) != 0)
  {
LABEL_128:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
    v67 = v2[2];
    v66 = v2[3];
    if (v67 >= v66 >> 1)
      v2 = sub_1BA6EA0D0((_QWORD *)(v66 > 1), v67 + 1, 1, v2);
    v2[2] = v67 + 1;
    v68 = &v2[2 * v67];
    v68[4] = 0xD000000000000010;
    v68[5] = 0x80000001BB999720;
    v145 = v2;
  }
LABEL_133:
  if ((v1 & 0x20000000) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
    v70 = v2[2];
    v69 = v2[3];
    if (v70 >= v69 >> 1)
      v2 = sub_1BA6EA0D0((_QWORD *)(v69 > 1), v70 + 1, 1, v2);
    v2[2] = v70 + 1;
    v71 = (char *)&v2[2 * v70];
    strcpy(v71 + 32, "sports-bracket");
    v71[47] = -18;
    v145 = v2;
    if ((v1 & 0x1000000) == 0)
    {
LABEL_135:
      if ((v1 & 0x2000000) == 0)
        goto LABEL_136;
      goto LABEL_161;
    }
  }
  else if ((v1 & 0x1000000) == 0)
  {
    goto LABEL_135;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v73 = v2[2];
  v72 = v2[3];
  if (v73 >= v72 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v72 > 1), v73 + 1, 1, v2);
  v2[2] = v73 + 1;
  v74 = &v2[2 * v73];
  v74[4] = 0x726F70732D676174;
  v74[5] = 0xEA00000000007374;
  v145 = v2;
  if ((v1 & 0x2000000) == 0)
  {
LABEL_136:
    if ((v1 & 0x4000000) == 0)
      goto LABEL_137;
    goto LABEL_166;
  }
LABEL_161:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v76 = v2[2];
  v75 = v2[3];
  if (v76 >= v75 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v75 > 1), v76 + 1, 1, v2);
  v2[2] = v76 + 1;
  v77 = (char *)&v2[2 * v76];
  strcpy(v77 + 32, "tag-local-news");
  v77[47] = -18;
  v145 = v2;
  if ((v1 & 0x4000000) == 0)
  {
LABEL_137:
    if ((v1 & 0x8000000) == 0)
      goto LABEL_138;
    goto LABEL_171;
  }
LABEL_166:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v79 = v2[2];
  v78 = v2[3];
  if (v79 >= v78 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v78 > 1), v79 + 1, 1, v2);
  v2[2] = v79 + 1;
  v80 = (char *)&v2[2 * v79];
  strcpy(v80 + 32, "tag-newspaper");
  *((_WORD *)v80 + 23) = -4864;
  v145 = v2;
  if ((v1 & 0x8000000) == 0)
  {
LABEL_138:
    if ((v1 & 0x10000000) == 0)
      goto LABEL_139;
    goto LABEL_176;
  }
LABEL_171:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v82 = v2[2];
  v81 = v2[3];
  if (v82 >= v81 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v81 > 1), v82 + 1, 1, v2);
  v2[2] = v82 + 1;
  v83 = &v2[2 * v82];
  v83[4] = 0x69706F742D676174;
  v83[5] = 0xE900000000000063;
  v145 = v2;
  if ((v1 & 0x10000000) == 0)
  {
LABEL_139:
    if ((v1 & 0x20000000) == 0)
      goto LABEL_140;
    goto LABEL_181;
  }
LABEL_176:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v85 = v2[2];
  v84 = v2[3];
  if (v85 >= v84 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v84 > 1), v85 + 1, 1, v2);
  v2[2] = v85 + 1;
  v86 = &v2[2 * v85];
  v86[4] = 0x6E6168632D676174;
  v86[5] = 0xEB000000006C656ELL;
  v145 = v2;
  if ((v1 & 0x20000000) == 0)
  {
LABEL_140:
    if ((v1 & 0x40000000) == 0)
      goto LABEL_141;
    goto LABEL_186;
  }
LABEL_181:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v88 = v2[2];
  v87 = v2[3];
  if (v88 >= v87 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v87 > 1), v88 + 1, 1, v2);
  v2[2] = v88 + 1;
  v89 = (char *)&v2[2 * v88];
  strcpy(v89 + 32, "sports-bracket");
  v89[47] = -18;
  v145 = v2;
  if ((v1 & 0x40000000) == 0)
  {
LABEL_141:
    if ((v1 & 0x80000000) == 0)
      goto LABEL_142;
    goto LABEL_191;
  }
LABEL_186:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v91 = v2[2];
  v90 = v2[3];
  if (v91 >= v90 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v90 > 1), v91 + 1, 1, v2);
  v2[2] = v91 + 1;
  v92 = &v2[2 * v91];
  v92[4] = 0x7463657269646572;
  v92[5] = 0xE900000000000073;
  v145 = v2;
  if ((v1 & 0x80000000) == 0)
  {
LABEL_142:
    if ((v1 & 0x100000000) == 0)
      goto LABEL_143;
    goto LABEL_196;
  }
LABEL_191:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v94 = v2[2];
  v93 = v2[3];
  if (v94 >= v93 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v93 > 1), v94 + 1, 1, v2);
  v2[2] = v94 + 1;
  v95 = &v2[2 * v94];
  v95[4] = 0x64656B636F6C62;
  v95[5] = 0xE700000000000000;
  v145 = v2;
  if ((v1 & 0x100000000) == 0)
  {
LABEL_143:
    if ((v1 & 0x200000000) == 0)
      goto LABEL_144;
    goto LABEL_201;
  }
LABEL_196:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v97 = v2[2];
  v96 = v2[3];
  if (v97 >= v96 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v96 > 1), v97 + 1, 1, v2);
  v2[2] = v97 + 1;
  v98 = &v2[2 * v97];
  v98[4] = 0x636F6C622D746F6ELL;
  v98[5] = 0xEB0000000064656BLL;
  v145 = v2;
  if ((v1 & 0x200000000) == 0)
  {
LABEL_144:
    if ((v1 & 0x400000000) == 0)
      goto LABEL_145;
    goto LABEL_206;
  }
LABEL_201:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v100 = v2[2];
  v99 = v2[3];
  if (v100 >= v99 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v99 > 1), v100 + 1, 1, v2);
  v2[2] = v100 + 1;
  v101 = &v2[2 * v100];
  v101[4] = 0xD000000000000010;
  v101[5] = 0x80000001BB999700;
  v145 = v2;
  if ((v1 & 0x400000000) == 0)
  {
LABEL_145:
    if ((v1 & 0x800000000) == 0)
      goto LABEL_146;
    goto LABEL_211;
  }
LABEL_206:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v103 = v2[2];
  v102 = v2[3];
  if (v103 >= v102 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v102 > 1), v103 + 1, 1, v2);
  v2[2] = v103 + 1;
  v104 = &v2[2 * v103];
  v104[4] = 0xD000000000000011;
  v104[5] = 0x80000001BB9996E0;
  v145 = v2;
  if ((v1 & 0x800000000) == 0)
  {
LABEL_146:
    if ((v1 & 0x1000000000) == 0)
      goto LABEL_147;
    goto LABEL_216;
  }
LABEL_211:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v106 = v2[2];
  v105 = v2[3];
  if (v106 >= v105 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v105 > 1), v106 + 1, 1, v2);
  v2[2] = v106 + 1;
  v107 = &v2[2 * v106];
  v107[4] = 0xD000000000000014;
  v107[5] = 0x80000001BB9996C0;
  v145 = v2;
  if ((v1 & 0x1000000000) == 0)
  {
LABEL_147:
    if ((v1 & 0x2000000000) == 0)
      goto LABEL_148;
    goto LABEL_221;
  }
LABEL_216:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v109 = v2[2];
  v108 = v2[3];
  if (v109 >= v108 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v108 > 1), v109 + 1, 1, v2);
  v2[2] = v109 + 1;
  v110 = &v2[2 * v109];
  v110[4] = 0xD000000000000012;
  v110[5] = 0x80000001BB9996A0;
  v145 = v2;
  if ((v1 & 0x2000000000) == 0)
  {
LABEL_148:
    if ((v1 & 0x4000000000) == 0)
      goto LABEL_149;
    goto LABEL_226;
  }
LABEL_221:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v112 = v2[2];
  v111 = v2[3];
  if (v112 >= v111 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v111 > 1), v112 + 1, 1, v2);
  v2[2] = v112 + 1;
  v113 = (char *)&v2[2 * v112];
  strcpy(v113 + 32, "sports-event");
  v113[45] = 0;
  *((_WORD *)v113 + 23) = -5120;
  v145 = v2;
  if ((v1 & 0x4000000000) == 0)
  {
LABEL_149:
    if ((v1 & 0x8000000000) == 0)
      goto LABEL_236;
    goto LABEL_231;
  }
LABEL_226:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v115 = v2[2];
  v114 = v2[3];
  if (v115 >= v114 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v114 > 1), v115 + 1, 1, v2);
  v2[2] = v115 + 1;
  v116 = (char *)&v2[2 * v115];
  strcpy(v116 + 32, "has-auxiliary");
  *((_WORD *)v116 + 23) = -4864;
  v145 = v2;
  if ((v1 & 0x8000000000) != 0)
  {
LABEL_231:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
    v118 = v2[2];
    v117 = v2[3];
    if (v118 >= v117 >> 1)
      v2 = sub_1BA6EA0D0((_QWORD *)(v117 > 1), v118 + 1, 1, v2);
    v2[2] = v118 + 1;
    v119 = &v2[2 * v118];
    v119[4] = 0x656C7A7A7570;
    v119[5] = 0xE600000000000000;
    v145 = v2;
  }
LABEL_236:
  if ((v1 & 0x10000000000) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
    v124 = v2[2];
    v123 = v2[3];
    if (v124 >= v123 >> 1)
      v2 = sub_1BA6EA0D0((_QWORD *)(v123 > 1), v124 + 1, 1, v2);
    v2[2] = v124 + 1;
    v125 = &v2[2 * v124];
    v125[4] = 0x742D656C7A7A7570;
    v125[5] = 0xEB00000000657079;
    v145 = v2;
    if ((v1 & 0x20000000000) == 0)
    {
LABEL_238:
      if ((v1 & 0x40000000000) == 0)
        goto LABEL_239;
      goto LABEL_258;
    }
  }
  else if ((v1 & 0x20000000000) == 0)
  {
    goto LABEL_238;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v127 = v2[2];
  v126 = v2[3];
  if (v127 >= v126 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v126 > 1), v127 + 1, 1, v2);
  v2[2] = v127 + 1;
  v128 = (char *)&v2[2 * v127];
  strcpy(v128 + 32, "puzzle-teaser");
  *((_WORD *)v128 + 23) = -4864;
  v145 = v2;
  if ((v1 & 0x40000000000) == 0)
  {
LABEL_239:
    if ((v1 & 0x80000000000) == 0)
      goto LABEL_240;
    goto LABEL_263;
  }
LABEL_258:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
  v130 = v2[2];
  v129 = v2[3];
  if (v130 >= v129 >> 1)
    v2 = sub_1BA6EA0D0((_QWORD *)(v129 > 1), v130 + 1, 1, v2);
  v2[2] = v130 + 1;
  v131 = &v2[2 * v130];
  v131[4] = 0x68742D656772616CLL;
  v131[5] = 0xEF6C69616E626D75;
  v145 = v2;
  if ((v1 & 0x80000000000) == 0)
  {
LABEL_240:
    if ((v1 & 0x100000000000) == 0)
      goto LABEL_241;
    goto LABEL_268;
  }
LABEL_263:
  v145 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v2 = sub_1BA6EA0D0(0, v2[2] + 1, 1, v2);
    v145 = v2;
  }
  v133 = v2[2];
  v132 = v2[3];
  if (v133 >= v132 >> 1)
    v145 = sub_1BA6EA0D0((_QWORD *)(v132 > 1), v133 + 1, 1, v2);
  v134 = sub_1BA981668(v133, 0xD000000000000010, 0x80000001BB999680);
  nullsub_1(v134);
  if ((v1 & 0x100000000000) == 0)
  {
LABEL_241:
    if ((v1 & 0x200000000000) == 0)
      goto LABEL_242;
    goto LABEL_269;
  }
LABEL_268:
  sub_1BA981498();
  v135 = v145[2];
  sub_1BA981570(v135);
  v136 = sub_1BA981668(v135, 0xD000000000000016, 0x80000001BB999660);
  nullsub_1(v136);
  if ((v1 & 0x200000000000) == 0)
  {
LABEL_242:
    if ((v1 & 0x400000000000) == 0)
      goto LABEL_243;
    goto LABEL_270;
  }
LABEL_269:
  sub_1BA981498();
  v137 = v145[2];
  sub_1BA981570(v137);
  v138 = sub_1BA981668(v137, 0xD000000000000015, 0x80000001BB999640);
  nullsub_1(v138);
  if ((v1 & 0x400000000000) == 0)
  {
LABEL_243:
    if ((v1 & 0x800000000000) == 0)
      goto LABEL_244;
    goto LABEL_271;
  }
LABEL_270:
  sub_1BA981498();
  v139 = v145[2];
  sub_1BA981570(v139);
  v140 = sub_1BA981668(v139, 0xD00000000000001ALL, 0x80000001BB999620);
  nullsub_1(v140);
  if ((v1 & 0x800000000000) == 0)
  {
LABEL_244:
    if ((v1 & 0x1000000000000) == 0)
      goto LABEL_245;
LABEL_272:
    sub_1BA981498();
    v143 = v145[2];
    sub_1BA981570(v143);
    v144 = sub_1BA981668(v143, 0xD00000000000001CLL, 0x80000001BB9995E0);
    nullsub_1(v144);
    if ((v1 & 0x2000000000000) == 0)
      return v145;
    goto LABEL_246;
  }
LABEL_271:
  sub_1BA981498();
  v141 = v145[2];
  sub_1BA981570(v141);
  v142 = sub_1BA981668(v141, 0xD000000000000017, 0x80000001BB999600);
  nullsub_1(v142);
  if ((v1 & 0x1000000000000) != 0)
    goto LABEL_272;
LABEL_245:
  if ((v1 & 0x2000000000000) != 0)
  {
LABEL_246:
    sub_1BA981498();
    v120 = v145[2];
    sub_1BA981570(v120);
    v121 = sub_1BA981668(v120, 0x6C6C6177796170, 0xE700000000000000);
    nullsub_1(v121);
  }
  return v145;
}

uint64_t sub_1BA78F9E8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[2];
  uint64_t v65;
  uint64_t v66;

  v61 = a4;
  v5 = v4;
  v60 = a3;
  v56 = a1;
  v57 = type metadata accessor for FormatOption();
  v7 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v5 + 2;
  swift_beginAccess();
  v10 = v5[2];
  v11 = v5[3];
  swift_bridgeObjectRetain();
  v58 = sub_1BA790008(v10, v11);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v12 = v5[7];
  v13 = *(_QWORD *)(v12 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v54 = a2;
    v55 = v5;
    v63 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v13, 0);
    v14 = v63;
    v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v53 = v12;
    v16 = v12 + v15;
    v66 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_1BA4C2DD8(v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v17 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v9, v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v63 = v14;
      v20 = *(_QWORD *)(v14 + 16);
      v19 = *(_QWORD *)(v14 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1BA76B828(v19 > 1, v20 + 1, 1);
        v14 = v63;
      }
      *(_QWORD *)(v14 + 16) = v20 + 1;
      *(_QWORD *)(v14 + 8 * v20 + 32) = v17 | 0x6000000000000000;
      v16 += v66;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    v5 = v55;
    a2 = v54;
  }
  v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 24);
  v22 = v5[3];
  v23 = v62;
  v24 = v59;
  if (*(_QWORD *)(v21 + 16))
  {
    v25 = *v59;
    swift_bridgeObjectRetain_n();
    v26 = sub_1BA6E35A8(v25, v22);
    if ((v27 & 1) != 0)
    {
      v28 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v26);
      swift_retain();
      swift_bridgeObjectRelease();
LABEL_14:
      v31 = *(_QWORD *)(v28 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v21 + 16))
    {
      v29 = sub_1BA6E35A8(42, 0xE100000000000000);
      if ((v30 & 1) != 0)
      {
        v28 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v29);
        swift_retain();
        goto LABEL_14;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v31 = MEMORY[0x1E0DEE9D8];
LABEL_16:
  v63 = v14;
  sub_1BA7082C0(v31);
  sub_1BA70B0DC(v63);
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v32 = v5[6];
  v33 = v5[3];
  if (*(_QWORD *)(v21 + 16))
  {
    v34 = *v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = sub_1BA6E35A8(v34, v33);
    if ((v36 & 1) != 0)
    {
      v37 = v5;
      v38 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v35) + 112);
      swift_retain();
      swift_bridgeObjectRetain();
      v39 = sub_1BA78FEA8();
      v40 = v38;
      v5 = v37;
      v41 = sub_1BA6E4124(v39, v40);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_21;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v41 = MEMORY[0x1E0DEE9E8];
LABEL_21:
  v43 = v60;
  v42 = v61;
  v44 = sub_1BA6E4124(v41, v32);
  v45 = sub_1BA707E14(v44, 0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v46 = v5[5];
  v47 = *(_QWORD *)(v46 + 16);
  if (!v47)
    return swift_release();
  swift_bridgeObjectRetain();
  v48 = 32;
  v49 = v56;
  while (1)
  {
    v50 = *(_OWORD *)(v46 + v48);
    v51 = *(_OWORD *)(v46 + v48 + 16);
    v65 = *(_QWORD *)(v46 + v48 + 32);
    v64[0] = v50;
    v64[1] = v51;
    sub_1BA7086BC((uint64_t)v64);
    v42(v49, v45, v43);
    if (v23)
      break;
    sub_1BA708680((uint64_t)v64);
    v48 += 40;
    if (!--v47)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1BA708680((uint64_t)v64);
}

uint64_t sub_1BA78FEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD v7[2];

  if (*(_BYTE *)(v0 + 96))
    return MEMORY[0x1E0DEE9E8];
  sub_1BA6EA07C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  strcpy((char *)v7, "current-slot-");
  HIWORD(v7[1]) = -4864;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  v4 = v7[1];
  *(_QWORD *)(inited + 32) = v7[0];
  *(_QWORD *)(inited + 40) = v4;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v7[0] = 0xD000000000000018;
  v7[1] = 0x80000001BB99E110;
  sub_1BB87420C();
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = 0xD000000000000018;
  *(_QWORD *)(inited + 56) = 0x80000001BB99E110;
  v1 = sub_1BA862444(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_1BA790008(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[40];
  char v58[8];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[4];

  v48 = a2;
  v50 = a1;
  v3 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v3);
  v49 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v49, v5);
  v6 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  v7 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  v39 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
  v44 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  v42 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  v41 = v10;
  v58[0] = v6;
  v58[1] = v7;
  v59 = v8;
  v60 = v39;
  v61 = v9;
  v62 = v44;
  v63 = v43;
  v64 = v42;
  v65 = v10;
  v51 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  v46 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  v11 = *(_OWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  v12 = *(_OWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  v13 = *(_OWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  v66[2] = *(_OWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  v66[3] = v13;
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v66[0] = v11;
  v66[1] = v12;
  v40 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  sub_1BA70AF2C(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v57, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  v34 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  v33 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(_QWORD *)&v52 = v18;
  *((_QWORD *)&v52 + 1) = v34;
  v53 = v33;
  v54 = v32;
  v55 = v19;
  v56 = v20;
  v36 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  v37 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  v45 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  v35 = v21;
  v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  v38 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  v31 = v22;
  v47 = swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1BA70A884(v9, v44);
  swift_retain();
  v23 = v46;
  swift_retain();
  sub_1BA70A8DC((uint64_t)v66);
  swift_bridgeObjectRetain();
  v24 = v40;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA70A834(v18, v34);
  v25 = v31;
  swift_bridgeObjectRetain();
  v26 = v48;
  swift_bridgeObjectRetain();
  v27 = v36;
  swift_bridgeObjectRetain();
  v28 = v37;
  swift_retain();
  v29 = swift_bridgeObjectRetain();
  return sub_1BB29AEAC(v49, v58, v51, v23, v66, v14, v24, v15, (uint64_t)v57, v16, v17, &v52, v27, v50, v26, v28, v45, v29, v38,
           v25);
}

void sub_1BA790414()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B2E18)
  {
    type metadata accessor for FeedHeadline(255);
    sub_1BA829A4C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B2E18);
  }
}

void sub_1BA790480()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9E70)
  {
    sub_1BA82EF88(255, qword_1ED3B5BC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))type metadata accessor for FormatEquationToken);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9E70);
  }
}

void sub_1BA7904E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9A90)
  {
    sub_1BA670B14();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9A90);
  }
}

uint64_t sub_1BA790548(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *v3;
  *(_QWORD *)(v7 + 16) = a1 + 1;
  v8 = a3(0);
  return sub_1BA5193C4(a2, v7+ ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3);
}

uint64_t sub_1BA7905B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA790634(a1, a2, a3, *v3, (unint64_t *)&unk_1ED3CFC60, (uint64_t)&type metadata for FormatSlotDefinitionCollection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA7905DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA790634(a1, a2, a3, *v3, &qword_1ED3B9F88, (uint64_t)&type metadata for FormatSupplementaryCollection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA790608(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA790634(a1, a2, a3, *v3, &qword_1ED3B9F80, (uint64_t)&type metadata for FormatLocalizationCollection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA790634(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v8 = *((_QWORD *)a4 + 3);
    v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v9 = a2;
    }
  }
  else
  {
    v9 = a2;
  }
  v10 = *((_QWORD *)a4 + 2);
  if (v9 <= v10)
    v11 = *((_QWORD *)a4 + 2);
  else
    v11 = v9;
  if (v11)
  {
    sub_1BA4AD288(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = (char *)swift_allocObject();
    v13 = _swift_stdlib_malloc_size(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 17;
    *((_QWORD *)v12 + 2) = v10;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 4);
  }
  else
  {
    v12 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[16 * v10])
      memmove(v15, v16, 16 * v10);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[16 * v10] || v15 >= &v16[16 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA7907B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA74466C(a1, a2, a3, *v3, &qword_1ED3B9F58, (uint64_t)&type metadata for FormatDecorationCollection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA7907DC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA790634(a1, a2, a3, *v3, &qword_1ED3B9F48, (uint64_t)&type metadata for FormatNodeStyleCollection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA790808(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA790634(a1, a2, a3, *v3, (unint64_t *)&unk_1ED3B9F20, (uint64_t)&type metadata for FormatSnippetCollection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA790834(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA790850(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA790850(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9EE0, (uint64_t)&type metadata for FormatGroupCollection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA7909E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BA7C36AC, type metadata accessor for FormatCompilerOptions);
  *v3 = result;
  return result;
}

uint64_t sub_1BA790A14(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA790634(a1, a2, a3, *v3, (unint64_t *)&unk_1ED3B9EA0, (uint64_t)&type metadata for FormatTypeCollection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA790A40(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA790634(a1, a2, a3, *v3, &qword_1ED3B9E88, (uint64_t)&type metadata for FormatItemCollection);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA790A6C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BA7C32A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB4DC8]);
  *v3 = result;
  return result;
}

uint64_t sub_1BA790A98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9EF8, type metadata accessor for FormatCompilerProperty);
}

uint64_t sub_1BA790AAC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3C0530, (uint64_t (*)(uint64_t))sub_1BA709CA4);
}

uint64_t sub_1BA790AC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC8789C();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB394AC0(0, v8, v20, a4, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1BA790D24(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC877B4();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB394AC0(0, v8, v20, a4, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1BA790F88(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC8792C();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB394AC0(0, v8, v20, a4, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1BA7911EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC87828();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB394AC0(0, v8, v20, a4, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1BA791450(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC876CC();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB394AC0(0, v8, v20, a4, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

void sub_1BA7916B4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B3748)
  {
    v2 = sub_1BA89675C();
    v4 = type metadata accessor for FormatObject(a1, (uint64_t)&type metadata for FormatLocalization, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B3748);
  }
}

uint64_t sub_1BA79170C(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BA7C3638();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB394AC0(0, v8, v20, a4, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1BA791970(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3CFB30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
}

uint64_t sub_1BA791984(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BA7C36C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB6430]);
  *v3 = result;
  return result;
}

uint64_t sub_1BA7919B0(uint64_t a1, uint64_t a2)
{
  return sub_1BA67DA1C(a1, a2, sub_1BA9D6D8C);
}

uint64_t sub_1BA7919BC@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1BA7919D0(a1, a2);
}

uint64_t sub_1BA7919D0@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = sub_1BA7815EC(**(_QWORD **)(v2 + 16), a2);
  if (v3)
    *a1 = v3;
  return result;
}

uint64_t sub_1BA791A20(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  size_t v33;
  uint64_t result;
  _QWORD v35[2];
  uint64_t *v36;
  _QWORD *v37;

  v4 = type metadata accessor for FormatOption();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v35 - v9);
  v37 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6D3834(a1);
  v11 = v37[2];
  if (!v11)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_18:
    swift_bridgeObjectRelease();
    v33 = sub_1BA791D58((uint64_t)v14);
    swift_bridgeObjectRelease();
    return v33;
  }
  v12 = (uint64_t)v37 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v13 = *(_QWORD *)(v5 + 72);
  v35[1] = v37;
  swift_bridgeObjectRetain();
  v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v36 = v10;
  while (1)
  {
    sub_1BA900B30(v12, (uint64_t)v10);
    v17 = *v10;
    v16 = v10[1];
    v18 = (uint64_t)v7;
    sub_1BA900B30((uint64_t)v10, (uint64_t)v7);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = v14;
    v21 = sub_1BA6E35A8(v17, v16);
    v22 = v14[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (v14[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v14 = v37;
        if ((v20 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BB4C36E8();
        v14 = v37;
        if ((v25 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BA791CD0(v24, isUniquelyReferenced_nonNull_native);
      v26 = sub_1BA6E35A8(v17, v16);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_21;
      v21 = v26;
      v14 = v37;
      if ((v25 & 1) != 0)
      {
LABEL_3:
        v15 = v14[7] + v21 * v13;
        v7 = (char *)v18;
        sub_1BB0AD690(v18, v15);
        goto LABEL_4;
      }
    }
    v14[(v21 >> 6) + 8] |= 1 << v21;
    v28 = (uint64_t *)(v14[6] + 16 * v21);
    *v28 = v17;
    v28[1] = v16;
    v29 = v14[7] + v21 * v13;
    v7 = (char *)v18;
    sub_1BA5193C4(v18, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v30 = v14[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
      goto LABEL_20;
    v14[2] = v32;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = v36;
    sub_1BA4A2E80((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v12 += v13;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA791CD0(uint64_t a1, int a2)
{
  return sub_1BA73E158(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption, (void (*)(_QWORD, __n128))sub_1BA791CF4, (void (*)(unint64_t, char *))sub_1BA8569CC, (void (*)(unint64_t, char *))sub_1BA900B30);
}

void sub_1BA791CF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9AD8)
  {
    type metadata accessor for FormatOption();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9AD8);
  }
}

size_t sub_1BA791D58(uint64_t a1)
{
  return sub_1BA85E1FC(a1, sub_1BA7EB4AC, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
}

uint64_t sub_1BA791D6C(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA7AD840, type metadata accessor for FormatCompilerSlotDefinition);
}

uint64_t sub_1BA791D80(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA790A98, type metadata accessor for FormatCompilerProperty);
}

uint64_t sub_1BA791D94(uint64_t a1)
{
  return sub_1BB3841C8(a1, (uint64_t (*)(void))sub_1BA790AC0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
}

uint64_t sub_1BA791DB8(uint64_t a1)
{
  return sub_1BB384028(a1, (uint64_t (*)(void))sub_1BA79170C, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
}

uint64_t sub_1BA791DDC(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA791970, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB4DC8]);
}

uint64_t sub_1BA791DF0(uint64_t a1)
{
  return sub_1BA90BCF8(a1, sub_1BA6BCBF8);
}

uint64_t sub_1BA791DFC(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v24;
  uint64_t v25;

  v4 = a3;
  if (a3 >> 62)
  {
LABEL_38:
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v6 = v4 & 0xC000000000000001;
      v21 = v4 & 0xFFFFFFFFFFFFFF8;
      v22 = v4;
      v20 = v4 + 32;
      v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (1)
      {
        v8 = __OFSUB__(v5--, 1);
        if (v8)
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          swift_bridgeObjectRelease();
          return (uint64_t)v7;
        }
        if (v6)
        {
          v9 = MEMORY[0x1BCCE4630](v5, v22);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_36;
          if (v5 >= *(_QWORD *)(v21 + 16))
            goto LABEL_37;
          v9 = *(_QWORD *)(v20 + 8 * v5);
          swift_retain();
        }
        v25 = v9;
        a1(&v24, &v25);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return (uint64_t)v7;
        }
        swift_release();
        v10 = v24;
        v11 = *(_QWORD *)(v24 + 16);
        v4 = v7[2];
        v12 = v4 + v11;
        if (__OFADD__(v4, v11))
          goto LABEL_31;
        isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
        if ((_DWORD)isUniquelyReferenced_nonNull_native && v12 <= v7[3] >> 1)
        {
          if (!*(_QWORD *)(v10 + 16))
            goto LABEL_4;
        }
        else
        {
          if (v4 <= v12)
            v14 = v4 + v11;
          else
            v14 = v4;
          v7 = sub_1BB392468(isUniquelyReferenced_nonNull_native, v14, 1, v7);
          if (!*(_QWORD *)(v10 + 16))
          {
LABEL_4:
            if (v11)
              goto LABEL_32;
            goto LABEL_5;
          }
        }
        v15 = v7[2];
        if ((v7[3] >> 1) - v15 < v11)
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        v16 = (unint64_t)&v7[v15 + 4];
        if (v10 + 32 < v16 + 8 * v11 && v16 < v10 + 32 + 8 * v11)
        {
          result = sub_1BB873F84();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v11)
        {
          v17 = v7[2];
          v8 = __OFADD__(v17, v11);
          v18 = v17 + v11;
          if (v8)
            goto LABEL_35;
          v7[2] = v18;
        }
LABEL_5:
        swift_bridgeObjectRelease();
        if (!v5)
          goto LABEL_33;
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA792088(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t result;
  _QWORD v30[8];
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v6 = a1;
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_20:
    MEMORY[0x1E0C80A78](a1);
    v30[2] = v3;
    v30[3] = v9;
    *(double *)&v30[4] = a2;
    *(double *)&v30[5] = a3;
    v28 = sub_1BA7922F0((void (*)(_QWORD *__return_ptr, _QWORD))sub_1BA792464, (uint64_t)v30, v6);
    swift_bridgeObjectRelease();
    return (uint64_t)v28;
  }
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v31 = v7;
  v32 = v6;
  while (1)
  {
    v11 = *(_QWORD *)(v6 + 8 * v8 + 32);
    if (((v11 >> 59) & 0x1E | (v11 >> 2) & 1) != 8)
      goto LABEL_5;
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    v14 = *(_QWORD *)(v12 + 48);
    v13 = *(_QWORD *)(v12 + 56);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v33 = v9;
    v17 = sub_1BA6E35A8(v14, v13);
    v18 = v9[2];
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
      break;
    v21 = v16;
    if (v9[3] >= v20)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v9 = v33;
        if ((v16 & 1) == 0)
          goto LABEL_14;
      }
      else
      {
        sub_1BB4C7124();
        v9 = v33;
        if ((v21 & 1) == 0)
          goto LABEL_14;
      }
    }
    else
    {
      sub_1BB4B5D54(v20, isUniquelyReferenced_nonNull_native);
      v22 = sub_1BA6E35A8(v14, v13);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_23;
      v17 = v22;
      v9 = v33;
      if ((v21 & 1) == 0)
      {
LABEL_14:
        v9[(v17 >> 6) + 8] |= 1 << v17;
        v24 = (uint64_t *)(v9[6] + 16 * v17);
        *v24 = v14;
        v24[1] = v13;
        *(_QWORD *)(v9[7] + 8 * v17) = v12;
        v25 = v9[2];
        v26 = __OFADD__(v25, 1);
        v27 = v25 + 1;
        if (v26)
          goto LABEL_22;
        v9[2] = v27;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
    v10 = v9[7];
    swift_release();
    *(_QWORD *)(v10 + 8 * v17) = v12;
LABEL_4:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v31;
    v6 = v32;
LABEL_5:
    if (v7 == ++v8)
    {
      a1 = swift_bridgeObjectRelease();
      v3 = v30[7];
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

_QWORD *sub_1BA7922F0(void (*a1)(_QWORD *__return_ptr, _QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void (*v13)(_QWORD *__return_ptr, _QWORD);
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v13 = a1;
  do
  {
    v15 = *(_QWORD *)(a3 + 8 * v7 + 32);
    swift_retain();
    a1(&v14, &v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v8;
    }
    swift_release();
    v9 = v14;
    if ((~v14 & 0xF000000000000007) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BB391DBC(0, v8[2] + 1, 1, v8);
      v11 = v8[2];
      v10 = v8[3];
      if (v11 >= v10 >> 1)
        v8 = sub_1BB391DBC((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
      v8[2] = v11 + 1;
      v8[v11 + 4] = v9;
      a1 = v13;
    }
    ++v7;
  }
  while (v4 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BA792464@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA70C72C(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), a2, *(double *)(v2 + 32), *(double *)(v2 + 40));
}

uint64_t sub_1BA792480@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA7924AC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(unsigned __int8 *)(v2 + 56), a2, *(double *)(v2 + 64), *(double *)(v2 + 72), *(double *)(v2 + 80), *(double *)(v2 + 88));
}

uint64_t sub_1BA7924AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, _QWORD *a8@<X8>, double a9@<D0>, double a10@<D1>, double a11@<D2>, double a12@<D3>)
{
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t result;
  _QWORD v35[9];
  char v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  int v42;
  _QWORD *v43;
  _BYTE v44[16];
  uint64_t v45;
  _BYTE v46[24];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a4;
  v22 = *a1;
  v23 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  v24 = *v23;
  v45 = a2;
  swift_bridgeObjectRetain();
  v25 = sub_1BA792680((uint64_t (*)(_QWORD))sub_1BA7928FC, (uint64_t)v44, v24);
  if (*(_QWORD *)(v25 + 16))
  {
    v43 = a8;
    v26 = type metadata accessor for FormatOptionConverter();
    sub_1BA4C010C(a3 + 120, (uint64_t)v46);
    v42 = a7;
    v41 = a6;
    v27 = v47;
    v28 = v48;
    v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v46, v47);
    v30 = swift_retain();
    v31 = sub_1BB250888(v30, v29, v26, v27, v28);
    v32 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    MEMORY[0x1E0C80A78](v32);
    v35[2] = v49;
    v35[3] = v22;
    v35[4] = a3;
    v35[5] = a5;
    v35[6] = v31;
    v35[7] = v41;
    v35[8] = a2;
    v36 = v42;
    v37 = a9;
    v38 = a10;
    v39 = a11;
    v40 = a12;
    v33 = sub_1BA792A94((void (*)(_QWORD *__return_ptr, _QWORD))sub_1BA792C1C, (uint64_t)v35, v25);
    swift_bridgeObjectRelease();
    a8 = v43;
    result = swift_release();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *a8 = v33;
  return result;
}

uint64_t sub_1BA792680(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA792884(0);
  v25 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v24 = (uint64_t)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - v10;
  v12 = MEMORY[0x1E0DEE9D8];
  v26 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    v22 = a2;
    v23 = a3;
    v21 = a1;
    while (v13 <= *(_QWORD *)(a3 + 16))
    {
      --v13;
      v15 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      v12 = *(_QWORD *)(v25 + 72);
      sub_1BA792A34(a3 + v15 + v12 * v13, (uint64_t)v11);
      v16 = a1(v11);
      if (v3)
      {
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA792884);
        swift_release();
        swift_bridgeObjectRelease();
        return v12;
      }
      if ((v16 & 1) != 0)
      {
        sub_1BA5193C4((uint64_t)v11, v24, (uint64_t (*)(_QWORD))sub_1BA792884);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BA792A78(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v26;
        v18 = *(_QWORD *)(v26 + 16);
        v17 = *(_QWORD *)(v26 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BA792A78(v17 > 1, v18 + 1, 1);
          v14 = v26;
        }
        *(_QWORD *)(v14 + 16) = v18 + 1;
        sub_1BA5193C4(v24, v14 + v15 + v18 * v12, (uint64_t (*)(_QWORD))sub_1BA792884);
        a3 = v23;
        a1 = v21;
        if (!v13)
          goto LABEL_16;
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA792884);
        if (!v13)
          goto LABEL_16;
      }
    }
    __break(1u);
LABEL_16:
    v12 = v26;
  }
  swift_bridgeObjectRelease();
  return v12;
}

void sub_1BA792884(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B3740)
  {
    v2 = sub_1BA89682C();
    v4 = type metadata accessor for FormatObject(a1, (uint64_t)&type metadata for FormatDecoration, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B3740);
  }
}

uint64_t type metadata accessor for FormatOptionConverter()
{
  return objc_opt_self();
}

BOOL sub_1BA7928FC(uint64_t a1)
{
  return sub_1BA792918(a1);
}

BOOL sub_1BA792918(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v1 = *(_QWORD *)(a1 + 56);
  swift_bridgeObjectRetain();
  v2 = sub_1BB86D63C();
  v3 = sub_1BA79296C(v2, v1);
  swift_bridgeObjectRelease();
  return v3;
}

BOOL sub_1BA79296C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = sub_1BB8745C0();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1BA792A34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA792884(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA792A78(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC8438C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

_QWORD *sub_1BA792A94(void (*a1)(_QWORD *__return_ptr, _QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void (*v16)(_QWORD *__return_ptr, _QWORD);
  uint64_t v17;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v10 = *(_QWORD *)(v8 + 72);
  swift_bridgeObjectRetain();
  v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v16 = a1;
  do
  {
    a1(&v17, v9);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11;
    }
    v12 = v17;
    if ((~v17 & 0xF000000000000007) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1BB392468(0, v11[2] + 1, 1, v11);
      v14 = v11[2];
      v13 = v11[3];
      if (v14 >= v13 >> 1)
        v11 = sub_1BB392468((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
      v11[2] = v14 + 1;
      v11[v14 + 4] = v12;
      a1 = v16;
    }
    v9 += v10;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BA792C1C@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA7704F0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(double *)(v2 + 80), *(_BYTE *)(v2 + 72));
}

void sub_1BA792C58(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  char *v5[2];

  v2 = *(_QWORD *)(sub_1BB86EB84() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BA792CD8(v3);
  v4 = (char *)v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1BA792D00(v5);
  *a1 = v3;
}

uint64_t sub_1BA792CD8(_QWORD *a1)
{
  return sub_1BA792CEC(0, a1[2], 0, a1);
}

uint64_t sub_1BA792CEC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BAC7B9B8(a1, a2, a3, a4, sub_1BA7C32A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB4DC8]);
}

void sub_1BA792D00(char **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char **v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  char *v65;
  void (*v66)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  char *v138;
  char *v139;
  uint64_t v140;
  char **v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;

  v3 = sub_1BB86EB84();
  v145 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v131 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v142 = (char *)&v127 - v6;
  MEMORY[0x1E0C80A78](v7);
  v139 = (char *)&v127 - v8;
  MEMORY[0x1E0C80A78](v9);
  v138 = (char *)&v127 - v10;
  v11 = (uint64_t)a1[1];
  v12 = sub_1BB8741F4();
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_141;
    if (v11)
      sub_1BA793778(0, v11, 1, a1);
    return;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_149;
  v141 = a1;
  v128 = v12;
  v134 = v1;
  if (v11 < 2)
  {
    v17 = (char *)MEMORY[0x1E0DEE9D8];
    v133 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    v127 = MEMORY[0x1E0DEE9D8];
    if (v11 != 1)
    {
      v19 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_107:
      if (v19 >= 2)
      {
        v120 = *v141;
        do
        {
          v121 = v19 - 2;
          if (v19 < 2)
            goto LABEL_136;
          if (!v120)
            goto LABEL_148;
          v122 = *(_QWORD *)&v17[16 * v121 + 32];
          v123 = *(_QWORD *)&v17[16 * v19 + 24];
          v124 = v134;
          sub_1BB57606C((unint64_t)&v120[*(_QWORD *)(v145 + 72) * v122], (unint64_t)&v120[*(_QWORD *)(v145 + 72) * *(_QWORD *)&v17[16 * v19 + 16]], (unint64_t)&v120[*(_QWORD *)(v145 + 72) * v123], v133);
          v134 = v124;
          if (v124)
            break;
          if (v123 < v122)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v17 = sub_1BACAB464((uint64_t)v17);
          if (v121 >= *((_QWORD *)v17 + 2))
            goto LABEL_138;
          v125 = &v17[16 * v121 + 32];
          *(_QWORD *)v125 = v122;
          *((_QWORD *)v125 + 1) = v123;
          v126 = *((_QWORD *)v17 + 2);
          if (v19 > v126)
            goto LABEL_139;
          memmove(&v17[16 * v19 + 16], &v17[16 * v19 + 32], 16 * (v126 - v19));
          *((_QWORD *)v17 + 2) = v126 - 1;
          v19 = v126 - 1;
        }
        while (v126 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v127 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = sub_1BB872E74();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v145 + 80);
    v127 = v15;
    v133 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v17 = (char *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v20 = v18;
    v21 = v18 + 1;
    v132 = v18;
    if (v18 + 1 >= v11)
    {
      v32 = v18 + 1;
      v41 = v134;
      goto LABEL_58;
    }
    v22 = *v141;
    v143 = v11;
    v23 = v145;
    v24 = *(_QWORD *)(v145 + 72);
    v25 = *(void (**)(_QWORD, _QWORD, _QWORD))(v145 + 16);
    v26 = v138;
    v25(v138, &v22[v24 * v21], v3);
    v27 = &v22[v24 * v20];
    v28 = v139;
    v25(v139, v27, v3);
    v140 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
    LODWORD(v137) = sub_1BB872910();
    v29 = *(void (**)(_QWORD, _QWORD))(v23 + 8);
    v30 = v28;
    v20 = v132;
    v29(v30, v3);
    v29(v26, v3);
    v31 = v22;
    v32 = v20 + 2;
    v135 = v31;
    v144 = v24;
    if (v20 + 2 >= v143)
    {
      v41 = v134;
      v40 = v143;
      v39 = v24;
      if ((v137 & 1) == 0)
        break;
    }
    else
    {
      v129 = v17;
      v136 = v24 * v21;
      v33 = v31;
      v34 = v24 * v32;
      do
      {
        v35 = v32;
        v36 = v138;
        v25(v138, &v33[v34], v3);
        v37 = v139;
        v25(v139, &v33[v136], v3);
        v38 = sub_1BB872910();
        v29(v37, v3);
        v29(v36, v3);
        if (((v137 ^ v38) & 1) != 0)
        {
          v41 = v134;
          v17 = v129;
          v32 = v35;
          v20 = v132;
          v40 = v143;
          v39 = v144;
          if ((v137 & 1) == 0)
            goto LABEL_38;
          goto LABEL_26;
        }
        v32 = v35 + 1;
        v39 = v144;
        v33 += v144;
      }
      while (v143 != v35 + 1);
      v40 = v143;
      v32 = v143;
      v41 = v134;
      v17 = v129;
      v20 = v132;
      if ((v137 & 1) == 0)
        break;
    }
LABEL_26:
    if (v32 < v20)
      goto LABEL_142;
    if (v20 >= v32)
      break;
    v129 = v17;
    v42 = 0;
    v43 = v39 * (v32 - 1);
    v44 = v32 * v39;
    v45 = v20;
    v46 = v20 * v39;
    v47 = v141;
    v140 = v32;
    do
    {
      if (v45 != v32 + v42 - 1)
      {
        if (!v135)
          goto LABEL_147;
        v48 = v41;
        v49 = &v135[v46];
        v50 = &v135[v43];
        v137 = *(char **)(v145 + 32);
        ((void (*)(char *, char *, uint64_t))v137)(v131, &v135[v46], v3);
        if (v46 < v43 || v49 >= &v135[v44])
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v46 != v43)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(char *, char *, uint64_t))v137)(v50, v131, v3);
        v41 = v48;
        v32 = v140;
        v47 = v141;
        v39 = v144;
      }
      ++v45;
      --v42;
      v43 -= v39;
      v44 -= v39;
      v46 += v39;
    }
    while (v45 < v32 + v42);
    v17 = v129;
    v20 = v132;
    v40 = v143;
    if (v32 < v143)
      goto LABEL_41;
LABEL_58:
    if (v32 < v20)
      goto LABEL_135;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v134 = v41;
    v140 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v17 = sub_1BACAA368(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v69 = *((_QWORD *)v17 + 2);
    v68 = *((_QWORD *)v17 + 3);
    v19 = v69 + 1;
    if (v69 >= v68 >> 1)
      v17 = sub_1BACAA368((char *)(v68 > 1), v69 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v19;
    v70 = v17 + 32;
    v71 = &v17[16 * v69 + 32];
    v72 = v140;
    *(_QWORD *)v71 = v20;
    *((_QWORD *)v71 + 1) = v72;
    if (v69)
    {
      while (1)
      {
        v73 = v19 - 1;
        if (v19 >= 4)
        {
          v78 = &v70[16 * v19];
          v79 = *((_QWORD *)v78 - 8);
          v80 = *((_QWORD *)v78 - 7);
          v84 = __OFSUB__(v80, v79);
          v81 = v80 - v79;
          if (v84)
            goto LABEL_124;
          v83 = *((_QWORD *)v78 - 6);
          v82 = *((_QWORD *)v78 - 5);
          v84 = __OFSUB__(v82, v83);
          v76 = v82 - v83;
          v77 = v84;
          if (v84)
            goto LABEL_125;
          v85 = v19 - 2;
          v86 = &v70[16 * v19 - 32];
          v88 = *(_QWORD *)v86;
          v87 = *((_QWORD *)v86 + 1);
          v84 = __OFSUB__(v87, v88);
          v89 = v87 - v88;
          if (v84)
            goto LABEL_127;
          v84 = __OFADD__(v76, v89);
          v90 = v76 + v89;
          if (v84)
            goto LABEL_130;
          if (v90 >= v81)
          {
            v108 = &v70[16 * v73];
            v110 = *(_QWORD *)v108;
            v109 = *((_QWORD *)v108 + 1);
            v84 = __OFSUB__(v109, v110);
            v111 = v109 - v110;
            if (v84)
              goto LABEL_134;
            v101 = v76 < v111;
            goto LABEL_95;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v102 = *((_QWORD *)v17 + 4);
            v103 = *((_QWORD *)v17 + 5);
            v84 = __OFSUB__(v103, v102);
            v95 = v103 - v102;
            v96 = v84;
            goto LABEL_89;
          }
          v75 = *((_QWORD *)v17 + 4);
          v74 = *((_QWORD *)v17 + 5);
          v84 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          v77 = v84;
        }
        if ((v77 & 1) != 0)
          goto LABEL_126;
        v85 = v19 - 2;
        v91 = &v70[16 * v19 - 32];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v94 = __OFSUB__(v92, v93);
        v95 = v92 - v93;
        v96 = v94;
        if (v94)
          goto LABEL_129;
        v97 = &v70[16 * v73];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v84 = __OFSUB__(v98, v99);
        v100 = v98 - v99;
        if (v84)
          goto LABEL_132;
        if (__OFADD__(v95, v100))
          goto LABEL_133;
        if (v95 + v100 >= v76)
        {
          v101 = v76 < v100;
LABEL_95:
          if (v101)
            v73 = v85;
          goto LABEL_97;
        }
LABEL_89:
        if ((v96 & 1) != 0)
          goto LABEL_128;
        v104 = &v70[16 * v73];
        v106 = *(_QWORD *)v104;
        v105 = *((_QWORD *)v104 + 1);
        v84 = __OFSUB__(v105, v106);
        v107 = v105 - v106;
        if (v84)
          goto LABEL_131;
        if (v107 < v95)
          goto LABEL_14;
LABEL_97:
        v112 = v73 - 1;
        if (v73 - 1 >= v19)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v141)
          goto LABEL_146;
        v113 = v17;
        v114 = &v70[16 * v112];
        v115 = *(_QWORD *)v114;
        v116 = &v70[16 * v73];
        v117 = *((_QWORD *)v116 + 1);
        v118 = v134;
        sub_1BB57606C((unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * *(_QWORD *)v114], (unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * *(_QWORD *)v116], (unint64_t)&(*v141)[*(_QWORD *)(v145 + 72) * v117], v133);
        v134 = v118;
        if (v118)
          goto LABEL_118;
        if (v117 < v115)
          goto LABEL_121;
        if (v73 > *((_QWORD *)v113 + 2))
          goto LABEL_122;
        *(_QWORD *)v114 = v115;
        *(_QWORD *)&v70[16 * v112 + 8] = v117;
        v119 = *((_QWORD *)v113 + 2);
        if (v73 >= v119)
          goto LABEL_123;
        v17 = v113;
        v19 = v119 - 1;
        memmove(&v70[16 * v73], v116 + 16, 16 * (v119 - 1 - v73));
        *((_QWORD *)v113 + 2) = v119 - 1;
        if (v119 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v11 = (uint64_t)v141[1];
    v18 = v140;
    if (v140 >= v11)
      goto LABEL_107;
  }
LABEL_38:
  v47 = v141;
  if (v32 >= v40)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v32, v20))
    goto LABEL_140;
  if (v32 - v20 >= v128)
    goto LABEL_58;
  if (__OFADD__(v20, v128))
    goto LABEL_143;
  if (v20 + v128 >= v40)
    v51 = v40;
  else
    v51 = v20 + v128;
  if (v51 >= v20)
  {
    if (v32 != v51)
    {
      v129 = v17;
      v130 = v51;
      v52 = *(_QWORD *)(v145 + 72);
      v53 = *(char **)(v145 + 16);
      v134 = v41;
      v135 = v53;
      v54 = v52 * (v32 - 1);
      v136 = v52;
      v144 = v32 * v52;
      do
      {
        v56 = 0;
        v140 = v32;
        v137 = (char *)v54;
        while (1)
        {
          v143 = v20;
          v57 = *v47;
          v58 = v138;
          v59 = v47;
          v60 = (void (*)(_QWORD, _QWORD, _QWORD))v135;
          ((void (*)(char *, char *, uint64_t))v135)(v138, &(*v47)[v144 + v56], v3);
          v61 = &v57[v54 + v56];
          v62 = v139;
          v60(v139, v61, v3);
          sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
          LOBYTE(v57) = sub_1BB872910();
          v63 = *(void (**)(_QWORD, _QWORD))(v145 + 8);
          v63(v62, v3);
          v63(v58, v3);
          if ((v57 & 1) == 0)
            break;
          v64 = *v59;
          if (!*v59)
            goto LABEL_145;
          v54 = (uint64_t)v137;
          v65 = &v137[(_QWORD)v64 + v56];
          v66 = *(void (**)(_QWORD, _QWORD, _QWORD))(v145 + 32);
          v66(v142, &v64[v144 + v56], v3);
          swift_arrayInitWithTakeFrontToBack();
          v66(v65, v142, v3);
          v56 -= v136;
          v20 = v143 + 1;
          v55 = v140;
          v47 = v141;
          if (v140 == v143 + 1)
            goto LABEL_51;
        }
        v55 = v140;
        v47 = v59;
        v54 = (uint64_t)v137;
LABEL_51:
        v32 = v55 + 1;
        v54 += v136;
        v144 += v136;
        v20 = v132;
      }
      while (v32 != v130);
      v32 = v130;
      v41 = v134;
      v17 = v129;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  sub_1BB873EA0();
  __break(1u);
}

void sub_1BA793778(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;

  v28 = a1;
  v7 = sub_1BB86EB84();
  v36 = *(_QWORD **)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v32 = (char *)&v26 - v10;
  v12.n128_f64[0] = MEMORY[0x1E0C80A78](v11);
  v31 = (char *)&v26 - v13;
  v34 = a3;
  v27 = a2;
  if (a3 != a2)
  {
    v14 = v36[9];
    v29 = (void (*)(char *, uint64_t, uint64_t))v36[2];
    v30 = a4;
    v38 = v14 * (v34 - 1);
    v33 = v14;
    v37 = v14 * v34;
LABEL_5:
    v15 = 0;
    v16 = v28;
    while (1)
    {
      v17 = *a4;
      v18 = v31;
      v19 = v29;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v29)(v31, v37 + v15 + *a4, v7, v12);
      v20 = v32;
      v19(v32, v38 + v15 + v17, v7);
      sub_1BA4A2870((unint64_t *)&qword_1ED3B0910, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
      LOBYTE(v17) = sub_1BB872910();
      v21 = (void (*)(char *, uint64_t))v36[1];
      v22 = v20;
      a4 = v30;
      v21(v22, v7);
      v21(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v38 += v33;
        v37 += v33;
        if (++v34 == v27)
          return;
        goto LABEL_5;
      }
      v23 = *a4;
      if (!*a4)
        break;
      v24 = (char *)(v23 + v38 + v15);
      v25 = (void (*)(char *, uint64_t, uint64_t))v36[4];
      v25(v35, v23 + v37 + v15, v7);
      swift_arrayInitWithTakeFrontToBack();
      v25(v24, (uint64_t)v35, v7);
      v15 -= v33;
      if (v34 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BA7939F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void (**v8)(char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (void (**)(char *, uint64_t))((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - v10;
  sub_1BA793CE8();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)&v14[*(int *)(v15 + 48)];
  sub_1BA6E70E4(a1, (uint64_t)v14);
  sub_1BA6E70E4(a2, v16);
  v17 = sub_1BB86E710();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  if (v19((uint64_t)v14, 1, v17) == 1)
  {
    if (v19(v16, 1, v17) != 1)
    {
      sub_1BA6E70E4(a2, (uint64_t)a3);
LABEL_9:
      sub_1BA6867EC(v16);
      return sub_1BA6867EC((uint64_t)v14);
    }
  }
  else
  {
    sub_1BA6E70E4((uint64_t)v14, (uint64_t)v11);
    if (v19(v16, 1, v17) == 1)
    {
      sub_1BA6E70E4(a1, (uint64_t)a3);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
      goto LABEL_9;
    }
    sub_1BA6E70E4(v16, (uint64_t)v8);
    v20 = *(uint64_t (**)(char *, uint64_t))(v18 + 88);
    v21 = v20(v11, v17);
    if ((_DWORD)v21 == *MEMORY[0x1E0DB4898])
    {
      v22 = v21;
      v29 = *(void (**)(char *, uint64_t))(v18 + 96);
      v29(v11, v17);
      v30 = *(_QWORD *)(*(_QWORD *)v11 + 16);
      if (v20((char *)v8, v17) == (_DWORD)v22)
      {
        v29((char *)v8, v17);
        v29 = *v8;
        v23 = swift_allocObject();
        v24 = v30;
        swift_bridgeObjectRetain();
        v25 = swift_bridgeObjectRetain();
        *(_QWORD *)(v23 + 16) = sub_1BA9B61B4(v25, v24);
        *a3 = v23;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 104))(a3, v22, v17);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(a3, 0, 1, v17);
        swift_release();
        swift_release();
        goto LABEL_9;
      }
      swift_release();
      (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v8, v17);
    }
    else
    {
      v27 = *(void (**)(char *, uint64_t))(v18 + 8);
      v27((char *)v8, v17);
      v27(v11, v17);
    }
  }
  sub_1BA6E70E4(a1, (uint64_t)a3);
  return sub_1BA7AAA44((uint64_t)v14);
}

void sub_1BA793CE8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C47F0)
  {
    sub_1BA4A3FB4(255, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C47F0);
  }
}

uint64_t sub_1BA793D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA75D1C8(v1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA75BF9C();
    v6 = &v4[*(int *)(v5 + 48)];
    sub_1BB86DD80();
    swift_release();
    v7 = v11;
    sub_1BA75C00C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    swift_release();
    sub_1BB86DD80();
    swift_release();
    return v11;
  }
  return v7;
}

uint64_t sub_1BA793E5C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  __int128 v81;
  char v82;
  char v83;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v71 - v7;
  MEMORY[0x1E0C80A78](v8);
  v74 = (char *)&v71 - v9;
  MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v71 - v11;
  MEMORY[0x1E0C80A78](v12);
  v76 = (char *)&v71 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)&v71 - v15;
  MEMORY[0x1E0C80A78](v16);
  v78 = (char *)&v71 - v17;
  MEMORY[0x1E0C80A78](v18);
  v79 = (char *)&v71 - v19;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v71 - v21;
  sub_1BAEE6148(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BA50CAA8(0, &qword_1ED3CE130, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  v29 = v28;
  v30 = sub_1BAEE6238();
  v31 = sub_1BA4A2870(&qword_1ED3D13D0, (uint64_t (*)(uint64_t))sub_1BAEE6238, (uint64_t)&unk_1BB8FFC6C);
  v71 = v29;
  sub_1BA6EC1EC(v29, v32, v26, v29, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v31, (uint64_t)&off_1E734BD80);
  v33 = *v2;
  v34 = v2[1];
  v35 = v2;
  v36 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v22, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v80;
  sub_1BAD12E0C(v33, v34, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v42 = v35[2];
    v43 = v35[3];
    v44 = v38;
    v45 = (uint64_t)v79;
    v80 = v44;
    ((void (*)(char *))v39)(v79);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD12E0C(v42, v43, 1, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = v35[4];
    v48 = v35[5];
    v49 = v39;
    v50 = v25;
    v51 = (uint64_t)v78;
    v52 = v49;
    v49(v78, v80, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD12E0C(v47, v48, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = v35[6];
    v54 = v35[7];
    v55 = (char *)v40;
    v56 = (uint64_t)v77;
    v52(v77, v80, v37);
    v79 = v55;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD12E0C(v53, v54, 3, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    v25 = v50;
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v53) = *((_BYTE *)v35 + 64);
    v57 = (uint64_t)v76;
    v52(v76, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD12F64(v53, 4, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v75;
    v52(v75, v80, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD4432C(v35[9], v35[10], 5, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    v59 = v52;
    v80 = 0;
    v60 = *((unsigned __int8 *)v35 + 88);
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v61 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
    v62 = (uint64_t)v74;
    v52(v74, v61, v37);
    swift_storeEnumTagMultiPayload();
    if (v60)
    {
      v63 = v80;
      v64 = sub_1BAE46DD4(v62, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if (v63)
      {
LABEL_11:
        sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
        return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE6148);
      }
      v80 = 0;
      if ((v64 & 1) != 0)
      {
        v81 = xmmword_1BB8D2DA0;
        v82 = 0;
        v83 = 1;
        sub_1BAEE61C0();
        sub_1BA4A2870(&qword_1ED3AF0D8, (uint64_t (*)(uint64_t))sub_1BAEE61C0, MEMORY[0x1E0DED188]);
        v65 = v80;
        sub_1BB874464();
        if (v65)
          goto LABEL_11;
        v80 = 0;
      }
    }
    sub_1BA4A2E80(v62, type metadata accessor for FormatVersionRequirement);
    v66 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v66 != -1)
      swift_once();
    v67 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476BD8);
    v68 = (uint64_t)v72;
    v59(v72, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v68, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v69 = (uint64_t)v35 + *(int *)(v71 + 64);
    v70 = (uint64_t)v73;
    v59(v73, v67, v37);
    swift_storeEnumTagMultiPayload();
    sub_1BAD44534(v69, 8, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAEE6148);
}

uint64_t sub_1BA794698@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t result;
  _QWORD *v37;
  _QWORD v38[2];
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;

  v5 = type metadata accessor for FormatSlotDefinition();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v45 = (_QWORD *)((char *)v38 - v9);
  v10 = *v2;
  v11 = (_QWORD *)v2[1];
  v42 = *(_QWORD *)(a1 + 16);
  if (v42)
  {
    v39 = a2;
    v48 = v10;
    v41 = a1 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38[1] = a1;
    swift_bridgeObjectRetain();
    v12 = 0;
    while (1)
    {
      v13 = *(_QWORD *)(v41 + 16 * v12);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1BA7949B4(v13);
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
        break;
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v12 == v42)
      {
        result = swift_bridgeObjectRelease();
        v37 = v39;
        *v39 = v48;
        v37[1] = v11;
        return result;
      }
    }
    v43 = v13;
    v44 = v12;
    v15 = v13 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
    v46 = *(_QWORD *)(v40 + 72);
    while (1)
    {
      v18 = v45;
      sub_1BA7AE5A4(v15, (uint64_t)v45);
      v20 = *v18;
      v19 = v18[1];
      v21 = (uint64_t)v7;
      sub_1BA7AE86C((uint64_t)v18, (uint64_t)v7);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v47 = v11;
      v24 = sub_1BA6E35A8(v20, v19);
      v25 = v11[2];
      v26 = (v23 & 1) == 0;
      v27 = v25 + v26;
      if (__OFADD__(v25, v26))
        break;
      v28 = v23;
      if (v11[3] >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C2380();
      }
      else
      {
        sub_1BB4AEAC4(v27, isUniquelyReferenced_nonNull_native);
        v29 = sub_1BA6E35A8(v20, v19);
        if ((v28 & 1) != (v30 & 1))
          goto LABEL_23;
        v24 = v29;
      }
      v7 = (char *)v21;
      v11 = v47;
      if ((v28 & 1) != 0)
      {
        v16 = v47[7] + v24 * v46;
        v17 = v46;
        sub_1BAB0EA00(v21, v16);
      }
      else
      {
        v47[(v24 >> 6) + 8] |= 1 << v24;
        v31 = (uint64_t *)(v11[6] + 16 * v24);
        *v31 = v20;
        v31[1] = v19;
        v32 = v11[7] + v24 * v46;
        v17 = v46;
        sub_1BA7AE86C(v21, v32);
        v33 = v11[2];
        v34 = __OFADD__(v33, 1);
        v35 = v33 + 1;
        if (v34)
          goto LABEL_22;
        v11[2] = v35;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 += v17;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        v12 = v44;
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
    *a2 = v10;
    a2[1] = v11;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA7949B4(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA7AE73C, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1BA7949C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  _QWORD *v39;
  _QWORD v40[2];
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;

  sub_1BA7B873C(0);
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v40 - v9);
  v11 = *v2;
  v12 = (_QWORD *)v2[1];
  v44 = *(_QWORD *)(a1 + 16);
  if (v44)
  {
    v41 = a2;
    v50 = v11;
    v43 = a1 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40[1] = a1;
    swift_bridgeObjectRetain();
    v13 = 0;
    while (1)
    {
      v14 = *(_QWORD *)(v43 + 16 * v13);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1BA794CEC(v14);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
        break;
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v13 == v44)
      {
        result = swift_bridgeObjectRelease();
        v39 = v41;
        *v41 = v50;
        v39[1] = v12;
        return result;
      }
    }
    v45 = v14;
    v46 = v13;
    v16 = v14 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
    v47 = *(_QWORD *)(v42 + 72);
    while (1)
    {
      v48 = v15;
      sub_1BA551F50(v16, (uint64_t)v10);
      v20 = *v10;
      v19 = v10[1];
      v21 = (uint64_t)v10;
      v22 = (uint64_t)v10;
      v23 = v7;
      sub_1BA551F50(v22, (uint64_t)v7);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v49 = v12;
      v26 = sub_1BA6E35A8(v20, v19);
      v27 = v12[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        break;
      v30 = v25;
      if (v12[3] >= v29)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C23A4();
      }
      else
      {
        sub_1BB4AEAE8(v29, isUniquelyReferenced_nonNull_native);
        v31 = sub_1BA6E35A8(v20, v19);
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_23;
        v26 = v31;
      }
      v7 = v23;
      v12 = v49;
      v10 = (uint64_t *)v21;
      if ((v30 & 1) != 0)
      {
        v17 = v49[7] + v26 * v47;
        v18 = v47;
        sub_1BB1EBBA0((uint64_t)v7, v17);
      }
      else
      {
        v49[(v26 >> 6) + 8] |= 1 << v26;
        v33 = (uint64_t *)(v12[6] + 16 * v26);
        *v33 = v20;
        v33[1] = v19;
        v34 = v12[7] + v26 * v47;
        v18 = v47;
        sub_1BA551FF0((uint64_t)v7, v34);
        v35 = v12[2];
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (v36)
          goto LABEL_22;
        v12[2] = v37;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7B8700(v21);
      v16 += v18;
      v15 = v48 - 1;
      if (v48 == 1)
      {
        swift_bridgeObjectRelease();
        v13 = v46;
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
    *a2 = v11;
    a2[1] = v12;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA794CEC(uint64_t a1)
{
  return sub_1BB3841C8(a1, (uint64_t (*)(void))sub_1BA7911EC, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
}

uint64_t sub_1BA794D10@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;

  sub_1BA7916B4(0);
  v47 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v43 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  v8 = (_QWORD *)v2[1];
  v39 = *(_QWORD *)(a1 + 16);
  if (!v39)
  {
    *(_QWORD *)a2 = v7;
    *(_QWORD *)(a2 + 8) = v8;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  v53 = v7;
  v40 = a1 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = a1;
  swift_bridgeObjectRetain();
  v9 = 0;
  v42 = a2;
  while (1)
  {
    v41 = v9;
    v10 = *(_QWORD *)(v40 + 16 * v9);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1BA7950C8(v10);
    swift_bridgeObjectRelease();
    v46 = *(_QWORD *)(v10 + 16);
    if (v46)
      break;
LABEL_3:
    swift_bridgeObjectRelease();
    v9 = v41 + 1;
    if (v41 + 1 == v39)
      goto LABEL_26;
  }
  v11 = 0;
  v12 = *(unsigned __int8 *)(v47 + 80);
  v44 = v10;
  v45 = v10 + ((v12 + 32) & ~v12);
  while (1)
  {
    if (v11 >= *(_QWORD *)(v10 + 16))
    {
      __break(1u);
LABEL_28:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v13 = *(_QWORD *)(v47 + 72);
    v49 = v11;
    v14 = v45 + v13 * v11;
    v15 = v43;
    sub_1BA6019CC(v14, v43);
    v16 = *(_QWORD *)(v15 + 48);
    swift_bridgeObjectRetain();
    sub_1BA601990(v15);
    v17 = *(_QWORD *)(v16 + 16);
    v48 = v16;
    if (v17)
      break;
LABEL_6:
    v11 = v49 + 1;
    swift_bridgeObjectRelease();
    a2 = v42;
    v10 = v44;
    if (v11 == v46)
      goto LABEL_3;
  }
  v18 = (uint64_t *)(v16 + 64);
  while (1)
  {
    v50 = v17;
    v20 = *(v18 - 4);
    v21 = *(v18 - 3);
    v22 = *(v18 - 1);
    v51 = *(v18 - 2);
    v23 = *v18;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52 = v8;
    a2 = sub_1BA6E35A8(v20, v21);
    v26 = v8[2];
    v27 = (v25 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
      break;
    v29 = v25;
    if (v8[3] >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v8 = v52;
        if ((v25 & 1) != 0)
          goto LABEL_10;
      }
      else
      {
        sub_1BB4C2674();
        v8 = v52;
        if ((v29 & 1) != 0)
          goto LABEL_10;
      }
    }
    else
    {
      sub_1BA6015EC(v28, isUniquelyReferenced_nonNull_native);
      v30 = sub_1BA6E35A8(v20, v21);
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_28;
      a2 = v30;
      v8 = v52;
      if ((v29 & 1) != 0)
      {
LABEL_10:
        v19 = (uint64_t *)(v8[7] + 40 * a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *v19 = v20;
        v19[1] = v21;
        v19[2] = v51;
        v19[3] = v22;
        v19[4] = v23;
        goto LABEL_11;
      }
    }
    v8[(a2 >> 6) + 8] |= 1 << a2;
    v32 = (uint64_t *)(v8[6] + 16 * a2);
    *v32 = v20;
    v32[1] = v21;
    v33 = (uint64_t *)(v8[7] + 40 * a2);
    *v33 = v20;
    v33[1] = v21;
    v33[2] = v51;
    v33[3] = v22;
    v33[4] = v23;
    v34 = v8[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
      goto LABEL_25;
    v8[2] = v36;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v18 += 5;
    v17 = v50 - 1;
    if (v50 == 1)
      goto LABEL_6;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v53;
  *(_QWORD *)(a2 + 8) = v8;
  return result;
}

uint64_t sub_1BA7950C8(uint64_t a1)
{
  return sub_1BB384028(a1, (uint64_t (*)(void))sub_1BA791450, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  unsigned __int8 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[2];
  uint64_t v72;
  char *v73;
  int v74;
  char *v75;
  int v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[56];
  uint64_t v97;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v73 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v75 = (char *)v71 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v77 = (char *)v71 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v83 = (char *)v71 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v84 = (char *)v71 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v85 = (char *)v71 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v90 = (char *)v71 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v92 = (char *)v71 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v71 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v71 - v23;
  sub_1BAEA12B8(0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(v1 + 8);
  v95 = *(_QWORD *)v1;
  v93 = *(_QWORD *)(v1 + 16);
  v91 = *(_QWORD *)(v1 + 24);
  v29 = *(_QWORD *)(v1 + 32);
  v86 = *(_QWORD *)(v1 + 40);
  v88 = *(_QWORD *)(v1 + 48);
  v89 = v29;
  v87 = *(unsigned __int8 *)(v1 + 56);
  sub_1BA6A09F0(v1 + 64, (uint64_t)v96, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v82 = *(_QWORD *)(v1 + 152);
  v81 = *(_QWORD *)(v1 + 160);
  v80 = *(unsigned __int8 *)(v1 + 168);
  v79 = *(_QWORD *)(v1 + 176);
  v78 = *(_QWORD *)(v1 + 184);
  v76 = *(unsigned __int8 *)(v1 + 192);
  v74 = *(unsigned __int8 *)(v1 + 193);
  v72 = *(_QWORD *)(v1 + 200);
  v30 = a1[3];
  v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  v32 = sub_1BAEA116C();
  v33 = sub_1BA4A2870(&qword_1ED3D12C0, (uint64_t (*)(uint64_t))sub_1BAEA116C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, v34, v30, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, v32, (uint64_t)&type metadata for FormatVersions.AzdenC, v31, (uint64_t)v27, v33, (uint64_t)&off_1E734BCC0);
  v35 = qword_1ED3C6D38;
  swift_bridgeObjectRetain();
  if (v35 != -1)
    swift_once();
  v36 = sub_1BB86EB84();
  v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476BA8);
  v38 = *(void (**)(char *))(*(_QWORD *)(v36 - 8) + 16);
  v94 = v37;
  v38(v24);
  v39 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v40 = v97;
  sub_1BAD0F090(v95, v28, 0, 0, 0, (uint64_t)v24, (uint64_t)sub_1BA90CF04, 0);
  if (v40)
  {
    sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41 = v94;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v22, v94, v36);
    swift_storeEnumTagMultiPayload();
    v42 = swift_bridgeObjectRetain();
    sub_1BAD3BE50(v42, 1, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v43 = (uint64_t)v92;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v92, v41, v36);
    swift_storeEnumTagMultiPayload();
    v44 = v91;
    sub_1BA6E6C68(v91);
    sub_1BAD3C070(v44, 2, 0, 0, v43, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v44);
    v46 = (uint64_t)v90;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v90, v41, v36);
    swift_storeEnumTagMultiPayload();
    v47 = swift_bridgeObjectRetain();
    sub_1BAD3C288(v47, 3, 0, 0, v46, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v48 = (uint64_t)v85;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v85, v41, v36);
    swift_storeEnumTagMultiPayload();
    v71[1] = v39;
    v49 = v86;
    v50 = v88;
    v51 = v87;
    sub_1BA6E6C54(v86, v88, v87);
    sub_1BAD3C4B8(v49, v50, v51, 4, 0, 0, v48, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v86, v88, v87);
    v52 = (uint64_t)v84;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v84, v41, v36);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD3C6EC((uint64_t)v96, 5, 0, 0, v52, (uint64_t)sub_1BA90CF04, 0);
    v53 = v27;
    sub_1BA4A2E80(v52, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v96, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v54 = (uint64_t)v83;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v83, v41, v36);
    swift_storeEnumTagMultiPayload();
    v55 = v82;
    v56 = v81;
    LOBYTE(v49) = v80;
    sub_1BA796C58(v82, v81, v80);
    sub_1BAD3C9D4(v55, v56, v49, 6, 0, 0, v54, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v54, type metadata accessor for FormatVersionRequirement);
    sub_1BA796C70(v55, v56, v49);
    sub_1BA6F3F88();
    v58 = (uint64_t)v77;
    v59 = &v77[*(int *)(v57 + 48)];
    v60 = &v77[*(int *)(v57 + 64)];
    ((void (*)(char *, uint64_t, uint64_t))v38)(v77, v94, v36);
    v61 = v76;
    sub_1BA796C58(v79, v78, v76);
    if (qword_1ED3C4170 != -1)
      swift_once();
    v62 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476998);
    ((void (*)(char *, uint64_t, uint64_t))v38)(v59, v62, v36);
    *(_QWORD *)v60 = 0;
    *((_QWORD *)v60 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    v63 = v79;
    v64 = v78;
    v27 = v53;
    sub_1BAD3C9D4(v79, v78, v61, 7, 0, 0, v58, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    sub_1BA796C70(v63, v64, v61);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v65 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476B78);
    v66 = (uint64_t)v75;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v75, v65, v36);
    swift_storeEnumTagMultiPayload();
    sub_1BAD3CC04(v74, 8, 0, 0, v66, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v66, type metadata accessor for FormatVersionRequirement);
    v67 = qword_1ED3C6D70;
    v68 = v72;
    swift_bridgeObjectRetain();
    if (v67 != -1)
      swift_once();
    v69 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED476C50);
    v70 = (uint64_t)v73;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v73, v69, v36);
    swift_storeEnumTagMultiPayload();
    sub_1BAD3CDCC(v68, 9, 0, 0, v70, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v70, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BAEA12B8);
}

uint64_t FormatLayeredMediaNodeStyle.Selector.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  int v68;
  __int16 v69;
  _BYTE v70[7];
  _BYTE v71[7];
  _BYTE v72[7];
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 v82;
  __int128 v83;
  char v84;
  uint64_t v85;

  v3 = v2;
  v85 = a2;
  sub_1BAEA10F4();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEA116C();
  sub_1BA4A2870(&qword_1ED3D12C0, (uint64_t (*)(uint64_t))sub_1BAEA116C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (!v2)
  {
    v10 = v85;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v11 = sub_1BB872874();
    v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
    swift_bridgeObjectRelease();
    v13 = v7;
    v14 = v6;
    v15 = v9;
    if ((v12 & 1) != 0)
    {
      v16 = sub_1BB8740EC();
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
        v18 = (_BYTE *)(v16 + 48);
        while (*v18 != 1)
        {
          v18 += 24;
          if (!--v17)
            goto LABEL_7;
        }
        v20 = *((_QWORD *)v18 - 2);
        v21 = *((_QWORD *)v18 - 1);
        swift_bridgeObjectRetain_n();
        v22 = swift_bridgeObjectRelease();
        v85 = v13;
        MEMORY[0x1E0C80A78](v22);
        sub_1BAEA11EC();
        sub_1BAEA1230();
        sub_1BAEA1274();
        swift_getKeyPath();
        swift_retain();
        v23 = sub_1BAE71220((uint64_t)&unk_1E7253148);
        swift_release_n();
        sub_1BA98D1F0();
        v3 = (void *)swift_allocError();
        *(_QWORD *)v24 = v20;
        *(_QWORD *)(v24 + 8) = v21;
        *(_QWORD *)(v24 + 16) = v23;
        *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
        swift_willThrow();
        sub_1BA69C828(v20, v21, 1);
        (*(void (**)(char *, uint64_t))(v85 + 8))(v9, v14);
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BA69C13C();
    v73 = 0uLL;
    LOBYTE(v74) = 0;
    sub_1BB8740D4();
    v67 = a1;
    v19 = v83;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    v73 = xmmword_1BB8A1A10;
    LOBYTE(v74) = 0;
    sub_1BA69C018();
    sub_1BB874068();
    v25 = v83;
    v73 = xmmword_1BB8D2D60;
    LOBYTE(v74) = 0;
    sub_1BA69A538();
    sub_1BB874068();
    v66 = v25;
    v26 = v83;
    sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v73 = xmmword_1BB8D2D70;
    LOBYTE(v74) = 0;
    sub_1BA69C0C4();
    sub_1BB874068();
    v65 = v26;
    v27 = v83;
    v83 = xmmword_1BB8D2D90;
    v84 = 0;
    sub_1BA69A4F4();
    sub_1BB874068();
    v64 = v27;
    v63 = *((_QWORD *)&v73 + 1);
    v28 = v73;
    LODWORD(v26) = v74;
    v83 = xmmword_1BB8D2D80;
    v84 = 0;
    sub_1BA69C080();
    sub_1BB874068();
    v61 = v26;
    v62 = v28;
    v54 = v73;
    v55 = v74;
    v56 = v75;
    v57 = v76;
    v59 = v77;
    v60 = v78;
    v58 = v79;
    v29 = v81;
    v53 = v80;
    LODWORD(v26) = v82;
    v83 = xmmword_1BB8D2DA0;
    v84 = 0;
    v52 = sub_1BA7967E4();
    sub_1BB874068();
    v48 = v26;
    v49 = v29;
    v30 = *((_QWORD *)&v73 + 1);
    v50 = v73;
    v51 = v74;
    v83 = xmmword_1BB8D2DB0;
    v84 = 0;
    sub_1BB874068();
    v52 = v30;
    v31 = *((_QWORD *)&v73 + 1);
    v47 = v73;
    v46 = v74;
    v73 = xmmword_1BB8D2DD0;
    LOBYTE(v74) = 0;
    v45 = sub_1BB874038();
    v43 = v31;
    sub_1BA4AD288(0, &qword_1ED3CF7C0, (uint64_t)&type metadata for FormatLayeredMediaFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v73 = xmmword_1BB8D2DE0;
    LOBYTE(v74) = 0;
    sub_1BA597244();
    v44 = v6;
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v44);
    v32 = v83;
    *(_OWORD *)v10 = v19;
    v33 = v65;
    *(_QWORD *)(v10 + 16) = v66;
    *(_QWORD *)(v10 + 24) = v33;
    v34 = v62;
    *(_QWORD *)(v10 + 32) = v64;
    *(_QWORD *)(v10 + 40) = v34;
    *(_QWORD *)(v10 + 48) = v63;
    *(_BYTE *)(v10 + 56) = v61;
    *(_DWORD *)(v10 + 57) = *(_DWORD *)v72;
    *(_DWORD *)(v10 + 60) = *(_DWORD *)&v72[3];
    v35 = *((_QWORD *)&v54 + 1);
    *(_QWORD *)(v10 + 64) = v54;
    *(_QWORD *)(v10 + 72) = v35;
    v36 = v56;
    *(_QWORD *)(v10 + 80) = v55;
    *(_QWORD *)(v10 + 88) = v36;
    v37 = v59;
    *(_QWORD *)(v10 + 96) = v57;
    *(_QWORD *)(v10 + 104) = v37;
    v38 = v58;
    *(_QWORD *)(v10 + 112) = v60;
    *(_QWORD *)(v10 + 120) = v38;
    v39 = v49;
    *(_QWORD *)(v10 + 128) = v53;
    *(_QWORD *)(v10 + 136) = v39;
    *(_BYTE *)(v10 + 144) = v48;
    *(_DWORD *)(v10 + 148) = *(_DWORD *)&v71[3];
    *(_DWORD *)(v10 + 145) = *(_DWORD *)v71;
    v40 = v52;
    *(_QWORD *)(v10 + 152) = v50;
    *(_QWORD *)(v10 + 160) = v40;
    *(_BYTE *)(v10 + 168) = v51;
    *(_DWORD *)(v10 + 172) = *(_DWORD *)&v70[3];
    *(_DWORD *)(v10 + 169) = *(_DWORD *)v70;
    v41 = v43;
    *(_QWORD *)(v10 + 176) = v47;
    *(_QWORD *)(v10 + 184) = v41;
    *(_BYTE *)(v10 + 192) = v46;
    *(_BYTE *)(v10 + 193) = v45;
    *(_DWORD *)(v10 + 194) = v68;
    *(_WORD *)(v10 + 198) = v69;
    *(_QWORD *)(v10 + 200) = v32;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA7967E4()
{
  unint64_t result;

  result = qword_1ED3AFE88;
  if (!qword_1ED3AFE88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoolean, &type metadata for FormatBoolean);
    atomic_store(result, (unint64_t *)&qword_1ED3AFE88);
  }
  return result;
}

uint64_t sub_1BA796828(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t i;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v4 = v3;
  v35 = *(_QWORD *)(a3 + 16);
  if (!v35)
    return result;
  v5 = a3 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
  for (i = v5; ; v5 = i)
  {
    v7 = (_OWORD *)(v5 + 208 * v6);
    v8 = v7[11];
    v46 = v7[10];
    v47 = v8;
    v48 = v7[12];
    v9 = v7[7];
    v42 = v7[6];
    v43 = v9;
    v10 = v7[9];
    v44 = v7[8];
    v45 = v10;
    v11 = v7[3];
    v38 = v7[2];
    v39 = v11;
    v12 = v7[5];
    v40 = v7[4];
    v41 = v12;
    v13 = v7[1];
    v37[0] = *v7;
    v37[1] = v13;
    if ((~*((_QWORD *)&v13 + 1) & 0xF000000000000007) != 0)
    {
      v49 = *((_QWORD *)&v13 + 1);
      sub_1BAC687E4((uint64_t)v37);
      sub_1BA755CC8();
      if (v4)
        goto LABEL_28;
    }
    else
    {
      sub_1BAC687E4((uint64_t)v37);
    }
    v36 = v6;
    if ((_QWORD)v38)
    {
      v14 = *(_QWORD *)(v38 + 16);
      if (v14)
        break;
    }
LABEL_12:
    v16 = v45;
    if (v45 == 254)
    {
      v17 = v36;
      v18 = *((_QWORD *)&v48 + 1);
      if (!*((_QWORD *)&v48 + 1))
        goto LABEL_24;
    }
    else
    {
      v19 = v41;
      v32 = *((_QWORD *)&v40 + 1);
      v33 = v40;
      v20 = *((_QWORD *)&v41 + 1);
      v21 = v42;
      v30 = v43;
      v31 = *((_QWORD *)&v42 + 1);
      v22 = v44;
      v29 = *((_QWORD *)&v43 + 1);
      v23 = *((_QWORD *)&v44 + 1);
      v49 = v42;
      swift_retain();
      sub_1BA7547AC();
      if (v4)
      {
        sub_1BA6E8A78(v33, v32, v19, v20, v21, v31, v30, v29, v22, v23, v16);
        goto LABEL_28;
      }
      sub_1BA6E8A78(v33, v32, v19, v20, v21, v31, v30, v29, v22, v23, v16);
      v17 = v36;
      v18 = *((_QWORD *)&v48 + 1);
      if (!*((_QWORD *)&v48 + 1))
        goto LABEL_24;
    }
    v24 = *(_QWORD *)(v18 + 16);
    if (v24)
    {
      v25 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
      while (1)
      {
        v26 = *(v25 - 2);
        if ((~v26 & 0xF000000000000007) != 0)
        {
          v28 = *(v25 - 1);
          v27 = *v25;
          v49 = *(v25 - 2);
          sub_1BA5E7FF4(v26);
          sub_1BA6E6C68(v28);
          sub_1BA6E6C68(v27);
          sub_1BA5E7FF4(v26);
          sub_1BA6E6C68(v28);
          sub_1BA6E6C68(v27);
          sub_1BA5E7FF4(v26);
          sub_1BA7547AC();
          sub_1BA5E800C(v26);
          sub_1BA5E800C(v26);
          sub_1BA6E6CD8(v28);
          sub_1BA6E6CD8(v27);
          sub_1BA5E800C(v26);
          sub_1BA6E6CD8(v28);
          sub_1BA6E6CD8(v27);
          if (v4)
            break;
        }
        v25 += 3;
        if (!--v24)
        {
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
LABEL_24:
    v6 = v17 + 1;
    sub_1BAC6890C((uint64_t)v37);
    if (v6 == v35)
      return swift_bridgeObjectRelease();
  }
  v15 = swift_bridgeObjectRetain() + 64;
  while (1)
  {
    v49 = *(_QWORD *)(v15 - 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain_n();
    swift_bridgeObjectRetain();
    sub_1BA7547AC();
    if (v4)
      break;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    v15 += 40;
    if (!--v14)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
LABEL_28:
  sub_1BAC6890C((uint64_t)v37);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA796C58(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1BA69C808(result, a2, a3 & 1);
  return result;
}

uint64_t sub_1BA796C70(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1BA69C828(result, a2, a3 & 1);
  return result;
}

unint64_t sub_1BA796C88()
{
  unint64_t result;

  result = qword_1ED39B198;
  if (!qword_1ED39B198)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShadow, &type metadata for FormatShadow);
    atomic_store(result, (unint64_t *)&qword_1ED39B198);
  }
  return result;
}

uint64_t sub_1BA796CCC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_1BA796D68(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

id sub_1BA796E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t i;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  _DWORD v35[20];
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  void *v51;

  v42 = a4;
  v40 = a2;
  sub_1BA4B07F0(0, &qword_1ED3BBD68, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v36 = (char *)v35 - v10;
  v39 = sub_1BB8726B8();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v37 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatShareAttributionData();
  MEMORY[0x1E0C80A78](v12);
  v44 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatLayoutViewToken()), sel_init);
  v15 = *(void **)&v5[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_token];
  *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_token] = v14;
  v45 = v14;

  v16 = objc_msgSend(v5, sel_layer);
  v17 = objc_msgSend(v16, sel_sublayers);

  if (v17)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9960);
    v18 = sub_1BB872DB4();

  }
  else
  {
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v43 = a5;
  v41 = a3;
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v19)
      goto LABEL_18;
  }
  else
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v19)
      goto LABEL_18;
  }
  if (v19 < 1)
  {
    __break(1u);
    JUMPOUT(0x1BA7993D8);
  }
  for (i = 0; i != v19; ++i)
  {
    if ((v18 & 0xC000000000000001) != 0)
      v21 = (id)MEMORY[0x1BCCE4630](i, v18);
    else
      v21 = *(id *)(v18 + 8 * i + 32);
    v22 = v21;
    swift_getObjectType();
    if (swift_conformsToProtocol2())
      v23 = v22;
    else
      v23 = 0;
    if (v23)
      objc_msgSend(v22, sel_removeFromSuperlayer);

  }
LABEL_18:
  swift_bridgeObjectRelease();
  if ((v5[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty] & 1) != 0)
    goto LABEL_21;
  v24 = *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewKey];
  if (!v24
    || (v25 = *(_QWORD *)(v24 + 16),
        v26 = *(_QWORD *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 168)) + 16),
        swift_retain(),
        swift_retain(),
        LOBYTE(v25) = sub_1BA884794(v25, v26),
        swift_release(),
        swift_release(),
        (v25 & 1) == 0))
  {
LABEL_21:
    v27 = *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 168));
    v28 = v45;
    v50 = v5;
    sub_1BA79AFD4(v14, v27);

    v29 = *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 160));
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      v30 = sub_1BB873F30();
      if (v30)
      {
LABEL_23:
        v46 = &v50[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers];
        v49 = v29 & 0xC000000000000001;
        v35[3] = *MEMORY[0x1E0DEF740];
        v47 = v29;
        v48 = v30;
        if ((v29 & 0xC000000000000001) != 0)
        {
          v31 = MEMORY[0x1BCCE4630](0, v29);
        }
        else
        {
          v31 = *(_QWORD *)(v29 + 32);
          swift_retain();
        }
        __asm { BR              X10 }
      }
    }
    else
    {
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v30)
        goto LABEL_23;
    }
    swift_bridgeObjectRelease();
    v32 = v50;
    sub_1BB86DD68();
    v33 = v51;
    if (v51)
    {
      objc_msgSend(v32, sel_addSubview_, v51);

    }
  }
  return v45;
}

uint64_t sub_1BA799420(unint64_t a1)
{
  uint64_t v2;

  if (!(a1 >> 62))
    return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v2 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BA79947C(uint64_t (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!(_DWORD)result || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    result = a1(v3);
    v3 = result;
    *v1 = result;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    v7 = v6 - 1;
    v8 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
    *(_QWORD *)(v5 + 16) = v7;
    sub_1BB872DCC();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1BA7994F4(unint64_t result)
{
  if (result >= 0x13)
    return swift_release();
  return result;
}

void sub_1BA799504(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 *v19;
  _QWORD *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  void *v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36[2];

  v3 = v2;
  v6 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_1BA79A788(v7);
  swift_retain();
  sub_1BA799868(a2);
  v11 = v10;
  type metadata accessor for FormatLayoutViewContainer();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 88) = 0;
  *(_QWORD *)(v12 + 16) = v6;
  *(_QWORD *)(v12 + 24) = v5;
  *(_QWORD *)(v12 + 32) = v7;
  *(_QWORD *)(v12 + 40) = v8;
  *(_BYTE *)(v12 + 48) = v9;
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v12 + 56) = a2;
  *(_QWORD *)(v12 + 64) = v11;
  *(_QWORD *)(v12 + 72) = v13;
  *(_QWORD *)(v12 + 80) = 0;
  v14 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v35 = *(_QWORD *)v14;
  *(_QWORD *)v14 = 0x8000000000000000;
  sub_1BA7999A8(v12, v6, v5, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v14 = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v16 = sub_1BA7999D4();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v18 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers];
    v19 = (__int128 *)(v16 + 32);
    do
    {
      v34 = *v19;
      swift_getObjectType();
      swift_unknownObjectRetain();
      if ((sub_1BB870ED0() & 1) != 0)
      {
        swift_beginAccess();
        v20 = *(_QWORD **)v18;
        swift_unknownObjectRetain();
        v21 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)v18 = v20;
        if ((v21 & 1) == 0)
        {
          v20 = sub_1BB391908(0, v20[2] + 1, 1, v20);
          *(_QWORD *)v18 = v20;
        }
        v23 = v20[2];
        v22 = v20[3];
        if (v23 >= v22 >> 1)
        {
          v20 = sub_1BB391908((_QWORD *)(v22 > 1), v23 + 1, 1, v20);
          *(_QWORD *)v18 = v20;
        }
        v20[2] = v23 + 1;
        *(_OWORD *)&v20[2 * v23 + 4] = v34;
        swift_endAccess();
      }
      swift_unknownObjectRelease();
      ++v19;
      --v17;
    }
    while (v17);
  }
  swift_bridgeObjectRelease();
  v24 = sub_1BA799A30();
  v25 = *(_QWORD *)(v24 + 16);
  if (v25)
  {
    v26 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_loadAwareObservers];
    v27 = v24 + 32;
    do
    {
      sub_1BA4C010C(v27, (uint64_t)v36);
      swift_beginAccess();
      v28 = *(_QWORD **)v26;
      v29 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v26 = v28;
      if ((v29 & 1) == 0)
      {
        v28 = sub_1BA7ABE6C(0, v28[2] + 1, 1, v28);
        *(_QWORD *)v26 = v28;
      }
      v31 = v28[2];
      v30 = v28[3];
      if (v31 >= v30 >> 1)
      {
        v28 = sub_1BA7ABE6C((_QWORD *)(v30 > 1), v31 + 1, 1, v28);
        *(_QWORD *)v26 = v28;
      }
      v28[2] = v31 + 1;
      sub_1BA4CECCC(v36, (uint64_t)&v28[5 * v31 + 4]);
      swift_endAccess();
      v27 += 40;
      --v25;
    }
    while (v25);
  }
  swift_bridgeObjectRelease();
  sub_1BA799868(*(_QWORD *)(v12 + 56));
  v33 = v32;
  objc_msgSend(v3, sel_addSubview_, v32);
  swift_release();

}

void sub_1BA799868(uint64_t a1)
{
  __asm { BR              X10 }
}

id sub_1BA799898(uint64_t a1)
{
  return *(id *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
}

void sub_1BA7998AC()
{
  JUMPOUT(0x1BA7998A0);
}

id sub_1BA7998B4(uint64_t a1)
{
  id v1;
  id v2;
  id v3;

  v1 = *(id *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  v2 = objc_msgSend(v1, sel_view);
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x1BA7998E0);
  }
  v3 = v2;

  return v3;
}

uint64_t sub_1BA7999A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BA6E3434(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA75F5D8);
}

uint64_t type metadata accessor for FormatLayoutViewContainer()
{
  return objc_opt_self();
}

uint64_t sub_1BA7999D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(_QWORD *)(v0 + 80);
  }
  else
  {
    sub_1BA799A8C(*(_QWORD *)(v0 + 56));
    v1 = v2;
    *(_QWORD *)(v0 + 80) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA799A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 88))
  {
    v1 = *(_QWORD *)(v0 + 88);
  }
  else
  {
    sub_1BA799D00(*(_QWORD *)(v0 + 56));
    v1 = v2;
    *(_QWORD *)(v0 + 88) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BA799A8C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA799AC4(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1BA79A14C(0, (unint64_t *)&qword_1ED3B9CA8, (unint64_t *)&unk_1ED3B0A30);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  v3 = sub_1BA4A2870((unint64_t *)&unk_1ED3C7520, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
  *(_QWORD *)(v2 + 32) = v1;
  *(_QWORD *)(v2 + 40) = v3;
  v4 = v1;
  return v2;
}

void sub_1BA799D00(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA799D38(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x10);
  sub_1BA79A14C(0, (unint64_t *)&qword_1ED3CFB48, (unint64_t *)&qword_1ED3C49B0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v2 + 56) = type metadata accessor for FormatLayoutView();
  *(_QWORD *)(v2 + 64) = sub_1BA4A2870(qword_1ED3C2498, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = v1;
  return v2;
}

uint64_t type metadata accessor for FormatShareAttributionData()
{
  uint64_t result;

  result = qword_1ED3BB918;
  if (!qword_1ED3BB918)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA799EFC(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  if (!a2)
    return result;
  v6 = result;
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewsByName);
  swift_beginAccess();
  v8 = *v7;
  v9 = *(_QWORD *)(*v7 + 16);
  swift_bridgeObjectRetain();
  if (!v9)
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v10 = sub_1BA6E35A8(v6, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    v12 = MEMORY[0x1E0DEE9D8];
    goto LABEL_7;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v10);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  v13 = a3;
  MEMORY[0x1BCCE36AC]();
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v7;
  *v7 = 0x8000000000000000;
  sub_1BB4BFC30(v12, v6, a2, isUniquelyReferenced_nonNull_native);
  *v7 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

BOOL FormatLayoutView.shouldMonitorScroll.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    return 1;
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations);
  swift_beginAccess();
  if (*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return v4 != 0;
}

void sub_1BA79A14C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA505288(255, a3);
    v4 = sub_1BB874218();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BA79A1A8(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1BB873EA0();
    __break(1u);
  }
  else if (a1)
  {
    sub_1BA90C3FC();
    result = sub_1BB872E74();
    *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

void sub_1BA79A24C()
{
  __asm { BR              X10 }
}

unint64_t sub_1BA79A290()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _OWORD v4[2];
  uint64_t v5;

  v2 = *(_OWORD *)(v1 + 40);
  v4[0] = *(_OWORD *)(v1 + 24);
  v4[1] = v2;
  v5 = *(_QWORD *)(v1 + 56);
  return sub_1BA79A798(2uLL, (uint64_t)v4, v1, v0);
}

uint64_t sub_1BA79A6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;

  sub_1BA79AB9C();
  v3 = v2;
  v5 = v4;
  sub_1BA79A890();
  *(_QWORD *)v0 = v3;
  *(_QWORD *)(v0 + 8) = v5;
  *(_QWORD *)(v0 + 16) = 16;
  *(_QWORD *)(v0 + 24) = v1;
  *(_BYTE *)(v0 + 32) = v7;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BA79A704()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1BB5D51FC(0x11uLL, *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFFFBLL) + 0x18), v1, v0);
}

void sub_1BA79A730()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA79AB9C();
  v2 = v1;
  v4 = v3;
  sub_1BA79A890();
  *v0 = v2;
  v0[1] = v4;
  JUMPOUT(0x1BA79A764);
}

unint64_t sub_1BA79A788(unint64_t result)
{
  if (result >= 0x13)
    return swift_retain();
  return result;
}

unint64_t sub_1BA79A798@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v18;

  v6 = *(_QWORD *)(*(_QWORD *)a2 + 176);
  if (*(_QWORD *)(v6 + 16))
  {
    sub_1BA79AB9C();
    v8 = v7;
    v10 = v9;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a1;
    *(_QWORD *)(v11 + 24) = v6;
    sub_1BA79A890();
    v12 = a3;
    v13 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BA79AB9C();
    v8 = v14;
    v10 = v15;
    sub_1BA79A890();
    v12 = a3;
    v13 = v18;
    swift_bridgeObjectRetain();
    v11 = a1;
  }
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v10;
  *(_QWORD *)(a4 + 16) = v11;
  *(_QWORD *)(a4 + 24) = v12;
  *(_BYTE *)(a4 + 32) = v13;
  return sub_1BA79A788(a1);
}

void sub_1BA79A890()
{
  __asm { BR              X13 }
}

void sub_1BA79A8D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + 144);
  LOBYTE(v2) = *(_BYTE *)(v2 + 152);
  *(_QWORD *)v1 = v3;
  *(_BYTE *)(v1 + 8) = v2;
}

void sub_1BA79AAA0()
{
  JUMPOUT(0x1BA79AA88);
}

void sub_1BA79AAB4()
{
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3A2A80, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
  swift_projectBox();
  JUMPOUT(0x1BA79AA88);
}

void sub_1BA79AB9C()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA79ABD0@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFFFBLL) + 0x18) + 32);
}

unint64_t sub_1BA79AE18@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v18;

  v6 = *(_QWORD *)(*(_QWORD *)a2 + 160);
  if (*(_QWORD *)(v6 + 16))
  {
    sub_1BA79AB9C();
    v8 = v7;
    v10 = v9;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a1;
    *(_QWORD *)(v11 + 24) = v6;
    sub_1BA79A890();
    v12 = a3;
    v13 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BA79AB9C();
    v8 = v14;
    v10 = v15;
    sub_1BA79A890();
    v12 = a3;
    v13 = v18;
    swift_bridgeObjectRetain();
    v11 = a1;
  }
  *(_QWORD *)a4 = v8;
  *(_QWORD *)(a4 + 8) = v10;
  *(_QWORD *)(a4 + 16) = v11;
  *(_QWORD *)(a4 + 24) = v12;
  *(_BYTE *)(a4 + 32) = v13;
  return sub_1BA79A788(a1);
}

_QWORD *sub_1BA79AF10(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BB38E480(a1, a2, a3, a4, &qword_1ED3B9EF0, (uint64_t)&type metadata for FormatLayoutViewModel);
}

uint64_t type metadata accessor for FormatDataLayoutViewKey()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatDataLayoutViewModel()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatLayoutViewToken()
{
  return objc_opt_self();
}

void sub_1BA79AFD4(void *a1, uint64_t a2)
{
  _BYTE *v2;
  _BYTE *v3;
  void *v6;
  id v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t j;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v3 = v2;
  FormatLayoutView.prepareForReuse()();
  v6 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_token];
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_token] = a1;
  v7 = a1;

  v2[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty] = 0;
  v8 = objc_msgSend(v2, sel_subviews);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
  v9 = sub_1BB872DB4();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_3:
      if (v10 < 1)
        goto LABEL_37;
      for (i = 0; i != v10; ++i)
      {
        if ((v9 & 0xC000000000000001) != 0)
          v12 = (id)MEMORY[0x1BCCE4630](i, v9);
        else
          v12 = *(id *)(v9 + 8 * i + 32);
        v13 = v12;
        objc_msgSend(v12, sel_removeFromSuperview);

      }
    }
  }
  v37 = a2;
  swift_bridgeObjectRelease();
  v14 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers];
  swift_beginAccess();
  v36 = v14;
  v15 = *v14;
  v16 = *v14 + 64;
  v17 = 1 << *(_BYTE *)(*v14 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(*v14 + 64);
  v20 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  v21 = 0;
  if (!v19)
    goto LABEL_14;
LABEL_13:
  v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (j = v22 | (v21 << 6); ; j = __clz(__rbit64(v25)) + (v21 << 6))
  {
    v27 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * j);
    v28 = qword_1ED3CC1E0;
    swift_retain();
    if (v28 != -1)
      swift_once();
    sub_1BB5F20D8(*(_QWORD *)(v27 + 56));
    swift_release();
    if (v19)
      goto LABEL_13;
LABEL_14:
    v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v24 >= v20)
      goto LABEL_34;
    v25 = *(_QWORD *)(v16 + 8 * v24);
    ++v21;
    if (!v25)
    {
      v21 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_34;
      v25 = *(_QWORD *)(v16 + 8 * v21);
      if (!v25)
      {
        v21 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_34;
        v25 = *(_QWORD *)(v16 + 8 * v21);
        if (!v25)
        {
          v21 = v24 + 3;
          if (v24 + 3 >= v20)
            goto LABEL_34;
          v25 = *(_QWORD *)(v16 + 8 * v21);
          if (!v25)
            break;
        }
      }
    }
LABEL_29:
    v19 = (v25 - 1) & v25;
  }
  v26 = v24 + 4;
  if (v26 >= v20)
  {
LABEL_34:
    swift_release();
    v29 = MEMORY[0x1E0DEE9E0];
    *v36 = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    v30 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers];
    swift_beginAccess();
    v31 = MEMORY[0x1E0DEE9D8];
    *v30 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    v32 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_loadAwareObservers];
    swift_beginAccess();
    *v32 = v31;
    swift_bridgeObjectRelease();
    v33 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_layoutObservers];
    swift_beginAccess();
    *v33 = v31;
    swift_bridgeObjectRelease();
    v34 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers];
    swift_beginAccess();
    *v34 = v31;
    swift_bridgeObjectRelease();
    v35 = &v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewsByName];
    swift_beginAccess();
    *v35 = v29;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer] = 0;
    swift_release();
    *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewKey] = v37;
    swift_retain();
    swift_release();
    return;
  }
  v25 = *(_QWORD *)(v16 + 8 * v26);
  if (v25)
  {
    v21 = v26;
    goto LABEL_29;
  }
  while (1)
  {
    v21 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v21 >= v20)
      goto LABEL_34;
    v25 = *(_QWORD *)(v16 + 8 * v21);
    ++v26;
    if (v25)
      goto LABEL_29;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
}

Swift::Void __swiftcall FormatLayoutView.prepareForReuse()()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t i;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  void *v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  void *v39;

  v1 = v0;
  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v39 - v3;
  v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_token];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_token] = 0;

  v6 = type metadata accessor for FeedItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  v7 = (uint64_t)&v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_feedItem];
  swift_beginAccess();
  sub_1BAB44AA0((uint64_t)v4, v7);
  swift_endAccess();
  v8 = &v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations];
  swift_beginAccess();
  *v8 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  sub_1BB86DD68();
  v9 = v39;
  if (v39)
  {
    v10 = (void *)sub_1BB871344();

  }
  sub_1BB86DD68();
  v11 = v39;
  if (v39)
  {
    v12 = (void *)sub_1BB871344();

  }
  v13 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture];
  if (v13)
    objc_msgSend(v13, sel_setEnabled_, 0);
  v14 = &v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation];
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation];
  *v14 = 0;
  v14[1] = 0;
  sub_1BA49EBE0(v15);
  v16 = &v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide];
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide];
  *v16 = 0;
  v16[1] = 0;
  sub_1BA49EBE0(v17);
  v18 = &v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow];
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow];
  *v18 = 0;
  v18[1] = 0;
  sub_1BA49EBE0(v19);
  v20 = (uint64_t *)&v1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers];
  swift_beginAccess();
  v21 = *v20;
  v22 = v21 + 64;
  v23 = 1 << *(_BYTE *)(v21 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & *(_QWORD *)(v21 + 64);
  v26 = OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty;
  v27 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  v28 = 0;
  if (v25)
    goto LABEL_12;
LABEL_13:
  v31 = v28 + 1;
  if (!__OFADD__(v28, 1))
  {
    if (v31 < v27)
    {
      v32 = *(_QWORD *)(v22 + 8 * v31);
      ++v28;
      if (v32)
        goto LABEL_28;
      v28 = v31 + 1;
      if (v31 + 1 >= v27)
        goto LABEL_33;
      v32 = *(_QWORD *)(v22 + 8 * v28);
      if (v32)
        goto LABEL_28;
      v28 = v31 + 2;
      if (v31 + 2 >= v27)
        goto LABEL_33;
      v32 = *(_QWORD *)(v22 + 8 * v28);
      if (v32)
        goto LABEL_28;
      v28 = v31 + 3;
      if (v31 + 3 >= v27)
        goto LABEL_33;
      v32 = *(_QWORD *)(v22 + 8 * v28);
      if (v32)
      {
LABEL_28:
        v25 = (v32 - 1) & v32;
        for (i = __clz(__rbit64(v32)) + (v28 << 6); ; i = v29 | (v28 << 6))
        {
          v34 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * i);
          v35 = *(void **)(v34 + 64);
          swift_retain();
          v36 = objc_msgSend(v35, sel_superview);
          if (v36 && (v37 = v36, v36, v37 == v1))
          {
            v38 = *(_QWORD *)(v34 + 56);
            swift_retain();
            sub_1BB3AA164(v38);
            swift_release();
            swift_release();
            if (!v25)
              goto LABEL_13;
          }
          else
          {
            swift_release();
            v1[v26] = 1;
            if (!v25)
              goto LABEL_13;
          }
LABEL_12:
          v29 = __clz(__rbit64(v25));
          v25 &= v25 - 1;
        }
      }
      v33 = v31 + 4;
      if (v33 < v27)
      {
        v32 = *(_QWORD *)(v22 + 8 * v33);
        if (v32)
        {
          v28 = v33;
          goto LABEL_28;
        }
        while (1)
        {
          v28 = v33 + 1;
          if (__OFADD__(v33, 1))
            goto LABEL_35;
          if (v28 >= v27)
            break;
          v32 = *(_QWORD *)(v22 + 8 * v28);
          ++v33;
          if (v32)
            goto LABEL_28;
        }
      }
    }
LABEL_33:
    swift_release();
    return;
  }
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_1BA79B7B8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;

  result = MEMORY[0x1E0DEE9D8];
  v5 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v2; ++i)
    {
      swift_retain();
      FormatDataLayoutValue.formatImageRequests(options:inventory:)();
      if (v4)
        sub_1BA65D3A4(v4);
      swift_release();
    }
    swift_bridgeObjectRelease();
    result = v5;
  }
  if (!*(_QWORD *)(result + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1BA79B890(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_1BA79B89C()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BA79BAA0(v0);
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v2, 0);
    __asm { BR              X9 }
  }
  swift_release();
  v5 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BA79BAB4(&v5);
  swift_bridgeObjectRelease();
  sub_1BA6D249C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B95D0, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEAF20]);
  v3 = sub_1BB872904();
  swift_release();
  return v3;
}

uint64_t sub_1BA79BAA0(uint64_t a1)
{
  return sub_1BA6744D8(a1, &qword_1ED3B9EB0, (uint64_t)&type metadata for FormatButtonNodeState);
}

uint64_t sub_1BA79BAB4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BA67FB34(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BA6801F8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BA79BB1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int64_t *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  void *v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t v70;
  int *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v94;
  char v95;
  uint64_t v96;
  _BOOL8 v97;
  uint64_t v98;
  char v99;
  unint64_t v100;
  char v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  unsigned int v115;
  unint64_t v116;
  size_t v117;
  uint64_t isStackAllocationSafe;
  int *v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  char v123;
  char v124;
  char *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  _BOOL8 v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  unint64_t v151;
  char v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t *v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  unsigned int v166;
  unint64_t v167;
  size_t v168;
  uint64_t v169;
  int *v170;
  uint64_t v171;
  int *v172;
  uint64_t v173;
  char v174;
  char v175;
  int v176;
  int *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  unsigned __int128 v208;
  __int128 v209;
  __int128 v210;
  int *v211;
  uint64_t v212;
  uint64_t v213;
  __int128 v214;
  __int128 v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  unint64_t v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int64_t v233;
  uint64_t *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  _QWORD *v252;
  uint64_t v253;
  unsigned int *v254;
  char *v255;
  uint64_t v256;
  int *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  _QWORD *v264;
  uint64_t result;
  __int128 v266;
  unsigned __int128 v267;
  __int128 v268;
  __int128 v269;
  uint64_t v270;
  _QWORD *v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  _QWORD *v275;
  int64_t v276;
  uint64_t v277;
  uint64_t v278;
  unint64_t v279;
  unint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  double v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  char *v288;
  int *v289;
  uint64_t *v290;
  uint64_t *boxed_opaque_existential_0;
  _OWORD *v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  _QWORD *v299;
  int *v300;
  uint64_t v301;
  __int128 v302;
  __int128 v303;
  unint64_t v304;
  unint64_t v305;
  unint64_t v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  _QWORD *v315;
  char *v316;
  _QWORD *v317;
  uint64_t v318;
  uint64_t v319;
  unsigned __int128 v320;
  unint64_t v321;
  uint64_t *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  _QWORD *v326;
  char *v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  _QWORD *v332;
  _QWORD *v333;
  uint64_t v334;
  _QWORD *v335;
  uint64_t v336;
  uint64_t v337;
  _QWORD *v338;
  _QWORD *v339;
  int *v340;
  int *v341;
  uint64_t v342;
  char v343;
  uint64_t v344;
  unint64_t v345;
  _OWORD v346[4];
  uint64_t v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  char v351;
  _BYTE v352[24];
  uint64_t v353;
  uint64_t v354;
  __int128 v355[2];
  __int128 v356[7];
  __int128 v357;
  __int128 v358;
  __int128 v359;
  unsigned __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  unint64_t v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  uint64_t v396;
  unint64_t v397;
  _QWORD v398[3];
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;

  v4 = v3;
  v336 = a1;
  v337 = a2;
  v322 = a3;
  v401 = *MEMORY[0x1E0C80C00];
  v5 = sub_1BB86DA38();
  v325 = *(_QWORD *)(v5 - 8);
  v326 = (_QWORD *)v5;
  MEMORY[0x1E0C80A78](v5);
  v327 = (char *)&v307 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v330 = sub_1BB86C8E0();
  v7 = *(_QWORD *)(v330 - 8);
  MEMORY[0x1E0C80A78](v330);
  v9 = (char *)&v307 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v341 = (int *)type metadata accessor for GroupLayoutContext();
  v339 = (_QWORD *)*((_QWORD *)v341 - 1);
  MEMORY[0x1E0C80A78](v341);
  v323 = (uint64_t)&v307 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v324 = (uint64_t)&v307 - v12;
  MEMORY[0x1E0C80A78](v13);
  v334 = (uint64_t)&v307 - v14;
  v15 = type metadata accessor for GroupLayoutBindingContext();
  v331 = *(_QWORD *)(v15 - 8);
  v332 = (_QWORD *)v15;
  MEMORY[0x1E0C80A78](v15);
  v333 = (uint64_t *)((char *)&v307 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v335 = (_QWORD *)(v3 + 160);
  sub_1BA4C010C(v3 + 160, (uint64_t)v398);
  v17 = v399;
  v18 = v400;
  __swift_project_boxed_opaque_existential_1(v398, v399);
  v396 = 0;
  v397 = 0xE000000000000000;
  sub_1BB873CB4();
  v344 = v396;
  v345 = v397;
  sub_1BB872AFC("Optional FormatMenu.items");
  v19 = *(_QWORD *)(v3 + 24);
  v338 = (_QWORD *)v4;
  sub_1BA79DEC4(v4, (uint64_t)&v396);
  if (!v19)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA79E0D0((uint64_t)&v396);
  sub_1BB872AFC(v20);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v18 + 16))(v344, v345, v17, v18);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v398);
  v21 = (uint64_t)v338;
  sub_1BA79DEC4((uint64_t)v338, (uint64_t)&v387);
  v22 = (uint64_t)v333;
  sub_1BA4C2DD8(v336, (uint64_t)v333, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v23 = v334;
  sub_1BA4C2DD8(v337, v334, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BB86C8D4();
  v24 = sub_1BB86C8C8();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v330);
  *((_QWORD *)&v379 + 1) = &type metadata for FormatGroupLayoutFactory;
  v321 = sub_1BA5E3468();
  *(_QWORD *)&v380 = v321;
  v27 = swift_allocObject();
  *(_QWORD *)&v378 = v27;
  sub_1BA79DEC4((uint64_t)&v387, v27 + 16);
  type metadata accessor for GroupLayoutKey();
  v28 = swift_allocObject();
  v29 = *(_QWORD *)(v27 + 24);
  *(_QWORD *)&v369 = *(_QWORD *)(v27 + 16);
  *((_QWORD *)&v369 + 1) = v29;
  *(_QWORD *)&v357 = 95;
  *((_QWORD *)&v357 + 1) = 0xE100000000000000;
  *(_QWORD *)&v348 = 45;
  *((_QWORD *)&v348 + 1) = 0xE100000000000000;
  v305 = sub_1BA7114A0();
  v306 = v305;
  *((_QWORD *)&v303 + 1) = MEMORY[0x1E0DEA968];
  v304 = v305;
  *(_QWORD *)(v28 + 16) = sub_1BB873B04();
  *(_QWORD *)(v28 + 24) = v30;
  v31 = (uint64_t *)(v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *v31 = v24;
  v31[1] = v26;
  sub_1BA4C010C((uint64_t)&v378, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v32 = v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v22, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(v331 + 56))(v32, 0, 1, v332);
  v33 = v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4(v23, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  ((void (*)(uint64_t, _QWORD, uint64_t, int *))v339[7])(v33, 0, 1, v341);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v378);
  sub_1BA79E0D0((uint64_t)&v387);
  v34 = sub_1BA79E0CC(2, *(_QWORD *)(v21 + 152));
  v35 = 0;
  v36 = MEMORY[0x1E0DEE9D8];
  v37 = MEMORY[0x1E0DEE9E0];
  if ((v34 & 1) != 0)
  {
    type metadata accessor for FormatNodeDebugData();
    v35 = (_QWORD *)swift_allocObject();
    type metadata accessor for FormatNodeDebugRecords();
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = v36;
    v35[2] = v38;
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = v36;
    v35[3] = v39;
    type metadata accessor for FormatSourceMapCollection();
    v40 = swift_allocObject();
    *(_QWORD *)(v40 + 16) = v37;
    v35[4] = v40;
  }
  type metadata accessor for FormatNodeStateData();
  v41 = (_QWORD *)swift_allocObject();
  v41[4] = v37;
  v41[5] = v37;
  v41[2] = v35;
  v41[3] = v37;
  type metadata accessor for FormatNamespace();
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = 0u;
  *(_OWORD *)(v42 + 32) = 0u;
  *(_QWORD *)(v42 + 48) = v36;
  *(_QWORD *)(v42 + 56) = v35;
  v43 = *(int64_t **)(v21 + 200);
  v44 = v337;
  v45 = v337 + v341[5];
  v46 = *(_BYTE *)(v337 + v341[11]);
  swift_retain();
  LOBYTE(v387) = v46;
  v47 = v338[23];
  v48 = v338[24];
  v49 = __swift_project_boxed_opaque_existential_1(v335, v47);
  v50 = (void *)v44;
  v51 = (unint64_t)v338;
  v52 = (_QWORD *)sub_1BB3BDD40(v50, v45, (unsigned __int8 *)&v387, (uint64_t)v49, v43, v47, v48);
  v332 = &v307;
  v53 = v336;
  v54 = *(_QWORD *)(v336 + 72);
  MEMORY[0x1E0C80A78](v52);
  v305 = v51;
  v306 = v53;
  swift_bridgeObjectRetain();
  v55 = v340;
  v56 = sub_1BA79E438((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BA79E718, (uint64_t)&v303 + 8, v54);
  if (v55)
  {
    v341 = v55;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_107;
  }
  v317 = v41;
  v319 = v42;
  v57 = v56;
  swift_bridgeObjectRelease();
  v58 = *(_OWORD *)(v51 + 80);
  v59 = *(_OWORD *)(v51 + 112);
  v384 = *(_OWORD *)(v51 + 96);
  v385 = v59;
  v60 = *(_OWORD *)(v51 + 112);
  v386 = *(_OWORD *)(v51 + 128);
  v61 = *(_OWORD *)(v51 + 16);
  v62 = *(_OWORD *)(v51 + 48);
  v380 = *(_OWORD *)(v51 + 32);
  v381 = v62;
  v64 = *(_OWORD *)(v51 + 48);
  v63 = *(_OWORD *)(v51 + 64);
  v65 = v63;
  v383 = *(_OWORD *)(v51 + 80);
  v382 = v63;
  v66 = *(_OWORD *)v51;
  v67 = *(_OWORD *)v51;
  v379 = *(_OWORD *)(v51 + 16);
  v378 = v66;
  v393 = v384;
  v394 = v60;
  v395 = *(_OWORD *)(v51 + 128);
  v389 = v380;
  v390 = v64;
  v392 = v58;
  v391 = v65;
  v68 = (_QWORD *)v53;
  v69 = *(_QWORD *)(v51 + 144);
  v388 = v61;
  v387 = v67;
  sub_1BA8C88FC((uint64_t)&v378);
  v70 = v51;
  v71 = (int *)sub_1BA7A95EC(v69, (uint64_t)&v387, v68, v57);
  sub_1BA8C89E4((uint64_t)&v378);
  v72 = *(_QWORD *)(v70 + 248);
  v393 = v384;
  v394 = v385;
  v395 = v386;
  v389 = v380;
  v390 = v381;
  v392 = v383;
  v391 = v382;
  v388 = v379;
  v387 = v378;
  sub_1BA8C88FC((uint64_t)&v378);
  v73 = sub_1BB51E294(v69, v72, (uint64_t)&v387, (uint64_t)v68, (uint64_t)v71);
  v341 = 0;
  v74 = v73;
  v312 = v57;
  sub_1BA8C89E4((uint64_t)&v378);
  v310 = type metadata accessor for FormatVariableCollection();
  v75 = swift_allocObject();
  *(_QWORD *)(v75 + 16) = MEMORY[0x1E0DEE9E0];
  v311 = type metadata accessor for FormatOptionCollection();
  swift_allocObject();
  v313 = sub_1BA6E1E0C(v74, v75);
  swift_bridgeObjectRelease();
  v76 = *(_QWORD *)(v69 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
  v77 = *(_QWORD *)(v69 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8);
  v328 = v28;
  v330 = (uint64_t)v52;
  v340 = v71;
  switch(v77)
  {
    case 0uLL:
      v314 = 0;
      goto LABEL_90;
    case 1uLL:
      v314 = 1;
      goto LABEL_90;
    case 2uLL:
      sub_1BA79DEC4((uint64_t)v338, (uint64_t)&v387);
      if (*((_QWORD *)&v391 + 1))
      {
        if (*((_QWORD *)&v391 + 1) == 1)
        {
          v314 = 1;
          sub_1BA79DDC8(v391, 1uLL);
          v79 = v338;
          goto LABEL_92;
        }
        if (*((_QWORD *)&v391 + 1) != 2)
        {
          v314 = v391 & 1;
          v318 = *(_QWORD *)(*((_QWORD *)&v391 + 1) + 16);
          if (!v318)
          {
            v79 = v338;
LABEL_92:
            sub_1BA79E0D0((uint64_t)&v387);
            v176 = v314 & 1;
            v343 = v314 & 1;
            v177 = v341;
            sub_1BA79FCB4(&v343, (uint64_t)v71);
            v341 = v177;
            if (!v177)
            {
              LODWORD(v309) = v176;
              v315 = (_QWORD *)v79[19];
              LODWORD(v314) = sub_1BA79E0CC(1, v315);
              v178 = (char *)v79[33];
              v339 = (_QWORD *)v79[32];
              v179 = v52[9];
              v180 = (char *)v52[10];
              v182 = v52[11];
              v181 = v52[12];
              v183 = v52[13];
              sub_1BB86D294();
              v329 = v180;
              v184 = v180;
              v331 = v182;
              swift_bridgeObjectRetain();
              *(_QWORD *)&v320 = v181;
              swift_bridgeObjectRetain();
              *((_QWORD *)&v320 + 1) = v183;
              swift_bridgeObjectRetain();
              v316 = v178;
              swift_bridgeObjectRetain();
              v318 = v179;
              swift_bridgeObjectRetain();
              sub_1BB86D27C();
              v51 = (unint64_t)v79;
              if (qword_1ED3D5158 != -1)
                goto LABEL_129;
              goto LABEL_95;
            }
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            v51 = (unint64_t)v79;
LABEL_107:
            sub_1BA4C010C((uint64_t)v335, (uint64_t)&v378);
            v260 = *((_QWORD *)&v379 + 1);
            v261 = v380;
            __swift_project_boxed_opaque_existential_1(&v378, *((uint64_t *)&v379 + 1));
            *(_QWORD *)&v387 = 0;
            *((_QWORD *)&v387 + 1) = 0xE000000000000000;
            sub_1BB873CB4();
            v369 = v387;
            sub_1BB872AFC(" items for group ");
            v262 = *(_QWORD *)(v51 + 24);
            sub_1BA79DEC4(v51, (uint64_t)&v387);
            if (!v262)
              swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA79E0D0((uint64_t)&v387);
            sub_1BB872AFC(v263);
            swift_bridgeObjectRelease();
            sub_1BB872AFC(v264);
            *(_QWORD *)&v387 = v341;
            sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
            sub_1BB873E34();
            (*(void (**)(_QWORD, _QWORD, uint64_t, uint64_t))(v261 + 32))(v369, *((_QWORD *)&v369 + 1), v260, v261);
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v378);
            return swift_willThrow();
          }
          v315 = (_QWORD *)v391;
          v316 = (char *)(*((_QWORD *)&v391 + 1) + 32);
          v309 = *((_QWORD *)&v391 + 1);
          sub_1BA8C89D0(v391, *((unint64_t *)&v391 + 1));
          v78 = 0;
          while (1)
          {
            v331 = v78;
            v80 = &v316[24 * v78];
            v81 = *((_QWORD *)v80 + 1);
            v339 = *(_QWORD **)v80;
            LODWORD(v320) = v80[16];
            v82 = qword_1ED3BE7F8;
            swift_bridgeObjectRetain();
            if (v82 != -1)
              swift_once();
            v83 = qword_1ED4768D0;
            v84 = *(char **)(qword_1ED4768D0 + 24);
            swift_bridgeObjectRetain();
            v329 = v84;
            sub_1BB86DD20();
            v85 = (_QWORD *)(v83 + 16);
            swift_beginAccess();
            v86 = *(_QWORD *)(v83 + 16);
            if (!*(_QWORD *)(v86 + 16))
              goto LABEL_23;
            swift_bridgeObjectRetain();
            v87 = sub_1BA6E35A8((uint64_t)v339, v81);
            if ((v88 & 1) == 0)
              break;
            v89 = *(_QWORD *)(*(_QWORD *)(v86 + 56) + 24 * v87 + 16);
            swift_endAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_35:
            swift_bridgeObjectRelease();
            sub_1BB86DD2C();
            swift_bridgeObjectRelease();
            v109 = (char *)v81;
            v110 = *(_QWORD *)(v89 + 16);
            if (v110)
            {
              v329 = v109;
              *((_QWORD *)&v320 + 1) = v89;
              v111 = (uint64_t *)(v89 + 64);
              do
              {
                v112 = *(v111 - 1);
                v113 = *v111;
                v114 = *(_BYTE *)(v112 + 32);
                v115 = v114 & 0x3F;
                v116 = (unint64_t)((1 << v114) + 63) >> 6;
                v117 = 8 * v116;
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain();
                isStackAllocationSafe = swift_bridgeObjectRetain();
                if (v115 <= 0xD
                  || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
                {
                  v339 = &v307;
                  MEMORY[0x1E0C80A78](isStackAllocationSafe);
                  bzero((char *)&v307 - ((v117 + 15) & 0x3FFFFFFFFFFFFFF0), v117);
                  v71 = v340;
                  v119 = v341;
                  v120 = sub_1BA6EB5B4((uint64_t)&v307 - ((v117 + 15) & 0x3FFFFFFFFFFFFFF0), v116, v112, (uint64_t)v340);
                  swift_bridgeObjectRelease();
                  v341 = v119;
                  if (v119)
                    goto LABEL_130;
                }
                else
                {
                  v71 = (int *)swift_slowAlloc();
                  bzero(v71, v117);
                  v121 = v341;
                  v122 = sub_1BA6EB5B4((uint64_t)v71, v116, v112, (uint64_t)v340);
                  v341 = v121;
                  if (v121)
                    goto LABEL_131;
                  v120 = v122;
                  swift_bridgeObjectRelease();
                  MEMORY[0x1BCCE5C38](v71, -1, -1);
                  v71 = v340;
                }
                v123 = sub_1BA6EB330(v120, v112);
                swift_release();
                if ((v123 & 1) != 0)
                {
                  v124 = sub_1BA6EBD20((uint64_t)v71, v113);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v124 & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v314 = v320;
                    goto LABEL_49;
                  }
                }
                else
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v111 += 5;
                --v110;
              }
              while (v110);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_49:
              v52 = (_QWORD *)v330;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v78 = v331 + 1;
            v79 = v338;
            if (v331 + 1 == v318)
            {
              sub_1BA79DDC8((uint64_t)v315, v309);
              goto LABEL_92;
            }
          }
          swift_bridgeObjectRelease();
LABEL_23:
          swift_endAccess();
          v90 = (uint64_t)v339;
          *(_QWORD *)&v357 = v339;
          *((_QWORD *)&v357 + 1) = v81;
          swift_bridgeObjectRetain();
          sub_1BA6F2E38((uint64_t *)&v357, &v369);
          v91 = *((_QWORD *)&v369 + 1);
          *((_QWORD *)&v320 + 1) = v369;
          v92 = v370;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v89 = v92;
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v357 = *v85;
          v94 = v357;
          *v85 = 0x8000000000000000;
          v51 = sub_1BA6E35A8(v90, v81);
          v96 = *(_QWORD *)(v94 + 16);
          v97 = (v95 & 1) == 0;
          v98 = v96 + v97;
          if (__OFADD__(v96, v97))
            goto LABEL_127;
          v99 = v95;
          if (*(_QWORD *)(v94 + 24) < v98)
          {
            sub_1BA7AAAE4(v98, isUniquelyReferenced_nonNull_native);
            v100 = sub_1BA6E35A8((uint64_t)v339, v81);
            if ((v99 & 1) != (v101 & 1))
              goto LABEL_132;
            v51 = v100;
            v102 = (_QWORD *)v357;
            if ((v99 & 1) == 0)
              goto LABEL_32;
LABEL_30:
            v103 = (_QWORD *)(v102[7] + 24 * v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *v103 = *((_QWORD *)&v320 + 1);
            v103[1] = v91;
            v103[2] = v89;
LABEL_34:
            v52 = (_QWORD *)v330;
            v71 = v340;
            *v85 = v102;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_endAccess();
            goto LABEL_35;
          }
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v102 = (_QWORD *)v357;
            if ((v95 & 1) != 0)
              goto LABEL_30;
          }
          else
          {
            sub_1BB4C1F6C();
            v102 = (_QWORD *)v357;
            if ((v99 & 1) != 0)
              goto LABEL_30;
          }
LABEL_32:
          v102[(v51 >> 6) + 8] |= 1 << v51;
          v104 = (_QWORD *)(v102[6] + 16 * v51);
          *v104 = v339;
          v104[1] = v81;
          v105 = (_QWORD *)(v102[7] + 24 * v51);
          *v105 = *((_QWORD *)&v320 + 1);
          v105[1] = v91;
          v105[2] = v89;
          v106 = v102[2];
          v107 = __OFADD__(v106, 1);
          v108 = v106 + 1;
          if (v107)
            goto LABEL_128;
          v102[2] = v108;
          swift_bridgeObjectRetain();
          goto LABEL_34;
        }
      }
      else
      {
        sub_1BA79DDC8(v391, 0);
      }
      v314 = 0;
      v79 = v338;
      goto LABEL_92;
  }
  v314 = v76 & 1;
  v316 = *(char **)(v77 + 16);
  if (!v316)
    goto LABEL_91;
  v315 = (_QWORD *)(v77 + 32);
  v308 = v77;
  v309 = v76;
  sub_1BA8C89D0(v76, v77);
  v125 = 0;
  while (1)
  {
    v329 = v125;
    v126 = &v315[3 * (_QWORD)v125];
    v128 = *v126;
    v127 = v126[1];
    LODWORD(v318) = *((unsigned __int8 *)v126 + 16);
    v129 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v129 != -1)
      swift_once();
    v130 = qword_1ED4768D0;
    v131 = *(_QWORD *)(qword_1ED4768D0 + 24);
    swift_bridgeObjectRetain();
    sub_1BB86DD20();
    v132 = (_QWORD *)(v130 + 16);
    swift_beginAccess();
    v133 = *(_QWORD *)(v130 + 16);
    if (!*(_QWORD *)(v133 + 16))
      break;
    swift_bridgeObjectRetain();
    v134 = sub_1BA6E35A8(v128, v127);
    if ((v135 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      break;
    }
    v136 = *(_QWORD *)(*(_QWORD *)(v133 + 56) + 24 * v134 + 16);
    swift_endAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v52 = (_QWORD *)v330;
LABEL_74:
    swift_bridgeObjectRelease();
    sub_1BB86DD2C();
    swift_bridgeObjectRelease();
    v161 = *(_QWORD *)(v136 + 16);
    if (!v161)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_55;
    }
    *((_QWORD *)&v320 + 1) = v127;
    v331 = v136;
    v162 = (uint64_t *)(v136 + 64);
    do
    {
      v163 = *(v162 - 1);
      v164 = *v162;
      v165 = *(_BYTE *)(v163 + 32);
      v166 = v165 & 0x3F;
      v167 = (unint64_t)((1 << v165) + 63) >> 6;
      v168 = 8 * v167;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v169 = swift_bridgeObjectRetain();
      if (v166 <= 0xD || (v169 = swift_stdlib_isStackAllocationSafe(), (v169 & 1) != 0))
      {
        v339 = &v307;
        MEMORY[0x1E0C80A78](v169);
        bzero((char *)&v307 - ((v168 + 15) & 0x3FFFFFFFFFFFFFF0), v168);
        v71 = v340;
        v170 = v341;
        v171 = sub_1BA6EB5B4((uint64_t)&v307 - ((v168 + 15) & 0x3FFFFFFFFFFFFFF0), v167, v163, (uint64_t)v340);
        swift_bridgeObjectRelease();
        v341 = v170;
        if (v170)
        {
LABEL_130:
          v300 = v341;
          swift_willThrow();

          __break(1u);
LABEL_131:
          swift_bridgeObjectRelease();

          MEMORY[0x1BCCE5C38](v71, -1, -1);
          __break(1u);
LABEL_132:
          result = sub_1BB874560();
          __break(1u);
          return result;
        }
      }
      else
      {
        v71 = (int *)swift_slowAlloc();
        bzero(v71, v168);
        v172 = v341;
        v173 = sub_1BA6EB5B4((uint64_t)v71, v167, v163, (uint64_t)v340);
        v341 = v172;
        if (v172)
          goto LABEL_131;
        v171 = v173;
        swift_bridgeObjectRelease();
        MEMORY[0x1BCCE5C38](v71, -1, -1);
        v71 = v340;
      }
      v174 = sub_1BA6EB330(v171, v163);
      swift_release();
      if ((v174 & 1) != 0)
      {
        v175 = sub_1BA6EBD20((uint64_t)v71, v164);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v175 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v314 = v318;
          goto LABEL_88;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v162 += 5;
      --v161;
    }
    while (v161);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_88:
    v52 = (_QWORD *)v330;
LABEL_55:
    v125 = v329 + 1;
    if (v329 + 1 == v316)
    {
      v77 = v308;
      v76 = v309;
LABEL_90:
      sub_1BA79DDC8(v76, v77);
LABEL_91:
      v79 = v338;
      sub_1BA79DEC4((uint64_t)v338, (uint64_t)&v387);
      goto LABEL_92;
    }
  }
  swift_endAccess();
  *(_QWORD *)&v369 = v128;
  *((_QWORD *)&v369 + 1) = v127;
  swift_bridgeObjectRetain();
  sub_1BA6F2E38((uint64_t *)&v369, &v387);
  v137 = *((_QWORD *)&v387 + 1);
  *((_QWORD *)&v320 + 1) = v387;
  v138 = v388;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v339 = (_QWORD *)v137;
  swift_bridgeObjectRetain();
  v331 = v138;
  swift_bridgeObjectRetain();
  v139 = swift_isUniquelyReferenced_nonNull_native();
  v140 = v127;
  v141 = v139;
  *(_QWORD *)&v369 = *v132;
  v142 = v369;
  *v132 = 0x8000000000000000;
  v143 = v128;
  v144 = v140;
  v51 = sub_1BA6E35A8(v128, v140);
  v146 = *(_QWORD *)(v142 + 16);
  v147 = (v145 & 1) == 0;
  v148 = v146 + v147;
  if (!__OFADD__(v146, v147))
  {
    v149 = v145;
    v150 = *(_QWORD *)(v142 + 24);
    *(_QWORD *)&v320 = v131;
    if (v150 < v148)
    {
      sub_1BA7AAAE4(v148, v141);
      v151 = sub_1BA6E35A8(v143, v144);
      if ((v149 & 1) != (v152 & 1))
        goto LABEL_132;
      v51 = v151;
      v153 = (_QWORD *)v369;
      if ((v149 & 1) == 0)
        goto LABEL_71;
LABEL_69:
      v154 = (_QWORD *)(v153[7] + 24 * v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v155 = (uint64_t)v339;
      v71 = v340;
      *v154 = *((_QWORD *)&v320 + 1);
      v154[1] = v155;
      v136 = v331;
      v154[2] = v331;
      v52 = (_QWORD *)v330;
      v127 = v144;
LABEL_73:
      *v132 = v153;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_74;
    }
    if ((v141 & 1) != 0)
    {
      v153 = (_QWORD *)v369;
      if ((v145 & 1) != 0)
        goto LABEL_69;
    }
    else
    {
      sub_1BB4C1F6C();
      v153 = (_QWORD *)v369;
      if ((v149 & 1) != 0)
        goto LABEL_69;
    }
LABEL_71:
    v153[(v51 >> 6) + 8] |= 1 << v51;
    v156 = (uint64_t *)(v153[6] + 16 * v51);
    *v156 = v143;
    v156[1] = v144;
    v127 = v144;
    v157 = (_QWORD *)(v153[7] + 24 * v51);
    v158 = (uint64_t)v339;
    *v157 = *((_QWORD *)&v320 + 1);
    v157[1] = v158;
    v136 = v331;
    v157[2] = v331;
    v159 = v153[2];
    v107 = __OFADD__(v159, 1);
    v160 = v159 + 1;
    if (v107)
      goto LABEL_126;
    v153[2] = v160;
    swift_bridgeObjectRetain();
    v52 = (_QWORD *)v330;
    v71 = v340;
    goto LABEL_73;
  }
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  swift_once();
LABEL_95:
  sub_1BB86D270();
  swift_release();
  v185 = v357;
  v186 = v336;
  v187 = (uint64_t)v333;
  sub_1BA4C2DD8(v336, (uint64_t)v333, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v188 = *(_QWORD *)(v51 + 272);
  v189 = sub_1BA79E0CC(0, v315);
  v190 = *(_QWORD *)(v51 + 96);
  type metadata accessor for FormatNodeBinder(0);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  v315 = sub_1BAB1920C(v187, v312, v188, v189 & 1, v190);
  sub_1BA4C2DD8(v186, v187, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v191 = *(_QWORD *)(v187 + 64);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v187, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  v192 = *(_QWORD *)(v51 + 144);
  LODWORD(v308) = v314 & 1;
  LOBYTE(v357) = v314 & 1;
  LODWORD(v312) = v185;
  BYTE1(v357) = v185;
  *((_QWORD *)&v357 + 1) = v339;
  *(_QWORD *)&v358 = v316;
  v193 = v318;
  *((_QWORD *)&v358 + 1) = v318;
  *(_QWORD *)&v359 = v329;
  *((_QWORD *)&v359 + 1) = v331;
  v360 = v320;
  sub_1BA4C2DD8(v337, v334, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  v194 = v317[2];
  sub_1BA4C010C((uint64_t)v335, (uint64_t)&v366);
  v349 = 0u;
  v350 = 0u;
  v348 = 0u;
  v351 = -1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA70A884(v193, v329);
  v195 = v194;
  swift_retain();
  v196 = v313;
  swift_retain();
  v197 = (uint64_t)v340;
  swift_bridgeObjectRetain();
  v198 = MEMORY[0x1E0DEE9D8];
  v199 = sub_1BA79E2DC(MEMORY[0x1E0DEE9D8]);
  type metadata accessor for FormatNodeBinderContext();
  swift_allocObject();
  v314 = v191;
  v301 = v199;
  v302 = v195;
  v200 = v334;
  v201 = v315;
  v202 = sub_1BB3759B4(v319, v192, (char *)&v357, v196, v197, v334, 0, 0, v301, v302, *((uint64_t *)&v302 + 1), (uint64_t)&v366, &v348, v198, v191);
  v203 = *(_OWORD *)(v51 + 80);
  v204 = *(_OWORD *)(v51 + 112);
  v375 = *(_OWORD *)(v51 + 96);
  v376 = v204;
  v205 = *(_OWORD *)(v51 + 112);
  v377 = *(_OWORD *)(v51 + 128);
  v206 = *(_OWORD *)(v51 + 16);
  v207 = *(_OWORD *)(v51 + 48);
  v371 = *(_OWORD *)(v51 + 32);
  v372 = v207;
  v208 = *(_OWORD *)(v51 + 48);
  v209 = *(_OWORD *)(v51 + 80);
  v373 = *(_OWORD *)(v51 + 64);
  v374 = v209;
  v210 = *(_OWORD *)(v51 + 16);
  v369 = *(_OWORD *)v51;
  v370 = v210;
  v363 = v375;
  v364 = v205;
  v365 = *(_OWORD *)(v51 + 128);
  v359 = v371;
  v360 = v208;
  v361 = v373;
  v362 = v203;
  v357 = v369;
  v358 = v206;
  sub_1BA8C88FC((uint64_t)&v369);
  v211 = v341;
  FormatGroup.bind(binder:context:)((uint64_t)v201, v202);
  v341 = v211;
  if (v211)
  {
    sub_1BA8C89E4((uint64_t)&v369);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA70AB94(v318, v329);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_107;
  }
  v307 = v202;
  sub_1BA8C89E4((uint64_t)&v369);
  v212 = (uint64_t)v201 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
  swift_beginAccess();
  v213 = (uint64_t)v333;
  sub_1BA4C2DD8(v212, (uint64_t)v333, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA79F5AC(v213);
  sub_1BA4A2E80(v213, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  swift_beginAccess();
  v214 = *(_OWORD *)(v201 + 5);
  v346[0] = *(_OWORD *)(v201 + 3);
  v346[1] = v214;
  v215 = *(_OWORD *)(v201 + 9);
  v346[2] = *(_OWORD *)(v201 + 7);
  v346[3] = v215;
  sub_1BA4C2DD8(v337, v200, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  v336 = *(_QWORD *)(v51 + 144);
  v216 = swift_allocObject();
  *(_QWORD *)(v216 + 16) = MEMORY[0x1E0DEE9E0];
  swift_beginAccess();
  v217 = *(_QWORD *)(v196 + 24);
  v218 = swift_allocObject();
  v219 = v200;
  v333 = (_QWORD *)v218;
  *(_QWORD *)(v218 + 16) = v216;
  *(_QWORD *)(v218 + 24) = v217;
  sub_1BA70A8DC((uint64_t)v346);
  swift_retain();
  v220 = v316;
  swift_bridgeObjectRetain();
  v221 = v318;
  v222 = v329;
  v223 = v331;
  v224 = *((_QWORD *)&v320 + 1);
  v225 = v320;
  sub_1BA70A884(v318, v329);
  sub_1BA70A8DC((uint64_t)v346);
  swift_retain();
  swift_bridgeObjectRetain();
  v226 = MEMORY[0x1E0DEE9D8];
  v311 = sub_1BA79E2DC(MEMORY[0x1E0DEE9D8]);
  v227 = v219;
  v228 = v324;
  sub_1BA4C2DD8(v227, v324, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  LOBYTE(v357) = v308;
  BYTE1(v357) = v312;
  *((_QWORD *)&v357 + 1) = v339;
  *(_QWORD *)&v358 = v220;
  *((_QWORD *)&v358 + 1) = v221;
  *(_QWORD *)&v359 = v222;
  *((_QWORD *)&v359 + 1) = v223;
  v360 = __PAIR128__(v224, v225);
  v368 = 0;
  v366 = 0u;
  v367 = 0u;
  v349 = 0u;
  v350 = 0u;
  v348 = 0u;
  v229 = v226;
  v230 = sub_1BA79F3DC(v226);
  type metadata accessor for FormatNodeContext();
  swift_allocObject();
  v51 = (unint64_t)v338;
  v231 = sub_1BB29AEAC(v228, (char *)&v357, v336, v319, v346, (uint64_t)v340, (uint64_t)v333, v311, (uint64_t)&v366, v229, v314, &v348, v230, 0, 0, 0, 0, 0, 0,
           0);
  sub_1BA4A2E80(v334, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  v232 = *(_QWORD *)(v51 + 88);
  v233 = *(_QWORD *)(v232 + 16);
  if (v233)
  {
    v333 = (_QWORD *)v231;
    *(_QWORD *)&v357 = v229;
    swift_bridgeObjectRetain();
    sub_1BAC7A154(0, v233, 0);
    v229 = v357;
    v324 = v232;
    v234 = (uint64_t *)(v232 + 48);
    do
    {
      v339 = (_QWORD *)v229;
      v340 = (int *)v233;
      v235 = *(v234 - 2);
      v236 = *(v234 - 1);
      v237 = v234[1];
      v336 = *v234;
      v239 = v234[2];
      v238 = v234[3];
      v240 = v234[4];
      v334 = v234[5];
      v241 = swift_allocObject();
      *(_QWORD *)(v241 + 16) = v235;
      *(_QWORD *)(v241 + 24) = v236;
      v242 = v336;
      *(_QWORD *)(v241 + 32) = v336;
      *(_QWORD *)(v241 + 40) = v237;
      *(_QWORD *)(v241 + 48) = v239;
      *(_QWORD *)(v241 + 56) = v238;
      v243 = v334;
      *(_QWORD *)(v241 + 64) = v240;
      *(_QWORD *)(v241 + 72) = v243;
      v244 = v240;
      v229 = (uint64_t)v339;
      sub_1BA76B724(v235, v236, v242, v237, v239, v238, v244);
      *(_QWORD *)&v357 = v229;
      v246 = *(_QWORD *)(v229 + 16);
      v245 = *(_QWORD *)(v229 + 24);
      if (v246 >= v245 >> 1)
      {
        sub_1BAC7A154(v245 > 1, v246 + 1, 1);
        v229 = v357;
      }
      v234 += 8;
      *(_QWORD *)(v229 + 16) = v246 + 1;
      *(_QWORD *)(v229 + 8 * v246 + 32) = v241 | 0x8000000000000000;
      v233 = (int64_t)v340 - 1;
    }
    while (v340 != (int *)1);
    swift_bridgeObjectRelease();
    v51 = (unint64_t)v338;
  }
  v247 = sub_1BA7BD850(v229);
  swift_release();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatNodeCache();
  v248 = swift_allocObject();
  v249 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v248 + 16) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v248 + 24) = v249;
  *(_QWORD *)(v248 + 32) = v249;
  *(_QWORD *)(v248 + 40) = v249;
  *(_QWORD *)(v248 + 48) = v249;
  *(_QWORD *)(v248 + 56) = v249;
  *(_BYTE *)(v248 + 64) = 0;
  sub_1BA4C010C((uint64_t)v335, (uint64_t)&v357);
  v250 = *(_QWORD *)(v51 + 272);
  type metadata accessor for FormatNodeState();
  v251 = (_QWORD *)swift_allocObject();
  v252 = v317;
  v251[2] = v328;
  v251[3] = v252;
  v251[4] = v248;
  sub_1BA4CECCC(&v357, (uint64_t)(v251 + 5));
  v251[10] = v250;
  v253 = sub_1BB86D678();
  v254 = (unsigned int *)MEMORY[0x1E0DB5D88];
  if (!(_DWORD)v309)
    v254 = (unsigned int *)MEMORY[0x1E0DB5CF8];
  v255 = v327;
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v253 - 8) + 104))(v327, *v254, v253);
  v256 = (*(uint64_t (**)(char *, _QWORD, _QWORD *))(v325 + 104))(v255, *MEMORY[0x1E0DB6200], v326);
  v340 = (int *)&v307;
  MEMORY[0x1E0C80A78](v256);
  *((_QWORD *)&v303 + 1) = v51;
  v304 = v247;
  v339 = (_QWORD *)v247;
  v305 = (unint64_t)v251;
  sub_1BA71AD78(0, &qword_1ED3C45B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v257 = v341;
  v258 = sub_1BB86DB4C();
  v341 = v257;
  v259 = v337;
  if (v257)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA70AB94(v318, v329);
    swift_release();
    swift_release();
    swift_release();
    sub_1BA7A652C((uint64_t)v346);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_107;
  }
  v336 = v258;
  *((_QWORD *)&v367 + 1) = &type metadata for FormatGroupLayoutFactory;
  v368 = v321;
  *(_QWORD *)&v366 = swift_allocObject();
  sub_1BA79DEC4(v51, v366 + 16);
  sub_1BA4C2DD8(v259, v323, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  v266 = *(_OWORD *)(v51 + 112);
  v363 = *(_OWORD *)(v51 + 96);
  v364 = v266;
  v365 = *(_OWORD *)(v51 + 128);
  v267 = *(_OWORD *)(v51 + 48);
  v359 = *(_OWORD *)(v51 + 32);
  v360 = v267;
  v268 = *(_OWORD *)(v51 + 80);
  v361 = *(_OWORD *)(v51 + 64);
  v362 = v268;
  v269 = *(_OWORD *)(v51 + 16);
  v357 = *(_OWORD *)v51;
  v358 = v269;
  v270 = v251[3];
  v272 = *(_QWORD *)(v51 + 144);
  v271 = *(_QWORD **)(v51 + 152);
  sub_1BA4C010C((uint64_t)v335, (uint64_t)v356);
  sub_1BA4C010C(v51 + 208, (uint64_t)v355);
  v273 = *(char **)(v51 + 264);
  v337 = *(_QWORD *)(v51 + 256);
  v274 = *(_QWORD *)&v346[0];
  v347 = *(_QWORD *)&v346[0];
  sub_1BA8C88FC((uint64_t)&v357);
  swift_bridgeObjectRetain();
  v334 = v272;
  swift_retain();
  v338 = (_QWORD *)v270;
  swift_retain();
  v335 = v271;
  swift_bridgeObjectRetain();
  sub_1BA781758((uint64_t)&v347);
  v275 = sub_1BA79E32C(v274);
  sub_1BA4F6CCC((uint64_t)&v347);
  sub_1BA7A652C((uint64_t)v346);
  v276 = v275[2];
  if (v276)
  {
    v327 = v273;
    v333 = v251;
    v342 = MEMORY[0x1E0DEE9D8];
    sub_1BA6EFF20(0, v276, 0);
    v326 = v275;
    v277 = (uint64_t)(v275 + 4);
    v278 = v342;
    do
    {
      sub_1BA7BC108(v277, (uint64_t)&v348, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      sub_1BA4C010C((uint64_t)&v348, (uint64_t)v352);
      sub_1BA79E2F0((uint64_t)&v348, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA6EFF20(0, *(_QWORD *)(v278 + 16) + 1, 1);
        v278 = v342;
      }
      v280 = *(_QWORD *)(v278 + 16);
      v279 = *(_QWORD *)(v278 + 24);
      if (v280 >= v279 >> 1)
        sub_1BA6EFF20(v279 > 1, v280 + 1, 1);
      v281 = v353;
      v282 = v354;
      v283 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v352, v353);
      v284 = MEMORY[0x1E0C80A78](v283);
      v286 = (char *)&v307 - ((v285 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v287 + 16))(v286, v284);
      sub_1BA6AC628(v280, (uint64_t)v286, &v342, v281, v282);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v352);
      v278 = v342;
      v277 += 104;
      --v276;
      v288 = v329;
    }
    while (v276);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v273 = v327;
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v278 = MEMORY[0x1E0DEE9D8];
    v288 = v329;
  }
  swift_bridgeObjectRelease();
  sub_1BA70AB94(v318, v288);
  swift_release();
  swift_release();
  v289 = (int *)type metadata accessor for FormatGroupLayoutFactory.Bound();
  v290 = v322;
  v322[3] = (uint64_t)v289;
  v290[4] = sub_1BA4A2870(&qword_1ED3B7768, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupLayoutFactory.Bound, (uint64_t)&unk_1BB93ABBC);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v290);
  *boxed_opaque_existential_0 = v328;
  sub_1BA4CECCC(&v366, (uint64_t)(boxed_opaque_existential_0 + 1));
  sub_1BA5193C4(v323, (uint64_t)boxed_opaque_existential_0 + v289[6], (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v289[7]) = v336;
  v292 = (_OWORD *)((char *)boxed_opaque_existential_0 + v289[8]);
  *v292 = v357;
  v293 = v362;
  v294 = v363;
  v295 = v365;
  v292[7] = v364;
  v292[8] = v295;
  v292[5] = v293;
  v292[6] = v294;
  v296 = v358;
  v297 = v359;
  v298 = v361;
  v292[3] = v360;
  v292[4] = v298;
  v292[1] = v296;
  v292[2] = v297;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v289[9]) = v334;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v289[10]) = (uint64_t)v338;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v289[11]) = (uint64_t)v335;
  sub_1BA4CECCC(v356, (uint64_t)boxed_opaque_existential_0 + v289[12]);
  *((_BYTE *)boxed_opaque_existential_0 + v289[13]) = v309;
  result = sub_1BA4CECCC(v355, (uint64_t)boxed_opaque_existential_0 + v289[14]);
  v299 = (uint64_t *)((char *)boxed_opaque_existential_0 + v289[15]);
  *v299 = v337;
  v299[1] = v273;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + v289[16]) = v278;
  return result;
}

uint64_t sub_1BA79DDC8(uint64_t a1, unint64_t a2)
{
  if (a2 != 2)
    return sub_1BA78DE14(a1, a2);
  return a1;
}

BOOL sub_1BA79DDD8(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  sub_1BB8745CC();
  sub_1BB8745D8();
  v4 = sub_1BB874608();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1BA79DEC4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FormatGroupLayoutFactory(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for FormatGroupLayoutFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = (_OWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 <= 2)
  {
    *(_OWORD *)(a1 + 64) = *v7;
  }
  else
  {
    *(_BYTE *)(a1 + 64) = *(_BYTE *)v7;
    *(_QWORD *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v12 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  v13 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 184) = v13;
  v21 = v13;
  v22 = **(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v22(a1 + 160, a2 + 160, v21);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  v14 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 232) = v14;
  v15 = v14;
  v16 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
  swift_retain();
  v16(a1 + 208, a2 + 208, v15);
  v17 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v17;
  v19 = *(_QWORD *)(a2 + 264);
  v18 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v19;
  *(_QWORD *)(a1 + 272) = v18;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1BA79E0D0(uint64_t a1)
{
  destroy for FormatGroupLayoutFactory(a1);
  return a1;
}

uint64_t destroy for FormatGroupLayoutFactory(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 72) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 160);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 208);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_1BA79E1C4(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a2(0);
  v5 = (_QWORD *)sub_1BB873F6C();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain();
    swift_retain();
    result = a3(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (_QWORD *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA79E2DC(uint64_t a1)
{
  return sub_1BA79E1C4(a1, (void (*)(_QWORD))sub_1BA6F7A14, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

uint64_t sub_1BA79E2F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;

  sub_1BA7BC154(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

_QWORD *sub_1BA79E32C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C0570, (uint64_t (*)(uint64_t))sub_1BA785ECC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 104);
  v5 = sub_1BA7F38CC((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1BA6EBD18();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1BA79E438(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t result;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t i;
  BOOL v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[9];
  uint64_t v43;

  sub_1BA79F380(0, (unint64_t *)&qword_1ED3CFAA0, (void (*)(uint64_t))type metadata accessor for FormatSlot);
  result = sub_1BB873F48();
  v5 = (_QWORD *)result;
  v6 = 0;
  v36 = a3;
  v37 = (_QWORD *)result;
  v9 = *(_QWORD *)(a3 + 64);
  v8 = a3 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v32 = v8;
  v33 = (unint64_t)(v10 + 63) >> 6;
  v34 = result + 64;
  if (!v12)
    goto LABEL_5;
LABEL_4:
  v38 = (v12 - 1) & v12;
  v39 = v6;
  for (i = __clz(__rbit64(v12)) | (v6 << 6); ; i = __clz(__rbit64(v16)) + (v15 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(v36 + 48) + 16 * i);
    v19 = *v18;
    v20 = v18[1];
    v21 = (_QWORD *)(*(_QWORD *)(v36 + 56) + (i << 6));
    v22 = v21[1];
    v24 = v21[2];
    v23 = v21[3];
    v26 = v21[4];
    v25 = v21[5];
    v28 = v21[6];
    v27 = v21[7];
    v42[0] = *v21;
    v42[1] = v22;
    v40 = v19;
    v42[2] = v24;
    v42[3] = v23;
    v42[4] = v26;
    v42[5] = v25;
    v42[6] = v28;
    v42[7] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v43, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v41)
    {
      swift_bridgeObjectRelease();
      v5 = v37;
      swift_release();
      return (uint64_t)v5;
    }
    *(_QWORD *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v5 = v37;
    v29 = (_QWORD *)(v37[6] + 16 * i);
    *v29 = v40;
    v29[1] = v20;
    *(_QWORD *)(v37[7] + 8 * i) = v43;
    v30 = v37[2];
    v14 = __OFADD__(v30, 1);
    v31 = v30 + 1;
    if (v14)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v37[2] = v31;
    v12 = v38;
    v6 = v39;
    if (v38)
      goto LABEL_4;
LABEL_5:
    v14 = __OFADD__(v6, 1);
    v15 = v6 + 1;
    if (v14)
      goto LABEL_27;
    if (v15 >= v33)
      return (uint64_t)v5;
    v16 = *(_QWORD *)(v32 + 8 * v15);
    if (!v16)
      break;
LABEL_15:
    v38 = (v16 - 1) & v16;
    v39 = v15;
  }
  v17 = v15 + 1;
  if (v15 + 1 >= v33)
    return (uint64_t)v5;
  v16 = *(_QWORD *)(v32 + 8 * v17);
  if (v16)
    goto LABEL_14;
  v17 = v15 + 2;
  if (v15 + 2 >= v33)
    return (uint64_t)v5;
  v16 = *(_QWORD *)(v32 + 8 * v17);
  if (v16)
    goto LABEL_14;
  v17 = v15 + 3;
  if (v15 + 3 >= v33)
    return (uint64_t)v5;
  v16 = *(_QWORD *)(v32 + 8 * v17);
  if (v16)
  {
LABEL_14:
    v15 = v17;
    goto LABEL_15;
  }
  while (1)
  {
    v15 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v15 >= v33)
      return (uint64_t)v5;
    v16 = *(_QWORD *)(v32 + 8 * v15);
    ++v17;
    if (v16)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t *sub_1BA79E718@<X0>(_QWORD *a1@<X0>, uint64_t **a2@<X8>)
{
  uint64_t v2;

  return sub_1BA79E730(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t *sub_1BA79E730@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t **a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *result;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a1[4];
  v8 = a1[5];
  v9 = a1[6];
  v10 = a1[7];
  *(_QWORD *)&v16 = *a1;
  *((_QWORD *)&v16 + 1) = v4;
  v17 = v5;
  v18 = v6;
  v19 = v7;
  v20 = v8;
  v21 = v9;
  v22 = v10;
  v11 = *(_QWORD *)(a2 + 248);
  v12 = *(_QWORD *)(a3 + 96);
  type metadata accessor for FormatSlot();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v13 = v23;
  result = sub_1BA79E844(&v16, v11, v12);
  if (!v13)
    *a4 = result;
  return result;
}

uint64_t type metadata accessor for FormatSlot()
{
  return objc_opt_self();
}

uint64_t *sub_1BA79E844(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v5 = v4;
  v6 = v3;
  v48 = *v6;
  v49 = a3;
  v50 = type metadata accessor for FormatOption();
  v9 = *(uint64_t **)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[1];
  v52 = *a1;
  v53 = v12;
  v13 = a1[3];
  v54 = a1[2];
  v55 = v13;
  v14 = *(_QWORD *)a1;
  v15 = *((_QWORD *)a1 + 7);
  v16 = v52;
  *((_OWORD *)v6 + 1) = v52;
  v6[4] = v14;
  *(_OWORD *)(v6 + 5) = *(__int128 *)((char *)a1 + 8);
  *(_OWORD *)(v6 + 7) = *(__int128 *)((char *)a1 + 24);
  *(_OWORD *)(v6 + 9) = *(__int128 *)((char *)a1 + 40);
  v6[11] = v15;
  *((_BYTE *)v6 + 96) = 0;
  v17 = v55;
  v18 = *((_QWORD *)&v53 + 1);
  v56 = *((_QWORD *)&v55 + 1);
  v57 = *((_QWORD *)&v53 + 1);
  v6[14] = *((_QWORD *)&v55 + 1);
  v6[15] = v18;
  if (*(_QWORD *)(v17 + 16))
  {
    v47 = v9;
    v19 = a2;
    v20 = *(_QWORD *)(a2 + 72);
    v21 = *(_QWORD *)(v20 + 16);
    swift_bridgeObjectRetain_n();
    if (v21)
    {
      swift_bridgeObjectRetain();
      sub_1BA79EDD0((uint64_t)&v52);
      sub_1BA781758((uint64_t)&v56);
      sub_1BA781758((uint64_t)&v57);
      v22 = sub_1BA6E35A8(v16, *((uint64_t *)&v16 + 1));
      if ((v23 & 1) != 0)
      {
        v24 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a2 = v19;
        v9 = v47;
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA79EDD0((uint64_t)&v52);
      sub_1BA781758((uint64_t)&v56);
      sub_1BA781758((uint64_t)&v57);
    }
    a2 = v19;
    v9 = v47;
    v24 = sub_1BA7AD1F4(MEMORY[0x1E0DEE9D8]);
LABEL_14:
    swift_retain();
    swift_bridgeObjectRetain();
    v35 = sub_1BA7ABE88(v17, a2, v24);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      sub_1BA79ED54((uint64_t)&v52);
      swift_bridgeObjectRelease();
      v36 = 0;
      goto LABEL_21;
    }
    v25 = v35;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
    v26 = *(_QWORD *)(v25 + 16);
    if (!v26)
      goto LABEL_17;
LABEL_6:
    v45 = a2;
    v46 = v4;
    v47 = v6;
    v51 = MEMORY[0x1E0DEE9D8];
    sub_1BA76B828(0, v26, 0);
    v27 = v51;
    v28 = *((unsigned __int8 *)v9 + 80);
    v44 = v25;
    v29 = v25 + ((v28 + 32) & ~v28);
    v30 = v9[9];
    do
    {
      sub_1BA4C2DD8(v29, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v31 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v11, v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v51 = v27;
      v34 = *(_QWORD *)(v27 + 16);
      v33 = *(_QWORD *)(v27 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1BA76B828(v33 > 1, v34 + 1, 1);
        v27 = v51;
      }
      *(_QWORD *)(v27 + 16) = v34 + 1;
      *(_QWORD *)(v27 + 8 * v34 + 32) = v31 | 0x2000000000000004;
      v29 += v30;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    v5 = v46;
    v6 = v47;
    a2 = v45;
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  sub_1BA79EDD0((uint64_t)&v52);
  sub_1BA781758((uint64_t)&v56);
  sub_1BA781758((uint64_t)&v57);
  v25 = MEMORY[0x1E0DEE9D8];
  v26 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (v26)
    goto LABEL_6;
LABEL_17:
  swift_bridgeObjectRelease();
  v27 = MEMORY[0x1E0DEE9D8];
LABEL_18:
  v6[13] = v27;
  v37 = v54;
  sub_1BA79EDD0((uint64_t)&v52);
  swift_retain();
  v38 = sub_1BA79EE4C(v37, a2, (uint64_t *)&v52);
  v39 = v49;
  if (!v5)
  {
    v40 = v38;
    sub_1BA79ED54((uint64_t)&v52);
    swift_release();
    v6[16] = v40;
    v41 = *((_QWORD *)&v54 + 1);
    v58 = *((_QWORD *)&v54 + 1);
    sub_1BA79EDD0((uint64_t)&v52);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA781758((uint64_t)&v58);
    v43 = sub_1BA79F194(MEMORY[0x1E0DEE9E0], v41, v39, a2, (uint64_t *)&v52);
    sub_1BA79ED54((uint64_t)&v52);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA79ED54((uint64_t)&v52);
    sub_1BA4F6CCC((uint64_t)&v58);
    swift_bridgeObjectRelease();
    swift_release();
    v6[17] = v43;
    return v6;
  }
  sub_1BA79ED54((uint64_t)&v52);
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_1BA79ED54((uint64_t)&v52);
  v36 = 1;
LABEL_21:
  swift_bridgeObjectRelease();
  sub_1BA5386F4(v6[4], v6[5], v6[6], v6[7], v6[8], v6[9], v6[10], v6[11], *((_BYTE *)v6 + 96));
  if (v36)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return v6;
}

uint64_t sub_1BA79ED54(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA79EDD0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA79EE4C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t i;
  BOOL v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_1BA79F380(0, (unint64_t *)&qword_1ED3C04D8, (void (*)(uint64_t))sub_1BA584114);
  result = sub_1BB873F48();
  v6 = (_QWORD *)result;
  v7 = 0;
  v39 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v36 = v9;
  v37 = (unint64_t)(v11 + 63) >> 6;
  v38 = result + 64;
  v33 = a3;
  v34 = (_QWORD *)result;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v14 | (v7 << 6); ; i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(v39 + 48) + 16 * i);
    v20 = *v19;
    v21 = v19[1];
    v22 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * i);
    if (!*(_QWORD *)(v22 + 16))
    {
      result = swift_bridgeObjectRetain();
      v29 = MEMORY[0x1E0DEE9D8];
      goto LABEL_26;
    }
    v40 = *v19;
    v23 = a3[1];
    v24 = *(_QWORD *)(a2 + 80);
    if (!*(_QWORD *)(v24 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_23:
      v28 = sub_1BA7AD1F4(MEMORY[0x1E0DEE9D8]);
      goto LABEL_24;
    }
    v25 = *a3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = sub_1BA6E35A8(v25, v23);
    if ((v27 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    v28 = *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_24:
    swift_retain();
    swift_bridgeObjectRetain();
    v29 = sub_1BA7ABE88(v22, a2, v28);
    swift_bridgeObjectRelease();
    if (v41)
    {
      swift_bridgeObjectRelease();
      v6 = v34;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      return (uint64_t)v6;
    }
    swift_bridgeObjectRelease();
    swift_release();
    result = swift_bridgeObjectRelease_n();
    a3 = v33;
    v6 = v34;
    v20 = v40;
LABEL_26:
    *(_QWORD *)(v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v30 = (_QWORD *)(v6[6] + 16 * i);
    *v30 = v20;
    v30[1] = v21;
    *(_QWORD *)(v6[7] + 8 * i) = v29;
    v31 = v6[2];
    v16 = __OFADD__(v31, 1);
    v32 = v31 + 1;
    if (v16)
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v6[2] = v32;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v16 = __OFADD__(v7++, 1);
    if (v16)
      goto LABEL_36;
    if (v7 >= v37)
      return (uint64_t)v6;
    v17 = *(_QWORD *)(v36 + 8 * v7);
    if (!v17)
      break;
LABEL_15:
    v13 = (v17 - 1) & v17;
  }
  v18 = v7 + 1;
  if (v7 + 1 >= v37)
    return (uint64_t)v6;
  v17 = *(_QWORD *)(v36 + 8 * v18);
  if (v17)
    goto LABEL_14;
  v18 = v7 + 2;
  if (v7 + 2 >= v37)
    return (uint64_t)v6;
  v17 = *(_QWORD *)(v36 + 8 * v18);
  if (v17)
    goto LABEL_14;
  v18 = v7 + 3;
  if (v7 + 3 >= v37)
    return (uint64_t)v6;
  v17 = *(_QWORD *)(v36 + 8 * v18);
  if (v17)
  {
LABEL_14:
    v7 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    v7 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v7 >= v37)
      return (uint64_t)v6;
    v17 = *(_QWORD *)(v36 + 8 * v7);
    ++v18;
    if (v17)
      goto LABEL_15;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BA79F194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24[2];
  uint64_t v25;

  v25 = a1;
  v10 = a2 + 64;
  v11 = 1 << *(_BYTE *)(a2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a2 + 64);
  v23 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
    v22 = v21[1];
    v24[0] = *v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    sub_1BB86731C((uint64_t)&v25, v24, a3, a4, a5);
    if (v5)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v13)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v23)
      goto LABEL_26;
    v19 = *(_QWORD *)(v10 + 8 * v15);
    if (!v19)
      break;
LABEL_17:
    v13 = (v19 - 1) & v19;
  }
  v20 = v15 + 1;
  if (v15 + 1 >= v23)
    goto LABEL_26;
  v19 = *(_QWORD *)(v10 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 2;
  if (v15 + 2 >= v23)
    goto LABEL_26;
  v19 = *(_QWORD *)(v10 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 3;
  if (v15 + 3 >= v23)
    goto LABEL_26;
  v19 = *(_QWORD *)(v10 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 4;
  if (v15 + 4 >= v23)
  {
LABEL_26:
    swift_release();
    return v25;
  }
  v19 = *(_QWORD *)(v10 + 8 * v20);
  if (v19)
  {
LABEL_16:
    v15 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v23)
      goto LABEL_26;
    v19 = *(_QWORD *)(v10 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1BA79F380(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BB873F78();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BA79F3DC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F5C60();
  v2 = sub_1BB873F6C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = (char *)(a1 + 128);
  while (1)
  {
    v22 = v4;
    v6 = *((_QWORD *)v5 - 11);
    v27 = *((_QWORD *)v5 - 12);
    v7 = *((_QWORD *)v5 - 9);
    v23 = *((_QWORD *)v5 - 8);
    v24 = *((_QWORD *)v5 - 10);
    v8 = *((_QWORD *)v5 - 6);
    v25 = *((_QWORD *)v5 - 7);
    v9 = *((_QWORD *)v5 - 5);
    v10 = *((_QWORD *)v5 - 4);
    v11 = *((_QWORD *)v5 - 3);
    v12 = *((_QWORD *)v5 - 2);
    v13 = *((_QWORD *)v5 - 1);
    v26 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7261E0(v10, v11, v12, v13, v26);
    result = sub_1BA6E35A8(v27, v6);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v27;
    v16[1] = v6;
    v17 = v3[7] + 88 * result;
    *(_QWORD *)v17 = v24;
    *(_QWORD *)(v17 + 8) = v7;
    *(_QWORD *)(v17 + 16) = v23;
    *(_QWORD *)(v17 + 24) = v25;
    *(_QWORD *)(v17 + 32) = v8;
    *(_QWORD *)(v17 + 40) = v9;
    *(_QWORD *)(v17 + 48) = v10;
    *(_QWORD *)(v17 + 56) = v11;
    *(_QWORD *)(v17 + 64) = v12;
    *(_QWORD *)(v17 + 72) = v13;
    *(_BYTE *)(v17 + 80) = v26;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v3[2] = v20;
    v5 += 104;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BA79F5AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  _BYTE v24[32];
  _QWORD v25[4];
  uint64_t v26;

  v3 = type metadata accessor for GroupLayoutBindingContext();
  v4 = v3;
  v5 = *(_QWORD *)(a1 + *(int *)(v3 + 60));
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v23 = v3;
    v26 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v6, 0);
    v8 = v5 + 32;
    v7 = v26;
    do
    {
      sub_1BA6AC300(v8, (uint64_t)v24);
      __swift_project_boxed_opaque_existential_1(v25, v25[3]);
      v9 = sub_1BB86DEE8();
      v11 = v10;
      sub_1BA6ABDF8((uint64_t)v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v26;
      }
      v13 = *(_QWORD *)(v7 + 16);
      v12 = *(_QWORD *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BA7447E8(v12 > 1, v13 + 1, 1);
        v7 = v26;
      }
      *(_QWORD *)(v7 + 16) = v13 + 1;
      v14 = v7 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v8 += 72;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v4 = v23;
  }
  v15 = sub_1BA6E43EC(v7);
  swift_bridgeObjectRelease();
  v16 = *(int *)(v4 + 60);
  swift_bridgeObjectRetain();
  v17 = swift_bridgeObjectRetain();
  v18 = sub_1BA79FA58(v17, v15);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v16) = v18;
  v19 = *(int *)(v4 + 56);
  v20 = *(_QWORD *)(v1 + v19);
  swift_bridgeObjectRetain();
  v21 = sub_1BA79F790(v20, v15);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  *(_QWORD *)(v1 + v19) = v21;
  return result;
}

uint64_t sub_1BA79F790(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t i;
  BOOL v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1BA79F9F0();
  result = sub_1BB873F48();
  v4 = 0;
  v26 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v24 = (unint64_t)(v8 + 63) >> 6;
  v25 = result + 64;
  v28 = (_QWORD *)result;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v29 = (v10 - 1) & v10;
  v30 = v4;
  for (i = __clz(__rbit64(v10)) | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v13 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 32 * i);
    v17 = v16[1];
    v31 = *v16;
    v18 = v16[3];
    v32 = v16[2];
    v19 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1BA6AC3AC(v19, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    result = (uint64_t)v28;
    v21 = (_QWORD *)(v28[6] + 32 * i);
    *v21 = v31;
    v21[1] = v17;
    v21[2] = v32;
    v21[3] = v18;
    *(_QWORD *)(v28[7] + 8 * i) = v20;
    v22 = v28[2];
    v12 = __OFADD__(v22, 1);
    v23 = v22 + 1;
    if (v12)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v28[2] = v23;
    v10 = v29;
    v4 = v30;
    if (v29)
      goto LABEL_4;
LABEL_5:
    v12 = __OFADD__(v4, 1);
    v13 = v4 + 1;
    if (v12)
      goto LABEL_25;
    if (v13 >= v24)
      return result;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    if (!v14)
      break;
LABEL_15:
    v29 = (v14 - 1) & v14;
    v30 = v13;
  }
  v15 = v13 + 1;
  if (v13 + 1 >= v24)
    return result;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 2;
  if (v13 + 2 >= v24)
    return result;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
    goto LABEL_14;
  v15 = v13 + 3;
  if (v13 + 3 >= v24)
    return result;
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
LABEL_14:
    v13 = v15;
    goto LABEL_15;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v24)
      return result;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_15;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1BA79F9F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFA78)
  {
    sub_1BA81DB98();
    sub_1BA82A87C();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFA78);
  }
}

uint64_t sub_1BA79FA58(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t i;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  result = MEMORY[0x1E0DEE9D8];
  v37 = MEMORY[0x1E0DEE9D8];
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v5 = 0;
    v26 = a1 + 32;
    v6 = a2 + 56;
    while (1)
    {
      sub_1BA6AC300(v26 + 72 * v5, (uint64_t)v33);
      __swift_project_boxed_opaque_existential_1(&v34, *((uint64_t *)&v35 + 1));
      v7 = sub_1BB86DEE8();
      v9 = v8;
      if (*(_QWORD *)(a2 + 16))
      {
        v10 = v7;
        sub_1BB8745CC();
        sub_1BB872A90();
        v11 = sub_1BB874608();
        v12 = -1 << *(_BYTE *)(a2 + 32);
        v13 = v11 & ~v12;
        if (((*(_QWORD *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
        {
          v14 = *(_QWORD *)(a2 + 48);
          v15 = (_QWORD *)(v14 + 16 * v13);
          v16 = *v15 == v10 && v15[1] == v9;
          if (v16 || (sub_1BB874398() & 1) != 0)
          {
LABEL_12:
            swift_bridgeObjectRelease();
            v30 = v34;
            v31 = v35;
            v32 = v36;
            v28 = v33[0];
            v29 = v33[1];
            v17 = v37;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BA6ACB04(0, *(_QWORD *)(v17 + 16) + 1, 1);
              v17 = v37;
            }
            v19 = *(_QWORD *)(v17 + 16);
            v18 = *(_QWORD *)(v17 + 24);
            if (v19 >= v18 >> 1)
            {
              sub_1BA6ACB04(v18 > 1, v19 + 1, 1);
              v17 = v37;
            }
            *(_QWORD *)(v17 + 16) = v19 + 1;
            v20 = v17 + 72 * v19;
            *(_OWORD *)(v20 + 32) = v28;
            *(_QWORD *)(v20 + 96) = v32;
            *(_OWORD *)(v20 + 64) = v30;
            *(_OWORD *)(v20 + 80) = v31;
            *(_OWORD *)(v20 + 48) = v29;
            goto LABEL_4;
          }
          v21 = ~v12;
          for (i = v13 + 1; ; i = v23 + 1)
          {
            v23 = i & v21;
            if (((*(_QWORD *)(v6 + (((i & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v21)) & 1) == 0)
              break;
            v24 = (_QWORD *)(v14 + 16 * v23);
            v25 = *v24 == v10 && v24[1] == v9;
            if (v25 || (sub_1BB874398() & 1) != 0)
              goto LABEL_12;
          }
        }
      }
      swift_bridgeObjectRelease();
      sub_1BA6ABDF8((uint64_t)v33);
LABEL_4:
      if (++v5 == v27)
        return v37;
    }
  }
  return result;
}

char *sub_1BA79FCB4(char *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v3 = *(_QWORD *)(v2 + 136);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v29 = *result;
    v5 = v3 + 32;
    result = (char *)swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      if (v6 >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
        return result;
      }
      v7 = v5 + 24 * v6;
      v9 = *(_QWORD *)v7;
      v8 = *(_QWORD *)(v7 + 8);
      v10 = *(unsigned __int8 *)(v7 + 16);
      if (v10 == 12)
      {
        sub_1BA901A94(v9, v8, 0xCu);
        sub_1BA901A94(v9, v8, 0xCu);
        v17 = swift_bridgeObjectRetain();
        v18 = sub_1BA6E42A0(v17);
        v19 = sub_1BA6E4124(v18, a2);
        v20 = FormatSelector.matches(_:)(v19);
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          sub_1BA7E415C();
          swift_allocError();
          *(_QWORD *)v24 = v9;
          *(_QWORD *)(v24 + 8) = v8;
          v25 = 12;
LABEL_25:
          *(_BYTE *)(v24 + 40) = v25;
          swift_willThrow();
          return (char *)sub_1BAC68EEC(v9, v8, v10);
        }
        sub_1BAC68EEC(v9, v8, 0xCu);
        result = (char *)sub_1BAC68EEC(v9, v8, 0xCu);
      }
      else
      {
        if (v10 == 11)
        {
          v21 = *(_QWORD *)(v9 + 16);
          if (!v21)
            goto LABEL_4;
          sub_1BA901A94(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), 0xBu);
          sub_1BA89D7DC();
          swift_bridgeObjectRetain();
          v28 = sub_1BB873060();
          v22 = (char *)(v9 + 32);
          do
          {
            v23 = *v22++;
            sub_1BA9DA768(&v30, v23);
            --v21;
          }
          while (v21);
          sub_1BAC68EEC(v9, v8, 0xBu);
          if ((sub_1BAB0D0F8(v29, v28) & 1) != 0)
          {
            swift_bridgeObjectRelease();
            sub_1BA7E415C();
            swift_allocError();
            *(_BYTE *)v24 = v29;
            *(_QWORD *)(v24 + 8) = v28;
            v25 = 11;
            goto LABEL_25;
          }
          v14 = v9;
          v15 = v8;
          v16 = 11;
        }
        else
        {
          if (v10 != 10)
            goto LABEL_4;
          v11 = *(_QWORD *)(v9 + 16);
          if (!v11)
            goto LABEL_4;
          sub_1BA901A94(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), 0xAu);
          sub_1BA89D7DC();
          swift_bridgeObjectRetain();
          v27 = sub_1BB873060();
          v12 = (char *)(v9 + 32);
          do
          {
            v13 = *v12++;
            sub_1BA9DA768(&v30, v13);
            --v11;
          }
          while (v11);
          sub_1BAC68EEC(v9, v8, 0xAu);
          if ((sub_1BAB0D0F8(v29, v27) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            sub_1BA7E415C();
            swift_allocError();
            *(_BYTE *)v24 = v29;
            *(_QWORD *)(v24 + 8) = v27;
            v25 = 10;
            goto LABEL_25;
          }
          v14 = v9;
          v15 = v8;
          v16 = 10;
        }
        sub_1BAC68EEC(v14, v15, v16);
        result = (char *)swift_bridgeObjectRelease();
        v5 = v3 + 32;
      }
LABEL_4:
      if (++v6 == v4)
        return (char *)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t FormatSupplementaryNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;

  v21[3] = type metadata accessor for FormatNodeBinderContext();
  v21[4] = &protocol witness table for FormatNodeBinderContext;
  v21[0] = a2;
  swift_retain();
  sub_1BA7A09A8(v21, (uint64_t)&v22);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  v6 = v23;
  v20 = v22;
  v7 = v25;
  v17 = v26;
  v18 = v24;
  v36 = v27;
  v8 = v30;
  v14 = v31;
  v19 = a1;
  v9 = v33;
  v12 = v28;
  v13 = v34;
  v15 = v35;
  v16 = v32;
  v10 = v29;
  v11 = sub_1BA7A01E8((uint64_t)&v22, a2);
  v22 = v20;
  v23 = v6;
  v24 = v18;
  v25 = v7;
  v26 = v17;
  v27 = v36;
  v28 = v12;
  v29 = v10;
  v30 = v8;
  v31 = v14;
  v32 = v16;
  v33 = v9;
  v34 = v13;
  v35 = v15;
  FormatSupplementary.bind(binder:context:)(v19, v11);
  FormatSupplementaryNode.bindChildren(binder:context:)(v19, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BA7A01E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[4];
  _BYTE v45[32];
  uint64_t v46;
  _OWORD v47[3];

  v3 = v2;
  v40 = a2;
  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 88);
  swift_beginAccess();
  v10 = v3[3];
  v38 = v3[2];
  v11 = *(_QWORD *)(v9 + 16);
  v39 = v10;
  v41 = v3;
  v42 = v5;
  if (v11)
  {
    *(_QWORD *)&v47[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v11, 0);
    v12 = *(_QWORD *)&v47[0];
    v13 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v36 = v9;
    v14 = v9 + v13;
    v43 = v6;
    v15 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BA4C2DD8(v14, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v16 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v8, v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      *(_QWORD *)&v47[0] = v12;
      v19 = *(_QWORD *)(v12 + 16);
      v18 = *(_QWORD *)(v12 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BA76B828(v18 > 1, v19 + 1, 1);
        v12 = *(_QWORD *)&v47[0];
      }
      *(_QWORD *)(v12 + 16) = v19 + 1;
      *(_QWORD *)(v12 + 8 * v19 + 32) = v16 | 0xA000000000000000;
      v14 += v15;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v3 = v41;
    v6 = v43;
  }
  else
  {
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  swift_beginAccess();
  v20 = v3[11];
  v21 = *(_QWORD *)(v20 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  if (v21)
  {
    *(_QWORD *)&v47[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v21, 0);
    v22 = *(_QWORD *)&v47[0];
    v23 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v36 = v20;
    v24 = v20 + v23;
    v43 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_1BA4C2DD8(v24, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v25 = swift_allocBox();
      sub_1BA5193C4((uint64_t)v8, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      *(_QWORD *)&v47[0] = v22;
      v28 = *(_QWORD *)(v22 + 16);
      v27 = *(_QWORD *)(v22 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1BA76B828(v27 > 1, v28 + 1, 1);
        v22 = *(_QWORD *)&v47[0];
      }
      *(_QWORD *)(v22 + 16) = v28 + 1;
      *(_QWORD *)(v22 + 8 * v28 + 32) = v25 | 0x5000000000000000;
      v24 += v43;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    v3 = v41;
  }
  *(_QWORD *)&v47[0] = v12;
  sub_1BA7082C0(v22);
  v29 = *(_QWORD *)&v47[0];
  swift_beginAccess();
  v30 = v37;
  swift_bridgeObjectRetain();
  v31 = swift_bridgeObjectRetain();
  v32 = sub_1BA6E4124(v31, v30);
  swift_beginAccess();
  v33 = v3[12];
  memset(v47, 0, sizeof(v47));
  v46 = 0;
  memset(v45, 0, sizeof(v45));
  memset(v44, 0, sizeof(v44));
  swift_bridgeObjectRetain();
  v34 = sub_1BA706104(v38, v39, v29, v32, 0, 0, 0, v33, (uint64_t *)v47, (uint64_t)v45, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA502AD0((uint64_t)v45, qword_1ED3B2E38, (void (*)(uint64_t))sub_1BA7C2A4C);
  return v34;
}

unint64_t FormatSupplementaryNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v6 = type metadata accessor for FormatOption();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v2 + 48);
  v42 = v10;
  sub_1BA71CA6C(v10);
  FormatSize.bind(binder:context:)();
  v11 = v3;
  if (v3)
    return sub_1BA719718(v10);
  v36 = v9;
  sub_1BA719718(v10);
  swift_beginAccess();
  v35 = v2;
  v13 = *(_QWORD *)(v2 + 64);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v14; ++i)
    {
      v16 = *(_QWORD *)(v13 + 8 * i + 32);
      v42 = v16;
      sub_1BA7196DC(v16);
      FormatAdjustment.bind(binder:context:)();
      sub_1BA719340(v16);
    }
    swift_bridgeObjectRelease_n();
  }
  v18 = v35;
  v17 = (uint64_t)v36;
  swift_beginAccess();
  v19 = *(_QWORD *)(v18 + 72);
  v20 = *(_QWORD *)(v19 + 16);
  v38 = a1;
  if (v20)
  {
    v34[0] = v7;
    v37 = a2;
    v41 = 0;
    swift_bridgeObjectRetain_n();
    v34[1] = v19;
    v21 = (uint64_t *)(v19 + 48);
    while (1)
    {
      v39 = v20;
      v22 = *(v21 - 2);
      v23 = *(v21 - 1);
      v25 = *v21;
      v24 = v21[1];
      v27 = v21[2];
      v26 = v21[3];
      v29 = v21[4];
      v28 = v21[5];
      v42 = v22;
      v43 = v23;
      v44 = v25;
      v45 = v24;
      v46 = v27;
      v47 = v26;
      v48 = v29;
      v49 = v28;
      v40 = v28;
      sub_1BA76B724(v22, v23, v25, v24, v27, v26, v29);
      v30 = v41;
      FormatNodeStyle.bind(binder:context:)();
      v41 = v30;
      if (v30)
        break;
      v21 += 8;
      sub_1BA76B698(v22, v23, v25, v24, v27, v26, v29);
      v20 = v39 - 1;
      if (v39 == 1)
      {
        swift_bridgeObjectRelease_n();
        v11 = v41;
        v17 = (uint64_t)v36;
        a2 = v37;
        v7 = v34[0];
        v18 = v35;
        goto LABEL_12;
      }
    }
    sub_1BA76B698(v22, v23, v25, v24, v27, v26, v29);
    return swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_12:
    swift_beginAccess();
    result = *(_QWORD *)(v18 + 88);
    v31 = *(_QWORD *)(result + 16);
    if (v31)
    {
      v32 = result + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v33 = *(_QWORD *)(v7 + 72);
      v41 = *(_QWORD *)(v18 + 88);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BA4C2DD8(v32, v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v50 = *(_QWORD *)(v17 + 16);
        swift_retain();
        FormatOptionValue.bind(binder:context:)(v38, a2);
        if (v11)
          break;
        swift_release();
        sub_1BA4A2E80(v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v32 += v33;
        if (!--v31)
          return swift_bridgeObjectRelease_n();
      }
      swift_release();
      sub_1BA4A2E80(v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BA7A09A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v3 = v2;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B3768, sub_1BA7B873C);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - v7;
  sub_1BA7B873C(0);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries;
  swift_beginAccess();
  v17 = *(_QWORD *)(v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  if (*(_QWORD *)(v17 + 16))
  {
    v18 = *(_QWORD *)(v3 + 32);
    v19 = *(_QWORD *)(v3 + 40);
    swift_bridgeObjectRetain();
    v20 = sub_1BA6E35A8(v18, v19);
    if ((v21 & 1) != 0)
    {
      sub_1BA4C2DD8(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v11 + 72) * v20, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA7B873C);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_1BA502AD0((uint64_t)v8, (unint64_t *)&unk_1ED3B3768, sub_1BA7B873C);
    type metadata accessor for FormatLayoutError();
    sub_1BA50AD30((unint64_t *)&qword_1ED3B4C10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v22 = v3;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    return swift_willThrow();
  }
  else
  {
    sub_1BA5193C4((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA7B873C);
    v24 = *(_QWORD *)v13;
    v25 = *((_QWORD *)v13 + 1);
    v26 = *((_QWORD *)v13 + 3);
    v40 = *((_QWORD *)v13 + 2);
    v41 = v24;
    v27 = *((_QWORD *)v13 + 5);
    v39 = *((_QWORD *)v13 + 4);
    v29 = *((_QWORD *)v13 + 6);
    v28 = *((_QWORD *)v13 + 7);
    v31 = *((_QWORD *)v13 + 8);
    v30 = *((_QWORD *)v13 + 9);
    LODWORD(v24) = v13[80];
    v32 = *((_QWORD *)v13 + 12);
    v35 = *((_QWORD *)v13 + 11);
    v36 = v28;
    v37 = v13[104];
    v38 = v24;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA7B8700((uint64_t)v13);
    *(_QWORD *)a2 = v41;
    *(_QWORD *)(a2 + 8) = v25;
    *(_QWORD *)(a2 + 16) = v40;
    *(_QWORD *)(a2 + 24) = v26;
    *(_QWORD *)(a2 + 32) = v39;
    *(_QWORD *)(a2 + 40) = v27;
    v33 = v36;
    *(_QWORD *)(a2 + 48) = v29;
    *(_QWORD *)(a2 + 56) = v33;
    *(_QWORD *)(a2 + 64) = v31;
    *(_QWORD *)(a2 + 72) = v30;
    *(_BYTE *)(a2 + 80) = v38;
    *(_QWORD *)(a2 + 88) = v35;
    *(_QWORD *)(a2 + 96) = v32;
    *(_BYTE *)(a2 + 104) = v37;
  }
  return result;
}

uint64_t sub_1BA7A0CF0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int isUniquelyReferenced_nonNull_native;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t result;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;

  sub_1BA709CA4(0);
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v41 - v9);
  v11 = *v2;
  v12 = (_QWORD *)v2[1];
  v45 = *(_QWORD *)(a1 + 16);
  if (v45)
  {
    v42 = a2;
    v51 = v11;
    v44 = a1 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = a1;
    swift_bridgeObjectRetain();
    v13 = 0;
    while (1)
    {
      v14 = *(_QWORD *)(v44 + 16 * v13);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1BA7A102C(v14);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
        break;
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v13 == v45)
      {
        result = swift_bridgeObjectRelease();
        v40 = v42;
        *v42 = v51;
        v40[1] = v12;
        return result;
      }
    }
    v46 = v14;
    v47 = v13;
    v16 = v14 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
    v48 = *(_QWORD *)(v43 + 72);
    while (1)
    {
      v49 = v15;
      sub_1BA709A94(v16, (uint64_t)v10);
      v19 = *v10;
      swift_beginAccess();
      v21 = *(_QWORD *)(v19 + 16);
      v20 = *(_QWORD *)(v19 + 24);
      v22 = (uint64_t)v10;
      v23 = (uint64_t)v10;
      v24 = v7;
      sub_1BA709A94(v23, (uint64_t)v7);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v50 = v12;
      v27 = sub_1BA6E35A8(v21, v20);
      v28 = v12[2];
      v29 = (v26 & 1) == 0;
      v30 = v28 + v29;
      if (__OFADD__(v28, v29))
        break;
      v31 = v26;
      if (v12[3] >= v30)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C2350();
      }
      else
      {
        sub_1BB4AEAA0(v30, isUniquelyReferenced_nonNull_native);
        v32 = sub_1BA6E35A8(v21, v20);
        if ((v31 & 1) != (v33 & 1))
          goto LABEL_23;
        v27 = v32;
      }
      v7 = v24;
      v12 = v50;
      v10 = (uint64_t *)v22;
      if ((v31 & 1) != 0)
      {
        v17 = v50[7] + v27 * v48;
        v18 = v48;
        sub_1BB1298EC((uint64_t)v7, v17);
      }
      else
      {
        v50[(v27 >> 6) + 8] |= 1 << v27;
        v34 = (uint64_t *)(v12[6] + 16 * v27);
        *v34 = v21;
        v34[1] = v20;
        v35 = v12[7] + v27 * v48;
        v18 = v48;
        sub_1BA707100((uint64_t)v7, v35);
        v36 = v12[2];
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (v37)
          goto LABEL_22;
        v12[2] = v38;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7070C4(v22);
      v16 += v18;
      v15 = v49 - 1;
      if (v49 == 1)
      {
        swift_bridgeObjectRelease();
        v13 = v47;
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
    *a2 = v11;
    a2[1] = v12;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA7A102C(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA790AAC, (uint64_t (*)(_QWORD))sub_1BA709CA4);
}

uint64_t sub_1BA7A1040(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 *a10, __int128 *a11, __int128 *a12, __int128 *a13, __int128 *a14, __int128 *a15, __int128 *a16, uint64_t *a17, uint64_t a18, uint64_t a19, __int128 *a20,uint64_t a21,uint64_t *a22,uint64_t a23)
{
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _OWORD *v35;
  _OWORD *v36;
  _OWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  _OWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  char v47;
  char v49;
  __int128 v50;
  __int128 v51;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;

  v24 = v23;
  v47 = *a4;
  v49 = *a5;
  v55 = *((_QWORD *)a10 + 2);
  v61 = *a17;
  v64 = a22[1];
  v65 = *a22;
  v25 = (_QWORD *)(v23 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  *v25 = 0;
  v25[1] = 0;
  v26 = (_QWORD *)(v23 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
  *v26 = 0;
  v26[1] = 0;
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = a2;
  v27 = v23 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version;
  v28 = sub_1BB86EB84();
  v62 = *(_QWORD *)(v28 - 8);
  v63 = *a20;
  v59 = *a15;
  v60 = *a16;
  v58 = *a14;
  v56 = *a13;
  v54 = *a12;
  v50 = *a10;
  v51 = *a11;
  v29 = v28;
  (*(void (**)(uint64_t, uint64_t))(v62 + 16))(v27, a3);
  *(_BYTE *)(v23 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) = v47;
  v30 = (_BYTE *)(v23 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  swift_beginAccess();
  *v30 = v49;
  swift_beginAccess();
  *v25 = a6;
  v25[1] = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *v26 = a8;
  v26[1] = a9;
  swift_bridgeObjectRelease();
  v31 = v23 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups;
  swift_beginAccess();
  *(_OWORD *)v31 = v50;
  *(_QWORD *)(v31 + 16) = v55;
  v32 = (_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
  swift_beginAccess();
  *v32 = v51;
  v33 = (_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
  swift_beginAccess();
  *v33 = v54;
  v34 = (_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  *v34 = v56;
  v35 = (_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
  swift_beginAccess();
  *v35 = v58;
  v36 = (_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
  swift_beginAccess();
  *v36 = v59;
  v37 = (_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  *v37 = v60;
  v38 = (_QWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  *v38 = v61;
  v39 = (_QWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  *v39 = a18;
  v40 = sub_1BA7A70C4();
  swift_bridgeObjectRelease();
  v41 = sub_1BA78A504(v40, a19);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(a3, v29);
  v42 = (uint64_t *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
  swift_beginAccess();
  *v42 = v41;
  v43 = (_OWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
  swift_beginAccess();
  *v43 = v63;
  sub_1BA5193C4(a21, v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, type metadata accessor for FormatCompilerOptions);
  v44 = (_QWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
  *v44 = v65;
  v44[1] = v64;
  v45 = (_QWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  *v45 = a23;
  return v24;
}

uint64_t sub_1BA7A14A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(_QWORD *@<X8>);
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int64_t v59;
  int64_t v60;
  int v61;
  int64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t result;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;

  v97 = *MEMORY[0x1E0C80C00];
  sub_1BA7B06D8(0);
  v84 = v5;
  v81 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v80 = (uint64_t)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v92 = (uint64_t *)((char *)&v72 - v8);
  v9 = *v2;
  v10 = (_QWORD *)v2[1];
  v11 = (_QWORD *)v2[2];
  v75 = *(_QWORD *)(a1 + 16);
  if (!v75)
  {
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  v73 = a2;
  v96 = v9;
  swift_bridgeObjectRetain();
  v83 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v72 = a1;
  swift_bridgeObjectRetain();
  v12 = a1 + 32;
  v13 = 0;
  v14 = 0;
  v88 = xmmword_1BB87CE70;
  v15 = v10;
  v74 = a1 + 32;
  while (1)
  {
    v76 = v14;
    v16 = *(_QWORD *)(v12 + 24 * v14);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7A1BE8(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v78 = *(_QWORD *)(v16 + 16);
    if (v78)
      break;
LABEL_58:
    swift_bridgeObjectRelease();
    v14 = v76 + 1;
    v12 = v74;
    if (v76 + 1 == v75)
    {
      swift_bridgeObjectRelease();
      v69 = v96;
      result = sub_1BA49EBE0((uint64_t)v13);
      v71 = v73;
      *v73 = v69;
      v71[1] = v15;
      v71[2] = v83;
      return result;
    }
  }
  v17 = 0;
  v18 = *(unsigned __int8 *)(v81 + 80);
  v93 = (v18 + 32) & ~v18;
  v79 = v16 + v93;
  v89 = v18 | 7;
  v77 = v16;
LABEL_6:
  if (v17 >= *(_QWORD *)(v16 + 16))
    goto LABEL_68;
  v94 = v15;
  v19 = *(_QWORD *)(v81 + 72);
  v82 = v17 + 1;
  v20 = v92;
  sub_1BA7B0658(v79 + v19 * v17, (uint64_t)v92);
  v22 = *v20;
  v21 = v20[1];
  v23 = v80;
  sub_1BA7B0658((uint64_t)v20, v80);
  swift_bridgeObjectRetain();
  v24 = v83;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v95 = v24;
  sub_1BA7B0AD8(v23, v22, v21, isUniquelyReferenced_nonNull_native);
  v83 = v95;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v20[7];
  v27 = *(_QWORD *)(v26 + 56);
  v85 = v19;
  v86 = v26 + 56;
  v28 = 1 << *(_BYTE *)(v26 + 32);
  if (v28 < 64)
    v29 = ~(-1 << v28);
  else
    v29 = -1;
  v30 = v29 & v27;
  v87 = (unint64_t)(v28 + 63) >> 6;
  v90 = v19 + v93;
  v91 = v26;
  swift_bridgeObjectRetain();
  v31 = 0;
  while (1)
  {
    v15 = v94;
    if (v30)
    {
      v32 = __clz(__rbit64(v30));
      v30 &= v30 - 1;
      v33 = v32 | (v31 << 6);
    }
    else
    {
      v34 = v31 + 1;
      if (__OFADD__(v31, 1))
        goto LABEL_66;
      if (v34 >= v87)
      {
LABEL_5:
        swift_release();
        sub_1BA7B069C((uint64_t)v92);
        v17 = v82;
        v16 = v77;
        if (v82 == v78)
          goto LABEL_58;
        goto LABEL_6;
      }
      v35 = *(_QWORD *)(v86 + 8 * v34);
      ++v31;
      if (!v35)
      {
        v31 = v34 + 1;
        if (v34 + 1 >= v87)
          goto LABEL_5;
        v35 = *(_QWORD *)(v86 + 8 * v31);
        if (!v35)
        {
          v31 = v34 + 2;
          if (v34 + 2 >= v87)
            goto LABEL_5;
          v35 = *(_QWORD *)(v86 + 8 * v31);
          if (!v35)
          {
            v36 = v34 + 3;
            if (v36 >= v87)
              goto LABEL_5;
            v35 = *(_QWORD *)(v86 + 8 * v36);
            if (!v35)
            {
              while (1)
              {
                v31 = v36 + 1;
                if (__OFADD__(v36, 1))
                  break;
                if (v31 >= v87)
                  goto LABEL_5;
                v35 = *(_QWORD *)(v86 + 8 * v31);
                ++v36;
                if (v35)
                  goto LABEL_27;
              }
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
            }
            v31 = v36;
          }
        }
      }
LABEL_27:
      v30 = (v35 - 1) & v35;
      v33 = __clz(__rbit64(v35)) + (v31 << 6);
    }
    v37 = *(_QWORD *)(*(_QWORD *)(v91 + 48) + 8 * v33);
    sub_1BA7B0CB8(0, (unint64_t *)&qword_1ED3B9E00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = v88;
    v39 = v38 + v93;
    sub_1BA7B0658((uint64_t)v92, v38 + v93);
    sub_1BA49EBE0((uint64_t)v13);
    v40 = swift_isUniquelyReferenced_nonNull_native();
    v95 = v15;
    v42 = sub_1BA4A42A0(v37);
    v43 = v94[2];
    v44 = (v41 & 1) == 0;
    v45 = v43 + v44;
    if (__OFADD__(v43, v44))
    {
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    v46 = v41;
    if (v94[3] >= v45)
    {
      if ((v40 & 1) == 0)
        sub_1BB4C2320();
    }
    else
    {
      sub_1BB4AEA70(v45, v40);
      v47 = sub_1BA4A42A0(v37);
      if ((v46 & 1) != (v48 & 1))
        goto LABEL_69;
      v42 = v47;
    }
    v49 = v95;
    swift_bridgeObjectRelease();
    if ((v46 & 1) != 0)
    {
      v50 = v31;
      swift_bridgeObjectRetain();
    }
    else
    {
      v49[(v42 >> 6) + 8] |= 1 << v42;
      v51 = 8 * v42;
      *(_QWORD *)(v49[6] + v51) = v37;
      *(_QWORD *)(v49[7] + v51) = MEMORY[0x1E0DEE9D8];
      v52 = v49[2];
      v53 = v52 + 1;
      v54 = __OFADD__(v52, 1);
      v55 = swift_bridgeObjectRetain();
      if (v54)
        goto LABEL_65;
      v50 = v31;
      *(_QWORD *)(v55 + 16) = v53;
      v49 = (_QWORD *)v55;
    }
    v56 = v49[7];
    v94 = v49;
    swift_bridgeObjectRelease();
    v57 = *(_QWORD *)(v38 + 16);
    v58 = *(_QWORD *)(v56 + 8 * v42);
    v59 = *(_QWORD *)(v58 + 16);
    v60 = v59 + v57;
    if (__OFADD__(v59, v57))
      goto LABEL_62;
    v61 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v56 + 8 * v42) = v58;
    if (v61 && v60 <= *(_QWORD *)(v58 + 24) >> 1)
    {
      v31 = v50;
      if (!v57)
        goto LABEL_11;
    }
    else
    {
      if (v59 <= v60)
        v62 = v59 + v57;
      else
        v62 = v59;
      v58 = sub_1BA7B0874(v61, v62, 1, v58);
      *(_QWORD *)(v56 + 8 * v42) = v58;
      v31 = v50;
      if (!v57)
        goto LABEL_11;
    }
    v63 = *(_QWORD *)(v58 + 16);
    if ((*(_QWORD *)(v58 + 24) >> 1) - v63 < v57)
      goto LABEL_63;
    v64 = v58 + v93 + v63 * v85;
    if (v39 < v64 + v57 * v85 && v64 < v39 + v57 * v85)
      break;
    swift_arrayInitWithCopy();
    v66 = *(_QWORD *)(v58 + 16);
    v67 = __OFADD__(v66, v57);
    v68 = v66 + v57;
    if (v67)
      goto LABEL_64;
    *(_QWORD *)(v58 + 16) = v68;
LABEL_11:
    swift_bridgeObjectRelease();
    v13 = sub_1BAA0CA28;
  }
  sub_1BB873F84();
  __break(1u);
LABEL_69:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA7A1BE8(uint64_t a1)
{
  return sub_1BB3841C8(a1, (uint64_t (*)(void))sub_1BA7B0874, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
}

uint64_t sub_1BA7A1C0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  _QWORD *v39;
  _QWORD v40[2];
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v40 - v9);
  v11 = *v2;
  v12 = (_QWORD *)v2[1];
  v44 = *(_QWORD *)(a1 + 16);
  if (v44)
  {
    v41 = a2;
    v50 = v11;
    v43 = a1 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40[1] = a1;
    swift_bridgeObjectRetain();
    v13 = 0;
    while (1)
    {
      v14 = *(_QWORD *)(v43 + 16 * v13);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1BA7A53F8(v14);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
        break;
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v13 == v44)
      {
        result = swift_bridgeObjectRelease();
        v39 = v41;
        *v41 = v50;
        v39[1] = v12;
        return result;
      }
    }
    v45 = v14;
    v46 = v13;
    v16 = v14 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
    v47 = *(_QWORD *)(v42 + 72);
    while (1)
    {
      v48 = v15;
      sub_1BA7A2A5C(v16, (uint64_t)v10);
      v20 = *v10;
      v19 = v10[1];
      v21 = (uint64_t)v10;
      v22 = (uint64_t)v10;
      v23 = v7;
      sub_1BA7A2A5C(v22, (uint64_t)v7);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v49 = v12;
      v26 = sub_1BA6E35A8(v20, v19);
      v27 = v12[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        break;
      v30 = v25;
      if (v12[3] >= v29)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BA7F255C();
      }
      else
      {
        sub_1BA7A53D4(v29, isUniquelyReferenced_nonNull_native);
        v31 = sub_1BA6E35A8(v20, v19);
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_23;
        v26 = v31;
      }
      v7 = v23;
      v12 = v49;
      v10 = (uint64_t *)v21;
      if ((v30 & 1) != 0)
      {
        v17 = v49[7] + v26 * v47;
        v18 = v47;
        sub_1BA7A50E8((uint64_t)v7, v17);
      }
      else
      {
        v49[(v26 >> 6) + 8] |= 1 << v26;
        v33 = (uint64_t *)(v12[6] + 16 * v26);
        *v33 = v20;
        v33[1] = v19;
        v34 = v12[7] + v26 * v47;
        v18 = v47;
        sub_1BA73E4DC((uint64_t)v7, v34);
        v35 = v12[2];
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (v36)
          goto LABEL_22;
        v12[2] = v37;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7A508C(v21);
      v16 += v18;
      v15 = v48 - 1;
      if (v48 == 1)
      {
        swift_bridgeObjectRelease();
        v13 = v46;
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
    *a2 = v11;
    a2[1] = v12;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA7A1F50(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  unsigned int v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 v112;
  uint64_t v113;
  _QWORD *v114;
  BOOL v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _BYTE v153[7];

  sub_1BA7A2B00();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v125 - v9;
  v11 = a1[1];
  v147 = *a1;
  v148 = v11;
  v146 = a1[2];
  v12 = a1[3];
  v13 = a1[4];
  v14 = *v2;
  v15 = v2[1];
  v16 = v2[3];
  v151 = v2[2];
  v17 = v2[4];
  v149 = v12;
  v150 = v17;
  v18 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  v19 = *v18;
  v20 = v18[1];
  if (!*(_QWORD *)(v20 + 16))
  {
    sub_1BA7A2A04(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v10, 1, 1, v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_7:
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA7A2B00);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    v37 = swift_allocError();
    *v38 = v14;
    v38[1] = v15;
    v38[2] = v14;
    v38[3] = v15;
    v39 = v150;
    v38[4] = v151;
    v38[5] = v16;
    v38[6] = v39;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v152 = v37;
    return swift_willThrow();
  }
  v142 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v145 = v14;
  v21 = sub_1BA6E35A8(v14, v15);
  v144 = v7;
  if ((v22 & 1) != 0)
  {
    v23 = v21;
    v24 = v16;
    v25 = *(_QWORD *)(v20 + 56);
    sub_1BA7A2A04(0);
    v27 = v26;
    v28 = v19;
    v29 = *(_QWORD *)(v26 - 8);
    v30 = v25 + *(_QWORD *)(v29 + 72) * v23;
    v31 = v27;
    v16 = v24;
    sub_1BA7A2A5C(v30, (uint64_t)v10);
    v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
    v19 = v28;
    v32(v10, 0, 1, v31);
  }
  else
  {
    sub_1BA7A2A04(0);
    v31 = v34;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v10, 1, 1, v34);
  }
  swift_bridgeObjectRelease();
  sub_1BA7A2A04(0);
  v143 = *(_QWORD *)(v31 - 8);
  v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48);
  v36 = v35(v10, 1, v31);
  v14 = v145;
  if (v36 == 1)
    goto LABEL_7;
  v132 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v35;
  v133 = v31;
  v131 = v16;
  v41 = *((_QWORD *)v10 + 1);
  v130 = *(_QWORD *)v10;
  v42 = *((_QWORD *)v10 + 3);
  v129 = *((_QWORD *)v10 + 2);
  v44 = *((_QWORD *)v10 + 4);
  v43 = *((_QWORD *)v10 + 5);
  v46 = *((_QWORD *)v10 + 6);
  v45 = *((_QWORD *)v10 + 7);
  v139 = v19;
  v47 = *((_QWORD *)v10 + 8);
  v48 = *((_QWORD *)v10 + 9);
  LODWORD(v150) = v10[80];
  v141 = v41;
  swift_bridgeObjectRetain();
  v134 = v42;
  swift_bridgeObjectRetain();
  v145 = v44;
  v135 = v43;
  v136 = v46;
  v137 = v45;
  v138 = v48;
  v140 = v47;
  sub_1BA709DE8(v44, v43, v46, v45, v47, v48, v150);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v49 = *v18;
  v50 = v18[1];
  if (!*(_QWORD *)(v50 + 16))
  {
    v54 = (uint64_t)v144;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v143 + 56))(v144, 1, 1, v133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = v145;
    v51 = v148;
    v59 = v149;
    v52 = v147;
LABEL_15:
    sub_1BA4A2E80(v54, (uint64_t (*)(_QWORD))sub_1BA7A2B00);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    v62 = swift_allocError();
    *v63 = v52;
    v63[1] = v51;
    v63[2] = v52;
    v63[3] = v51;
    v63[4] = v146;
    v63[5] = v59;
    v63[6] = v142;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v152 = v62;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v64 = v58;
    goto LABEL_33;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = v148;
  swift_bridgeObjectRetain();
  v52 = v147;
  v53 = sub_1BA6E35A8(v147, v51);
  v55 = v143;
  v54 = (uint64_t)v144;
  if ((v56 & 1) != 0)
  {
    sub_1BA7A2A5C(*(_QWORD *)(v50 + 56) + *(_QWORD *)(v143 + 72) * v53, (uint64_t)v144);
    v57 = 0;
  }
  else
  {
    v57 = 1;
  }
  v58 = v145;
  v59 = v149;
  v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
  v61 = v133;
  v60(v54, v57, 1, v133);
  swift_bridgeObjectRelease();
  if (v132(v54, 1, v61) == 1)
    goto LABEL_15;
  v65 = *(_QWORD *)(v54 + 8);
  v128 = *(_QWORD *)v54;
  v66 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 24);
  v126 = *(_QWORD *)(v54 + 16);
  v67 = *(_QWORD *)(v54 + 32);
  v68 = *(_QWORD *)(v54 + 40);
  v70 = *(_QWORD *)(v54 + 48);
  v69 = *(_QWORD *)(v54 + 56);
  v72 = *(_QWORD *)(v54 + 64);
  v71 = *(_QWORD *)(v54 + 72);
  v127 = v49;
  v73 = *(unsigned __int8 *)(v54 + 80);
  v132 = v66;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v133 = v67;
  v139 = v68;
  v142 = v70;
  v143 = v69;
  v74 = v70;
  v75 = v65;
  v147 = v72;
  v148 = v71;
  sub_1BA709DE8(v67, v68, v74, v69, v72, v71, v73);
  v76 = v54;
  v77 = v128;
  sub_1BA4A2E80(v76, (uint64_t (*)(_QWORD))sub_1BA7A2A04);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v78 = v130;
  v79 = v141;
  if ((v130 != v77 || v141 != v75) && (sub_1BB874398() & 1) == 0)
  {
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    v98 = swift_allocError();
    *(_QWORD *)v99 = v78;
    *(_QWORD *)(v99 + 8) = v79;
    v100 = v134;
    *(_QWORD *)(v99 + 16) = v129;
    *(_QWORD *)(v99 + 24) = v100;
    v101 = v135;
    *(_QWORD *)(v99 + 32) = v145;
    *(_QWORD *)(v99 + 40) = v101;
    v102 = v137;
    *(_QWORD *)(v99 + 48) = v136;
    *(_QWORD *)(v99 + 56) = v102;
    v103 = v138;
    *(_QWORD *)(v99 + 64) = v140;
    *(_QWORD *)(v99 + 72) = v103;
    *(_BYTE *)(v99 + 80) = v150;
    *(_DWORD *)(v99 + 81) = *(_DWORD *)v153;
    *(_DWORD *)(v99 + 84) = *(_DWORD *)&v153[3];
    *(_QWORD *)(v99 + 88) = v77;
    *(_QWORD *)(v99 + 96) = v75;
    v104 = v132;
    *(_QWORD *)(v99 + 104) = v126;
    *(_QWORD *)(v99 + 112) = v104;
    v105 = v139;
    *(_QWORD *)(v99 + 120) = v133;
    *(_QWORD *)(v99 + 128) = v105;
    v106 = v143;
    *(_QWORD *)(v99 + 136) = v142;
    *(_QWORD *)(v99 + 144) = v106;
    v107 = v148;
    *(_QWORD *)(v99 + 152) = v147;
    *(_QWORD *)(v99 + 160) = v107;
    *(_BYTE *)(v99 + 168) = v73;
    swift_storeEnumTagMultiPayload();
    v152 = v98;
    return swift_willThrow();
  }
  sub_1BA7A2AA0();
  v80 = v145;
  if (v73 > 0x3F)
    goto LABEL_32;
  if (v150 <= 0x3F)
  {
    LODWORD(v144) = v73;
    v81 = *(_QWORD *)(v145 + 16);
    if (!v81)
    {
LABEL_29:
      type metadata accessor for FormatLayoutError();
      sub_1BA689E84();
      v84 = swift_allocError();
      v85 = v131;
      *v86 = v151;
      v86[1] = v85;
      v86[2] = v80;
      swift_storeEnumTagMultiPayload();
      v88 = v135;
      v87 = v136;
      v90 = v137;
      v89 = v138;
      v91 = v150;
      sub_1BA709DE8(v80, v135, v136, v137, v140, v138, v150);
      swift_bridgeObjectRetain();
      v152 = v84;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(v133, v139, v142, v143, v147, v148, v144);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v64 = v80;
      v92 = v88;
      v93 = v87;
      v94 = v90;
      v95 = v140;
      v96 = v89;
      v97 = v91;
      return sub_1BA6C0C20(v64, v92, v93, v94, v95, v96, v97);
    }
    v82 = (_QWORD *)(v145 + 40);
    while (1)
    {
      v83 = *(v82 - 1) == v151 && *v82 == v131;
      if (v83 || (sub_1BB874398() & 1) != 0)
        break;
      v82 += 6;
      if (!--v81)
        goto LABEL_29;
    }
    v151 = v75;
    v110 = v133;
    v111 = *(_QWORD *)(v133 + 16);
    v112 = v144;
    v113 = v149;
    if (v111)
    {
      v114 = (_QWORD *)(v133 + 40);
      while (1)
      {
        v115 = *(v114 - 1) == v146 && *v114 == v113;
        if (v115 || (sub_1BB874398() & 1) != 0)
          break;
        v114 += 6;
        if (!--v111)
          goto LABEL_43;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(v110, v139, v142, v143, v147, v148, v112);
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_43:
      type metadata accessor for FormatLayoutError();
      sub_1BA689E84();
      v116 = swift_allocError();
      *v117 = v146;
      v117[1] = v113;
      v117[2] = v110;
      swift_storeEnumTagMultiPayload();
      v118 = v110;
      v119 = v139;
      v120 = v142;
      v121 = v110;
      v122 = v143;
      v124 = v147;
      v123 = v148;
      sub_1BA709DE8(v118, v139, v142, v143, v147, v148, v112);
      swift_bridgeObjectRetain();
      v152 = v116;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(v121, v119, v120, v122, v124, v123, v112);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v64 = v145;
LABEL_33:
    v92 = v135;
    v93 = v136;
    v94 = v137;
    v96 = v138;
    v95 = v140;
    v97 = v150;
    return sub_1BA6C0C20(v64, v92, v93, v94, v95, v96, v97);
  }
  if ((v150 >> 6) - 1 <= 1)
  {
LABEL_32:
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    v108 = swift_allocError();
    *v109 = v78;
    v109[1] = v79;
    v109[2] = 0xD00000000000002ELL;
    v109[3] = 0x80000001BB9904A0;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v152 = v108;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6C0C20(v133, v139, v142, v143, v147, v148, v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v64 = v80;
    goto LABEL_33;
  }
  result = sub_1BB87438C();
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for FormatImageRequestData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

void sub_1BA7A2A04(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B3790)
  {
    v2 = sub_1BA896870();
    v4 = type metadata accessor for FormatObject(a1, (uint64_t)&type metadata for FormatType, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B3790);
  }
}

uint64_t sub_1BA7A2A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7A2A04(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BA7A2AA0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B62A8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B62A8);
  }
}

void sub_1BA7A2B00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B3798)
  {
    sub_1BA7A2A04(255);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B3798);
  }
}

void sub_1BA7A2B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD v33[5];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = a1;
  v51 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3CE118, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)v33 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3CE120, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)v33 - v7;
  sub_1BA4CDF6C(0, &qword_1ED3CE108, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)v33 - v9;
  sub_1BA4CDF6C(0, &qword_1ED3CE110, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v10);
  v42 = (char *)v33 - v11;
  sub_1BA4CDF6C(0, &qword_1ED3CE128, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1E0C80A78](v12);
  v41 = (char *)v33 - v13;
  v52 = type metadata accessor for FormatPropertyDefinition(0);
  v34 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v33 - v17;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v33 - v21;
  v48 = *(_QWORD *)(a3 + 16);
  if (v48)
  {
    v23 = a3 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v46 = *(_QWORD *)(v20 + 72);
    v47 = v23;
    v33[3] = a3;
    swift_bridgeObjectRetain();
    v24 = 0;
    v33[4] = v22;
    do
    {
      sub_1BA8CAF1C(v47 + v46 * v24, (uint64_t)v22, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      v25 = v22[80];
      if (v25 >> 6)
      {
        v49 = v24;
        v26 = *((_QWORD *)v22 + 6);
        v27 = *((_QWORD *)v22 + 8);
        v28 = *((_QWORD *)v22 + 9);
        if (v25 >> 6 == 1)
        {
          if ((v25 & 1) == 0)
          {
            if (*(_BYTE *)(v26 + 41))
              v29 = 4;
            else
              v29 = 0;
            __asm { BR              X9 }
          }
        }
        else
        {
          v40 = *((_QWORD *)v22 + 7);
          v30 = *((_QWORD *)v22 + 4);
          if (*(_QWORD *)(v30 + 16))
          {
            v39 = v27;
            v37 = v28;
            v35 = *((_QWORD *)v22 + 5);
            v31 = v30 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
            v36 = v30;
            swift_bridgeObjectRetain();
            v38 = v26;
            sub_1BA4C2DD8(v31, (uint64_t)v18, type metadata accessor for FormatPropertyDefinition);
            sub_1BA4C2DD8((uint64_t)v18, (uint64_t)v15, type metadata accessor for FormatPropertyDefinition);
            v32 = (char *)&loc_1BA7A3094 + 4 * byte_1BB927BD1[swift_getEnumCaseMultiPayload()];
            __asm { BR              X9 }
          }
        }
        v24 = v49;
      }
      ++v24;
      sub_1BB06B59C((uint64_t)v22, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    }
    while (v24 != v48);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA7A508C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA7A50E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA7A514C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t (*v21)(void *, uint64_t, uint64_t);
  int v22;
  size_t v23;
  size_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1BB86EB84();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + v6;
  v11 = (_QWORD *)((v10 + a1) & ~(v9 | 7));
  v12 = (_QWORD *)((v10 + a2) & ~(v9 | 7));
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRelease();
  v13 = ((unint64_t)v11 + v9 + 16) & ~v9;
  v14 = ((unint64_t)v12 + v9 + 16) & ~v9;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  v15(v13, v14, v7);
  v16 = *(_QWORD *)(v8 + 64);
  v17 = (v16 + v9 + v13) & ~v9;
  v18 = (v16 + v9 + v14) & ~v9;
  v15(v17, v18, v7);
  v19 = (void *)((v16 + v9 + v17) & ~v9);
  v20 = (void *)((v16 + v9 + v18) & ~v9);
  v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v9) = v21(v19, 1, v7);
  v22 = v21(v20, 1, v7);
  if ((_DWORD)v9)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v19, v20, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v22)
    {
      v15((uint64_t)v19, (uint64_t)v20, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v19, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v23 = v16;
  else
    v23 = v16 + 1;
  memcpy(v19, v20, v23);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v24 = v16;
  else
    v24 = v16 + 1;
  v25 = (uint64_t)v19 + v24 + 7;
  v26 = (_QWORD *)(((unint64_t)v20 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_QWORD *)(v25 & 0xFFFFFFFFFFFFFFF8) = *v26;
  v27 = (v25 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  v27 &= 0xFFFFFFFFFFFFFFF8;
  v28 = (_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)v27 = *v28;
  swift_bridgeObjectRelease();
  v29 = (_QWORD *)((v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFF8);
  *v29 = *v30;
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatType(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  unsigned __int8 v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_BYTE *)(a2 + 80);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v14 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v6;
  sub_1BA6C0C20(v7, v8, v9, v10, v11, v12, v14);
  return a1;
}

uint64_t sub_1BA7A53D4(uint64_t a1, int a2)
{
  return sub_1BB4AEB0C(a1, a2, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (unint64_t *)&unk_1ED3B9AC8);
}

uint64_t sub_1BA7A53F8(uint64_t a1)
{
  return sub_1BB384028(a1, (uint64_t (*)(void))sub_1BA790D24, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
}

uint64_t initializeWithCopy for FormatServiceOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  int *v30;
  uint64_t v31;
  unsigned int (*v32)(_QWORD *, uint64_t, int *);
  uint64_t v33;
  int *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  int *v72;

  v6 = *(_QWORD *)(a2 + 24);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v72 = a3;
  v9 = a3[10];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(void **)(a2 + v9);
  if (v12)
  {
    *(_QWORD *)v10 = v12;
    *(_DWORD *)(v10 + 8) = *(_DWORD *)(v11 + 8);
    v13 = *(_QWORD *)(v11 + 24);
    *(_QWORD *)(v10 + 16) = *(_QWORD *)(v11 + 16);
    *(_QWORD *)(v10 + 24) = v13;
    v14 = (_QWORD *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 40);
    v16 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v15 - 1) >= 3)
    {
      *(_QWORD *)(v10 + 32) = *v14;
      *(_QWORD *)(v10 + 40) = v15;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v10 + 32) = *(_OWORD *)v14;
    }
    *(_BYTE *)(v10 + 48) = *(_BYTE *)(v11 + 48);
    v20 = *(void **)(v11 + 56);
    v21 = *(_QWORD *)(v11 + 64);
    *(_QWORD *)(v10 + 56) = v20;
    *(_QWORD *)(v10 + 64) = v21;
    *(_QWORD *)(v10 + 72) = *(_QWORD *)(v11 + 72);
    v22 = *(_OWORD *)(v11 + 104);
    *(_OWORD *)(v10 + 104) = v22;
    v23 = v22;
    v24 = **(void (***)(uint64_t, uint64_t, uint64_t))(v22 - 8);
    v25 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v10 + 80, v11 + 80, v23);
  }
  else
  {
    v17 = *(_OWORD *)(v11 + 80);
    *(_OWORD *)(v10 + 64) = *(_OWORD *)(v11 + 64);
    *(_OWORD *)(v10 + 80) = v17;
    *(_OWORD *)(v10 + 96) = *(_OWORD *)(v11 + 96);
    *(_QWORD *)(v10 + 112) = *(_QWORD *)(v11 + 112);
    v18 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *(_OWORD *)(v10 + 16) = v18;
    v19 = *(_OWORD *)(v11 + 48);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)(v11 + 32);
    *(_OWORD *)(v10 + 48) = v19;
  }
  v26 = *(_QWORD *)(v11 + 128);
  *(_QWORD *)(v10 + 120) = *(_QWORD *)(v11 + 120);
  *(_QWORD *)(v10 + 128) = v26;
  *(_QWORD *)(v10 + 136) = *(_QWORD *)(v11 + 136);
  *(_WORD *)(v10 + 144) = *(_WORD *)(v11 + 144);
  v27 = *(int *)(type metadata accessor for FormatTransformData() + 40);
  v28 = (_QWORD *)(v10 + v27);
  v29 = (_QWORD *)(v11 + v27);
  v30 = (int *)type metadata accessor for FeedPersonalizationClusteringRules();
  v31 = *((_QWORD *)v30 - 1);
  v32 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v31 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v30))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C23A0, (void (*)(uint64_t))type metadata accessor for FeedPersonalizationClusteringRules);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    v34 = v72;
  }
  else
  {
    *v28 = *v29;
    *((_BYTE *)v28 + 8) = *((_BYTE *)v29 + 8);
    v28[2] = v29[2];
    *((_BYTE *)v28 + 24) = *((_BYTE *)v29 + 24);
    v35 = v30[6];
    v36 = (_QWORD *)((char *)v28 + v35);
    v37 = (_QWORD *)((char *)v29 + v35);
    v38 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v41 = v37[1];
      *v36 = *v37;
      v36[1] = v41;
      v42 = *(int *)(v38 + 24);
      v69 = (char *)v37 + v42;
      v70 = (char *)v36 + v42;
      v71 = v31;
      v43 = sub_1BB86D078();
      v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v44 = v43;
      v31 = v71;
      v68(v70, v69, v44);
      *(_QWORD *)((char *)v36 + *(int *)(v38 + 28)) = *(_QWORD *)((char *)v37 + *(int *)(v38 + 28));
      v45 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56);
      swift_bridgeObjectRetain();
      v45(v36, 0, 1, v38);
    }
    v46 = v30[7];
    v47 = (char *)v28 + v46;
    v48 = (char *)v29 + v46;
    *(_QWORD *)v47 = *(_QWORD *)v48;
    v47[8] = v48[8];
    v49 = v30[8];
    v50 = (char *)v28 + v49;
    v51 = (char *)v29 + v49;
    v50[8] = v51[8];
    *(_QWORD *)v50 = *(_QWORD *)v51;
    v52 = v30[9];
    v53 = (char *)v28 + v52;
    v54 = (char *)v29 + v52;
    *(_QWORD *)v53 = *(_QWORD *)v54;
    v53[8] = v54[8];
    v55 = v30[10];
    v56 = (char *)v28 + v55;
    v57 = (char *)v29 + v55;
    v58 = *((_QWORD *)v57 + 4);
    if (v58 == 1)
    {
      v59 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v59;
      *((_QWORD *)v56 + 4) = *((_QWORD *)v57 + 4);
    }
    else
    {
      *(_QWORD *)v56 = *(_QWORD *)v57;
      v56[8] = v57[8];
      *((_QWORD *)v56 + 2) = *((_QWORD *)v57 + 2);
      v56[24] = v57[24];
      *((_QWORD *)v56 + 4) = v58;
      swift_bridgeObjectRetain();
    }
    v34 = v72;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v31 + 56))(v28, 0, 1, v30);
  }
  v60 = v34[12];
  *(_QWORD *)(a1 + v34[11]) = *(_QWORD *)(a2 + v34[11]);
  v61 = *(void **)(a2 + v60);
  *(_QWORD *)(a1 + v60) = v61;
  v62 = v34[13];
  v63 = v34[14];
  v64 = *(void **)(a2 + v62);
  *(_QWORD *)(a1 + v62) = v64;
  *(_BYTE *)(a1 + v63) = *(_BYTE *)(a2 + v63);
  *(_QWORD *)(a1 + v34[15]) = *(_QWORD *)(a2 + v34[15]);
  swift_bridgeObjectRetain();
  v65 = v61;
  v66 = v64;
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for FormatTransformData()
{
  uint64_t result;

  result = qword_1ED3C2170;
  if (!qword_1ED3C2170)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t getEnumTagSinglePayload for FeedPersonalizationClusteringRules()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for FeedPersonalizationClusteringRules()
{
  uint64_t result;

  result = qword_1ED3C4108;
  if (!qword_1ED3C4108)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FormatQueryParameter.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - v6;
  sub_1BAE7445C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v12 = v1[1];
  v26 = v1[2];
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE74354();
  v16 = sub_1BA4A2870(&qword_1ED3D0F10, (uint64_t (*)(uint64_t))sub_1BAE74354, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatQueryParameter, v17, v13, (uint64_t)&type metadata for FormatQueryParameter, v15, (uint64_t)&type metadata for FormatVersions.JazzkonG, v14, (uint64_t)v10, v16, (uint64_t)&off_1E734BD00);
  v18 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C38);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v28;
  sub_1BAD19684(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = (uint64_t)v27;
    v21(v27, v20, v19);
    swift_storeEnumTagMultiPayload();
    v24 = swift_retain();
    sub_1BAD197DC(v24, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE7445C);
}

unint64_t sub_1BA7A5B9C()
{
  unint64_t result;

  result = qword_1ED3C9108;
  if (!qword_1ED3C9108)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D1260, &_s10CodingKeysON_242);
    atomic_store(result, (unint64_t *)&qword_1ED3C9108);
  }
  return result;
}

uint64_t sub_1BA7A5BE0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  _QWORD *v39;
  _QWORD v40[2];
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;

  sub_1BA7F8204(0);
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v40 - v9);
  v11 = *v2;
  v12 = (_QWORD *)v2[1];
  v44 = *(_QWORD *)(a1 + 16);
  if (v44)
  {
    v41 = a2;
    v50 = v11;
    v43 = a1 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40[1] = a1;
    swift_bridgeObjectRetain();
    v13 = 0;
    while (1)
    {
      v14 = *(_QWORD *)(v43 + 16 * v13);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1BA7A5F0C(v14);
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
        break;
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v13 == v44)
      {
        result = swift_bridgeObjectRelease();
        v39 = v41;
        *v41 = v50;
        v39[1] = v12;
        return result;
      }
    }
    v45 = v14;
    v46 = v13;
    v16 = v14 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
    v47 = *(_QWORD *)(v42 + 72);
    while (1)
    {
      v48 = v15;
      sub_1BA7F7B48(v16, (uint64_t)v10);
      v20 = *v10;
      v19 = v10[1];
      v21 = (uint64_t)v10;
      v22 = (uint64_t)v10;
      v23 = v7;
      sub_1BA7F7B48(v22, (uint64_t)v7);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v49 = v12;
      v26 = sub_1BA6E35A8(v20, v19);
      v27 = v12[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
        break;
      v30 = v25;
      if (v12[3] >= v29)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C232C();
      }
      else
      {
        sub_1BB4AEA7C(v29, isUniquelyReferenced_nonNull_native);
        v31 = sub_1BA6E35A8(v20, v19);
        if ((v30 & 1) != (v32 & 1))
          goto LABEL_23;
        v26 = v31;
      }
      v7 = v23;
      v12 = v49;
      v10 = (uint64_t *)v21;
      if ((v30 & 1) != 0)
      {
        v17 = v49[7] + v26 * v47;
        v18 = v47;
        sub_1BA990380((uint64_t)v7, v17);
      }
      else
      {
        v49[(v26 >> 6) + 8] |= 1 << v26;
        v33 = (uint64_t *)(v12[6] + 16 * v26);
        *v33 = v20;
        v33[1] = v19;
        v34 = v12[7] + v26 * v47;
        v18 = v47;
        sub_1BA7F7B8C((uint64_t)v7, v34);
        v35 = v12[2];
        v36 = __OFADD__(v35, 1);
        v37 = v35 + 1;
        if (v36)
          goto LABEL_22;
        v12[2] = v37;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7F81C8(v21);
      v16 += v18;
      v15 = v48 - 1;
      if (v48 == 1)
      {
        swift_bridgeObjectRelease();
        v13 = v46;
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
    *a2 = v11;
    a2[1] = v12;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA7A5F0C(uint64_t a1)
{
  return sub_1BB3841C8(a1, (uint64_t (*)(void))sub_1BA790F88, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
}

uint64_t FormatSupplementary.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = v3;
  v61 = a2;
  v54 = a1;
  v5 = type metadata accessor for FormatOption();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[6];
  v8 = v2[7];
  v10 = v2[8];
  v49 = v7;
  v50 = v10;
  v11 = v2[11];
  v47 = v2[12];
  v48 = v11;
  v12 = *(_QWORD *)(v9 + 16);
  if (!v12)
  {
LABEL_6:
    if (v8)
    {
      swift_beginAccess();
      v16 = *(_QWORD *)(v8 + 56);
      v17 = *(_QWORD *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain_n();
        v18 = (char *)(v16 + 67);
        while (1)
        {
          v19 = *(_QWORD *)(v18 - 27);
          v20 = *(_QWORD *)(v18 - 11);
          v21 = *(v18 - 1);
          v22 = *(unsigned __int16 *)(v18 - 3);
          v23 = v22 | (v21 << 16);
          v24 = *v18;
          v25 = *(v18 - 19);
          *(_QWORD *)&v55 = *(_QWORD *)(v18 - 35);
          *((_QWORD *)&v55 + 1) = v19;
          LOBYTE(v56) = v25;
          *((_QWORD *)&v56 + 1) = v20;
          BYTE2(v57) = v21;
          LOWORD(v57) = v22;
          BYTE3(v57) = v24;
          swift_bridgeObjectRetain();
          sub_1BA771834(v20, v23);
          FormatSupplementaryNodeStyle.Selector.bind(binder:context:)();
          if (v3)
            break;
          swift_bridgeObjectRelease();
          sub_1BA771864(v20, v23);
          v18 += 40;
          if (!--v17)
          {
            swift_bridgeObjectRelease_n();
            v11 = v48;
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        sub_1BA771864(v20, v23);
        return swift_bridgeObjectRelease_n();
      }
LABEL_12:
      v7 = v49;
      if (*(unsigned __int8 *)(v8 + 74) != 255)
      {
        v26 = *(unsigned __int16 *)(v8 + 72) | (*(unsigned __int8 *)(v8 + 74) << 16);
        v27 = *(_QWORD *)(v8 + 64);
        *(_QWORD *)&v55 = v27;
        WORD4(v55) = v26;
        BYTE10(v55) = BYTE2(v26);
        sub_1BA77A170(v27, v26, SBYTE2(v26), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
        FormatSupplementaryNodePinTrait.bind(binder:context:)();
        result = sub_1BA771864(v27, v26);
        if (v3)
          return result;
      }
    }
    v29 = v50;
    v30 = *(_QWORD *)(v50 + 16);
    if (v30)
    {
      v53 = v3;
      swift_bridgeObjectRetain_n();
      v31 = (uint64_t *)(v29 + 48);
      while (1)
      {
        v51 = v30;
        v33 = *(v31 - 2);
        v32 = *(v31 - 1);
        v34 = *v31;
        v35 = v31[1];
        v37 = v31[2];
        v36 = v31[3];
        v39 = v31[4];
        v38 = v31[5];
        *(_QWORD *)&v55 = v33;
        *((_QWORD *)&v55 + 1) = v32;
        *(_QWORD *)&v56 = v34;
        *((_QWORD *)&v56 + 1) = v35;
        v57 = v37;
        v58 = v36;
        v59 = v39;
        v60 = v38;
        v52 = v38;
        sub_1BA76B724(v33, v32, v34, v35, v37, v36, v39);
        v40 = v53;
        FormatNodeStyle.bind(binder:context:)();
        v53 = v40;
        if (v40)
          break;
        v31 += 8;
        sub_1BA76B698(v33, v32, v34, v35, v37, v36, v39);
        v30 = v51 - 1;
        if (v51 == 1)
        {
          swift_bridgeObjectRelease_n();
          v4 = v53;
          v11 = v48;
          v7 = v49;
          goto LABEL_19;
        }
      }
      sub_1BA76B698(v33, v32, v34, v35, v37, v36, v39);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_19:
      v41 = *(_QWORD *)(v11 + 16);
      if (v41)
      {
        v42 = v4;
        v43 = v11 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
        v44 = *(_QWORD *)(v46 + 72);
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BA4C2DD8(v43, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          *(_QWORD *)&v55 = *((_QWORD *)v7 + 2);
          swift_retain();
          FormatOptionValue.bind(binder:context:)(v54, v61);
          if (v42)
            break;
          swift_release();
          sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v43 += v44;
          if (!--v41)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_24;
          }
        }
        swift_release();
        sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_24:
        v45 = v47;
        swift_bridgeObjectRetain();
        sub_1BA6FB29C(v54, v61, v45);
        return swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRetain_n();
  v13 = (uint64_t *)(v9 + 64);
  while (1)
  {
    v14 = *v13;
    v15 = *((_OWORD *)v13 - 1);
    v55 = *((_OWORD *)v13 - 2);
    v56 = v15;
    v57 = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    FormatSourceMapNode.bind(binder:context:)(v54, v61);
    if (v3)
      break;
    v13 += 5;
    swift_bridgeObjectRelease();
    swift_release();
    if (!--v12)
    {
      swift_bridgeObjectRelease_n();
      v11 = v48;
      v7 = v49;
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BA7A63DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v4;

  v4 = a3(0, a2, type metadata accessor for FormatSelectorValue);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BA7A6424(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v6;

  sub_1BA710610(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1BA7A6460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))
{
  uint64_t v6;

  v6 = a4(0, a3, type metadata accessor for FormatSelectorValue);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BA7A64B4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v8;

  sub_1BA710610(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t type metadata accessor for FormatNodeStateData()
{
  return objc_opt_self();
}

uint64_t sub_1BA7A652C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BA7A65B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v5[216];

  v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA968270(v0, (uint64_t)v5);
  __asm { BR              X11 }
}

uint64_t sub_1BA7A66DC@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v1 + 840) = a1 & 0xF;
  sub_1BA968048(v1 + 792, v6 - 240);
  sub_1BA4A9E78(*(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), v5);
  if (!v2)
  {
    sub_1BA968048(v6 - 240, v1 + 544);
    swift_retain();
    FormatHeadlineBinding.Text.text(from:computedContext:selectors:)(v5, v4, (uint64_t)sub_1BA785EC8, v3);
    v3 = v7;
    swift_release();
    sub_1BA4A2E80(v5, type metadata accessor for FeedHeadline);
  }
  return v3;
}

uint64_t sub_1BA7A6E9C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16[2];
  _BYTE v17[40];

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1BA6E35A8(0x756F724764656546, 0xEC00000067615470), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v4, (uint64_t)v16);
    sub_1BA4CECCC(v16, (uint64_t)v17);
    sub_1BA4C010C((uint64_t)v17, (uint64_t)v16);
    sub_1BA83CC6C();
    if (swift_dynamicCast())
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      *(_QWORD *)a2 = v13;
      *(_QWORD *)(a2 + 8) = v14;
      *(_BYTE *)(a2 + 16) = v15;
    }
    else
    {
      sub_1BA758A4C();
      swift_allocError();
      v12 = v11;
      strcpy((char *)v11, "FeedGroupTag");
      *(_BYTE *)(v11 + 13) = 0;
      *(_WORD *)(v11 + 14) = -5120;
      sub_1BA4C010C((uint64_t)v17, v11 + 16);
      *(_BYTE *)(v12 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA85C6FC(v9);
    swift_bridgeObjectRelease();
    strcpy((char *)v8, "FeedGroupTag");
    *(_BYTE *)(v8 + 13) = 0;
    *(_WORD *)(v8 + 14) = -5120;
    *(_QWORD *)(v8 + 16) = v10;
    *(_BYTE *)(v8 + 56) = 3;
    return swift_willThrow();
  }
  return result;
}

_QWORD *sub_1BA7A7038(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(uint64_t, unint64_t, uint64_t);

  v5 = *a2;
  v4 = (unint64_t)a2 + 15;
  *a1 = v5;
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v11 = (v9 + 8 + (v4 & 0xFFFFFFFFFFFFFFF8)) & ~v9;
  v12 = *(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v12(v10, v11, v7);
  return a1;
}

uint64_t sub_1BA7A70C4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  if ((_DWORD)v1 != 5)
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

NewsFeed::FormatPackageRole_optional __swiftcall FormatPackageRole.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatPackageRole_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FormatOptionsNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  __int128 v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[2];
  _OWORD v66[2];
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  unint64_t v71;

  v63 = a1;
  v54 = type metadata accessor for FormatOption();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v59);
  v7 = (uint64_t *)((char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v48 = type metadata accessor for FormatOptionsNodeStatement();
  v8 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  v71 = MEMORY[0x1E0DEE9D8];
  v46 = (uint64_t *)(v2 + 32);
  swift_beginAccess();
  v47 = v2;
  v14 = *(_QWORD *)(v2 + 32);
  v58 = *(_QWORD *)(v14 + 16);
  if (v58)
  {
    v45 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v57 = v14 + v45;
    swift_retain();
    result = swift_bridgeObjectRetain();
    v16 = 0;
    v52 = v10;
    v51 = v7;
    v50 = v8;
    v49 = v13;
    v56 = v14;
    do
    {
      if (v16 >= *(_QWORD *)(v14 + 16))
      {
        __break(1u);
        return result;
      }
      v55 = *(_QWORD *)(v8 + 72);
      v62 = v16;
      sub_1BA4C2DD8(v57 + v55 * v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      v18 = swift_retain();
      MEMORY[0x1BCCE36AC](v18);
      if (*(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      v19 = v63;
      *v7 = a2;
      v7[1] = v19;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      swift_retain();
      v20 = v64;
      v21 = sub_1BB2CEF34((uint64_t)v7);
      v64 = v20;
      if (v20)
      {
        sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
        sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      v22 = v21;
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
      v23 = *(_QWORD *)(v22 + 16);
      if (v23)
      {
        *(_QWORD *)&v68 = MEMORY[0x1E0DEE9D8];
        v61 = a2;
        swift_retain();
        sub_1BA76B828(0, v23, 0);
        v24 = v68;
        v25 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
        v60 = v22;
        v26 = v22 + v25;
        v27 = *(_QWORD *)(v53 + 72);
        do
        {
          sub_1BA4C2DD8(v26, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v28 = swift_allocBox();
          sub_1BA5193C4((uint64_t)v5, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          *(_QWORD *)&v68 = v24;
          v31 = *(_QWORD *)(v24 + 16);
          v30 = *(_QWORD *)(v24 + 24);
          if (v31 >= v30 >> 1)
          {
            sub_1BA76B828(v30 > 1, v31 + 1, 1);
            v24 = v68;
          }
          *(_QWORD *)(v24 + 16) = v31 + 1;
          *(_QWORD *)(v24 + 8 * v31 + 32) = v28 | 0x6000000000000004;
          v26 += v27;
          --v23;
        }
        while (v23);
        swift_bridgeObjectRelease();
        v69 = 0u;
        v70 = 0u;
        v68 = 0u;
        v67 = 0;
        memset(v66, 0, sizeof(v66));
        memset(v65, 0, sizeof(v65));
        v17 = sub_1BA706104(0, 0, v24, MEMORY[0x1E0DEE9E8], 0, 0, 0, MEMORY[0x1E0DEE9D8], (uint64_t *)&v68, (uint64_t)v66, (uint64_t *)v65);
        swift_release();
        swift_release();
        sub_1BA502AD0((uint64_t)v66, qword_1ED3B2E38, (void (*)(uint64_t))sub_1BA7C2A4C);
        v13 = v49;
        sub_1BA4A2E80((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
        result = swift_release();
        a2 = v17;
        v10 = v52;
        v7 = v51;
        v8 = v50;
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
        result = swift_bridgeObjectRelease();
      }
      v16 = v62 + 1;
      v14 = v56;
    }
    while (v62 + 1 != v58);
    swift_bridgeObjectRelease();
    v32 = v71;
    v33 = *v46;
    v34 = *(_QWORD *)(*v46 + 16);
    if (!v34)
      goto LABEL_22;
    v62 = v71;
    v35 = v33 + v45;
    swift_retain();
    swift_bridgeObjectRetain();
    v36 = v64;
    v37 = v55;
    while (1)
    {
      sub_1BA4C2DD8(v35, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      FormatOptionsNodeStatementValue.bind(binder:context:)(v63, a2);
      if (v36)
        break;
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      v35 += v37;
      if (!--v34)
      {
        swift_bridgeObjectRelease();
        v32 = v62;
        goto LABEL_23;
      }
    }
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    v32 = MEMORY[0x1E0DEE9D8];
LABEL_22:
    v36 = v64;
    swift_retain();
LABEL_23:
    v38 = v47;
    swift_beginAccess();
    v39 = *(_QWORD *)(v38 + 40);
    v40 = *(_QWORD *)(v39 + 16);
    if (v40)
    {
      v62 = v32;
      v41 = a2;
      swift_bridgeObjectRetain_n();
      v42 = (_QWORD *)(v39 + 64);
      while (1)
      {
        v43 = *v42;
        v44 = *((_OWORD *)v42 - 1);
        v68 = *((_OWORD *)v42 - 2);
        v69 = v44;
        *(_QWORD *)&v70 = v43;
        swift_bridgeObjectRetain();
        swift_retain();
        FormatSourceMapNode.bind(binder:context:)(v63, v41);
        if (v36)
          break;
        v42 += 5;
        swift_bridgeObjectRelease();
        swift_release();
        if (!--v40)
        {
          swift_release();
          swift_bridgeObjectRelease_n();
          goto LABEL_31;
        }
      }
      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
LABEL_31:
  swift_release();
  return swift_bridgeObjectRelease();
}

void FormatOptionsNodeStatementValue.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  char *v13;
  _QWORD v14[4];

  v14[3] = a1;
  v14[2] = a2;
  sub_1BA75BCB4(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v14[1] = (char *)v14 - v6;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1E0C80A78](v10);
  sub_1BA4C2DD8(v2, (uint64_t)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v13 = (char *)sub_1BA7A7B5C + 4 * byte_1BB8A5D11[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BA7A7B5C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1BA75A6B4(*(_QWORD *)(v1 - 160), *v0);
  return swift_bridgeObjectRelease();
}

void FormatOptionsNodeStatementBinding.bind(binder:context:)()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

void sub_1BA7A81E8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (unsigned __int16)v2 >> 13;
  if (((1 << v4) & 0xD7) == 0)
  {
    if (v4 != 3)
    {
      if ((v2 & 0x80) == 0)
        return;
      v5 = v2 & 0x3F;
      goto LABEL_8;
    }
    if ((v2 & 0x80) != 0 && ((v2 >> 7) & 0x3E | (v2 >> 5) & 1) == 7)
    {
      v5 = v2 & 0x1F;
LABEL_8:
      *(_BYTE *)(v3 - 65) = v5;
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B3EE0);
      if (swift_dynamicCast())
      {
        v6 = *(_QWORD *)(v3 - 104);
        v7 = *(_QWORD *)(v3 - 96);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 - 128), v6);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v1, v0, v6, v7);
        __swift_destroy_boxed_opaque_existential_1(v3 - 128);
      }
      else
      {
        *(_QWORD *)(v3 - 96) = 0;
        *(_OWORD *)(v3 - 128) = 0u;
        *(_OWORD *)(v3 - 112) = 0u;
        sub_1BA65DB80(v3 - 128, qword_1ED3B3EE8, (unint64_t *)&qword_1ED3B3EE0);
      }
    }
  }
}

uint64_t sub_1BA7A8470(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  _QWORD v28[4];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = v3;
  v7 = sub_1BB86EB00();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA75BC00(0);
  v28[3] = v10;
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *v2;
  v15 = *(_QWORD *)(*v2 + 16);
  if (!v15)
  {
LABEL_11:
    sub_1BA75BCB4(0);
    return FormatOptionsNodeStatementValue.bind(binder:context:)(a1, a2);
  }
  v34 = v4;
  v28[1] = v2;
  v28[2] = v14;
  v16 = v14 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v29 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v17 = sub_1BA75BC00;
  v30 = v9;
  while (1)
  {
    v33 = v15;
    v18 = v17;
    sub_1BA4C2DD8(v16, (uint64_t)v13, (uint64_t (*)(_QWORD))v17);
    v19 = a2;
    v35 = *v13;
    v20 = v35;
    swift_retain();
    v21 = a1;
    v22 = v19;
    v23 = v34;
    sub_1BA7049A8();
    swift_release();
    v34 = v23;
    if (v23)
    {
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA75BC00);
      return swift_bridgeObjectRelease();
    }
    if ((sub_1BB86EAF4() & 1) != 0)
    {
      a2 = v22;
      a1 = v21;
      goto LABEL_8;
    }
    v35 = v20;
    swift_retain();
    a2 = v22;
    v24 = v34;
    FormatExpression.bind(binder:context:)();
    if (v24)
      break;
    swift_release();
    FormatOptionsNodeStatementValue.bind(binder:context:)(v21, v22);
    a1 = v21;
    v34 = 0;
LABEL_8:
    v25 = v30;
    v17 = v18;
    v26 = sub_1BB86EAE8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v32);
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))v18);
    if ((v26 & 1) != 0)
      return swift_bridgeObjectRelease();
    v16 += v29;
    v15 = v33 - 1;
    if (v33 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA75BC00);
  return swift_bridgeObjectRelease();
}

void sub_1BA7A8728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA7A8764(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  void *v26;
  id v27;
  uint64_t v28;

  v27 = objc_msgSend(v26, sel_identifier);
  v28 = sub_1BB8729A0();

  return v28;
}

unint64_t sub_1BA7A8DAC()
{
  unint64_t result;

  result = qword_1ED39B360;
  if (!qword_1ED39B360)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatQueryValue, &type metadata for FormatQueryValue);
    atomic_store(result, (unint64_t *)&qword_1ED39B360);
  }
  return result;
}

uint64_t type metadata accessor for FormatNodeBinder(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3B48A8);
}

uint64_t type metadata accessor for FormatNodeState()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatNodeCache()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatNamespace()
{
  return objc_opt_self();
}

uint64_t sub_1BA7A8E64@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA6EDCD4(&qword_1ED3C6D50, (uint64_t)qword_1ED476BF0, a1);
}

uint64_t sub_1BA7A8E80(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_1BB433C18(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1BA7A8EA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = sub_1BB86D5B8();
  MEMORY[0x1E0C80A78](v1);
  swift_retain();
  sub_1BA72FFD8();
  result = swift_release();
  if (!v0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA7A8FE4();
    swift_release();
    return sub_1BB86DB88();
  }
  return result;
}

void sub_1BA7A8FE4()
{
  uint64_t v1;

  v1 = sub_1BB86D5AC();
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

uint64_t sub_1BA7A9070@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  sub_1BA7AAA80(0, (unint64_t *)&unk_1EF2B8F10, (void (*)(uint64_t))MEMORY[0x1E0DB5CF0]);
  v7 = swift_allocBox();
  *v8 = v5;
  v8[1] = v4;
  *(_QWORD *)(v3 - 88) = v6;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  ((void (*)(uint64_t))sub_1BA7A8FE4)(v2);
  swift_release_n();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    return swift_deallocBox();
  }
  else
  {
    v10 = *(uint64_t **)(v3 - 96);
    *v10 = v7;
    v11 = *MEMORY[0x1E0DB5CD0];
    v12 = sub_1BB86D5B8();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  }
}

_QWORD *sub_1BA7A9434(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain_n();
  v3 = (_BYTE *)(a1 + 49);
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if ((*v3 & 1) == 0)
    {
      v6 = *(_QWORD *)(v3 - 17);
      v7 = *(_QWORD *)(v3 - 9);
      v8 = *(v3 - 1);
      if ((v8 & 1) != 0)
      {
        sub_1BA8569BC(*(_QWORD *)(v3 - 17), *(_QWORD *)(v3 - 9), *(v3 - 1), 0);
        sub_1BA69C808(v6, v7, 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_1BA6EA0D0(0, v4[2] + 1, 1, v4);
        v10 = v4[2];
        v9 = v4[3];
        if (v10 >= v9 >> 1)
          v4 = sub_1BA6EA0D0((_QWORD *)(v9 > 1), v10 + 1, 1, v4);
        v4[2] = v10 + 1;
        v5 = &v4[2 * v10];
        v5[4] = v6;
        v5[5] = v7;
      }
      sub_1BA728F8C(v6, v7, v8, 0);
    }
    v3 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease_n();
  return v4;
}

uint64_t sub_1BA7A9570(uint64_t result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_QWORD *)v2 >> 62 == 1)
  {
    v3 = a2[10];
    v4 = *((_BYTE *)a2 + 9);
    v5 = *((_BYTE *)a2 + 8);
    v6 = *a2;
    v17 = *(_QWORD *)(*(_QWORD *)v2 + 24);
    v9 = v6;
    v10 = v5;
    v11 = v4;
    v7 = *((_OWORD *)a2 + 2);
    v12 = *((_OWORD *)a2 + 1);
    v13 = v7;
    v8 = *((_OWORD *)a2 + 4);
    v14 = *((_OWORD *)a2 + 3);
    v15 = v8;
    v16 = v3;
    return sub_1BA7A9570(result, &v9);
  }
  return result;
}

uint64_t sub_1BA7A95EC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unsigned int v46;
  unint64_t v47;
  size_t v48;
  uint64_t isStackAllocationSafe;
  char *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void *v79;
  uint64_t v80;
  _QWORD *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v7 = 0;
  v84 = *MEMORY[0x1E0C80C00];
  v83 = *(_QWORD *)(v4 + 16);
  v8 = a3[4];
  v9 = a3[5];
  __swift_project_boxed_opaque_existential_1(a3 + 1, v8);
  v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 80);
  swift_bridgeObjectRetain();
  v11 = v10(v8, v9);
  sub_1BA6E3FB8(v11);
  swift_beginAccess();
  v12 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v12);
  v13 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v13);
  v14 = sub_1BA7718D4(a3[7]);
  sub_1BA6E3FB8(v14);
  v15 = a4 + 64;
  v16 = 1 << *(_BYTE *)(a4 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a4 + 64);
  v19 = (unint64_t)(v16 + 63) >> 6;
  swift_bridgeObjectRetain();
  v79 = 0;
  while (1)
  {
    if (v18)
    {
      v18 &= v18 - 1;
      goto LABEL_5;
    }
    v21 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    if (v21 >= v19)
      goto LABEL_21;
    v22 = *(_QWORD *)(v15 + 8 * v21);
    ++v7;
    if (!v22)
    {
      v7 = v21 + 1;
      if (v21 + 1 >= v19)
        goto LABEL_21;
      v22 = *(_QWORD *)(v15 + 8 * v7);
      if (!v22)
      {
        v7 = v21 + 2;
        if (v21 + 2 >= v19)
          goto LABEL_21;
        v22 = *(_QWORD *)(v15 + 8 * v7);
        if (!v22)
          break;
      }
    }
LABEL_20:
    v18 = (v22 - 1) & v22;
LABEL_5:
    swift_retain();
    v20 = sub_1BA7A9D40();
    sub_1BA6E3FB8(v20);
    swift_release();
  }
  v23 = v21 + 3;
  if (v23 < v19)
  {
    v22 = *(_QWORD *)(v15 + 8 * v23);
    if (!v22)
    {
      while (1)
      {
        v7 = v23 + 1;
        if (__OFADD__(v23, 1))
          break;
        if (v7 >= v19)
          goto LABEL_21;
        v22 = *(_QWORD *)(v15 + 8 * v7);
        ++v23;
        if (v22)
          goto LABEL_20;
      }
LABEL_58:
      __break(1u);
    }
    v7 = v23;
    goto LABEL_20;
  }
LABEL_21:
  swift_release();
  v24 = v73[14];
  if (!v24)
    return v83;
  v25 = *(_QWORD *)(v24 + 16);
  if (!v25)
    return v83;
  v26 = v73[7];
  v27 = v73[8];
  v72 = v73 + 4;
  __swift_project_boxed_opaque_existential_1(v73 + 4, v26);
  v81 = 0;
  v82 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1BB873CB4();
  sub_1BB872AFC("");
  v80 = *(_QWORD *)(v24 + 16);
  sub_1BB87420C();
  sub_1BB872AFC(v28);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("group options for selector ");
  (*(void (**)(_QWORD, unint64_t, uint64_t, uint64_t))(v27 + 16))(0, 0xE000000000000000, v26, v27);
  swift_bridgeObjectRelease();
  v29 = 0;
  v30 = v24 + 32;
  v70 = 0x80000001BB990110;
  v71 = 0xD000000000000032;
  v68 = v25;
  v69 = v24;
  v67 = v24 + 32;
  while (1)
  {
    if (v29 >= *(_QWORD *)(v24 + 16))
      goto LABEL_57;
    v34 = v30 + 24 * v29;
    v36 = *(_QWORD *)(v34 + 8);
    v35 = *(_QWORD *)(v34 + 16);
    if (v36)
      break;
    v61 = *(_QWORD *)(v35 + 16);
    if (v61)
    {
      swift_bridgeObjectRetain();
      v62 = (uint64_t *)(v35 + 40);
      do
      {
        v63 = *(v62 - 1);
        v64 = *v62;
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC((uint64_t *)&v81, v63, v64);
        swift_bridgeObjectRelease();
        v62 += 2;
        --v61;
      }
      while (v61);
LABEL_26:
      swift_bridgeObjectRelease();
    }
LABEL_27:
    if (++v29 == v25)
    {
      swift_bridgeObjectRelease();
      return v83;
    }
  }
  v37 = *(_QWORD **)v34;
  v38 = v83;
  v39 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v39 != -1)
    swift_once();
  v81 = v37;
  v82 = v36;
  v40 = sub_1BA6E583C((uint64_t *)&v81);
  v41 = *(_QWORD *)(v40 + 16);
  v78 = v37;
  if (!v41)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v75 = v36;
  v76 = v29;
  v77 = v35;
  v74 = v40;
  v42 = (uint64_t *)(v40 + 64);
  while (2)
  {
    v43 = *(v42 - 1);
    v44 = *v42;
    v45 = *(_BYTE *)(v43 + 32);
    v46 = v45 & 0x3F;
    v47 = (unint64_t)((1 << v45) + 63) >> 6;
    v48 = 8 * v47;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v46 > 0xD)
    {
      isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
      if ((isStackAllocationSafe & 1) == 0)
      {
        v50 = (char *)swift_slowAlloc();
        bzero(v50, v48);
        v54 = v47;
        v52 = v79;
        v53 = sub_1BA6EB5B4((uint64_t)v50, v54, v43, v38);
        swift_bridgeObjectRelease();
        if (v52)
          goto LABEL_60;
        v79 = 0;
        MEMORY[0x1BCCE5C38](v50, -1, -1);
LABEL_42:
        v55 = sub_1BA6EB330(v53, v43);
        swift_release();
        if ((v55 & 1) != 0)
        {
          v56 = sub_1BA6EBD20(v38, v44);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            v57 = *(_QWORD *)(v77 + 16);
            if (v57)
            {
              v58 = (uint64_t *)(v77 + 40);
              v25 = v68;
              v24 = v69;
              v29 = v76;
              v30 = v67;
              do
              {
                v59 = *(v58 - 1);
                v60 = *v58;
                swift_bridgeObjectRetain();
                sub_1BA6EE5AC((uint64_t *)&v81, v59, v60);
                swift_bridgeObjectRelease();
                v58 += 2;
                --v57;
              }
              while (v57);
              goto LABEL_26;
            }
            swift_bridgeObjectRelease();
            v25 = v68;
            v24 = v69;
            v29 = v76;
            v30 = v67;
            goto LABEL_27;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v42 += 5;
        if (!--v41)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v25 = v68;
          v24 = v69;
          v29 = v76;
          v30 = v67;
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v31 = v73[7];
          v32 = v73[8];
          __swift_project_boxed_opaque_existential_1(v72, v31);
          v81 = 0;
          v82 = 0xE000000000000000;
          sub_1BB873CB4();
          sub_1BB872AFC(v81);
          sub_1BB872AFC(v33);
          swift_bridgeObjectRelease();
          (*(void (**)(_QWORD *, unint64_t, uint64_t, uint64_t))(v32 + 16))(v81, v82, v31, v32);
          goto LABEL_26;
        }
        continue;
      }
    }
    break;
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v50 = (char *)&v66 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v50, v48);
  v51 = v47;
  v52 = v79;
  v53 = sub_1BA6EB5B4((uint64_t)v50, v51, v43, v38);
  swift_bridgeObjectRelease();
  if (!v52)
  {
    v79 = 0;
    goto LABEL_42;
  }
  swift_willThrow();

  __break(1u);
LABEL_60:

  result = MEMORY[0x1BCCE5C38](v50, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BA7A9D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  if (*(_BYTE *)(v0 + 96))
    return MEMORY[0x1E0DEE9E8];
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 32);
  sub_1BA6EA07C();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v5);
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v2;
  sub_1BB873CB4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v6);
  sub_1BB87420C();
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v2;
  v1 = sub_1BA862444(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v1;
}

uint64_t sub_1BA7A9E9C@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD *v22;
  uint64_t v23;
  _OWORD *v24;

  v24 = a2;
  v3 = type metadata accessor for FeedGroupItem();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_OWORD *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - v8;
  v10 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a1 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    sub_1BA4C2DD8(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    sub_1BA5193C4((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      result = swift_release();
      *v24 = *v6;
      return result;
    }
    result = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupItem);
    if (v13)
      goto LABEL_4;
LABEL_5:
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v14)
      goto LABEL_23;
    v20 = *(_QWORD *)(v10 + 8 * v19);
    ++v16;
    if (!v20)
    {
      v16 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_23;
      v20 = *(_QWORD *)(v10 + 8 * v16);
      if (!v20)
      {
        v16 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_23;
        v20 = *(_QWORD *)(v10 + 8 * v16);
        if (!v20)
          break;
      }
    }
LABEL_18:
    v13 = (v20 - 1) & v20;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
  {
LABEL_23:
    result = swift_release();
    v22 = v24;
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v22 + 1) = 0;
    return result;
  }
  v20 = *(_QWORD *)(v10 + 8 * v21);
  if (v20)
  {
    v16 = v21;
    goto LABEL_18;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v14)
      goto LABEL_23;
    v20 = *(_QWORD *)(v10 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatOptionList()
{
  return objc_opt_self();
}

_QWORD *sub_1BA7AA0C8(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = v3;
  v5 = v2;
  v8 = *v2;
  v9 = type metadata accessor for FormatOption();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = a1[1];
  v56 = MEMORY[0x1E0DEE9D8];
  if (!v14)
  {
    swift_release();
    v20 = MEMORY[0x1E0DEE9D8];
    goto LABEL_28;
  }
  v53 = v11;
  v16 = *(_QWORD *)(v14 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  v54 = v8;
  if (!v16)
  {
    v49 = v15;
    v21 = MEMORY[0x1E0DEE9D8];
LABEL_8:
    v22 = *(_QWORD *)(v21 + 16);
    v50 = v5;
    v51 = a2;
    v47 = v10;
    v48 = v14;
    if (v22)
    {
      v52 = v3;
      v55 = v17;
      sub_1BA76B828(0, v22, 0);
      v23 = v55;
      v24 = *(unsigned __int8 *)(v10 + 80);
      v46 = v21;
      v25 = v21 + ((v24 + 32) & ~v24);
      v26 = *(_QWORD *)(v10 + 72);
      do
      {
        sub_1BA900B30(v25, (uint64_t)v13);
        v27 = swift_allocBox();
        sub_1BA8569CC((uint64_t)v13, v28);
        v55 = v23;
        v30 = *(_QWORD *)(v23 + 16);
        v29 = *(_QWORD *)(v23 + 24);
        if (v30 >= v29 >> 1)
        {
          sub_1BA76B828(v29 > 1, v30 + 1, 1);
          v23 = v55;
        }
        *(_QWORD *)(v23 + 16) = v30 + 1;
        *(_QWORD *)(v23 + 8 * v30 + 32) = v27 | 0x3000000000000004;
        v25 += v26;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
      a2 = v51;
      v4 = v52;
    }
    else
    {
      swift_bridgeObjectRelease();
      v23 = MEMORY[0x1E0DEE9D8];
    }
    v31 = v49;
    sub_1BA7082C0(v23);
    v32 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(v31 + 16))
    {
      v33 = *(_QWORD *)(a2 + 64);
      swift_retain();
      swift_bridgeObjectRetain();
      v34 = sub_1BA7ABE88(v31, a2, v33);
      swift_bridgeObjectRelease();
      swift_release();
      if (v4)
      {
        swift_release();
        sub_1BA5DCC4C(v48);
        swift_bridgeObjectRelease();
        v5 = v50;
        goto LABEL_18;
      }
    }
    else
    {
      v34 = MEMORY[0x1E0DEE9D8];
    }
    v35 = v47;
    sub_1BA5DCC4C(v48);
    v36 = *(_QWORD *)(v34 + 16);
    if (v36)
    {
      v52 = v4;
      v55 = v32;
      sub_1BA76B828(0, v36, 0);
      v37 = v55;
      v38 = *(unsigned __int8 *)(v35 + 80);
      v54 = v34;
      v39 = v34 + ((v38 + 32) & ~v38);
      v40 = *(_QWORD *)(v35 + 72);
      do
      {
        sub_1BA900B30(v39, (uint64_t)v13);
        v41 = swift_allocBox();
        sub_1BA8569CC((uint64_t)v13, v42);
        v55 = v37;
        v44 = *(_QWORD *)(v37 + 16);
        v43 = *(_QWORD *)(v37 + 24);
        if (v44 >= v43 >> 1)
        {
          sub_1BA76B828(v43 > 1, v44 + 1, 1);
          v37 = v55;
        }
        *(_QWORD *)(v37 + 16) = v44 + 1;
        *(_QWORD *)(v37 + 8 * v44 + 32) = v41 | 0x3000000000000000;
        v39 += v40;
        --v36;
      }
      while (v36);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v37 = MEMORY[0x1E0DEE9D8];
    }
    sub_1BA7082C0(v37);
    swift_release();
    v20 = v56;
    v5 = v50;
LABEL_28:
    v5[2] = v20;
    return v5;
  }
  v18 = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_bridgeObjectRetain();
  v19 = sub_1BA7ABE88(v14, a2, v18);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v3)
  {
    v49 = v15;
    v21 = v19;
    v17 = MEMORY[0x1E0DEE9D8];
    goto LABEL_8;
  }
  swift_release();
  sub_1BA5DCC4C(v14);
LABEL_18:
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t sub_1BA7AA4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  id v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1ED3BB670 != -1)
    swift_once();
  v8 = (id)qword_1ED4768A8;
  v9 = a5();
  sub_1BA7AA598();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1BB86EF44("%{public}@", 10, 2, &dword_1BA493000, v8, v9, v10);

  return swift_bridgeObjectRelease();
}

void sub_1BA7AA598()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D4470)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3D4480);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D4470);
  }
}

uint64_t sub_1BA7AA5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA7AA4B0(a1, a2, a3, a4, MEMORY[0x1E0DF2290]);
}

uint64_t FormatGroup.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v4 = v3;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2[9];
  v11 = v2[10];
  v12 = v2[11];
  v13 = v2[14];
  v42 = v2[15];
  v54 = v11;
  if (v10 == 2)
  {
    v14 = a1;
  }
  else
  {
    v15 = v2[8];
    *(_QWORD *)&v48 = v15;
    *((_QWORD *)&v48 + 1) = v10;
    sub_1BA8C89D0(v15, v10);
    FormatGroupColumnSystem.bind(binder:context:)(a1, a2);
    if (v3)
      return sub_1BA79DDC8(v15, v10);
    v14 = a1;
    sub_1BA79DDC8(v15, v10);
    v11 = v54;
  }
  v17 = *(_QWORD *)(v11 + 16);
  v40 = v12;
  v41 = v13;
  v39 = v8;
  if (v17)
  {
    swift_bridgeObjectRetain_n();
    v18 = (uint64_t *)(v11 + 64);
    while (1)
    {
      v19 = *v18;
      v20 = *((_OWORD *)v18 - 1);
      v48 = *((_OWORD *)v18 - 2);
      v49 = v20;
      v50 = v19;
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(v14, a2);
      if (v3)
        break;
      v18 += 5;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v17)
      {
        swift_bridgeObjectRelease_n();
        v21 = v14;
        v12 = v40;
        v13 = v41;
        v22 = (uint64_t)v43;
        v8 = v39;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v22 = (uint64_t)v43;
    v21 = v14;
LABEL_12:
    v23 = *(_QWORD *)(v12 + 16);
    v45 = a2;
    if (v23)
    {
      v44 = v21;
      v54 = v4;
      swift_bridgeObjectRetain_n();
      v24 = (uint64_t *)(v12 + 48);
      while (1)
      {
        v46 = v23;
        v26 = *(v24 - 2);
        v25 = *(v24 - 1);
        v27 = *v24;
        v28 = v24[1];
        v30 = v24[2];
        v29 = v24[3];
        v32 = v24[4];
        v31 = v24[5];
        *(_QWORD *)&v48 = v26;
        *((_QWORD *)&v48 + 1) = v25;
        *(_QWORD *)&v49 = v27;
        *((_QWORD *)&v49 + 1) = v28;
        v50 = v30;
        v51 = v29;
        v52 = v32;
        v53 = v31;
        v47 = v31;
        sub_1BA76B724(v26, v25, v27, v28, v30, v29, v32);
        v33 = v54;
        FormatNodeStyle.bind(binder:context:)();
        v54 = v33;
        if (v33)
          break;
        v24 += 8;
        sub_1BA76B698(v26, v25, v27, v28, v30, v29, v32);
        v23 = v46 - 1;
        if (v46 == 1)
        {
          swift_bridgeObjectRelease_n();
          v4 = v54;
          v21 = v44;
          a2 = v45;
          v13 = v41;
          v22 = (uint64_t)v43;
          v8 = v39;
          goto LABEL_17;
        }
      }
      sub_1BA76B698(v26, v25, v27, v28, v30, v29, v32);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_17:
      v34 = *(_QWORD *)(v13 + 16);
      if (v34)
      {
        v35 = v13 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        v36 = *(_QWORD *)(v8 + 72);
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BA4C2DD8(v35, v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          *(_QWORD *)&v48 = *(_QWORD *)(v22 + 16);
          swift_retain();
          FormatOptionValue.bind(binder:context:)(v21, v45);
          if (v4)
            break;
          swift_release();
          sub_1BA4A2E80(v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v35 += v36;
          if (!--v34)
          {
            swift_bridgeObjectRelease_n();
            a2 = v45;
            goto LABEL_22;
          }
        }
        swift_release();
        sub_1BA4A2E80(v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_22:
        v37 = v42;
        swift_bridgeObjectRetain();
        sub_1BA6FB29C(v21, a2, v37);
        return swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_1BA7AA9F0()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BA7AA9FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B0B50;
  if (!qword_1ED3B0B50)
  {
    v1 = sub_1BB871C50();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0D52BC8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B0B50);
  }
  return result;
}

uint64_t sub_1BA7AAA44(uint64_t a1)
{
  uint64_t v2;

  sub_1BA793CE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA7AAA80(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BA7AAAE4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  char v37;
  __int128 v38;

  v3 = v2;
  v5 = *v2;
  sub_1BA8F6924(0, &qword_1ED3C04B0, (void (*)(void))sub_1BA834FF0);
  v37 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35)
          goto LABEL_33;
        v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v35)
            goto LABEL_33;
          v23 = v36[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v37 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v35)
                  goto LABEL_33;
                v23 = v36[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v33 = *(_QWORD *)v32;
      v38 = *(_OWORD *)(v32 + 8);
      if ((v37 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1BB8745CC();
      sub_1BB872A90();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
      *(_QWORD *)v19 = v33;
      *(_OWORD *)(v19 + 8) = v38;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_1BA7AAE2C(unint64_t result, unsigned __int8 a2)
{
  if (a2 <= 3u)
    return sub_1BA5B18CC(result);
  return result;
}

unint64_t sub_1BA7AAE40(unint64_t result, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_1BA7AAE2C(result, a2);
  return result;
}

unint64_t sub_1BA7AAE54(unint64_t result, unsigned __int8 a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_1BA7AAE40(result, a2);
  else
    return swift_bridgeObjectRelease();
}

unint64_t sub_1BA7AAE60(unint64_t result, __int16 a2)
{
  if (HIBYTE(a2) != 255)
    return sub_1BA7AAE54(result, a2, HIBYTE(a2) & 1);
  return result;
}

uint64_t type metadata accessor for FormatPrimitivePropertyDefinition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatPrimitivePropertyDefinition);
}

uint64_t sub_1BA7AAE84(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a4 < 0)
    return sub_1BAC65170(a1, a2, a3, a4, HIBYTE(a4) & 1, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_1BA7AAEB4(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a4 < 0)
    return sub_1BAE70D80(a1, a2, a3, a4, HIBYTE(a4) & 1, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_1BA7AAEE4@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  unint64_t v49;
  size_t v50;
  uint64_t isStackAllocationSafe;
  uint64_t v52;
  void *v53;
  char v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75[2];
  uint64_t v76;
  uint64_t v77;

  v2 = v1;
  v77 = *MEMORY[0x1E0C80C00];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v57 - v5;
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v57 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v57 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v57 - v17;
  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  if (!*(_QWORD *)(*(_QWORD *)(v1 + *(int *)(v19 + 36)) + 16))
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(a1, v1, v7);
  v59 = *(_QWORD *)(v1 + *(int *)(v19 + 36));
  v65 = v15;
  sub_1BB86DD80();
  v20 = v76;
  v21 = *(_QWORD *)(*(_QWORD *)(v76 + 40) + 16);
  swift_beginAccess();
  v22 = *(_QWORD *)(*(_QWORD *)(v21 + 16) + 16);
  v58 = a1;
  if (v22)
  {
    v75[0] = *(_QWORD *)(v20 + 56);
    v23 = swift_bridgeObjectRetain();
    v24 = sub_1BA6E42A0(v23);
    sub_1BA6E3FB8(v24);
    swift_release();
    v74 = v75[0];
  }
  else
  {
    v74 = sub_1BA6E3F38();
    swift_release();
  }
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v26(v18, v2, v7);
  v27 = v65;
  v73 = (void (*)(char *, char *, uint64_t))v26;
  v26(v65, (uint64_t)v18, v7);
  v28 = v59;
  v69 = *(_QWORD *)(v59 + 16);
  v57 = v18;
  if (v69)
  {
    sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3BA908, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    v60 = v29;
    v30 = *(_QWORD *)(v29 - 8);
    v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v32 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v32 != -1)
      swift_once();
    v33 = v28 + v31;
    v34 = 0;
    v67 = *(_QWORD *)(v30 + 72);
    v68 = v33;
    v35 = v66;
    v63 = v8;
    v64 = v7;
    v61 = v10;
    v62 = v6;
    do
    {
      v38 = (uint64_t *)(v68 + v67 * v34);
      v39 = *v38;
      v40 = v38[1];
      v70 = v38;
      v75[0] = v39;
      v75[1] = v40;
      swift_bridgeObjectRetain();
      v41 = sub_1BA6E583C(v75);
      swift_bridgeObjectRelease();
      v42 = v41;
      v43 = *(_QWORD *)(v41 + 16);
      if (v43)
      {
        v71 = v42;
        v72 = v34;
        v44 = (uint64_t *)(v42 + 64);
        do
        {
          v45 = *(v44 - 1);
          v46 = *v44;
          v47 = *(_BYTE *)(v45 + 32);
          v48 = v47 & 0x3F;
          v49 = (unint64_t)((1 << v47) + 63) >> 6;
          v50 = 8 * v49;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v48 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)&v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v50);
            v52 = sub_1BA6EB5B4((uint64_t)&v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v49, v45, v74);
            swift_bridgeObjectRelease();
          }
          else
          {
            v53 = (void *)swift_slowAlloc();
            bzero(v53, v50);
            v52 = sub_1BA6EB5B4((uint64_t)v53, v49, v45, v74);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v53, -1, -1);
          }
          v54 = sub_1BA6EB330(v52, v45);
          swift_release();
          if ((v54 & 1) != 0)
          {
            v55 = sub_1BA6EBD20(v74, v46);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v55 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v6 = v62;
              v7 = v64;
              v73(v62, (char *)v70 + *(int *)(v60 + 36), v64);
              v56 = 0;
              v8 = v63;
              goto LABEL_24;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v44 += 5;
          --v43;
        }
        while (v43);
        swift_bridgeObjectRelease();
        v56 = 1;
        v8 = v63;
        v7 = v64;
        v6 = v62;
LABEL_24:
        v10 = v61;
        v27 = v65;
        v35 = v66;
        v34 = v72;
      }
      else
      {
        swift_bridgeObjectRelease();
        v56 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v56, 1, v7);
      v73(v10, v27, v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        v36 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v36(v35, v10, v7);
        sub_1BA502AD0((uint64_t)v6, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v37 = *(void (**)(char *, uint64_t))(v8 + 8);
      }
      else
      {
        v37 = *(void (**)(char *, uint64_t))(v8 + 8);
        v37(v10, v7);
        v36 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v36(v35, v6, v7);
      }
      ++v34;
      v37(v27, v7);
      v36(v27, v35, v7);
    }
    while (v34 != v69);
  }
  else
  {
    v36 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    swift_bridgeObjectRetain();
  }
  v36(v58, v27, v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v57, v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t static FormatOptionValue.< infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - v8;
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B5EF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v31 - v14;
  v16 = *a1;
  v17 = *a2;
  switch((unint64_t)*a1 >> 60)
  {
    case 0uLL:
      if (v17 >> 60)
        goto LABEL_31;
      goto LABEL_33;
    case 1uLL:
      if (v17 >> 60 != 1)
        goto LABEL_31;
      goto LABEL_33;
    case 2uLL:
      if (v17 >> 60 != 2)
        goto LABEL_31;
      v18 = swift_projectBox();
      v19 = swift_projectBox();
      sub_1BA6AA01C(v18, (uint64_t)v15, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D5EC);
      sub_1BA6AA01C(v19, (uint64_t)v12, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D5EC);
      swift_retain();
      swift_retain();
      v20 = sub_1BB86C820();
      sub_1BA6AA068((uint64_t)v12, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD))sub_1BA68D5EC);
      sub_1BA6AA068((uint64_t)v15, (uint64_t)&qword_1ED3B5EF0, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD))sub_1BA68D5EC);
LABEL_36:
      swift_release();
      goto LABEL_39;
    case 3uLL:
      if (v17 >> 60 != 3)
        goto LABEL_31;
      v20 = *(double *)(v16 + 16) < *(double *)(v17 + 16);
      goto LABEL_40;
    case 4uLL:
      if (v17 >> 60 != 4)
        goto LABEL_31;
      v20 = *(_QWORD *)(v16 + 16) < *(_QWORD *)(v17 + 16);
      goto LABEL_40;
    case 5uLL:
      if (v17 >> 60 != 5)
        goto LABEL_31;
      if (*(_QWORD *)(v16 + 16) == *(_QWORD *)(v17 + 16) && *(_QWORD *)(v16 + 24) == *(_QWORD *)(v17 + 24))
        goto LABEL_33;
      result = sub_1BB874398();
      break;
    case 6uLL:
      if (v17 >> 60 != 6)
        goto LABEL_31;
      v23 = swift_projectBox();
      v24 = swift_projectBox();
      sub_1BA6AA01C(v23, (uint64_t)v9, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D4C8);
      sub_1BA6AA01C(v24, (uint64_t)v6, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA68D4C8);
      swift_retain();
      swift_retain();
      v25 = sub_1BB86C538();
      v27 = v26;
      if (v25 == sub_1BB86C538() && v27 == v28)
        v20 = 0;
      else
        v20 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6AA068((uint64_t)v6, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD))sub_1BA68D4C8);
      sub_1BA6AA068((uint64_t)v9, (uint64_t)&qword_1ED3B5EE8, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(_QWORD))sub_1BA68D4C8);
      swift_release();
      goto LABEL_39;
    case 7uLL:
      if (v17 >> 60 != 7)
        goto LABEL_31;
      goto LABEL_33;
    case 8uLL:
      v30 = *(_QWORD *)(v16 + 24);
      if (v17 >> 60 == 8)
      {
        v31 = *(_QWORD *)(v17 + 24);
        v32 = v30;
        swift_retain();
      }
      else
      {
        v31 = *a2;
        v32 = v30;
        swift_retain();
      }
      swift_retain();
      v20 = static FormatOptionValue.< infix(_:_:)(&v32, &v31);
      goto LABEL_36;
    case 9uLL:
      if (v17 >> 60 != 9)
        goto LABEL_31;
      goto LABEL_33;
    case 0xCuLL:
      if (v17 >> 60 != 12)
        goto LABEL_31;
      goto LABEL_33;
    default:
LABEL_31:
      if (v17 >> 60 == 8)
      {
        v31 = *(_QWORD *)(v17 + 24);
        v32 = v16;
        swift_retain();
        swift_retain();
        v20 = static FormatOptionValue.< infix(_:_:)(&v32, &v31);
        swift_release();
LABEL_39:
        swift_release();
      }
      else
      {
LABEL_33:
        v20 = 0;
      }
LABEL_40:
      result = v20 & 1;
      break;
  }
  return result;
}

void sub_1BA7ABA30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CFB48)
  {
    sub_1BA505288(255, (unint64_t *)&qword_1ED3C49B0);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CFB48);
  }
}

uint64_t sub_1BA7ABA98(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v3 = v2;
  v5 = *v2;
  sub_1BA7ABE08();
  v47 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v46 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v45 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v22 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v23 = v22 | (v13 << 6);
      goto LABEL_22;
    }
    v24 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v45)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v46 + 8 * v24);
    ++v13;
    if (!v26)
    {
      v13 = v24 + 1;
      if (v24 + 1 >= v45)
        goto LABEL_34;
      v26 = *(_QWORD *)(v46 + 8 * v13);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v45)
        {
LABEL_34:
          swift_release();
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v26 = *(_QWORD *)(v46 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v13 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_43;
            if (v13 >= v45)
              goto LABEL_34;
            v26 = *(_QWORD *)(v46 + 8 * v13);
            ++v27;
            if (v26)
              goto LABEL_21;
          }
        }
        v13 = v27;
      }
    }
LABEL_21:
    v10 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_22:
    v28 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v23);
    v30 = *v28;
    v29 = v28[1];
    v31 = *(_QWORD *)(v5 + 56) + 104 * v23;
    if ((v47 & 1) != 0)
    {
      v32 = *(_OWORD *)v31;
      v33 = *(_OWORD *)(v31 + 32);
      v49 = *(_OWORD *)(v31 + 16);
      v50 = v33;
      v48 = v32;
      v34 = *(_OWORD *)(v31 + 48);
      v35 = *(_OWORD *)(v31 + 64);
      v36 = *(_OWORD *)(v31 + 80);
      v54 = *(_QWORD *)(v31 + 96);
      v52 = v35;
      v53 = v36;
      v51 = v34;
    }
    else
    {
      sub_1BA4C2DD8(v31, (uint64_t)&v48, (uint64_t (*)(_QWORD))sub_1BA785ECC);
      swift_bridgeObjectRetain();
    }
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v37 = -1 << *(_BYTE *)(v7 + 32);
    v38 = result & ~v37;
    v39 = v38 >> 6;
    if (((-1 << v38) & ~*(_QWORD *)(v11 + 8 * (v38 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v38) & ~*(_QWORD *)(v11 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v42 = v39 == v41;
        if (v39 == v41)
          v39 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v11 + 8 * v39);
      }
      while (v43 == -1);
      v14 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v30;
    v15[1] = v29;
    v16 = *(_QWORD *)(v7 + 56) + 104 * v14;
    v17 = v48;
    v18 = v50;
    *(_OWORD *)(v16 + 16) = v49;
    *(_OWORD *)(v16 + 32) = v18;
    *(_OWORD *)v16 = v17;
    v19 = v51;
    v20 = v52;
    v21 = v53;
    *(_QWORD *)(v16 + 96) = v54;
    *(_OWORD *)(v16 + 64) = v20;
    *(_OWORD *)(v16 + 80) = v21;
    *(_OWORD *)(v16 + 48) = v19;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v25 = (_QWORD *)(v5 + 64);
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v44 = 1 << *(_BYTE *)(v5 + 32);
  if (v44 >= 64)
    bzero(v25, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v44;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1BA7ABE08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C04B8)
  {
    sub_1BA785ECC(255);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C04B8);
  }
}

_QWORD *sub_1BA7ABE6C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6ECD60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA7ABA30, (unint64_t *)&qword_1ED3C49B0);
}

unint64_t sub_1BA7ABE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2500, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v22 - v7);
  v28 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v28);
  v27 = (uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v25 = (uint64_t)&v22 - v12;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v22 = a1;
  v23 = v14;
  v15 = (uint64_t *)(a1 + v14);
  v26 = v11;
  v16 = *(_QWORD *)(v11 + 72);
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x1E0DEE9D8];
  v24 = a3;
  do
  {
    FormatOptionConverter.convert(option:contextProperties:)(v15, a3, v8);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v8, 1, v28) == 1)
    {
      sub_1BA5C699C((uint64_t)v8, (unint64_t *)&qword_1ED3D2500, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
    }
    else
    {
      v18 = v25;
      sub_1BA5193C4((uint64_t)v8, v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BA5193C4(v18, v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v17 = sub_1BA7AD174(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
      v20 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      if (v20 >= v19 >> 1)
        v17 = sub_1BA7AD174(v19 > 1, v20 + 1, 1, v17);
      *(_QWORD *)(v17 + 16) = v20 + 1;
      sub_1BA5193C4(v27, v17 + v23 + v20 * v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      a3 = v24;
    }
    v15 = (uint64_t *)((char *)v15 + v16);
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t FormatOptionConverter.convert(option:contextProperties:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;

  v5 = v3;
  sub_1BA4B07F0(0, &qword_1ED3B6A40, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  v12 = type metadata accessor for FormatCompilerProperty(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a2 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v13 + 56))(v11, 1, 1, v12, v14);
LABEL_7:
    sub_1BA5C699C((uint64_t)v11, &qword_1ED3B6A40, type metadata accessor for FormatCompilerProperty);
    v25 = v5[6];
    v26 = v5[7];
    __swift_project_boxed_opaque_existential_1(v5 + 3, v25);
    v33 = 0;
    v34 = 0xE000000000000000;
    sub_1BB873CB4();
    sub_1BB872AFC("rectangle.3.offgrid");
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v27);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v28);
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v29);
    swift_bridgeObjectRelease();
    sub_1BB872AFC("Discarding option ");
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v26 + 40))(v33, v34, v25, v26);
    swift_bridgeObjectRelease();
    v30 = type metadata accessor for FormatOption();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a3, 1, 1, v30);
  }
  v35 = v4;
  v17 = a3;
  v18 = *a1;
  v19 = a1[1];
  swift_bridgeObjectRetain();
  v20 = sub_1BA6E35A8(v18, v19);
  if ((v21 & 1) != 0)
  {
    sub_1BA4C2DD8(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v13 + 72) * v20, (uint64_t)v11, type metadata accessor for FormatCompilerProperty);
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v22, 1, v12);
  swift_bridgeObjectRelease();
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  a3 = v17;
  v24 = v35;
  if (v23 == 1)
    goto LABEL_7;
  sub_1BA5193C4((uint64_t)v11, (uint64_t)v16, type metadata accessor for FormatCompilerProperty);
  sub_1BA7AC418((uint64_t)a1, a3);
  result = sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatCompilerProperty);
  if (!v24)
  {
    v32 = type metadata accessor for FormatOption();
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a3, 0, 1, v32);
  }
  return result;
}

void sub_1BA7AC418(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;

  sub_1BA7AC648(a1);
  if (!v2)
  {
    FormatCompilerProperty.type.getter(&v15);
    v16 = a2[2];
    FormatOptionValue.type.getter();
    v4 = FormatOptionType.rawValue.getter();
    v6 = v5;
    if (v4 == FormatOptionType.rawValue.getter() && v6 == v7)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v8 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
        type metadata accessor for FormatLayoutError();
        sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
        swift_allocError();
        v10 = v9;
        v12 = *a2;
        v11 = a2[1];
        swift_bridgeObjectRetain();
        FormatCompilerProperty.type.getter(&v15);
        v13 = v15;
        v16 = a2[2];
        FormatOptionValue.type.getter();
        *(_QWORD *)v10 = v12;
        *(_QWORD *)(v10 + 8) = v11;
        *(_BYTE *)(v10 + 16) = v13;
        *(_BYTE *)(v10 + 17) = v14;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        sub_1BA4A2E80((uint64_t)a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      }
    }
  }
}

uint64_t FormatCompilerProperty.type.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v5, type metadata accessor for FormatCompilerProperty);
  *a1 = byte_1BB94077A[(int)swift_getEnumCaseMultiPayload()];
  return sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatCompilerProperty);
}

void sub_1BA7AC648(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B3798, (uint64_t (*)(uint64_t))sub_1BA7A2A04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  sub_1BA7A2A04(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X11 }
}

uint64_t sub_1BA7AC780()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1BA4C2DD8(v0, *(_QWORD *)(v1 - 248), (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
}

uint64_t sub_1BA7AD174(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption);
}

unint64_t sub_1BA7AD188()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CF7A0;
  if (!qword_1ED3CF7A0)
  {
    sub_1BA4B07F0(255, &qword_1ED3B9538, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CF7A0);
  }
  return result;
}

uint64_t sub_1BA7AD1E8(uint64_t a1, char a2)
{
  return sub_1BB4BD0A4(a1, a2, (void (*)(_QWORD))sub_1BA76BBF4);
}

unint64_t sub_1BA7AD1F4(uint64_t a1)
{
  return sub_1BA8F3B3C(a1, &qword_1ED3CF6B8, (void (*)(uint64_t))type metadata accessor for FormatCompilerProperty, (void (*)(_QWORD, double))sub_1BA8F5CC4);
}

void sub_1BA7AD210(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BA7AD26C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA7AD2C8(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for FormatCompilerSlotDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v4 + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_1BB86E710();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = a1 + *(int *)(a2 + 44);
  v10 = sub_1BB86E710();
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return result;
}

_QWORD *initializeWithCopy for FormatCompilerSlotDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v31)(_QWORD *, uint64_t, uint64_t);
  _QWORD *__dst;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[6];
  v9 = a2[8];
  a1[7] = a2[7];
  a1[8] = v9;
  v10 = *(int *)(a3 + 40);
  __dst = (_QWORD *)((char *)a1 + v10);
  v11 = (_QWORD *)((char *)a2 + v10);
  a1[6] = v8;
  v12 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  v13 = *(_QWORD *)(v12 - 8);
  v31 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31(v11, 1, v12))
  {
    sub_1BA4A3FB4(0, &qword_1ED3CE608, (void (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *__dst = *v11;
    v15 = v11[1];
    swift_bridgeObjectRetain();
    if (v15)
    {
      v16 = v11[2];
      __dst[1] = v15;
      __dst[2] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)(v11 + 1);
    }
    v17 = v13;
    v18 = *(int *)(v12 + 24);
    v19 = (char *)__dst + v18;
    v20 = (char *)v11 + v18;
    v21 = sub_1BB86E710();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v12);
  }
  v24 = *(int *)(a3 + 44);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_1BB86E710();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatCompilerSlotDefinitionItemSet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for FormatCompilerSlotDefinitionItemSet()
{
  uint64_t result;

  result = qword_1ED3CE5C8;
  if (!qword_1ED3CE5C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA7AD72C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA7AD740(a1);
}

uint64_t sub_1BA7AD740@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA7AD75C(a1);
}

uint64_t sub_1BA7AD75C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRetain();
  sub_1BB87420C();
  sub_1BA7114A0();
  v2 = sub_1BB873B04();
  v4 = v3;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA7AD840(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3B9F70, type metadata accessor for FormatCompilerSlotDefinition);
}

uint64_t type metadata accessor for FormatCompilerSlotDefinition(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3CC448);
}

unint64_t sub_1BA7AD868(unint64_t result, unsigned __int8 a2)
{
  if (a2 <= 3u)
    return sub_1BA67035C(result);
  return result;
}

unint64_t sub_1BA7AD87C(unint64_t result, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_1BA7AD868(result, a2);
  return result;
}

unint64_t sub_1BA7AD890(unint64_t result, unsigned __int8 a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_1BA7AD87C(result, a2);
  else
    return swift_bridgeObjectRetain();
}

unint64_t sub_1BA7AD89C(unint64_t result, __int16 a2)
{
  if (HIBYTE(a2) != 255)
    return sub_1BA7AD890(result, a2, HIBYTE(a2) & 1);
  return result;
}

uint64_t sub_1BA7AD8B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (**v10)(char *, _QWORD);
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (**v66)(char *, _QWORD);
  __int128 v67;
  char v68;
  __int128 v69;
  char v70;
  int v71;
  unsigned __int8 v72;
  char v73;

  v65 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  *(_QWORD *)&v62 = (char *)&v51 - v4;
  sub_1BA7607C8();
  v63 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB13F7E4();
  v64 = v9;
  v10 = *(void (***)(char *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAEE5240();
  sub_1BA4A2870(&qword_1ED3D13E0, (uint64_t (*)(uint64_t))sub_1BAEE5240, (uint64_t)&unk_1BB8FFC6C);
  v13 = v66;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v60 = v6;
  v61 = v8;
  v15 = v63;
  v66 = v10;
  v16 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17 = sub_1BB872874();
  v18 = Dictionary<>.errorOnUnknownKeys.getter(v17);
  swift_bridgeObjectRelease();
  v19 = v64;
  v20 = v65;
  if ((v18 & 1) != 0)
  {
    v21 = sub_1BB8740EC();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = (_BYTE *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22)
          goto LABEL_7;
      }
      v26 = v19;
      v28 = *((_QWORD *)v23 - 2);
      v27 = *((_QWORD *)v23 - 1);
      swift_bridgeObjectRetain_n();
      v29 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v29);
      sub_1BA50CAA8(0, &qword_1ED3CE0F8, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
      *((_QWORD *)&v51 - 4) = v30;
      *((_QWORD *)&v51 - 3) = sub_1BAEE52E4();
      *((_QWORD *)&v51 - 2) = sub_1BA7AE0E0();
      *((_QWORD *)&v51 - 1) = sub_1BAEE534C();
      swift_getKeyPath();
      swift_retain();
      v31 = sub_1BAE71220((uint64_t)&unk_1E726D5F8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v32 = v28;
      *(_QWORD *)(v32 + 8) = v27;
      *(_QWORD *)(v32 + 16) = v31;
      *(_OWORD *)(v32 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BAEFDBD0(v28, v27, 1);
      v66[1](v12, v26);
      a1 = v16;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v69 = 0uLL;
  v70 = 0;
  v58 = sub_1BB874098();
  v59 = v24;
  v69 = xmmword_1BB8A1A10;
  v70 = 0;
  v25 = sub_1BB874098();
  v34 = v33;
  v57 = v25;
  v69 = xmmword_1BB8D2D60;
  v70 = 0;
  v35 = sub_1BB874098();
  v37 = v36;
  v56 = v35;
  v69 = xmmword_1BB8D2D70;
  v70 = 0;
  v54 = sub_1BB874098();
  v55 = v38;
  v69 = xmmword_1BB8D2D90;
  v70 = 0;
  v71 = sub_1BB8740A4();
  v69 = xmmword_1BB8D2D80;
  v70 = 0;
  sub_1BB874068();
  v52 = v37;
  v53 = v34;
  v51 = xmmword_1BB8D2DA0;
  v69 = xmmword_1BB8D2DA0;
  v70 = 0;
  v40 = sub_1BB8740F8();
  if ((v40 & 1) != 0)
  {
    v67 = v51;
    v68 = 0;
    sub_1BB8740D4();
    v41 = v62;
    LODWORD(v51) = v72;
  }
  else
  {
    LODWORD(v51) = 0;
    v41 = v62;
  }
  v62 = xmmword_1BB8D2DB0;
  v69 = xmmword_1BB8D2DB0;
  v70 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v67 = v62;
    v68 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v42 = v15;
    sub_1BB8740D4();
    v43 = v61;
    v44 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v43, v42);
  }
  else
  {
    v44 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v69 = xmmword_1BB8D2DD0;
  v70 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v66[1](v12, v19);
  v45 = v73;
  sub_1BA50CAA8(0, &qword_1ED3CE138, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BA646EFC(v41, v20 + *(int *)(v46 + 64), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  *(_BYTE *)(v20 + 65) = v45;
  v47 = v59;
  *(_QWORD *)v20 = v58;
  *(_QWORD *)(v20 + 8) = v47;
  v48 = v53;
  *(_QWORD *)(v20 + 16) = v57;
  *(_QWORD *)(v20 + 24) = v48;
  v49 = v52;
  *(_QWORD *)(v20 + 32) = v56;
  *(_QWORD *)(v20 + 40) = v49;
  v50 = v55;
  *(_QWORD *)(v20 + 48) = v54;
  *(_QWORD *)(v20 + 56) = v50;
  *(_BYTE *)(v20 + 64) = v71 & 1;
  *(_BYTE *)(v20 + 66) = v51;
  *(_QWORD *)(v20 + 72) = v44;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BA7AE0E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CE0F0;
  if (!qword_1ED3CE0F0)
  {
    sub_1BA50CAA8(255, &qword_1ED3CE0F8, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80D0, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CE0F0);
  }
  return result;
}

uint64_t sub_1BA7AE148@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int isUniquelyReferenced_nonNull_native;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;

  v54 = a2;
  sub_1BA7AE8FC(0, &qword_1ED3C91C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v52 - v4;
  v57 = type metadata accessor for FormatSlotDefinition();
  v6 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v52 = (uint64_t)&v52 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v52 - v12);
  v61 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  sub_1BA7AE954();
  result = sub_1BB8727C0();
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = a1;
    v17 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v18 = *(_QWORD *)(v6 + 72);
    v53 = v16;
    swift_bridgeObjectRetain();
    v55 = v5;
    v56 = v6;
    v58 = v18;
    while (1)
    {
      sub_1BA7AE5A4(v17, (uint64_t)v13);
      v20 = v61;
      if (v61[2])
      {
        v21 = *v13;
        v22 = v13[1];
        swift_bridgeObjectRetain();
        v23 = sub_1BA6E35A8(v21, v22);
        if ((v24 & 1) != 0)
        {
          sub_1BA7AE5A4(v20[7] + v23 * v58, (uint64_t)v5);
          v25 = 0;
        }
        else
        {
          v25 = 1;
        }
        v26 = v57;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v5, v25, 1, v57);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v26) != 1)
        {
          swift_bridgeObjectRelease_n();
          v47 = v52;
          sub_1BA7AE86C((uint64_t)v5, v52);
          type metadata accessor for FormatPackageError();
          sub_1BA4A2870((unint64_t *)&qword_1EF2AC008, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageError, (uint64_t)&unk_1BB8F5900);
          swift_allocError();
          v49 = v48;
          sub_1BAB0EA44();
          v51 = v49 + *(int *)(v50 + 48);
          sub_1BA7AE5A4((uint64_t)v13, v49);
          sub_1BA7AE5A4(v47, v51);
          swift_storeEnumTagMultiPayload();
          swift_willThrow();
          sub_1BA7AE78C(v47);
          sub_1BA7AE78C((uint64_t)v13);
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v5, 1, 1, v57);
      }
      v59 = v15;
      sub_1BA7AE8B0((uint64_t)v5);
      v27 = *v13;
      v28 = v13[1];
      v29 = (uint64_t)v13;
      v30 = (uint64_t)v8;
      sub_1BA7AE5A4((uint64_t)v13, (uint64_t)v8);
      swift_bridgeObjectRetain();
      v31 = v61;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v60 = v31;
      v34 = sub_1BA6E35A8(v27, v28);
      v35 = v31[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        break;
      v38 = v33;
      if (v31[3] >= v37)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C2380();
      }
      else
      {
        sub_1BB4AEAC4(v37, isUniquelyReferenced_nonNull_native);
        v39 = sub_1BA6E35A8(v27, v28);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_26;
        v34 = v39;
      }
      v8 = (char *)v30;
      v41 = v60;
      if ((v38 & 1) != 0)
      {
        v19 = v58;
        sub_1BAB0EA00(v30, v60[7] + v34 * v58);
      }
      else
      {
        v60[(v34 >> 6) + 8] |= 1 << v34;
        v42 = (uint64_t *)(v41[6] + 16 * v34);
        *v42 = v27;
        v42[1] = v28;
        v19 = v58;
        sub_1BA7AE86C(v30, v41[7] + v34 * v58);
        v43 = v41[2];
        v44 = __OFADD__(v43, 1);
        v45 = v43 + 1;
        if (v44)
          goto LABEL_25;
        v41[2] = v45;
        swift_bridgeObjectRetain();
      }
      v61 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = (uint64_t *)v29;
      sub_1BA7AE78C(v29);
      v17 += v19;
      v15 = v59 - 1;
      v5 = v55;
      v6 = v56;
      if (v59 == 1)
      {
        a1 = v53;
        result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
    v41 = v61;
LABEL_22:
    v46 = v54;
    *v54 = a1;
    v46[1] = v41;
  }
  return result;
}

uint64_t sub_1BA7AE5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatSlotDefinition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *initializeWithCopy for FormatSlotDefinition(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *__dst;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = *(int *)(a3 + 40);
  __dst = (char *)a1 + v8;
  v9 = (char *)a2 + v8;
  a1[8] = a2[8];
  v10 = sub_1BB86E710();
  v11 = *(_QWORD *)(v10 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v9, 1, v10))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  return a1;
}

uint64_t storeEnumTagSinglePayload for FormatSlotDefinition()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA7AE73C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, (unint64_t *)&unk_1ED3B9E90, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition);
}

uint64_t type metadata accessor for FormatSlotDefinition()
{
  uint64_t result;

  result = qword_1ED3C9178;
  if (!qword_1ED3C9178)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA7AE78C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatSlotDefinition();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for FormatSlotDefinition(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1BB86E710();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1BA7AE86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatSlotDefinition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA7AE8B0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA7AE8FC(0, &qword_1ED3C91C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA7AE8FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for FormatSlotDefinition();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BA7AE954()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CF650)
  {
    type metadata accessor for FormatSlotDefinition();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CF650);
  }
}

uint64_t type metadata accessor for FormatNodeStyleSelectorOrder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatNodeStyleSelectorOrder);
}

uint64_t sub_1BA7AE9C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  unint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  char v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t *v52;
  uint64_t v53;
  unsigned __int8 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  _QWORD *v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  unint64_t v91;
  char v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __int128 v113;
  __int128 v114;
  unsigned __int8 v115;
  __int128 v116;
  char v117;
  char v118;
  unint64_t v119;
  uint64_t v120;
  _BOOL8 v121;
  uint64_t v122;
  char v123;
  unint64_t v124;
  char v125;
  uint64_t v126;
  char v127;
  char v128;
  unint64_t v129;
  uint64_t v130;
  _BOOL8 v131;
  uint64_t v132;
  char v133;
  unint64_t v134;
  char v135;
  _QWORD *v136;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  _QWORD *v156;
  uint64_t v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  uint64_t *v167;
  uint64_t v168;
  unsigned __int8 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  _QWORD *v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  char v204;
  uint64_t v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  unint64_t v215;
  unint64_t v216;
  _QWORD *v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  int v241;
  unsigned __int8 v242;
  uint64_t v243;
  uint64_t result;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unsigned __int8 v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char v287;
  uint64_t v288;
  uint64_t v289;
  unsigned __int8 v290;
  uint64_t v291;
  uint64_t v292;
  char v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unsigned __int8 v299;
  uint64_t v300;
  uint64_t v301;
  char v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  int64_t v315;
  uint64_t v316;
  uint64_t v317;
  _QWORD *v318;
  uint64_t v319;
  _OWORD v320[11];
  char v321;
  _QWORD *v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  unsigned __int8 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  unsigned __int8 v346;
  unint64_t v347;

  swift_beginAccess();
  v4 = v1[2];
  v3 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  swift_beginAccess();
  v249 = v1;
  v7 = v1[6];
  swift_beginAccess();
  v250 = a1;
  v8 = *(_QWORD *)(a1 + 48);
  v347 = MEMORY[0x1E0DEE9E0];
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v8 + 16);
  if (__OFADD__(v9, v10))
    goto LABEL_86;
  v246 = v5;
  v248 = v4;
  sub_1BA7AFCBC();
  v247 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v7;
  sub_1BB8727C0();
  v318 = sub_1BA6E6D30(0, v9, 0, MEMORY[0x1E0DEE9D8]);
  v12 = *(_QWORD *)(v7 + 16);
  v245 = v6;
  v251 = v8;
  if (!v12)
    goto LABEL_20;
  v315 = v10;
  swift_bridgeObjectRetain();
  v13 = *(_OWORD *)(v11 + 176);
  v343 = *(_OWORD *)(v11 + 160);
  v344 = v13;
  v345 = *(_OWORD *)(v11 + 192);
  v346 = *(_BYTE *)(v11 + 208);
  v14 = *(_OWORD *)(v11 + 112);
  v339 = *(_OWORD *)(v11 + 96);
  v340 = v14;
  v15 = *(_OWORD *)(v11 + 144);
  v341 = *(_OWORD *)(v11 + 128);
  v342 = v15;
  v16 = *(_OWORD *)(v11 + 48);
  v335 = *(_OWORD *)(v11 + 32);
  v336 = v16;
  v17 = *(_OWORD *)(v11 + 80);
  v337 = *(_OWORD *)(v11 + 64);
  v338 = v17;
  v18 = *((_QWORD *)&v335 + 1);
  v19 = v12 - 1;
  for (i = 216; ; i += 184)
  {
    v21 = v335;
    sub_1BAC68298((uint64_t)&v335);
    sub_1BAC68298((uint64_t)&v335);
    swift_bridgeObjectRetain();
    v22 = v347;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v320[0] = v22;
    v25 = sub_1BA6E35A8(v21, v18);
    v26 = *(_QWORD *)(v22 + 16);
    v27 = (v24 & 1) == 0;
    v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v29 = v24;
    if (*(_QWORD *)(v22 + 24) >= v28)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v24 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_1BB4C716C();
        if ((v29 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_1BB4B5D9C(v28, isUniquelyReferenced_nonNull_native);
      v30 = sub_1BA6E35A8(v21, v18);
      if ((v29 & 1) != (v31 & 1))
        goto LABEL_87;
      v25 = v30;
      if ((v29 & 1) != 0)
      {
LABEL_11:
        v32 = *(_QWORD **)&v320[0];
        v33 = *(_QWORD *)(*(_QWORD *)&v320[0] + 56) + 184 * v25;
        v34 = *(_OWORD *)(v33 + 48);
        v36 = *(_OWORD *)v33;
        v35 = *(_OWORD *)(v33 + 16);
        v325 = *(_OWORD *)(v33 + 32);
        v326 = v34;
        v323 = v36;
        v324 = v35;
        v37 = *(_OWORD *)(v33 + 112);
        v39 = *(_OWORD *)(v33 + 64);
        v38 = *(_OWORD *)(v33 + 80);
        v329 = *(_OWORD *)(v33 + 96);
        v330 = v37;
        v327 = v39;
        v328 = v38;
        v41 = *(_OWORD *)(v33 + 144);
        v40 = *(_OWORD *)(v33 + 160);
        v42 = *(_OWORD *)(v33 + 128);
        v334 = *(_BYTE *)(v33 + 176);
        v332 = v41;
        v333 = v40;
        v331 = v42;
        sub_1BAC68394((uint64_t)&v323);
        v43 = v338;
        v45 = v335;
        v44 = v336;
        *(_OWORD *)(v33 + 32) = v337;
        *(_OWORD *)(v33 + 48) = v43;
        *(_OWORD *)v33 = v45;
        *(_OWORD *)(v33 + 16) = v44;
        v46 = v342;
        v48 = v339;
        v47 = v340;
        *(_OWORD *)(v33 + 96) = v341;
        *(_OWORD *)(v33 + 112) = v46;
        *(_OWORD *)(v33 + 64) = v48;
        *(_OWORD *)(v33 + 80) = v47;
        v50 = v344;
        v49 = v345;
        v51 = v343;
        *(_BYTE *)(v33 + 176) = v346;
        *(_OWORD *)(v33 + 144) = v50;
        *(_OWORD *)(v33 + 160) = v49;
        *(_OWORD *)(v33 + 128) = v51;
        goto LABEL_15;
      }
    }
    v32 = *(_QWORD **)&v320[0];
    *(_QWORD *)(*(_QWORD *)&v320[0] + 8 * (v25 >> 6) + 64) |= 1 << v25;
    v52 = (uint64_t *)(v32[6] + 16 * v25);
    *v52 = v21;
    v52[1] = v18;
    v53 = v32[7] + 184 * v25;
    v54 = v346;
    v56 = v344;
    v55 = v345;
    *(_OWORD *)(v53 + 128) = v343;
    *(_OWORD *)(v53 + 144) = v56;
    *(_OWORD *)(v53 + 160) = v55;
    *(_BYTE *)(v53 + 176) = v54;
    v58 = v341;
    v57 = v342;
    v59 = v340;
    *(_OWORD *)(v53 + 64) = v339;
    *(_OWORD *)(v53 + 80) = v59;
    *(_OWORD *)(v53 + 96) = v58;
    *(_OWORD *)(v53 + 112) = v57;
    v61 = v337;
    v60 = v338;
    v62 = v336;
    *(_OWORD *)v53 = v335;
    *(_OWORD *)(v53 + 16) = v62;
    *(_OWORD *)(v53 + 32) = v61;
    *(_OWORD *)(v53 + 48) = v60;
    v63 = v32[2];
    v64 = __OFADD__(v63, 1);
    v65 = v63 + 1;
    if (v64)
      goto LABEL_82;
    v32[2] = v65;
    swift_bridgeObjectRetain();
LABEL_15:
    v347 = (unint64_t)v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v66 = v318[2];
    v67 = v318[3];
    swift_bridgeObjectRetain();
    if (v66 >= v67 >> 1)
      v318 = sub_1BA6E6D30((_QWORD *)(v67 > 1), v66 + 1, 1, v318);
    v318[2] = v66 + 1;
    v68 = &v318[2 * v66];
    v68[4] = v21;
    v68[5] = v18;
    sub_1BAC68394((uint64_t)&v335);
    if (!v19)
      break;
    v69 = *(_OWORD *)(v11 + i);
    v70 = *(_OWORD *)(v11 + i + 16);
    v71 = *(_OWORD *)(v11 + i + 48);
    v337 = *(_OWORD *)(v11 + i + 32);
    v338 = v71;
    v335 = v69;
    v336 = v70;
    v72 = *(_OWORD *)(v11 + i + 64);
    v73 = *(_OWORD *)(v11 + i + 80);
    v74 = *(_OWORD *)(v11 + i + 112);
    v341 = *(_OWORD *)(v11 + i + 96);
    v342 = v74;
    v339 = v72;
    v340 = v73;
    v75 = *(_OWORD *)(v11 + i + 128);
    v76 = *(_OWORD *)(v11 + i + 144);
    v77 = *(_OWORD *)(v11 + i + 160);
    v346 = *(_BYTE *)(v11 + i + 176);
    v344 = v76;
    v345 = v77;
    v343 = v75;
    v18 = *((_QWORD *)&v335 + 1);
    --v19;
  }
  swift_bridgeObjectRelease();
  v8 = v251;
  v10 = v315;
LABEL_20:
  v78 = sub_1BA6E6D30(0, v10, 0, MEMORY[0x1E0DEE9D8]);
  v79 = *(_QWORD *)(v8 + 16);
  if (!v79)
    goto LABEL_60;
  swift_bridgeObjectRetain();
  v80 = *(_OWORD *)(v8 + 176);
  v343 = *(_OWORD *)(v8 + 160);
  v344 = v80;
  v345 = *(_OWORD *)(v8 + 192);
  v346 = *(_BYTE *)(v8 + 208);
  v81 = *(_OWORD *)(v8 + 112);
  v339 = *(_OWORD *)(v8 + 96);
  v340 = v81;
  v82 = *(_OWORD *)(v8 + 144);
  v341 = *(_OWORD *)(v8 + 128);
  v342 = v82;
  v83 = *(_OWORD *)(v8 + 48);
  v335 = *(_OWORD *)(v8 + 32);
  v336 = v83;
  v84 = *(_OWORD *)(v8 + 80);
  v337 = *(_OWORD *)(v8 + 64);
  v338 = v84;
  v85 = v79 - 1;
  v86 = *((_QWORD *)&v335 + 1);
  v87 = 216;
  while (2)
  {
    v88 = v335;
    v89 = (_QWORD *)v347;
    v90 = *(_QWORD *)(v347 + 16);
    sub_1BAC68298((uint64_t)&v335);
    if (v90)
    {
      swift_bridgeObjectRetain();
      v91 = sub_1BA6E35A8(v88, v86);
      if ((v92 & 1) != 0)
      {
        v93 = v89[7] + 184 * v91;
        v95 = *(_OWORD *)(v93 + 32);
        v94 = *(_OWORD *)(v93 + 48);
        v96 = *(_OWORD *)(v93 + 16);
        v323 = *(_OWORD *)v93;
        v324 = v96;
        v325 = v95;
        v326 = v94;
        v97 = *(_OWORD *)(v93 + 64);
        v98 = *(_OWORD *)(v93 + 80);
        v99 = *(_OWORD *)(v93 + 112);
        v329 = *(_OWORD *)(v93 + 96);
        v330 = v99;
        v327 = v97;
        v328 = v98;
        v100 = *(_OWORD *)(v93 + 128);
        v101 = *(_OWORD *)(v93 + 144);
        v102 = *(_OWORD *)(v93 + 160);
        v334 = *(_BYTE *)(v93 + 176);
        v332 = v101;
        v333 = v102;
        v331 = v100;
        sub_1BAC68298((uint64_t)&v323);
        swift_bridgeObjectRelease();
        v104 = *((_QWORD *)&v324 + 1);
        v103 = v324;
        v106 = *((_QWORD *)&v325 + 1);
        v105 = v325;
        v108 = *((_QWORD *)&v326 + 1);
        v107 = v326;
        v289 = *((_QWORD *)&v324 + 1);
        v291 = v324;
        v285 = *((_QWORD *)&v325 + 1);
        v287 = v325;
        v281 = *((_QWORD *)&v326 + 1);
        v283 = v326;
        v277 = *((_QWORD *)&v327 + 1);
        v295 = *((_QWORD *)&v327 + 1);
        v279 = v327;
        v297 = v327;
        v293 = v328;
        v275 = v328;
        if (v328 == 255)
        {
          v104 = *((_QWORD *)&v336 + 1);
          v103 = v336;
          v106 = *((_QWORD *)&v337 + 1);
          v105 = v337;
          v108 = *((_QWORD *)&v338 + 1);
          v107 = v338;
          v293 = v340;
          v295 = *((_QWORD *)&v339 + 1);
          v297 = v339;
          sub_1BA7AF9CC(v336, *((uint64_t *)&v336 + 1), v337, *((uint64_t *)&v337 + 1), v338, *((uint64_t *)&v338 + 1), v339, *((uint64_t *)&v339 + 1), v340);
        }
        v256 = v106;
        v258 = v105;
        v252 = v103;
        v264 = v78;
        v109 = *((_QWORD *)&v328 + 1);
        if (!*((_QWORD *)&v328 + 1))
          v109 = swift_bridgeObjectRetain();
        v253 = v109;
        v254 = v108;
        v260 = v104;
        v111 = *((_QWORD *)&v329 + 1);
        v110 = v329;
        v112 = *((_QWORD *)&v331 + 1);
        v113 = v332;
        v114 = v333;
        v272 = *((_QWORD *)&v329 + 1);
        v274 = v329;
        v268 = *((_QWORD *)&v330 + 1);
        v313 = *((_QWORD *)&v330 + 1);
        v270 = v330;
        v316 = v330;
        v309 = *((_QWORD *)&v331 + 1);
        v266 = v331;
        v311 = v331;
        v305 = *((_QWORD *)&v332 + 1);
        v307 = v332;
        v301 = *((_QWORD *)&v333 + 1);
        v303 = v333;
        v115 = v334;
        v299 = v334;
        if (v334 == 254)
        {
          v111 = *((_QWORD *)&v341 + 1);
          v110 = v341;
          v299 = v346;
          v301 = *((_QWORD *)&v345 + 1);
          v303 = v345;
          v313 = *((_QWORD *)&v342 + 1);
          v316 = v342;
          v309 = *((_QWORD *)&v343 + 1);
          v311 = v343;
          v305 = *((_QWORD *)&v344 + 1);
          v307 = v344;
          sub_1BA6E8A48(v341, *((uint64_t *)&v341 + 1), v342, *((uint64_t *)&v342 + 1), v343, *((uint64_t *)&v343 + 1), v344, *((uint64_t *)&v344 + 1), v345, *((uint64_t *)&v345 + 1), v346);
        }
        v116 = v323;
        swift_bridgeObjectRetain_n();
        sub_1BA7AF9CC(v291, v289, v287, v285, v283, v281, v279, v277, v275);
        swift_bridgeObjectRetain();
        sub_1BA6E8A48(v274, v272, v270, v268, v266, v112, v113, *((uint64_t *)&v113 + 1), v114, *((uint64_t *)&v114 + 1), v115);
        v117 = swift_isUniquelyReferenced_nonNull_native();
        v322 = v89;
        v347 = 0x8000000000000000;
        v119 = sub_1BA6E35A8(v116, *((uint64_t *)&v116 + 1));
        v120 = v89[2];
        v121 = (v118 & 1) == 0;
        v122 = v120 + v121;
        if (__OFADD__(v120, v121))
          goto LABEL_84;
        v123 = v118;
        if (v89[3] >= v122)
        {
          v78 = v264;
          if ((v117 & 1) != 0)
          {
            v126 = v252;
            if ((v118 & 1) == 0)
              goto LABEL_55;
          }
          else
          {
            sub_1BB4C716C();
            v126 = v252;
            if ((v123 & 1) == 0)
              goto LABEL_55;
          }
        }
        else
        {
          sub_1BB4B5D9C(v122, v117);
          v124 = sub_1BA6E35A8(v116, *((uint64_t *)&v116 + 1));
          v78 = v264;
          if ((v123 & 1) != (v125 & 1))
            goto LABEL_87;
          v119 = v124;
          v126 = v252;
          if ((v123 & 1) == 0)
          {
LABEL_55:
            v156 = v322;
            v322[(v119 >> 6) + 8] |= 1 << v119;
            *(_OWORD *)(v156[6] + 16 * v119) = v116;
            v183 = v156[7] + 184 * v119;
            *(_OWORD *)v183 = v116;
            *(_QWORD *)(v183 + 16) = v126;
            *(_QWORD *)(v183 + 24) = v260;
            *(_QWORD *)(v183 + 32) = v258;
            *(_QWORD *)(v183 + 40) = v256;
            *(_QWORD *)(v183 + 48) = v107;
            *(_QWORD *)(v183 + 56) = v254;
            *(_QWORD *)(v183 + 64) = v297;
            *(_QWORD *)(v183 + 72) = v295;
            *(_BYTE *)(v183 + 80) = v293;
            *(_QWORD *)(v183 + 88) = v253;
            *(_QWORD *)(v183 + 96) = v110;
            *(_QWORD *)(v183 + 104) = v111;
            *(_QWORD *)(v183 + 112) = v316;
            *(_QWORD *)(v183 + 120) = v313;
            *(_QWORD *)(v183 + 128) = v311;
            *(_QWORD *)(v183 + 136) = v309;
            *(_QWORD *)(v183 + 144) = v307;
            *(_QWORD *)(v183 + 152) = v305;
            *(_QWORD *)(v183 + 160) = v303;
            *(_QWORD *)(v183 + 168) = v301;
            *(_BYTE *)(v183 + 176) = v299;
            v184 = v156[2];
            v64 = __OFADD__(v184, 1);
            v185 = v184 + 1;
            if (v64)
              goto LABEL_85;
            v156[2] = v185;
            swift_bridgeObjectRetain();
            goto LABEL_57;
          }
        }
        v156 = v322;
        v157 = v322[7] + 184 * v119;
        v158 = *(_OWORD *)(v157 + 48);
        v160 = *(_OWORD *)v157;
        v159 = *(_OWORD *)(v157 + 16);
        v320[2] = *(_OWORD *)(v157 + 32);
        v320[3] = v158;
        v320[0] = v160;
        v320[1] = v159;
        v161 = *(_OWORD *)(v157 + 112);
        v163 = *(_OWORD *)(v157 + 64);
        v162 = *(_OWORD *)(v157 + 80);
        v320[6] = *(_OWORD *)(v157 + 96);
        v320[7] = v161;
        v320[4] = v163;
        v320[5] = v162;
        v165 = *(_OWORD *)(v157 + 144);
        v164 = *(_OWORD *)(v157 + 160);
        v166 = *(_OWORD *)(v157 + 128);
        v321 = *(_BYTE *)(v157 + 176);
        v320[9] = v165;
        v320[10] = v164;
        v320[8] = v166;
        sub_1BAC68394((uint64_t)v320);
        *(_OWORD *)v157 = v116;
        *(_QWORD *)(v157 + 16) = v126;
        *(_QWORD *)(v157 + 24) = v260;
        *(_QWORD *)(v157 + 32) = v258;
        *(_QWORD *)(v157 + 40) = v256;
        *(_QWORD *)(v157 + 48) = v107;
        *(_QWORD *)(v157 + 56) = v254;
        *(_QWORD *)(v157 + 64) = v297;
        *(_QWORD *)(v157 + 72) = v295;
        *(_BYTE *)(v157 + 80) = v293;
        *(_QWORD *)(v157 + 88) = v253;
        *(_QWORD *)(v157 + 96) = v110;
        *(_QWORD *)(v157 + 104) = v111;
        *(_QWORD *)(v157 + 112) = v316;
        *(_QWORD *)(v157 + 120) = v313;
        *(_QWORD *)(v157 + 128) = v311;
        *(_QWORD *)(v157 + 136) = v309;
        *(_QWORD *)(v157 + 144) = v307;
        *(_QWORD *)(v157 + 152) = v305;
        *(_QWORD *)(v157 + 160) = v303;
        *(_QWORD *)(v157 + 168) = v301;
        *(_BYTE *)(v157 + 176) = v299;
LABEL_57:
        v347 = (unint64_t)v156;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC68394((uint64_t)&v323);
        sub_1BAC68394((uint64_t)&v335);
        v8 = v251;
        if (!v85)
          goto LABEL_59;
LABEL_58:
        v186 = *(_OWORD *)(v8 + v87);
        v187 = *(_OWORD *)(v8 + v87 + 16);
        v188 = *(_OWORD *)(v8 + v87 + 48);
        v337 = *(_OWORD *)(v8 + v87 + 32);
        v338 = v188;
        v335 = v186;
        v336 = v187;
        v189 = *(_OWORD *)(v8 + v87 + 64);
        v190 = *(_OWORD *)(v8 + v87 + 80);
        v191 = *(_OWORD *)(v8 + v87 + 112);
        v341 = *(_OWORD *)(v8 + v87 + 96);
        v342 = v191;
        v339 = v189;
        v340 = v190;
        v192 = *(_OWORD *)(v8 + v87 + 128);
        v193 = *(_OWORD *)(v8 + v87 + 144);
        v194 = *(_OWORD *)(v8 + v87 + 160);
        v346 = *(_BYTE *)(v8 + v87 + 176);
        v344 = v193;
        v345 = v194;
        v343 = v192;
        v86 = *((_QWORD *)&v335 + 1);
        v87 += 184;
        --v85;
        continue;
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  sub_1BAC68298((uint64_t)&v335);
  swift_bridgeObjectRetain();
  v127 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v320[0] = v89;
  v129 = sub_1BA6E35A8(v88, v86);
  v130 = v89[2];
  v131 = (v128 & 1) == 0;
  v132 = v130 + v131;
  if (__OFADD__(v130, v131))
    goto LABEL_81;
  v133 = v128;
  if (v89[3] >= v132)
  {
    if ((v127 & 1) != 0)
    {
      if ((v128 & 1) == 0)
        goto LABEL_48;
    }
    else
    {
      sub_1BB4C716C();
      if ((v133 & 1) == 0)
        goto LABEL_48;
    }
    goto LABEL_43;
  }
  sub_1BB4B5D9C(v132, v127);
  v134 = sub_1BA6E35A8(v88, v86);
  if ((v133 & 1) != (v135 & 1))
    goto LABEL_87;
  v129 = v134;
  if ((v133 & 1) != 0)
  {
LABEL_43:
    v136 = *(_QWORD **)&v320[0];
    v137 = *(_QWORD *)(*(_QWORD *)&v320[0] + 56) + 184 * v129;
    v138 = *(_OWORD *)(v137 + 48);
    v140 = *(_OWORD *)v137;
    v139 = *(_OWORD *)(v137 + 16);
    v325 = *(_OWORD *)(v137 + 32);
    v326 = v138;
    v323 = v140;
    v324 = v139;
    v141 = *(_OWORD *)(v137 + 112);
    v143 = *(_OWORD *)(v137 + 64);
    v142 = *(_OWORD *)(v137 + 80);
    v329 = *(_OWORD *)(v137 + 96);
    v330 = v141;
    v327 = v143;
    v328 = v142;
    v145 = *(_OWORD *)(v137 + 144);
    v144 = *(_OWORD *)(v137 + 160);
    v146 = *(_OWORD *)(v137 + 128);
    v334 = *(_BYTE *)(v137 + 176);
    v332 = v145;
    v333 = v144;
    v331 = v146;
    sub_1BAC68394((uint64_t)&v323);
    v147 = v338;
    v149 = v335;
    v148 = v336;
    *(_OWORD *)(v137 + 32) = v337;
    *(_OWORD *)(v137 + 48) = v147;
    *(_OWORD *)v137 = v149;
    *(_OWORD *)(v137 + 16) = v148;
    v150 = v342;
    v152 = v339;
    v151 = v340;
    *(_OWORD *)(v137 + 96) = v341;
    *(_OWORD *)(v137 + 112) = v150;
    *(_OWORD *)(v137 + 64) = v152;
    *(_OWORD *)(v137 + 80) = v151;
    v154 = v344;
    v153 = v345;
    v155 = v343;
    *(_BYTE *)(v137 + 176) = v346;
    *(_OWORD *)(v137 + 144) = v154;
    *(_OWORD *)(v137 + 160) = v153;
    *(_OWORD *)(v137 + 128) = v155;
    goto LABEL_50;
  }
LABEL_48:
  v136 = *(_QWORD **)&v320[0];
  *(_QWORD *)(*(_QWORD *)&v320[0] + 8 * (v129 >> 6) + 64) |= 1 << v129;
  v167 = (uint64_t *)(v136[6] + 16 * v129);
  *v167 = v88;
  v167[1] = v86;
  v168 = v136[7] + 184 * v129;
  v169 = v346;
  v171 = v344;
  v170 = v345;
  *(_OWORD *)(v168 + 128) = v343;
  *(_OWORD *)(v168 + 144) = v171;
  *(_OWORD *)(v168 + 160) = v170;
  *(_BYTE *)(v168 + 176) = v169;
  v173 = v341;
  v172 = v342;
  v174 = v340;
  *(_OWORD *)(v168 + 64) = v339;
  *(_OWORD *)(v168 + 80) = v174;
  *(_OWORD *)(v168 + 96) = v173;
  *(_OWORD *)(v168 + 112) = v172;
  v176 = v337;
  v175 = v338;
  v177 = v336;
  *(_OWORD *)v168 = v335;
  *(_OWORD *)(v168 + 16) = v177;
  *(_OWORD *)(v168 + 32) = v176;
  *(_OWORD *)(v168 + 48) = v175;
  v178 = v136[2];
  v64 = __OFADD__(v178, 1);
  v179 = v178 + 1;
  if (v64)
    goto LABEL_83;
  v136[2] = v179;
  swift_bridgeObjectRetain();
LABEL_50:
  v347 = (unint64_t)v136;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v180 = v78[2];
  v181 = v78[3];
  swift_bridgeObjectRetain();
  if (v180 >= v181 >> 1)
    v78 = sub_1BA6E6D30((_QWORD *)(v181 > 1), v180 + 1, 1, v78);
  v78[2] = v180 + 1;
  v182 = &v78[2 * v180];
  v182[4] = v88;
  v182[5] = v86;
  sub_1BAC68394((uint64_t)&v335);
  if (v85)
    goto LABEL_58;
LABEL_59:
  swift_bridgeObjectRelease();
LABEL_60:
  *(_QWORD *)&v335 = v78;
  swift_bridgeObjectRetain();
  v195 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v195);
  v196 = v335;
  v197 = *(_QWORD *)(v335 + 16);
  if (v197)
  {
    swift_bridgeObjectRetain();
    v198 = (uint64_t *)(v196 + 40);
    v199 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v200 = v347;
      if (*(_QWORD *)(v347 + 16))
      {
        v202 = *(v198 - 1);
        v201 = *v198;
        swift_bridgeObjectRetain_n();
        v203 = sub_1BA6E35A8(v202, v201);
        if ((v204 & 1) != 0)
        {
          v205 = *(_QWORD *)(v200 + 56) + 184 * v203;
          v207 = *(_OWORD *)(v205 + 32);
          v206 = *(_OWORD *)(v205 + 48);
          v208 = *(_OWORD *)(v205 + 16);
          v335 = *(_OWORD *)v205;
          v336 = v208;
          v337 = v207;
          v338 = v206;
          v209 = *(_OWORD *)(v205 + 64);
          v210 = *(_OWORD *)(v205 + 80);
          v211 = *(_OWORD *)(v205 + 112);
          v341 = *(_OWORD *)(v205 + 96);
          v342 = v211;
          v339 = v209;
          v340 = v210;
          v212 = *(_OWORD *)(v205 + 128);
          v213 = *(_OWORD *)(v205 + 144);
          v214 = *(_OWORD *)(v205 + 160);
          v346 = *(_BYTE *)(v205 + 176);
          v344 = v213;
          v345 = v214;
          v343 = v212;
          sub_1BAC68298((uint64_t)&v335);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v199 = sub_1BA7AFA90(0, v199[2] + 1, 1, v199);
          v216 = v199[2];
          v215 = v199[3];
          if (v216 >= v215 >> 1)
            v199 = sub_1BA7AFA90((_QWORD *)(v215 > 1), v216 + 1, 1, v199);
          v199[2] = v216 + 1;
          v217 = &v199[23 * v216];
          v218 = v335;
          v219 = v336;
          v220 = v338;
          *((_OWORD *)v217 + 4) = v337;
          *((_OWORD *)v217 + 5) = v220;
          *((_OWORD *)v217 + 2) = v218;
          *((_OWORD *)v217 + 3) = v219;
          v221 = v339;
          v222 = v340;
          v223 = v342;
          *((_OWORD *)v217 + 8) = v341;
          *((_OWORD *)v217 + 9) = v223;
          *((_OWORD *)v217 + 6) = v221;
          *((_OWORD *)v217 + 7) = v222;
          v224 = v343;
          v225 = v344;
          v226 = v345;
          *((_BYTE *)v217 + 208) = v346;
          *((_OWORD *)v217 + 11) = v225;
          *((_OWORD *)v217 + 12) = v226;
          *((_OWORD *)v217 + 10) = v224;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v198 += 2;
      --v197;
    }
    while (v197);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v199 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v227 = v249[7];
  v228 = v249[8];
  v229 = v249[9];
  v230 = v249[10];
  v231 = v249[11];
  v232 = v249[12];
  v233 = v249[13];
  v304 = v228;
  v306 = v227;
  v300 = v230;
  v302 = v229;
  v296 = v232;
  v298 = v231;
  v292 = v249[14];
  v294 = v233;
  v310 = v292;
  v308 = *((unsigned __int8 *)v249 + 120);
  v290 = *((_BYTE *)v249 + 120);
  if (v308 == 255)
  {
    v227 = *(_QWORD *)(v250 + 56);
    v228 = *(_QWORD *)(v250 + 64);
    v229 = *(_QWORD *)(v250 + 72);
    v230 = *(_QWORD *)(v250 + 80);
    v231 = *(_QWORD *)(v250 + 88);
    v232 = *(_QWORD *)(v250 + 96);
    v233 = *(_QWORD *)(v250 + 104);
    LOBYTE(v308) = *(_BYTE *)(v250 + 120);
    v310 = *(_QWORD *)(v250 + 112);
    sub_1BA7AF9CC(v227, v228, v229, v230, v231, v232, v233, v310, v308);
  }
  v276 = v233;
  v278 = v232;
  v280 = v231;
  v282 = v230;
  v284 = v229;
  v286 = v228;
  v288 = v227;
  v234 = v249[16];
  if (!v234)
    v234 = swift_bridgeObjectRetain();
  v255 = v234;
  v236 = v249[21];
  v235 = v249[22];
  v237 = v249[23];
  v238 = v249[24];
  v239 = v249[25];
  v240 = v249[26];
  v271 = v249[18];
  v273 = v249[17];
  v317 = v271;
  v319 = v273;
  v267 = v249[20];
  v269 = v249[19];
  v312 = v267;
  v314 = v269;
  v263 = v235;
  v265 = v236;
  v261 = v238;
  v262 = v237;
  v257 = v240;
  v259 = v239;
  v241 = *((unsigned __int8 *)v249 + 216);
  v242 = *((_BYTE *)v249 + 216);
  if (v241 == 254)
  {
    v236 = *(_QWORD *)(v250 + 168);
    v235 = *(_QWORD *)(v250 + 176);
    v237 = *(_QWORD *)(v250 + 184);
    v238 = *(_QWORD *)(v250 + 192);
    v239 = *(_QWORD *)(v250 + 200);
    v240 = *(_QWORD *)(v250 + 208);
    v242 = *(_BYTE *)(v250 + 216);
    v317 = *(_QWORD *)(v250 + 144);
    v319 = *(_QWORD *)(v250 + 136);
    v312 = *(_QWORD *)(v250 + 160);
    v314 = *(_QWORD *)(v250 + 152);
    sub_1BA6E8A48(v319, v317, v314, v312, v236, v235, v237, v238, v239, v240, v242);
  }
  v243 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v243 + 16) = v248;
  *(_QWORD *)(v243 + 24) = v247;
  *(_QWORD *)(v243 + 32) = v246;
  *(_QWORD *)(v243 + 40) = v245;
  swift_beginAccess();
  *(_QWORD *)(v243 + 48) = v199;
  *(_QWORD *)(v243 + 56) = v288;
  *(_QWORD *)(v243 + 64) = v286;
  *(_QWORD *)(v243 + 72) = v284;
  *(_QWORD *)(v243 + 80) = v282;
  *(_QWORD *)(v243 + 88) = v280;
  *(_QWORD *)(v243 + 96) = v278;
  *(_QWORD *)(v243 + 104) = v276;
  *(_QWORD *)(v243 + 112) = v310;
  *(_BYTE *)(v243 + 120) = v308;
  *(_QWORD *)(v243 + 128) = v255;
  *(_QWORD *)(v243 + 136) = v319;
  *(_QWORD *)(v243 + 144) = v317;
  *(_QWORD *)(v243 + 152) = v314;
  *(_QWORD *)(v243 + 160) = v312;
  *(_QWORD *)(v243 + 168) = v236;
  *(_QWORD *)(v243 + 176) = v235;
  *(_QWORD *)(v243 + 184) = v237;
  *(_QWORD *)(v243 + 192) = v238;
  *(_QWORD *)(v243 + 200) = v239;
  *(_QWORD *)(v243 + 208) = v240;
  *(_BYTE *)(v243 + 216) = v242;
  sub_1BA7AF9CC(v306, v304, v302, v300, v298, v296, v294, v292, v290);
  swift_bridgeObjectRetain();
  sub_1BA6E8A48(v273, v271, v269, v267, v265, v263, v262, v261, v259, v257, v241);
  return v243;
}

uint64_t sub_1BA7AF9CC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 != 255)
    return sub_1BA7AF9FC(result, a2, a3, a4, a5, a6, a7, a8, a9);
  return result;
}

uint64_t sub_1BA7AF9E4(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 != 255)
    return sub_1BA5608E0(result, a2, a3, a4, a5, a6, a7, a8, a9);
  return result;
}

uint64_t sub_1BA7AF9FC(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 2:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_1BA5DCC20(a7);
    case 1:
      return swift_bridgeObjectRetain();
    case 0:
      return sub_1BA6F2B04(result, a2, a3);
  }
  return result;
}

_QWORD *sub_1BA7AFA90(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3AB8F0, (uint64_t)&type metadata for FormatGroupNodeMaskStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 184);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[23 * v8 + 4])
          memmove(v12, a4 + 4, 184 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA7AFBCC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA7AFBCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 184 * a1 + 32;
    v6 = a3 + 184 * v4;
    if (v5 >= v6 || v5 + 184 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA7AFCBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AAC30)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AAC30);
  }
}

uint64_t initializeWithCopy for FormatDecorationContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v8 = a2 + 32;
  v7 = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v10 = *(void **)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v10;
    v11 = *(_QWORD *)(a2 + 56);
    v12 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    swift_bridgeObjectRetain();
    v13 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
    *(_OWORD *)(a1 + 48) = v14;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v8 + 32);
  }
  v15 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v15;
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1BB86D7A4();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21 = v15;
  v20(v17, v18, v19);
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  v26 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA7AFE78@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int64_t i;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char isUniquelyReferenced_nonNull_native;
  char v59;
  unint64_t v60;
  uint64_t v61;
  _BOOL8 v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  char v66;
  _QWORD *v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  _OWORD *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  void *v91;
  _OWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int64_t v103;
  char *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int64_t v108;
  _OWORD v109[2];
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  _OWORD v117[2];
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  _OWORD v125[18];
  uint64_t v126;
  _QWORD *v127;

  v93 = a2;
  sub_1BA7B0CB8(0, (unint64_t *)&qword_1ED3B37B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v99 = (uint64_t)&v92 - v4;
  sub_1BA7B06D8(0);
  v98 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v96 = (uint64_t)&v92 - v10;
  MEMORY[0x1E0C80A78](v11);
  v92 = (_OWORD *)((char *)&v92 - v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v92 - v14;
  v16 = MEMORY[0x1E0DEE9E0];
  v127 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  sub_1BA7B0D10();
  sub_1BB8727C0();
  v126 = v16;
  sub_1BA7B0D84();
  result = sub_1BB8727C0();
  v95 = *(_QWORD *)(a1 + 16);
  if (!v95)
  {
    v24 = v126;
    goto LABEL_52;
  }
  v105 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v97 = a1 + v105;
  swift_bridgeObjectRetain();
  v18 = 0;
  v104 = v15;
  v100 = v6;
  v94 = a1;
  while (2)
  {
    if (v18 >= *(_QWORD *)(a1 + 16))
    {
LABEL_58:
      __break(1u);
LABEL_59:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v106 = *(_QWORD *)(v6 + 72);
    sub_1BA7B0658(v97 + v106 * v18, (uint64_t)v15);
    v25 = v126;
    if (*(_QWORD *)(v126 + 16))
    {
      v26 = *(_QWORD *)v15;
      v27 = *((_QWORD *)v15 + 1);
      swift_bridgeObjectRetain();
      v28 = sub_1BA6E35A8(v26, v27);
      v29 = v18;
      if ((v30 & 1) != 0)
      {
        v31 = *(_QWORD *)(v25 + 56) + v28 * v106;
        v32 = v99;
        sub_1BA7B0658(v31, v99);
        v33 = 0;
      }
      else
      {
        v33 = 1;
        v32 = v99;
      }
      v34 = v100;
      v35 = v98;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v100 + 56))(v32, v33, 1, v98);
      swift_bridgeObjectRelease();
      v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v35);
      v18 = v29;
      if (v36 != 1)
      {
LABEL_54:
        swift_bridgeObjectRelease_n();
        v73 = v92;
        sub_1BA7B0830(v32, (uint64_t)v92);
        type metadata accessor for FormatPackageError();
        sub_1BA4A2870((unint64_t *)&qword_1EF2AC008, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageError, (uint64_t)&unk_1BB8F5900);
        swift_allocError();
        v74 = *((_OWORD *)v15 + 5);
        v75 = *((_OWORD *)v15 + 7);
        v114 = *((_OWORD *)v15 + 6);
        v115 = v75;
        v76 = *((_OWORD *)v15 + 7);
        v116 = *((_OWORD *)v15 + 8);
        v77 = *((_OWORD *)v15 + 1);
        v78 = *((_OWORD *)v15 + 3);
        v110 = *((_OWORD *)v15 + 2);
        v111 = v78;
        v79 = *((_OWORD *)v15 + 3);
        v80 = *((_OWORD *)v15 + 5);
        v112 = *((_OWORD *)v15 + 4);
        v113 = v80;
        v81 = *((_OWORD *)v15 + 1);
        v109[0] = *(_OWORD *)v15;
        v109[1] = v81;
        v82 = v73[5];
        v83 = v73[7];
        v122 = v73[6];
        v123 = v83;
        v84 = v73[7];
        v124 = v73[8];
        v85 = v73[1];
        v86 = v73[3];
        v118 = v73[2];
        v119 = v86;
        v87 = v73[3];
        v88 = v73[5];
        v120 = v73[4];
        v121 = v88;
        v89 = v73[1];
        v117[0] = *v73;
        v117[1] = v89;
        v125[6] = v114;
        v125[7] = v76;
        v125[2] = v110;
        v125[3] = v79;
        v125[4] = v112;
        v125[5] = v74;
        v125[0] = v109[0];
        v125[1] = v77;
        v125[14] = v82;
        v125[15] = v122;
        v90 = v73[8];
        v125[16] = v84;
        v125[17] = v90;
        v125[10] = v85;
        v125[11] = v118;
        v125[12] = v87;
        v125[13] = v120;
        v125[8] = *((_OWORD *)v15 + 8);
        v125[9] = v117[0];
        memcpy(v91, v125, 0x120uLL);
        swift_storeEnumTagMultiPayload();
        sub_1BA8C88FC((uint64_t)v109);
        sub_1BA8C88FC((uint64_t)v117);
        swift_willThrow();
        sub_1BA7B069C((uint64_t)v73);
        sub_1BA7B069C((uint64_t)v15);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      v32 = v99;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v99, 1, 1, v98);
    }
    v101 = v18 + 1;
    sub_1BA7B0C6C(v32);
    v37 = *((_QWORD *)v15 + 7);
    v38 = *(_QWORD *)(v37 + 56);
    v102 = v37 + 56;
    v39 = 1 << *(_BYTE *)(v37 + 32);
    if (v39 < 64)
      v40 = ~(-1 << v39);
    else
      v40 = -1;
    v41 = v40 & v38;
    v103 = (unint64_t)(v39 + 63) >> 6;
    v107 = v37;
    swift_bridgeObjectRetain();
    for (i = 0; ; i = v108)
    {
      if (v41)
      {
        v44 = __clz(__rbit64(v41));
        v41 &= v41 - 1;
        v108 = i;
        v45 = v44 | (i << 6);
        goto LABEL_33;
      }
      v46 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_56;
      if (v46 >= v103)
        break;
      v47 = *(_QWORD *)(v102 + 8 * v46);
      v48 = i + 1;
      if (!v47)
      {
        v48 = i + 2;
        if (i + 2 >= v103)
          break;
        v47 = *(_QWORD *)(v102 + 8 * v48);
        if (!v47)
        {
          v48 = i + 3;
          if (i + 3 >= v103)
            break;
          v47 = *(_QWORD *)(v102 + 8 * v48);
          if (!v47)
          {
            v49 = i + 4;
            if (i + 4 >= v103)
              break;
            v47 = *(_QWORD *)(v102 + 8 * v49);
            if (!v47)
            {
              while (1)
              {
                v48 = v49 + 1;
                if (__OFADD__(v49, 1))
                  goto LABEL_57;
                if (v48 >= v103)
                  goto LABEL_3;
                v47 = *(_QWORD *)(v102 + 8 * v48);
                ++v49;
                if (v47)
                  goto LABEL_32;
              }
            }
            v48 = i + 4;
          }
        }
      }
LABEL_32:
      v41 = (v47 - 1) & v47;
      v108 = v48;
      v45 = __clz(__rbit64(v47)) + (v48 << 6);
LABEL_33:
      v50 = *(_QWORD *)(*(_QWORD *)(v107 + 48) + 8 * v45);
      v51 = v127;
      if (v127[2])
      {
        v52 = sub_1BA4A42A0(v50);
        v53 = MEMORY[0x1E0DEE9D8];
        if ((v54 & 1) != 0)
        {
          v53 = *(_QWORD *)(v51[7] + 8 * v52);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        v53 = MEMORY[0x1E0DEE9D8];
      }
      sub_1BA7B0658((uint64_t)v15, (uint64_t)v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v53 = sub_1BA7B0874(0, *(_QWORD *)(v53 + 16) + 1, 1, v53);
      v56 = *(_QWORD *)(v53 + 16);
      v55 = *(_QWORD *)(v53 + 24);
      if (v56 >= v55 >> 1)
        v53 = sub_1BA7B0874(v55 > 1, v56 + 1, 1, v53);
      *(_QWORD *)(v53 + 16) = v56 + 1;
      v57 = v8;
      sub_1BA7B0830((uint64_t)v8, v53 + v105 + v56 * v106);
      v32 = (uint64_t)v127;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v125[0] = v32;
      v60 = sub_1BA4A42A0(v50);
      v61 = *(_QWORD *)(v32 + 16);
      v62 = (v59 & 1) == 0;
      v63 = v61 + v62;
      if (__OFADD__(v61, v62))
      {
        __break(1u);
        goto LABEL_54;
      }
      v64 = v59;
      if (*(_QWORD *)(v32 + 24) >= v63)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C2320();
      }
      else
      {
        sub_1BB4AEA70(v63, isUniquelyReferenced_nonNull_native);
        v65 = sub_1BA4A42A0(v50);
        if ((v64 & 1) != (v66 & 1))
          goto LABEL_59;
        v60 = v65;
      }
      v67 = *(_QWORD **)&v125[0];
      if ((v64 & 1) != 0)
      {
        v43 = *(_QWORD *)(*(_QWORD *)&v125[0] + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v43 + 8 * v60) = v53;
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)&v125[0] + 8 * (v60 >> 6) + 64) |= 1 << v60;
        *(_QWORD *)(v67[6] + 8 * v60) = v50;
        *(_QWORD *)(v67[7] + 8 * v60) = v53;
        v68 = v67[2];
        v69 = __OFADD__(v68, 1);
        v70 = v68 + 1;
        if (v69)
        {
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        v67[2] = v70;
      }
      v127 = v67;
      swift_bridgeObjectRelease();
      v15 = v104;
      v8 = v57;
    }
LABEL_3:
    swift_release();
    v19 = *(_QWORD *)v15;
    v20 = *((_QWORD *)v15 + 1);
    v21 = v96;
    sub_1BA7B0658((uint64_t)v15, v96);
    swift_bridgeObjectRetain();
    v22 = v126;
    v23 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v125[0] = v22;
    sub_1BA7B0AD8(v21, v19, v20, v23);
    v24 = *(_QWORD *)&v125[0];
    v126 = *(_QWORD *)&v125[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA7B069C((uint64_t)v15);
    a1 = v94;
    v6 = v100;
    v18 = v101;
    if (v101 != v95)
      continue;
    break;
  }
  result = swift_bridgeObjectRelease();
LABEL_52:
  v71 = v127;
  v72 = v93;
  *v93 = a1;
  v72[1] = v71;
  v72[2] = v24;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatGroup(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BA7B0658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7B06D8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA7B069C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA7B06D8(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA7B06D8(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B37B0)
  {
    v2 = sub_1BA896A68();
    v4 = type metadata accessor for FormatObject(a1, (uint64_t)&type metadata for FormatGroup, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B37B0);
  }
}

uint64_t storeEnumTagSinglePayload for FormatGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_1BA7B0794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1BA7B0830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7B06D8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA7B0874(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  size_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BAC879A0();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = (_QWORD *)swift_allocObject();
  v15 = _swift_stdlib_malloc_size(v14);
  if (!v12 || (v15 - v13 == 0x8000000000000000 ? (v16 = v12 == -1) : (v16 = 0), v16))
  {
LABEL_29:
    result = sub_1BB873EA0();
    __break(1u);
    return result;
  }
  v14[2] = v8;
  v14[3] = 2 * ((uint64_t)(v15 - v13) / v12);
LABEL_19:
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v20 = (unint64_t)v14 + v19;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v14 < a4 || v20 >= a4 + v19 + *(_QWORD *)(v18 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v14 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BB394AC0(0, v8, v20, a4, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v14;
}

uint64_t sub_1BA7B0AD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BA6E35A8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
        return sub_1BB4CE3A0(a1, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BB4C23C8((unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, &qword_1ED39DB10);
      goto LABEL_7;
    }
    sub_1BB4AEB0C(v15, a4 & 1, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, &qword_1ED39DB10);
    v22 = sub_1BA6E35A8(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BB4C10EC(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA7B0C6C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA7B0CB8(0, (unint64_t *)&qword_1ED3B37B8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA7B0CB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BA7B06D8(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BA7B0D10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C02C8)
  {
    sub_1BA7B0CB8(255, (unint64_t *)&qword_1ED3B9420, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C02C8);
  }
}

void sub_1BA7B0D84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C02A8)
  {
    sub_1BA7B06D8(255);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C02A8);
  }
}

uint64_t sub_1BA7B0DE8@<X0>(char *a1@<X8>)
{
  return sub_1BA7AAEE4(a1);
}

void sub_1BA7B0E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  unint64_t v17;
  _OWORD v18[5];
  uint64_t v19;

  v4 = v2;
  v6 = *(_OWORD *)(a2 + 48);
  v18[2] = *(_OWORD *)(a2 + 32);
  v18[3] = v6;
  v18[4] = *(_OWORD *)(a2 + 64);
  v19 = *(_QWORD *)(a2 + 80);
  v7 = *(_OWORD *)(a2 + 16);
  v18[0] = *(_OWORD *)a2;
  v18[1] = v7;
  if (!*(_QWORD *)(v2 + 16) || (sub_1BA7B108C(a1, a2), !v3))
  {
    v8 = *(_QWORD *)(v2 + 24);
    if (v8)
    {
      swift_beginAccess();
      v9 = *(_QWORD *)(v8 + 72);
      if (v9)
      {
        swift_bridgeObjectRetain();
        sub_1BA7C5A8C(a1, (uint64_t)v18, v9);
        swift_bridgeObjectRelease();
        if (v3)
          return;
      }
      swift_beginAccess();
      v10 = *(_QWORD *)(v8 + 88);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain_n();
        v12 = (uint64_t *)(v10 + 72);
        do
        {
          v13 = *v12;
          if (*v12)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7C5A8C(a1, (uint64_t)v18, v13);
            if (v3)
            {
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v12 += 7;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease_n();
      }
    }
    swift_beginAccess();
    sub_1BA6FA63C();
    if (!v3)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v4 + 40);
      v15 = *(_QWORD *)(v14 + 16);
      if (v15)
      {
        swift_bridgeObjectRetain_n();
        for (i = 0; i != v15; ++i)
        {
          v17 = *(_QWORD *)(v14 + 8 * i + 32);
          sub_1BA7196DC(v17);
          sub_1BA6FA7EC();
          sub_1BA719340(v17);
        }
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_1BA7B108C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[5];
  uint64_t v14;
  uint64_t v15;

  v4 = v2;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 64);
  v13[3] = *(_OWORD *)(a2 + 48);
  v13[4] = v7;
  v14 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v8;
  v13[2] = v6;
  swift_beginAccess();
  v9 = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1BA75DEC0(a1, (uint64_t)v13, v9);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    switch(*(_BYTE *)(v4 + 120))
    {
      case 1:
        nullsub_1(a1);
        goto LABEL_7;
      case 2:
        sub_1BA756470();
        goto LABEL_7;
      case 3:
        sub_1BA7AF9E4(*(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96), *(_QWORD *)(v4 + 104), *(_QWORD *)(v4 + 112), 3u);
        v10 = *(_QWORD *)(v4 + 128);
        if (!v10)
          goto LABEL_13;
        goto LABEL_8;
      default:
LABEL_7:
        v10 = *(_QWORD *)(v4 + 128);
        if (v10)
        {
LABEL_8:
          v11 = *(_QWORD *)(v10 + 16);
          if (v11)
          {
            v15 = a1;
            v12 = swift_bridgeObjectRetain() + 64;
            do
            {
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA7547AC();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
              v12 += 40;
              --v11;
            }
            while (v11);
            swift_bridgeObjectRelease();
          }
        }
LABEL_13:
        if (*(unsigned __int8 *)(v4 + 216) != 254)
          sub_1BA7547AC();
        break;
    }
  }
}

void sub_1BA7B12EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v8);
  __asm { BR              X10 }
}

uint64_t sub_1BA7B13EC()
{
  _QWORD *v0;

  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v0 = 0xD000000000000066;
  v0[1] = 0x80000001BB964840;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

void sub_1BA7B1478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for FormatDecorationContext();
  sub_1BB86DD80();
  swift_retain();
  swift_release();
  FormatOptionCollection.subscript.getter(v5, *(_QWORD *)(v7 - 88), v1);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 48))(v1, 1, v6) == 1)
  {
    sub_1BA502AD0(v1, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    v8 = *(_QWORD *)(v7 - 88);
    *v3 = v5;
    v3[1] = v8;
    swift_storeEnumTagMultiPayload();
    v9 = *(_BYTE *)(v4 + 8);
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    v10 = (void *)swift_allocError();
    sub_1BA4C2DD8((uint64_t)v3, v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    if ((v9 & 1) != 0)
    {
      v12 = swift_allocObject();
      *(_BYTE *)(v12 + 16) = 2;
      *(_QWORD *)(v12 + 24) = 0x3FF0000000000000;
      *(_BYTE *)(v12 + 32) = 0;
      **(_QWORD **)(v7 - 104) = v12 | 0x1000000000000000;
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);

    }
    else
    {
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    }
  }
  else
  {
    sub_1BA5193C4(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_retain();
    v13 = *(_QWORD *)(v7 - 96);
    sub_1BA7B1D14();
    swift_release();
    if (!v13)
    {
      sub_1BA7B16A8(*(_QWORD *)(v7 - 72), v5, *(_QWORD *)(v7 - 88), *(_QWORD *)(v7 - 112), v4, *(_QWORD *)(v7 - 104));
      swift_release();
    }
    sub_1BA4A2E80(v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  }
  JUMPOUT(0x1BA7B1454);
}

void sub_1BA7B16A8(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB31B0D8(a1, a2, a3, a4, a5, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a6, (uint64_t)&type metadata for FormatColor, (uint64_t)sub_1BAFEE694, (uint64_t)sub_1BA7F10DC);
}

uint64_t FormatOptionsNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  __int128 v39;
  char v40;
  __int128 v41;
  char v42;
  uint64_t v43;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v35 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - v10;
  sub_1BAEA9738(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAEA9828();
  v18 = sub_1BA4A2870(&qword_1ED3D0CA0, (uint64_t (*)(uint64_t))sub_1BAEA9828, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v19, v15, v4, v17, (uint64_t)&type metadata for FormatVersions.JazzkonG, v16, (uint64_t)v14, v18, (uint64_t)&off_1E734BD00);
  swift_beginAccess();
  v20 = v2[2];
  v21 = v2[3];
  v22 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v22 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C38);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25(v11, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v26 = v38;
  sub_1BAD265E8(v20, v21, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE5247C, (uint64_t (*)(uint64_t))sub_1BAEA97B0, &qword_1ED3AE7D0);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v26)
    return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BAEA9738);
  swift_beginAccess();
  v27 = v2[4];
  v28 = (uint64_t)v37;
  v25(v37, v24, v23);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v38 = v14;
  if ((sub_1BAE5247C(v28, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
  {
    v41 = xmmword_1BB8A1A10;
    v42 = 0;
    *(_QWORD *)&v39 = v27;
    sub_1BAEA97B0();
    v35 = v29;
    sub_1BA4A2870(&qword_1ED3AE7D0, (uint64_t (*)(uint64_t))sub_1BAEA97B0, MEMORY[0x1E0DED188]);
    sub_1BA4B07F0(0, &qword_1ED39DA00, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA7B1C84();
    sub_1BB874464();
    v28 = (uint64_t)v37;
  }
  sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v30 = v2[5];
  v31 = (uint64_t)v36;
  v25(v36, v24, v23);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v32 = (uint64_t)v38;
  v33 = sub_1BAE5247C(v31, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0);
  if ((v33 & 1) != 0)
  {
    v39 = xmmword_1BB8D2D60;
    v40 = 0;
    v43 = v30;
    sub_1BAEA97B0();
    sub_1BA4A2870(&qword_1ED3AE7D0, (uint64_t (*)(uint64_t))sub_1BAEA97B0, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA653FC0();
    sub_1BB874464();
  }
  sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))sub_1BAEA9738);
}

unint64_t sub_1BA7B1C40()
{
  unint64_t result;

  result = qword_1ED3C7988;
  if (!qword_1ED3C7988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8928, &_s10CodingKeysON_86);
    atomic_store(result, (unint64_t *)&qword_1ED3C7988);
  }
  return result;
}

unint64_t sub_1BA7B1C84()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED39BF38;
  if (!qword_1ED39BF38)
  {
    sub_1BA4B07F0(255, &qword_1ED39DA00, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3B01D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatement);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BF38);
  }
  return result;
}

void sub_1BA7B1D14()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v6;

  v6 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EE8, v0, &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EF0, v3, (unint64_t *)&qword_1ED3C44F0, (uint64_t)&protocol conformance descriptor for Date);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1BA7B1E7C()
{
  uint64_t v0;
  uint64_t v1;

  **(_QWORD **)(v1 - 184) = v0;
  return swift_retain();
}

void sub_1BA7B21D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);

  *(_QWORD *)(v5 - 232) = v0;
  v6 = swift_projectBox();
  sub_1BA7A64B4(v6, v1, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  sub_1BA9A5FA0(v3);
  v7 = swift_allocObject();
  v8 = swift_allocBox();
  v10 = v9;
  v11 = *(_QWORD *)(v5 - 224);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v9, v3, v11);
  *(_QWORD *)(v10 + *(int *)(v4 + 36)) = MEMORY[0x1E0DEE9D8];
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  swift_retain();
  v12(v3, v11);
  sub_1BA7A6424(v1, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v7 + 24) = v8 | 0x6000000000000000;
  JUMPOUT(0x1BA7B22C0);
}

void sub_1BA7B22CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_allocObject();
  v4 = *(_QWORD *)(v1 - 176);
  sub_1BA772DC0(*(_QWORD *)(v1 - 208), v2);
  if (v4)
    swift_deallocUninitializedObject();
  else
    **(_QWORD **)(v1 - 184) = v3 | 0x7000000000000000;
  JUMPOUT(0x1BA7B21B0);
}

uint64_t sub_1BA7B23FC(uint64_t a1, uint64_t a2)
{
  return sub_1BA7B2434(a1, a2, sub_1BA6F3B64);
}

uint64_t sub_1BA7B2418(uint64_t a1, uint64_t a2)
{
  return sub_1BA7B2434(a1, a2, sub_1BA7B2468);
}

uint64_t sub_1BA7B2434(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8]);
}

uint64_t sub_1BA7B2468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v58 = a4;
  v53 = a7;
  v54 = a8;
  v59 = a6;
  v51 = a2;
  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0740, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6450]);
  v52 = v12;
  v55 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v55 + 64);
  MEMORY[0x1E0C80A78](v12);
  v50 = (char *)&v42 - v14;
  sub_1BA6F3ED8(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v42 - v18;
  v61 = a1;
  KeyPath = swift_getKeyPath();
  swift_unownedRetainStrong();
  v21 = *(_QWORD *)(a5 + 32);
  sub_1BA71CA6C(v21);
  v56 = a5;
  swift_release();
  v60 = v21;
  v22 = v57;
  sub_1BA717E88();
  sub_1BA719718(v21);
  if (!v22)
  {
    v45 = v13;
    v46 = a3;
    v47 = v19;
    v48 = v17;
    v49 = KeyPath;
    v57 = v16;
    v25 = v55;
    v24 = v56;
    swift_unownedRetainStrong();
    swift_beginAccess();
    v26 = *(_QWORD *)(v24 + 48);
    swift_bridgeObjectRetain();
    swift_release();
    v27 = v59;
    swift_retain();
    v28 = sub_1BB67D4D4(v26, v27);
    v44 = a9;
    swift_bridgeObjectRelease();
    swift_release();
    v29 = v25;
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v32 = v50;
    v31 = v51;
    v51 = v28;
    v33 = v52;
    v30(v50, v31, v52);
    v34 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v42 = (v45 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v35 = (v42 + 23) & 0xFFFFFFFFFFFFFFF8;
    v43 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
    v45 = 0;
    v36 = (v43 + 15) & 0xFFFFFFFFFFFFFFF8;
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v53;
    *(_QWORD *)(v37 + 24) = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v37 + v34, v32, v33);
    v38 = (_QWORD *)(v37 + v42);
    v39 = v58;
    *v38 = v46;
    v38[1] = v39;
    *(_QWORD *)(v37 + v35) = v56;
    v40 = v44;
    *(_QWORD *)(v37 + v43) = v54;
    *(_QWORD *)(v37 + v36) = v40;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_unownedRetain();
    sub_1BA7099D4();
    sub_1BA50AD30(&qword_1ED3C4560, 255, (uint64_t (*)(uint64_t))sub_1BA7099D4, MEMORY[0x1E0DB5B88]);
    swift_retain();
    swift_retain();
    v41 = v47;
    sub_1BB86D534();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v41, v57);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

void destroy for FormatButtonNodeDataAction(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for FormatAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v4 = *(unsigned __int8 *)(a1 + 16);
      if (v4 <= 0xFD)
        sub_1BA726DA4(*(void **)(a1 + 8), v4);
      goto LABEL_15;
    case 1u:
      sub_1BA726DD8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(_BYTE *)(a1 + 41));
      swift_bridgeObjectRelease();
      sub_1BA726DA4(*(void **)(a1 + 56), *(_BYTE *)(a1 + 64));
      goto LABEL_15;
    case 2u:
      swift_release();
      goto LABEL_15;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C1F54(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 5u:
      type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v7 = type metadata accessor for FormatPurchaseLandingPageData();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1, 1, v7))
          goto LABEL_15;
        swift_bridgeObjectRelease();
        v6 = *(int *)(v7 + 20);
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_15;
        swift_bridgeObjectRelease();
        v6 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      }
      v8 = a1 + v6;
      v9 = type metadata accessor for FormatPostPurchaseData();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      {
        v10 = sub_1BB86C67C();
        v11 = *(_QWORD *)(v10 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 2, v10))
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
      }
LABEL_15:

      return;
    default:
      goto LABEL_15;
  }
}

uint64_t storeEnumTagSinglePayload for FormatButtonNodeDataAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeWithCopy for FormatButtonNodeDataAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  id *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  void *v56;
  id v57;
  char *__dst;
  uint64_t v60;
  uint64_t v61;

  v6 = type metadata accessor for FormatAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      v7 = (id *)(a2 + 1);
      v8 = *((unsigned __int8 *)a2 + 16);
      swift_bridgeObjectRetain();
      if (v8 <= 0xFD)
      {
        v38 = *v7;
        sub_1BA727178(*v7, v8);
        a1[1] = (uint64_t)v38;
        *((_BYTE *)a1 + 16) = v8;
      }
      else
      {
        a1[1] = (uint64_t)*v7;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      }
      goto LABEL_28;
    case 1u:
      v9 = *a2;
      v10 = a2[1];
      v11 = a2[2];
      v12 = a2[3];
      v13 = a2[4];
      v14 = a3;
      v15 = *((_BYTE *)a2 + 41);
      v16 = *((_BYTE *)a2 + 40);
      sub_1BA7271AC((id)*a2, v10, v11, v12, v13, v16, v15);
      *a1 = v9;
      a1[1] = v10;
      a1[2] = v11;
      a1[3] = v12;
      a1[4] = v13;
      *((_BYTE *)a1 + 40) = v16;
      *((_BYTE *)a1 + 41) = v15;
      a3 = v14;
      v17 = (void *)a2[7];
      a1[6] = a2[6];
      LOBYTE(v9) = *((_BYTE *)a2 + 64);
      swift_bridgeObjectRetain();
      sub_1BA727178(v17, v9);
      a1[7] = (uint64_t)v17;
      *((_BYTE *)a1 + 64) = v9;
      goto LABEL_28;
    case 2u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_28;
    case 4u:
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      v20 = a2[5];
      a1[4] = a2[4];
      a1[5] = v20;
      v60 = a3;
      v21 = a2[6];
      v22 = a2[7];
      v23 = a2[8];
      v24 = a2[9];
      v25 = *((_BYTE *)a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA7261E0(v21, v22, v23, v24, v25);
      a1[6] = v21;
      a1[7] = v22;
      a1[8] = v23;
      a1[9] = v24;
      a3 = v60;
      *((_BYTE *)a1 + 80) = v25;
      v26 = a2[12];
      a1[11] = a2[11];
      a1[12] = v26;
      v27 = a2[14];
      a1[13] = a2[13];
      a1[14] = v27;
      a1[15] = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 5u:
      v28 = type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v39 = type metadata accessor for FormatPurchaseLandingPageData();
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48))(a2, 1, v39))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v61 = a3;
          v44 = a2[1];
          *a1 = *a2;
          a1[1] = v44;
          v45 = *(int *)(v39 + 20);
          __dst = (char *)a1 + v45;
          v46 = (char *)a2 + v45;
          v47 = type metadata accessor for FormatPostPurchaseData();
          v48 = *(_QWORD *)(v47 - 8);
          v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
          swift_bridgeObjectRetain();
          if (v49(v46, 1, v47))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dst, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
            a3 = v61;
          }
          else
          {
            v51 = sub_1BB86C67C();
            v52 = *(_QWORD *)(v51 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v46, 2, v51))
            {
              v53 = __dst;
              memcpy(__dst, v46, *(_QWORD *)(v48 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v46, v51);
              v54 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56);
              v53 = __dst;
              v54(__dst, 0, 2, v51);
            }
            a3 = v61;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v53, 0, 1, v47);
          }
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v39);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          goto LABEL_28;
        }
        v30 = a2[1];
        *a1 = *a2;
        a1[1] = v30;
        v31 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = type metadata accessor for FormatPostPurchaseData();
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
        swift_bridgeObjectRetain();
        if (v36(v33, 1, v34))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v42 = sub_1BB86C67C();
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v33, 2, v42))
          {
            memcpy(v32, v33, *(_QWORD *)(v35 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v32, v33, v42);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v32, 0, 2, v42);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_28:
      swift_storeEnumTagMultiPayload();
LABEL_29:
      v55 = *(int *)(a3 + 20);
      v56 = *(void **)((char *)a2 + v55);
      *(uint64_t *)((char *)a1 + v55) = (uint64_t)v56;
      v57 = v56;
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_29;
  }
}

void destroy for FormatButtonNodeData(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  type metadata accessor for FormatAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v4 = *(unsigned __int8 *)(a1 + 16);
      if (v4 <= 0xFD)
        sub_1BA726DA4(*(void **)(a1 + 8), v4);
      goto LABEL_15;
    case 1u:
      sub_1BA726DD8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(_BYTE *)(a1 + 41));
      swift_bridgeObjectRelease();
      sub_1BA726DA4(*(void **)(a1 + 56), *(_BYTE *)(a1 + 64));
      goto LABEL_15;
    case 2u:
      swift_release();
      goto LABEL_15;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C1F54(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 5u:
      type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v7 = type metadata accessor for FormatPurchaseLandingPageData();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a1, 1, v7))
          goto LABEL_15;
        swift_bridgeObjectRelease();
        v6 = *(int *)(v7 + 20);
      }
      else
      {
        if (EnumCaseMultiPayload)
          goto LABEL_15;
        swift_bridgeObjectRelease();
        v6 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      }
      v8 = a1 + v6;
      v9 = type metadata accessor for FormatPostPurchaseData();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
      {
        v10 = sub_1BB86C67C();
        v11 = *(_QWORD *)(v10 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 2, v10))
          (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
      }
LABEL_15:
      v12 = type metadata accessor for FormatButtonNodeDataAction();

      v13 = a1 + *(int *)(a2 + 20);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v13, 1, v12))
        return;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v14 = *(unsigned __int8 *)(v13 + 16);
          if (v14 <= 0xFD)
            sub_1BA726DA4(*(void **)(v13 + 8), v14);
          goto LABEL_30;
        case 1u:
          sub_1BA726DD8(*(void **)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32), *(unsigned __int8 *)(v13 + 40), *(_BYTE *)(v13 + 41));
          swift_bridgeObjectRelease();
          sub_1BA726DA4(*(void **)(v13 + 56), *(_BYTE *)(v13 + 64));
          goto LABEL_30;
        case 2u:
          swift_release();
          goto LABEL_30;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6C1F54(*(_QWORD *)(v13 + 48), *(_QWORD *)(v13 + 56), *(_QWORD *)(v13 + 64), *(_QWORD *)(v13 + 72), *(_BYTE *)(v13 + 80));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_30;
        case 5u:
          type metadata accessor for FormatPurchaseData(0);
          v15 = swift_getEnumCaseMultiPayload();
          if (v15 == 1)
          {
            v17 = type metadata accessor for FormatPurchaseLandingPageData();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v13, 1, v17))
            {
              swift_bridgeObjectRelease();
              v16 = *(int *)(v17 + 20);
              goto LABEL_27;
            }
          }
          else if (!v15)
          {
            swift_bridgeObjectRelease();
            v16 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
LABEL_27:
            v18 = v13 + v16;
            v19 = type metadata accessor for FormatPostPurchaseData();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
            {
              v20 = sub_1BB86C67C();
              v21 = *(_QWORD *)(v20 - 8);
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 2, v20))
                (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v18, v20);
            }
          }
LABEL_30:

          return;
        default:
          goto LABEL_30;
      }
    default:
      goto LABEL_15;
  }
}

uint64_t sub_1BA7B3334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a3;
  v5 = type metadata accessor for FormatAction();
  MEMORY[0x1E0C80A78](v5);
  v27 = (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  sub_1BA7B41BC(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatButtonNodeDataAction();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v26 - v18;
  v29 = a2;
  sub_1BA4C2DD8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA7B41BC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA7B41BC);
    v20 = a1;
  }
  else
  {
    sub_1BA5193C4((uint64_t)v12, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
    sub_1BA4C2DD8(a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
    v20 = a1;
    v21 = 1 << swift_getEnumCaseMultiPayload();
    if ((v21 & 0x34) != 0)
    {
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
    }
    else if ((v21 & 0xC8) == 0)
    {
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
      sub_1BA4C2DD8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
      sub_1BA4C2DD8((uint64_t)v16, v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
      v22 = (char *)&loc_1BA7B3548 + 4 * byte_1BB8F9D8E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    sub_1BA4C2DD8((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
  }
  v23 = v28;
  sub_1BA5193C4(v20, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
  v24 = type metadata accessor for FormatButtonNodeData();
  return sub_1BA5193C4(v29, v23 + *(int *)(v24 + 20), (uint64_t (*)(_QWORD))sub_1BA7B41BC);
}

void sub_1BA7B3600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  sub_1BA4A2E80(v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_1BA4A2E80(*(_QWORD *)(v4 - 72), (uint64_t (*)(_QWORD))sub_1BA7B41BC);
  sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
  sub_1BA4A2E80(v2, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
  JUMPOUT(0x1BA7B35DCLL);
}

uint64_t *initializeWithCopy for FormatButtonNodeData(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  id *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unsigned __int8 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  void (*v54)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  unsigned int (*v62)(_QWORD *, uint64_t, uint64_t);
  id v63;
  uint64_t v64;
  id *v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(char *, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  void (*v112)(_QWORD *, _QWORD, uint64_t, uint64_t);
  id v113;
  uint64_t v115;
  char *v116;
  char v117;
  uint64_t v118;
  char *__dst;
  char __dstb;
  void *__dstc;
  void *__dsta;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v6 = type metadata accessor for FormatAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      v7 = (id *)(a2 + 1);
      v8 = *((unsigned __int8 *)a2 + 16);
      swift_bridgeObjectRetain();
      if (v8 <= 0xFD)
      {
        v38 = *v7;
        sub_1BA727178(*v7, v8);
        a1[1] = (uint64_t)v38;
        *((_BYTE *)a1 + 16) = v8;
      }
      else
      {
        a1[1] = (uint64_t)*v7;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      }
      goto LABEL_28;
    case 1u:
      v9 = *a2;
      v10 = a2[1];
      v11 = a3;
      v12 = a2[2];
      v13 = a2[3];
      v14 = a2[4];
      v130 = v6;
      v15 = *((_BYTE *)a2 + 41);
      v16 = *((_BYTE *)a2 + 40);
      sub_1BA7271AC((id)*a2, v10, v12, v13, v14, v16, v15);
      *a1 = v9;
      a1[1] = v10;
      a1[2] = v12;
      a1[3] = v13;
      a3 = v11;
      a1[4] = v14;
      *((_BYTE *)a1 + 40) = v16;
      *((_BYTE *)a1 + 41) = v15;
      v6 = v130;
      v17 = (void *)a2[7];
      a1[6] = a2[6];
      LOBYTE(v9) = *((_BYTE *)a2 + 64);
      swift_bridgeObjectRetain();
      sub_1BA727178(v17, v9);
      a1[7] = (uint64_t)v17;
      *((_BYTE *)a1 + 64) = v9;
      goto LABEL_28;
    case 2u:
      *a1 = *a2;
      swift_retain();
      goto LABEL_28;
    case 4u:
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      v20 = a2[5];
      a1[4] = a2[4];
      a1[5] = v20;
      v123 = a3;
      v131 = v6;
      v21 = a2[6];
      v22 = a2[7];
      v23 = a2[8];
      v24 = a2[9];
      v25 = *((_BYTE *)a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA7261E0(v21, v22, v23, v24, v25);
      a1[6] = v21;
      a1[7] = v22;
      a1[8] = v23;
      a1[9] = v24;
      a3 = v123;
      v6 = v131;
      *((_BYTE *)a1 + 80) = v25;
      v26 = a2[12];
      a1[11] = a2[11];
      a1[12] = v26;
      v27 = a2[14];
      a1[13] = a2[13];
      a1[14] = v27;
      a1[15] = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 5u:
      v28 = type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v39 = type metadata accessor for FormatPurchaseLandingPageData();
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48))(a2, 1, v39))
        {
          sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v125 = a3;
          v132 = v6;
          v44 = a2[1];
          *a1 = *a2;
          a1[1] = v44;
          v45 = *(int *)(v39 + 20);
          __dst = (char *)a1 + v45;
          v46 = (char *)a2 + v45;
          v47 = type metadata accessor for FormatPostPurchaseData();
          v48 = *(_QWORD *)(v47 - 8);
          v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
          swift_bridgeObjectRetain();
          if (v49(v46, 1, v47))
          {
            sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(__dst, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
            v6 = v132;
          }
          else
          {
            v51 = sub_1BB86C67C();
            v52 = *(_QWORD *)(v51 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v46, 2, v51))
            {
              v53 = __dst;
              memcpy(__dst, v46, *(_QWORD *)(v48 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v52 + 16))(__dst, v46, v51);
              v54 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56);
              v53 = __dst;
              v54(__dst, 0, 2, v51);
            }
            v6 = v132;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v53, 0, 1, v47);
          }
          a3 = v125;
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v39);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          goto LABEL_28;
        }
        v124 = a3;
        v30 = a2[1];
        *a1 = *a2;
        a1[1] = v30;
        v31 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = type metadata accessor for FormatPostPurchaseData();
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
        swift_bridgeObjectRetain();
        if (v36(v33, 1, v34))
        {
          sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          a3 = v124;
        }
        else
        {
          v42 = sub_1BB86C67C();
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v33, 2, v42))
          {
            memcpy(v32, v33, *(_QWORD *)(v35 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v32, v33, v42);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v32, 0, 2, v42);
          }
          a3 = v124;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
      }
      swift_storeEnumTagMultiPayload();
LABEL_28:
      swift_storeEnumTagMultiPayload();
LABEL_29:
      v55 = type metadata accessor for FormatButtonNodeDataAction();
      v56 = *(int *)(v55 + 20);
      v57 = *(void **)((char *)a2 + v56);
      *(uint64_t *)((char *)a1 + v56) = (uint64_t)v57;
      v58 = *(int *)(a3 + 20);
      v59 = (uint64_t *)((char *)a1 + v58);
      v60 = (uint64_t *)((char *)a2 + v58);
      v61 = *(_QWORD *)(v55 - 8);
      v62 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v61 + 48);
      v63 = v57;
      if (v62(v60, 1, v55))
      {
        sub_1BA7B41BC(0);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *v59 = *v60;
            v65 = (id *)(v60 + 1);
            v66 = *((unsigned __int8 *)v60 + 16);
            swift_bridgeObjectRetain();
            if (v66 <= 0xFD)
            {
              v92 = *v65;
              sub_1BA727178(*v65, v66);
              v59[1] = v92;
              *((_BYTE *)v59 + 16) = v66;
            }
            else
            {
              v59[1] = *v65;
              *((_BYTE *)v59 + 16) = *((_BYTE *)v60 + 16);
            }
            goto LABEL_59;
          case 1u:
            v67 = *v60;
            v68 = v60[1];
            v69 = v60[2];
            v70 = v60[3];
            v126 = v61;
            v71 = v60[4];
            __dstb = *((_BYTE *)v60 + 41);
            v72 = *((_BYTE *)v60 + 40);
            sub_1BA7271AC((id)*v60, v68, v69, v70, v71, v72, __dstb);
            *v59 = v67;
            v59[1] = v68;
            v59[2] = v69;
            v59[3] = v70;
            v59[4] = v71;
            v61 = v126;
            *((_BYTE *)v59 + 40) = v72;
            *((_BYTE *)v59 + 41) = __dstb;
            v73 = (void *)v60[7];
            v59[6] = v60[6];
            LOBYTE(v68) = *((_BYTE *)v60 + 64);
            swift_bridgeObjectRetain();
            sub_1BA727178(v73, v68);
            v59[7] = v73;
            *((_BYTE *)v59 + 64) = v68;
            goto LABEL_59;
          case 2u:
            *v59 = *v60;
            swift_retain();
            goto LABEL_59;
          case 4u:
            v74 = v60[1];
            *v59 = *v60;
            v59[1] = v74;
            v75 = v60[3];
            v59[2] = v60[2];
            v59[3] = v75;
            v76 = v60[5];
            v59[4] = v60[4];
            v59[5] = v76;
            v127 = v61;
            v77 = v60[6];
            v78 = v60[7];
            v79 = v60[8];
            __dstc = (void *)v60[9];
            v117 = *((_BYTE *)v60 + 80);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7261E0(v77, v78, v79, (uint64_t)__dstc, v117);
            v59[6] = v77;
            v59[7] = v78;
            v61 = v127;
            v59[8] = v79;
            v59[9] = __dstc;
            *((_BYTE *)v59 + 80) = v117;
            v80 = v60[12];
            v59[11] = v60[11];
            v59[12] = v80;
            v81 = v60[14];
            v59[13] = v60[13];
            v59[14] = v81;
            v59[15] = v60[15];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_59;
          case 5u:
            v82 = type metadata accessor for FormatPurchaseData(0);
            v83 = swift_getEnumCaseMultiPayload();
            if (v83 == 1)
            {
              v93 = type metadata accessor for FormatPurchaseLandingPageData();
              v94 = *(_QWORD *)(v93 - 8);
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v94 + 48))(v60, 1, v93))
              {
                sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
              }
              else
              {
                v118 = v94;
                v129 = v61;
                v98 = v60[1];
                *v59 = *v60;
                v59[1] = v98;
                v99 = *(int *)(v93 + 20);
                v116 = (char *)v59 + v99;
                v100 = (char *)v60 + v99;
                v101 = type metadata accessor for FormatPostPurchaseData();
                v102 = *(_QWORD *)(v101 - 8);
                v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
                v104 = v101;
                swift_bridgeObjectRetain();
                __dsta = v100;
                if (v103(v100, 1, v104))
                {
                  sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                  memcpy(v116, v100, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
                  v61 = v129;
                }
                else
                {
                  v115 = v104;
                  v106 = sub_1BB86C67C();
                  v107 = *(_QWORD *)(v106 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v107 + 48))(__dsta, 2, v106))
                  {
                    v108 = v116;
                    memcpy(v116, __dsta, *(_QWORD *)(v102 + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, void *, uint64_t))(v107 + 16))(v116, __dsta, v106);
                    v109 = v106;
                    v108 = v116;
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v116, 0, 2, v109);
                  }
                  v61 = v129;
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v108, 0, 1, v115);
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v59, 0, 1, v93);
              }
            }
            else
            {
              if (v83)
              {
                memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
                goto LABEL_59;
              }
              v128 = v61;
              v84 = v60[1];
              *v59 = *v60;
              v59[1] = v84;
              v85 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
              v86 = (char *)v59 + v85;
              v87 = (char *)v60 + v85;
              v88 = type metadata accessor for FormatPostPurchaseData();
              v89 = *(_QWORD *)(v88 - 8);
              v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48);
              swift_bridgeObjectRetain();
              if (v90(v87, 1, v88))
              {
                sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
              }
              else
              {
                v96 = sub_1BB86C67C();
                v97 = *(_QWORD *)(v96 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v87, 2, v96))
                {
                  memcpy(v86, v87, *(_QWORD *)(v89 + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v86, v87, v96);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v86, 0, 2, v96);
                }
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
              }
              v61 = v128;
            }
            swift_storeEnumTagMultiPayload();
LABEL_59:
            swift_storeEnumTagMultiPayload();
LABEL_60:
            v110 = *(int *)(v55 + 20);
            v111 = *(void **)((char *)v60 + v110);
            *(_QWORD *)((char *)v59 + v110) = v111;
            v112 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v61 + 56);
            v113 = v111;
            v112(v59, 0, 1, v55);
            break;
          default:
            memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
            goto LABEL_60;
        }
      }
      return a1;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_29;
  }
}

void sub_1BA7B41BC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA7B41D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X3>, uint64_t *a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = a6;
  v11 = type metadata accessor for FormatAction();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a3;
  v15 = *a4;
  v24 = a5;
  v25 = v15;
  v27 = v14;
  sub_1BA7B43D4();
  v27 = v14;
  swift_bridgeObjectRetain();
  v16 = v26;
  sub_1BA7B5E68();
  if (v16)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v22[1] = a1;
    v26 = a2;
    v18 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((~v25 & 0xF000000000000007) != 0)
    {
      v20 = v25;
      v27 = v25;
      swift_retain();
      sub_1BA724A8C();
      v27 = v20;
      swift_bridgeObjectRetain();
      sub_1BA72FFD8();
      v19 = v21;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5E800C(v25);
    }
    else
    {
      v19 = 0;
    }
    sub_1BA7B46C8((uint64_t)v13, v18);
    result = type metadata accessor for FormatButtonNodeDataAction();
    *(_QWORD *)(v18 + *(int *)(result + 20)) = v19;
  }
  return result;
}

void sub_1BA7B43D4()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA7B441C()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1BA7B4454@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;
  uint64_t v21;

  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v6 = sub_1BB7A03D0(v5, v3, v2, a1);
    swift_bridgeObjectRelease();
    swift_release();
    v7 = *(_QWORD *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain();
      v8 = v6 + 40;
      v9 = v7;
      do
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB872AFC(v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 += 24;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      v11 = 0;
      v12 = 48;
      do
      {
        v11 |= *(unsigned __int8 *)(v6 + v12);
        v12 += 24;
        --v7;
      }
      while (v7);
    }
    goto LABEL_14;
  }
  v13 = *(_QWORD *)(a2 + 24);
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v15 = sub_1BB7A04E4(v13, v3, v2);
    swift_bridgeObjectRelease();
    swift_release();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      swift_bridgeObjectRetain();
      v17 = v15 + 40;
      v18 = v16;
      do
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BB872AFC(v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 += 24;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      v20 = 0;
      v21 = 48;
      do
      {
        v20 |= *(unsigned __int8 *)(v15 + v21);
        v21 += 24;
        --v16;
      }
      while (v16);
    }
LABEL_14:
    swift_bridgeObjectRelease();
    JUMPOUT(0x1BA7B4428);
  }
  return sub_1BA7B441C();
}

uint64_t sub_1BA7B46C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void FormatButtonNodeAction.bind(binder:context:)()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X11 }
}

void sub_1BA7B4840(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (!v4 || (sub_1BAB98B78(v2, *(_QWORD *)(v3 - 120), v4), !v1))
  {
    if (v5)
      sub_1BAB87CC8(v2, *(_QWORD *)(v3 - 120), v5);
  }
}

void FormatButtonNodeAction.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v32[12];

  v2 = v1;
  v4 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v4);
  v32[8] = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v6);
  v32[7] = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v8);
  v32[6] = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v32[4] = (char *)v32 - v11;
  MEMORY[0x1E0C80A78](v12);
  v32[5] = (char *)v32 - v13;
  MEMORY[0x1E0C80A78](v14);
  v32[2] = (char *)v32 - v15;
  MEMORY[0x1E0C80A78](v16);
  v32[3] = (char *)v32 - v17;
  MEMORY[0x1E0C80A78](v18);
  v32[1] = (char *)v32 - v19;
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v2;
  v28 = a1[3];
  v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  v30 = sub_1BA6B8518();
  v32[11] = v26;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatButtonNodeAction, v31, v28, (uint64_t)&type metadata for FormatButtonNodeAction, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v29, (uint64_t)v26, v30, (uint64_t)&off_1E734BD80);
  __asm { BR              X10 }
}

uint64_t sub_1BA7B4FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v5 = *(_BYTE *)(v0 + 32);
  if (qword_1ED3C6D18 != -1)
    swift_once();
  v6 = sub_1BB86EB84();
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED476B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v1, v7, v6);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v8 = *(_QWORD *)(v2 - 72);
  sub_1BA7F45A8(0, v4, v3, v5, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatButtonNodeAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v29;
  uint64_t v30;

  v30 = a2;
  v25 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v25);
  v24[1] = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v26 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v24 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v11 = (void *)v27;
  sub_1BB87468C();
  v12 = v11;
  if (v11)
    goto LABEL_10;
  *(_QWORD *)&v27 = v6;
  v24[0] = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v26;
  v16 = v10;
  if ((v14 & 1) == 0)
  {
LABEL_8:
    sub_1BA7B65B8();
    v29 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v17 = sub_1BB8740EC();
  v18 = *(_QWORD *)(v17 + 16);
  if (!v18)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v19 = (unint64_t *)(v17 + 40);
  while (1)
  {
    v20 = *v19;
    if (*v19 >= 4)
      break;
    v19 += 2;
    if (!--v18)
      goto LABEL_7;
  }
  v21 = *(v19 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v12 = (void *)swift_allocError();
  *(_QWORD *)v22 = v21;
  *(_QWORD *)(v22 + 8) = v20;
  *(_QWORD *)(v22 + 16) = &unk_1E726AD40;
  *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v21, v20);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v15);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v12);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BA7B5E68()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for FormatPurchaseData(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X11 }
}

uint64_t sub_1BA7B5F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  char v8;

  v5 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(v4 - 112) = *(_OWORD *)(a1 + 16);
  *(_BYTE *)(v4 - 96) = v5;
  result = sub_1BB668FF8(v2, v4 - 144);
  if (!v1)
  {
    v7 = *(_QWORD *)(v4 - 136);
    v8 = *(_BYTE *)(v4 - 128);
    *(_QWORD *)v3 = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(v3 + 8) = v7;
    *(_BYTE *)(v3 + 16) = v8;
    type metadata accessor for FormatAction();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

uint64_t type metadata accessor for FormatCommandOpenURL()
{
  uint64_t result;

  result = qword_1ED3B6108;
  if (!qword_1ED3B6108)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatPurchaseAction()
{
  uint64_t result;

  result = qword_1ED3BAFB8;
  if (!qword_1ED3BAFB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatPurchaseData(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3BADF8);
}

unint64_t sub_1BA7B65B8()
{
  unint64_t result;

  result = qword_1ED3C9DB0;
  if (!qword_1ED3C9DB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CCED0, &_s10CodingTypeON_118);
    atomic_store(result, (unint64_t *)&qword_1ED3C9DB0);
  }
  return result;
}

void sub_1BA7B65FC()
{
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1BA7B66BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t result;

  result = sub_1BA70DDB0(*(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v5);
  if (!v4)
  {
    *(_BYTE *)(v0 + 296) = v1 & 1;
    sub_1BA7B6880(v5, v3);
    return sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FeedHeadline);
  }
  return result;
}

uint64_t sub_1BA7B6880@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v25;
  char v26;

  v5 = *v2;
  v6 = type metadata accessor for FeedHeadline(0);
  v7 = (char *)a1 + *(int *)(v6 + 40);
  v8 = type metadata accessor for FeedHeadline.State(0);
  if ((v5 & 1) != 0)
  {
    v26 = v7[*(int *)(v8 + 32)];
    v9 = sub_1BA7B6A40(&v26);
    v10 = a1[5];
    v11 = sub_1BA79E0CC(12, v9);
    *(_QWORD *)a2 = v10;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_WORD *)(a2 + 40) = 256;
    *(_QWORD *)(a2 + 48) = v9;
    *(_QWORD *)(a2 + 56) = v10;
    *(_BYTE *)(a2 + 64) = v11 & 1;
    swift_unknownObjectRetain();
  }
  else
  {
    v25 = v7[*(int *)(v8 + 32)];
    v12 = sub_1BA7B6A40(&v25);
    v13 = *(uint64_t *)((char *)a1 + *(int *)(v6 + 56));
    v14 = a1[5];
    v16 = *a1;
    v15 = a1[1];
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v13 == 0;
    v18 = v13 == 0;
    if (v13)
      v19 = v16;
    else
      v19 = 0;
    if (v13)
      v20 = v15;
    else
      v20 = 0;
    if (v17)
    {
      v21 = v15;
    }
    else
    {
      v16 = 0;
      v21 = 0;
    }
    v22 = 2 * v18;
    v23 = sub_1BA79E0CC(12, v12);
    *(_QWORD *)a2 = v14;
    *(_QWORD *)(a2 + 8) = v19;
    *(_QWORD *)(a2 + 16) = v20;
    *(_QWORD *)(a2 + 24) = v16;
    *(_QWORD *)(a2 + 32) = v21;
    *(_BYTE *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 41) = v22;
    *(_QWORD *)(a2 + 48) = v12;
    *(_QWORD *)(a2 + 56) = v14;
    *(_BYTE *)(a2 + 64) = v23 & 1;
  }
  swift_unknownObjectRetain();
  type metadata accessor for FormatAction();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BA7B69E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned int v4;
  char v6;
  uint64_t v7;

  v7 = a2;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v4 = *v3++;
      sub_1BA9D7058(&v6, v4);
      --v2;
    }
    while (v2);
    return v7;
  }
  return a2;
}

uint64_t sub_1BA7B6A40(_BYTE *a1)
{
  void *v1;
  uint64_t v2;

  if (*a1)
  {
    sub_1BB86DD80();
    v1 = (void *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BB86DD80();
    v1 = &unk_1E724D720;
  }
  v2 = sub_1BA761770();
  swift_release();
  return sub_1BA7B69E8((uint64_t)v1, v2);
}

uint64_t sub_1BA7B6AC4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF52F0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA7B6C28();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA6007E8();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA7B6C28()
{
  unint64_t result;

  result = qword_1ED3A6DB0;
  if (!qword_1ED3A6DB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6EC8, &_s10CodingTypeON_118);
    atomic_store(result, (unint64_t *)&qword_1ED3A6DB0);
  }
  return result;
}

uint64_t sub_1BA7B6C6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA6EDCD4(&qword_1ED3C6D38, (uint64_t)qword_1ED476BA8, a1);
}

uint64_t sub_1BA7B6C88(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v34 - v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v34 - v8;
  sub_1BAEE447C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1[1];
  v43 = *v1;
  v15 = v1[2];
  v14 = v1[3];
  v16 = v1[4];
  v37 = v1[5];
  v38 = v16;
  v36 = v1[6];
  v34 = v1[7];
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BAEE4374();
  v20 = sub_1BA4A2870(&qword_1ED3D1570, (uint64_t (*)(uint64_t))sub_1BAEE4374, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatMenuItem, v21, v17, (uint64_t)&type metadata for FormatMenuItem, v19, (uint64_t)&type metadata for FormatVersions.Azden, v18, (uint64_t)v12, v20, (uint64_t)&off_1E734BC80);
  v22 = v43;
  sub_1BA7CCBB4(v43, v13, v15, v14);
  if (qword_1ED3C6D18 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476B60);
  v41 = *(void (**)(char *))(*(_QWORD *)(v23 - 8) + 16);
  v42 = v24;
  v41(v9);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v25 = (uint64_t)v12;
  v26 = v44;
  sub_1BAD222CC(v22, v13, v15, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  sub_1BA7CCC14(v22, v13, v15, v14);
  if (!v26)
  {
    v27 = (uint64_t)v39;
    ((void (*)(char *, uint64_t, uint64_t))v41)(v39, v42, v23);
    swift_storeEnumTagMultiPayload();
    v29 = v37;
    v28 = v38;
    v30 = v36;
    sub_1BA7CCCA0(v38, v37, v36);
    sub_1BAD22428(v28, v29, v30, 1, 0, 0, v27, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
    sub_1BA7CCC64(v28, v29, v30);
    v31 = (uint64_t)v35;
    ((void (*)(char *, uint64_t, uint64_t))v41)(v35, v42, v23);
    swift_storeEnumTagMultiPayload();
    v32 = v34;
    swift_retain();
    sub_1BAD22588(v32, 2, 0, 0, v31, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))sub_1BAEE447C);
}

unint64_t sub_1BA7B7038()
{
  unint64_t result;

  result = qword_1ED3C6BE8;
  if (!qword_1ED3C6BE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2720, &_s10CodingKeysON_260);
    atomic_store(result, (unint64_t *)&qword_1ED3C6BE8);
  }
  return result;
}

unint64_t sub_1BA7B707C()
{
  unint64_t result;

  result = qword_1ED3B6250;
  if (!qword_1ED3B6250)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93A3D8, &type metadata for FormatMenuItemAction);
    atomic_store(result, (unint64_t *)&qword_1ED3B6250);
  }
  return result;
}

unint64_t sub_1BA7B70C0()
{
  unint64_t result;

  result = qword_1ED39FA80;
  if (!qword_1ED39FA80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuTitle, &type metadata for FormatMenuTitle);
    atomic_store(result, (unint64_t *)&qword_1ED39FA80);
  }
  return result;
}

unint64_t sub_1BA7B7104()
{
  unint64_t result;

  result = qword_1ED39FA60;
  if (!qword_1ED39FA60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuImage, &type metadata for FormatMenuImage);
    atomic_store(result, (unint64_t *)&qword_1ED39FA60);
  }
  return result;
}

uint64_t sub_1BA7B7148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  _QWORD v13[4];
  uint64_t v14[2];
  __int128 v15;
  __int128 v16;
  _BYTE v17[8];

  v5 = *(_QWORD *)v2;
  v14[0] = a1;
  v13[2] = v14;
  result = sub_1BA8A1234((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BA77362C, (uint64_t)v13, v5);
  if (!v3)
  {
    v7 = result;
    sub_1BA5193C4(v2 + 8, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA77A284);
    v9 = *(_QWORD *)(v2 + 48);
    v8 = *(_QWORD *)(v2 + 56);
    sub_1BA781758((uint64_t)v17);
    if (v9)
    {
      sub_1BB674700(v9, v8, v14);
      v10 = v14[0];
      v8 = v14[1];
    }
    else
    {
      v10 = 0;
    }
    v11 = *(_OWORD *)(v2 + 32);
    v15 = *(_OWORD *)(v2 + 16);
    v16 = v11;
    *(_QWORD *)a2 = v7;
    result = sub_1BA5193C4((uint64_t)v17, a2 + 8, (uint64_t (*)(_QWORD))sub_1BA77A284);
    v12 = v16;
    *(_OWORD *)(a2 + 16) = v15;
    *(_OWORD *)(a2 + 32) = v12;
    *(_QWORD *)(a2 + 48) = v10;
    *(_QWORD *)(a2 + 56) = v8;
  }
  return result;
}

uint64_t sub_1BA7B7244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v32 = a4;
  v33 = a2;
  v8 = type metadata accessor for FormatOption();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatServiceOptions();
  v29 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v30 = v14;
  v31 = (uint64_t)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3D5158 != -1)
    swift_once();
  sub_1BA50AD30(&qword_1ED3B3C00, v13, (uint64_t (*)(uint64_t))type metadata accessor for FormatService, (uint64_t)&protocol conformance descriptor for FormatService);
  sub_1BB86D210();
  v15 = v34;
  LOBYTE(v34) = 0;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBE40, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3258]);
  swift_unknownObjectRetain();
  swift_retain_n();
  v16 = sub_1BB86DD98();
  *(_QWORD *)&v41 = a1;
  BYTE8(v41) = v34;
  BYTE9(v41) = v15;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  *(_QWORD *)&v45 = 0;
  *((_QWORD *)&v45 + 1) = a3;
  v46 = v16;
  v36 = 0u;
  v37 = 0u;
  v38 = v45;
  v39 = v16;
  v34 = v41;
  v35 = 0u;
  FormatPackageInventory.resources(context:)((uint64_t)&v34, (uint64_t)&v40);
  if (v5)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA70AB94(0, 0);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    v28[0] = v4;
    v28[1] = v16;
    v28[2] = a3;
    v17 = v33;
    v18 = *(_QWORD *)(v33 + 16);
    if (v18)
    {
      v19 = v33 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v20 = *(_QWORD *)(v9 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1BA4C2DD8(v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v47 = *((_QWORD *)v11 + 2);
        v36 = v43;
        v37 = v44;
        v38 = v45;
        v39 = v46;
        v34 = v41;
        v35 = v42;
        swift_retain();
        sub_1BA711C44();
        swift_release();
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v19 += v20;
        --v18;
      }
      while (v18);
      v17 = swift_bridgeObjectRelease();
    }
    MEMORY[0x1E0C80A78](v17);
    v28[-4] = v28[0];
    v28[-3] = &v40;
    v28[-2] = &v41;
    v21 = v32;
    v28[-1] = v32;
    sub_1BB86EC14();
    v22 = v31;
    sub_1BA4C2DD8(v21, v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
    v23 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v24 = (v30 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = swift_allocObject();
    sub_1BA5193C4(v22, v25 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
    *(_QWORD *)(v25 + v24) = a1;
    swift_retain();
    v26 = (void *)sub_1BB86E854();
    type metadata accessor for FormatPackageInventory();
    v15 = sub_1BB86E968();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA70AB94(0, 0);
    swift_release();
    swift_release();

    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v15;
}

uint64_t type metadata accessor for FormatPackageInventory()
{
  uint64_t result;

  result = qword_1ED3B0130;
  if (!qword_1ED3B0130)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatServiceOptions()
{
  uint64_t result;

  result = qword_1ED3C0AA8;
  if (!qword_1ED3C0AA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FormatPackageInventory.resources(context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v6 = type metadata accessor for FormatOption();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_OWORD *)(a1 + 48);
  v43 = *(_OWORD *)(a1 + 32);
  v44 = v10;
  v45 = *(_OWORD *)(a1 + 64);
  v46 = *(_QWORD *)(a1 + 80);
  v11 = *(_OWORD *)(a1 + 16);
  v41 = *(_OWORD *)a1;
  v42 = v11;
  *(_QWORD *)&v39 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)&v39 + 1) = MEMORY[0x1E0DEE9D8];
  v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  v40 = MEMORY[0x1E0DEE9E8];
  swift_beginAccess();
  v13 = *v12;
  swift_bridgeObjectRetain();
  sub_1BA7B8794((uint64_t)&v39, &v41, v13);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
    swift_beginAccess();
    v15 = *v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB568FB0((uint64_t)&v39, (uint64_t)&v41, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
    swift_beginAccess();
    v17 = *v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7F7BD0((uint64_t)&v39, (uint64_t)&v41, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
    swift_beginAccess();
    v19 = *v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6F7C08((uint64_t)&v39, (uint64_t)&v41, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
    swift_beginAccess();
    v21 = *v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7B8060((uint64_t)&v39, (uint64_t)&v41, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    v23 = *v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7530BC((uint64_t)&v39, (uint64_t)&v41, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
    swift_beginAccess();
    v26 = *v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7A2B54((uint64_t)&v39, (uint64_t)&v41, v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options;
    result = swift_beginAccess();
    v28 = *(_QWORD *)(*(_QWORD *)v27 + 16);
    if (v28)
    {
      v29 = *(_QWORD *)v27 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v31 = *(_QWORD *)(v7 + 72);
      swift_bridgeObjectRetain_n();
      do
      {
        v32 = v28;
        sub_1BA4C2DD8(v29, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v47 = *((_QWORD *)v9 + 2);
        v35 = v43;
        v36 = v44;
        v37 = v45;
        v38 = v46;
        v33 = v41;
        v34 = v42;
        swift_retain();
        sub_1BA711C44();
        swift_release();
        sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v29 += v31;
        v28 = v32 - 1;
      }
      while (v32 != 1);
      result = swift_bridgeObjectRelease_n();
    }
    v30 = v40;
    *(_OWORD *)a2 = v39;
    *(_QWORD *)(a2 + 16) = v30;
  }
  return result;
}

uint64_t sub_1BA7B7CA0(uint64_t a1, __int128 *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _OWORD v51[5];
  uint64_t v52;
  uint64_t v53;

  v4 = v3;
  v53 = a1;
  v6 = type metadata accessor for FormatOption();
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2[3];
  v51[2] = a2[2];
  v51[3] = v9;
  v51[4] = a2[4];
  v52 = *((_QWORD *)a2 + 10);
  v10 = *a2;
  v11 = a2[1];
  v42 = a2;
  v51[0] = v10;
  v51[1] = v11;
  v13 = v2[10];
  v12 = v2[11];
  v14 = v2[15];
  v38 = v2[14];
  v15 = *(_QWORD *)(v13 + 16);
  v36 = v8;
  v37 = v12;
  if (v15)
  {
    swift_bridgeObjectRetain_n();
    v16 = v13 + 48;
    while (1)
    {
      v43 = *(_QWORD *)(v16 - 16);
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA6F84BC();
      if (v3)
        break;
      v16 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v15)
      {
        swift_bridgeObjectRelease_n();
        v8 = v36;
        v12 = v37;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  else
  {
LABEL_6:
    v17 = *(_QWORD *)(v12 + 16);
    if (v17)
    {
      v34 = v14;
      v41 = v3;
      swift_bridgeObjectRetain_n();
      v18 = (uint64_t *)(v12 + 48);
      while (1)
      {
        v39 = v17;
        v20 = *(v18 - 2);
        v19 = *(v18 - 1);
        v21 = *v18;
        v22 = v18[1];
        v24 = v18[2];
        v23 = v18[3];
        v26 = v18[4];
        v25 = v18[5];
        v43 = v20;
        v44 = v19;
        v45 = v21;
        v46 = v22;
        v47 = v24;
        v48 = v23;
        v49 = v26;
        v50 = v25;
        v40 = v25;
        sub_1BA76B724(v20, v19, v21, v22, v24, v23, v26);
        v27 = v41;
        sub_1BAC5FA3C();
        v41 = v27;
        if (v27)
          break;
        v18 += 8;
        sub_1BA76B698(v20, v19, v21, v22, v24, v23, v26);
        v17 = v39 - 1;
        if (v39 == 1)
        {
          swift_bridgeObjectRelease_n();
          v4 = v41;
          v14 = v34;
          v8 = v36;
          goto LABEL_11;
        }
      }
      sub_1BA76B698(v20, v19, v21, v22, v24, v23, v26);
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      v28 = *(_QWORD *)(v38 + 16);
      if (v28)
      {
        v29 = v14;
        v30 = v38 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
        v31 = *(_QWORD *)(v35 + 72);
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BA4C2DD8(v30, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v43 = *((_QWORD *)v8 + 2);
          swift_retain();
          sub_1BA711C44();
          if (v4)
            break;
          swift_release();
          sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
          v30 += v31;
          if (!--v28)
          {
            swift_bridgeObjectRelease_n();
            v14 = v29;
            goto LABEL_16;
          }
        }
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        return swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_16:
        swift_bridgeObjectRetain();
        sub_1BA6FEDF0(v53, (uint64_t)v51, v14);
        return swift_bridgeObjectRelease();
      }
    }
  }
}

void sub_1BA7B8060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;

  v4 = v3;
  v69 = (__int128 *)a2;
  v84 = a1;
  v6 = type metadata accessor for FormatOption();
  v60 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v55 - v11);
  v65 = a3;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return;
  v14 = v65 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v15 = *(_QWORD *)(v10 + 72);
  swift_bridgeObjectRetain();
  v16 = 0;
  v64 = v12;
  v61 = v8;
  v56 = v13;
  v55 = v14;
  v57 = v15;
  while (1)
  {
    v58 = v16;
    sub_1BA8CAF1C(v14 + v15 * v16, (uint64_t)v12, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v17 = v12[6];
    v18 = v12[7];
    v19 = v12[8];
    v63 = v12[11];
    v59 = v12[12];
    v20 = *(_QWORD *)(v17 + 16);
    v62 = v19;
    if (v20)
    {
      swift_bridgeObjectRetain_n();
      v21 = v17 + 48;
      do
      {
        v70 = *(_QWORD *)(v21 - 16);
        v22 = v69[2];
        v23 = v69[4];
        v81 = v69[3];
        v82 = v23;
        v83 = *((_QWORD *)v69 + 10);
        v24 = v69[1];
        v78 = *v69;
        v79 = v24;
        v80 = v22;
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BA6F84BC();
        if (v4)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          goto LABEL_38;
        }
        v21 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease_n();
      v12 = v64;
      v25 = (uint64_t)v61;
      v19 = v62;
      if (v18)
        goto LABEL_10;
      goto LABEL_21;
    }
    v25 = (uint64_t)v61;
    if (!v18)
      goto LABEL_21;
LABEL_10:
    swift_beginAccess();
    v26 = *(_QWORD *)(v18 + 56);
    swift_bridgeObjectRetain();
    sub_1BA7F1120(v84, v26);
    if (v4)
    {
      swift_bridgeObjectRelease();
      goto LABEL_40;
    }
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(v18 + 74) != 255)
    {
      v27 = *(unsigned __int16 *)(v18 + 72) | (*(unsigned __int8 *)(v18 + 74) << 16);
      if (v27 >= 0x20000)
      {
        v28 = HIBYTE(*(unsigned __int16 *)(v18 + 72)) <= 0xFEu && ~*(_BYTE *)(v18 + 72) == 0;
        if (v28 && (*(_WORD *)(v18 + 72) & 0x100) != 0)
          break;
      }
    }
LABEL_21:
    v30 = *(_QWORD *)(v19 + 16);
    if (v30)
      goto LABEL_22;
LABEL_26:
    v46 = *(_QWORD *)(v63 + 16);
    if (v46)
    {
      v47 = v60;
      v48 = v63 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
      swift_bridgeObjectRetain_n();
      v49 = *(_QWORD *)(v47 + 72);
      while (1)
      {
        sub_1BA4C2DD8(v48, v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v70 = *(_QWORD *)(v25 + 16);
        v50 = v69[2];
        v51 = v69[4];
        v81 = v69[3];
        v82 = v51;
        v83 = *((_QWORD *)v69 + 10);
        v52 = v69[1];
        v78 = *v69;
        v79 = v52;
        v80 = v50;
        swift_retain();
        sub_1BA711C44();
        if (v4)
          break;
        swift_release();
        sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v48 += v49;
        if (!--v46)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_31;
        }
      }
      swift_release();
      sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease_n();
      goto LABEL_40;
    }
LABEL_31:
    v53 = v59;
    swift_bridgeObjectRetain();
    sub_1BA6FEDF0(v84, (uint64_t)v69, v53);
    swift_bridgeObjectRelease();
    v15 = v57;
    if (v4)
      goto LABEL_40;
    v54 = v58 + 1;
    sub_1BB06B59C((uint64_t)v12, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v16 = v54;
    v14 = v55;
    if (v16 == v56)
      goto LABEL_41;
  }
  sub_1BA771864(*(_QWORD *)(v18 + 64), v27);
  v30 = *(_QWORD *)(v19 + 16);
  if (!v30)
    goto LABEL_26;
LABEL_22:
  v68 = v4;
  swift_bridgeObjectRetain_n();
  v31 = (uint64_t *)(v19 + 48);
  while (1)
  {
    v66 = v30;
    v32 = *(v31 - 1);
    v34 = *v31;
    v33 = v31[1];
    v36 = v31[2];
    v35 = v31[3];
    v37 = v31[4];
    v38 = v31[5];
    v70 = *(v31 - 2);
    v71 = v32;
    v72 = v34;
    v73 = v33;
    v74 = v36;
    v75 = v35;
    v76 = v37;
    v77 = v38;
    v39 = v69[2];
    v40 = v69[4];
    v81 = v69[3];
    v82 = v40;
    v83 = *((_QWORD *)v69 + 10);
    v41 = v69[1];
    v78 = *v69;
    v79 = v41;
    v80 = v39;
    v42 = v70;
    v43 = v33;
    v44 = v37;
    v67 = v38;
    sub_1BA76B724(v70, v32, v34, v33, v36, v35, v37);
    v45 = v68;
    sub_1BAC5FA3C();
    v68 = v45;
    if (v45)
      break;
    v31 += 8;
    sub_1BA76B698(v42, v32, v34, v43, v36, v35, v44);
    v30 = v66 - 1;
    if (v66 == 1)
    {
      swift_bridgeObjectRelease_n();
      v4 = v68;
      v12 = v64;
      v25 = (uint64_t)v61;
      goto LABEL_26;
    }
  }
  sub_1BA76B698(v42, v32, v34, v43, v36, v35, v44);
  swift_bridgeObjectRelease_n();
LABEL_38:
  v12 = v64;
LABEL_40:
  sub_1BB06B59C((uint64_t)v12, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
LABEL_41:
  swift_bridgeObjectRelease();
}

uint64_t sub_1BA7B8700(uint64_t a1)
{
  uint64_t v2;

  sub_1BA7B873C(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA7B873C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B3760)
  {
    v2 = sub_1BA8968B4();
    v4 = type metadata accessor for FormatObject(a1, (uint64_t)&type metadata for FormatSupplementary, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B3760);
  }
}

void sub_1BA7B8794(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;

  v4 = v3;
  v44 = a1;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v33 - v13;
  v39 = *(_QWORD *)(a3 + 16);
  if (!v39)
    return;
  v35 = v8;
  v15 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v16 = *(_QWORD *)(v12 + 72);
  v33[1] = a3;
  swift_bridgeObjectRetain();
  v17 = 0;
  v34 = v14;
  v36 = v16;
  v37 = v15;
  while (1)
  {
    v43 = v17;
    sub_1BA8CAF1C(v15 + v16 * v17, (uint64_t)v14, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v19 = *((_QWORD *)v14 + 6);
    v20 = *((_QWORD *)v14 + 10);
    v40 = *((_QWORD *)v14 + 12);
    v21 = v14[106];
    v42 = *((unsigned __int16 *)v14 + 52);
    v51 = v19;
    v22 = a2[3];
    v47 = a2[2];
    v48 = v22;
    v49 = a2[4];
    v50 = *((_QWORD *)a2 + 10);
    v23 = a2[1];
    v45 = *a2;
    v46 = v23;
    swift_retain();
    sub_1BA7B8C24();
    swift_release();
    if (v4)
      break;
    v41 = v21;
    v24 = *(_QWORD *)(v20 + 16);
    if (v24)
    {
      v25 = v35;
      v26 = v20 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
      v38 = v20;
      swift_bridgeObjectRetain_n();
      v27 = *(_QWORD *)(v25 + 72);
      do
      {
        sub_1BA4C2DD8(v26, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v51 = *((_QWORD *)v10 + 2);
        v28 = a2[3];
        v47 = a2[2];
        v48 = v28;
        v49 = a2[4];
        v50 = *((_QWORD *)a2 + 10);
        v29 = a2[1];
        v45 = *a2;
        v46 = v29;
        swift_retain();
        sub_1BA711C44();
        swift_release();
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v26 += v27;
        --v24;
      }
      while (v24);
      swift_bridgeObjectRelease_n();
      v14 = v34;
    }
    v30 = v42 | (v41 << 16);
    v15 = v37;
    if (BYTE2(v30) == 255)
      goto LABEL_5;
    if (!BYTE2(v30))
      goto LABEL_3;
    if (BYTE2(v30) != 1)
    {
      if (BYTE1(v42) != 255)
      {
        if ((v42 & 0x100) != 0)
        {
          switch((char)v42)
          {
            case 0:
            case 1:
            case 2:
            case 3:
              if (v40)
              {
                if (v40 != 1)
                  goto LABEL_5;
                sub_1BA771864(1, v42 | (v41 << 16));
                sub_1BA771864(1, v30);
                v31 = 1;
              }
              else
              {
                sub_1BA771864(0, v42 | (v41 << 16));
                sub_1BA771864(0, v30);
                v31 = 0;
              }
              sub_1BB2AECE8(v31, v30, 2);
              break;
            default:
              v32 = v40;
              sub_1BA771864(v40, v42 | (v41 << 16));
              v18 = v32;
              goto LABEL_4;
          }
        }
        goto LABEL_5;
      }
LABEL_3:
      v18 = v40;
      goto LABEL_4;
    }
    if ((v42 & 0x100) == 0)
      goto LABEL_5;
    switch((char)v42)
    {
      case 0:
      case 1:
      case 2:
      case 3:
        if (v40)
        {
          if (v40 != 1)
            goto LABEL_5;
          sub_1BA771864(1, v42 | (v41 << 16));
          v18 = 1;
        }
        else
        {
          sub_1BA771864(0, v42 | (v41 << 16));
          v18 = 0;
        }
        break;
      default:
        goto LABEL_3;
    }
LABEL_4:
    sub_1BA771864(v18, v30);
LABEL_5:
    v17 = v43 + 1;
    sub_1BB06B59C((uint64_t)v14, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v16 = v36;
    if (v17 == v39)
      goto LABEL_30;
  }
  sub_1BB06B59C((uint64_t)v14, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
LABEL_30:
  swift_bridgeObjectRelease();
}

void sub_1BA7B8C24()
{
  __asm { BR              X11 }
}

void sub_1BA7B8C90()
{
  sub_1BA7547AC();
}

uint64_t FormatContent.Resolved.puzzles.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v66 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  result = MEMORY[0x1E0DEE9D8];
  v70 = MEMORY[0x1E0DEE9D8];
  v41 = *(_QWORD *)(v4 + 16);
  if (v41)
  {
    v40 = v4 + 32;
    v39 = v4;
    swift_bridgeObjectRetain_n();
    v6 = 0;
    v7 = 0;
    v56 = v1;
    do
    {
      v53 = v7;
      v43 = v6;
      v9 = (uint64_t *)(v40 + 80 * v6);
      v10 = *v9;
      v55 = v9[1];
      v11 = v9[2];
      v50 = v9[3];
      v12 = v9[4];
      v13 = v9[5];
      v14 = v9[6];
      v51 = v9[7];
      v16 = v9[8];
      v15 = v9[9];
      v49 = v12 & 0x7FFFFFFFFFFFFFFFLL;
      v48 = v15;
      v52 = v11;
      v45 = v13;
      sub_1BA6D78DC();
      v46 = v10;
      v54 = v14;
      v17 = v51;
      sub_1BA6D78DC();
      sub_1BA6D78DC();
      v44 = v12;
      sub_1BA6D78DC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v18 = v53;
      v19 = sub_1BB4A4184(v16);
      v53 = v18;
      swift_bridgeObjectRelease();
      v69 = v17;
      swift_bridgeObjectRetain();
      sub_1BA6D74C4(v19);
      swift_bridgeObjectRelease();
      v47 = v16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v20 = v69;
      v21 = MEMORY[0x1E0DEE9D8];
      v69 = MEMORY[0x1E0DEE9D8];
      v58 = *(_QWORD *)(v20 + 16);
      if (v58)
      {
        v57 = v20 + 32;
        v42 = v20;
        swift_bridgeObjectRetain();
        v22 = 0;
        v23 = v21;
        do
        {
          v24 = (_QWORD *)(v57 + (v22 << 6));
          v25 = v24[1];
          v26 = v24[2];
          v27 = v24[3];
          v28 = v24[4];
          v30 = v24[5];
          v29 = v24[6];
          v31 = v24[7];
          v68 = v23;
          v32 = v23;
          v33 = *(_QWORD *)(v28 + 16);
          if (v33)
          {
            v34 = v29;
            v35 = v30;
            v36 = v28 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
            v65 = v25;
            swift_bridgeObjectRetain();
            v63 = v26;
            swift_bridgeObjectRetain();
            v62 = v27;
            swift_bridgeObjectRetain();
            v64 = v28;
            swift_bridgeObjectRetain_n();
            v61 = v35;
            swift_bridgeObjectRetain();
            v60 = v34;
            swift_bridgeObjectRetain();
            v59 = v31;
            swift_bridgeObjectRetain();
            v37 = *(_QWORD *)(v66 + 72);
            do
            {
              sub_1BA4C2DD8(v36, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
              if (swift_getEnumCaseMultiPayload() == 4)
              {
                MEMORY[0x1BCCE36AC]();
                if (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_1BB872E44();
                sub_1BB872E8C();
                sub_1BB872DCC();
              }
              else
              {
                sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
              }
              v36 += v37;
              --v33;
            }
            while (v33);
            v67 = v68;
            v23 = MEMORY[0x1E0DEE9D8];
          }
          else
          {
            v38 = v32;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v67 = v38;
            v23 = v38;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          ++v22;
          sub_1BA4AF900(v67);
        }
        while (v22 != v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v67 = v69;
        v8 = v43;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v67 = v21;
        v8 = v43;
      }
      v6 = v8 + 1;
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA4AF900(v67);
      v7 = v53;
    }
    while (v6 != v41);
    swift_bridgeObjectRelease_n();
    return v70;
  }
  return result;
}

uint64_t sub_1BA7B96C8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BA6CA500(0, (unint64_t *)&unk_1ED3AB0B0, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
        sub_1BA864FA4();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BB4CBA20(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3CF910);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA7B98EC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BA6CA500(0, (unint64_t *)&qword_1ED3D4440, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
        sub_1BA865EF0();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BB4CBA20(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3D4450);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA7B9B10(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BA6CA500(0, (unint64_t *)&qword_1ED3B9630, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
        sub_1BA865C78();
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          v12 = sub_1BB4CBB1C(v16, i, a3);
          v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

unint64_t sub_1BA7B9D34()
{
  unint64_t result;

  result = qword_1ED3B3260;
  if (!qword_1ED3B3260)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroup, &type metadata for FormatGroup);
    atomic_store(result, (unint64_t *)&qword_1ED3B3260);
  }
  return result;
}

void sub_1BA7B9D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

double UIEdgeInsetsInsetRect_0(double a1)
{
  return a1 + -20.0;
}

uint64_t sub_1BA7B9E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t result;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[3];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int16 v29;
  uint64_t v30;

  v20 = *(_QWORD *)(a3 + 16);
  if (v20)
  {
    v21 = a3 + 32;
    swift_bridgeObjectRetain();
    v4 = 0;
    while (1)
    {
      v5 = v21 + 152 * v4;
      v6 = *(_OWORD *)(v5 + 112);
      v26 = *(_OWORD *)(v5 + 96);
      v27 = v6;
      v28 = *(_OWORD *)(v5 + 128);
      v29 = *(_WORD *)(v5 + 144);
      v7 = *(_OWORD *)(v5 + 48);
      v22[2] = *(_OWORD *)(v5 + 32);
      v23 = v7;
      v8 = *(_OWORD *)(v5 + 80);
      v24 = *(_OWORD *)(v5 + 64);
      v25 = v8;
      v9 = *(_OWORD *)(v5 + 16);
      v22[0] = *(_OWORD *)v5;
      v22[1] = v9;
      v10 = v9;
      if ((_QWORD)v9)
      {
        v11 = *(_QWORD *)(v9 + 16);
        if (v11)
          break;
      }
      sub_1BA9F06B0((uint64_t)v22);
LABEL_11:
      v13 = v28;
      if (v28 != 254)
      {
        v18 = v27;
        v19 = v26;
        v14 = v25;
        v15 = v24;
        v16 = v23;
        v30 = v25;
        swift_retain();
        sub_1BA7547AC();
        sub_1BA6E8A78(v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v13);
        if (v3)
          goto LABEL_15;
      }
      ++v4;
      sub_1BA9F0544((uint64_t)v22);
      if (v4 == v20)
        return swift_bridgeObjectRelease();
    }
    sub_1BA9F06B0((uint64_t)v22);
    swift_bridgeObjectRetain();
    v12 = v10 + 64;
    while (1)
    {
      v30 = *(_QWORD *)(v12 - 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BA7547AC();
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v12 += 40;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
LABEL_15:
    sub_1BA9F0544((uint64_t)v22);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BA7BA0C0()
{
  unint64_t result;

  result = qword_1ED39BA50;
  if (!qword_1ED39BA50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatComputedInvalidation, &type metadata for FormatComputedInvalidation);
    atomic_store(result, (unint64_t *)&qword_1ED39BA50);
  }
  return result;
}

uint64_t sub_1BA7BA104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BA7BA124(a1, a2, a3);
}

uint64_t sub_1BA7BA124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BA6D5184(a1, *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), a2, a3);
}

uint64_t destroy for FormatCompilerEnumProperty(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = sub_1BB86E710();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1BA7BA1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t (*a7)(void), uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(_QWORD);
  uint64_t (*v97)(void);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  __int128 *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  _QWORD v116[3];
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;

  v98 = a8;
  v97 = a7;
  v96 = a6;
  v95 = a5;
  v104 = a4;
  v9 = v8;
  v112 = a3;
  v113 = a1;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v100 = v11;
  v99 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v101 = (char *)&v88 - v12;
  v103 = sub_1BB86DA38();
  v102 = *(__int128 **)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v106 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v109 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v110 = (uint64_t)&v88 - v17;
  v108 = type metadata accessor for FormatNodeStateData.Data();
  *(_QWORD *)&v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v19 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB68079C(0, (unint64_t *)&unk_1ED3B3768, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v88 - v21;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v24 = v23;
  v25 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v88 - v26;
  v127 = v113;
  v113 = a2;
  v28 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries;
  swift_beginAccess();
  v29 = *(_QWORD *)(v28 + 8);
  v30 = *(_QWORD *)(v29 + 16);
  v114 = v9;
  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v22, 1, 1, v24);
LABEL_7:
    sub_1BA78D440((uint64_t)v22, (unint64_t *)&unk_1ED3B3768, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v36 = v114;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    return swift_willThrow();
  }
  v31 = *(_QWORD *)(v9 + 32);
  v32 = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = sub_1BA6E35A8(v31, v32);
  if ((v34 & 1) != 0)
  {
    sub_1BA7BCB94(*(_QWORD *)(v29 + 56) + *(_QWORD *)(v25 + 72) * v33, (uint64_t)v22, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
    v35 = 0;
  }
  else
  {
    v35 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v22, v35, 1, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24) == 1)
    goto LABEL_7;
  sub_1BA7BE148((uint64_t)v22, (uint64_t)v27, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
  v38 = v114;
  swift_beginAccess();
  v39 = *(_QWORD *)(v38 + 16);
  v40 = *(_QWORD *)(v38 + 24);
  swift_bridgeObjectRetain();
  v94 = sub_1BA717D44(v39, v40);
  v105 = v41;
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)v27;
  v91 = *((_QWORD *)v27 + 1);
  v43 = v91;
  v44 = *((_QWORD *)v27 + 2);
  v45 = *((_QWORD *)v27 + 6);
  v92 = *((_QWORD *)v27 + 5);
  v46 = v92;
  v93 = v45;
  v48 = *((_QWORD *)v27 + 7);
  v47 = *((_QWORD *)v27 + 8);
  v49 = *((_QWORD *)v27 + 9);
  v50 = v27[80];
  v51 = *((_QWORD *)v27 + 12);
  v89 = *((_QWORD *)v27 + 11);
  v52 = v89;
  v90 = v51;
  v53 = v27[104];
  *(_QWORD *)v19 = v42;
  *((_QWORD *)v19 + 1) = v43;
  *((_QWORD *)v19 + 2) = v44;
  v88 = *(_OWORD *)(v27 + 24);
  *(_OWORD *)(v19 + 24) = v88;
  *((_QWORD *)v19 + 5) = v46;
  *((_QWORD *)v19 + 6) = v45;
  *((_QWORD *)v19 + 7) = v48;
  *((_QWORD *)v19 + 8) = v47;
  *((_QWORD *)v19 + 9) = v49;
  v19[80] = v50;
  *((_QWORD *)v19 + 11) = v52;
  *((_QWORD *)v19 + 12) = v51;
  v19[104] = v53;
  v54 = v108;
  swift_storeEnumTagMultiPayload();
  v55 = v110;
  sub_1BA4C2DD8((uint64_t)v19, v110, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v107 + 56))(v55, 0, 1, v54);
  v56 = v109;
  sub_1BA5E01A4(v55, v109, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  swift_beginAccess();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57 = v105;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA722740(v56, v94, v57);
  swift_endAccess();
  v58 = v114;
  sub_1BA5C699C(v55, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
  v59 = sub_1BA7BCC48((uint64_t)v27, v113);
  v60 = (uint64_t *)(*(_QWORD *)(v59 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v62 = *v60;
  v61 = v60[1];
  v63 = *((_QWORD *)v27 + 7);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v64 = v111;
  v65 = sub_1BA6E3AA0(v63, v59, v62, v61, (void (*)(uint64_t))sub_1BA4F1408, (uint64_t (*)(uint64_t))sub_1BA4B9330, (uint64_t (*)(uint64_t, uint64_t))sub_1BA4D49D4, (void (*)(_QWORD))type metadata accessor for FormatSupplementaryNodeStyle, (void (*)(uint64_t))sub_1BA5053C0);
  if (v64)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v109 = v65;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v66 = *(_QWORD *)v27;
    v111 = *((_QWORD *)v27 + 1);
    v67 = *((_QWORD *)v27 + 2);
    v68 = *((_QWORD *)v27 + 5);
    v110 = *((_QWORD *)v27 + 6);
    v70 = *((_QWORD *)v27 + 8);
    v69 = *((_QWORD *)v27 + 9);
    v71 = v27[80];
    v72 = *((_QWORD *)v27 + 11);
    v108 = *((_QWORD *)v27 + 12);
    v73 = v27[104];
    v116[0] = v66;
    v116[1] = v111;
    v116[2] = v67;
    v107 = *(_OWORD *)(v27 + 24);
    v117 = v107;
    v118 = v68;
    v119 = v110;
    v120 = v63;
    v121 = v70;
    v122 = v69;
    v123 = v71;
    v124 = v72;
    v125 = v108;
    v126 = v73;
    v74 = (*((uint64_t (**)(char *, _QWORD, uint64_t))v102 + 13))(v106, *MEMORY[0x1E0DB6208], v103);
    v102 = &v88;
    MEMORY[0x1E0C80A78](v74);
    *((_QWORD *)&v88 - 6) = v116;
    v75 = v105;
    *((_QWORD *)&v88 - 5) = v94;
    *((_QWORD *)&v88 - 4) = v75;
    *((_QWORD *)&v88 - 3) = v58;
    v86 = v59;
    v103 = v59;
    v87 = v112;
    sub_1BA71AD78(0, &qword_1ED3C45B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
    swift_allocObject();
    v76 = v107;
    v112 = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(_QWORD *)&v107 = v76;
    swift_bridgeObjectRetain();
    v106 = (char *)sub_1BB86DB4C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v77 = v114;
    v115 = *(_QWORD *)(v114 + 48);
    v78 = v115;
    swift_bridgeObjectRetain();
    sub_1BA71CA6C(v78);
    v79 = v101;
    v80 = v103;
    sub_1BA717E88();
    sub_1BA719718(v78);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_retain();
    v81 = swift_bridgeObjectRetain();
    v82 = sub_1BB67D4D4(v81, v80);
    swift_bridgeObjectRelease();
    swift_release();
    v83 = v77;
    v84 = (_QWORD *)swift_allocObject();
    v84[2] = v109;
    v84[3] = v80;
    v112 = v82;
    v84[4] = v113;
    v84[5] = v83;
    v111 = v96(0);
    v85 = v97();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v87 = v85;
    v86 = v111;
    sub_1BB86D51C();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v79, v100);
  }
  return sub_1BB06B59C((uint64_t)v27, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
}

uint64_t getEnumTagSinglePayload for FormatSupplementary(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 105))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BA7BAF7C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t (*a7)(void), uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  __int128 *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  int *v89;
  _OWORD *v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  unint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(_QWORD);
  uint64_t (*v116)(void);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  char *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  __int128 *v139;
  _QWORD v140[5];
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  _OWORD v148[3];
  _BYTE v149[40];
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  _OWORD v155[6];
  uint64_t v156;
  _OWORD v157[6];
  _BYTE v158[25];
  uint64_t v159;

  v116 = a7;
  v117 = a8;
  v114 = a5;
  v115 = a6;
  v136 = a4;
  v137 = a3;
  v9 = v8;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B0720, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v118 = *(_QWORD *)(v12 - 8);
  v119 = v12;
  MEMORY[0x1E0C80A78](v12);
  v126 = (char *)&v112 - v13;
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v124 = (uint64_t)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v125 = (uint64_t)&v112 - v18;
  v19 = type metadata accessor for FormatNodeStateData.Data();
  v121 = *(_QWORD *)(v19 - 8);
  v122 = v19;
  MEMORY[0x1E0C80A78](v19);
  v123 = (uint64_t)&v112 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for FormatItemNodeData();
  MEMORY[0x1E0C80A78](v120);
  v127 = (uint64_t)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4968, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7EF0], v14);
  MEMORY[0x1E0C80A78](v22);
  v129 = (char *)&v112 - v23;
  v132 = sub_1BB86FE38();
  v130 = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v131 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, v14);
  MEMORY[0x1E0C80A78](v25);
  v128 = (uint64_t)&v112 - v26;
  v27 = sub_1BB86DA38();
  v133 = *(_QWORD *)(v27 - 8);
  v134 = (uint64_t *)v27;
  MEMORY[0x1E0C80A78](v27);
  v135 = (char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB68079C(0, (unint64_t *)&qword_1ED3B3788, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v112 - v30;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v33 = v32;
  v34 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v139 = (__int128 *)((char *)&v112 - v35);
  v156 = a1;
  v36 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items;
  swift_beginAccess();
  v37 = *(_QWORD *)(v36 + 8);
  v38 = *(_QWORD *)(v37 + 16);
  v159 = v9;
  if (!v38)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v31, 1, 1, v33);
LABEL_7:
    sub_1BA78D440((uint64_t)v31, (unint64_t *)&qword_1ED3B3788, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v44 = v159;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    return swift_willThrow();
  }
  v39 = *(_QWORD *)(v9 + 32);
  v40 = *(_QWORD *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v41 = sub_1BA6E35A8(v39, v40);
  if ((v42 & 1) != 0)
  {
    sub_1BA7BCB94(*(_QWORD *)(v37 + 56) + *(_QWORD *)(v34 + 72) * v41, (uint64_t)v31, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
    v43 = 0;
  }
  else
  {
    v43 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v31, v43, 1, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v31, 1, v33) == 1)
    goto LABEL_7;
  v46 = v139;
  sub_1BA7BE148((uint64_t)v31, (uint64_t)v139, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
  v47 = v159;
  swift_beginAccess();
  v48 = *(_QWORD *)(v47 + 16);
  v49 = *(_QWORD *)(v47 + 24);
  swift_bridgeObjectRetain();
  v50 = sub_1BA717D44(v48, v49);
  v52 = v51;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8))
  {
    v54 = *(_QWORD *)(v47 + 16);
    v53 = *(_QWORD *)(v47 + 24);
    swift_bridgeObjectRetain();
  }
  else
  {
    v54 = 0;
    v53 = 0;
  }
  v55 = v138;
  v56 = sub_1BA7BD1FC(v46, a2, v50, v52);
  if (v55)
  {
    sub_1BB06B59C((uint64_t)v46, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v57 = v50;
  v58 = v56;
  v113 = v57;
  v138 = v52;
  v59 = (uint64_t *)(*(_QWORD *)(v56 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v60 = *v59;
  v61 = v59[1];
  v62 = *((_QWORD *)v46 + 10);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v112 = sub_1BB66B870(v62, v58, v60, v61, (void (*)(uint64_t))sub_1BA780040, sub_1BA77F9E0, (uint64_t (*)(uint64_t, uint64_t))sub_1BA77F730, (void (*)(_QWORD))type metadata accessor for FormatItemNodeStyle, (void (*)(uint64_t))sub_1BA773DE0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v63 = *((_QWORD *)v46 + 1);
  v64 = *((_BYTE *)v46 + 120);
  *(_QWORD *)&v150 = *(_QWORD *)v46;
  *((_QWORD *)&v150 + 1) = v63;
  v65 = v46[2];
  v151 = v46[1];
  v152 = v65;
  v66 = v46[4];
  v153 = v46[3];
  v154 = v66;
  *(_QWORD *)&v155[0] = v62;
  *(_OWORD *)((char *)v155 + 8) = *(__int128 *)((char *)v46 + 88);
  *(_OWORD *)((char *)&v155[1] + 8) = *(__int128 *)((char *)v46 + 104);
  BYTE8(v155[2]) = v64;
  v157[2] = v152;
  v157[3] = v153;
  *(_OWORD *)&v158[9] = *(_OWORD *)((char *)&v155[1] + 9);
  v157[5] = v155[0];
  *(_OWORD *)v158 = v155[1];
  v157[4] = v66;
  v157[0] = v150;
  v157[1] = v151;
  v67 = (*(uint64_t (**)(char *, _QWORD, uint64_t *))(v133 + 104))(v135, *MEMORY[0x1E0DB6208], v134);
  v134 = &v112;
  MEMORY[0x1E0C80A78](v67);
  *(&v112 - 8) = v58;
  *(&v112 - 7) = (uint64_t)v157;
  *(&v112 - 6) = v54;
  *(&v112 - 5) = v53;
  v68 = v138;
  *(&v112 - 4) = v113;
  *(&v112 - 3) = v68;
  v110 = v159;
  v111 = v137;
  sub_1BA71AD78(0, &qword_1ED3C45B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BA8CED9C((uint64_t)&v150);
  v69 = sub_1BB86DB4C();
  sub_1BA8CEE60((uint64_t)&v150);
  swift_bridgeObjectRelease();
  sub_1BA7BC108(v58 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)&v142, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (*((_QWORD *)&v143 + 1))
  {
    v135 = (char *)v69;
    sub_1BA4CECCC(&v142, (uint64_t)v149);
    if (v112)
    {
      v70 = v128;
      sub_1BA5E01A4(v112 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, v128, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
      v71 = type metadata accessor for FormatItemNodeAction();
      v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v70, 1, v71);
      v74 = v131;
      v73 = v132;
      v75 = v130;
      if (v72 == 1)
      {
        sub_1BA5C699C(v70, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
        v76 = 0x8000000000000000;
      }
      else
      {
        v78 = v132;
        sub_1BAF70154();
        sub_1BA4A2E80(v70, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
        v76 = v142;
        v73 = v78;
        v75 = v130;
      }
      v77 = (uint64_t)v129;
      v79 = *(_QWORD *)(v112 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
      v136 = v76;
      if (v79 != 3)
      {
        v103 = *(_QWORD *)(v112 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
        *(_QWORD *)&v142 = v79;
        *((_QWORD *)&v142 + 1) = v103;
        v140[0] = v76;
        sub_1BAC68784(v79);
        sub_1BAF562D0(v140, v77);
        sub_1BA7644C0(v79);
        v106 = v132;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v77, 0, 1, v132);
        (*(void (**)(char *, uint64_t, uint64_t))(v75 + 32))(v74, v77, v106);
LABEL_23:
        swift_beginAccess();
        swift_retain();
        v80 = swift_bridgeObjectRetain();
        v81 = sub_1BB67D954(v80, v58);
        swift_bridgeObjectRelease();
        swift_release();
        v82 = *(_QWORD *)(v137 + 24);
        swift_beginAccess();
        v83 = v138;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v141 = *(_QWORD *)(v82 + 40);
        *(_QWORD *)(v82 + 40) = 0x8000000000000000;
        sub_1BB4BDE7C(v113, v83, v81, v113, v83, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v82 + 40) = v141;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_1BA4C010C((uint64_t)v149, (uint64_t)v140);
        v85 = v127;
        sub_1BA7BC210(v140, v127);
        v86 = v139[5];
        v146 = v139[4];
        v147 = v86;
        v148[0] = v139[6];
        *(_OWORD *)((char *)v148 + 9) = *(__int128 *)((char *)v139 + 105);
        v87 = v139[3];
        v144 = v139[2];
        v145 = v87;
        v88 = v139[1];
        v142 = *v139;
        v143 = v88;
        v89 = (int *)v120;
        (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v85 + *(int *)(v120 + 28), v131, v132);
        v90 = (_OWORD *)(v85 + v89[5]);
        v91 = v147;
        v90[4] = v146;
        v90[5] = v91;
        v90[6] = v148[0];
        *(_OWORD *)((char *)v90 + 105) = *(_OWORD *)((char *)v148 + 9);
        v92 = v143;
        *v90 = v142;
        v90[1] = v92;
        v93 = v145;
        v90[2] = v144;
        v90[3] = v93;
        v94 = v136;
        *(_QWORD *)(v85 + v89[6]) = v136;
        v95 = (_QWORD *)(v85 + v89[8]);
        *v95 = v113;
        v95[1] = v83;
        v95[2] = v81;
        v96 = v123;
        sub_1BA4C2DD8(v85, v123, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
        v97 = v122;
        swift_storeEnumTagMultiPayload();
        v137 = v58;
        v98 = v125;
        sub_1BA4C2DD8(v96, v125, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v121 + 56))(v98, 0, 1, v97);
        v99 = v124;
        sub_1BA5E01A4(v98, v124, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_1BA8CED9C((uint64_t)&v142);
        v136 = v94;
        sub_1BA728598(v94);
        sub_1BA722740(v99, v113, v83);
        swift_endAccess();
        v100 = v137;
        sub_1BA5C699C(v98, (unint64_t *)&qword_1ED3C41E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        sub_1BA4A2E80(v96, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
        swift_getKeyPath();
        v140[0] = *(_QWORD *)(v159 + 48);
        v101 = v140[0];
        swift_bridgeObjectRetain();
        sub_1BA71CA6C(v101);
        v102 = v100;
        sub_1BA717E88();
        sub_1BA719718(v101);
        swift_bridgeObjectRelease();
        v104 = v159;
        swift_beginAccess();
        swift_retain();
        v105 = swift_bridgeObjectRetain();
        v134 = (uint64_t *)sub_1BB67D4D4(v105, v102);
        swift_bridgeObjectRelease();
        swift_release();
        v107 = (_QWORD *)swift_allocObject();
        v107[2] = v112;
        v107[3] = v104;
        v107[4] = v102;
        v108 = v115(0);
        v109 = v116();
        swift_retain();
        swift_retain();
        swift_retain();
        v110 = v108;
        v111 = v109;
        sub_1BB86D51C();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        sub_1BA7280A0(v136);
        swift_release();
        (*(void (**)(char *, uint64_t))(v118 + 8))(v126, v119);
        sub_1BA4A2E80(v127, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
        (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v132);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v149);
        return sub_1BB06B59C((uint64_t)v139, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      }
    }
    else
    {
      v136 = 0x8000000000000000;
      v74 = v131;
      v73 = v132;
      v77 = (uint64_t)v129;
      v75 = v130;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v77, 1, 1, v73);
    (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, *MEMORY[0x1E0DB7ED0], v73);
    sub_1BA5C699C(v77, (unint64_t *)&unk_1ED3C4968, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7EF0]);
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  sub_1BA79E2F0((uint64_t)&v142, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  swift_release();
  swift_release();
  return sub_1BB06B59C((uint64_t)v139, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
}

uint64_t sub_1BA7BC108(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;

  sub_1BA7BC154(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BA7BC154(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3B2E30);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BA7BC1BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B3788)
  {
    sub_1BA7F8204(255);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B3788);
  }
}

uint64_t sub_1BA7BC210@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char *v26;
  uint64_t v27;
  char v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  int v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  char v70;
  uint64_t v71;
  char v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  _OWORD v86[4];
  _OWORD v87[2];
  __int128 v88;
  _OWORD v89[2];
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  _BYTE v99[40];
  uint64_t v100;
  unint64_t v101;

  v85 = a2;
  v81 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v81);
  v82 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1E0C80A78](v79);
  v80 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v76);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v75 = (char *)&v74 - v8;
  v77 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v77);
  v78 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v83);
  v84 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 40);
  v20 = v17;
  v21 = (uint64_t)a1;
  v19(&v100, v18, v20);
  v23 = v100;
  v22 = v101;
  v97 = v100;
  v98 = v101;
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v99);
  switch(v22)
  {
    case 0uLL:
      sub_1BA7C2A4C();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v24 = *((_QWORD *)&v86[0] + 1);
      v25 = v86[2];
      v26 = v84;
      *(_QWORD *)v84 = *(_QWORD *)&v86[0];
      *((_QWORD *)v26 + 1) = v24;
      *((_OWORD *)v26 + 1) = v86[1];
      v26[32] = v25;
      *(_OWORD *)(v26 + 40) = *(_OWORD *)((char *)&v86[2] + 8);
      goto LABEL_40;
    case 1uLL:
      sub_1BA7C2A4C();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v27 = *((_QWORD *)&v86[0] + 1);
      v28 = v86[2];
      v29 = *(_OWORD *)((char *)&v86[2] + 8);
      v30 = *((_QWORD *)&v86[3] + 1);
      v31 = *(_QWORD *)&v87[0];
      v26 = v84;
      *(_QWORD *)v84 = *(_QWORD *)&v86[0];
      *((_QWORD *)v26 + 1) = v27;
      *((_OWORD *)v26 + 1) = v86[1];
      v26[32] = v28;
      *(_OWORD *)(v26 + 40) = v29;
      *((_QWORD *)v26 + 7) = v30;
      *((_QWORD *)v26 + 8) = v31;
      *(_OWORD *)(v26 + 72) = *(_OWORD *)((char *)v87 + 8);
      goto LABEL_40;
    case 2uLL:
      sub_1BA7C2A4C();
      v32 = swift_dynamicCast();
      v26 = v84;
      v33 = v85;
      if (!v32)
        goto LABEL_44;
      sub_1BA5193C4((uint64_t)v15, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
      goto LABEL_22;
    case 3uLL:
      sub_1BA7C2A4C();
      v34 = swift_dynamicCast();
      v26 = v84;
      v33 = v85;
      if (!v34)
        goto LABEL_44;
      sub_1BA5193C4((uint64_t)v12, (uint64_t)v84, type metadata accessor for FeedHeadline);
      goto LABEL_22;
    case 4uLL:
      sub_1BA7C2A4C();
      v35 = (uint64_t)v78;
      v36 = swift_dynamicCast();
      v26 = v84;
      v33 = v85;
      if (!v36)
        goto LABEL_44;
      sub_1BA5193C4(v35, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
      goto LABEL_22;
    case 5uLL:
      sub_1BA7C2A4C();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v62 = v89[0];
      v26 = v84;
      *((_OWORD *)v84 + 6) = v88;
      *((_OWORD *)v26 + 7) = v62;
      *(_OWORD *)(v26 + 121) = *(_OWORD *)((char *)v89 + 9);
      v63 = v86[3];
      *((_OWORD *)v26 + 2) = v86[2];
      *((_OWORD *)v26 + 3) = v63;
      v64 = v87[1];
      *((_OWORD *)v26 + 4) = v87[0];
      *((_OWORD *)v26 + 5) = v64;
      v65 = v86[1];
      *(_OWORD *)v26 = v86[0];
      *((_OWORD *)v26 + 1) = v65;
      goto LABEL_40;
    case 6uLL:
      sub_1BA7C2A4C();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v26 = v84;
      sub_1BACB39A8(v86, v84);
      goto LABEL_40;
    case 7uLL:
      sub_1BA7C2A4C();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v37 = v89[0];
      v26 = v84;
      *((_OWORD *)v84 + 6) = v88;
      *((_OWORD *)v26 + 7) = v37;
      *((_OWORD *)v26 + 8) = v89[1];
      v26[144] = v90;
      v38 = v86[3];
      *((_OWORD *)v26 + 2) = v86[2];
      *((_OWORD *)v26 + 3) = v38;
      v39 = v87[1];
      *((_OWORD *)v26 + 4) = v87[0];
      *((_OWORD *)v26 + 5) = v39;
      v40 = v86[1];
      *(_OWORD *)v26 = v86[0];
      *((_OWORD *)v26 + 1) = v40;
      goto LABEL_40;
    case 8uLL:
      sub_1BA7C2A4C();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v66 = v89[0];
      v26 = v84;
      *((_OWORD *)v84 + 6) = v88;
      *((_OWORD *)v26 + 7) = v66;
      *((_OWORD *)v26 + 8) = v89[1];
      *((_QWORD *)v26 + 18) = v90;
      v67 = v86[3];
      *((_OWORD *)v26 + 2) = v86[2];
      *((_OWORD *)v26 + 3) = v67;
      v68 = v87[1];
      *((_OWORD *)v26 + 4) = v87[0];
      *((_OWORD *)v26 + 5) = v68;
      v69 = v86[1];
      *(_OWORD *)v26 = v86[0];
      *((_OWORD *)v26 + 1) = v69;
      goto LABEL_40;
    case 9uLL:
      sub_1BA7C2A4C();
      v41 = (uint64_t)v80;
      v42 = swift_dynamicCast();
      v26 = v84;
      v33 = v85;
      if (!v42)
        goto LABEL_44;
      sub_1BA5193C4(v41, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for FeedEngagementBanner);
      goto LABEL_22;
    case 0xAuLL:
      sub_1BA7C2A4C();
      sub_1BB86F5D4();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v26 = v84;
      *(_QWORD *)v84 = *(_QWORD *)&v86[0];
      goto LABEL_40;
    case 0xBuLL:
      sub_1BA7C2A4C();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v43 = *((_QWORD *)&v86[1] + 1);
      v44 = v86[2];
      v26 = v84;
      *(_QWORD *)v84 = *(_QWORD *)&v86[0];
      *(_OWORD *)(v26 + 8) = *(_OWORD *)((char *)v86 + 8);
      *((_QWORD *)v26 + 3) = v43;
      v26[32] = v44;
      goto LABEL_40;
    case 0xCuLL:
      sub_1BA7C2A4C();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v45 = v90;
      v26 = v84;
      *((_OWORD *)v84 + 8) = v89[1];
      *((_OWORD *)v26 + 9) = v45;
      *((_QWORD *)v26 + 20) = v91;
      v46 = v87[1];
      *((_OWORD *)v26 + 4) = v87[0];
      *((_OWORD *)v26 + 5) = v46;
      v47 = v89[0];
      *((_OWORD *)v26 + 6) = v88;
      *((_OWORD *)v26 + 7) = v47;
      v48 = v86[1];
      *(_OWORD *)v26 = v86[0];
      *((_OWORD *)v26 + 1) = v48;
      v49 = v86[3];
      *((_OWORD *)v26 + 2) = v86[2];
      *((_OWORD *)v26 + 3) = v49;
      goto LABEL_40;
    case 0xDuLL:
      sub_1BA7C2A4C();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v70 = v86[1];
      v71 = *((_QWORD *)&v86[2] + 1);
      v26 = v84;
      *(_OWORD *)v84 = v86[0];
      v26[16] = v70;
      *(_OWORD *)(v26 + 24) = *(_OWORD *)((char *)&v86[1] + 8);
      *((_QWORD *)v26 + 5) = v71;
      *((_OWORD *)v26 + 3) = v86[3];
      goto LABEL_40;
    case 0xEuLL:
      sub_1BA7C2A4C();
      v50 = (uint64_t)v82;
      v51 = swift_dynamicCast();
      v26 = v84;
      v33 = v85;
      if (!v51)
        goto LABEL_44;
      sub_1BA5193C4(v50, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      goto LABEL_45;
    case 0xFuLL:
      sub_1BA7C2A4C();
      if (!swift_dynamicCast())
        goto LABEL_43;
      v52 = v94;
      v26 = v84;
      *((_OWORD *)v84 + 12) = v93;
      *((_OWORD *)v26 + 13) = v52;
      *((_OWORD *)v26 + 14) = v95;
      *((_QWORD *)v26 + 30) = v96;
      v53 = v90;
      *((_OWORD *)v26 + 8) = v89[1];
      *((_OWORD *)v26 + 9) = v53;
      v54 = v92;
      *((_OWORD *)v26 + 10) = v91;
      *((_OWORD *)v26 + 11) = v54;
      v55 = v87[1];
      *((_OWORD *)v26 + 4) = v87[0];
      *((_OWORD *)v26 + 5) = v55;
      v56 = v89[0];
      *((_OWORD *)v26 + 6) = v88;
      *((_OWORD *)v26 + 7) = v56;
      v57 = v86[1];
      *(_OWORD *)v26 = v86[0];
      *((_OWORD *)v26 + 1) = v57;
      v58 = v86[3];
      *((_OWORD *)v26 + 2) = v86[2];
      *((_OWORD *)v26 + 3) = v58;
LABEL_40:
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      goto LABEL_41;
    case 0x10uLL:
      v26 = v84;
      goto LABEL_40;
    default:
      sub_1BA7C2A4C();
      v60 = (uint64_t)v75;
      v59 = v76;
      if ((swift_dynamicCast() & 1) == 0)
      {
        sub_1BA6E0CBC(v23, v22);
LABEL_43:
        v26 = v84;
        v33 = v85;
        goto LABEL_44;
      }
      sub_1BA5193C4(v60, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
      v61 = &v6[*(int *)(v59 + 20)];
      if (*((_QWORD *)v61 + 2) == v23 && v22 == *((_QWORD *)v61 + 3))
      {
        sub_1BA6E0CBC(v23, v22);
        goto LABEL_47;
      }
      v73 = sub_1BB874398();
      sub_1BA6E0CBC(v23, v22);
      if ((v73 & 1) == 0)
      {
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
        v21 = (uint64_t)a1;
        v26 = v84;
        v33 = v85;
LABEL_44:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
        swift_storeEnumTagMultiPayload();
        goto LABEL_45;
      }
LABEL_47:
      v26 = v84;
      sub_1BA5193C4((uint64_t)v6, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      v21 = (uint64_t)a1;
LABEL_41:
      v33 = v85;
LABEL_45:
      sub_1BA5193C4((uint64_t)v26, v33, type metadata accessor for FeedItem);
      return __swift_destroy_boxed_opaque_existential_1(v21);
  }
}

uint64_t sub_1BA7BCB94(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v7;

  sub_1BA4CDF6C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1BA7BCBF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3();
    v9 = type metadata accessor for FormatObject(a1, a4, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BA7BCC48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v68[2] = a2;
  v3 = type metadata accessor for FormatOption();
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  MEMORY[0x1E0C80A78](v3);
  v75 = (uint64_t)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v80 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7A154(0, v6, 0);
    v7 = v80;
    v73 = v5;
    v8 = (uint64_t *)(v5 + 48);
    do
    {
      v74 = v6;
      v76 = v7;
      v9 = *(v8 - 2);
      v10 = *(v8 - 1);
      v11 = *v8;
      v12 = v8[1];
      v14 = v8[2];
      v13 = v8[3];
      v16 = v8[4];
      v15 = v8[5];
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v9;
      *(_QWORD *)(v17 + 24) = v10;
      *(_QWORD *)(v17 + 32) = v11;
      *(_QWORD *)(v17 + 40) = v12;
      *(_QWORD *)(v17 + 48) = v14;
      *(_QWORD *)(v17 + 56) = v13;
      *(_QWORD *)(v17 + 64) = v16;
      *(_QWORD *)(v17 + 72) = v15;
      v18 = v10;
      v7 = v76;
      sub_1BA76B724(v9, v18, v11, v12, v14, v13, v16);
      v80 = v7;
      v20 = *(_QWORD *)(v7 + 16);
      v19 = *(_QWORD *)(v7 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1BAC7A154(v19 > 1, v20 + 1, 1);
        v7 = v80;
      }
      v8 += 8;
      *(_QWORD *)(v7 + 16) = v20 + 1;
      *(_QWORD *)(v7 + 8 * v20 + 32) = v17 | 0xA000000000000000;
      v6 = v74 - 1;
    }
    while (v74 != 1);
    swift_bridgeObjectRelease();
  }
  v21 = v72;
  swift_beginAccess();
  v22 = *(_QWORD *)(v21 + 72);
  v23 = *(_QWORD *)(v22 + 16);
  v24 = MEMORY[0x1E0DEE9D8];
  if (v23)
  {
    v76 = v7;
    v79 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7A154(0, v23, 0);
    v24 = v79;
    v68[1] = v22;
    v25 = (uint64_t *)(v22 + 48);
    do
    {
      v73 = v24;
      v74 = v23;
      v26 = *(v25 - 2);
      v27 = *(v25 - 1);
      v28 = *v25;
      v29 = v25[1];
      v30 = v25[2];
      v31 = v25[3];
      v33 = v25[4];
      v32 = v25[5];
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = v26;
      *(_QWORD *)(v34 + 24) = v27;
      *(_QWORD *)(v34 + 32) = v28;
      *(_QWORD *)(v34 + 40) = v29;
      *(_QWORD *)(v34 + 48) = v30;
      *(_QWORD *)(v34 + 56) = v31;
      *(_QWORD *)(v34 + 64) = v33;
      *(_QWORD *)(v34 + 72) = v32;
      v35 = v29;
      v24 = v73;
      sub_1BA76B724(v26, v27, v28, v35, v30, v31, v33);
      v79 = v24;
      v37 = *(_QWORD *)(v24 + 16);
      v36 = *(_QWORD *)(v24 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1BAC7A154(v36 > 1, v37 + 1, 1);
        v24 = v79;
      }
      v25 += 8;
      *(_QWORD *)(v24 + 16) = v37 + 1;
      *(_QWORD *)(v24 + 8 * v37 + 32) = v34 | 0x5000000000000000;
      v23 = v74 - 1;
    }
    while (v74 != 1);
    swift_bridgeObjectRelease();
    v7 = v76;
  }
  v79 = v7;
  sub_1BA7BDC30(v24);
  sub_1BA7BD850(v79);
  swift_bridgeObjectRelease();
  v38 = v69;
  v39 = *(_QWORD *)(v69 + 72);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v40 = swift_bridgeObjectRetain();
  v41 = sub_1BA6E4124(v40, v39);
  v76 = sub_1BA707E14(v41, 0);
  swift_release();
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(v38 + 88);
  v43 = *(_QWORD *)(v42 + 16);
  v44 = MEMORY[0x1E0DEE9D8];
  if (v43)
  {
    v78 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v43, 0);
    v44 = v78;
    v45 = *(unsigned __int8 *)(v70 + 80);
    v74 = v42;
    v46 = v42 + ((v45 + 32) & ~v45);
    v47 = *(_QWORD *)(v70 + 72);
    do
    {
      v48 = v75;
      sub_1BA4C2DD8(v46, v75, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v49 = swift_allocBox();
      sub_1BA5193C4(v48, v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v78 = v44;
      v52 = *(_QWORD *)(v44 + 16);
      v51 = *(_QWORD *)(v44 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_1BA76B828(v51 > 1, v52 + 1, 1);
        v44 = v78;
      }
      *(_QWORD *)(v44 + 16) = v52 + 1;
      *(_QWORD *)(v44 + 8 * v52 + 32) = v49 | 0xA000000000000000;
      v46 += v47;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
  }
  v53 = v72;
  swift_beginAccess();
  v54 = *(_QWORD *)(v53 + 88);
  v55 = *(_QWORD *)(v54 + 16);
  v56 = MEMORY[0x1E0DEE9D8];
  if (v55)
  {
    v77 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA76B828(0, v55, 0);
    v56 = v77;
    v57 = *(unsigned __int8 *)(v70 + 80);
    v74 = v54;
    v58 = v54 + ((v57 + 32) & ~v57);
    v59 = *(_QWORD *)(v70 + 72);
    do
    {
      v60 = v75;
      sub_1BA4C2DD8(v58, v75, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v61 = swift_allocBox();
      sub_1BA5193C4(v60, v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v77 = v56;
      v64 = *(_QWORD *)(v56 + 16);
      v63 = *(_QWORD *)(v56 + 24);
      if (v64 >= v63 >> 1)
      {
        sub_1BA76B828(v63 > 1, v64 + 1, 1);
        v56 = v77;
      }
      *(_QWORD *)(v56 + 16) = v64 + 1;
      *(_QWORD *)(v56 + 8 * v64 + 32) = v61 | 0x5000000000000000;
      v58 += v59;
      --v55;
    }
    while (v55);
    swift_bridgeObjectRelease();
  }
  v77 = v44;
  sub_1BA7082C0(v56);
  sub_1BA70B0DC(v77);
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v65 = swift_bridgeObjectRetain();
  v66 = sub_1BA70B5E0(v65);
  swift_release();
  swift_bridgeObjectRelease();
  return v66;
}

uint64_t sub_1BA7BD1FC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD v75[2];
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD v88[4];
  uint64_t v89;

  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[6];
  v12 = a1[7];
  v88[0] = v11;
  v88[1] = v12;
  sub_1BA682148(v11, v12);
  v13 = v89;
  v14 = sub_1BA6AE31C((uint64_t)v88, a3, a4);
  sub_1BA766C18(v11, v12);
  if (!v13)
  {
    v77 = v7;
    v78 = v8;
    v84 = v10;
    v79 = v14;
    v75[1] = 0;
    v15 = a1[11];
    v16 = *(_QWORD *)(v15 + 16);
    v17 = MEMORY[0x1E0DEE9D8];
    v18 = v80;
    v76 = a1;
    if (v16)
    {
      v88[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BAC7A154(0, v16, 0);
      v17 = v88[0];
      v81 = v15;
      v19 = (uint64_t *)(v15 + 48);
      do
      {
        v89 = v17;
        v20 = *(v19 - 1);
        v82 = *(v19 - 2);
        v83 = v16;
        v21 = *v19;
        v22 = v19[1];
        v24 = v19[2];
        v23 = v19[3];
        v25 = v19[4];
        v26 = v19[5];
        v27 = swift_allocObject();
        v28 = v82;
        *(_QWORD *)(v27 + 16) = v82;
        *(_QWORD *)(v27 + 24) = v20;
        *(_QWORD *)(v27 + 32) = v21;
        *(_QWORD *)(v27 + 40) = v22;
        *(_QWORD *)(v27 + 48) = v24;
        *(_QWORD *)(v27 + 56) = v23;
        *(_QWORD *)(v27 + 64) = v25;
        *(_QWORD *)(v27 + 72) = v26;
        v29 = v20;
        v17 = v89;
        sub_1BA76B724(v28, v29, v21, v22, v24, v23, v25);
        v88[0] = v17;
        v31 = *(_QWORD *)(v17 + 16);
        v30 = *(_QWORD *)(v17 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1BAC7A154(v30 > 1, v31 + 1, 1);
          v17 = v88[0];
        }
        v19 += 8;
        *(_QWORD *)(v17 + 16) = v31 + 1;
        *(_QWORD *)(v17 + 8 * v31 + 32) = v27 | 0x9000000000000004;
        v16 = v83 - 1;
      }
      while (v83 != 1);
      swift_bridgeObjectRelease();
      v18 = v80;
      a1 = v76;
    }
    swift_beginAccess();
    v32 = *(_QWORD *)(v18 + 72);
    v33 = *(_QWORD *)(v32 + 16);
    v34 = MEMORY[0x1E0DEE9D8];
    if (v33)
    {
      v89 = v17;
      v87 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BAC7A154(0, v33, 0);
      v34 = v87;
      v75[0] = v32;
      v35 = (uint64_t *)(v32 + 48);
      do
      {
        v82 = v34;
        v83 = v33;
        v36 = *(v35 - 2);
        v37 = *(v35 - 1);
        v38 = *v35;
        v39 = v35[1];
        v40 = v35[2];
        v81 = v35[3];
        v41 = v35[4];
        v42 = v35[5];
        v43 = swift_allocObject();
        *(_QWORD *)(v43 + 16) = v36;
        *(_QWORD *)(v43 + 24) = v37;
        *(_QWORD *)(v43 + 32) = v38;
        *(_QWORD *)(v43 + 40) = v39;
        v44 = v81;
        *(_QWORD *)(v43 + 48) = v40;
        *(_QWORD *)(v43 + 56) = v44;
        *(_QWORD *)(v43 + 64) = v41;
        *(_QWORD *)(v43 + 72) = v42;
        v45 = v40;
        v34 = v82;
        sub_1BA76B724(v36, v37, v38, v39, v45, v44, v41);
        v87 = v34;
        v47 = *(_QWORD *)(v34 + 16);
        v46 = *(_QWORD *)(v34 + 24);
        if (v47 >= v46 >> 1)
        {
          sub_1BAC7A154(v46 > 1, v47 + 1, 1);
          v34 = v87;
        }
        v35 += 8;
        *(_QWORD *)(v34 + 16) = v47 + 1;
        *(_QWORD *)(v34 + 8 * v47 + 32) = v43 | 0x4000000000000004;
        v33 = v83 - 1;
      }
      while (v83 != 1);
      swift_bridgeObjectRelease();
      v18 = v80;
      a1 = v76;
      v17 = v89;
    }
    v87 = v17;
    sub_1BA7BDC30(v34);
    sub_1BA7BD850(v87);
    swift_bridgeObjectRelease();
    v48 = a1[12];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v49 = swift_bridgeObjectRetain();
    v50 = sub_1BA6E4124(v49, v48);
    v83 = sub_1BA707E14(v50, 0);
    swift_release();
    swift_bridgeObjectRelease();
    v51 = a1[13];
    v52 = *(_QWORD *)(v51 + 16);
    v53 = MEMORY[0x1E0DEE9D8];
    if (v52)
    {
      v86 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BA76B828(0, v52, 0);
      v53 = v86;
      v54 = *(unsigned __int8 *)(v78 + 80);
      v89 = v51;
      v55 = v51 + ((v54 + 32) & ~v54);
      v56 = *(_QWORD *)(v78 + 72);
      do
      {
        v57 = (uint64_t)v84;
        sub_1BA4C2DD8(v55, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v58 = swift_allocBox();
        sub_1BA5193C4(v57, v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v86 = v53;
        v61 = *(_QWORD *)(v53 + 16);
        v60 = *(_QWORD *)(v53 + 24);
        if (v61 >= v60 >> 1)
        {
          sub_1BA76B828(v60 > 1, v61 + 1, 1);
          v53 = v86;
        }
        *(_QWORD *)(v53 + 16) = v61 + 1;
        *(_QWORD *)(v53 + 8 * v61 + 32) = v58 | 0x9000000000000004;
        v55 += v56;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease();
      v18 = v80;
    }
    v62 = v78;
    swift_beginAccess();
    v63 = *(_QWORD *)(v18 + 88);
    v64 = *(_QWORD *)(v63 + 16);
    v65 = MEMORY[0x1E0DEE9D8];
    if (v64)
    {
      v85 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BA76B828(0, v64, 0);
      v65 = v85;
      v66 = *(unsigned __int8 *)(v62 + 80);
      v82 = v63;
      v67 = v63 + ((v66 + 32) & ~v66);
      v89 = *(_QWORD *)(v62 + 72);
      do
      {
        v68 = (uint64_t)v84;
        sub_1BA4C2DD8(v67, (uint64_t)v84, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v69 = swift_allocBox();
        sub_1BA5193C4(v68, v70, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v85 = v65;
        v72 = *(_QWORD *)(v65 + 16);
        v71 = *(_QWORD *)(v65 + 24);
        if (v72 >= v71 >> 1)
        {
          sub_1BA76B828(v71 > 1, v72 + 1, 1);
          v65 = v85;
        }
        *(_QWORD *)(v65 + 16) = v72 + 1;
        *(_QWORD *)(v65 + 8 * v72 + 32) = v69 | 0x4000000000000004;
        v67 += v89;
        --v64;
      }
      while (v64);
      swift_bridgeObjectRelease();
    }
    v85 = v53;
    sub_1BA7082C0(v65);
    sub_1BA70B0DC(v85);
    swift_release();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v73 = swift_bridgeObjectRetain();
    v14 = sub_1BA70B5E0(v73);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1BA7BD850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[40];
  char v56[8];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD v64[4];

  v2 = v1;
  v4 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v4);
  if (*(_QWORD *)(a1 + 16))
  {
    v48 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1BA4C2DD8(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v48, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v6 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
    v9 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
    v56[0] = *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    v56[1] = v6;
    v57 = v8;
    v58 = v7;
    v59 = v10;
    v60 = v9;
    v61 = v11;
    v62 = v12;
    v63 = v13;
    swift_bridgeObjectRetain();
    sub_1BA70A884(v10, v9);
    v47 = sub_1BB5745AC(a1);
    v49 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    v14 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
    v64[0] = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
    v64[1] = v14;
    v15 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
    v16 = *(_OWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
    v44 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
    v64[2] = v15;
    v64[3] = v16;
    v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
    sub_1BA70AF2C(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v55, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
    v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
    v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
    v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
    v37 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
    v36 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
    *(_QWORD *)&v50 = v22;
    *((_QWORD *)&v50 + 1) = v21;
    v51 = v23;
    v52 = v37;
    v53 = v36;
    v54 = v24;
    v41 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
    v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    v46 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    v39 = v25;
    v40 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
    v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    v38 = v26;
    v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
    v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
    v42 = v27;
    v45 = swift_allocObject();
    swift_retain();
    sub_1BA70A8DC((uint64_t)v64);
    v29 = v44;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A834(v22, v21);
    swift_bridgeObjectRetain();
    v30 = v41;
    swift_bridgeObjectRetain();
    v31 = v39;
    swift_bridgeObjectRetain();
    v32 = v40;
    swift_retain();
    v33 = swift_bridgeObjectRetain();
    return sub_1BB29AEAC(v48, v56, v47, v49, v64, v29, v17, v18, (uint64_t)v55, v19, v20, &v50, v30, v46, v31, v32, v43, v33, v42,
             v28);
  }
  else
  {
    swift_retain();
  }
  return v2;
}

uint64_t sub_1BA7BDC30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1BB38E71C(isUniquelyReferenced_nonNull_native, v14, 1, v3, &qword_1ED3B9DA0, (uint64_t (*)(uint64_t))sub_1BA76B7C4);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  sub_1BA76B7C4(0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA7BDD9C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  ValueMetadata *v29;
  unint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  char v34;
  char v35;
  char v36;

  v31 = a2[6];
  v25 = v31;
  v9 = *(_QWORD *)(v31 + 16);
  result = v9 + 4;
  if (__OFADD__(v9, 4))
  {
    __break(1u);
  }
  else
  {
    sub_1BB86D6A8();
    swift_getKeyPath();
    v29 = (ValueMetadata *)MEMORY[0x1E0DEA968];
    v30 = MEMORY[0x1E0DB64C8];
    v27 = a3;
    v28 = a4;
    sub_1BA735094();
    sub_1BA50AD30(&qword_1ED3C4570, 255, (uint64_t (*)(uint64_t))sub_1BA735094, MEMORY[0x1E0DB5DD8]);
    sub_1BA50AD30((unint64_t *)&qword_1ED3B05F8, 255, (uint64_t (*)(uint64_t))sub_1BA62E870, MEMORY[0x1E0DB5A60]);
    swift_bridgeObjectRetain();
    sub_1BB86D4B0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
    swift_getKeyPath();
    v15 = *a2;
    v14 = a2[1];
    v29 = (ValueMetadata *)MEMORY[0x1E0DEA968];
    v30 = MEMORY[0x1E0DB64C8];
    v27 = v15;
    v28 = v14;
    swift_bridgeObjectRetain();
    sub_1BB86D4B0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
    swift_getKeyPath();
    swift_beginAccess();
    v17 = *(_QWORD *)(a5 + 16);
    v16 = *(_QWORD *)(a5 + 24);
    v29 = (ValueMetadata *)MEMORY[0x1E0DEA968];
    v30 = MEMORY[0x1E0DB64C8];
    v27 = v17;
    v28 = v16;
    swift_bridgeObjectRetain();
    sub_1BB86D4B0();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
    sub_1BA5193C4((uint64_t)(a2 + 13), (uint64_t)&v34, (uint64_t (*)(_QWORD))sub_1BA7BE1A4);
    result = sub_1BA5193C4((uint64_t)&v34, (uint64_t)&v35, (uint64_t (*)(_QWORD))sub_1BA7BE1A4);
    if (v35 != 7)
    {
      sub_1BA7BE6B0(&v35, &v36);
      swift_getKeyPath();
      v29 = &type metadata for FormatAccessibilityRole;
      v30 = sub_1BA5ED4F0();
      sub_1BA7BE6B0(&v36, &v27);
      sub_1BA50AD30((unint64_t *)&qword_1ED3BBDD0, 255, (uint64_t (*)(uint64_t))sub_1BA841F80, MEMORY[0x1E0DB5A60]);
      sub_1BB86D4B0();
      swift_release();
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
    }
    if (v9)
    {
      v18 = (__int128 *)(v25 + 32);
      sub_1BA781758((uint64_t)&v31);
      while (1)
      {
        v19 = *v18;
        v20 = v18[1];
        v33 = *((_QWORD *)v18 + 4);
        v32[0] = v19;
        v32[1] = v20;
        v21 = *(_QWORD *)(a5 + 16);
        v22 = *(_QWORD *)(a5 + 24);
        sub_1BA7086BC((uint64_t)v32);
        swift_bridgeObjectRetain();
        sub_1BA709F80(v21, v22);
        swift_bridgeObjectRelease();
        v23 = sub_1BA70A468(0, 0);
        swift_release();
        sub_1BA733DB8(a1, v23, a7);
        if (v7)
          break;
        swift_release();
        sub_1BA708680((uint64_t)v32);
        v18 = (__int128 *)((char *)v18 + 40);
        if (!--v9)
          return sub_1BA4F6CCC((uint64_t)&v31);
      }
      swift_release();
      sub_1BA4F6CCC((uint64_t)&v31);
      return sub_1BA708680((uint64_t)v32);
    }
  }
  return result;
}

uint64_t sub_1BA7BE148(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v7;

  sub_1BA4CDF6C(0, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BA7BE1A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B7108)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B7108);
  }
}

uint64_t sub_1BA7BE1F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  ValueMetadata *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  ValueMetadata *v45;
  unint64_t v46;
  uint64_t v47;
  __n128 v48;
  _OWORD v49[2];
  uint64_t v50;
  char v51;
  char v52;
  char v53;

  sub_1BA7BE748((__n128 *)(a3 + 48), &v48);
  v16 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  sub_1BA7BE748(&v48, &v41);
  sub_1BA7C055C((uint64_t)&v48);
  sub_1BA7BE784((uint64_t *)&v41, v16, (uint64_t)&v43);
  result = sub_1BA7C0530((uint64_t)&v48);
  if (!v9)
  {
    v37 = a8;
    __swift_project_boxed_opaque_existential_1(&v43, (uint64_t)v45);
    v18 = sub_1BB86DEE8();
    v38 = v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
    v21 = sub_1BA7C03D4(a4, a5, a2, (__int128 *)a3);
    v22 = *(_QWORD *)(a3 + 72);
    v47 = v22;
    v23 = *(_QWORD *)(v22 + 16);
    result = v23 + 5;
    if (__OFADD__(v23, 5))
    {
      __break(1u);
    }
    else
    {
      v34 = v22;
      v36 = v20;
      v35 = v21;
      sub_1BB86D6A8();
      v41.n128_u64[0] = a1;
      swift_getKeyPath();
      v24 = (ValueMetadata *)MEMORY[0x1E0DEA968];
      v25 = MEMORY[0x1E0DB64C8];
      v45 = (ValueMetadata *)MEMORY[0x1E0DEA968];
      v46 = MEMORY[0x1E0DB64C8];
      v43 = a6;
      v44 = a7;
      sub_1BA735094();
      sub_1BA50AD30(&qword_1ED3C4570, 255, (uint64_t (*)(uint64_t))sub_1BA735094, MEMORY[0x1E0DB5DD8]);
      sub_1BA50AD30((unint64_t *)&qword_1ED3B05F8, 255, (uint64_t (*)(uint64_t))sub_1BA62E870, MEMORY[0x1E0DB5A60]);
      swift_bridgeObjectRetain();
      sub_1BB86D4B0();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
      v41.n128_u64[0] = a1;
      swift_getKeyPath();
      v45 = v24;
      v46 = v25;
      v43 = v18;
      v44 = v38;
      sub_1BA7C0588();
      swift_bridgeObjectRetain();
      sub_1BB86D4B0();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
      v41.n128_u64[0] = a1;
      swift_getKeyPath();
      v45 = v24;
      v46 = v25;
      v43 = v35;
      v44 = v36;
      sub_1BB86D4B0();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
      v42 = a1;
      swift_getKeyPath();
      swift_beginAccess();
      v27 = *(_QWORD *)(v37 + 16);
      v26 = *(_QWORD *)(v37 + 24);
      v45 = (ValueMetadata *)MEMORY[0x1E0DEA968];
      v46 = MEMORY[0x1E0DB64C8];
      v43 = v27;
      v44 = v26;
      swift_bridgeObjectRetain();
      sub_1BB86D4B0();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
      sub_1BA7BE6EC(a3 + 120, (uint64_t)&v51);
      sub_1BA7BE6EC((uint64_t)&v51, (uint64_t)&v52);
      if (v52 != 7)
      {
        sub_1BA7BE6B0(&v52, &v53);
        v42 = a1;
        swift_getKeyPath();
        v45 = &type metadata for FormatAccessibilityRole;
        v46 = sub_1BA5ED4F0();
        sub_1BA7BE6B0(&v53, &v43);
        sub_1BA7C05F0();
        sub_1BB86D4B0();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
      }
      v28 = *(_QWORD *)(v37 + 16);
      v29 = *(_QWORD *)(v37 + 24);
      swift_bridgeObjectRetain();
      sub_1BA709F80(v28, v29);
      swift_bridgeObjectRelease();
      sub_1BA70A468(0, 0);
      swift_release();
      v30 = sub_1BA7BFFC8(v18, v38);
      swift_release();
      swift_bridgeObjectRelease();
      if (v23)
      {
        v31 = (__int128 *)(v34 + 32);
        sub_1BA781758((uint64_t)&v47);
        do
        {
          v32 = *v31;
          v33 = v31[1];
          v50 = *((_QWORD *)v31 + 4);
          v49[0] = v32;
          v49[1] = v33;
          sub_1BA7086BC((uint64_t)v49);
          sub_1BA733DB8(a1, v30, a9);
          sub_1BA708680((uint64_t)v49);
          v31 = (__int128 *)((char *)v31 + 40);
          --v23;
        }
        while (v23);
        sub_1BA4F6CCC((uint64_t)&v47);
      }
      return swift_release();
    }
  }
  return result;
}

_BYTE *sub_1BA7BE6B0(_BYTE *a1, _BYTE *a2)
{
  __swift_memcpy1_1(a2, a1);
  return a2;
}

uint64_t sub_1BA7BE6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B7108, (uint64_t)&type metadata for FormatAccessibilityRole, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 *sub_1BA7BE748(__n128 *a1, __n128 *a2)
{
  __swift_memcpy16_8(a2, a1);
  return a2;
}

uint64_t sub_1BA7BE784@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  void (*v86)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v87;
  uint64_t v88;
  char v90;
  uint64_t v91;
  char v92;
  uint64_t (*v93)(_QWORD);
  uint64_t v94;
  uint64_t v95;
  int v96;
  void (*v97)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v98;
  uint64_t v99;
  int v100;
  void (*v101)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v102;
  uint64_t v103;
  int v104;
  void (*v105)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v106;
  uint64_t v107;
  int v108;
  void (*v109)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v110;
  uint64_t v111;
  int v112;
  void (*v113)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v114;
  uint64_t v115;
  int v116;
  void (*v117)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v118;
  uint64_t v119;
  int v120;
  void (*v121)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v122;
  unint64_t *v124;
  uint64_t *v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t *v128;
  unint64_t *v129;
  unint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t *v134;
  unint64_t *v135;
  unint64_t *v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t *v145;
  unint64_t *v146;
  unint64_t *v147;
  unint64_t *v148;
  unint64_t *v149;
  unint64_t *v150;
  unint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  _OWORD v190[7];
  _OWORD v191[2];
  uint64_t v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  _OWORD v200[3];
  __int128 v201[3];
  uint64_t v202;

  v4 = v3;
  sub_1BA4A3FB4(0, qword_1ED3C2288, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
  MEMORY[0x1E0C80A78](v8);
  v177 = (char *)&v144 - v9;
  v10 = type metadata accessor for FeedCustomItem();
  v176 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v169 = (uint64_t)&v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v144 - v13;
  v178 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v178);
  v189 = (char *)&v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for WebEmbedDataVisualization();
  v167 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v151 = (unint64_t *)((char *)&v144 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v150 = (unint64_t *)((char *)&v144 - v19);
  MEMORY[0x1E0C80A78](v20);
  v149 = (unint64_t *)((char *)&v144 - v21);
  MEMORY[0x1E0C80A78](v22);
  v148 = (unint64_t *)((char *)&v144 - v23);
  MEMORY[0x1E0C80A78](v24);
  v145 = (unint64_t *)((char *)&v144 - v25);
  MEMORY[0x1E0C80A78](v26);
  v147 = (unint64_t *)((char *)&v144 - v27);
  MEMORY[0x1E0C80A78](v28);
  v146 = (unint64_t *)((char *)&v144 - v29);
  sub_1BA4A3FB4(0, &qword_1ED3CB5E0, v30);
  MEMORY[0x1E0C80A78](v31);
  v158 = (uint64_t)&v144 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v157 = (uint64_t)&v144 - v34;
  MEMORY[0x1E0C80A78](v35);
  v156 = (uint64_t)&v144 - v36;
  MEMORY[0x1E0C80A78](v37);
  v155 = (uint64_t)&v144 - v38;
  MEMORY[0x1E0C80A78](v39);
  v152 = (uint64_t)&v144 - v40;
  MEMORY[0x1E0C80A78](v41);
  v154 = (uint64_t)&v144 - v42;
  MEMORY[0x1E0C80A78](v43);
  v153 = (uint64_t)&v144 - v44;
  sub_1BA4A3FB4(0, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  MEMORY[0x1E0C80A78](v45);
  v165 = (char *)&v144 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v47);
  v164 = (char *)&v144 - v48;
  MEMORY[0x1E0C80A78](v49);
  v163 = (char *)&v144 - v50;
  MEMORY[0x1E0C80A78](v51);
  v162 = (char *)&v144 - v52;
  MEMORY[0x1E0C80A78](v53);
  v159 = (char *)&v144 - v54;
  MEMORY[0x1E0C80A78](v55);
  v161 = (char *)&v144 - v56;
  MEMORY[0x1E0C80A78](v57);
  v160 = (char *)&v144 - v58;
  v59 = type metadata accessor for FeedWebEmbed();
  v168 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v188 = (uint64_t)&v144 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v61);
  v187 = (uint64_t)&v144 - v62;
  MEMORY[0x1E0C80A78](v63);
  v186 = (uint64_t)&v144 - v64;
  MEMORY[0x1E0C80A78](v65);
  v185 = (uint64_t)&v144 - v66;
  MEMORY[0x1E0C80A78](v67);
  v179 = (uint64_t)&v144 - v68;
  MEMORY[0x1E0C80A78](v69);
  v184 = (uint64_t)&v144 - v70;
  MEMORY[0x1E0C80A78](v71);
  v183 = (uint64_t)&v144 - v72;
  MEMORY[0x1E0C80A78](v73);
  v182 = (char *)&v144 - v74;
  v75 = a2;
  v202 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v202);
  v181 = (char *)&v144 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v77);
  v180 = (char *)&v144 - v78;
  v79 = *a1;
  v80 = a1[1];
  v170 = v79;
  v81 = *(_QWORD *)(a2 + 16);
  if (!v81)
    goto LABEL_95;
  v166 = v16;
  v171 = a3;
  v172 = v4;
  swift_bridgeObjectRetain();
  v174 = v14;
  v175 = v75;
  v82 = v75 + 40 * v81 - 8;
  v173 = v59;
  while (2)
  {
    sub_1BA4C010C(v82, (uint64_t)v201);
    switch(v80)
    {
      case 0uLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        v93 = type metadata accessor for FeedHeadline;
        v94 = (uint64_t)v180;
        goto LABEL_76;
      case 1uLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v192);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        v190[6] = v199;
        v191[0] = v200[0];
        *(_OWORD *)((char *)v191 + 9) = *(_OWORD *)((char *)v200 + 9);
        v190[2] = v195;
        v190[3] = v196;
        v190[4] = v197;
        v190[5] = v198;
        v190[0] = v193;
        v190[1] = v194;
        sub_1BA8D1FE4((uint64_t)v190);
        goto LABEL_77;
      case 2uLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        v93 = (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed;
        v94 = (uint64_t)v182;
        goto LABEL_76;
      case 3uLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        v93 = type metadata accessor for FeedHeadline;
        v94 = (uint64_t)v181;
        goto LABEL_76;
      case 4uLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)v190);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        sub_1BA6A94C4((uint64_t)&v193);
        goto LABEL_77;
      case 5uLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        sub_1BA4A2E80(v183, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
        swift_bridgeObjectRelease();
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        v111 = (uint64_t)v160;
        v112 = swift_dynamicCast();
        v113 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v168 + 56);
        if (v112)
        {
          v113(v111, 0, 1, v59);
          v114 = v153;
          sub_1BB044324(v111 + *(int *)(v59 + 52), v153);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v114, 1, v166) == 1)
          {
            sub_1BA502AD0(v114, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_93:
            sub_1BA4A2E80(v111, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
            goto LABEL_94;
          }
          v130 = v146;
          sub_1BB05D18C(v114, (uint64_t)v146);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1BA4A2E80((uint64_t)v130, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            sub_1BA4A2E80(v114, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            goto LABEL_93;
          }
          v140 = *v130;
          sub_1BA4A2E80(v114, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          sub_1BA4A2E80(v111, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          if (!(v140 >> 61))
          {
            swift_release();
            return sub_1BA4CECCC(v201, v171);
          }
          swift_release();
        }
        else
        {
          v113(v111, 1, 1, v59);
          sub_1BA502AD0(v111, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        }
LABEL_94:
        type metadata accessor for FormatLayoutError();
        sub_1BA689E84();
        swift_allocError();
        v126 = 0x65726F6373;
        v127 = 0xE500000000000000;
        goto LABEL_109;
      case 6uLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        sub_1BA4A2E80(v184, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
        swift_bridgeObjectRelease();
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        v115 = (uint64_t)v161;
        v116 = swift_dynamicCast();
        v117 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v168 + 56);
        if (v116)
        {
          v117(v115, 0, 1, v59);
          v118 = v154;
          sub_1BB044324(v115 + *(int *)(v59 + 52), v154);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v118, 1, v166) == 1)
          {
            sub_1BA502AD0(v118, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_102:
            sub_1BA4A2E80(v115, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
            goto LABEL_103;
          }
          v135 = v147;
          sub_1BB05D18C(v118, (uint64_t)v147);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1BA4A2E80((uint64_t)v135, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            sub_1BA4A2E80(v118, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            goto LABEL_102;
          }
          v142 = *v135;
          sub_1BA4A2E80(v118, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          sub_1BA4A2E80(v115, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          swift_release();
          if (v142 >> 61 == 1)
            return sub_1BA4CECCC(v201, v171);
        }
        else
        {
          v117(v115, 1, 1, v59);
          sub_1BA502AD0(v115, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        }
LABEL_103:
        type metadata accessor for FormatLayoutError();
        sub_1BA689E84();
        swift_allocError();
        v126 = 0x676E69646E617473;
        goto LABEL_108;
      case 7uLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        sub_1BA4A2E80(v179, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
        swift_bridgeObjectRelease();
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        v107 = (uint64_t)v159;
        v108 = swift_dynamicCast();
        v109 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v168 + 56);
        if (v108)
        {
          v109(v107, 0, 1, v59);
          v110 = v152;
          sub_1BB044324(v107 + *(int *)(v59 + 52), v152);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v110, 1, v166) == 1)
          {
            sub_1BA502AD0(v110, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_98:
            sub_1BA4A2E80(v107, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
            goto LABEL_99;
          }
          v134 = v145;
          sub_1BB05D18C(v110, (uint64_t)v145);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1BA4A2E80((uint64_t)v134, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            sub_1BA4A2E80(v110, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            goto LABEL_98;
          }
          v141 = *v134;
          sub_1BA4A2E80(v110, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          sub_1BA4A2E80(v107, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          swift_release();
          if (v141 >> 61 == 2)
            return sub_1BA4CECCC(v201, v171);
        }
        else
        {
          v109(v107, 1, 1, v59);
          sub_1BA502AD0(v107, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        }
LABEL_99:
        type metadata accessor for FormatLayoutError();
        sub_1BA689E84();
        swift_allocError();
        v126 = 0x74656B63617262;
        v127 = 0xE700000000000000;
        goto LABEL_109;
      case 8uLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        sub_1BA4A2E80(v185, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
        swift_bridgeObjectRelease();
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        v119 = (uint64_t)v162;
        v120 = swift_dynamicCast();
        v121 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v168 + 56);
        if (!v120)
        {
          v121(v119, 1, 1, v59);
          sub_1BA502AD0(v119, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
          goto LABEL_107;
        }
        v121(v119, 0, 1, v59);
        v122 = v155;
        sub_1BB044324(v119 + *(int *)(v59 + 52), v155);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v122, 1, v166) == 1)
        {
          sub_1BA502AD0(v122, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        }
        else
        {
          v136 = v148;
          sub_1BB05D18C(v122, (uint64_t)v148);
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            v143 = *v136;
            sub_1BA4A2E80(v122, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
            swift_release();
            if (v143 >> 61 == 3)
              return sub_1BA4CECCC(v201, v171);
LABEL_107:
            type metadata accessor for FormatLayoutError();
            sub_1BA689E84();
            swift_allocError();
            v126 = 0x65726F6353786F62;
LABEL_108:
            v127 = 0xE800000000000000;
LABEL_109:
            *v125 = v126;
            v125[1] = v127;
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            return __swift_destroy_boxed_opaque_existential_1((uint64_t)v201);
          }
          sub_1BA4A2E80((uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          sub_1BA4A2E80(v122, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
        }
        sub_1BA4A2E80(v119, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
        goto LABEL_107;
      case 9uLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        sub_1BA4A2E80(v186, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
        swift_bridgeObjectRelease();
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        v95 = (uint64_t)v163;
        v96 = swift_dynamicCast();
        v97 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v168 + 56);
        if (v96)
        {
          v97(v95, 0, 1, v59);
          v98 = v156;
          sub_1BB044324(v95 + *(int *)(v59 + 52), v156);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v98, 1, v166) == 1)
          {
            sub_1BA502AD0(v98, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_81:
            sub_1BA4A2E80(v95, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
            goto LABEL_82;
          }
          v124 = v149;
          sub_1BB05D18C(v98, (uint64_t)v149);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1BA4A2E80((uint64_t)v124, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            sub_1BA4A2E80(v98, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            goto LABEL_81;
          }
          v137 = *v124;
          sub_1BA4A2E80(v98, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          sub_1BA4A2E80(v95, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          swift_release();
          if (v137 >> 61 == 4)
            return sub_1BA4CECCC(v201, v171);
        }
        else
        {
          v97(v95, 1, 1, v59);
          sub_1BA502AD0(v95, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        }
LABEL_82:
        type metadata accessor for FormatLayoutError();
        sub_1BA689E84();
        swift_allocError();
        v126 = 0x726F6353656E696CLL;
        v127 = 0xE900000000000065;
        goto LABEL_109;
      case 0xAuLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        sub_1BA4A2E80(v187, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
        swift_bridgeObjectRelease();
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        v103 = (uint64_t)v164;
        v104 = swift_dynamicCast();
        v105 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v168 + 56);
        if (v104)
        {
          v105(v103, 0, 1, v59);
          v106 = v157;
          sub_1BB044324(v103 + *(int *)(v59 + 52), v157);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v106, 1, v166) == 1)
          {
            sub_1BA502AD0(v106, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_89:
            sub_1BA4A2E80(v103, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
            goto LABEL_90;
          }
          v129 = v150;
          sub_1BB05D18C(v106, (uint64_t)v150);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1BA4A2E80((uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            sub_1BA4A2E80(v106, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            goto LABEL_89;
          }
          v139 = *v129;
          sub_1BA4A2E80(v106, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          sub_1BA4A2E80(v103, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          swift_release();
          if (v139 >> 61 == 5)
            return sub_1BA4CECCC(v201, v171);
        }
        else
        {
          v105(v103, 1, 1, v59);
          sub_1BA502AD0(v103, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        }
LABEL_90:
        type metadata accessor for FormatLayoutError();
        sub_1BA689E84();
        swift_allocError();
        v126 = 0x65527972756A6E69;
        v127 = 0xEC00000074726F70;
        goto LABEL_109;
      case 0xBuLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        sub_1BA4A2E80(v188, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
        swift_bridgeObjectRelease();
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        v99 = (uint64_t)v165;
        v100 = swift_dynamicCast();
        v101 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v168 + 56);
        if (v100)
        {
          v101(v99, 0, 1, v59);
          v102 = v158;
          sub_1BB044324(v99 + *(int *)(v59 + 52), v158);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v102, 1, v166) == 1)
          {
            sub_1BA502AD0(v102, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
LABEL_85:
            sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
            goto LABEL_86;
          }
          v128 = v151;
          sub_1BB05D18C(v102, (uint64_t)v151);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_1BA4A2E80((uint64_t)v128, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            sub_1BA4A2E80(v102, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            goto LABEL_85;
          }
          v138 = *v128;
          sub_1BA4A2E80(v102, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          sub_1BA4A2E80(v99, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
          swift_release();
          if (v138 >> 61 == 6)
            return sub_1BA4CECCC(v201, v171);
        }
        else
        {
          v101(v99, 1, 1, v59);
          sub_1BA502AD0(v99, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        }
LABEL_86:
        type metadata accessor for FormatLayoutError();
        sub_1BA689E84();
        swift_allocError();
        v126 = 0x6579616C5079656BLL;
        v127 = 0xE900000000000072;
        goto LABEL_109;
      case 0xCuLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)v190);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        sub_1BA93EBE8((uint64_t)&v193);
        goto LABEL_77;
      case 0xDuLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)v190);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        sub_1BA6E0CBC(*((uint64_t *)&v194 + 1), v195);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_77;
      case 0xEuLL:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        v93 = (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic;
        v94 = (uint64_t)v189;
        goto LABEL_76;
      default:
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        sub_1BA7C2A4C();
        if ((swift_dynamicCast() & 1) == 0)
        {
LABEL_41:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v201);
LABEL_42:
          v82 -= 40;
          if (!--v81)
          {
            swift_bridgeObjectRelease();
LABEL_95:
            sub_1BA758A4C();
            swift_allocError();
            v132 = v131;
            *(_QWORD *)&v193 = 0;
            *((_QWORD *)&v193 + 1) = 0xE000000000000000;
            sub_1BAA51D40(v170, v80);
            v133 = *((_QWORD *)&v193 + 1);
            *(_QWORD *)v132 = v193;
            *(_QWORD *)(v132 + 8) = v133;
            *(_BYTE *)(v132 + 56) = 6;
            return swift_willThrow();
          }
          continue;
        }
        sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
        sub_1BA4C010C((uint64_t)v201, (uint64_t)&v193);
        v83 = v10;
        v84 = (uint64_t)v177;
        v85 = swift_dynamicCast();
        v86 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v176 + 56);
        if ((v85 & 1) == 0)
        {
          v86(v84, 1, 1, v83);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v201);
          sub_1BA502AD0(v84, qword_1ED3C2288, (void (*)(uint64_t))type metadata accessor for FeedCustomItem);
          v10 = v83;
LABEL_45:
          v59 = v173;
          v14 = v174;
          goto LABEL_42;
        }
        v86(v84, 0, 1, v83);
        v87 = v169;
        sub_1BB83D6D8(v84, v169);
        v88 = v87 + *(int *)(v83 + 20);
        if (*(_QWORD *)(v88 + 16) != v170 || v80 != *(_QWORD *)(v88 + 24))
        {
          v10 = v83;
          v90 = sub_1BB874398();
          v91 = v87;
          v92 = v90;
          sub_1BA4A2E80(v91, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
          if ((v92 & 1) != 0)
            goto LABEL_77;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v201);
          goto LABEL_45;
        }
        v93 = (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem;
        v94 = v87;
LABEL_76:
        sub_1BA4A2E80(v94, v93);
LABEL_77:
        swift_bridgeObjectRelease();
        return sub_1BA4CECCC(v201, v171);
    }
  }
}

uint64_t sub_1BA7BFFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[40];
  char v58[8];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD v66[4];

  v48 = a2;
  v50 = a1;
  v3 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v3);
  v49 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v49, v5);
  v6 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  v7 = *(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  v39 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
  v44 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  v42 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  v41 = v10;
  v58[0] = v6;
  v58[1] = v7;
  v59 = v8;
  v60 = v39;
  v61 = v9;
  v62 = v44;
  v63 = v43;
  v64 = v42;
  v65 = v10;
  v51 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  v45 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  v11 = *(_OWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  v12 = *(_OWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  v13 = *(_OWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  v66[2] = *(_OWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  v66[3] = v13;
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v66[0] = v11;
  v66[1] = v12;
  v40 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  sub_1BA70AF2C(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v57, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  v34 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  v33 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(_QWORD *)&v52 = v18;
  *((_QWORD *)&v52 + 1) = v34;
  v53 = v33;
  v54 = v32;
  v55 = v19;
  v56 = v20;
  v37 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  v47 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  v35 = v21;
  v36 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  v22 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  v38 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  v31 = v22;
  v46 = swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1BA70A884(v9, v44);
  swift_retain();
  v23 = v45;
  swift_retain();
  sub_1BA70A8DC((uint64_t)v66);
  swift_bridgeObjectRetain();
  v24 = v40;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA70A834(v18, v34);
  v25 = v31;
  swift_bridgeObjectRetain();
  v26 = v48;
  swift_bridgeObjectRetain();
  v27 = v37;
  swift_bridgeObjectRetain();
  v28 = v35;
  swift_bridgeObjectRetain();
  v29 = swift_retain();
  return sub_1BB29AEAC(v49, v58, v51, v23, v66, v14, v24, v15, (uint64_t)v57, v16, v17, &v52, v27, v47, v28, v29, v50, v26, v38,
           v25);
}

uint64_t sub_1BA7C03D4(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v14;
  __int128 v15;

  if (a2)
  {
    v7 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    v8 = MEMORY[0x1E0DEA968];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
    *(_QWORD *)(v9 + 32) = a1;
    *(_QWORD *)(v9 + 40) = a2;
    v15 = *a4;
    *(_OWORD *)(v9 + 48) = v15;
    sub_1BA739BF4((uint64_t)&v15);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6A0BA4();
    swift_bridgeObjectRetain();
    v10 = sub_1BB872904();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v7 + 40))
    {
      v14 = *(_QWORD *)(v7 + 32);
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v11);
      sub_1BB872AFC(v12);
      swift_bridgeObjectRelease();
      return v14;
    }
  }
  else
  {
    v10 = *(_QWORD *)a4;
    swift_bridgeObjectRetain();
  }
  return v10;
}

uint64_t sub_1BA7C0530(uint64_t a1)
{
  sub_1BA766C18(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

uint64_t sub_1BA7C055C(uint64_t a1)
{
  sub_1BA682148(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return a1;
}

unint64_t sub_1BA7C0588()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B0608;
  if (!qword_1ED3B0608)
  {
    sub_1BA841F08(255, &qword_1ED3B0610, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (void (*)(void))sub_1BA81E324);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5A60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B0608);
  }
  return result;
}

unint64_t sub_1BA7C05F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3BBDD0;
  if (!qword_1ED3BBDD0)
  {
    sub_1BA841F08(255, (unint64_t *)&qword_1ED3BBDD8, (unint64_t *)&qword_1ED3B7108, (uint64_t)&type metadata for FormatAccessibilityRole, (void (*)(void))sub_1BA8296B0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5A60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3BBDD0);
  }
  return result;
}

uint64_t sub_1BA7C0658@<X0>(double **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BA7C0674(a1, v2[2], v2[3], v2[5], a2);
}

uint64_t sub_1BA7C0674@<X0>(double **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  double *v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(double *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  unsigned int *v41;
  uint64_t v42;
  unsigned int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  double *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  double *v66;
  uint64_t v67;

  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v59 - v15;
  sub_1BA4A3FB4(0, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (double *)((char *)&v59 - v19);
  v21 = *a1;
  v64 = v22;
  v65 = a5;
  v66 = v21;
  if (a2)
  {
    v23 = *(_BYTE *)(a2 + 74);
    if (v23 == 255)
    {
      v24 = sub_1BB870FA8();
      (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v20, 1, 1, v24);
    }
    else
    {
      v60 = v16;
      v61 = v13;
      v63 = a4;
      v27 = *(unsigned __int16 *)(a2 + 72) | (v23 << 16);
      v28 = a3;
      v29 = *(_QWORD *)(a2 + 64);
      v30 = v66[2];
      v31 = v66[3];
      v32 = v66[4];
      v33 = v66[5];
      v34 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
      v35 = v28 + *(int *)(type metadata accessor for GroupLayoutContext() + 20) + v34;
      sub_1BA77A170(v29, v27, SBYTE2(v27), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
      sub_1BA8218B0(v28, v35, v29, v27, v20, v30, v31, v32, v33);
      result = sub_1BA771864(v29, v27);
      if (v5)
        return result;
      v37 = sub_1BB870FA8();
      (*(void (**)(double *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v20, 0, 1, v37);
      a4 = v63;
      v16 = v60;
      v13 = v61;
    }
    v38 = *(unsigned __int8 *)(a2 + 75);
    v62 = v20;
    if (v38 == 2)
    {
      v40 = v13;
      v41 = (unsigned int *)MEMORY[0x1E0DBBEB0];
    }
    else
    {
      if (v38 == 3)
        goto LABEL_9;
      v40 = v13;
      v42 = sub_1BB8712D8();
      if ((v38 & 1) != 0)
        v43 = (unsigned int *)MEMORY[0x1E0DBC150];
      else
        v43 = (unsigned int *)MEMORY[0x1E0DBC148];
      (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v16, *v43, v42);
      v41 = (unsigned int *)MEMORY[0x1E0DBBEA0];
    }
    v44 = *v41;
    v45 = sub_1BB871200();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 104))(v16, v44, v45);
    sub_1BB871200();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v16, 0, 1, v45);
    v13 = v40;
    goto LABEL_16;
  }
  v25 = sub_1BB870FA8();
  v26 = *(void (**)(double *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v62 = v20;
  v26(v20, 1, 1, v25);
LABEL_9:
  v39 = sub_1BB871200();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v16, 1, 1, v39);
LABEL_16:
  v46 = (uint64_t)v16;
  v47 = *(_QWORD *)(a4 + 56);
  v63 = v5;
  v48 = (uint64_t)v13;
  v49 = a2;
  if (v47)
  {
    v50 = *(_QWORD *)(v47 + 16);
    swift_retain();
  }
  else
  {
    v50 = 0;
  }
  v51 = v66;
  swift_retain();
  sub_1BB86DD80();
  v52 = v67;
  v53 = a4;
  v54 = *(_QWORD *)(a4 + 104);
  v55 = *(_BYTE *)(v53 + 112);
  v56 = v64;
  sub_1BA5D5518((uint64_t)v62, v64, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  sub_1BA5D5518(v46, v48, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  type metadata accessor for FormatSupplementaryNodeLayoutAttributes();
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v51;
  *(_QWORD *)(v57 + 24) = v49;
  *(_QWORD *)(v57 + 32) = v50;
  *(_QWORD *)(v57 + 40) = v52;
  *(_QWORD *)(v57 + 48) = v54;
  *(_BYTE *)(v57 + 56) = v55;
  sub_1BA5D5518(v56, v57 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, &qword_1ED3BBF60, (void (*)(uint64_t))MEMORY[0x1E0DBB640]);
  sub_1BA5D5518(v48, v57 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, (unint64_t *)&unk_1ED3C2260, (void (*)(uint64_t))MEMORY[0x1E0DBBEB8]);
  v58 = swift_allocObject();
  *(_QWORD *)(v58 + 16) = v57;
  *v65 = v58 | 0x3000000000000000;
  return swift_retain();
}

uint64_t type metadata accessor for FormatSupplementaryNodeLayoutAttributes()
{
  uint64_t result;

  result = qword_1ED3CF1B0;
  if (!qword_1ED3CF1B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for FormatIssueCoverNode()
{
  return objc_opt_self();
}

unint64_t sub_1BA7C0B78()
{
  unint64_t result;

  result = qword_1ED3A5920;
  if (!qword_1ED3A5920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D01B0, &_s10CodingKeysON_221);
    atomic_store(result, (unint64_t *)&qword_1ED3A5920);
  }
  return result;
}

uint64_t __swift_destroy_strong()
{
  return swift_release();
}

uint64_t sub_1BA7C0BC4(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16[2];
  unsigned __int8 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  result = MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = a1 + 32;
    v7 = a2 + 4;
    v8 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BA4C010C(v6, (uint64_t)&v18);
      v9 = v19;
      v10 = v20;
      __swift_project_boxed_opaque_existential_1(&v18, v19);
      sub_1BA7C0D48(v9, v10);
      if (a2[2]
        && (v11 = LOBYTE(v16[0]),
            v12 = a2[7],
            v13 = a2[8],
            __swift_project_boxed_opaque_existential_1(v7, v12),
            sub_1BA7C0D48(v12, v13),
            v11 == v17))
      {
        sub_1BA4CECCC(&v18, (uint64_t)v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BA7C0DCC(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        v14 = *(_QWORD *)(v21 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_1BA7C0DCC(v14 > 1, v15 + 1, 1);
          v8 = v21;
        }
        *(_QWORD *)(v8 + 16) = v15 + 1;
        sub_1BA4CECCC(v16, v8 + 40 * v15 + 32);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
      }
      v6 += 40;
      --v4;
    }
    while (v4);
    return v21;
  }
  return result;
}

uint64_t sub_1BA7C0D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(_QWORD *__return_ptr))(a2 + 24))(v5);
  v2 = v6;
  v3 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

void destroy for A12_V24(uint64_t a1)
{
  sub_1BA7C2538(*(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1BA7C0DC0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1BA7C0DCC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BA6EFF54(a1, a2, a3, (_QWORD *)*v3, (void (*)(_QWORD))sub_1BA6F4230, (unint64_t *)&unk_1ED3B8000);
  *v3 = result;
  return result;
}

uint64_t sub_1BA7C0E00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C010C(v1 + 8, a1);
}

uint64_t sub_1BA7C0E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t *v34;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55[8];
  void *v56;
  unsigned __int8 v57;
  ValueMetadata *v58;
  unint64_t v59;
  __int128 v60;
  unsigned __int8 v61;
  ValueMetadata *v62;
  unint64_t v63;
  char *v64;

  v47 = a1;
  v44 = a3;
  v38 = sub_1BB86C8E0();
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for GroupLayoutBindingContext();
  v41 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v46 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for GroupLayoutContext();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v45 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v62 = &_s2AdVN;
  v18 = sub_1BA6A76CC();
  v63 = v18;
  LOBYTE(v60) = v15;
  *((_QWORD *)&v60 + 1) = v16;
  v61 = v17;
  v36 = a2;
  v19 = v47;
  v64 = v14;
  sub_1BA4C2DD8(a2, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  v43 = v10;
  v20 = v48;
  sub_1BA6AB190(0, 0, 0, 0, 1, 0, 0, 0, (uint64_t)v10);
  if (v20)
  {
    sub_1BA4A2E80((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
  }
  else
  {
    sub_1BA4C2DD8(v19, v46, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    sub_1BA4C2DD8(v36, v45, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA7C26A0(v16, v17);
    sub_1BB86C8D4();
    v22 = sub_1BB86C8C8();
    v47 = v23;
    v48 = v22;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v38);
    v58 = &_s2AdVN;
    v59 = v18;
    v55[0] = v15;
    v56 = v16;
    v57 = v17;
    type metadata accessor for GroupLayoutKey();
    v24 = swift_allocObject();
    sub_1BA7C26A0(v16, v17);
    v53 = sub_1BB874734();
    v54 = v25;
    v51 = 95;
    v52 = 0xE100000000000000;
    v49 = 45;
    v50 = 0xE100000000000000;
    sub_1BA7114A0();
    v26 = sub_1BB873B04();
    v28 = v27;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v24 + 16) = v26;
    *(_QWORD *)(v24 + 24) = v28;
    v29 = (uint64_t *)(v24 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v30 = v47;
    *v29 = v48;
    v29[1] = v30;
    sub_1BA4C010C((uint64_t)v55, v24 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    v31 = v24 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BA5193C4(v46, v24 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v41 + 56))(v31, 0, 1, v42);
    v32 = v24 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BA5193C4(v45, v24 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v32, 0, 1, v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
    sub_1BA7C2538(v16, v17);
    v33 = (int *)_s2AdV5BoundVMa();
    v34 = v44;
    v44[3] = (uint64_t)v33;
    v34[4] = sub_1BA4A2870(&qword_1ED3B3508, (uint64_t (*)(uint64_t))_s2AdV5BoundVMa, (uint64_t)&unk_1BB884140);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v34);
    sub_1BA4CECCC(&v60, (uint64_t)boxed_opaque_existential_0);
    sub_1BA5193C4((uint64_t)v64, (uint64_t)boxed_opaque_existential_0 + v33[5], (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    result = sub_1BA5193C4((uint64_t)v43, (uint64_t)boxed_opaque_existential_0 + v33[6], (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v33[7]) = v24;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GroupLayoutBindingContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for GroupLayoutContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for GroupLayoutKey()
{
  uint64_t result;

  result = qword_1ED3C1170;
  if (!qword_1ED3C1170)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA7C1310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v7 = sub_1BA7C139C((void (*)(__int128 *__return_ptr, uint64_t))sub_1BA7C1508, (uint64_t)&v12, a1);
  v8 = sub_1BA7C1B84(v7, a2, a3);
  v10 = v9;
  swift_bridgeObjectRelease();
  result = sub_1BA7C2E00(v8, (uint64_t)(a4 + 2));
  *a4 = v8;
  a4[1] = v10;
  return result;
}

_QWORD *sub_1BA7C139C(void (*a1)(__int128 *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  __int128 v13[2];
  uint64_t v14;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v6 = a3 + 32;
  v14 = a3;
  swift_bridgeObjectRetain();
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    a1(&v11, v6);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    if (v12)
    {
      sub_1BA4CECCC(&v11, (uint64_t)v13);
      sub_1BA4CECCC(v13, (uint64_t)&v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_1BB392048(0, v7[2] + 1, 1, v7);
      v9 = v7[2];
      v8 = v7[3];
      if (v9 >= v8 >> 1)
        v7 = sub_1BB392048((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
      v7[2] = v9 + 1;
      sub_1BA4CECCC(&v11, (uint64_t)&v7[5 * v9 + 4]);
    }
    else
    {
      sub_1BA4A2E80((uint64_t)&v11, (uint64_t (*)(_QWORD))sub_1BA7E426C);
    }
    v6 += 40;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BA7C1508@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA7C1520(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BA7C1520@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;

  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BA7C16E0(a2, v9, v10);
  if (!v4)
    return sub_1BA4C010C((uint64_t)a1, a4);
  v11 = *(_QWORD *)(a3 + *(_QWORD *)(*(_QWORD *)a3 + 168));
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87A390;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB86DEE8();
  v15 = v14;
  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v12 + 56) = MEMORY[0x1E0DEA968];
  v17 = sub_1BA6A2D8C();
  *(_QWORD *)(v12 + 64) = v17;
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v12 + 96) = v16;
  *(_QWORD *)(v12 + 104) = v17;
  *(_QWORD *)(v12 + 72) = 0;
  *(_QWORD *)(v12 + 80) = 0xE000000000000000;
  v18 = sub_1BB87330C();
  sub_1BB86EF44("Layout %{public}@ not statisfied, reason=%{public}@", 51, 2, &dword_1BA493000, v11, v18, v12);

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + 32) = 0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

uint64_t sub_1BA7C16E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  char v5;
  char v6;
  uint64_t *v7;
  uint64_t *v8;
  void *v10;
  unsigned __int8 v11;

  v3 = sub_1BA7C19D0(a2, a3);
  v10 = *(void **)(v3 + 24);
  v11 = *(_BYTE *)(v3 + 32);
  sub_1BA7C26A0(v10, v11);
  v4 = (void *)sub_1BB86D75C();
  sub_1BA7C17DC();
  v6 = v5;

  sub_1BA7C2538(v10, v11);
  if ((v6 & 1) != 0)
  {
    sub_1BA7C1A64();
  }
  else
  {
    sub_1BA7E415C();
    swift_allocError();
    v8 = v7;
    *v7 = sub_1BB86D75C();
    *((_BYTE *)v8 + 40) = 1;
    swift_willThrow();
  }
  return swift_release();
}

void sub_1BA7C17DC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA7C1810()
{
  void *v0;
  id v1;
  char v2;

  v1 = v0;
  v2 = sub_1BB87351C();
  sub_1BA7C2538(v0, 0);
  return v2 & 1;
}

uint64_t sub_1BA7C19D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  char v9;

  v4 = (*(uint64_t (**)(void))(a2 + 24))();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 40))(&v8, a1, a2);
  v5 = v8;
  v6 = v9;
  type metadata accessor for GroupLayoutFactoryValidator();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v4;
  *(_QWORD *)(result + 24) = v5;
  *(_BYTE *)(result + 32) = v6;
  return result;
}

uint64_t type metadata accessor for GroupLayoutFactoryValidator()
{
  return objc_opt_self();
}

uint64_t sub_1BA7C1A64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    type metadata accessor for GroupLayoutContext();
    v4 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v12 = v2;
    v5 = (char *)(v2 + 40);
    while (1)
    {
      v6 = *((_QWORD *)v5 - 1);
      v7 = *v5;
      v10 = v6;
      v11 = v7;
      sub_1BA8C88B0(v6, v7);
      v8 = objc_msgSend(v4, sel_mainBundle);
      sub_1BB3A0170((uint64_t)&v10);
      if (v1)
        break;
      v5 += 16;

      sub_1BA8C88BC(v6, v7);
      if (!--v3)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();

    return sub_1BA8C88BC(v6, v7);
  }
  return result;
}

uint64_t sub_1BA7C1B84(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t result;
  _QWORD v76[2];
  unint64_t v77;
  _QWORD *v78;
  char *v79;
  _QWORD *v80;
  unint64_t v81;
  _QWORD *v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88[2];
  __int128 v89;
  uint64_t v90;
  __int128 v91;
  unsigned __int8 v92[24];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v86 = a3;
  v87 = a2;
  v95 = *MEMORY[0x1E0C80C00];
  v5 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[2];
  v79 = v7;
  if (v8)
  {
    *(_QWORD *)&v83 = v3;
    v84 = v5;
    v9 = (uint64_t)(a1 + 4);
    v82 = a1;
    swift_bridgeObjectRetain();
    v78 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v85 = xmmword_1BB87CE70;
    do
    {
      sub_1BA4C010C(v9, (uint64_t)&v89);
      v11 = v90;
      v12 = v91;
      __swift_project_boxed_opaque_existential_1(&v89, v90);
      (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(v12 + 32))(v92, v11, v12);
      v13 = v78;
      if (v78[2])
      {
        v14 = sub_1BA7C25B0(v92[0]);
        v15 = MEMORY[0x1E0DEE9D8];
        if ((v16 & 1) != 0)
        {
          v15 = *(_QWORD *)(v13[7] + 8 * v14);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        v15 = MEMORY[0x1E0DEE9D8];
      }
      v17 = v90;
      v18 = v91;
      __swift_project_boxed_opaque_existential_1(&v89, v90);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v18 + 32))(v88, v17, v18);
      v19 = LOBYTE(v88[0]);
      sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B9F10, (unint64_t *)&qword_1ED3B6FC0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v85;
      sub_1BA4C010C((uint64_t)&v89, inited + 32);
      *(_QWORD *)v92 = v15;
      sub_1BA7C29F8(inited);
      v21 = *(_QWORD *)v92;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)v92 = v13;
      v24 = sub_1BA7C25B0(v19);
      v25 = v13[2];
      v26 = (v23 & 1) == 0;
      v27 = v25 + v26;
      if (__OFADD__(v25, v26))
        goto LABEL_41;
      v28 = v23;
      if (v13[3] >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C9DC8();
      }
      else
      {
        sub_1BA7C2DF4(v27, isUniquelyReferenced_nonNull_native);
        v29 = sub_1BA7C25B0(v19);
        if ((v28 & 1) != (v30 & 1))
        {
          result = sub_1BB874560();
          __break(1u);
          return result;
        }
        v24 = v29;
      }
      v31 = *(_QWORD **)v92;
      v78 = *(_QWORD **)v92;
      if ((v28 & 1) != 0)
      {
        v10 = *(_QWORD *)(*(_QWORD *)v92 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v10 + 8 * v24) = v21;
      }
      else
      {
        *(_QWORD *)(*(_QWORD *)v92 + 8 * (v24 >> 6) + 64) |= 1 << v24;
        *(_BYTE *)(v31[6] + v24) = v19;
        *(_QWORD *)(v31[7] + 8 * v24) = v21;
        v32 = v31[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_42;
        v31[2] = v34;
      }
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
      v9 += 40;
      --v8;
      v7 = v79;
    }
    while (v8);
    swift_bridgeObjectRelease();
    v5 = v84;
    v3 = v83;
  }
  else
  {
    v78 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v35 = *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 168));
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v84 = v36;
  v37 = swift_allocObject();
  v83 = xmmword_1BB87FC80;
  *(_OWORD *)(v37 + 16) = xmmword_1BB87FC80;
  v38 = v87;
  v39 = *(_QWORD *)(v87 + 32);
  v82 = (_QWORD *)(v87 + 8);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v87 + 8), v39);
  v40 = sub_1BB86DEE8();
  v42 = v41;
  *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
  v81 = sub_1BA6A2D8C();
  *(_QWORD *)(v37 + 64) = v81;
  *(_QWORD *)(v37 + 32) = v40;
  *(_QWORD *)(v37 + 40) = v42;
  v43 = *(_QWORD *)(*(_QWORD *)(v38 + *(int *)(v5 + 56)) + 16);
  v44 = MEMORY[0x1E0DEB418];
  v45 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v37 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v37 + 104) = v45;
  *(_QWORD *)(v37 + 72) = v43;
  v46 = *(_QWORD *)(*(_QWORD *)(v38 + 64) + 16);
  *(_QWORD *)(v37 + 136) = v44;
  *(_QWORD *)(v37 + 144) = v45;
  *(_QWORD *)(v37 + 112) = v46;
  v47 = sub_1BB87330C();
  *(_QWORD *)&v85 = v35;
  sub_1BB86EF44("Layout %{public}@ binding to layouts with %ld item bindings and %ld group bindings", 82, 2, &dword_1BA493000, v35, v47, v37);
  swift_bridgeObjectRelease();
  v48 = 0;
  v49 = &unk_1E7271000;
  v50 = v78;
  while (1)
  {
    if (v48 >= v49[105])
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
    }
    if (v50[2])
    {
      v51 = sub_1BA7C25B0(*((unsigned __int8 *)&unk_1E7271338 + v48 + 32));
      if ((v52 & 1) != 0)
        break;
    }
LABEL_21:
    if (++v48 == 4)
    {
      v74 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      goto LABEL_39;
    }
  }
  v53 = *(_QWORD *)(v50[7] + 8 * v51);
  v54 = *(_QWORD *)(v53 + 16);
  if (v54)
  {
    v77 = v48;
    v55 = v53 + 32;
    v76[1] = v53;
    swift_bridgeObjectRetain();
    v80 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BA4C010C(v55, (uint64_t)v92);
      sub_1BA4C2DD8(v38, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      v56 = v7;
      v57 = v93;
      v58 = v94;
      __swift_project_boxed_opaque_existential_1(v92, v93);
      (*(void (**)(__int128 *__return_ptr, char *, uint64_t, uint64_t, uint64_t))(v58 + 48))(&v89, v56, v86, v57, v58);
      sub_1BA4C010C((uint64_t)&v89, (uint64_t)v88);
      v59 = v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v59 = sub_1BA7C2A14(0, v59[2] + 1, 1, v59);
      v61 = v59[2];
      v60 = v59[3];
      if (v61 >= v60 >> 1)
        v59 = sub_1BA7C2A14((_QWORD *)(v60 > 1), v61 + 1, 1, v59);
      v59[2] = v61 + 1;
      v80 = v59;
      sub_1BA4CECCC(v88, (uint64_t)&v59[5 * v61 + 4]);
      v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = v83;
      __swift_project_boxed_opaque_existential_1(v82, *(_QWORD *)(v38 + 32));
      v63 = sub_1BB86DEE8();
      v64 = MEMORY[0x1E0DEA968];
      v65 = v81;
      *(_QWORD *)(v62 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v62 + 64) = v65;
      *(_QWORD *)(v62 + 32) = v63;
      *(_QWORD *)(v62 + 40) = v66;
      v68 = v90;
      v67 = v91;
      __swift_project_boxed_opaque_existential_1(&v89, v90);
      v69 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v67 + 16))(v68, v67) + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v62 + 96) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v62 + 104) = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v62 + 72) = v69;
      __swift_project_boxed_opaque_existential_1(v92, v93);
      v38 = v87;
      v70 = sub_1BB86DEE8();
      *(_QWORD *)(v62 + 136) = v64;
      *(_QWORD *)(v62 + 144) = v65;
      *(_QWORD *)(v62 + 112) = v70;
      *(_QWORD *)(v62 + 120) = v71;
      v72 = sub_1BB87330C();
      sub_1BB86EF44("Layout %{public}@ successfully bound items(%ld) for %{public}@", 62, 2, &dword_1BA493000, (_QWORD)v85, v72, v62);
      swift_bridgeObjectRelease();
      v7 = v79;
      sub_1BA4A2E80((uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
      v55 += 40;
      --v54;
    }
    while (v54);
    swift_bridgeObjectRelease();
    v50 = v78;
    v48 = v77;
    v49 = (_QWORD *)&unk_1E7271000;
    v73 = v80;
  }
  else
  {
    v73 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if (!v73[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  v74 = v73;
LABEL_39:
  swift_bridgeObjectRelease();
  return (uint64_t)v74;
}

void sub_1BA7C2538(id a1, unsigned __int8 a2)
{
  if (a2 <= 5u)

}

unint64_t sub_1BA7C254C(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1BB8745CC();
  sub_1BB8745D8();
  v2 = sub_1BB874608();
  return sub_1BA7C25B4(a1, v2);
}

unint64_t sub_1BA7C25B4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t _s8NewsFeed7A12_V24VwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  unsigned __int8 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_1BA7C26A0(v3, v4);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return a1;
}

id sub_1BA7C26A0(id result, unsigned __int8 a2)
{
  if (a2 <= 5u)
    return result;
  return result;
}

char *sub_1BA7C26BC(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  unint64_t v46;
  char *__dst;
  char *__dsta;
  uint64_t v50;
  uint64_t *v51;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *(_QWORD *)a1 = *a2;
    v28 = (char *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(void *, uint64_t *))(v7 - 8))(a1, a2);
    v50 = a3;
    v51 = a2;
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1BB86D7A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)type metadata accessor for GroupLayoutContext();
    v13 = v12[5];
    v14 = &v9[v13];
    v15 = v10 + v13;
    v16 = sub_1BB86D660();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = v12[6];
    v18 = &v9[v17];
    v19 = v10 + v17;
    *(_OWORD *)v18 = *(_OWORD *)(v10 + v17);
    v18[16] = *(_BYTE *)(v10 + v17 + 16);
    *(_WORD *)(v18 + 17) = *(_WORD *)(v10 + v17 + 17);
    v18[19] = *(_BYTE *)(v10 + v17 + 19);
    *((_DWORD *)v18 + 5) = *(_DWORD *)(v10 + v17 + 20);
    v20 = *(_QWORD *)(v10 + v17 + 24);
    if (v20 >= 2)
      v20 = swift_bridgeObjectRetain();
    *((_QWORD *)v18 + 3) = v20;
    v21 = type metadata accessor for FeedLayoutSolverOptions(0);
    v22 = *(int *)(v21 + 36);
    __dst = &v18[v22];
    v23 = (const void *)(v19 + v22);
    v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v29 = sub_1BB8705C4();
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dst, v23, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    *(_QWORD *)&v18[*(int *)(v21 + 40)] = *(_QWORD *)(v19 + *(int *)(v21 + 40));
    *(_QWORD *)&v9[v12[7]] = *(_QWORD *)(v10 + v12[7]);
    *(_QWORD *)&v9[v12[8]] = *(_QWORD *)(v10 + v12[8]);
    v9[v12[9]] = *(_BYTE *)(v10 + v12[9]);
    *(_QWORD *)&v9[v12[10]] = *(_QWORD *)(v10 + v12[10]);
    v9[v12[11]] = *(_BYTE *)(v10 + v12[11]);
    *(_QWORD *)&v9[v12[12]] = *(_QWORD *)(v10 + v12[12]);
    v30 = *(int *)(v50 + 24);
    __dsta = a1;
    v31 = &a1[v30];
    v32 = (uint64_t)v51 + v30;
    v33 = *(uint64_t *)((char *)v51 + v30 + 8);
    *(_QWORD *)v31 = *(uint64_t *)((char *)v51 + v30);
    *((_QWORD *)v31 + 1) = v33;
    v34 = (int *)type metadata accessor for FeedBannerAd();
    v35 = v34[5];
    v36 = &v31[v35];
    v37 = v32 + v35;
    v38 = sub_1BB8721C0();
    v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v39(v36, v37, v38);
    *(_QWORD *)&v31[v34[6]] = *(_QWORD *)(v32 + v34[6]);
    v40 = v34[7];
    v41 = &v31[v40];
    v42 = v32 + v40;
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v41[8] = *(_BYTE *)(v42 + 8);
    v43 = v34[8];
    v44 = &v31[v43];
    v45 = (_QWORD *)(v32 + v43);
    v46 = v45[1];
    if (v46 >= 0x11)
    {
      *(_QWORD *)v44 = *v45;
      *((_QWORD *)v44 + 1) = v46;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v44 = *(_OWORD *)v45;
    }
    v28 = __dsta;
    *(_QWORD *)&__dsta[*(int *)(v50 + 28)] = *(uint64_t *)((char *)v51 + *(int *)(v50 + 28));
  }
  swift_retain();
  return v28;
}

uint64_t sub_1BA7C29F8(uint64_t a1)
{
  return sub_1BA6ECBC8(a1, (void (*)(_QWORD))sub_1BA6F41A0, (unint64_t *)&qword_1ED3B6FC0);
}

_QWORD *sub_1BA7C2A14(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BA6ECD60(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA6F4230, (unint64_t *)&unk_1ED3B8000);
}

uint64_t sub_1BA7C2A30(uint64_t a1)
{
  return sub_1BB784398(a1, (uint64_t (*)(_QWORD))sub_1BA7C2AA0, (uint64_t (*)(_QWORD, double))type metadata accessor for FeedHeadline, (void (*)(BOOL, uint64_t, uint64_t))sub_1BA7C2ABC);
}

unint64_t sub_1BA7C2A4C()
{
  unint64_t result;

  result = qword_1ED3B2E30;
  if (!qword_1ED3B2E30)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B2E30);
  }
  return result;
}

void sub_1BA7C2AA0(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA7C2ABC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BA7C2AE8, type metadata accessor for FeedHeadline);
  *v3 = result;
  return result;
}

void sub_1BA7C2AE8(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B9D50, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1BA7C2B04(uint64_t a1, char a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v4 = v3;
  v6 = *v3;
  a3(0);
  result = sub_1BB873F54();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v31 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v30 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v20 >= v30)
          goto LABEL_33;
        v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v30)
            goto LABEL_33;
          v21 = v31[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v6 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v9 >= v30)
                  goto LABEL_33;
                v21 = v31[v9];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v9 = v22;
          }
        }
LABEL_30:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v19);
      v28 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1BB8745CC();
      sub_1BB8745D8();
      result = sub_1BB874608();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v17) = v27;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

void sub_1BA7C2DD0(uint64_t a1)
{
  sub_1BB4CD2EC(a1, &qword_1ED3B0438, (void (*)(uint64_t))sub_1BA81DA34, (void (*)(void))sub_1BA82DC80);
}

uint64_t sub_1BA7C2DF4(uint64_t a1, char a2)
{
  return sub_1BA7C2B04(a1, a2, sub_1BA7C2DD0);
}

uint64_t sub_1BA7C2E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v8[2];
  uint64_t v9;

  if (*(_QWORD *)(a1 + 16) == 1)
    return sub_1BA4C010C(a1 + 32, a2);
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1ED3B8000);
  v4 = (_QWORD *)sub_1BB872DE4();
  sub_1BA7C0BC4((uint64_t)v4, v4);
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v6 = swift_bridgeObjectRetain();
  sub_1BA618D9C(v6, v5);
  swift_bridgeObjectRelease_n();
  v7 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 16))
  {
    sub_1BA4C010C(v7 + 32, (uint64_t)v8);
  }
  else
  {
    v9 = 0;
    memset(v8, 0, sizeof(v8));
  }
  swift_bridgeObjectRelease();
  return sub_1BA7DFEF0((uint64_t)v8, a2);
}

void sub_1BA7C2F7C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B9D10, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

_QWORD *sub_1BA7C2F98(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  char *__dst;
  uint64_t v38;
  uint64_t v39;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v39 = a3;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1BB86D7A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = (int *)type metadata accessor for GroupLayoutContext();
    v13 = v12[5];
    v14 = &v9[v13];
    v15 = v10 + v13;
    v16 = sub_1BB86D660();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = v12[6];
    v18 = &v9[v17];
    v19 = v10 + v17;
    *(_OWORD *)v18 = *(_OWORD *)(v10 + v17);
    v18[16] = *(_BYTE *)(v10 + v17 + 16);
    *(_WORD *)(v18 + 17) = *(_WORD *)(v10 + v17 + 17);
    v18[19] = *(_BYTE *)(v10 + v17 + 19);
    *((_DWORD *)v18 + 5) = *(_DWORD *)(v10 + v17 + 20);
    v20 = *(_QWORD *)(v10 + v17 + 24);
    if (v20 >= 2)
      v20 = swift_bridgeObjectRetain();
    *((_QWORD *)v18 + 3) = v20;
    v21 = type metadata accessor for FeedLayoutSolverOptions(0);
    v22 = *(int *)(v21 + 36);
    __dst = &v18[v22];
    v38 = v21;
    v23 = (const void *)(v19 + v22);
    v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v28 = sub_1BB8705C4();
      (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(__dst, v23, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    *(_QWORD *)&v18[*(int *)(v38 + 40)] = *(_QWORD *)(v19 + *(int *)(v38 + 40));
    *(_QWORD *)&v9[v12[7]] = *(_QWORD *)(v10 + v12[7]);
    *(_QWORD *)&v9[v12[8]] = *(_QWORD *)(v10 + v12[8]);
    v9[v12[9]] = *(_BYTE *)(v10 + v12[9]);
    *(_QWORD *)&v9[v12[10]] = *(_QWORD *)(v10 + v12[10]);
    v9[v12[11]] = *(_BYTE *)(v10 + v12[11]);
    *(_QWORD *)&v9[v12[12]] = *(_QWORD *)(v10 + v12[12]);
    v29 = *(int *)(v39 + 24);
    v30 = (char *)v4 + v29;
    v31 = (uint64_t)a2 + v29;
    v32 = *(_QWORD *)(v31 + 8);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    v33 = *(_QWORD *)(v31 + 24);
    *((_QWORD *)v30 + 2) = *(_QWORD *)(v31 + 16);
    *((_QWORD *)v30 + 3) = v33;
    v30[32] = *(_BYTE *)(v31 + 32);
    v34 = (_QWORD *)(v31 + 40);
    v35 = *(_QWORD *)(v31 + 48);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (v35 >= 0x11)
    {
      *((_QWORD *)v30 + 5) = *v34;
      *((_QWORD *)v30 + 6) = v35;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v30 + 40) = *(_OWORD *)v34;
    }
    *(_QWORD *)((char *)v4 + *(int *)(v39 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v39 + 28));
  }
  swift_retain();
  return v4;
}

void sub_1BA7C3270(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B9E80, (uint64_t (*)(uint64_t))sub_1BA6BCBF8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BA7C328C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B9D40, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BA7C32A8(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3CFB30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t sub_1BA7C32C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA7C0E1C(a1, a2, a3);
}

id sub_1BA7C32D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  unsigned __int8 v3;

  v2 = *(void **)(v1 + 8);
  *(_QWORD *)a1 = v2;
  v3 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v3;
  return sub_1BA7C26A0(v2, v3);
}

uint64_t sub_1BA7C32EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_0;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9D60, (uint64_t (*)(uint64_t))sub_1BA7C2A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  v4 = v1 + *(int *)(a1 + 24);
  *(_QWORD *)(v3 + 56) = type metadata accessor for FeedBannerAd();
  *(_QWORD *)(v3 + 64) = sub_1BA4A2870(&qword_1ED3B2D10, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v3 + 32));
  sub_1BA4C2DD8(v4, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedBannerAd);
  return v3;
}

uint64_t sub_1BA7C33A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  void *__dst;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2 + 1;
    v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    v10 = v9;
    v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    v33 = a3;
    v12 = *(int *)(a3 + 24);
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1BB86D7A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    v16 = (int *)type metadata accessor for GroupLayoutContext();
    v17 = v16[5];
    v18 = v13 + v17;
    v19 = v14 + v17;
    v20 = sub_1BB86D660();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = v16[6];
    v22 = v13 + v21;
    v23 = v14 + v21;
    *(_OWORD *)v22 = *(_OWORD *)(v14 + v21);
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(_BYTE *)(v22 + 19) = *(_BYTE *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    v24 = *(_QWORD *)(v14 + v21 + 24);
    if (v24 >= 2)
      v24 = swift_bridgeObjectRetain();
    *(_QWORD *)(v22 + 24) = v24;
    v32 = type metadata accessor for FeedLayoutSolverOptions(0);
    v25 = *(int *)(v32 + 36);
    __dst = (void *)(v22 + v25);
    v26 = (const void *)(v23 + v25);
    v27 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = sub_1BB8705C4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(__dst, v26, v30);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
    }
    *(_QWORD *)(v22 + *(int *)(v32 + 40)) = *(_QWORD *)(v23 + *(int *)(v32 + 40));
    *(_QWORD *)(v13 + v16[7]) = *(_QWORD *)(v14 + v16[7]);
    *(_QWORD *)(v13 + v16[8]) = *(_QWORD *)(v14 + v16[8]);
    *(_BYTE *)(v13 + v16[9]) = *(_BYTE *)(v14 + v16[9]);
    *(_QWORD *)(v13 + v16[10]) = *(_QWORD *)(v14 + v16[10]);
    *(_BYTE *)(v13 + v16[11]) = *(_BYTE *)(v14 + v16[11]);
    *(_QWORD *)(v13 + v16[12]) = *(_QWORD *)(v14 + v16[12]);
    *(_QWORD *)(a1 + *(int *)(v33 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v33 + 28));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_1BA7C3638()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9DB8)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9DB8);
  }
}

void sub_1BA7C36AC(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B9EB8, type metadata accessor for FormatCompilerOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BA7C36C8(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B9C88, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6430], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

_QWORD *sub_1BA7C36E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4B07F0(0, &qword_1ED3B9F08, (uint64_t (*)(uint64_t))sub_1BA7C3924, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA7C381C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA7C381C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_1BA7C3924();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA7C3924()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B6FB0)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3B6FC0);
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3BA030);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B6FB0);
  }
}

double sub_1BA7C39B4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA7C3AEC(a1, a2, a3);
}

uint64_t sub_1BA7C39CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9D60, (uint64_t (*)(uint64_t))sub_1BA7C2A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  v4 = (uint64_t *)(v1 + *(int *)(a1 + 24));
  v6 = *v4;
  v5 = v4[1];
  v7 = v4[2];
  v8 = v4[3];
  v9 = *((_BYTE *)v4 + 32);
  v10 = v4[5];
  v11 = v4[6];
  *(_QWORD *)(v3 + 56) = &type metadata for FeedGap;
  *(_QWORD *)(v3 + 64) = sub_1BA7C3AA8();
  v12 = swift_allocObject();
  *(_QWORD *)(v3 + 32) = v12;
  *(_QWORD *)(v12 + 16) = v6;
  *(_QWORD *)(v12 + 24) = v5;
  *(_QWORD *)(v12 + 32) = v7;
  *(_QWORD *)(v12 + 40) = v8;
  *(_BYTE *)(v12 + 48) = v9;
  *(_QWORD *)(v12 + 56) = v10;
  *(_QWORD *)(v12 + 64) = v11;
  swift_bridgeObjectRetain();
  sub_1BA75A650(v10, v11);
  return v3;
}

unint64_t sub_1BA7C3AA8()
{
  unint64_t result;

  result = qword_1ED3B2A08;
  if (!qword_1ED3B2A08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGap, &type metadata for FeedGap);
    atomic_store(result, (unint64_t *)&qword_1ED3B2A08);
  }
  return result;
}

double sub_1BA7C3AEC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  void *v14;
  unsigned __int8 v15;
  unint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t *v32;
  uint64_t *boxed_opaque_existential_0;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61[8];
  void *v62;
  unsigned __int8 v63;
  ValueMetadata *v64;
  unint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  unsigned __int8 v73;
  ValueMetadata *v74;
  unint64_t v75;
  char *v76;

  v51 = a3;
  v46 = sub_1BB86C8E0();
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for GroupLayoutBindingContext();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v53 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for GroupLayoutContext();
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v52 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - v11;
  v13 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  v74 = &_s3GapVN;
  v16 = sub_1BA6B054C();
  v75 = v16;
  LOBYTE(v72) = v13;
  *((_QWORD *)&v72 + 1) = v14;
  v73 = v15;
  v44 = a2;
  v76 = v12;
  sub_1BA4C2DD8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  v17 = v54;
  sub_1BA7C4014(0, 0, 0, 0, 1, 0, 0, 0, (uint64_t *)&v66);
  if (v17)
  {
    sub_1BA4A2E80((uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    v43 = v66;
    v42 = v67;
    v41 = v68;
    v40 = v69;
    v39 = v70;
    v38 = v71;
    sub_1BA4C2DD8(a1, v53, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    sub_1BA4C2DD8(v44, v52, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA7C26A0(v14, v15);
    sub_1BB86C8D4();
    v19 = sub_1BB86C8C8();
    v54 = 0;
    v20 = v19;
    v44 = v21;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v46);
    v64 = &_s3GapVN;
    v65 = v16;
    v61[0] = v13;
    v62 = v14;
    v63 = v15;
    type metadata accessor for GroupLayoutKey();
    v22 = swift_allocObject();
    sub_1BA7C26A0(v14, v15);
    v59 = sub_1BB874734();
    v60 = v23;
    v57 = 95;
    v58 = 0xE100000000000000;
    v55 = 45;
    v56 = 0xE100000000000000;
    sub_1BA7114A0();
    v24 = sub_1BB873B04();
    v26 = v25;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 24) = v26;
    v27 = (uint64_t *)(v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v28 = v44;
    *v27 = v20;
    v27[1] = v28;
    sub_1BA4C010C((uint64_t)v61, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    v29 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BA5193C4(v53, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v29, 0, 1, v49);
    v30 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BA5193C4(v52, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v30, 0, 1, v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    sub_1BA7C2538(v14, v15);
    v31 = (int *)_s3GapV5BoundVMa(0);
    v32 = v51;
    v51[3] = (uint64_t)v31;
    v32[4] = sub_1BA4A2870(&qword_1ED3B35C8, _s3GapV5BoundVMa, (uint64_t)&unk_1BB8F243C);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
    sub_1BA4CECCC(&v72, (uint64_t)boxed_opaque_existential_0);
    sub_1BA5193C4((uint64_t)v76, (uint64_t)boxed_opaque_existential_0 + v31[5], (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v34 = (char *)boxed_opaque_existential_0 + v31[6];
    result = *(double *)&v43;
    *(_OWORD *)v34 = v43;
    v35 = v41;
    *((_QWORD *)v34 + 2) = v42;
    *((_QWORD *)v34 + 3) = v35;
    v34[32] = v40;
    v36 = v38;
    *((_QWORD *)v34 + 5) = v39;
    *((_QWORD *)v34 + 6) = v36;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v31[7]) = v22;
  }
  return result;
}

uint64_t sub_1BA7C4014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t *a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  _QWORD v35[5];
  int v36;
  uint64_t *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  __int128 v43;
  int v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  __int128 v48;
  char v49;
  __int128 v50;
  uint64_t v51;

  v11 = v10;
  v12 = v9;
  v36 = a8;
  v38 = a5;
  v39 = a3;
  v37 = a9;
  v18 = type metadata accessor for GroupLayoutBindingContext();
  v19 = *(_QWORD *)(v9 + *(int *)(v18 + 56));
  v20 = *(_QWORD *)(v19 + 16);
  swift_bridgeObjectRetain();
  if (!v20)
    goto LABEL_8;
  v51 = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40 = a1;
  v21 = sub_1BA6A8790(0x70614764656546, 0xE700000000000000, a1, a2);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v23 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    a6 = v51;
    a1 = v40;
LABEL_8:
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v26 = xmmword_1BB94ABA0;
    *(_QWORD *)(v26 + 16) = a1;
    *(_QWORD *)(v26 + 24) = a2;
    *(_QWORD *)(v26 + 32) = a4;
    *(_QWORD *)(v26 + 40) = 1;
    *(_QWORD *)(v26 + 48) = a6;
LABEL_9:
    *(_QWORD *)(v26 + 56) = a7;
    *(_BYTE *)(v26 + 64) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  v24 = sub_1BA6ABE54(v23, v51, a7);
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v27 = sub_1BA7C4364(v24);
  swift_bridgeObjectRelease();
  if (!v27)
    goto LABEL_20;
  if (!*(_QWORD *)(v27 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_1BA7C46A0(v27, v39, a4, v38 & 1, (uint64_t)&v41);
  result = swift_bridgeObjectRelease();
  if (!v42)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v26 = xmmword_1BB94ABA0;
    *(_QWORD *)(v26 + 16) = v40;
    *(_QWORD *)(v26 + 24) = a2;
    *(_QWORD *)(v26 + 32) = a4;
    *(_QWORD *)(v26 + 40) = 1;
    *(_QWORD *)(v26 + 48) = v51;
    goto LABEL_9;
  }
  v46 = v41;
  v47 = v42;
  v48 = v43;
  v49 = v44 & 1;
  v50 = v45;
  if ((v43 & 0x1000) != 0)
  {
    v28 = *(int *)(v18 + 76);
    v29 = *(_QWORD *)(v12 + v28);
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
      return result;
    }
    *(_QWORD *)(v12 + v28) = v31;
  }
  if ((v36 & 1) == 0)
  {
    MEMORY[0x1E0C80A78](result);
    v35[2] = &v46;
    v23 = sub_1BA6AB7E4((uint64_t)sub_1BA6B2EAC, (uint64_t)v35, v23);
  }
  v41 = 0x70614764656546;
  v42 = 0xE700000000000000;
  *(_QWORD *)&v43 = v40;
  *((_QWORD *)&v43 + 1) = a2;
  sub_1BA6AB5A4(&v41, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v32 = v47;
  v33 = v49;
  v34 = v37;
  *v37 = v46;
  v34[1] = v32;
  *((_OWORD *)v34 + 1) = v48;
  *((_BYTE *)v34 + 32) = v33;
  *(_OWORD *)(v34 + 5) = v50;
  return result;
}

uint64_t sub_1BA7C4364(uint64_t a1)
{
  int64_t v2;
  uint64_t i;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[40];
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  sub_1BA7C44E8(0, v2, 0);
  if (!v2)
    return v16;
  for (i = a1 + 32; ; i += 40)
  {
    sub_1BA4C010C(i, (uint64_t)v15);
    sub_1BA7C2A4C();
    if (!swift_dynamicCast())
      break;
    v4 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BA7C44E8(0, *(_QWORD *)(v4 + 16) + 1, 1);
      v4 = v16;
    }
    v6 = *(_QWORD *)(v4 + 16);
    v5 = *(_QWORD *)(v4 + 24);
    if (v6 >= v5 >> 1)
    {
      sub_1BA7C44E8(v5 > 1, v6 + 1, 1);
      v4 = v16;
    }
    *(_QWORD *)(v4 + 16) = v6 + 1;
    v7 = v4 + 56 * v6;
    *(_QWORD *)(v7 + 32) = v9;
    *(_QWORD *)(v7 + 40) = v10;
    *(_OWORD *)(v7 + 48) = v11;
    *(_BYTE *)(v7 + 64) = v12 & 1;
    *(_QWORD *)(v7 + 72) = v13;
    *(_QWORD *)(v7 + 80) = v14;
    if (!--v2)
      return v4;
  }
  swift_release();
  sub_1BB78BDC4(0, 0, 0, 0, 0, 0, 0);
  return 0;
}

uint64_t sub_1BA7C44E8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BA7C4504(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BA7C4504(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9D20, (uint64_t)&type metadata for FeedGap, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8])
      memmove(v12, v13, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

void sub_1BA7C46A0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  unsigned __int8 v37;
  __int128 v38;

  v11 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v5 + *(int *)(v14 + 76));
  if (v15 < *(_QWORD *)(v5 + *(int *)(v14 + 68))
    && (sub_1BA7C492C(a1, a3 | 0x1000, a2, 0, 1, a4 & 1, &v35), (v16 = *((_QWORD *)&v35 + 1)) != 0))
  {
    swift_bridgeObjectRelease();
    v17 = v37;
    v18 = v36;
    v19 = v38;
    *(_QWORD *)a5 = v35;
    *(_QWORD *)(a5 + 8) = v16;
    *(_OWORD *)(a5 + 16) = v18;
    *(_QWORD *)(a5 + 32) = v17;
    *(_OWORD *)(a5 + 40) = v19;
  }
  else
  {
    v20 = *(_QWORD *)(v5 + *(int *)(v11 + 72));
    v21 = __OFSUB__(v20, v15);
    v22 = v20 - v15;
    if (v21)
    {
      __break(1u);
    }
    else if (v22 < 1)
    {
      v25 = a4 & 1;
      sub_1BA7C492C(a1, a3, a2, 0x1000uLL, 0, v25, &v35);
      v26 = *((_QWORD *)&v35 + 1);
      if (*((_QWORD *)&v35 + 1))
      {
        swift_bridgeObjectRelease();
        v27 = v35;
        v28 = *((_QWORD *)&v36 + 1);
        v34 = v36;
        v29 = v37;
        v30 = v38;
        sub_1BA4C2DD8(v5, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
        sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
        *(_QWORD *)a5 = v27;
        *(_QWORD *)(a5 + 8) = v26;
        *(_QWORD *)(a5 + 16) = v34;
        *(_QWORD *)(a5 + 24) = v28;
        *(_QWORD *)(a5 + 32) = v29;
        *(_OWORD *)(a5 + 40) = v30;
      }
      else
      {
        sub_1BA4C2DD8(v5, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
        sub_1BA7C492C(a1, a3, a2, 0, 1, v25, &v35);
        v31 = *((_QWORD *)&v35 + 1);
        if (*((_QWORD *)&v35 + 1))
        {
          swift_bridgeObjectRelease();
          v32 = v37;
          *(_QWORD *)a5 = v35;
          *(_QWORD *)(a5 + 8) = v31;
          *(_OWORD *)(a5 + 16) = v36;
          *(_BYTE *)(a5 + 32) = v32;
          *(_OWORD *)(a5 + 40) = v38;
        }
        else
        {
          *(_QWORD *)(a5 + 48) = 0;
          *(_OWORD *)(a5 + 16) = 0u;
          *(_OWORD *)(a5 + 32) = 0u;
          *(_OWORD *)a5 = 0u;
        }
        sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      }
    }
    else
    {
      sub_1BA7C492C(a1, a3, a2, 0, 1, a4 & 1, &v35);
      v23 = *((_QWORD *)&v35 + 1);
      if (*((_QWORD *)&v35 + 1))
      {
        swift_bridgeObjectRelease();
        v24 = v37;
        *(_QWORD *)a5 = v35;
        *(_QWORD *)(a5 + 8) = v23;
        *(_OWORD *)(a5 + 16) = v36;
        *(_BYTE *)(a5 + 32) = v24;
        *(_OWORD *)(a5 + 40) = v38;
      }
      else
      {
        *(_QWORD *)(a5 + 48) = 0;
        *(_OWORD *)(a5 + 16) = 0u;
        *(_OWORD *)(a5 + 32) = 0u;
        *(_OWORD *)a5 = 0u;
      }
    }
  }
}

uint64_t sub_1BA7C492C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, _OWORD *a7@<X8>)
{
  _BYTE *v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _QWORD v29[2];
  __int128 v30;
  char v31;
  __int128 v32;
  uint64_t v33;

  v8 = a7;
  v9 = *(_QWORD *)(result + 16);
  if (!v9)
    goto LABEL_29;
  v14 = result;
  if ((*v7 & 1) != 0 || !a3)
  {
    LODWORD(v27) = a6;
    v28 = a7;
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v14 = sub_1BAC9FDAC(v14);
    result = swift_release();
    v9 = *(_QWORD *)(v14 + 16);
    if (!v9)
    {
      if ((a6 & 1) == 0)
      {
        __break(1u);
        return result;
      }
      goto LABEL_28;
    }
    LODWORD(v27) = a6;
    v28 = v8;
  }
  swift_bridgeObjectRetain();
  v15 = 0;
  v16 = (unint64_t *)(v14 + 80);
  do
  {
    v17 = *(v16 - 4);
    v18 = *(v16 - 1);
    v19 = *v16;
    if ((a5 & 1) != 0 || !a4)
    {
      if ((a2 & ~v17) == 0)
        goto LABEL_16;
    }
    else if ((a2 & ~v17) == 0 && (v17 & a4) != a4)
    {
LABEL_16:
      swift_bridgeObjectRetain();
      sub_1BA75A650(v18, v19);
      swift_bridgeObjectRelease();
      v33 = v14;
      sub_1BAA678B8(v15, (uint64_t)v29);
      swift_bridgeObjectRelease();
      result = sub_1BA6E0CBC(v18, v19);
      v21 = v29[1];
      v22 = v31;
      *(_QWORD *)v28 = v29[0];
      *((_QWORD *)v28 + 1) = v21;
      v28[1] = v30;
      *((_BYTE *)v28 + 32) = v22;
      *(_OWORD *)((char *)v28 + 40) = v32;
      *((_QWORD *)v28 + 7) = v33;
      return result;
    }
    ++v15;
    swift_bridgeObjectRetain();
    sub_1BA75A650(v18, v19);
    swift_bridgeObjectRelease();
    sub_1BA6E0CBC(v18, v19);
    v16 += 7;
  }
  while (v9 != v15);
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
    v23 = *(_QWORD *)(v14 + 16);
    if (v23)
    {
      if (v23 >= v9)
      {
        v16 = *(unint64_t **)(v14 + 40);
        v27 = *(_QWORD *)(v14 + 32);
        v15 = *(_QWORD *)(v14 + 48);
        v18 = *(_QWORD *)(v14 + 56);
        LOBYTE(v19) = *(_BYTE *)(v14 + 64);
        a5 = *(_QWORD *)(v14 + 72);
        a4 = *(_QWORD *)(v14 + 80);
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA75A650(a5, a4);
        sub_1BB874434();
        v24 = swift_dynamicCastClass();
        if (!v24)
        {
          swift_bridgeObjectRelease();
          v24 = MEMORY[0x1E0DEE9D8];
        }
        v25 = *(_QWORD *)(v24 + 16);
        swift_release();
        if (v25 == v9 - 1)
        {
          v26 = swift_dynamicCastClass();
          if (!v26)
          {
            swift_bridgeObjectRelease();
            v26 = MEMORY[0x1E0DEE9D8];
          }
          goto LABEL_26;
        }
LABEL_33:
        swift_bridgeObjectRelease();
        v26 = sub_1BA85D9DC(v14, v14 + 32, 1, (2 * v9) | 1);
LABEL_26:
        result = swift_bridgeObjectRelease();
        *(_QWORD *)v28 = v27;
        *((_QWORD *)v28 + 1) = v16;
        *((_QWORD *)v28 + 2) = v15;
        *((_QWORD *)v28 + 3) = v18;
        *((_BYTE *)v28 + 32) = v19;
        *((_QWORD *)v28 + 5) = a5;
        *((_QWORD *)v28 + 6) = a4;
        *((_QWORD *)v28 + 7) = v26;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_33;
  }
  v8 = v28;
LABEL_28:
  result = swift_bridgeObjectRelease();
LABEL_29:
  v8[2] = 0u;
  v8[3] = 0u;
  *v8 = 0u;
  v8[1] = 0u;
  return result;
}

_QWORD *sub_1BA7C4C08(_QWORD *a1)
{
  return sub_1BA7C4C1C(0, a1[2], 0, a1);
}

_QWORD *sub_1BA7C4C1C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9D20, (uint64_t)&type metadata for FeedGap, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA7C4D58(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA7C4D58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

double sub_1BA7C4E4C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA7C4E60(a1, a2, a3);
}

double sub_1BA7C4E60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  void *v14;
  unsigned __int8 v15;
  unint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t *v32;
  uint64_t *boxed_opaque_existential_0;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62[8];
  void *v63;
  unsigned __int8 v64;
  ValueMetadata *v65;
  unint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  unsigned __int8 v76;
  ValueMetadata *v77;
  unint64_t v78;
  char *v79;

  v52 = a3;
  v47 = sub_1BB86C8E0();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for GroupLayoutBindingContext();
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v54 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for GroupLayoutContext();
  v48 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v53 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - v11;
  v13 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  v77 = &_s10GapOfflineVN;
  v16 = sub_1BA6B0590();
  v78 = v16;
  LOBYTE(v75) = v13;
  *((_QWORD *)&v75 + 1) = v14;
  v76 = v15;
  v45 = a2;
  v79 = v12;
  sub_1BA4C2DD8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  v17 = v55;
  sub_1BA7C53D4(0, 0, 0, 0, 1, 0, 0, 0, (uint64_t)&v67);
  if (v17)
  {
    sub_1BA4A2E80((uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v75);
  }
  else
  {
    v44 = v67;
    v43 = v68;
    v42 = v69;
    v41 = v70;
    v40 = v71;
    v39 = v72;
    v38 = v73;
    v37 = v74;
    sub_1BA4C2DD8(a1, v54, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    sub_1BA4C2DD8(v45, v53, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA7C26A0(v14, v15);
    sub_1BB86C8D4();
    v19 = sub_1BB86C8C8();
    v55 = 0;
    v20 = v19;
    v45 = v21;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v47);
    v65 = &_s10GapOfflineVN;
    v66 = v16;
    v62[0] = v13;
    v63 = v14;
    v64 = v15;
    type metadata accessor for GroupLayoutKey();
    v22 = swift_allocObject();
    sub_1BA7C26A0(v14, v15);
    v60 = sub_1BB874734();
    v61 = v23;
    v58 = 95;
    v59 = 0xE100000000000000;
    v56 = 45;
    v57 = 0xE100000000000000;
    sub_1BA7114A0();
    v24 = sub_1BB873B04();
    v26 = v25;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v22 + 16) = v24;
    *(_QWORD *)(v22 + 24) = v26;
    v27 = (uint64_t *)(v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v28 = v45;
    *v27 = v20;
    v27[1] = v28;
    sub_1BA4C010C((uint64_t)v62, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    v29 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BA5193C4(v54, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v29, 0, 1, v50);
    v30 = v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BA5193C4(v53, v22 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v30, 0, 1, v51);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    sub_1BA7C2538(v14, v15);
    v31 = (int *)_s10GapOfflineV5BoundVMa(0);
    v32 = v52;
    v52[3] = (uint64_t)v31;
    v32[4] = sub_1BA4A2870(&qword_1ED3AC680, _s10GapOfflineV5BoundVMa, (uint64_t)&unk_1BB8F2420);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
    sub_1BA4CECCC(&v75, (uint64_t)boxed_opaque_existential_0);
    sub_1BA5193C4((uint64_t)v79, (uint64_t)boxed_opaque_existential_0 + v31[5], (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v34 = (char *)boxed_opaque_existential_0 + v31[6];
    *(_OWORD *)v34 = v44;
    v35 = v42;
    *((_QWORD *)v34 + 2) = v43;
    *((_QWORD *)v34 + 3) = v35;
    v34[32] = v41;
    *(_OWORD *)(v34 + 40) = v40;
    result = *(double *)&v39;
    *(_OWORD *)(v34 + 56) = v39;
    v36 = v37;
    *((_QWORD *)v34 + 9) = v38;
    *((_QWORD *)v34 + 10) = v36;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v31[7]) = v22;
  }
  return result;
}

uint64_t sub_1BA7C53D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[4];
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[2];
  __int128 v46;
  int v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  char v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;

  v11 = v10;
  v12 = v9;
  v41 = a8;
  v42 = a5;
  v60 = a4;
  v43 = a3;
  v18 = type metadata accessor for GroupLayoutBindingContext();
  v19 = *(_QWORD *)(v9 + *(int *)(v18 + 56));
  v20 = *(_QWORD *)(v19 + 16);
  swift_bridgeObjectRetain();
  if (!v20)
    goto LABEL_8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = a1;
  v21 = sub_1BA6A8790(0x4F70614764656546, 0xEE00656E696C6666, a1, a2);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v23 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v23 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    a1 = v44;
LABEL_8:
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v26 = xmmword_1BB94AB90;
    *(_QWORD *)(v26 + 16) = a1;
LABEL_9:
    v27 = v60;
    *(_QWORD *)(v26 + 24) = a2;
    *(_QWORD *)(v26 + 32) = v27;
    *(_QWORD *)(v26 + 40) = 1;
    *(_QWORD *)(v26 + 48) = a6;
LABEL_10:
    *(_QWORD *)(v26 + 56) = a7;
    *(_BYTE *)(v26 + 64) = 0;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  v40 = a9;
  v24 = sub_1BA6ABE54(v23, a6, a7);
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v39 = sub_1BB784D60(v24);
  swift_bridgeObjectRelease();
  if (!v39)
    goto LABEL_21;
  if (!*(_QWORD *)(v39 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_21:
    swift_bridgeObjectRelease();
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v26 = xmmword_1BB94AB90;
    *(_QWORD *)(v26 + 16) = v44;
    *(_QWORD *)(v26 + 24) = a2;
    *(_QWORD *)(v26 + 32) = v60;
    *(_QWORD *)(v26 + 40) = 1;
    *(_QWORD *)(v26 + 48) = a6;
    goto LABEL_10;
  }
  sub_1BB78859C(v39, v43, v60, v42 & 1, (uint64_t)v45);
  result = swift_bridgeObjectRelease();
  if (!v45[1])
  {
    swift_bridgeObjectRelease();
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v26 = xmmword_1BB94AB90;
    *(_QWORD *)(v26 + 16) = v44;
    goto LABEL_9;
  }
  v52 = v45[0];
  v53 = v45[1];
  v54 = v46;
  v55 = v47 & 1;
  v56 = v48;
  v57 = v49;
  v58 = v50;
  v59 = v51;
  v28 = v40;
  if ((v46 & 0x1000) != 0)
  {
    v29 = *(int *)(v18 + 76);
    v30 = *(_QWORD *)(v12 + v29);
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
      return result;
    }
    *(_QWORD *)(v12 + v29) = v32;
  }
  if ((v41 & 1) == 0)
  {
    MEMORY[0x1E0C80A78](result);
    v38[2] = &v52;
    v23 = sub_1BA6AB7E4((uint64_t)sub_1BA6B2EAC, (uint64_t)v38, v23);
  }
  strcpy((char *)v45, "FeedGapOffline");
  HIBYTE(v45[1]) = -18;
  *(_QWORD *)&v46 = v44;
  *((_QWORD *)&v46 + 1) = a2;
  sub_1BA6AB5A4(v45, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v33 = v53;
  v34 = v55;
  v35 = v56;
  v36 = v57;
  v37 = v58;
  *(_QWORD *)v28 = v52;
  *(_QWORD *)(v28 + 8) = v33;
  *(_OWORD *)(v28 + 16) = v54;
  *(_BYTE *)(v28 + 32) = v34;
  *(_OWORD *)(v28 + 40) = v35;
  *(_QWORD *)(v28 + 56) = v36;
  *(_QWORD *)(v28 + 64) = v37;
  *(_OWORD *)(v28 + 72) = v59;
  return result;
}

unint64_t sub_1BA7C5828()
{
  unint64_t result;

  result = qword_1ED3CA740;
  if (!qword_1ED3CA740)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GroupLayoutBindingError, &type metadata for GroupLayoutBindingError);
    atomic_store(result, (unint64_t *)&qword_1ED3CA740);
  }
  return result;
}

void sub_1BA7C586C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B9E60, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BA7C5888(uint64_t *a1, _QWORD *a2)
{
  sub_1BA9AFB00(a1, a2);
}

void sub_1BA7C58B4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

unint64_t sub_1BA7C58FC(uint64_t a1, unint64_t a2)
{
  unint64_t *v2;

  *v2 = a2;
  return sub_1BA74444C(a2);
}

uint64_t sub_1BA7C5A8C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[7];
  _OWORD v13[2];
  _BYTE v14[144];
  _OWORD v15[7];
  _OWORD v16[3];
  uint64_t v17;

  v4 = v3;
  v17 = a2;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v7 = result;
    swift_bridgeObjectRetain();
    v8 = 0;
    while (1)
    {
      v9 = *(_QWORD *)(a3 + 8 * v8 + 32);
      if (v9 >> 62)
      {
        if (v9 >> 62 == 1)
        {
          swift_retain();
          swift_retain();
          sub_1BA7F0998();
          if (v4)
            goto LABEL_16;
        }
        else
        {
          v10 = *(_QWORD *)(v9 + 16);
          v11 = *(_QWORD *)(v10 + 16);
          swift_retain();
          swift_retain();
          sub_1BA7C5A8C(v7, v17, v11);
          if (v4)
          {
LABEL_16:
            swift_bridgeObjectRelease();
            swift_release();
            return swift_release();
          }
          sub_1BB004424(v10 + 24, (uint64_t)v14);
          sub_1BB004424((uint64_t)v14, (uint64_t)v15);
          if (sub_1BA896370((uint64_t *)v15) != 1)
          {
            sub_1BB004424((uint64_t)v14, (uint64_t)v12);
            sub_1BA89652C((uint64_t)v12);
            sub_1BAC55E48();
            sub_1BA8966F8((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
          }
        }
      }
      else
      {
        sub_1BB004424(*(_QWORD *)(v9 + 16) + 120, (uint64_t)v14);
        sub_1BB004424((uint64_t)v14, (uint64_t)v15);
        if (sub_1BA896370((uint64_t *)v15) == 1)
          goto LABEL_4;
        v12[5] = v15[5];
        v12[6] = v15[6];
        v13[0] = v16[0];
        *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)((char *)v16 + 9);
        v12[2] = v15[2];
        v12[3] = v15[3];
        v12[4] = v15[4];
        v12[0] = v15[0];
        v12[1] = v15[1];
        swift_retain();
        swift_retain();
        sub_1BA8966F8((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
        sub_1BAC55E48();
        sub_1BA8966F8((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
        if (v4)
          goto LABEL_16;
      }
      swift_release();
      swift_release();
LABEL_4:
      if (v5 == ++v8)
        return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1BA7C5D48(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 *v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __int128 *v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v128[2];
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 *v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  char v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  uint64_t v171;

  v156 = a1;
  v5 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a3 + 16))
  {
    v136 = v7;
    v143 = (uint64_t *)(a3 + 32);
    v134 = a3;
    swift_bridgeObjectRetain();
    v155 = a2;
    v149 = 0;
    v8 = *v143;
    v9 = v143[1];
    v10 = v143[2];
    v11 = v143[3];
    v12 = v143[4];
    v13 = v143[5];
    v14 = v143[7];
    v154 = v143[6];
    v152 = v11;
    v153 = v10;
    v150 = v9;
    v148 = v14;
    v147 = v8;
    if ((v11 & 4) == 0)
    {
      v15 = v14;
      v16 = (_QWORD *)v8;
      sub_1BA7CCBB4(v8, v9, v10, v11);
      sub_1BA7CCBB4((uint64_t)v16, v9, v10, v11);
      sub_1BA7CCBB4((uint64_t)v16, v9, v10, v11);
      sub_1BA7CCCA0(v12, v13, v154);
      v135 = v15 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain();
      v17 = v171;
      sub_1BA7D1EF8(v156, v155, v16);
      v171 = v17;
      if (!v17)
      {
        if (*(_BYTE *)(v9 + 41))
          v18 = 4;
        else
          v18 = 0;
        v19 = (char *)&loc_1BA7C5F60 + 4 * word_1BB927C6E[v18 & 0xFFFFFFFC | (*(unsigned __int8 *)(v9 + 40) >> 2) & 3];
        v145 = v12;
        __asm { BR              X9 }
      }
      v111 = v147;
      sub_1BA7CCC14(v147, v9, v10, v11);
      sub_1BA7CCC14(v111, v9, v10, v11);
      sub_1BA7CCC14(v111, v9, v10, v11);
      sub_1BA7CCC64(v12, v13, v154);
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    *(_QWORD *)&v165 = v8;
    v20 = v155[3];
    v159 = v155[2];
    v160 = v20;
    v161 = v155[4];
    v162 = *((_QWORD *)v155 + 10);
    v21 = v155[1];
    v157 = *v155;
    v158 = v21;
    v22 = v8;
    sub_1BA7CCBB4(v8, v9, v10, v11);
    sub_1BA7CCBB4(v22, v9, v10, v11);
    sub_1BA7CCBB4(v22, v9, v10, v11);
    sub_1BA7CCCA0(v12, v13, v154);
    swift_retain();
    v23 = v171;
    sub_1BA645F4C();
    v171 = v23;
    if (v23)
    {
      sub_1BA7CCC14(v22, v9, v10, v11);
      sub_1BA7CCC14(v22, v9, v10, v11);
      sub_1BA7CCC14(v22, v9, v10, v11);
      sub_1BA7CCC64(v12, v13, v154);
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_1BA7CCC14(v22, v9, v10, v11);
    sub_1BA7CCC14(v22, v9, v10, v11);
    v24 = v148;
    if ((v154 & 0x2000000000000000) == 0)
    {
      if (*(_BYTE *)(v12 + 41))
        v25 = 4;
      else
        v25 = 0;
      __asm { BR              X9 }
    }
    if (v12 >> 62)
    {
      if (v12 >> 62 == 1)
        goto LABEL_43;
      v27 = *(_QWORD *)(v12 + 16);
      v26 = *(_QWORD *)(v12 + 24);
      if (v27 >> 62)
      {
        if (v27 >> 62 == 1)
        {
          v28 = *(unsigned __int8 *)(v27 + 64);
          if (v28 == 255
            || (v165 = *(_OWORD *)((v27 & 0x3FFFFFFFFFFFFFFFLL) + 0x30),
                LOBYTE(v166) = v28,
                v29 = v171,
                nullsub_1(v156),
                (v171 = v29) == 0))
          {
            v30 = v154;
            sub_1BA7CCCA0(v12, v13, v154);
            sub_1BA7CCCA0(v12, v13, v30);
            swift_retain();
            swift_bridgeObjectRetain();
LABEL_30:
            swift_bridgeObjectRetain();
            v84 = v171;
            sub_1BB569D10(v156, v155, v26);
            v171 = v84;
            v24 = v148;
            if (!v84)
            {
              swift_bridgeObjectRelease_n();
              swift_release();
              v85 = v154;
              sub_1BA7CCC64(v12, v13, v154);
              sub_1BA7CCC64(v12, v13, v85);
              goto LABEL_43;
            }
            swift_bridgeObjectRelease_n();
            swift_release();
            v118 = v154;
            sub_1BA7CCC64(v12, v13, v154);
            sub_1BA7CCC64(v12, v13, v118);
            sub_1BA7CCC14(v147, v9, v153, v11);
            sub_1BA7CCC64(v12, v13, v118);
            swift_bridgeObjectRelease();
            goto LABEL_46;
          }
          sub_1BA7CCC14(v147, v9, v153, v11);
          v115 = v12;
          v116 = v13;
          v117 = v154;
        }
        else
        {
          v74 = *(_QWORD *)(v27 + 24);
          *(_QWORD *)&v165 = *(_QWORD *)(v27 + 16);
          v75 = v26;
          v76 = v13;
          v77 = v155;
          v78 = v155[3];
          v159 = v155[2];
          v160 = v78;
          v161 = v155[4];
          v162 = *((_QWORD *)v155 + 10);
          v79 = v155[1];
          v157 = *v155;
          v158 = v79;
          v80 = v154;
          sub_1BA7CCCA0(v12, v76, v154);
          v151 = v76;
          sub_1BA7CCCA0(v12, v76, v80);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          v26 = v75;
          swift_bridgeObjectRetain();
          v81 = v156;
          v82 = v171;
          sub_1BA6466EC(v156, (uint64_t)&v157);
          v171 = v82;
          if (v82)
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
          else
          {
            swift_bridgeObjectRetain();
            v83 = v171;
            sub_1BB569D10(v81, v77, v74);
            v171 = v83;
            if (!v83)
            {
              swift_release();
              swift_bridgeObjectRelease_n();
              v9 = v150;
              v13 = v151;
              LOBYTE(v11) = v152;
              goto LABEL_30;
            }
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
          }
          v121 = v151;
          v122 = v154;
          sub_1BA7CCC64(v12, v151, v154);
          sub_1BA7CCC64(v12, v121, v122);
          sub_1BA7CCC14(v147, v150, v153, v152);
          v115 = v12;
          v116 = v121;
          v117 = v122;
        }
      }
      else
      {
        v60 = *(_QWORD *)(v27 + 24);
        v133 = *(_QWORD *)(v27 + 16);
        v146 = v26;
        v132 = v60;
        v61 = v13;
        v131 = *(_QWORD *)(v27 + 32);
        LODWORD(v130) = *(unsigned __int8 *)(v27 + 40);
        v135 = *(_QWORD *)(v27 + 48);
        v62 = v154;
        v139 = *(_QWORD *)(v27 + 56);
        LODWORD(v140) = *(unsigned __int16 *)(v27 + 64);
        v64 = *(_QWORD *)(v27 + 72);
        v63 = *(_QWORD *)(v27 + 80);
        v65 = *(_QWORD *)(v27 + 96);
        v129 = *(_QWORD *)(v27 + 88);
        LODWORD(v141) = *(unsigned __int8 *)(v27 + 104);
        v144 = *(_QWORD *)(v27 + 112);
        *(_QWORD *)&v157 = v133;
        *((_QWORD *)&v157 + 1) = v60;
        *(_QWORD *)&v158 = v131;
        BYTE8(v158) = v130;
        *(_QWORD *)&v159 = v135;
        *((_QWORD *)&v159 + 1) = v139;
        LOWORD(v160) = v140;
        *((_QWORD *)&v160 + 1) = v64;
        *(_QWORD *)&v161 = v63;
        *((_QWORD *)&v161 + 1) = v129;
        v162 = v65;
        v163 = v141;
        *(_QWORD *)&v164 = v144;
        v66 = v155[3];
        v167 = v155[2];
        v168 = v66;
        v169 = v155[4];
        v170 = *((_QWORD *)v155 + 10);
        v67 = v155[1];
        v165 = *v155;
        v166 = v67;
        sub_1BA7CCCA0(v12, v61, v154);
        v145 = v12;
        v151 = v61;
        sub_1BA7CCCA0(v12, v61, v62);
        v128[1] = v27 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_bridgeObjectRetain();
        v11 = v133;
        v68 = v132;
        v69 = v131;
        v70 = v130;
        sub_1BA60DF54(v133, v132, v131, v130);
        v71 = v135;
        sub_1BA740E74(v135, v139, v140);
        v137 = v64;
        sub_1BA60DEE4(v64);
        v72 = v129;
        v138 = v65;
        sub_1BA69C808(v129, v65, v141);
        sub_1BA895BA4(v144);
        v73 = v171;
        sub_1BA73D0A8();
        v171 = v73;
        if (!v73)
        {
          sub_1BA60DFC4(v11, v68, v69, v70);
          sub_1BA740460(v71, v139, v140);
          sub_1BA60DF1C(v137);
          sub_1BA69C828(v72, v138, v141);
          sub_1BA895BB8(v144);
          v13 = v151;
          v12 = v145;
          LOBYTE(v11) = v152;
          v9 = v150;
          v26 = v146;
          goto LABEL_30;
        }
        sub_1BA60DFC4(v11, v68, v69, v70);
        sub_1BA740460(v71, v139, v140);
        sub_1BA60DF1C(v137);
        sub_1BA69C828(v72, v138, v141);
        sub_1BA895BB8(v144);
        swift_bridgeObjectRelease();
        swift_release();
        v123 = v145;
        v124 = v151;
        v125 = v154;
        sub_1BA7CCC64(v145, v151, v154);
        sub_1BA7CCC64(v123, v124, v125);
        sub_1BA7CCC14(v147, v150, v153, v152);
        v115 = v123;
        v116 = v124;
        v117 = v125;
      }
LABEL_57:
      sub_1BA7CCC64(v115, v116, v117);
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    v151 = v13;
    v31 = *(_QWORD *)(v12 + 16);
    v32 = *(_QWORD *)(v12 + 24);
    v33 = *(_QWORD *)(v12 + 32);
    v34 = *(unsigned __int8 *)(v12 + 40);
    v35 = *(_QWORD *)(v12 + 48);
    v36 = *(unsigned __int16 *)(v12 + 64);
    v37 = v36 >> 8;
    v38 = *(_QWORD *)(v12 + 72);
    v39 = *(_QWORD *)(v12 + 80);
    v40 = *(_QWORD *)(v12 + 88);
    v41 = *(_QWORD *)(v12 + 96);
    v42 = *(unsigned __int8 *)(v12 + 104);
    v43 = *(_QWORD *)(v12 + 112);
    v144 = *(_QWORD *)(v12 + 56);
    v140 = v41;
    v145 = v12;
    LODWORD(v138) = v36;
    v139 = v43;
    LODWORD(v133) = v42;
    v137 = v32;
    v141 = v31;
    v132 = v40;
    v131 = v38;
    v135 = v39;
    v146 = v35;
    v54 = v33;
    v55 = v151;
    v56 = v34;
    v57 = v140;
    switch(v37)
    {
      case 0u:
        v86 = v146;
        *(_QWORD *)&v165 = v146;
        v87 = v155[3];
        v159 = v155[2];
        v160 = v87;
        v161 = v155[4];
        v162 = *((_QWORD *)v155 + 10);
        v88 = v155[1];
        v157 = *v155;
        v158 = v88;
        v89 = v145;
        v90 = v154;
        sub_1BA7CCCA0(v145, v151, v154);
        sub_1BA7CCCA0(v89, v55, v90);
        v53 = v54;
        v52 = v56;
        sub_1BA60DF54(v141, v137, v54, v56);
        sub_1BA740E74(v86, v144, v138);
        v49 = v131;
        sub_1BA60DEE4(v131);
        v91 = v133;
        sub_1BA69C808(v132, v57, v133);
        sub_1BA895BA4(v139);
        v92 = v171;
        sub_1BA754E6C();
        v171 = v92;
        if (v92)
        {
          sub_1BA60DFC4(v141, v137, v53, v56);
          sub_1BA740460(v146, v144, v138);
          sub_1BA60DF1C(v49);
          sub_1BA69C828(v132, v57, v91);
          sub_1BA895BB8(v139);
          v126 = v145;
          v127 = v154;
          sub_1BA7CCC64(v145, v55, v154);
          sub_1BA7CCC64(v126, v55, v127);
          sub_1BA7CCC14(v147, v150, v153, v152);
          v115 = v126;
          v116 = v55;
          v117 = v127;
          goto LABEL_57;
        }
        v51 = v139;
        v50 = v132;
LABEL_36:
        if ((~v49 & 0xF000000000000007) != 0)
        {
          v97 = v49;
          v98 = v146;
          *(_QWORD *)&v165 = v97;
          v99 = v155;
          v100 = v155[3];
          v159 = v155[2];
          v160 = v100;
          v161 = v155[4];
          v162 = *((_QWORD *)v155 + 10);
          v101 = v155[1];
          v96 = v97;
          v102 = v135;
          v157 = *v155;
          v158 = v101;
          swift_retain();
          swift_retain();
          v103 = v171;
          sub_1BA7547AC();
          v171 = v103;
          if (v103)
          {
            sub_1BA60DF1C(v96);
            sub_1BA60DFC4(v141, v137, v53, v52);
            sub_1BA740460(v98, v144, v138);
            sub_1BA60DF1C(v96);
            sub_1BA69C828(v50, v140, v133);
            sub_1BA895BB8(v139);
            v112 = v145;
            v113 = v151;
            v114 = v154;
            sub_1BA7CCC64(v145, v151, v154);
            sub_1BA7CCC64(v112, v113, v114);
            sub_1BA7CCC14(v147, v150, v153, v152);
            v115 = v112;
            v116 = v113;
            v117 = v114;
            goto LABEL_57;
          }
          *(_QWORD *)&v165 = v102;
          v104 = v99[3];
          v159 = v99[2];
          v160 = v104;
          v161 = v99[4];
          v162 = *((_QWORD *)v99 + 10);
          v105 = v99[1];
          v157 = *v99;
          v158 = v105;
          sub_1BA7547AC();
          v171 = 0;
          sub_1BA60DF1C(v96);
          v24 = v148;
          v95 = v151;
          v51 = v139;
        }
        else
        {
          v95 = v151;
          v96 = v49;
          v24 = v148;
        }
        if ((~v51 & 0xF000000000000007) == 0)
          goto LABEL_42;
        *(_QWORD *)&v165 = v51;
        v106 = v155[3];
        v159 = v155[2];
        v160 = v106;
        v161 = v155[4];
        v162 = *((_QWORD *)v155 + 10);
        v107 = v155[1];
        v157 = *v155;
        v158 = v107;
        v108 = v171;
        sub_1BAC63538();
        v171 = v108;
        if (!v108)
        {
LABEL_42:
          sub_1BA60DFC4(v141, v137, v53, v52);
          sub_1BA740460(v146, v144, v138);
          sub_1BA60DF1C(v96);
          sub_1BA69C828(v50, v140, v133);
          sub_1BA895BB8(v51);
          v109 = v145;
          v110 = v154;
          sub_1BA7CCC64(v145, v95, v154);
          sub_1BA7CCC64(v109, v95, v110);
LABEL_43:
          ++v149;
          __asm { BR              X9 }
        }
        sub_1BA60DFC4(v141, v137, v53, v52);
        sub_1BA740460(v146, v144, v138);
        sub_1BA60DF1C(v96);
        sub_1BA69C828(v50, v140, v133);
        sub_1BA895BB8(v51);
        v119 = v145;
        v120 = v154;
        sub_1BA7CCC64(v145, v95, v154);
        sub_1BA7CCC64(v119, v95, v120);
        sub_1BA7CCC14(v147, v150, v153, v152);
        sub_1BA7CCC64(v119, v95, v120);
        swift_bridgeObjectRelease();
LABEL_46:
        swift_release();
        return;
      case 1u:
        v93 = v145;
        v94 = v154;
        sub_1BA7CCCA0(v145, v151, v154);
        sub_1BA7CCCA0(v93, v55, v94);
        v53 = v54;
        v52 = v56;
        sub_1BA60DF54(v141, v137, v54, v56);
        v51 = v139;
        v49 = v131;
        sub_1BA740E74(v146, v144, v138);
        sub_1BA60DEE4(v49);
        v50 = v132;
        sub_1BA69C808(v132, v57, v133);
        goto LABEL_35;
      case 2u:
      case 3u:
      case 4u:
        v58 = v145;
        v59 = v154;
        sub_1BA7CCCA0(v145, v151, v154);
        sub_1BA7CCCA0(v58, v55, v59);
        v53 = v54;
        v52 = v56;
        sub_1BA60DF54(v141, v137, v54, v56);
        sub_1BA740E74(v146, v144, v138);
        v49 = v131;
        sub_1BA60DEE4(v131);
        v50 = v132;
        sub_1BA69C808(v132, v57, v133);
        v51 = v139;
LABEL_35:
        sub_1BA895BA4(v51);
        goto LABEL_36;
      default:
        v44 = v12;
        v45 = v12;
        v46 = v154;
        v47 = v151;
        v48 = v33;
        v130 = v33;
        sub_1BA7CCCA0(v45, v151, v154);
        sub_1BA7CCCA0(v44, v47, v46);
        sub_1BA60DF54(v141, v34, v48, v34);
        sub_1BA740E74(v146, v144, v54);
        v49 = v131;
        sub_1BA60DEE4(v131);
        v50 = v132;
        sub_1BA69C808(v132, v140, v57);
        v51 = v139;
        sub_1BA895BA4(v139);
        v52 = v34;
        v53 = v130;
        goto LABEL_36;
    }
  }
}

uint64_t sub_1BA7CCBB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 4) != 0)
    return swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA7CCC14(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 4) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1BA7CCC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x2000000000000000) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

uint64_t sub_1BA7CCCA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0x2000000000000000) != 0)
    return swift_retain();
  swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

void sub_1BA7CCCE8(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int128 *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  unint64_t v87;
  uint64_t v88;
  unsigned int v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  __int128 *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  __int128 v123;
  __int128 v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __int128 *v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __int128 *v158;
  __int128 v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  __int128 v183;
  __int128 v184;
  int v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  __int128 v194;
  __int128 v195;
  uint64_t v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  uint64_t v201;
  __int128 *v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  __int128 v206;
  __int128 v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  __int128 *v220;
  __int128 v221;
  __int128 v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  __int128 *v228;
  uint64_t v229;
  __int128 *v230;
  __int128 *v231;
  uint64_t v232;
  __int128 *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  int v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  unint64_t v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  uint64_t v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  __int128 *v280;
  uint64_t v281;
  uint64_t v282;
  int v283;
  uint64_t v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  uint64_t v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  unsigned __int128 v295;
  uint64_t v296;
  char v297;
  uint64_t v298;
  uint64_t v299;

  v280 = a2;
  sub_1BA7DC9A0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v237 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v237 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v237 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v237 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v237 - v18;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v237 - v21;
  MEMORY[0x1E0C80A78](v23);
  v259 = (char *)&v237 - v24;
  MEMORY[0x1E0C80A78](v25);
  v261 = (char *)&v237 - v26;
  MEMORY[0x1E0C80A78](v27);
  v256 = (char *)&v237 - v28;
  MEMORY[0x1E0C80A78](v29);
  v257 = (char *)&v237 - v30;
  MEMORY[0x1E0C80A78](v31);
  v258 = (char *)&v237 - v32;
  MEMORY[0x1E0C80A78](v33);
  v260 = (char *)&v237 - v34;
  v35 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v237 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v278 = *(_QWORD *)(a3 + 16);
  if (!v278)
    return;
  v254 = v37;
  v248 = v22;
  v249 = v19;
  v255 = v16;
  v253 = v13;
  v251 = v10;
  v250 = v7;
  v279 = a3 + 32;
  v252 = a1 + 8;
  v262 = a3;
  swift_bridgeObjectRetain();
  v38 = 0;
  v284 = a1;
  v39 = a1;
  while (1)
  {
    v40 = v279 + 32 * v38;
    v42 = *(_QWORD *)v40;
    v41 = *(_QWORD *)(v40 + 8);
    v43 = *(unsigned __int8 *)(v40 + 16);
    v44 = *(_QWORD *)(v40 + 24);
    if (!(v44 >> 62))
    {
      v281 = *(_QWORD *)v40;
      v282 = v41;
      v276 = v38;
      v49 = *(_QWORD *)(v44 + 16);
      v50 = *(_QWORD *)(v44 + 24);
      v51 = *(_QWORD *)(v44 + 32);
      v52 = *(unsigned __int8 *)(v44 + 40);
      v53 = *(_QWORD *)(v44 + 48);
      v54 = *(_QWORD *)(v44 + 56);
      v55 = *(unsigned __int16 *)(v44 + 64);
      v56 = *(_QWORD *)(v44 + 72);
      v57 = *(_QWORD *)(v44 + 80);
      v59 = *(_QWORD *)(v44 + 88);
      v58 = *(_QWORD *)(v44 + 96);
      v60 = *(unsigned __int8 *)(v44 + 104);
      v61 = *(_QWORD *)(v44 + 112);
      v269 = v59;
      v277 = v57;
      LODWORD(v270) = v55;
      v274 = v54;
      v271 = v53;
      v273 = v44;
      v275 = v49;
      v283 = v43;
      LODWORD(v268) = v60;
      v266 = v58;
      v272 = v61;
      v267 = v56;
      LODWORD(v265) = v52;
      v264 = v51;
      v263 = v50;
      v70 = v58;
      v67 = v267;
      switch(v55 >> 8)
      {
        case 0u:
          __asm { BR              X9 }
          return;
        case 1u:
          v140 = v50;
          v141 = v275;
          sub_1BA73B1CC(v281, v282, v43);
          swift_retain();
          v142 = v141;
          sub_1BA60DF54(v141, v140, v51, v52);
          if (v274)
          {
            sub_1BA740E74(v271, v274, v270);
            sub_1BA60DEE4(v67);
            v59 = v269;
            v65 = v70;
            v143 = v70;
            v69 = v268;
            sub_1BA69C808(v269, v143, v268);
            v66 = v272;
            sub_1BA895BA4(v272);
          }
          else
          {
            v151 = v271;
            v152 = v270;
            sub_1BA740E74(v271, 0, v270);
            sub_1BA60DEE4(v67);
            v153 = v269;
            v65 = v70;
            v154 = v70;
            v69 = v268;
            sub_1BA69C808(v269, v154, v268);
            v66 = v272;
            sub_1BA895BA4(v272);
            v155 = v151;
            v59 = v153;
            sub_1BA740460(v155, 0, v152);
          }
          v38 = v276;
          v68 = v142;
          break;
        case 2u:
          v144 = v52;
          v145 = v51;
          v146 = v50;
          v147 = v275;
          sub_1BA73B1CC(v281, v282, v43);
          swift_retain();
          sub_1BA60DF54(v147, v146, v145, v144);
          sub_1BA740E74(v271, v54, v270);
          sub_1BA60DEE4(v67);
          v59 = v269;
          v65 = v70;
          v148 = v70;
          v69 = v268;
          sub_1BA69C808(v269, v148, v268);
          v66 = v272;
          sub_1BA895BA4(v272);
          v68 = v147;
          goto LABEL_29;
        case 3u:
        case 4u:
          v71 = v52;
          v72 = v51;
          v73 = v275;
          v74 = v54;
          sub_1BA73B1CC(v281, v282, v43);
          swift_retain();
          sub_1BA60DF54(v73, v50, v72, v71);
          v75 = v271;
          v76 = v270;
          sub_1BA740E74(v271, v54, v270);
          sub_1BA60DEE4(v67);
          v77 = v269;
          v78 = v70;
          v79 = v70;
          v69 = v268;
          sub_1BA69C808(v269, v79, v268);
          v80 = v272;
          sub_1BA895BA4(v272);
          v81 = v75;
          v59 = v77;
          v82 = v74;
          v66 = v80;
          v65 = v78;
          sub_1BA740460(v81, v82, v76);
          v68 = v73;
LABEL_29:
          v38 = v276;
          break;
        default:
          v62 = v275;
          sub_1BA73B1CC(v281, v282, v43);
          swift_retain();
          v63 = v275;
          sub_1BA60DF54(v275, v50, v51, v52);
          sub_1BA740E74(v53, v274, v55);
          v64 = v267;
          sub_1BA60DEE4(v267);
          v65 = v266;
          sub_1BA69C808(v59, v266, v62);
          v66 = v272;
          sub_1BA895BA4(v272);
          v67 = v64;
          v38 = v276;
          v68 = v63;
          v69 = v62;
          break;
      }
      if ((~v67 & 0xF000000000000007) != 0)
      {
        v156 = v65;
        v157 = v38;
        *(_QWORD *)&v285 = v67;
        v158 = v280;
        v159 = v280[3];
        v293 = v280[2];
        v294 = v159;
        v295 = v280[4];
        v296 = *((_QWORD *)v280 + 10);
        v160 = v280[1];
        v291 = *v280;
        v292 = v160;
        v161 = v277;
        sub_1BA60DEE4(v67);
        swift_retain();
        v162 = v299;
        sub_1BA7547AC();
        v163 = v162;
        if (v162)
        {
          swift_release();
          sub_1BA60DF1C(v67);
          sub_1BA60DFC4(v275, v263, v264, v265);
          sub_1BA740460(v271, v274, v270);
          sub_1BA60DF1C(v67);
          sub_1BA69C828(v269, v156, v268);
          sub_1BA895BB8(v272);
          sub_1BA73B1B8(v281, v282, v283);
          swift_bridgeObjectRelease();
LABEL_86:
          swift_release();
          v299 = v163;
          return;
        }
        swift_release();
        *(_QWORD *)&v285 = v161;
        v164 = v158[3];
        v293 = v158[2];
        v294 = v164;
        v295 = v158[4];
        v296 = *((_QWORD *)v158 + 10);
        v165 = v158[1];
        v291 = *v158;
        v292 = v165;
        swift_retain();
        sub_1BA7547AC();
        v299 = 0;
        swift_release();
        sub_1BA60DF1C(v67);
        v66 = v272;
        v69 = v268;
        v38 = v157;
        v65 = v156;
        v59 = v269;
        v68 = v275;
      }
      if ((~v66 & 0xF000000000000007) != 0)
        __asm { BR              X9 }
      sub_1BA60DFC4(v68, v263, v264, v265);
      sub_1BA740460(v271, v274, v270);
      sub_1BA60DF1C(v67);
      sub_1BA69C828(v59, v65, v69);
      sub_1BA895BB8(v66);
      sub_1BA73B1B8(v281, v282, v283);
      swift_release();
      v39 = v284;
      goto LABEL_3;
    }
    if (v44 >> 62 == 1)
      goto LABEL_3;
    v45 = *(_QWORD *)(v44 + 16);
    v277 = *(_QWORD *)(v44 + 24);
    v283 = v43;
    if (v45 >> 62)
      break;
    v281 = v42;
    v275 = v44 & 0x3FFFFFFFFFFFFFFFLL;
    v276 = v38;
    v282 = v41;
    v83 = *(_QWORD *)(v45 + 16);
    v84 = *(_QWORD *)(v45 + 24);
    v85 = *(_QWORD *)(v45 + 32);
    v86 = *(unsigned __int8 *)(v45 + 40);
    v87 = *(_QWORD *)(v45 + 48);
    v88 = *(_QWORD *)(v45 + 56);
    v89 = *(unsigned __int16 *)(v45 + 64);
    v90 = v89 >> 8;
    v91 = *(_QWORD *)(v45 + 80);
    v264 = *(_QWORD *)(v45 + 72);
    v92 = *(_QWORD *)(v45 + 88);
    v93 = *(_QWORD *)(v45 + 96);
    v94 = *(unsigned __int8 *)(v45 + 104);
    v95 = *(_QWORD *)(v45 + 112);
    v274 = v88;
    v269 = v83;
    v265 = v92;
    v273 = v91;
    v268 = v95;
    LODWORD(v270) = v89;
    v272 = v87;
    LODWORD(v267) = v86;
    v266 = v85;
    v271 = v84;
    v104 = v280;
    v105 = v93;
    v106 = v269;
    v107 = v277;
    v100 = v94;
    switch(v90)
    {
      case 0u:
        *(_QWORD *)&v285 = v87;
        v183 = v280[3];
        v293 = v280[2];
        v294 = v183;
        v295 = v280[4];
        v296 = *((_QWORD *)v280 + 10);
        v184 = v280[1];
        v291 = *v280;
        v292 = v184;
        v185 = v94;
        v186 = v268;
        v187 = v87;
        sub_1BA73B1CC(v281, v282, v283);
        v263 = v45 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        v188 = v106;
        v189 = v266;
        v190 = v267;
        sub_1BA60DF54(v188, v271, v266, v267);
        sub_1BA740E74(v187, v274, v270);
        sub_1BA60DEE4(v264);
        sub_1BA69C808(v265, v105, v185);
        sub_1BA895BA4(v186);
        v191 = v299;
        sub_1BA754E6C();
        v299 = v191;
        if (v191)
        {
          sub_1BA60DFC4(v269, v271, v189, v190);
          sub_1BA740460(v272, v274, v270);
          sub_1BA60DF1C(v264);
          sub_1BA69C828(v265, v105, v185);
          sub_1BA895BB8(v186);
          swift_bridgeObjectRelease();
          swift_release();
          sub_1BA73B1B8(v281, v282, v283);
          swift_release();
LABEL_94:
          swift_bridgeObjectRelease();
          return;
        }
        LODWORD(v100) = v185;
        v101 = v105;
        v98 = v265;
        v97 = v264;
LABEL_48:
        v192 = v98;
        if ((~v97 & 0xF000000000000007) != 0)
        {
          LODWORD(v264) = v100;
          *(_QWORD *)&v285 = v97;
          v194 = v104[3];
          v293 = v104[2];
          v294 = v194;
          v295 = v104[4];
          v296 = *((_QWORD *)v104 + 10);
          v195 = v104[1];
          v100 = v273;
          v291 = *v104;
          v292 = v195;
          swift_retain();
          swift_retain();
          v196 = v299;
          sub_1BA7547AC();
          v163 = v196;
          if (v196)
          {
            sub_1BA60DF1C(v97);
            sub_1BA60DFC4(v269, v271, v266, v267);
            sub_1BA740460(v272, v274, v270);
            sub_1BA60DF1C(v97);
            sub_1BA69C828(v98, v101, v264);
            sub_1BA895BB8(v268);
            swift_bridgeObjectRelease();
            swift_release();
            sub_1BA73B1B8(v281, v282, v283);
            swift_bridgeObjectRelease();
            goto LABEL_86;
          }
          *(_QWORD *)&v285 = v100;
          v197 = v104[3];
          v293 = v104[2];
          v294 = v197;
          v295 = v104[4];
          v296 = *((_QWORD *)v104 + 10);
          v198 = v104[1];
          v291 = *v104;
          v292 = v198;
          sub_1BA7547AC();
          v299 = 0;
          sub_1BA60DF1C(v97);
          v42 = v281;
          v48 = v277;
          v193 = v268;
          LOBYTE(v100) = v264;
        }
        else
        {
          v42 = v281;
          v48 = v277;
          v193 = v268;
        }
        if ((~v193 & 0xF000000000000007) != 0)
        {
          *(_QWORD *)&v285 = v193;
          v199 = v104[3];
          v293 = v104[2];
          v294 = v199;
          v295 = v104[4];
          v296 = *((_QWORD *)v104 + 10);
          v200 = v104[1];
          v291 = *v104;
          v292 = v200;
          v201 = v299;
          sub_1BAC63538();
          v299 = v201;
          if (!v201)
          {
            sub_1BA60DFC4(v269, v271, v266, v267);
            sub_1BA740460(v272, v274, v270);
            sub_1BA60DF1C(v97);
            sub_1BA69C828(v192, v101, v100);
            sub_1BA895BB8(v193);
            v41 = v282;
            v47 = v280;
            v39 = v284;
            v38 = v276;
LABEL_72:
            v48 = v277;
            break;
          }
          sub_1BA60DFC4(v269, v271, v266, v267);
          sub_1BA740460(v272, v274, v270);
          sub_1BA60DF1C(v97);
          sub_1BA69C828(v192, v101, v100);
          sub_1BA895BB8(v193);
          swift_bridgeObjectRelease();
          swift_release();
          v236 = v42;
LABEL_91:
          sub_1BA73B1B8(v236, v282, v283);
          swift_bridgeObjectRelease();
          goto LABEL_93;
        }
        sub_1BA60DFC4(v269, v271, v266, v267);
        sub_1BA740460(v272, v274, v270);
        sub_1BA60DF1C(v97);
        sub_1BA69C828(v192, v101, v100);
        sub_1BA895BB8(v193);
        v41 = v282;
        v47 = v104;
        v39 = v284;
        v38 = v276;
        break;
      case 1u:
        sub_1BA73B1CC(v281, v282, v283);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1BA60DF54(v106, v271, v266, v267);
        v110 = v274;
        v109 = v272;
        goto LABEL_47;
      case 2u:
      case 3u:
      case 4u:
        v108 = v87;
        sub_1BA73B1CC(v281, v282, v283);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1BA60DF54(v106, v271, v266, v267);
        v109 = v108;
        v110 = v274;
LABEL_47:
        sub_1BA740E74(v109, v110, v270);
        v97 = v264;
        sub_1BA60DEE4(v264);
        v98 = v265;
        v101 = v105;
        sub_1BA69C808(v265, v105, v100);
        sub_1BA895BA4(v268);
        goto LABEL_48;
      default:
        v263 = v93;
        v96 = v94;
        sub_1BA73B1CC(v281, v282, v283);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1BA60DF54(v107, v84, v100, v86);
        sub_1BA740E74(v272, v274, v106);
        v97 = v264;
        sub_1BA60DEE4(v264);
        v98 = v265;
        v99 = v263;
        sub_1BA69C808(v265, v263, v96);
        sub_1BA895BA4(v105);
        v104 = v280;
        LODWORD(v100) = v96;
        v101 = v99;
        goto LABEL_48;
    }
LABEL_73:
    swift_bridgeObjectRetain();
    v235 = v299;
    sub_1BB569D10(v39, v47, v48);
    v299 = v235;
    if (v235)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_84;
    }
    swift_bridgeObjectRelease_n();
    swift_release();
    sub_1BA73B1B8(v42, v41, v283);
    swift_release();
LABEL_3:
    if (++v38 == v278)
      goto LABEL_94;
  }
  if (v45 >> 62 == 1)
  {
    sub_1BA73B1CC(v42, v41, v43);
    swift_retain();
    swift_retain();
    v46 = swift_bridgeObjectRetain();
    v47 = v280;
    v48 = v46;
    goto LABEL_73;
  }
  v273 = v45 & 0x3FFFFFFFFFFFFFFFLL;
  v102 = *(_QWORD *)(v45 + 16);
  v274 = *(_QWORD *)(v45 + 24);
  v272 = v102;
  if (!(v102 >> 62))
  {
    v263 = v45;
    v111 = v44 & 0x3FFFFFFFFFFFFFFFLL;
    v276 = v38;
    v112 = v41;
    v113 = *(_QWORD *)(v102 + 16);
    v114 = *(_QWORD *)(v102 + 24);
    v115 = *(_QWORD *)(v102 + 32);
    v116 = v42;
    v117 = *(_BYTE *)(v102 + 40);
    v118 = *(_QWORD *)(v102 + 56);
    v265 = *(_QWORD *)(v102 + 48);
    v264 = v118;
    v119 = *(unsigned __int16 *)(v102 + 64);
    v120 = *(_QWORD *)(v102 + 80);
    v266 = *(_QWORD *)(v102 + 72);
    v268 = v120;
    v121 = *(_QWORD *)(v102 + 96);
    v269 = *(_QWORD *)(v102 + 88);
    v270 = v121;
    v122 = *(unsigned __int8 *)(v102 + 104);
    v271 = *(_QWORD *)(v102 + 112);
    *(_QWORD *)&v291 = v113;
    *((_QWORD *)&v291 + 1) = v114;
    *(_QWORD *)&v292 = v115;
    BYTE8(v292) = v117;
    *(_QWORD *)&v293 = v265;
    *((_QWORD *)&v293 + 1) = v118;
    LOWORD(v294) = v119;
    *((_QWORD *)&v294 + 1) = v266;
    v295 = __PAIR128__(v269, v120);
    v296 = v121;
    v297 = v122;
    v298 = v271;
    v123 = v280[3];
    v287 = v280[2];
    v288 = v123;
    v289 = v280[4];
    v290 = *((_QWORD *)v280 + 10);
    v124 = v280[1];
    v285 = *v280;
    v286 = v124;
    v281 = v116;
    v282 = v112;
    v125 = v102;
    sub_1BA73B1CC(v116, v112, v43);
    v247 = v125 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    swift_bridgeObjectRetain();
    v275 = v111;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v126 = v113;
    v127 = v113;
    v128 = v114;
    v129 = v115;
    v130 = v115;
    v131 = v117;
    sub_1BA60DF54(v127, v114, v130, v117);
    v132 = v265;
    v133 = v264;
    v134 = v119;
    sub_1BA740E74(v265, v264, v119);
    v135 = v266;
    sub_1BA60DEE4(v266);
    LODWORD(v267) = v122;
    sub_1BA69C808(v269, v270, v122);
    sub_1BA895BA4(v271);
    v136 = v299;
    sub_1BA73D0A8();
    v299 = v136;
    if (!v136)
    {
      sub_1BA60DFC4(v126, v128, v129, v131);
      sub_1BA740460(v132, v133, v134);
      sub_1BA60DF1C(v135);
      sub_1BA69C828(v269, v270, v267);
      sub_1BA895BB8(v271);
      v41 = v282;
      v42 = v281;
      v150 = v280;
      v39 = v284;
      v38 = v276;
      v149 = v274;
      goto LABEL_70;
    }
    sub_1BA60DFC4(v126, v128, v129, v131);
    sub_1BA740460(v132, v133, v134);
    sub_1BA60DF1C(v135);
    sub_1BA69C828(v269, v270, v267);
    sub_1BA895BB8(v271);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_89;
  }
  if (v102 >> 62 == 1)
  {
    v103 = v284;
    sub_1BA73B1CC(v42, v41, v43);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v149 = v274;
    swift_bridgeObjectRetain();
    v150 = v280;
    v39 = v103;
LABEL_70:
    swift_bridgeObjectRetain();
    v47 = v150;
    v233 = v150;
    v234 = v299;
    sub_1BB569D10(v39, v233, v149);
    v299 = v234;
    if (v234)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      goto LABEL_84;
    }
    swift_bridgeObjectRelease_n();
    swift_release();
    goto LABEL_72;
  }
  v275 = v44 & 0x3FFFFFFFFFFFFFFFLL;
  v271 = v102 & 0x3FFFFFFFFFFFFFFFLL;
  v138 = *(_QWORD *)(v102 + 16);
  v137 = *(_QWORD *)(v102 + 24);
  v270 = v138;
  if (!(v138 >> 62))
  {
    v276 = v38;
    v269 = v137;
    v245 = *(_QWORD *)(v138 + 16);
    v166 = *(_QWORD *)(v138 + 32);
    v244 = *(_QWORD *)(v138 + 24);
    v243 = v166;
    LODWORD(v242) = *(unsigned __int8 *)(v138 + 40);
    v167 = *(_QWORD *)(v138 + 48);
    v168 = v41;
    v247 = *(_QWORD *)(v138 + 56);
    LODWORD(v246) = *(unsigned __int16 *)(v138 + 64);
    v169 = *(_QWORD *)(v138 + 80);
    v263 = *(_QWORD *)(v138 + 72);
    v264 = v169;
    v170 = *(_QWORD *)(v138 + 96);
    v265 = *(_QWORD *)(v138 + 88);
    v266 = v170;
    LODWORD(v267) = *(unsigned __int8 *)(v138 + 104);
    v268 = *(_QWORD *)(v138 + 112);
    *(_QWORD *)&v291 = v245;
    *((_QWORD *)&v291 + 1) = v244;
    *(_QWORD *)&v292 = v166;
    BYTE8(v292) = v242;
    *(_QWORD *)&v293 = v167;
    *((_QWORD *)&v293 + 1) = v247;
    v171 = v167;
    LOWORD(v294) = v246;
    *((_QWORD *)&v294 + 1) = v263;
    v295 = __PAIR128__(v265, v169);
    v296 = v170;
    v297 = v267;
    v298 = v268;
    v172 = v280[3];
    v287 = v280[2];
    v288 = v172;
    v289 = v280[4];
    v290 = *((_QWORD *)v280 + 10);
    v173 = v280[1];
    v285 = *v280;
    v286 = v173;
    v281 = v42;
    v282 = v168;
    sub_1BA73B1CC(v42, v168, v43);
    v241 = v138 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v174 = v245;
    v175 = v244;
    v176 = v243;
    v177 = v242;
    sub_1BA60DF54(v245, v244, v243, v242);
    v178 = v247;
    v179 = v246;
    sub_1BA740E74(v171, v247, v246);
    sub_1BA60DEE4(v263);
    sub_1BA69C808(v265, v266, v267);
    sub_1BA895BA4(v268);
    v180 = v299;
    sub_1BA73D0A8();
    v299 = v180;
    if (!v180)
    {
      sub_1BA60DFC4(v174, v175, v176, v177);
      sub_1BA740460(v171, v178, v179);
      sub_1BA60DF1C(v263);
      sub_1BA69C828(v265, v266, v267);
      sub_1BA895BB8(v268);
      v41 = v282;
      v42 = v281;
      v202 = v280;
      v39 = v284;
      v38 = v276;
LABEL_67:
      v137 = v269;
      goto LABEL_68;
    }
    sub_1BA60DFC4(v174, v175, v176, v177);
    sub_1BA740460(v171, v178, v179);
    sub_1BA60DF1C(v263);
    sub_1BA69C828(v265, v266, v267);
    sub_1BA895BB8(v268);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_89;
  }
  if (v138 >> 62 == 1)
  {
    v139 = v284;
    sub_1BA73B1CC(v42, v41, v43);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v202 = v280;
    v39 = v139;
LABEL_68:
    swift_bridgeObjectRetain();
    v230 = v202;
    v231 = v202;
    v232 = v299;
    sub_1BB569D10(v39, v231, v137);
    v299 = v232;
    if (v232)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      goto LABEL_84;
    }
    swift_bridgeObjectRelease_n();
    swift_release();
    v150 = v230;
    v149 = v274;
    goto LABEL_70;
  }
  v268 = v138 & 0x3FFFFFFFFFFFFFFFLL;
  v182 = *(_QWORD *)(v138 + 16);
  v181 = *(_QWORD *)(v138 + 24);
  v269 = v137;
  v267 = v181;
  v266 = v182;
  if (!(v182 >> 62))
  {
    v276 = v38;
    v203 = *(_QWORD *)(v182 + 24);
    v241 = *(_QWORD *)(v182 + 16);
    v240 = v203;
    v239 = *(_QWORD *)(v182 + 32);
    v238 = *(unsigned __int8 *)(v182 + 40);
    v243 = *(_QWORD *)(v182 + 48);
    v242 = *(_QWORD *)(v182 + 56);
    LODWORD(v244) = *(unsigned __int16 *)(v182 + 64);
    v204 = *(_QWORD *)(v182 + 80);
    v245 = *(_QWORD *)(v182 + 72);
    v246 = v204;
    v205 = *(_QWORD *)(v182 + 96);
    v247 = *(_QWORD *)(v182 + 88);
    v263 = v205;
    LODWORD(v264) = *(unsigned __int8 *)(v182 + 104);
    v265 = *(_QWORD *)(v182 + 112);
    *(_QWORD *)&v291 = v241;
    *((_QWORD *)&v291 + 1) = v203;
    *(_QWORD *)&v292 = v239;
    BYTE8(v292) = v238;
    *(_QWORD *)&v293 = v243;
    *((_QWORD *)&v293 + 1) = v242;
    LOWORD(v294) = v244;
    *((_QWORD *)&v294 + 1) = v245;
    v295 = __PAIR128__(v247, v204);
    v296 = v205;
    v297 = v264;
    v298 = v265;
    v206 = v280[3];
    v287 = v280[2];
    v288 = v206;
    v289 = v280[4];
    v290 = *((_QWORD *)v280 + 10);
    v207 = v280[1];
    v285 = *v280;
    v286 = v207;
    v281 = v42;
    v208 = v42;
    v282 = v41;
    v209 = v182;
    sub_1BA73B1CC(v208, v41, v43);
    v237 = v209 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v210 = v241;
    v211 = v240;
    v212 = v239;
    v213 = v238;
    sub_1BA60DF54(v241, v240, v239, v238);
    v214 = v243;
    v215 = v242;
    sub_1BA740E74(v243, v242, v244);
    sub_1BA60DEE4(v245);
    sub_1BA69C808(v247, v263, v264);
    sub_1BA895BA4(v265);
    v216 = v299;
    sub_1BA73D0A8();
    v299 = v216;
    if (!v216)
    {
      sub_1BA60DFC4(v210, v211, v212, v213);
      sub_1BA740460(v214, v215, v244);
      sub_1BA60DF1C(v245);
      sub_1BA69C828(v247, v263, v264);
      sub_1BA895BB8(v265);
      v41 = v282;
      v42 = v281;
      v39 = v284;
      v38 = v276;
LABEL_61:
      v227 = v267;
      goto LABEL_65;
    }
    sub_1BA60DFC4(v210, v211, v212, v213);
    sub_1BA740460(v214, v215, v244);
    sub_1BA60DF1C(v245);
    sub_1BA69C828(v247, v263, v264);
    sub_1BA895BB8(v265);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_89;
  }
  if (v182 >> 62 != 1)
  {
    v276 = v38;
    v217 = v182 & 0x3FFFFFFFFFFFFFFFLL;
    v218 = *(_QWORD *)(v182 + 24);
    *(_QWORD *)&v285 = *(_QWORD *)(v182 + 16);
    v219 = v285;
    v220 = v280;
    v221 = v280[3];
    v293 = v280[2];
    v294 = v221;
    v295 = v280[4];
    v296 = *((_QWORD *)v280 + 10);
    v222 = v280[1];
    v291 = *v280;
    v292 = v222;
    v281 = v42;
    v282 = v41;
    sub_1BA73B1CC(v42, v41, v43);
    v265 = v219 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v264 = v217;
    swift_retain();
    swift_bridgeObjectRetain();
    v223 = v284;
    v224 = v299;
    sub_1BA6466EC(v284, (uint64_t)&v291);
    v299 = v224;
    if (!v224)
    {
      swift_bridgeObjectRetain();
      v225 = v299;
      sub_1BB569D10(v223, v220, v218);
      v299 = v225;
      if (!v225)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        v41 = v282;
        v42 = v281;
        v38 = v276;
        v39 = v284;
        goto LABEL_61;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
LABEL_90:
      v236 = v281;
      goto LABEL_91;
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_89:
    swift_release();
    goto LABEL_90;
  }
  if (*(_BYTE *)(v182 + 64) == 2)
  {
    v285 = *(_OWORD *)((v182 & 0x3FFFFFFFFFFFFFFFLL) + 0x30);
    v226 = v299;
    nullsub_1(v284);
    v299 = v226;
    if (v226)
      goto LABEL_94;
    sub_1BA73B1CC(v42, v41, v283);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v227 = v267;
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BA73B1CC(v42, v41, v43);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v227 = v267;
    swift_bridgeObjectRetain();
  }
  v39 = v284;
LABEL_65:
  swift_bridgeObjectRetain();
  v228 = v280;
  v229 = v299;
  sub_1BB569D10(v39, v280, v227);
  v299 = v229;
  if (!v229)
  {
    swift_bridgeObjectRelease_n();
    swift_release();
    v202 = v228;
    goto LABEL_67;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
LABEL_84:
  swift_release();
  sub_1BA73B1B8(v42, v41, v283);
  swift_bridgeObjectRelease();
LABEL_93:
  swift_release();
}

void sub_1BA7D1EF8(uint64_t a1, __int128 *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char *v19;
  _QWORD v20[24];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v26 = a2;
  v27 = a1;
  v4 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  if (a3[2])
  {
    v20[17] = (char *)v20 - v8;
    v20[16] = v11;
    v20[18] = v10;
    v20[19] = v9;
    v20[23] = a3;
    swift_bridgeObjectRetain();
    v20[22] = a3 + 4;
    v12 = a3[7];
    v13 = a3[5];
    v28 = a3[4];
    v14 = v26[3];
    v31 = v26[2];
    v32 = v14;
    v33 = v26[4];
    *(_QWORD *)&v34 = *((_QWORD *)v26 + 10);
    v15 = v26[1];
    v16 = v28 & 0xFFFFFFFFFFFFFFFLL;
    v29 = *v26;
    v30 = v15;
    v25 = v12 & 0xFFFFFFFFFFFFFFFLL;
    swift_retain();
    v24 = v16;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v17 = v35;
    sub_1BA6F9BF4();
    v35 = v17;
    if (!v17)
    {
      v23 = v12;
      if (*(_BYTE *)(v13 + 41))
        v18 = 4;
      else
        v18 = 0;
      v19 = (char *)&loc_1BA7D20E8 + 4 * word_1BB927D58[v18 & 0xFFFFFFFC | (*(unsigned __int8 *)(v13 + 40) >> 2) & 3];
      v22 = 1;
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1BA7D710C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;

  v4 = v3;
  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    v6 = *(_QWORD *)(a3 + 40);
    swift_retain();
    swift_retain();
    sub_1BA6F9BF4();
    if (!v4)
      __asm { BR              X9 }
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1BA7DC880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

void sub_1BA7DC8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_BYTE *)(v4 + 40);
  v7 = *(_BYTE *)(v4 + 41);
  *(_OWORD *)(v3 - 80) = *(_OWORD *)(v4 + 16);
  *(_QWORD *)(v3 - 64) = v5;
  *(_BYTE *)(v3 - 56) = v6;
  *(_BYTE *)(v3 - 55) = v7;
  sub_1BA75DD88();
}

void sub_1BA7DC9A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B41D0)
  {
    type metadata accessor for FormatResource(255);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B41D0);
  }
}

uint64_t sub_1BA7DC9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA7DCA08(a1, a2, a3);
}

uint64_t sub_1BA7DCA08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD **v37;
  uint64_t v38;
  _QWORD *v39;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  __int128 v69;
  unsigned __int8 v70;
  ValueMetadata *v71;
  unint64_t v72;
  uint64_t v73;

  v61 = a1;
  v58 = a2;
  v50 = a3;
  v51 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v59 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  MEMORY[0x1E0C80A78](v9);
  v73 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v50 - v12;
  v55 = (uint64_t)&v50 - v12;
  v57 = type metadata accessor for GroupLayoutBindingContext();
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v54 = (uint64_t)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  sub_1BA4C2DD8(a1, v54, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v53 = sub_1BB86C8C8();
  v52 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v51);
  v71 = &type metadata for A6_V4;
  v20 = sub_1BA6B2E24();
  v72 = v20;
  LOBYTE(v69) = v15;
  *((_QWORD *)&v69 + 1) = v16;
  v70 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v63 = sub_1BB874734();
  v64 = v22;
  v67 = 95;
  v68 = 0xE100000000000000;
  v65 = 45;
  v66 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  v26 = v73;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v27 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v28 = v52;
  *v27 = v53;
  v27[1] = v28;
  sub_1BA4C010C((uint64_t)&v69, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v54, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v29, 0, 1, v57);
  v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4(v55, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v30, 0, 1, v60);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
  sub_1BA7C2538(v16, v17);
  v71 = &type metadata for A6_V4;
  v72 = v20;
  LOBYTE(v69) = v15;
  *((_QWORD *)&v69 + 1) = v16;
  v70 = v17;
  sub_1BA4C2DD8(v58, v26, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9D50, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v31 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedHeadline(0) - 8) + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
  sub_1BA7C26A0(v16, v17);
  v34 = v62;
  sub_1BA789374(0, 0, 0, 4, 1, 0, 0, 0, v33 + v32);
  if (v34)
  {
    sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    swift_release();
    *(_QWORD *)(v33 + 16) = 0;
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
  }
  else
  {
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = 4;
    sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    v36 = swift_allocObject();
    v60 = v36;
    *(_QWORD *)(v36 + 16) = MEMORY[0x1E0DEE9D8];
    v37 = (_QWORD **)(v36 + 16);
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = sub_1BA7F069C;
    *(_QWORD *)(v38 + 24) = v35;
    swift_beginAccess();
    v39 = *v37;
    v62 = v35;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v37 = v39;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v39 = sub_1BA7892A0(0, v39[2] + 1, 1, v39);
      *v37 = v39;
    }
    v42 = v39[2];
    v41 = v39[3];
    if (v42 >= v41 >> 1)
    {
      v39 = sub_1BA7892A0((_QWORD *)(v41 > 1), v42 + 1, 1, v39);
      *v37 = v39;
    }
    v39[2] = v42 + 1;
    v43 = &v39[2 * v42];
    v43[4] = sub_1BA7F05A8;
    v43[5] = v38;
    swift_endAccess();
    swift_release();
    v45 = sub_1BA7E2658(0, 4, 0, 0, v60, 0, 0, 0, 0);
    swift_release();
    v63 = v33;
    sub_1BA7DD6A0(v45);
    v46 = v63;
    v47 = type metadata accessor for A6_V4.Bound();
    v48 = v50;
    v50[3] = v47;
    v48[4] = sub_1BA4A2870(&qword_1ED3B8F10, (uint64_t (*)(uint64_t))type metadata accessor for A6_V4.Bound, (uint64_t)&unk_1BB910A48);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v48);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v69, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v73, (uint64_t)boxed_opaque_existential_0 + *(int *)(v47 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v47 + 28)) = v46;
  }
  return result;
}

uint64_t type metadata accessor for A6_V4.Bound()
{
  uint64_t result;

  result = qword_1ED3B8F18;
  if (!qword_1ED3B8F18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA7DD098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA7DD0AC(a1, a2, a3);
}

uint64_t sub_1BA7DD0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  _QWORD *v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  __int128 v67;
  unsigned __int8 v68;
  ValueMetadata *v69;
  unint64_t v70;
  uint64_t v71;

  v60 = a1;
  v56 = a2;
  v48 = a3;
  v49 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v57 = *(_QWORD *)(v9 - 8);
  v58 = v9;
  MEMORY[0x1E0C80A78](v9);
  v71 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v48 - v12;
  v55 = type metadata accessor for GroupLayoutBindingContext();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v52 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v53 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  sub_1BA4C2DD8(a1, v52, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v51 = sub_1BB86C8C8();
  v50 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v49);
  v69 = &type metadata for A6_V3;
  v20 = sub_1BA7DD6B4();
  v70 = v20;
  LOBYTE(v67) = v15;
  *((_QWORD *)&v67 + 1) = v16;
  v68 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v61 = sub_1BB874734();
  v62 = v22;
  v65 = 95;
  v66 = 0xE100000000000000;
  v63 = 45;
  v64 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v50;
  *v26 = v51;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v67, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  v29 = v71;
  sub_1BA5193C4(v52, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v28, 0, 1, v55);
  v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v30, 0, 1, v58);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
  sub_1BA7C2538(v16, v17);
  v69 = &type metadata for A6_V3;
  v70 = v20;
  LOBYTE(v67) = v53;
  *((_QWORD *)&v67 + 1) = v16;
  v68 = v17;
  sub_1BA4C2DD8(v56, v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  v31 = v59;
  v32 = sub_1BA7E1F18((uint64_t)&unk_1E7269C50, 0, 0, 0, 4, 0, 0, 0);
  if (v31)
  {
    swift_release();
    sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v67);
  }
  else
  {
    v59 = v32;
    v33 = swift_allocObject();
    *(_QWORD *)(v33 + 16) = 4;
    sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    v34 = swift_allocObject();
    *(_QWORD *)(v34 + 16) = MEMORY[0x1E0DEE9D8];
    v35 = (_QWORD *)(v34 + 16);
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = sub_1BA7F069C;
    *(_QWORD *)(v36 + 24) = v33;
    swift_beginAccess();
    v37 = *(_QWORD **)(v34 + 16);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v34 + 16) = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v37 = sub_1BA7892A0(0, v37[2] + 1, 1, v37);
      *v35 = v37;
    }
    v40 = v37[2];
    v39 = v37[3];
    if (v40 >= v39 >> 1)
    {
      v37 = sub_1BA7892A0((_QWORD *)(v39 > 1), v40 + 1, 1, v37);
      *v35 = v37;
    }
    v41 = v48;
    v37[2] = v40 + 1;
    v42 = &v37[2 * v40];
    v42[4] = sub_1BA7F05B0;
    v42[5] = v36;
    swift_endAccess();
    swift_release();
    v44 = sub_1BA7E2658(0, 2, 0, 0, v34, 0, 0, 0, 0);
    swift_release();
    v61 = v59;
    sub_1BA7DD6A0(v44);
    v45 = v61;
    v46 = type metadata accessor for A6_V3.Bound();
    v41[3] = v46;
    v41[4] = sub_1BA4A2870(&qword_1ED3B8E08, (uint64_t (*)(uint64_t))type metadata accessor for A6_V3.Bound, (uint64_t)&unk_1BB953E70);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v41);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v67, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v71, (uint64_t)boxed_opaque_existential_0 + *(int *)(v46 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v46 + 28)) = v45;
  }
  return result;
}

uint64_t sub_1BA7DD6A0(uint64_t a1)
{
  return sub_1BA6BABB4(a1, (uint64_t (*)(void))sub_1BA78A220, type metadata accessor for FeedHeadline);
}

unint64_t sub_1BA7DD6B4()
{
  unint64_t result;

  result = qword_1ED3B8F00;
  if (!qword_1ED3B8F00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB953E0C, &type metadata for A6_V3);
    atomic_store(result, (unint64_t *)&qword_1ED3B8F00);
  }
  return result;
}

uint64_t sub_1BA7DD6F8@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A6_V3.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t type metadata accessor for A6_V3.Bound()
{
  uint64_t result;

  result = qword_1ED3B8E10;
  if (!qword_1ED3B8E10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA7DD810@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA7DD824(a1, a2, a3);
}

uint64_t sub_1BA7DD824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  __int128 v68;
  unsigned __int8 v69;
  ValueMetadata *v70;
  unint64_t v71;
  uint64_t v72;

  v57 = a2;
  v50 = a3;
  v51 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  MEMORY[0x1E0C80A78](v9);
  v60 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - v12;
  v56 = type metadata accessor for GroupLayoutBindingContext();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v54 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v61 = a1;
  sub_1BA4C2DD8(a1, v54, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v53 = sub_1BB86C8C8();
  v52 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v51);
  v70 = &type metadata for A6_V1;
  v20 = sub_1BA7DDEB8();
  v71 = v20;
  LOBYTE(v68) = v15;
  *((_QWORD *)&v68 + 1) = v16;
  LOBYTE(v6) = v17;
  v69 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  v22 = v16;
  v23 = v16;
  LOBYTE(v16) = v6;
  sub_1BA7C26A0(v22, v6);
  v62 = sub_1BB874734();
  v63 = v24;
  v66 = 95;
  v67 = 0xE100000000000000;
  v64 = 45;
  v65 = 0xE100000000000000;
  sub_1BA7114A0();
  v25 = sub_1BB873B04();
  v27 = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v25;
  *(_QWORD *)(v21 + 24) = v27;
  v28 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v29 = v52;
  *v28 = v53;
  v28[1] = v29;
  sub_1BA4C010C((uint64_t)&v68, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v54, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v30, 0, 1, v56);
  v31 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v31, 0, 1, v59);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
  sub_1BA7C2538(v23, v16);
  v70 = &type metadata for A6_V1;
  v71 = v20;
  v32 = v60;
  LOBYTE(v68) = v15;
  *((_QWORD *)&v68 + 1) = v23;
  v69 = v16;
  sub_1BA4C2DD8(v57, v60, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = 4;
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = MEMORY[0x1E0DEE9D8];
  v35 = (_QWORD *)(v34 + 16);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_1BA7F069C;
  *(_QWORD *)(v36 + 24) = v33;
  swift_beginAccess();
  v37 = *(_QWORD **)(v34 + 16);
  sub_1BA7C26A0(v23, v16);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v34 + 16) = v37;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v37 = sub_1BA7892A0(0, v37[2] + 1, 1, v37);
    *v35 = v37;
  }
  v40 = v37[2];
  v39 = v37[3];
  if (v40 >= v39 >> 1)
  {
    v37 = sub_1BA7892A0((_QWORD *)(v39 > 1), v40 + 1, 1, v37);
    *v35 = v37;
  }
  v37[2] = v40 + 1;
  v41 = &v37[2 * v40];
  v41[4] = sub_1BA7F05A8;
  v41[5] = v36;
  swift_endAccess();
  swift_release();
  v42 = v72;
  v43 = sub_1BA7E2658(1, 6, 0, 0, v34, 0, 0, 0, 0);
  if (v42)
  {
    sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
  }
  else
  {
    v45 = v43;
    swift_release();
    v46 = type metadata accessor for A6_V1.Bound();
    v47 = v50;
    v50[3] = v46;
    v47[4] = sub_1BA4A2870(&qword_1ED3B8D30, (uint64_t (*)(uint64_t))type metadata accessor for A6_V1.Bound, (uint64_t)&unk_1BB89A9C8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v47);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v68, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v32, (uint64_t)boxed_opaque_existential_0 + *(int *)(v46 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v46 + 28)) = v45;
  }
  return result;
}

uint64_t sub_1BA7DDDA0@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A6_V1.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t type metadata accessor for A6_V1.Bound()
{
  uint64_t result;

  result = qword_1ED3B8D38;
  if (!qword_1ED3B8D38)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA7DDEB8()
{
  unint64_t result;

  result = qword_1ED3B8DE0;
  if (!qword_1ED3B8DE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A964, &type metadata for A6_V1);
    atomic_store(result, (unint64_t *)&qword_1ED3B8DE0);
  }
  return result;
}

void sub_1BA7DDEFC(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[5];

  sub_1BA6D4F28(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SharedItem();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[3] = type metadata accessor for FormatNodeBinderContext();
  v12[4] = &off_1E7304BB8;
  v12[0] = a2;
  swift_retain();
  sub_1BA6D4C0C(v12, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (v2)
  {
    sub_1BB86EAB8();

  }
  else
  {
    sub_1BAF52AB4((uint64_t)v10, (uint64_t)v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6D4F28);
    sub_1BB86EB0C();
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
  }
}

unint64_t sub_1BA7DE08C(unint64_t result, unint64_t a2)
{
  if ((result & 0xFE) != 0xC)
    return sub_1BA6F5D74(a2);
  return result;
}

BOOL sub_1BA7DE0A4(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  return sub_1BA7DE0C4(a1, a2, a3, a4, (void (*)(uint64_t, unint64_t))sub_1BA7DE378);
}

BOOL sub_1BA7DE0C4(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t, unint64_t))
{
  _BOOL8 v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  BOOL v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  unint64_t v25;
  unint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  BOOL v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t, unint64_t);
  unint64_t v34;

  v32 = a2;
  v33 = a5;
  v34 = a4;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v30 - v12;
  v14 = sub_1BB86C8B0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v30 - v20;
  if (a3 == 12)
  {
    return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v14, v19) == 1;
  }
  else if (a3 == 13)
  {
    return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v15 + 48))(a1, 1, v14, v19) != 1;
  }
  else
  {
    sub_1BA76D70C(a1, (uint64_t)v13);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v23(v13, 1, v14) == 1)
    {
      sub_1BA502AD0((uint64_t)v13, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      return 0;
    }
    else
    {
      v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v31(v21, v13, v14);
      v25 = v34;
      sub_1BA739250(v34);
      v33(v32, v25);
      if (v5)
      {
        v26 = v25;
        v22 = v5;
        sub_1BA7DE08C(a3, v26);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
      }
      else
      {
        v27 = v31;
        v33 = 0;
        sub_1BA7DE08C(a3, v25);
        if (v23(v10, 1, v14) == 1)
        {
          (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
          sub_1BA502AD0((uint64_t)v10, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          return 0;
        }
        else
        {
          v27(v17, v10, v14);
          sub_1BA7EE044((uint64_t)v21, (uint64_t)v17, a3);
          v22 = v28;
          v29 = *(void (**)(char *, uint64_t))(v15 + 8);
          v29(v17, v14);
          v29(v21, v14);
        }
      }
    }
  }
  return v22;
}

void sub_1BA7DE378(uint64_t a1, uint64_t a2)
{
  sub_1BA7DE3A4(a1, a2);
}

void sub_1BA7DE3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_1BB86CAD8();
  MEMORY[0x1E0C80A78](v3);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X10 }
}

uint64_t sub_1BA7DE4E8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(unsigned __int8 *)(v0 + 40);
  v8 = *(_QWORD *)(v3 - 104);
  v9 = *(_QWORD *)(v3 - 96);
  result = v1(*(_QWORD *)(v3 - 120), v4, v5, v6, v7);
  if (!v9)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 56))(v8, 0, 1, v2);
  return result;
}

uint64_t sub_1BA7DE870(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF52F0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA7B6C28();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatCommandOpenURL();
    sub_1BA4A2870(&qword_1ED39B650, (uint64_t (*)(uint64_t))type metadata accessor for FormatCommandOpenURL, (uint64_t)&protocol conformance descriptor for FormatCommandOpenURL);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA7DE9FC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF52F0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA7B6C28();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B50D0, (uint64_t (*)(void))sub_1BA82A570, (uint64_t)&type metadata for FormatButtonNodeAction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BA7EB530();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA7DEB88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatOptionsNodeStatementValue();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatStateMachineDefinition.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _BYTE v31[40];
  char *v32;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v29 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v32 = (char *)&v28 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - v10;
  sub_1BA7DF3EC(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v30 = v1[1];
  sub_1BA7DEEF0((uint64_t)(v1 + 2), (uint64_t)v31);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA611314();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatStateMachineDefinition, v19, v16, (uint64_t)&type metadata for FormatStateMachineDefinition, (uint64_t)&type metadata for FormatStateMachineDefinition.CodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v17, (uint64_t)v14, v18, (uint64_t)&off_1E734BD00);
  v20 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v20 != -1)
    swift_once();
  v21 = sub_1BB86EB84();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C38);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  v23(v11, v22, v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA7DF0F4(v15, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v24 = (uint64_t)v32;
    v23(v32, v22, v21);
    swift_storeEnumTagMultiPayload();
    v25 = swift_bridgeObjectRetain();
    sub_1BA7DEF2C(v25, 1, v24, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v26 = (uint64_t)v29;
    v23(v29, v22, v21);
    swift_storeEnumTagMultiPayload();
    sub_1BA74E740((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA7261E0);
    sub_1BA7DF4D4((uint64_t)v31, 2, v26, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    sub_1BA74E740((uint64_t)v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6C1F54);
  }
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA7DF3EC);
}

uint64_t sub_1BA7DEEF0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_1BA7DEF2C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v19 = a1;
  v18 = a2;
  sub_1BA7DF3EC(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = sub_1BAEE4F78;
  v17[5] = v15;
  swift_retain();
  sub_1BA7DF264(a3, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v17);
  if (!v6)
  {
    sub_1BA4CDF6C(0, &qword_1ED39C190, (uint64_t (*)(void))sub_1BA611314, (uint64_t)&type metadata for FormatStateMachineDefinition.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA7DF46C();
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9548, (uint64_t)&type metadata for FormatStateMachineEvent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA7DF07C();
    sub_1BB874464();
  }
  return swift_release();
}

unint64_t sub_1BA7DF07C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BF00;
  if (!qword_1ED39BF00)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9548, (uint64_t)&type metadata for FormatStateMachineEvent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEE4FB0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BF00);
  }
  return result;
}

uint64_t sub_1BA7DF0F4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  char v19;
  uint64_t v20;

  v20 = a1;
  v19 = a2;
  sub_1BA7DF3EC(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = sub_1BAEE4F78;
  v18[5] = v15;
  swift_retain();
  sub_1BA7DF264(a3, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  if (!v6)
  {
    sub_1BA4CDF6C(0, &qword_1ED39C190, (uint64_t (*)(void))sub_1BA611314, (uint64_t)&type metadata for FormatStateMachineDefinition.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA7DF46C();
    v16 = MEMORY[0x1E0DEA968];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v16, MEMORY[0x1E0DEA970]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BA7DF264(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  _BYTE v19[16];
  uint64_t (*v20)();
  uint64_t v21;
  _QWORD v22[4];

  sub_1BA7DF3EC(0);
  v10 = v9;
  v11 = (uint64_t *)(v4 + *(int *)(v9 + 44));
  v12 = *v11;
  v13 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = v12;
  *(_QWORD *)(v14 + 32) = v13;
  sub_1BA4CDF6C(0, &qword_1ED39C190, (uint64_t (*)(void))sub_1BA611314, (uint64_t)&type metadata for FormatStateMachineDefinition.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  sub_1BA7DF46C();
  swift_retain();
  v15 = sub_1BB87444C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_BYTE *)(v16 + 24) = a2;
  sub_1BA4C010C(v4 + *(int *)(v10 + 36), (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v20 = sub_1BAEE4F84;
  v21 = v16;
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = sub_1BAEE4F78;
  v18[5] = v14;
  sub_1BA6EC658(a1, (uint64_t)sub_1BAEFCC04, (uint64_t)v19, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

void sub_1BA7DF3EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3A9558)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C190, (uint64_t (*)(void))sub_1BA611314, (uint64_t)&type metadata for FormatStateMachineDefinition.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    v3 = v2;
    v4 = sub_1BA7DF46C();
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3A9558);
  }
}

unint64_t sub_1BA7DF46C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB6F8;
  if (!qword_1ED3AB6F8)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C190, (uint64_t (*)(void))sub_1BA611314, (uint64_t)&type metadata for FormatStateMachineDefinition.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB6F8);
  }
  return result;
}

uint64_t sub_1BA7DF4D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  _BYTE v19[40];

  sub_1BA7DEEF0(a1, (uint64_t)v19);
  v18 = a2;
  sub_1BA7DF3EC(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = sub_1BAEE4F78;
  v17[5] = v15;
  swift_retain();
  sub_1BA7DF264(a3, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v17);
  if (!v6)
  {
    sub_1BA4CDF6C(0, &qword_1ED39C190, (uint64_t (*)(void))sub_1BA611314, (uint64_t)&type metadata for FormatStateMachineDefinition.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA7DF46C();
    sub_1BA7E41A0();
    sub_1BB874464();
  }
  return swift_release();
}

_QWORD *initializeWithCopy for FormatSlotDefinitionItemSet(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  v8 = a2 + 3;
  v7 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    v9 = a2[4];
    a1[3] = v7;
    a1[4] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 3) = *v8;
  }
  v10 = *(int *)(a3 + 36);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BB86E710();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1BA74E57C();
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t FormatSlotDefinitionItemSet.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  _DWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  _DWORD *v48;
  __int128 v49;
  char v50;

  v44 = a2;
  sub_1BA74E57C();
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3C0520, (uint64_t (*)(void))sub_1BA7DFD50, (uint64_t)&type metadata for FormatSlotDefinitionItemSet.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v39 - v8;
  v10 = type metadata accessor for FormatSlotDefinitionItemSet();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v12 + 3) = 0;
  v13 = v12 + 24;
  v48 = v12;
  *((_QWORD *)v12 + 4) = 0;
  v14 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1BA7DFD50();
  v15 = v47;
  sub_1BB87468C();
  if (v15)
  {
    v20 = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    return sub_1BA5DCC4C(*((_QWORD *)v20 + 3));
  }
  v16 = (uint64_t)v45;
  v47 = v10;
  LOBYTE(v49) = 0;
  v17 = v9;
  v18 = sub_1BB874074();
  v19 = v6;
  if ((v18 & 0x100000000) != 0)
    v22 = 1;
  else
    v22 = v18;
  v23 = v48;
  *v48 = v22;
  LOBYTE(v49) = 1;
  v24 = sub_1BB874074();
  v42 = v22;
  if ((v24 & 0x100000000) != 0)
    v25 = 0x7FFFFFFFLL;
  else
    v25 = v24;
  v23[1] = v25;
  sub_1BA4CDF6C(0, &qword_1ED3B9690, (uint64_t (*)(void))sub_1BA835484, (uint64_t)&type metadata for FormatItemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
  v50 = 2;
  sub_1BA7DFD94();
  v43 = v17;
  sub_1BB8740D4();
  v41 = v25;
  v26 = v49;
  *((_QWORD *)v23 + 1) = v49;
  sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v50 = 3;
  sub_1BA7DFE14((unint64_t *)&qword_1ED3B9588, &qword_1ED3B7880, (uint64_t)&protocol conformance descriptor for FormatPropertyDefinition, MEMORY[0x1E0DEAF40]);
  v27 = v43;
  sub_1BB874068();
  v28 = MEMORY[0x1E0DEE9D8];
  if ((_QWORD)v49)
    v28 = v49;
  *((_QWORD *)v23 + 2) = v28;
  v50 = 4;
  sub_1BA7DFEAC();
  v40 = 0;
  sub_1BB874068();
  *v13 = v49;
  sub_1BB86E710();
  LOBYTE(v49) = 5;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  sub_1BA5193C4(v16, (uint64_t)v48 + *(int *)(v47 + 36), (uint64_t (*)(_QWORD))sub_1BA74E57C);
  v33 = v42;
  if ((v42 & 0x80000000) != 0)
  {
    sub_1BA98D1F0();
    swift_allocError();
    *v35 = v33;
    v35[1] = 0;
    v35[2] = 0;
    v35[3] = 0;
    v36 = 0x3000000000000000;
    goto LABEL_25;
  }
  if ((int)v41 < (int)v42)
  {
    v34 = v42 | (v41 << 32);
    sub_1BA98D1F0();
    swift_allocError();
    *v35 = v34;
    v35[1] = 0;
    v35[2] = 0;
    v35[3] = 0;
    v36 = 0x5000000000000000;
LABEL_25:
    v35[4] = v36;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v19);
LABEL_13:
    v29 = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    v30 = v48;
    swift_bridgeObjectRelease();
    if (!v29)
      swift_bridgeObjectRelease();
    sub_1BA5DCC4C(*((_QWORD *)v30 + 3));
    v31 = (uint64_t)v30 + *(int *)(v47 + 36);
    v32 = (uint64_t (*)(_QWORD))sub_1BA74E57C;
    return sub_1BA4A2E80(v31, v32);
  }
  if ((int)v41 <= 0)
  {
    sub_1BA98D1F0();
    swift_allocError();
    *(_OWORD *)v35 = 0u;
    *((_OWORD *)v35 + 1) = 0u;
    v36 = 0x4000000000000000;
    goto LABEL_25;
  }
  if (!*(_QWORD *)(v26 + 16))
  {
    sub_1BA98D1F0();
    swift_allocError();
    *(_OWORD *)v38 = 0u;
    *(_OWORD *)(v38 + 16) = 0u;
    *(_QWORD *)(v38 + 32) = 0xF000000000000000;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v19);
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v19);
  v37 = v48;
  sub_1BA4C2DD8((uint64_t)v48, v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  v31 = (uint64_t)v37;
  v32 = (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet;
  return sub_1BA4A2E80(v31, v32);
}

uint64_t type metadata accessor for FormatSlotDefinitionItemSet()
{
  uint64_t result;

  result = qword_1ED3CC2C0;
  if (!qword_1ED3CC2C0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BA7DFD50()
{
  unint64_t result;

  result = qword_1ED3BF8C0;
  if (!qword_1ED3BF8C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB901CEC, &type metadata for FormatSlotDefinitionItemSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3BF8C0);
  }
  return result;
}

unint64_t sub_1BA7DFD94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9698;
  if (!qword_1ED3B9698)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B9690, (uint64_t (*)(void))sub_1BA835484, (uint64_t)&type metadata for FormatItemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v2 = v1;
    v3 = sub_1BA5B7D34();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3D8], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9698);
  }
  return result;
}

uint64_t sub_1BA7DFE14(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v10 = v9;
    v11 = sub_1BA4A2870(a2, type metadata accessor for FormatPropertyDefinition, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BA7DFEAC()
{
  unint64_t result;

  result = qword_1ED3CEA78;
  if (!qword_1ED3CEA78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotDefinitionItemSetAuxiliary, &type metadata for FormatSlotDefinitionItemSetAuxiliary);
    atomic_store(result, (unint64_t *)&qword_1ED3CEA78);
  }
  return result;
}

uint64_t sub_1BA7DFEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, &qword_1ED3B8010, (unint64_t *)&unk_1ED3B8000, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA7DFF54(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _OWORD *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[5];
  uint64_t v15;
  uint64_t v16;

  v6 = v3;
  v8 = *(_OWORD *)(a2 + 48);
  v14[2] = *(_OWORD *)(a2 + 32);
  v14[3] = v8;
  v14[4] = *(_OWORD *)(a2 + 64);
  v15 = *(_QWORD *)(a2 + 80);
  v9 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v9;
  swift_beginAccess();
  v10 = *(_QWORD *)(v3 + 48);
  swift_bridgeObjectRetain();
  a3(a1, v14, v10);
  if (v4)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if ((~*(_QWORD *)(v6 + 64) & 0xF000000000000007) != 0)
    {
      v16 = *(_QWORD *)(v6 + 64);
      sub_1BA755CC8();
    }
    v11 = *(_QWORD *)(v6 + 72);
    if (v11)
    {
      v12 = *(_QWORD *)(v11 + 16);
      if (v12)
      {
        v13 = swift_bridgeObjectRetain() + 64;
        do
        {
          v16 = *(_QWORD *)(v13 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA7547AC();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v13 += 40;
          --v12;
        }
        while (v12);
        swift_bridgeObjectRelease();
      }
    }
    if (*(unsigned __int8 *)(v6 + 184) != 254)
    {
      v16 = *(_QWORD *)(v6 + 136);
      sub_1BA7547AC();
    }
    if ((~*(_QWORD *)(v6 + 192) & 0xF000000000000007) != 0)
    {
      v16 = *(_QWORD *)(v6 + 192);
      sub_1BA7547AC();
    }
  }
}

uint64_t sub_1BA7E0184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA7E0198(a1, a2, a3);
}

uint64_t sub_1BA7E0198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t result;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char v33;
  uint64_t v34;

  v21 = *(_QWORD *)(a3 + 16);
  if (!v21)
    return result;
  v22 = a3 + 32;
  swift_bridgeObjectRetain();
  v4 = 0;
  while (1)
  {
    v5 = (__int128 *)(v22 + 168 * v4);
    v6 = v5[9];
    v31 = v5[8];
    v32 = v6;
    v33 = *((_BYTE *)v5 + 160);
    v7 = v5[5];
    v27 = v5[4];
    v28 = v7;
    v8 = v5[7];
    v29 = v5[6];
    v30 = v8;
    v9 = v5[1];
    v23 = *v5;
    v24 = v9;
    v10 = v5[3];
    v25 = v5[2];
    v26 = v10;
    if ((~*((_QWORD *)&v9 + 1) & 0xF000000000000007) != 0)
      break;
    sub_1BAC6926C((uint64_t)&v23);
LABEL_8:
    if ((_QWORD)v25)
    {
      v11 = *(_QWORD *)(v25 + 16);
      if (v11)
      {
        v19 = v4;
        v12 = swift_bridgeObjectRetain() + 64;
        while (1)
        {
          v34 = *(_QWORD *)(v12 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA7547AC();
          if (v3)
            break;
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v12 += 40;
          if (!--v11)
          {
            swift_bridgeObjectRelease();
            v4 = v19;
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
LABEL_20:
        sub_1BAC69354((uint64_t)&v23);
        return swift_bridgeObjectRelease();
      }
    }
LABEL_14:
    v13 = v32;
    if (v32 != 254)
    {
      v18 = v31;
      v20 = v30;
      v14 = v29;
      v15 = v28;
      v16 = v27;
      v34 = v29;
      swift_retain();
      sub_1BA7547AC();
      sub_1BA6E8A78(v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v20, *((uint64_t *)&v20 + 1), v18, *((uint64_t *)&v18 + 1), v13);
      if (v3)
        goto LABEL_20;
    }
    if ((~*((_QWORD *)&v32 + 1) & 0xF000000000000007) != 0)
    {
      v34 = *((_QWORD *)&v32 + 1);
      sub_1BA7547AC();
      sub_1BAC69354((uint64_t)&v23);
      if (v3)
        return swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAC69354((uint64_t)&v23);
    }
    if (++v4 == v21)
      return swift_bridgeObjectRelease();
  }
  v34 = *((_QWORD *)&v24 + 1);
  sub_1BAC6926C((uint64_t)&v23);
  sub_1BA755CC8();
  if (!v3)
    goto LABEL_8;
  sub_1BAC69354((uint64_t)&v23);
  return swift_bridgeObjectRelease();
}

uint64_t FormatComputedInvalidation.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v2);
  v3 = *(_QWORD *)(v0 + 8);
  v4 = *(__int16 *)(v0 + 24);
  if (v4 < 0)
    __asm { BR              X11 }
  result = *(_QWORD *)v0;
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v6)
  {
    v11 = *(_WORD *)(v0 + 24);
    v10 = *(_QWORD *)(v0 + 16);
    v7 = swift_bridgeObjectRetain();
    v8 = (_BYTE *)(v7 + 40);
    do
    {
      if ((*v8 & 1) == 0)
      {
        v9 = *((_QWORD *)v8 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)();
        sub_1BA72C46C(v9, 0);
        sub_1BA72C46C(v9, 0);
        if (v1)
          break;
      }
      v8 += 16;
      --v6;
    }
    while (v6);
    return sub_1BA7E0800(v7, v3, v10, v11);
  }
  return result;
}

uint64_t sub_1BA7E0800(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a4 < 0)
    return sub_1BAC65170(a1, a2, a3, a4, HIBYTE(a4) & 1, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_1BA7E0830(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA7E0840(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int16 *)(v1 + 40));
}

uint64_t sub_1BA7E0840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  char v17;
  _BYTE v19[16];

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v10);
  v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = &v19[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA690C00(a2, a3, a4, a5);
  sub_1BA7E0D74(a1, a2, a3, a4, a5, (uint64_t)v16);
  sub_1BA5A7EF8(a2, a3, a4, a5);
  v19[7] = BYTE1(a5);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v12, v16, v13);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  sub_1BA7E09D0();
  LOBYTE(a5) = v17;
  sub_1BA7F0A80((uint64_t)v12);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
  return a5 & 1;
}

void sub_1BA7E09D0()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

BOOL sub_1BA7E0AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v0) == 1;
}

id sub_1BA7E0BDC()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  id v6;
  char **v7;
  char v8;
  void *v9;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (!v1)
    return 0;
  v2 = sub_1BB8729A0();
  v4 = v3;

  v5 = v2 == 0x6C7070612E6D6F63 && v4 == 0xEE007377656E2E65;
  if (v5 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v7 = &selRef_nss_isNewsURL;
LABEL_15:
    v9 = (void *)sub_1BB86C58C();
    v6 = objc_msgSend(v9, *v7);

    return v6;
  }
  if (v2 == 0xD000000000000010 && v4 == 0x80000001BB985580)
  {
    swift_bridgeObjectRelease();
LABEL_14:
    v7 = &selRef_nss_isStocksURL;
    goto LABEL_15;
  }
  v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  v6 = 0;
  if ((v8 & 1) != 0)
    goto LABEL_14;
  return v6;
}

void sub_1BA7E0D74(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB49AD3C(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack, (uint64_t)sub_1BA711ECC, a6, (uint64_t)sub_1BA7E0DB4);
}

void sub_1BA7E0DB4(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BA7E0DE0(a1, a2, a3, a4, a5, (uint64_t)sub_1BA7F10DC, a6);
}

void sub_1BA7E0DE0(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD v38[18];
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;

  v38[10] = a6;
  v38[12] = a5;
  v38[5] = a3;
  v38[4] = a2;
  v38[3] = a7;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v41 = (char *)v38 - v11;
  v39 = sub_1BB86BFF8();
  v38[17] = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v38[9] = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v38[14] = (char *)v38 - v14;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v15);
  v38[8] = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v42 = (char *)v38 - v18;
  MEMORY[0x1E0C80A78](v19);
  v38[6] = (char *)v38 - v20;
  MEMORY[0x1E0C80A78](v21);
  v38[2] = (char *)v38 - v22;
  MEMORY[0x1E0C80A78](v23);
  v45 = (char *)v38 - v24;
  MEMORY[0x1E0C80A78](v25);
  v26 = sub_1BB86C67C();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v38[7] = (char *)v38 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v43 = (char *)v38 - v30;
  MEMORY[0x1E0C80A78](v31);
  MEMORY[0x1E0C80A78](v32);
  MEMORY[0x1E0C80A78](v33);
  v44 = (char *)v38 - v34;
  MEMORY[0x1E0C80A78](v35);
  v36 = (char *)sub_1BA7E1118 + 4 * word_1BB9081D4[a1 >> 60];
  v38[11] = a4;
  v40 = v27;
  v38[16] = v37;
  __asm { BR              X10 }
}

uint64_t sub_1BA7E1118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD v46[16];

  *(_QWORD *)(v7 - 432) = v0;
  *(_QWORD *)(v7 - 184) = v4;
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  sub_1BA747A10(v7 - 152, v7 - 184);
  v8 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v7 - 264) = v8;
  if (!v8)
  {
LABEL_22:
    sub_1BA76EAE0((_OWORD *)(v7 - 184), (_OWORD *)(v7 - 120));
    __swift_destroy_boxed_opaque_existential_1(v7 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v7 - 120, v7 - 184);
    v34 = *(_QWORD *)(v7 - 400);
    v35 = swift_dynamicCast();
    v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
    if ((v35 & 1) != 0)
    {
      v36(v34, 0, 1, v2);
      __swift_destroy_boxed_opaque_existential_1(v7 - 120);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
      v38 = *(_QWORD *)(v7 - 432);
      v37(v38, v34, v2);
      return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v37)(*(_QWORD *)(v7 - 424), v38, v2);
    }
    else
    {
      v36(v34, 1, 1, v2);
      sub_1BA6AA068(v34, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v41 = v40;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v7 - 120), *(_QWORD *)(v7 - 96));
      swift_getDynamicType();
      v42 = *(_QWORD *)(v7 - 408);
      swift_bridgeObjectRetain();
      v43 = sub_1BB874734();
      *v41 = *(_QWORD *)(v7 - 416);
      v41[1] = v42;
      v41[2] = 5001813;
      v41[3] = 0xE300000000000000;
      v41[4] = v43;
      v41[5] = v44;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1(v7 - 120);
    }
  }
  *(_QWORD *)(v7 - 328) = v3;
  swift_bridgeObjectRetain();
  v9 = 0;
  *(_QWORD *)(v7 - 336) = MEMORY[0x1E0DEE9B8] + 8;
  v10 = *(_QWORD *)(v7 - 352);
  v11 = *(_QWORD *)(v7 - 280);
  *(_QWORD *)(v7 - 344) = v5;
  while (1)
  {
    v14 = *(_QWORD *)(v6 + 8 * v9 + 32);
    if (v14)
      break;
    *(_QWORD *)(v7 - 248) = 0;
    *(_QWORD *)(v7 - 240) = 0xE000000000000000;
    sub_1BB873E34();
    v12 = *(_QWORD *)(v7 - 248);
    v13 = *(_QWORD *)(v7 - 240);
    *(_QWORD *)(v7 - 192) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 - 216) = v12;
    *(_QWORD *)(v7 - 208) = v13;
LABEL_4:
    ++v9;
    __swift_destroy_boxed_opaque_existential_1(v7 - 184);
    sub_1BA76EAE0((_OWORD *)(v7 - 216), (_OWORD *)(v7 - 184));
    if (*(_QWORD *)(v7 - 264) == v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  sub_1BA747A10(v7 - 184, v7 - 248);
  swift_bridgeObjectRetain();
  v15 = swift_dynamicCast();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v15)
  {
    v16(v11, 0, 1, v2);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
    if (v17(v11, 1, v2) == 1)
      goto LABEL_26;
    v18 = v11;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
    v20 = v14;
    v21 = *(_QWORD *)(v7 - 272);
    v19(v21, v18, v2);
    *(_QWORD *)(v7 - 192) = v2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v7 - 216));
    *(_QWORD *)(v7 - 256) = v20;
    *(_QWORD *)(v7 - 248) = v10;
    if (*(_QWORD *)(v20 + 16))
    {
      *(_QWORD *)(v7 - 288) = boxed_opaque_existential_0;
      v23 = *(_QWORD *)(v7 - 344);
      sub_1BB86BF74();
      v24 = *(_QWORD *)(v7 - 312);
      v25 = *(_QWORD *)(v7 - 304);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v23, 1, v25) != 1)
      {
        v27 = *(_QWORD *)(v7 - 376);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v27, v23, v25);
        v28 = sub_1BB86BF38();
        if (v28)
          v29 = v28;
        else
          v29 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v28);
        v46[2] = v7 - 248;
        v30 = *(_QWORD *)(v7 - 328);
        v31 = sub_1BA7F0E2C(*(void (**)(_QWORD))(v7 - 368), (uint64_t)v46, *(_QWORD *)(v7 - 256));
        *(_QWORD *)(v7 - 328) = v30;
        *(_QWORD *)(v7 - 72) = v29;
        sub_1BA7F0E18(v31);
        sub_1BB86BF44();
        v32 = *(_QWORD *)(v7 - 384);
        sub_1BB86BF80();
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27, v25);
        v1 = *(_QWORD *)(v7 - 296);
        v33 = *(_QWORD *)(v7 - 392);
        v2 = *(_QWORD *)(v7 - 320);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v33, v21, v2);
        if (v17(v32, 1, v2) == 1)
        {
          v19(*(_QWORD *)(v7 - 288), v33, v2);
          sub_1BA6AA068(v32, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v33, v2);
          v19(*(_QWORD *)(v7 - 288), v32, v2);
        }
        v6 = *(_QWORD *)(v7 - 360);
        v10 = *(_QWORD *)(v7 - 352);
        v11 = *(_QWORD *)(v7 - 280);
        v26 = *(_QWORD *)(v7 - 272);
        goto LABEL_20;
      }
      sub_1BA6AA068(v23, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      v1 = *(_QWORD *)(v7 - 296);
      v2 = *(_QWORD *)(v7 - 320);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v1 + 16))(*(_QWORD *)(v7 - 288), v21, v2);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v1 + 16))(boxed_opaque_existential_0, v21, v2);
    }
    v11 = *(_QWORD *)(v7 - 280);
    v26 = v21;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v26, v2);
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v16(v11, 1, 1, v2);
LABEL_26:
  sub_1BA6AA068(v11, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v45 = 5001813;
  v45[1] = 0xE300000000000000;
  v45[2] = 7958081;
  v45[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v7 - 184);
  __swift_destroy_boxed_opaque_existential_1(v7 - 152);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA7E1F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[4];
  uint64_t v71;

  v10 = v9;
  v11 = v8;
  v62 = a8;
  v71 = a5;
  v63 = a4;
  v67 = a2;
  v65 = a1;
  v15 = type metadata accessor for FeedHeadline(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v69 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v56 - v19;
  v64 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v21 = *(_QWORD *)&v8[v64[14]];
  v22 = *(_QWORD *)(v21 + 16);
  swift_bridgeObjectRetain();
  if (v22)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_1BA6A8790(0x6461654864656546, 0xEC000000656E696CLL, v67, a3);
    if ((v24 & 1) != 0)
    {
      v25 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = sub_1BA7C2A30(v25);
      swift_bridgeObjectRelease();
      if (v26)
      {
        v57 = a6;
        v58 = a7;
        v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v70[0] = MEMORY[0x1E0DEE9D8];
        v28 = *(_QWORD *)(v26 + 16);
        swift_bridgeObjectRetain();
        v29 = v26;
        v68 = v28;
        if (v28)
        {
          v59 = v11;
          v60 = a3;
          v61 = v10;
          v30 = 0;
          v31 = MEMORY[0x1E0DEE9D8];
          v32 = type metadata accessor for FeedHeadline;
          v66 = v16;
          while (v30 < *(_QWORD *)(v29 + 16))
          {
            v33 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
            v34 = *(_QWORD *)(v16 + 72);
            sub_1BA4C2DD8(v29 + v33 + v34 * v30, (uint64_t)v20, v32);
            if ((v71 & ~*((_QWORD *)v20 + 4)) != 0)
            {
              sub_1BA4A2E80((uint64_t)v20, v32);
            }
            else
            {
              v35 = v32;
              sub_1BA5193C4((uint64_t)v20, v69, v32);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                sub_1BA7C2ABC(0, *(_QWORD *)(v31 + 16) + 1, 1);
              v31 = v70[0];
              v37 = *(_QWORD *)(v70[0] + 16);
              v36 = *(_QWORD *)(v70[0] + 24);
              if (v37 >= v36 >> 1)
              {
                sub_1BA7C2ABC(v36 > 1, v37 + 1, 1);
                v31 = v70[0];
              }
              *(_QWORD *)(v31 + 16) = v37 + 1;
              v38 = v31 + v33 + v37 * v34;
              v32 = v35;
              sub_1BA5193C4(v69, v38, v35);
              v16 = v66;
            }
            if (v68 == ++v30)
            {
              v27 = (_QWORD *)v70[0];
              a3 = v60;
              v10 = v61;
              v11 = v59;
              goto LABEL_28;
            }
          }
          goto LABEL_42;
        }
LABEL_28:
        swift_bridgeObjectRelease();
        if (v63 && (*v11 & 1) == 0)
        {
          swift_retain();
          v45 = sub_1BA7EF24C(v27);
          swift_release();
          swift_release();
          v27 = (_QWORD *)v45;
        }
        v46 = *(_QWORD *)&v11[v64[18]];
        v47 = *(_QWORD *)&v11[v64[19]];
        if (__OFSUB__(v46, v47))
          goto LABEL_45;
        v48 = v29;
        v49 = sub_1BA7E2C4C((uint64_t)v27, v46 - v47);
        v50 = v65;
        v43 = sub_1BA7E2484(v65, v49);
        v52 = v51;
        swift_bridgeObjectRelease();
        if (v43)
        {
          swift_bridgeObjectRelease();
LABEL_35:
          strcpy((char *)v70, "FeedHeadline");
          BYTE5(v70[1]) = 0;
          HIWORD(v70[1]) = -5120;
          v70[2] = v67;
          v70[3] = a3;
          if ((v62 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            v48 = v52;
          }
          v54 = sub_1BA618F20(v48);
          swift_bridgeObjectRelease();
          sub_1BA6AB5A4(v70, v54);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v43;
        }
        v43 = sub_1BA7E2484(v50, (uint64_t)v27);
        v52 = v53;
        swift_bridgeObjectRelease();
        if (v43)
          goto LABEL_35;
        swift_bridgeObjectRelease();
        v70[0] = v50;
        swift_bridgeObjectRetain();
        sub_1BA766EFC(v70);
        if (!v10)
        {
          v42 = v70[0];
          a6 = v57;
          a7 = v58;
          if (!*(_QWORD *)(v70[0] + 16))
          {
            __break(1u);
LABEL_42:
            __break(1u);
LABEL_43:
            __break(1u);
            goto LABEL_44;
          }
          goto LABEL_25;
        }
        goto LABEL_46;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v39 = *(_QWORD *)(v65 + 16);
  if (v39)
  {
    if (!*(_QWORD *)(v65 + 32))
    {
LABEL_26:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    if (v39 != 1)
    {
      v40 = 5;
      do
      {
        v41 = v40 - 3;
        if (__OFADD__(v40 - 4, 1))
          goto LABEL_43;
        if (!*(_QWORD *)(v65 + 8 * v40))
          goto LABEL_26;
        ++v40;
      }
      while (v41 != v39);
    }
  }
  v70[0] = v65;
  swift_bridgeObjectRetain();
  sub_1BA766EFC(v70);
  if (!v10)
  {
    v42 = v70[0];
    if (!*(_QWORD *)(v70[0] + 16))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
LABEL_25:
    v43 = *(_QWORD *)(v42 + 32);
    swift_release();
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v44 = xmmword_1BB8E9610;
    *(_QWORD *)(v44 + 16) = v67;
    *(_QWORD *)(v44 + 24) = a3;
    *(_QWORD *)(v44 + 32) = v71;
    *(_QWORD *)(v44 + 40) = v43;
    *(_QWORD *)(v44 + 48) = a6;
    *(_QWORD *)(v44 + 56) = a7;
    *(_BYTE *)(v44 + 64) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return v43;
  }
LABEL_46:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BA7E2484(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BA7E3620(v3);
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)(v4 + 32);
    v8 = *(_QWORD *)(a2 + 16);
    if (v7 == 0x7FFFFFFFFFFFFFFFLL || v8 >= v7)
    {
LABEL_20:
      v15 = sub_1BA7E33E8(v7, a2);
      v17 = v16;
      v19 = v18;
      v21 = v20;
      if ((v20 & 1) != 0)
      {
        sub_1BB874434();
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain();
        v22 = swift_dynamicCastClass();
        if (!v22)
        {
          swift_unknownObjectRelease();
          v22 = MEMORY[0x1E0DEE9D8];
        }
        v23 = *(_QWORD *)(v22 + 16);
        swift_release();
        if (__OFSUB__(v21 >> 1, v19))
        {
          __break(1u);
        }
        else if (v23 == (v21 >> 1) - v19)
        {
          v10 = swift_dynamicCastClass();
          if (!v10)
          {
            swift_unknownObjectRelease();
            v10 = MEMORY[0x1E0DEE9D8];
          }
          goto LABEL_29;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      v10 = sub_1BA81BAC4(v15, v17, v19, v21);
LABEL_29:
      swift_unknownObjectRelease();
      swift_retain();
      v24 = swift_bridgeObjectRetain();
      sub_1BA7E3164(v24, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v10;
    }
    if (v6 != 1)
    {
      v7 = *(_QWORD *)(v5 + 40);
      if (v8 >= v7 || v7 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_20;
      v12 = 0;
      v13 = v6 - 2;
      while (v13 != v12)
      {
        v7 = *(_QWORD *)(v5 + 8 * v12++ + 48);
        if (v8 >= v7 || v7 == 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BA7E2658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[2];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v11 = v10;
  v61 = a7;
  v62 = a1;
  v58 = a5;
  v64 = a2;
  v16 = type metadata accessor for FeedHeadline(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v70 = (uint64_t)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v53 - v20;
  v59 = (int *)type metadata accessor for GroupLayoutBindingContext();
  v60 = v9;
  v22 = *(_QWORD *)&v9[v59[14]];
  v23 = *(_QWORD *)(v22 + 16);
  swift_bridgeObjectRetain();
  if (v23)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = sub_1BA6A8790(0x6461654864656546, 0xEC000000656E696CLL, a3, a4);
    if ((v25 & 1) != 0)
    {
      v26 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = sub_1BA7C2A30(v26);
      swift_bridgeObjectRelease();
      if (v27)
      {
        v54 = a8;
        v57 = a3;
        v28 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v67[0] = MEMORY[0x1E0DEE9D8];
        v29 = *(_QWORD *)(v27 + 16);
        v65 = v27;
        swift_bridgeObjectRetain();
        v66 = v29;
        if (v29)
        {
          v55 = a4;
          v56 = v11;
          v30 = 0;
          v31 = MEMORY[0x1E0DEE9D8];
          v32 = v65;
          v63 = v17;
          while (v30 < *(_QWORD *)(v32 + 16))
          {
            v33 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
            v34 = *(_QWORD *)(v17 + 72);
            sub_1BA4C2DD8(v32 + v33 + v34 * v30, (uint64_t)v21, type metadata accessor for FeedHeadline);
            if ((a6 & ~*((_QWORD *)v21 + 4)) != 0)
            {
              sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FeedHeadline);
            }
            else
            {
              sub_1BA5193C4((uint64_t)v21, v70, type metadata accessor for FeedHeadline);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                sub_1BA7C2ABC(0, *(_QWORD *)(v31 + 16) + 1, 1);
              v31 = v67[0];
              v36 = *(_QWORD *)(v67[0] + 16);
              v35 = *(_QWORD *)(v67[0] + 24);
              if (v36 >= v35 >> 1)
              {
                sub_1BA7C2ABC(v35 > 1, v36 + 1, 1);
                v31 = v67[0];
              }
              *(_QWORD *)(v31 + 16) = v36 + 1;
              sub_1BA5193C4(v70, v31 + v33 + v36 * v34, type metadata accessor for FeedHeadline);
              v32 = v65;
              v17 = v63;
            }
            if (v66 == ++v30)
            {
              v28 = (_QWORD *)v67[0];
              a4 = v55;
              v11 = v56;
              goto LABEL_23;
            }
          }
          goto LABEL_40;
        }
LABEL_23:
        swift_bridgeObjectRelease();
        if (v58)
        {
          v40 = v60;
          if ((*v60 & 1) == 0)
          {
            swift_retain();
            v41 = sub_1BA7EF24C(v28);
            swift_release();
            swift_release();
            v40 = v60;
            v28 = (_QWORD *)v41;
          }
        }
        else
        {
          v40 = v60;
        }
        v66 = a6;
        v42 = *(_QWORD *)&v40[v59[18]];
        v43 = *(_QWORD *)&v40[v59[19]];
        if (__OFSUB__(v42, v43))
          goto LABEL_42;
        LODWORD(v70) = a9;
        v44 = sub_1BA7E2C4C((uint64_t)v28, v42 - v43);
        v45 = v62;
        v37 = sub_1BA7E2F94(v62, v64, v44);
        v47 = v46;
        swift_bridgeObjectRelease();
        if (v37)
        {
          swift_bridgeObjectRelease();
          strcpy((char *)v67, "FeedHeadline");
          BYTE5(v67[1]) = 0;
          HIWORD(v67[1]) = -5120;
          v68 = v57;
          v69 = a4;
          if ((v70 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            v65 = v47;
          }
LABEL_35:
          v51 = sub_1BA618F20(v65);
          swift_bridgeObjectRelease();
          sub_1BA6AB5A4(v67, v51);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v37;
        }
        v48 = v70;
        v37 = sub_1BA7E2F94(v45, v64, (uint64_t)v28);
        v50 = v49;
        swift_bridgeObjectRelease();
        if (v37)
        {
          strcpy((char *)v67, "FeedHeadline");
          BYTE5(v67[1]) = 0;
          HIWORD(v67[1]) = -5120;
          v68 = v57;
          v69 = a4;
          if ((v48 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            v65 = v50;
          }
          goto LABEL_35;
        }
        swift_bridgeObjectRelease();
        v67[0] = sub_1BA7E34B0(v45, v64);
        sub_1BA766EFC(v67);
        a3 = v57;
        if (!v11)
        {
          a6 = v66;
          v38 = v67[0];
          a8 = v54;
          if (!*(_QWORD *)(v67[0] + 16))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          goto LABEL_21;
        }
        goto LABEL_43;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  if (v62 <= 0 && (v64 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  v67[0] = sub_1BA7E34B0(v62, v64);
  sub_1BA766EFC(v67);
  if (!v11)
  {
    v38 = v67[0];
    if (!*(_QWORD *)(v67[0] + 16))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
LABEL_21:
    v37 = *(_QWORD *)(v38 + 32);
    swift_release();
    sub_1BA7C5828();
    swift_allocError();
    *(_OWORD *)v39 = xmmword_1BB8E9610;
    *(_QWORD *)(v39 + 16) = a3;
    *(_QWORD *)(v39 + 24) = a4;
    *(_QWORD *)(v39 + 32) = a6;
    *(_QWORD *)(v39 + 40) = v37;
    *(_QWORD *)(v39 + 48) = v61;
    *(_QWORD *)(v39 + 56) = a8;
    *(_BYTE *)(v39 + 64) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return v37;
  }
LABEL_43:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BA7E2C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a2;
  v3 = type metadata accessor for FeedHeadline(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v35 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - v11;
  v13 = MEMORY[0x1E0DEE9D8];
  v39 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v37 = a1;
  if (v14)
  {
    v15 = *(unsigned __int8 *)(v4 + 80);
    v35 = v4;
    v16 = *(_QWORD *)(v4 + 72);
    v38 = (v15 + 32) & ~v15;
    v17 = a1 + v38;
    do
    {
      sub_1BA4C2DD8(v17, (uint64_t)v12, type metadata accessor for FeedHeadline);
      if ((v12[33] & 0x10) != 0)
      {
        sub_1BA5193C4((uint64_t)v12, (uint64_t)v9, type metadata accessor for FeedHeadline);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BA7C2ABC(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v39;
        v19 = *(_QWORD *)(v39 + 16);
        v18 = *(_QWORD *)(v39 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1BA7C2ABC(v18 > 1, v19 + 1, 1);
          v13 = v39;
        }
        *(_QWORD *)(v13 + 16) = v19 + 1;
        sub_1BA5193C4((uint64_t)v9, v13 + v38 + v19 * v16, type metadata accessor for FeedHeadline);
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FeedHeadline);
      }
      v17 += v16;
      --v14;
    }
    while (v14);
    v20 = v39;
    a1 = v37;
    v4 = v35;
    v13 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v20 = v13;
  }
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v39 = v13;
    sub_1BA7447E8(0, v21, 0);
    v22 = *(unsigned __int8 *)(v4 + 80);
    v38 = v20;
    v23 = v20 + ((v22 + 32) & ~v22);
    v24 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1BA4C2DD8(v23, (uint64_t)v6, type metadata accessor for FeedHeadline);
      v25 = *v6;
      v26 = v6[1];
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedHeadline);
      v13 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v39;
      }
      v28 = *(_QWORD *)(v13 + 16);
      v27 = *(_QWORD *)(v13 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1BA7447E8(v27 > 1, v28 + 1, 1);
        v13 = v39;
      }
      *(_QWORD *)(v13 + 16) = v28 + 1;
      v29 = v13 + 16 * v28;
      *(_QWORD *)(v29 + 32) = v25;
      *(_QWORD *)(v29 + 40) = v26;
      v23 += v24;
      --v21;
    }
    while (v21);
    result = swift_release();
    a1 = v37;
  }
  else
  {
    result = swift_release();
  }
  v31 = *(_QWORD *)(v13 + 16);
  if (v31 <= v36)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return a1;
  }
  if ((v36 & 0x8000000000000000) == 0)
  {
    v32 = sub_1BAC86614(v13 + 32, v36, (2 * v31) | 1);
    swift_bridgeObjectRelease();
    v33 = swift_bridgeObjectRetain();
    v34 = sub_1BB3DED9C(v33, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v34;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA7E2F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1BA7E33F4(a1, a2);
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)(v4 + 32);
    v8 = *(_QWORD *)(a3 + 16);
    if (v7 == 0x7FFFFFFFFFFFFFFFLL || v8 >= v7)
    {
LABEL_20:
      v15 = sub_1BA7E33E8(v7, a3);
      v17 = v16;
      v19 = v18;
      v21 = v20;
      if ((v20 & 1) != 0)
      {
        sub_1BB874434();
        swift_unknownObjectRetain_n();
        swift_bridgeObjectRetain();
        v22 = swift_dynamicCastClass();
        if (!v22)
        {
          swift_unknownObjectRelease();
          v22 = MEMORY[0x1E0DEE9D8];
        }
        v23 = *(_QWORD *)(v22 + 16);
        swift_release();
        if (__OFSUB__(v21 >> 1, v19))
        {
          __break(1u);
        }
        else if (v23 == (v21 >> 1) - v19)
        {
          v10 = swift_dynamicCastClass();
          if (!v10)
          {
            swift_unknownObjectRelease();
            v10 = MEMORY[0x1E0DEE9D8];
          }
          goto LABEL_29;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      v10 = sub_1BA81BAC4(v15, v17, v19, v21);
LABEL_29:
      swift_unknownObjectRelease();
      swift_retain();
      v24 = swift_bridgeObjectRetain();
      sub_1BA7E3164(v24, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v10;
    }
    if (v6 != 1)
    {
      v7 = *(_QWORD *)(v5 + 40);
      if (v8 >= v7 || v7 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_20;
      v12 = 0;
      v13 = v6 - 2;
      while (v13 != v12)
      {
        v7 = *(_QWORD *)(v5 + 8 * v12++ + 48);
        if (v8 >= v7 || v7 == 0x7FFFFFFFFFFFFFFFLL)
          goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BA7E3164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  BOOL v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v25[2];
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v5);
  v31 = (uint64_t)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v25 - v9);
  result = MEMORY[0x1E0DEE9D8];
  v32 = MEMORY[0x1E0DEE9D8];
  v30 = *(_QWORD *)(a1 + 16);
  if (v30)
  {
    v25[1] = v2;
    v12 = 0;
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = *(_QWORD *)(v8 + 72);
    v29 = a1 + v13;
    v26 = v13;
    v27 = v13 + a2 + 8;
    v15 = MEMORY[0x1E0DEE9D8];
    v16 = type metadata accessor for FeedHeadline;
    v28 = a2;
    do
    {
      v17 = v16;
      sub_1BA4C2DD8(v29 + v14 * v12, (uint64_t)v10, v16);
      v18 = *(_QWORD *)(a2 + 16);
      if (v18)
      {
        v19 = *v10;
        v20 = v10[1];
        v21 = (_QWORD *)v27;
        while (1)
        {
          v22 = *(v21 - 1) == v19 && *v21 == v20;
          if (v22 || (sub_1BB874398() & 1) != 0)
            break;
          v21 = (_QWORD *)((char *)v21 + v14);
          if (!--v18)
            goto LABEL_13;
        }
        v16 = v17;
        sub_1BA4A2E80((uint64_t)v10, v17);
      }
      else
      {
LABEL_13:
        v16 = v17;
        sub_1BA5193C4((uint64_t)v10, v31, v17);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BA7C2ABC(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v32;
        v24 = *(_QWORD *)(v32 + 16);
        v23 = *(_QWORD *)(v32 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1BA7C2ABC(v23 > 1, v24 + 1, 1);
          v15 = v32;
        }
        *(_QWORD *)(v15 + 16) = v24 + 1;
        sub_1BA5193C4(v31, v15 + v26 + v24 * v14, v17);
      }
      ++v12;
      a2 = v28;
    }
    while (v12 != v30);
    return v32;
  }
  return result;
}

uint64_t sub_1BA7E3378(uint64_t result, uint64_t a2, void (*a3)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v4 >= result)
      v5 = result;
    else
      v5 = *(_QWORD *)(a2 + 16);
    if (result)
      v6 = v5;
    else
      v6 = 0;
    if (v4 >= v6)
    {
      a3(0);
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA7E33E8(uint64_t a1, uint64_t a2)
{
  return sub_1BA7E3378(a1, a2, (void (*)(_QWORD))type metadata accessor for FeedHeadline);
}

uint64_t sub_1BA7E33F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t i;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = sub_1BA7E34B0(a1, a2);
  v3 = (_QWORD *)result;
  v4 = *(_QWORD *)(result + 16);
  if (v4 < 2)
    return (uint64_t)v3;
  v5 = 0;
  v6 = v4 >> 1;
  for (i = v4 + 3; ; --i)
  {
    if (v5 == i - 4)
      goto LABEL_5;
    v8 = v3[2];
    if (v5 >= v8)
      break;
    if (i - 4 >= v8)
      goto LABEL_12;
    v9 = v3[v5 + 4];
    v10 = v3[i];
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BAA67DAC(v3);
      v3 = (_QWORD *)result;
    }
    v3[v5 + 4] = v10;
    v3[i] = v9;
LABEL_5:
    if (v6 == ++v5)
      return (uint64_t)v3;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1BA7E34B0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_13;
  }
  v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v2 == -1)
    return MEMORY[0x1E0DEE9D8];
  v5 = result;
  if (v3 <= 0)
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3B9FF0, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v6 = (_QWORD *)swift_allocObject();
    v7 = _swift_stdlib_malloc_size(v6);
    v8 = v7 - 32;
    if (v7 < 32)
      v8 = v7 - 25;
    v6[2] = v3;
    v6[3] = 2 * (v8 >> 3);
  }
  result = sub_1BA7E3594((uint64_t)&v9, (uint64_t)(v6 + 4), v3, v5, a2);
  if (result == v3)
    return (uint64_t)v6;
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1BA7E3594(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  BOOL v9;

  if (!a2)
  {
    v7 = 0;
    a3 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    v7 = 0;
LABEL_14:
    v8 = a4;
LABEL_15:
    *(_QWORD *)result = a4;
    *(_QWORD *)(result + 8) = a5;
    *(_QWORD *)(result + 16) = v8;
    *(_BYTE *)(result + 24) = v7;
    return a3;
  }
  if (a3 < 0)
    goto LABEL_17;
  v5 = 0;
  v6 = a4;
  while (1)
  {
    v7 = v6 == a5;
    if (v6 != a5)
      break;
    v8 = 0;
LABEL_8:
    *(_QWORD *)(a2 + 8 * v5) = v6;
    if (a3 - 1 == v5)
      goto LABEL_15;
    ++v5;
    v9 = v6 == a5;
    v6 = v8;
    if (v9)
    {
      v7 = 1;
      a3 = v5;
      goto LABEL_15;
    }
  }
  v8 = v6 + 1;
  if (!__OFADD__(v6, 1))
    goto LABEL_8;
  __break(1u);
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1BA7E3620(uint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t i;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (_QWORD *)result;
  v2 = *(_QWORD *)(result + 16);
  if (v2 < 2)
    return (uint64_t)v1;
  v3 = 0;
  v4 = v2 >> 1;
  for (i = v2 + 3; ; --i)
  {
    if (v3 == i - 4)
      goto LABEL_5;
    v6 = v1[2];
    if (v3 >= v6)
      break;
    if (i - 4 >= v6)
      goto LABEL_12;
    v7 = v1[v3 + 4];
    v8 = v1[i];
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BAA67DAC(v1);
      v1 = (_QWORD *)result;
    }
    v1[v3 + 4] = v8;
    v1[i] = v7;
LABEL_5:
    if (v4 == ++v3)
      return (uint64_t)v1;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1BA7E36D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  swift_bridgeObjectRetain();
  v16 = sub_1BA717D44(v3, v4);
  v17 = v6;
  swift_bridgeObjectRelease();
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v5 + 56);
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if ((unint64_t)(v7 + 63) >> 6 <= 1)
    goto LABEL_19;
  v12 = *(_QWORD *)(v5 + 64);
  v13 = 1;
  if (v12)
    goto LABEL_17;
  v13 = 2;
  if ((unint64_t)(v7 + 63) >> 6 <= 2)
  {
LABEL_19:
    swift_release();
    memset(v18, 0, sizeof(v18));
    LOBYTE(v19) = -1;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *(_QWORD *)(a1 + 56);
    *(_QWORD *)(a1 + 56) = 0x8000000000000000;
    sub_1BA74E78C((uint64_t)v18, v16, v17, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a1 + 56) = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_1BB86EAB8();
  }
  v12 = *(_QWORD *)(v5 + 72);
  if (v12)
  {
LABEL_17:
    v11 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
    __asm { BR              X9 }
  }
  v13 = 3;
  if ((unint64_t)(v7 + 63) >> 6 <= 3)
    goto LABEL_19;
  v12 = *(_QWORD *)(v5 + 80);
  if (v12)
    goto LABEL_17;
  v14 = 4;
  if ((unint64_t)(v7 + 63) >> 6 <= 4)
    goto LABEL_19;
  v12 = *(_QWORD *)(v5 + 88);
  if (v12)
  {
    v13 = 4;
    goto LABEL_17;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= (uint64_t)((unint64_t)(v7 + 63) >> 6))
      goto LABEL_19;
    v12 = *(_QWORD *)(v5 + 56 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_17;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BA7E415C()
{
  unint64_t result;

  result = qword_1ED3B73C0;
  if (!qword_1ED3B73C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87F9D4, &type metadata for GroupLayoutFactoryError);
    atomic_store(result, (unint64_t *)&qword_1ED3B73C0);
  }
  return result;
}

unint64_t sub_1BA7E41A0()
{
  unint64_t result;

  result = qword_1ED39B8E8;
  if (!qword_1ED39B8E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineInput, &type metadata for FormatStateMachineInput);
    atomic_store(result, (unint64_t *)&qword_1ED39B8E8);
  }
  return result;
}

unint64_t sub_1BA7E41E4()
{
  unint64_t result;

  result = qword_1ED39B8D0;
  if (!qword_1ED39B8D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPreviewParameters, &type metadata for FormatPreviewParameters);
    atomic_store(result, (unint64_t *)&qword_1ED39B8D0);
  }
  return result;
}

unint64_t sub_1BA7E4228()
{
  unint64_t result;

  result = qword_1ED3BEE90[0];
  if (!qword_1ED3BEE90[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeBinding, &type metadata for FormatButtonNodeBinding);
    atomic_store(result, qword_1ED3BEE90);
  }
  return result;
}

void sub_1BA7E426C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B6FD0, (uint64_t (*)(uint64_t))sub_1BA829AA0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA7E4288(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _OWORD v25[5];
  uint64_t v26;

  v4 = v3;
  v5 = v2;
  v7 = *(_OWORD *)(a2 + 48);
  v25[2] = *(_OWORD *)(a2 + 32);
  v25[3] = v7;
  v25[4] = *(_OWORD *)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v8;
  v9 = v2[4];
  if ((v9 & 0x8000000000000000) == 0)
  {
    if (!v2[5])
      goto LABEL_8;
    goto LABEL_3;
  }
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB573FC0(a1, (uint64_t)v25, v10, v11);
  if (v4)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (v2[5])
  {
LABEL_3:
    sub_1BA756CDC(a1, (uint64_t)v25);
    if (v4)
      return;
  }
LABEL_8:
  v12 = v2[6];
  if (v12)
  {
    swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 72);
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_1BA7C5A8C(a1, (uint64_t)v25, v13);
      if (v4)
        goto LABEL_27;
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 88);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      v16 = (uint64_t *)(v14 + 72);
      while (1)
      {
        v17 = *v16;
        if (*v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA7C5A8C(a1, (uint64_t)v25, v17);
          if (v4)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
LABEL_27:
            swift_bridgeObjectRelease();
            return;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v16 += 7;
        if (!--v15)
        {
          swift_bridgeObjectRelease_n();
          break;
        }
      }
    }
  }
  sub_1BA6FA63C();
  if (!v4)
  {
    swift_beginAccess();
    v18 = v5[9];
    v19 = *(_QWORD *)(v18 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v19; ++i)
      {
        v21 = *(_QWORD *)(v18 + 8 * i + 32);
        sub_1BA7196DC(v21);
        sub_1BA6FA7EC();
        sub_1BA719340(v21);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    v22 = v5[11];
    if (v22 >> 62 == 1)
    {
      v23 = *(_QWORD *)(v22 + 16);
      v24 = *(_QWORD *)(v22 + 24);
      sub_1BA67D3F4(v23);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v25, v23, v24);
      sub_1BA6EEDB4(v23);
      goto LABEL_27;
    }
  }
}

void sub_1BA7E45C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[12];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v37 = a5;
  v30[1] = a4;
  v30[11] = a3;
  v34 = a6;
  v35 = a2;
  v36 = a1;
  v31 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v31);
  v30[6] = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v7);
  v30[9] = (char *)v30 - v8;
  v9 = type metadata accessor for FormatOption();
  v30[7] = *(_QWORD *)(v9 - 8);
  v30[8] = v9;
  MEMORY[0x1E0C80A78](v9);
  v30[5] = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v11);
  v30[10] = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v13);
  v30[0] = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v30[2] = (char *)v30 - v16;
  MEMORY[0x1E0C80A78](v17);
  v30[3] = (char *)v30 - v18;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v30[4] = (char *)v30 - v21;
  MEMORY[0x1E0C80A78](v22);
  MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v24);
  v25 = sub_1BB86C8B0();
  v32 = *(_QWORD *)(v25 - 8);
  v33 = v25;
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  MEMORY[0x1E0C80A78](v29);
  __asm { BR              X10 }
}

void sub_1BA7E48D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0[18];
  v2 = v0[9];
  v3 = v0[16];
  v4 = v0[11];
  FormatOptionCollection.subscript.getter(v3, v4, v2);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v0[7] + 48))(v2, 1, v0[8]) == 1)
  {
    sub_1BA502AD0(v2, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
    v5 = (uint64_t *)v0[6];
    *v5 = v3;
    v5[1] = v4;
    swift_storeEnumTagMultiPayload();
    v6 = *(_BYTE *)(v1 + 48);
    sub_1BA689E84();
    v7 = (void *)swift_allocError();
    sub_1BAB53980((uint64_t)v5, v8);
    if ((v6 & 1) != 0)
    {
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);

    }
    else
    {
      swift_bridgeObjectRetain();
      swift_willThrow();
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    }
  }
  else
  {
    v9 = v2;
    v10 = v0[5];
    sub_1BA8569CC(v9, v10);
    swift_retain();
    v11 = v0[17];
    sub_1BA711554();
    swift_release();
    if (!v11)
    {
      sub_1BB315B2C(v0[19], v3, v4, v0[1], v1, v0[15]);
      swift_release();
    }
    sub_1BA4A2E80(v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  }
}

void sub_1BA7E50FC()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X10 }
}

uint64_t sub_1BA7E5230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*(id *)(v1 + 40), sel_publishDate);
  if (v3)
  {
    v4 = v3;
    sub_1BB86C874();

    v5 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
  }
  else
  {
    v6 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 1, 1, v6);
  }
  return sub_1BA50236C(v2, v0);
}

uint64_t FormatContentSubgroup.Resolved.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  sub_1BA7E6034(0, &qword_1ED39C170, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v19 - v6;
  v8 = v1[2];
  v25 = v1[3];
  v26 = v8;
  v9 = v1[4];
  v23 = v1[5];
  v24 = v9;
  v10 = v1[6];
  v21 = v1[7];
  v22 = v10;
  v11 = v1[8];
  v19 = v1[9];
  v20 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA7E5FF0();
  v12 = v4;
  sub_1BB8746C8();
  LOBYTE(v29) = 0;
  v13 = v27;
  sub_1BB87417C();
  if (!v13)
  {
    v15 = v23;
    v14 = v24;
    v16 = v21;
    v17 = v22;
    LOBYTE(v29) = 1;
    sub_1BB87417C();
    v29 = v14;
    v28 = 2;
    type metadata accessor for FormatPackageInventory();
    sub_1BA4A2870((unint64_t *)&unk_1ED39B870, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, (uint64_t)&protocol conformance descriptor for FormatPackageInventory);
    sub_1BB8741AC();
    v29 = v15;
    v28 = 3;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA583FEC((unint64_t *)&qword_1ED39BE80, &qword_1ED3AFE80, (uint64_t)&protocol conformance descriptor for FormatOption, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v29 = v17;
    v28 = 4;
    sub_1BA6BCC84();
    sub_1BA64D3D4((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    v29 = v16;
    v28 = 5;
    sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B03B0);
    sub_1BA7E6258();
    sub_1BB8741AC();
    v29 = v20;
    v28 = 6;
    sub_1BA4C576C(0, &qword_1ED3AAFC8);
    sub_1BA7E6170();
    sub_1BB8741AC();
    v29 = v19;
    v28 = 7;
    sub_1BA4C576C(0, (unint64_t *)&qword_1ED3CF7D0);
    sub_1BA7E61E0();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t FormatContentSubgroup.Resolved.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  sub_1BA7E6034(0, &qword_1ED39C0C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA7E5FF0();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v34) = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v32 = v10;
  LOBYTE(v34) = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v15 = v14;
  v30 = v13;
  type metadata accessor for FormatPackageInventory();
  v33 = 2;
  sub_1BA4A2870(&qword_1ED39B880, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, (uint64_t)&protocol conformance descriptor for FormatPackageInventory);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v31 = v34;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v33 = 3;
  sub_1BA583FEC((unint64_t *)&qword_1ED3B9450, &qword_1ED3B37E0, (uint64_t)&protocol conformance descriptor for FormatOption, MEMORY[0x1E0DEAF40]);
  swift_retain();
  sub_1BB8740D4();
  v16 = v34;
  sub_1BA6BCC84();
  v28 = v17;
  v33 = 4;
  sub_1BA64D3D4((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
  v29 = v16;
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v28 = v34;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B03B0);
  v33 = 5;
  sub_1BA7E6100();
  swift_bridgeObjectRetain();
  v25 = 0;
  sub_1BB8740D4();
  v27 = v34;
  sub_1BA4C576C(0, &qword_1ED3AAFC8);
  v33 = 6;
  sub_1BA7E6090();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v26 = v34;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3CF7D0);
  v33 = 7;
  sub_1BA6BCD54();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v25 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v31;
  swift_retain();
  v20 = v29;
  swift_bridgeObjectRetain();
  v21 = v28;
  swift_bridgeObjectRetain();
  v22 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v32;
  a2[1] = v12;
  a2[2] = v30;
  a2[3] = v15;
  a2[4] = v19;
  a2[5] = v20;
  a2[6] = v21;
  a2[7] = v22;
  v23 = v25;
  a2[8] = v26;
  a2[9] = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BA7E5FF0()
{
  unint64_t result;

  result = qword_1ED39B778;
  if (!qword_1ED39B778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9068C4, &_s8ResolvedV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1ED39B778);
  }
  return result;
}

void sub_1BA7E6034(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA7E5FF0();
    v7 = a3(a1, &_s8ResolvedV10CodingKeysON_1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA7E6090()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAFE0;
  if (!qword_1ED3AAFE0)
  {
    sub_1BA4C576C(255, &qword_1ED3AAFC8);
    v2 = v1;
    v3 = sub_1BA8236D0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAFE0);
  }
  return result;
}

unint64_t sub_1BA7E6100()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BEC0;
  if (!qword_1ED39BEC0)
  {
    sub_1BA4C576C(255, (unint64_t *)&qword_1ED3B03B0);
    v2 = v1;
    v3 = sub_1BA8317A4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BEC0);
  }
  return result;
}

unint64_t sub_1BA7E6170()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAFD0;
  if (!qword_1ED3AAFD0)
  {
    sub_1BA4C576C(255, &qword_1ED3AAFC8);
    v2 = v1;
    v3 = sub_1BA823714();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAFD0);
  }
  return result;
}

unint64_t sub_1BA7E61E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAF88;
  if (!qword_1ED3AAF88)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3CF7D0, (uint64_t)&type metadata for FormatContentSubgroupFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA824048();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAF88);
  }
  return result;
}

unint64_t sub_1BA7E6258()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BEB8;
  if (!qword_1ED39BEB8)
  {
    sub_1BA4C576C(255, (unint64_t *)&qword_1ED3B03B0);
    v2 = v1;
    v3 = sub_1BA8317E8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BEB8);
  }
  return result;
}

void sub_1BA7E62C8(uint64_t a1, uint64_t a2)
{
  sub_1BA7E62EC(a1, a2);
}

void sub_1BA7E62EC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

_QWORD *sub_1BA7E6338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  void (*v4)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = swift_allocObject();
  v4(&v13, v5, v7);
  if (v2)
    return (_QWORD *)swift_deallocUninitializedObject();
  v9 = v13;
  result = ((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))v4)(&v12, v5, v6);
  v11 = v12;
  *(_QWORD *)(v8 + 16) = v9;
  *(_QWORD *)(v8 + 24) = v11;
  *v3 = v8;
  return result;
}

void sub_1BA7E6548(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[5];
  uint64_t v26;

  v4 = v2;
  v7 = *(_OWORD *)(a2 + 48);
  v25[2] = *(_OWORD *)(a2 + 32);
  v25[3] = v7;
  v25[4] = *(_OWORD *)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v8;
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v9 = v2[6];
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v10; ++i)
      {
        v12 = *(_QWORD *)(v9 + 8 * i + 32);
        sub_1BA7196DC(v12);
        sub_1BA6FA7EC();
        sub_1BA719340(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7])
      sub_1BA7E6864(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BA76AEBC);
    v13 = v2[8];
    if (v13)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v13 + 72);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_1BA7C5A8C(a1, (uint64_t)v25, v14);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v15 = *(_QWORD *)(v13 + 88);
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain_n();
        v17 = (uint64_t *)(v15 + 72);
        do
        {
          v18 = *v17;
          if (*v17)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7C5A8C(a1, (uint64_t)v25, v18);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v17 += 7;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease_n();
      }
    }
    v19 = v4[9];
    if (v19 < 0)
    {
      v23 = *(_QWORD *)(v19 + 16);
      v24 = *(_QWORD *)(v19 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BB574008(a1, (uint64_t)v25, v23, v24);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v20 = v4[11];
    if (v20 >> 62 == 1)
    {
      v21 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v20 + 24);
      sub_1BA67D3F4(v21);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v25, v21, v22);
      sub_1BA6EEDB4(v21);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1BA7E6864(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, _OWORD *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[5];
  uint64_t v14;
  uint64_t v15;

  v7 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v7;
  v13[4] = *(_OWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v8;
  swift_beginAccess();
  v9 = *(_QWORD *)(v3 + 48);
  swift_bridgeObjectRetain();
  a3(a1, v13, v9);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    v10 = *(_QWORD *)(v3 + 64);
    if (v10)
    {
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        v12 = swift_bridgeObjectRetain() + 64;
        do
        {
          v15 = *(_QWORD *)(v12 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA7547AC();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v12 += 40;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease();
      }
    }
    if (*(unsigned __int8 *)(v3 + 176) != 254)
    {
      v15 = *(_QWORD *)(v3 + 128);
      sub_1BA7547AC();
    }
  }
}

uint64_t destroy for FormatCommandOpenURL(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2 || (_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for FormatAbsoluteURL();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA7E6AAC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB86DD80();
    v6 = *(_QWORD *)(*(_QWORD *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16))
    {
      v11 = *(_QWORD *)(v12 + 56);
      v7 = swift_bridgeObjectRetain();
      v8 = sub_1BA6E42A0(v7);
      sub_1BA6E3FB8(v8);
      swift_release();
      v9 = v11;
    }
    else
    {
      v9 = sub_1BA6E3F38();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7855E0(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1BA7E6BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;

  v48 = a7;
  v51 = a6;
  v42 = (_QWORD *)a4;
  v43 = a5;
  v44 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v44);
  v45 = (uint64_t *)((char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v47);
  v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FormatOption();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7E8004(a2, a3, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA856968);
    *v12 = a2;
    v12[1] = a3;
    v42 = v12;
    swift_storeEnumTagMultiPayload();
    v20 = a1;
    v21 = v45;
    sub_1BA4C2DD8(v20, (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v23 = *v21;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BA75BF9C();
      v45 = (uint64_t *)((char *)v21 + *(int *)(v24 + 48));
      v25 = *(unsigned __int8 *)(v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
      v26 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
      v27 = *(void **)(v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
      v28 = *(_QWORD *)(v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA70A884(v26, v27);
      swift_release();
      sub_1BA75C00C();
      (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v45, v29);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_release();
      v25 = *(unsigned __int8 *)(v23 + 48);
      v26 = *(_QWORD *)(v23 + 72);
      v27 = *(void **)(v23 + 80);
      v28 = *(_QWORD *)(v23 + 104);
      swift_bridgeObjectRetain();
      sub_1BA70A884(v26, v27);
      swift_release();
    }
    swift_bridgeObjectRelease();
    sub_1BA70AB94(v26, v27);
    sub_1BA689E84();
    v34 = (void *)swift_allocError();
    v35 = (uint64_t)v42;
    sub_1BA4C2DD8((uint64_t)v42, v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    if (v25)
    {
      v49 = 0x3A676E697373694DLL;
      v50 = 0xEB000000007B7B20;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v37);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v38);
      v28 = v49;
      sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);

    }
    else
    {
      swift_willThrow();
      sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = (uint64_t)v42;
    sub_1BA8569CC((uint64_t)v15, (uint64_t)v19);
    v31 = *((_QWORD *)v19 + 2);
    v28 = v31 & 0xFFFFFFFFFFFFFFFLL;
    swift_retain();
    v32 = v31;
    v33 = v46;
    sub_1BA7EB598(a1, v32);
    swift_release();
    if (!v33)
    {
      sub_1BA7E7060(v49, a2, a3, v30, a1);
      v28 = v39;
      swift_release();
    }
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v28;
}

void sub_1BA7E7060(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v29[15];
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;

  v29[7] = a5;
  v29[2] = a3;
  v29[1] = a2;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)v29 - v9;
  v30 = sub_1BB86BFF8();
  v10 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v29[6] = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v13);
  v29[5] = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v29[14] = (char *)v29 - v16;
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v31 = (char *)v29 - v19;
  v20 = sub_1BB86C67C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v29[4] = (char *)v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v29[8] = (char *)v29 - v24;
  MEMORY[0x1E0C80A78](v25);
  MEMORY[0x1E0C80A78](v26);
  v33 = (char *)v29 - v27;
  v28 = (char *)sub_1BA7E72EC + 4 * word_1BB90820C[a1 >> 60];
  v29[9] = a4;
  v29[13] = v10;
  v29[12] = v21;
  __asm { BR              X10 }
}

uint64_t sub_1BA7E72EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD v39[16];

  *(_QWORD *)(v6 - 184) = v1;
  swift_bridgeObjectRetain();
  sub_1BA747A4C();
  sub_1BA747A10(v6 - 152, v6 - 184);
  v7 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v6 - 72) = v7;
  v8 = v0;
  if (!v7)
  {
LABEL_21:
    sub_1BA76EAE0((_OWORD *)(v6 - 184), (_OWORD *)(v6 - 120));
    __swift_destroy_boxed_opaque_existential_1(v6 - 152);
    swift_bridgeObjectRelease();
    sub_1BA747A10(v6 - 120, v6 - 184);
    if ((swift_dynamicCast() & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1(v6 - 120);
      return *(_QWORD *)(v6 - 216);
    }
    else
    {
      v31 = type metadata accessor for FormatLayoutError();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
      swift_allocError();
      v33 = v32;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 - 120), *(_QWORD *)(v6 - 96));
      swift_getDynamicType();
      v34 = *(_QWORD *)(v6 - 384);
      swift_bridgeObjectRetain();
      v35 = sub_1BB874734();
      *v33 = *(_QWORD *)(v6 - 392);
      v33[1] = v34;
      v33[2] = 0x676E69727453;
      v33[3] = 0xE600000000000000;
      v33[4] = v35;
      v33[5] = v36;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1(v6 - 120);
    }
    return v31;
  }
  *(_QWORD *)(v6 - 320) = v2;
  *(_QWORD *)(v6 - 272) = v3;
  swift_bridgeObjectRetain();
  v9 = 0;
  *(_QWORD *)(v6 - 312) = MEMORY[0x1E0DEE9B8] + 8;
  v10 = *(_QWORD *)(v6 - 280);
  v11 = *(_QWORD *)(v6 - 288);
  v12 = *(_QWORD *)(v6 - 336);
  *(_QWORD *)(v6 - 376) = v5;
  while (1)
  {
    v15 = *(_QWORD *)(v8 + 8 * v9 + 32);
    if (!v15)
    {
      *(_QWORD *)(v6 - 248) = 0;
      *(_QWORD *)(v6 - 240) = 0xE000000000000000;
      sub_1BB873E34();
      v13 = *(_QWORD *)(v6 - 248);
      v14 = *(_QWORD *)(v6 - 240);
      *(_QWORD *)(v6 - 192) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v6 - 216) = v13;
      *(_QWORD *)(v6 - 208) = v14;
      goto LABEL_4;
    }
    sub_1BA747A10(v6 - 184, v6 - 248);
    swift_bridgeObjectRetain();
    v16 = swift_dynamicCast();
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    if (!v16)
      break;
    v17(v11, 0, 1, v5);
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (v18(v11, 1, v5) == 1)
      goto LABEL_25;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    *(_QWORD *)(v6 - 256) = v19;
    v19(v12, v11, v5);
    *(_QWORD *)(v6 - 192) = v5;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v6 - 216));
    if (*(_QWORD *)(v15 + 16))
    {
      *(_QWORD *)(v6 - 264) = boxed_opaque_existential_0;
      v21 = *(_QWORD *)(v6 - 320);
      sub_1BB86BF74();
      v22 = *(_QWORD *)(v6 - 296);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v10) == 1)
      {
        sub_1BA6AA068(v21, (uint64_t)&unk_1ED3B04A0, (uint64_t)MEMORY[0x1E0CAE890], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        v4 = *(_QWORD *)(v6 - 304);
        (*(void (**)(_QWORD, uint64_t, uint64_t))(v4 + 16))(*(_QWORD *)(v6 - 264), v12, v5);
        v11 = *(_QWORD *)(v6 - 288);
      }
      else
      {
        v23 = *(_QWORD *)(v6 - 352);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v23, v21, v10);
        v24 = sub_1BB86BF38();
        if (v24)
          v25 = v24;
        else
          v25 = MEMORY[0x1E0DEE9D8];
        MEMORY[0x1E0C80A78](v24);
        v39[2] = *(_QWORD *)(v6 - 344);
        v26 = *(_QWORD *)(v6 - 272);
        v27 = sub_1BA7F0E2C((void (*)(_QWORD))sub_1BA7F10DC, (uint64_t)v39, v15);
        *(_QWORD *)(v6 - 272) = v26;
        *(_QWORD *)(v6 - 248) = v25;
        sub_1BA7F0E18(v27);
        sub_1BB86BF44();
        v28 = *(_QWORD *)(v6 - 360);
        sub_1BB86BF80();
        v29 = v23;
        v5 = *(_QWORD *)(v6 - 376);
        (*(void (**)(uint64_t, _QWORD))(v22 + 8))(v29, *(_QWORD *)(v6 - 280));
        v4 = *(_QWORD *)(v6 - 304);
        v30 = *(_QWORD *)(v6 - 368);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v30, v12, v5);
        if (v18(v28, 1, v5) == 1)
        {
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 - 256))(*(_QWORD *)(v6 - 264), v30, v5);
          sub_1BA6AA068(v28, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v30, v5);
          (*(void (**)(_QWORD, uint64_t, uint64_t))(v6 - 256))(*(_QWORD *)(v6 - 264), v28, v5);
        }
        v8 = *(_QWORD *)(v6 - 328);
        v11 = *(_QWORD *)(v6 - 288);
        v12 = *(_QWORD *)(v6 - 336);
        v10 = *(_QWORD *)(v6 - 280);
      }
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(boxed_opaque_existential_0, v12, v5);
    }
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v5);
    swift_bridgeObjectRelease();
LABEL_4:
    ++v9;
    __swift_destroy_boxed_opaque_existential_1(v6 - 184);
    sub_1BA76EAE0((_OWORD *)(v6 - 216), (_OWORD *)(v6 - 184));
    if (*(_QWORD *)(v6 - 72) == v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  v17(v11, 1, 1, v5);
LABEL_25:
  sub_1BA6AA068(v11, (uint64_t)&qword_1ED3D2E70, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
  v31 = type metadata accessor for FormatLayoutError();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
  swift_allocError();
  *v37 = 5001813;
  v37[1] = 0xE300000000000000;
  v37[2] = 7958081;
  v37[3] = 0xE300000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v6 - 184);
  __swift_destroy_boxed_opaque_existential_1(v6 - 152);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1BA7E8004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v7 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA75D1C8(v3, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA75BF9C();
    v11 = &v9[*(int *)(v10 + 48)];
    FormatOptionCollection.subscript.getter(a1, a2, a3);
    swift_release();
    sub_1BA75C00C();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
    FormatOptionCollection.subscript.getter(a1, a2, a3);
    return swift_release();
  }
}

uint64_t sub_1BA7E8124(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_1BA7E8134(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v3 = v2;
  sub_1BA6EF3B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + 16) = sub_1BB871440();
  *(_QWORD *)(v3 + 24) = v10;
  *(_BYTE *)(v3 + 32) = 0;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v12 + v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  *(_QWORD *)(v3 + 40) = sub_1BAFEE434;
  *(_QWORD *)(v3 + 48) = v12;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v13 + v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  *(_QWORD *)(v3 + 56) = sub_1BAFEE4E8;
  *(_QWORD *)(v3 + 64) = v13;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v14 + v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  *(_QWORD *)(v3 + 72) = sub_1BAFEE510;
  *(_QWORD *)(v3 + 80) = v14;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v15 + v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  *(_QWORD *)(v3 + 88) = sub_1BAFF09A0;
  *(_QWORD *)(v3 + 96) = v15;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v16 + v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  *(_QWORD *)(v3 + 104) = sub_1BAFEE590;
  *(_QWORD *)(v3 + 112) = v16;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v17 + v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  *(_QWORD *)(v3 + 120) = sub_1BAFEE5B0;
  *(_QWORD *)(v3 + 128) = v17;
  sub_1BA4C2DD8(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v18 + v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  *(_QWORD *)(v3 + 136) = sub_1BAFEE5F8;
  *(_QWORD *)(v3 + 144) = v18;
  sub_1BA5193C4(a2, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  sub_1BA5193C4((uint64_t)v9, v19 + v11, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  *(_QWORD *)(v3 + 152) = sub_1BAFEE62C;
  *(_QWORD *)(v3 + 160) = v19;
  swift_retain_n();
  return v3;
}

uint64_t sub_1BA7E8428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BA7E847C()
{
  unint64_t result;

  result = qword_1ED39B510;
  if (!qword_1ED39B510)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellSelection, &type metadata for FormatCellSelection);
    atomic_store(result, (unint64_t *)&qword_1ED39B510);
  }
  return result;
}

void sub_1BA7E84C0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3BE430, (uint64_t (*)(uint64_t))sub_1BA768D08, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for AudioCommandContext);
}

void sub_1BA7E84DC()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

char *sub_1BA7E8598()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8];
  sub_1BA856DD0(v4, v3, v2);
  sub_1BA7A6E9C(v7, v6 - 184);
  if (!v0)
  {
    v8 = *(void **)(v6 - 176);
    v5 = sub_1BA7ED5D0(*(void **)(v6 - 184), (uint64_t)v5, v4, v3, v2);
    swift_unknownObjectRelease();

  }
  sub_1BA856ECC(v4, v3, v2, v1, (uint64_t (*)(void))sub_1BA7EDFFC);
  return v5;
}

void sub_1BA7E8890()
{
  __asm { BR              X23 }
}

void sub_1BA7E88F0()
{
  sub_1BA7F1480();
}

uint64_t sub_1BA7E89BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BA7E8C14(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BA7E89D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  _OWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;

  v31 = sub_1BA7EA268(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, a1, a2, a3, a4, a5, a6, a7, a8, 0, 0, 0.0,
          0.0,
          0.0,
          0.0,
          0,
          0);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 16);
  if (!v9)
  {
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    swift_bridgeObjectRelease();
    v29 = sub_1BA7E972C((uint64_t)v11);
    swift_bridgeObjectRelease();
    sub_1BA6D3834(v29);
    return v31;
  }
  v10 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v14 = *(v10 - 1);
    v13 = *v10;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = sub_1BA6E35A8(v14, v13);
    v18 = v11[2];
    v19 = (v16 & 1) == 0;
    v20 = v18 + v19;
    if (__OFADD__(v18, v19))
      break;
    v21 = v16;
    if (v11[3] >= v20)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v16 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BB4C3520();
        if ((v21 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BB4B0058(v20, isUniquelyReferenced_nonNull_native);
      v22 = sub_1BA6E35A8(v14, v13);
      if ((v21 & 1) != (v23 & 1))
        goto LABEL_20;
      v17 = v22;
      if ((v21 & 1) != 0)
      {
LABEL_3:
        v12 = (_OWORD *)(v11[7] + 32 * v17);
        *v12 = 0u;
        v12[1] = 0u;
        goto LABEL_4;
      }
    }
    v11[(v17 >> 6) + 8] |= 1 << v17;
    v24 = (uint64_t *)(v11[6] + 16 * v17);
    *v24 = v14;
    v24[1] = v13;
    v25 = (_OWORD *)(v11[7] + 32 * v17);
    *v25 = 0u;
    v25[1] = 0u;
    v26 = v11[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_19;
    v11[2] = v28;
    swift_bridgeObjectRetain();
LABEL_4:
    v10 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v9)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA7E8C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  CGFloat v49;
  double *v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v62;
  char v63;
  unint64_t v64;
  uint64_t v65;
  _BOOL8 v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  uint64_t v85;
  _BOOL8 v86;
  uint64_t v87;
  char v88;
  unint64_t v89;
  char v90;
  _QWORD *v91;
  uint64_t *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  int64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  CGFloat v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  uint64_t result;
  _QWORD v126[3];
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  CGFloat v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  CGFloat v135;
  CGFloat v136;
  double v137;
  double v138;
  double v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD v144[5];
  _BYTE v145[40];
  _OWORD v146[2];
  uint64_t v147;
  uint64_t v148;

  v131 = a5;
  v132 = a1;
  v128 = type metadata accessor for FormatOption();
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v140 = (uint64_t)v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86D7A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  sub_1BA75C00C();
  v14 = v13;
  sub_1BB86DBA0();
  sub_1BB86DA80();
  v148 = v15;
  v139 = v16;
  swift_release();
  sub_1BB86DBA0();
  sub_1BB86DAC8();
  v138 = v17;
  v137 = v18;
  swift_release();
  sub_1BB86DBA0();
  sub_1BB86DABC();
  v136 = v19;
  v135 = v20;
  v130 = v21;
  v129 = v22;
  swift_release();
  sub_1BB86DBA0();
  sub_1BB86DAD4();
  v24 = v23;
  v26 = v25;
  swift_release();
  sub_1BB86DBA0();
  sub_1BB86DAA4();
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  swift_release();
  v133 = v14;
  v134 = a2;
  sub_1BB86DBA0();
  sub_1BB86DA8C();
  swift_release();
  sub_1BB86D6FC();
  v36 = v35;
  v38 = v37;
  v39 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v129 = sub_1BA7EA268(*(double *)&v148, v139, v138, v137, v136, v135, v130, *(CGFloat *)&v129, v39, v40, v41, v42, v43, v44, v45, v46, v24, v26, v28,
           v30,
           v32,
           v34,
           v36,
           v38);
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  v47 = *(_QWORD *)(a3 + 48);
  swift_bridgeObjectRetain();
  v130 = *(double *)&a3;
  swift_release();
  v48 = *(double *)(v47 + 16);
  v126[1] = a4;
  v126[0] = v47;
  if (v48 == 0.0)
  {
    v51 = MEMORY[0x1E0DEE9E0];
LABEL_33:
    swift_bridgeObjectRelease();
    swift_unownedRetainStrong();
    v96 = swift_bridgeObjectRetain();
    v97 = sub_1BA7E972C(v96);
    swift_release();
    *(_QWORD *)&v139 = v51;
    swift_bridgeObjectRelease();
    v98 = v129;
    v99 = *(_QWORD *)(v129 + 16);
    v148 = v97;
    if (v99)
    {
      v142 = MEMORY[0x1E0DEE9D8];
      sub_1BA76B828(0, v99, 0);
      v100 = v142;
      v101 = v98 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
      v102 = *(_QWORD *)(v127 + 72);
      do
      {
        v103 = v140;
        sub_1BA900B30(v101, v140);
        v104 = swift_allocBox();
        sub_1BA8569CC(v103, v105);
        v142 = v100;
        v107 = *(_QWORD *)(v100 + 16);
        v106 = *(_QWORD *)(v100 + 24);
        if (v107 >= v106 >> 1)
        {
          sub_1BA76B828(v106 > 1, v107 + 1, 1);
          v100 = v142;
        }
        *(_QWORD *)(v100 + 16) = v107 + 1;
        *(_QWORD *)(v100 + 8 * v107 + 32) = v104 | 0x9000000000000000;
        v101 += v102;
        --v99;
      }
      while (v99);
      swift_bridgeObjectRelease();
      v97 = v148;
    }
    else
    {
      swift_bridgeObjectRelease();
      v100 = MEMORY[0x1E0DEE9D8];
    }
    v108 = *(_QWORD *)(v97 + 16);
    v109 = MEMORY[0x1E0DEE9D8];
    if (v108)
    {
      v142 = MEMORY[0x1E0DEE9D8];
      sub_1BA76B828(0, v108, 0);
      v109 = v142;
      v110 = v97 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
      v111 = *(_QWORD *)(v127 + 72);
      do
      {
        v112 = v140;
        sub_1BA900B30(v110, v140);
        v113 = swift_allocBox();
        sub_1BA8569CC(v112, v114);
        v142 = v109;
        v116 = *(_QWORD *)(v109 + 16);
        v115 = *(_QWORD *)(v109 + 24);
        if (v116 >= v115 >> 1)
        {
          sub_1BA76B828(v115 > 1, v116 + 1, 1);
          v109 = v142;
        }
        *(_QWORD *)(v109 + 16) = v116 + 1;
        *(_QWORD *)(v109 + 8 * v116 + 32) = v113 | 0x9000000000000000;
        v110 += v111;
        --v108;
      }
      while (v108);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v142 = v100;
    sub_1BA7082C0(v109);
    v117 = sub_1BA70B0DC(v142);
    swift_bridgeObjectRelease();
    v118 = v130;
    swift_unownedRetainStrong();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BB86D588();
    swift_unownedRetainStrong();
    swift_beginAccess();
    v119 = *(_QWORD *)(*(_QWORD *)&v118 + 56);
    swift_bridgeObjectRetain();
    swift_release();
    v120 = *(_QWORD *)(v119 + 16);
    if (v120)
    {
      v121 = 32;
      v122 = v126[2];
      while (1)
      {
        v123 = *(_OWORD *)(v119 + v121);
        v124 = *(_OWORD *)(v119 + v121 + 16);
        v147 = *(_QWORD *)(v119 + v121 + 32);
        v146[0] = v123;
        v146[1] = v124;
        sub_1BA7086BC((uint64_t)v146);
        sub_1BA7086F8(v132, v117, v131);
        if (v122)
          break;
        sub_1BA708680((uint64_t)v146);
        v121 += 40;
        if (!--v120)
          goto LABEL_49;
      }
      swift_bridgeObjectRelease();
      swift_release();
      return sub_1BA708680((uint64_t)v146);
    }
    else
    {
LABEL_49:
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  v49 = *(double *)(a4 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  v50 = (double *)(v47 + 40);
  v51 = MEMORY[0x1E0DEE9E0];
  v135 = v49;
  while (1)
  {
    v52 = *((_QWORD *)v50 - 1);
    v53 = *v50;
    v54 = *(_QWORD *)(*(_QWORD *)&v49 + 24);
    if (v54)
    {
      v142 = *(_QWORD *)(*(_QWORD *)&v49 + 16);
      v143 = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v55);
      sub_1BB872AFC(v56);
      v148 = v142;
      v57 = v143;
      v58 = *(_QWORD *)(*(_QWORD *)&v49 + 56);
      if (!v58)
        goto LABEL_20;
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v148 = v52;
      v57 = *(_QWORD *)&v53;
      v58 = *(_QWORD *)(*(_QWORD *)&v49 + 56);
      if (!v58)
        goto LABEL_20;
    }
    *(_QWORD *)&v136 = v52;
    v137 = v53;
    v138 = v48;
    *(_QWORD *)&v139 = v51;
    v59 = *(_QWORD *)(v58 + 32);
    v60 = *(_QWORD *)(*(_QWORD *)&v49 + 48);
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v141 = *(_QWORD **)(v59 + 16);
    v62 = v141;
    *(_QWORD *)(v59 + 16) = 0x8000000000000000;
    v64 = sub_1BA6E35A8(v148, v57);
    v65 = v62[2];
    v66 = (v63 & 1) == 0;
    v67 = v65 + v66;
    if (__OFADD__(v65, v66))
      break;
    v68 = v63;
    if (v62[3] >= v67)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C2858();
    }
    else
    {
      sub_1BB4AEECC(v67, isUniquelyReferenced_nonNull_native);
      v69 = sub_1BA6E35A8(v148, v57);
      if ((v68 & 1) != (v70 & 1))
        goto LABEL_55;
      v64 = v69;
    }
    v71 = v141;
    if ((v68 & 1) != 0)
    {
      v72 = v141[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v72 + 8 * v64) = v60;
    }
    else
    {
      v141[(v64 >> 6) + 8] |= 1 << v64;
      v73 = (_QWORD *)(v71[6] + 16 * v64);
      *v73 = v148;
      v73[1] = v57;
      *(_QWORD *)(v71[7] + 8 * v64) = v60;
      v74 = v71[2];
      v75 = __OFADD__(v74, 1);
      v76 = v74 + 1;
      if (v75)
        goto LABEL_53;
      v71[2] = v76;
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(v59 + 16) = v71;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v51 = *(_QWORD *)&v139;
    v48 = v138;
    v49 = v135;
    v53 = v137;
    v52 = *(_QWORD *)&v136;
LABEL_20:
    sub_1BB86DBAC();
    sub_1BB86D6C0();
    v77 = v144[0];
    v78 = v144[1];
    v79 = v144[2];
    v80 = v144[3];
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BA739A14((uint64_t)v144, (uint64_t)v145);
    if (v145[32] == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v81 = swift_isUniquelyReferenced_nonNull_native();
      v142 = v51;
      v82 = v52;
      v84 = sub_1BA6E35A8(v52, *(uint64_t *)&v53);
      v85 = *(_QWORD *)(v51 + 16);
      v86 = (v83 & 1) == 0;
      v87 = v85 + v86;
      if (__OFADD__(v85, v86))
        goto LABEL_52;
      v88 = v83;
      if (*(_QWORD *)(v51 + 24) >= v87)
      {
        if ((v81 & 1) == 0)
          sub_1BB4C3520();
      }
      else
      {
        sub_1BB4B0058(v87, v81);
        v89 = sub_1BA6E35A8(v82, *(uint64_t *)&v53);
        if ((v88 & 1) != (v90 & 1))
          goto LABEL_55;
        v84 = v89;
      }
      v51 = v142;
      if ((v88 & 1) != 0)
      {
        v91 = (_QWORD *)(*(_QWORD *)(v142 + 56) + 32 * v84);
        *v91 = v77;
        v91[1] = v78;
        v91[2] = v79;
        v91[3] = v80;
      }
      else
      {
        *(_QWORD *)(v142 + 8 * (v84 >> 6) + 64) |= 1 << v84;
        v92 = (uint64_t *)(*(_QWORD *)(v51 + 48) + 16 * v84);
        *v92 = v82;
        *((double *)v92 + 1) = v53;
        v93 = (_QWORD *)(*(_QWORD *)(v51 + 56) + 32 * v84);
        *v93 = v77;
        v93[1] = v78;
        v93[2] = v79;
        v93[3] = v80;
        v94 = *(_QWORD *)(v51 + 16);
        v75 = __OFADD__(v94, 1);
        v95 = v94 + 1;
        if (v75)
          goto LABEL_54;
        *(_QWORD *)(v51 + 16) = v95;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = v135;
    }
    v50 += 2;
    --*(_QWORD *)&v48;
    if (v48 == 0.0)
      goto LABEL_33;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA7E972C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t *v24;
  CGFloat MinX;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t *v34;
  CGFloat MinY;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t *v41;
  CGFloat MaxX;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t *v48;
  CGFloat MaxY;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t *v74;
  CGFloat Width;
  uint64_t v76;
  _QWORD *v77;
  unint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t *v82;
  CGFloat Height;
  uint64_t v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;

  v86 = MEMORY[0x1E0DEE9D8];
  v95 = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  v88 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 16);
  if (v3)
  {
    v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    v87 = a1;
    do
    {
      if (*(_QWORD *)(a1 + 16))
      {
        v6 = *(v4 - 1);
        v5 = *v4;
        swift_bridgeObjectRetain();
        v7 = sub_1BA6E35A8(v6, v5);
        if ((v8 & 1) != 0)
        {
          v9 = *(_QWORD *)(a1 + 56) + 32 * v7;
          v10 = *(double *)v9;
          v11 = *(double *)(v9 + 8);
          v12 = *(double *)(v9 + 16);
          v13 = *(double *)(v9 + 24);
          sub_1BA4B07F0(0, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
          v14 = type metadata accessor for FormatOption();
          v15 = *(_QWORD *)(v14 - 8);
          v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
          v92 = *(_QWORD *)(v15 + 72);
          v93 = v14;
          v17 = swift_allocObject();
          *(_OWORD *)(v17 + 16) = xmmword_1BB933ED0;
          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          sub_1BB872AFC((_QWORD *)0xE90000000000002DLL);
          sub_1BB872AFC(v18);
          v20 = 0x797274656D6F6567;
          v19 = 0xE90000000000002DLL;
          v21 = *(_QWORD *)(v88 + 40);
          v90 = *(_QWORD *)(v88 + 32);
          if (v21)
          {
            v94 = *(_QWORD *)(v88 + 32);
            swift_bridgeObjectRetain();
            sub_1BB872AFC(v22);
            sub_1BB872AFC(v23);
            swift_bridgeObjectRelease();
            v20 = v94;
            v19 = v21;
          }
          v89 = v17;
          v24 = (uint64_t *)(v17 + v16);
          v96.origin.x = v10;
          v96.origin.y = v11;
          v96.size.width = v12;
          v96.size.height = v13;
          MinX = CGRectGetMinX(v96);
          v26 = swift_allocObject();
          *(CGFloat *)(v26 + 16) = MinX;
          *(_QWORD *)(v26 + 24) = MEMORY[0x1E0DEE9D8];
          *v24 = v20;
          v24[1] = v19;
          v24[2] = v26 | 0x3000000000000000;
          v24[3] = 1;
          v27 = (char *)v24 + *(int *)(v93 + 28);
          v28 = type metadata accessor for FormatVersionRequirement(0);
          v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
          v91(v27, 1, 1, v28);
          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          sub_1BB872AFC((_QWORD *)0xE90000000000002DLL);
          sub_1BB872AFC(v29);
          v30 = 0x797274656D6F6567;
          v31 = 0xE90000000000002DLL;
          if (v21)
          {
            swift_bridgeObjectRetain();
            sub_1BB872AFC(v32);
            sub_1BB872AFC(v33);
            swift_bridgeObjectRelease();
            v30 = v90;
            v31 = v21;
          }
          v34 = (uint64_t *)((char *)v24 + v92);
          v97.origin.x = v10;
          v97.origin.y = v11;
          v97.size.width = v12;
          v97.size.height = v13;
          MinY = CGRectGetMinY(v97);
          v36 = swift_allocObject();
          *(CGFloat *)(v36 + 16) = MinY;
          *(_QWORD *)(v36 + 24) = MEMORY[0x1E0DEE9D8];
          *v34 = v30;
          v34[1] = v31;
          v34[2] = v36 | 0x3000000000000000;
          v34[3] = 1;
          v91((char *)v24 + v92 + *(int *)(v93 + 28), 1, 1, v28);
          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          sub_1BB872AFC((_QWORD *)0xE90000000000002DLL);
          sub_1BB872AFC((_QWORD *)0xEC000000782D6E69);
          v38 = 0x797274656D6F6567;
          v37 = 0xE90000000000002DLL;
          if (v21)
          {
            swift_bridgeObjectRetain();
            sub_1BB872AFC(v39);
            sub_1BB872AFC(v40);
            swift_bridgeObjectRelease();
            v38 = v90;
            v37 = v21;
          }
          v41 = (uint64_t *)((char *)v24 + 2 * v92);
          v98.origin.x = v10;
          v98.origin.y = v11;
          v98.size.width = v12;
          v98.size.height = v13;
          MaxX = CGRectGetMaxX(v98);
          v43 = swift_allocObject();
          *(CGFloat *)(v43 + 16) = MaxX;
          *(_QWORD *)(v43 + 24) = MEMORY[0x1E0DEE9D8];
          *v41 = v38;
          v41[1] = v37;
          v41[2] = v43 | 0x3000000000000000;
          v41[3] = 1;
          v91((char *)v41 + *(int *)(v93 + 28), 1, 1, v28);
          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          sub_1BB872AFC((_QWORD *)0xE90000000000002DLL);
          sub_1BB872AFC((_QWORD *)0xEC000000792D6E69);
          v45 = 0x797274656D6F6567;
          v44 = 0xE90000000000002DLL;
          if (v21)
          {
            swift_bridgeObjectRetain();
            sub_1BB872AFC(v46);
            sub_1BB872AFC(v47);
            swift_bridgeObjectRelease();
            v45 = v90;
            v44 = v21;
          }
          v48 = (uint64_t *)((char *)v24 + 3 * v92);
          v99.origin.x = v10;
          v99.origin.y = v11;
          v99.size.width = v12;
          v99.size.height = v13;
          MaxY = CGRectGetMaxY(v99);
          v50 = swift_allocObject();
          *(CGFloat *)(v50 + 16) = MaxY;
          *(_QWORD *)(v50 + 24) = MEMORY[0x1E0DEE9D8];
          *v48 = v45;
          v48[1] = v44;
          v48[2] = v50 | 0x3000000000000000;
          v48[3] = 1;
          v91((char *)v48 + *(int *)(v93 + 28), 1, 1, v28);
          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          sub_1BB872AFC((_QWORD *)0xE90000000000002DLL);
          sub_1BB872AFC(v51);
          v53 = 0x797274656D6F6567;
          v52 = 0xE90000000000002DLL;
          if (v21)
          {
            swift_bridgeObjectRetain();
            sub_1BB872AFC(v54);
            sub_1BB872AFC(v55);
            swift_bridgeObjectRelease();
            v53 = v90;
            v52 = v21;
          }
          v56 = (uint64_t *)((char *)v24 + 4 * v92);
          sub_1BB8735D0();
          v58 = v57;
          v59 = swift_allocObject();
          *(_QWORD *)(v59 + 16) = v58;
          *(_QWORD *)(v59 + 24) = MEMORY[0x1E0DEE9D8];
          *v56 = v53;
          v56[1] = v52;
          v56[2] = v59 | 0x3000000000000000;
          v56[3] = 1;
          v91((char *)v56 + *(int *)(v93 + 28), 1, 1, v28);
          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          sub_1BB872AFC((_QWORD *)0xE90000000000002DLL);
          sub_1BB872AFC(v60);
          v62 = 0x797274656D6F6567;
          v61 = 0xE90000000000002DLL;
          if (v21)
          {
            swift_bridgeObjectRetain();
            sub_1BB872AFC(v63);
            sub_1BB872AFC(v64);
            swift_bridgeObjectRelease();
            v62 = v90;
            v61 = v21;
          }
          v65 = (uint64_t *)((char *)v24 + 5 * v92);
          sub_1BB8735D0();
          v67 = v66;
          v68 = swift_allocObject();
          *(_QWORD *)(v68 + 16) = v67;
          *(_QWORD *)(v68 + 24) = MEMORY[0x1E0DEE9D8];
          *v65 = v62;
          v65[1] = v61;
          v65[2] = v68 | 0x3000000000000000;
          v65[3] = 1;
          v91((char *)v65 + *(int *)(v93 + 28), 1, 1, v28);
          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          sub_1BB872AFC((_QWORD *)0xE90000000000002DLL);
          sub_1BB872AFC(v69);
          v71 = 0x797274656D6F6567;
          v70 = 0xE90000000000002DLL;
          if (v21)
          {
            swift_bridgeObjectRetain();
            sub_1BB872AFC(v72);
            sub_1BB872AFC(v73);
            swift_bridgeObjectRelease();
            v71 = v90;
            v70 = v21;
          }
          v74 = (uint64_t *)((char *)v24 + 6 * v92);
          v100.origin.x = v10;
          v100.origin.y = v11;
          v100.size.width = v12;
          v100.size.height = v13;
          Width = CGRectGetWidth(v100);
          v76 = swift_allocObject();
          *(CGFloat *)(v76 + 16) = Width;
          *(_QWORD *)(v76 + 24) = MEMORY[0x1E0DEE9D8];
          *v74 = v71;
          v74[1] = v70;
          v74[2] = v76 | 0x3000000000000000;
          v74[3] = 1;
          v91((char *)v74 + *(int *)(v93 + 28), 1, 1, v28);
          sub_1BB873CB4();
          swift_bridgeObjectRelease();
          sub_1BB872AFC((_QWORD *)0xE90000000000002DLL);
          swift_bridgeObjectRelease();
          sub_1BB872AFC(v77);
          v79 = 0x797274656D6F6567;
          v78 = 0xE90000000000002DLL;
          if (v21)
          {
            swift_bridgeObjectRetain();
            sub_1BB872AFC(v80);
            sub_1BB872AFC(v81);
            swift_bridgeObjectRelease();
            v79 = v90;
            v78 = v21;
          }
          a1 = v87;
          v82 = (uint64_t *)((char *)&v24[v92] - v92);
          v101.origin.x = v10;
          v101.origin.y = v11;
          v101.size.width = v12;
          v101.size.height = v13;
          Height = CGRectGetHeight(v101);
          v84 = swift_allocObject();
          *(CGFloat *)(v84 + 16) = Height;
          *(_QWORD *)(v84 + 24) = MEMORY[0x1E0DEE9D8];
          *v82 = v79;
          v82[1] = v78;
          v82[2] = v84 | 0x3000000000000000;
          v82[3] = 1;
          v91((char *)v82 + *(int *)(v93 + 28), 1, 1, v28);
          sub_1BA6D3834(v89);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v95;
  }
  return v86;
}

uint64_t sub_1BA7EA268(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, CGFloat a19, CGFloat a20,CGFloat a21,CGFloat a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  unint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  unint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  unint64_t v70;
  unint64_t *v71;
  CGFloat MinX;
  uint64_t v73;
  unint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  unint64_t v77;
  unint64_t *v78;
  CGFloat MinY;
  uint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t *v85;
  CGFloat MaxX;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  unint64_t v91;
  unint64_t *v92;
  CGFloat MaxY;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  unint64_t v99;
  unint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  _QWORD *v105;
  unint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  _QWORD *v111;
  _QWORD *v112;
  unint64_t v113;
  unint64_t *v114;
  CGFloat Width;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  unint64_t *v121;
  CGFloat Height;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  unint64_t v128;
  unint64_t *v129;
  uint64_t v130;
  unint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  unint64_t *v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  unint64_t v140;
  unint64_t *v141;
  CGFloat v142;
  uint64_t v143;
  unint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  unint64_t *v147;
  CGFloat v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  unint64_t v154;
  unint64_t *v155;
  CGFloat v156;
  uint64_t v157;
  unint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  unint64_t *v161;
  CGFloat v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  unint64_t v168;
  unint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  unint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unint64_t v180;
  unint64_t v181;
  _QWORD *v182;
  _QWORD *v183;
  unint64_t *v184;
  CGFloat v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  _QWORD *v189;
  _QWORD *v190;
  unint64_t *v191;
  CGFloat v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  _QWORD *v196;
  _QWORD *v197;
  unint64_t *v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  _QWORD *v202;
  _QWORD *v203;
  unint64_t *v204;
  uint64_t v205;
  uint64_t v207;
  unint64_t v208;
  unint64_t v209;
  CGRect v210;
  CGRect v211;
  CGRect v212;
  CGRect v213;
  CGRect v214;
  CGRect v215;
  CGRect v216;
  CGRect v217;
  CGRect v218;
  CGRect v219;
  CGRect v220;
  CGRect v221;

  sub_1BA4B07F0(0, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v33 = type metadata accessor for FormatOption();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(_QWORD *)(v34 + 72);
  v36 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1BB9557F0;
  v38 = (unint64_t *)(v37 + v36);
  v39 = *(_QWORD *)(v24 + 40);
  v40 = 0x80000001BB99CD60;
  v207 = v37;
  v208 = *(_QWORD *)(v24 + 32);
  if (v39)
  {
    v209 = *(_QWORD *)(v24 + 32);
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v41);
    sub_1BB872AFC(v42);
    v43 = v209;
    v40 = v39;
  }
  else
  {
    v43 = 0xD00000000000001DLL;
  }
  v44 = swift_allocObject();
  *(double *)(v44 + 16) = a1;
  *(_QWORD *)(v44 + 24) = MEMORY[0x1E0DEE9D8];
  *v38 = v43;
  v38[1] = v40;
  v38[2] = v44 | 0x3000000000000000;
  v38[3] = 1;
  v45 = (char *)v38 + *(int *)(v33 + 28);
  v46 = type metadata accessor for FormatVersionRequirement(0);
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
  v47(v45, 1, 1, v46);
  v48 = 0xD00000000000001DLL;
  v49 = 0x80000001BB99CD80;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v50);
    sub_1BB872AFC(v51);
    v48 = v208;
    v49 = v39;
  }
  v52 = (unint64_t *)((char *)v38 + v35);
  v53 = swift_allocObject();
  *(double *)(v53 + 16) = a2;
  *(_QWORD *)(v53 + 24) = MEMORY[0x1E0DEE9D8];
  *v52 = v48;
  v52[1] = v49;
  v52[2] = v53 | 0x3000000000000000;
  v52[3] = 1;
  v47((char *)v38 + v35 + *(int *)(v33 + 28), 1, 1, v46);
  v54 = 0xD000000000000018;
  v55 = 0x80000001BB99CDA0;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v56);
    sub_1BB872AFC(v57);
    v58 = v208;
    v55 = v39;
  }
  else
  {
    v58 = 0xD000000000000018;
  }
  v59 = (unint64_t *)((char *)v38 + 2 * v35);
  v60 = swift_allocObject();
  *(double *)(v60 + 16) = a3;
  *(_QWORD *)(v60 + 24) = MEMORY[0x1E0DEE9D8];
  *v59 = v58;
  v59[1] = v55;
  v59[2] = v60 | 0x3000000000000000;
  v59[3] = 1;
  v47((char *)v59 + *(int *)(v33 + 28), 1, 1, v46);
  v61 = 0x80000001BB99CDC0;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v62);
    sub_1BB872AFC(v63);
    v54 = v208;
    v61 = v39;
  }
  v64 = (unint64_t *)((char *)v38 + 3 * v35);
  v65 = swift_allocObject();
  *(double *)(v65 + 16) = a4;
  *(_QWORD *)(v65 + 24) = MEMORY[0x1E0DEE9D8];
  *v64 = v54;
  v64[1] = v61;
  v64[2] = v65 | 0x3000000000000000;
  v64[3] = 1;
  v47((char *)v64 + *(int *)(v33 + 28), 1, 1, v46);
  v66 = 0x80000001BB99CDE0;
  if (v39)
  {
    v67 = v208;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v68);
    sub_1BB872AFC(v69);
    v70 = v208;
    v66 = v39;
  }
  else
  {
    v70 = 0xD00000000000001CLL;
    v67 = v208;
  }
  v71 = (unint64_t *)((char *)v38 + 4 * v35);
  v210.origin.x = a5;
  v210.origin.y = a6;
  v210.size.width = a7;
  v210.size.height = a8;
  MinX = CGRectGetMinX(v210);
  v73 = swift_allocObject();
  *(CGFloat *)(v73 + 16) = MinX;
  *(_QWORD *)(v73 + 24) = MEMORY[0x1E0DEE9D8];
  *v71 = v70;
  v71[1] = v66;
  v71[2] = v73 | 0x3000000000000000;
  v71[3] = 1;
  v47((char *)v71 + *(int *)(v33 + 28), 1, 1, v46);
  v74 = 0x80000001BB99CE00;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v75);
    sub_1BB872AFC(v76);
    v77 = v67;
    v74 = v39;
  }
  else
  {
    v77 = 0xD00000000000001CLL;
  }
  v78 = (unint64_t *)((char *)v38 + 5 * v35);
  v211.origin.x = a5;
  v211.origin.y = a6;
  v211.size.width = a7;
  v211.size.height = a8;
  MinY = CGRectGetMinY(v211);
  v80 = swift_allocObject();
  *(CGFloat *)(v80 + 16) = MinY;
  *(_QWORD *)(v80 + 24) = MEMORY[0x1E0DEE9D8];
  *v78 = v77;
  v78[1] = v74;
  v78[2] = v80 | 0x3000000000000000;
  v78[3] = 1;
  v47((char *)v78 + *(int *)(v33 + 28), 1, 1, v46);
  v81 = 0x80000001BB99CE20;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v82);
    sub_1BB872AFC(v83);
    v84 = v67;
    v81 = v39;
  }
  else
  {
    v84 = 0xD00000000000001CLL;
  }
  v85 = (unint64_t *)((char *)v38 + 6 * v35);
  v212.origin.x = a5;
  v212.origin.y = a6;
  v212.size.width = a7;
  v212.size.height = a8;
  MaxX = CGRectGetMaxX(v212);
  v87 = swift_allocObject();
  *(CGFloat *)(v87 + 16) = MaxX;
  *(_QWORD *)(v87 + 24) = MEMORY[0x1E0DEE9D8];
  *v85 = v84;
  v85[1] = v81;
  v85[2] = v87 | 0x3000000000000000;
  v85[3] = 1;
  v47((char *)v85 + *(int *)(v33 + 28), 1, 1, v46);
  v88 = 0x80000001BB99CE40;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v89);
    sub_1BB872AFC(v90);
    v91 = v67;
    v88 = v39;
  }
  else
  {
    v91 = 0xD00000000000001CLL;
  }
  v92 = (unint64_t *)((char *)&v38[v35] - v35);
  v213.origin.x = a5;
  v213.origin.y = a6;
  v213.size.width = a7;
  v213.size.height = a8;
  MaxY = CGRectGetMaxY(v213);
  v94 = swift_allocObject();
  *(CGFloat *)(v94 + 16) = MaxY;
  *(_QWORD *)(v94 + 24) = MEMORY[0x1E0DEE9D8];
  *v92 = v91;
  v92[1] = v88;
  v92[2] = v94 | 0x3000000000000000;
  v92[3] = 1;
  v47((char *)v92 + *(int *)(v33 + 28), 1, 1, v46);
  v95 = 0xD00000000000001FLL;
  v96 = 0x80000001BB99CE60;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v97);
    sub_1BB872AFC(v98);
    v99 = v208;
    v96 = v39;
  }
  else
  {
    v99 = 0xD00000000000001FLL;
  }
  v100 = &v38[v35];
  sub_1BB8735D0();
  v102 = v101;
  v103 = swift_allocObject();
  *(_QWORD *)(v103 + 16) = v102;
  *(_QWORD *)(v103 + 24) = MEMORY[0x1E0DEE9D8];
  *v100 = v99;
  v100[1] = v96;
  v100[2] = v103 | 0x3000000000000000;
  v100[3] = 1;
  v47((char *)v100 + *(int *)(v33 + 28), 1, 1, v46);
  v104 = 0x80000001BB99CE80;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v105);
    sub_1BB872AFC((_QWORD *)0xD00000000000001CLL);
    v95 = v208;
    v104 = v39;
  }
  v106 = (unint64_t *)((char *)v38 + 9 * v35);
  sub_1BB8735D0();
  v108 = v107;
  v109 = swift_allocObject();
  *(_QWORD *)(v109 + 16) = v108;
  *(_QWORD *)(v109 + 24) = MEMORY[0x1E0DEE9D8];
  *v106 = v95;
  v106[1] = v104;
  v106[2] = v109 | 0x3000000000000000;
  v106[3] = 1;
  v47((char *)v106 + *(int *)(v33 + 28), 1, 1, v46);
  v110 = 0x80000001BB99CEA0;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v111);
    sub_1BB872AFC(v112);
    v113 = v208;
    v110 = v39;
  }
  else
  {
    v113 = 0xD00000000000001CLL;
  }
  v114 = (unint64_t *)((char *)v38 + 10 * v35);
  v214.origin.x = a5;
  v214.origin.y = a6;
  v214.size.width = a7;
  v214.size.height = a8;
  Width = CGRectGetWidth(v214);
  v116 = swift_allocObject();
  *(CGFloat *)(v116 + 16) = Width;
  *(_QWORD *)(v116 + 24) = MEMORY[0x1E0DEE9D8];
  *v114 = v113;
  v114[1] = v110;
  v114[2] = v116 | 0x3000000000000000;
  v114[3] = 1;
  v47((char *)v114 + *(int *)(v33 + 28), 1, 1, v46);
  v117 = 0xD00000000000001DLL;
  v118 = 0x80000001BB99CEC0;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v119);
    sub_1BB872AFC(v120);
    v117 = v208;
    v118 = v39;
  }
  v121 = (unint64_t *)((char *)v38 + 11 * v35);
  v215.origin.x = a5;
  v215.origin.y = a6;
  v215.size.width = a7;
  v215.size.height = a8;
  Height = CGRectGetHeight(v215);
  v123 = swift_allocObject();
  *(CGFloat *)(v123 + 16) = Height;
  *(_QWORD *)(v123 + 24) = MEMORY[0x1E0DEE9D8];
  *v121 = v117;
  v121[1] = v118;
  v121[2] = v123 | 0x3000000000000000;
  v121[3] = 1;
  v47((char *)v121 + *(int *)(v33 + 28), 1, 1, v46);
  v124 = 0xD00000000000001ALL;
  v125 = 0x80000001BB99CEE0;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v126);
    sub_1BB872AFC(v127);
    v128 = v208;
    v125 = v39;
  }
  else
  {
    v128 = 0xD00000000000001ALL;
  }
  v129 = (unint64_t *)((char *)v38 + 12 * v35);
  v130 = swift_allocObject();
  *(_QWORD *)(v130 + 16) = a17;
  *(_QWORD *)(v130 + 24) = MEMORY[0x1E0DEE9D8];
  *v129 = v128;
  v129[1] = v125;
  v129[2] = v130 | 0x3000000000000000;
  v129[3] = 1;
  v47((char *)v129 + *(int *)(v33 + 28), 1, 1, v46);
  v131 = 0x80000001BB99CF00;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v132);
    sub_1BB872AFC(v133);
    v124 = v208;
    v131 = v39;
  }
  v134 = (unint64_t *)((char *)v38 + 13 * v35);
  v135 = swift_allocObject();
  *(_QWORD *)(v135 + 16) = a18;
  *(_QWORD *)(v135 + 24) = MEMORY[0x1E0DEE9D8];
  *v134 = v124;
  v134[1] = v131;
  v134[2] = v135 | 0x3000000000000000;
  v134[3] = 1;
  v47((char *)v134 + *(int *)(v33 + 28), 1, 1, v46);
  v136 = 0xD000000000000026;
  v137 = 0x80000001BB99CF20;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v138);
    sub_1BB872AFC(v139);
    v140 = v208;
    v137 = v39;
  }
  else
  {
    v140 = 0xD000000000000026;
  }
  v141 = (unint64_t *)((char *)v38 + 14 * v35);
  v216.origin.x = a19;
  v216.origin.y = a20;
  v216.size.width = a21;
  v216.size.height = a22;
  v142 = CGRectGetMinX(v216);
  v143 = swift_allocObject();
  *(CGFloat *)(v143 + 16) = v142;
  *(_QWORD *)(v143 + 24) = MEMORY[0x1E0DEE9D8];
  *v141 = v140;
  v141[1] = v137;
  v141[2] = v143 | 0x3000000000000000;
  v141[3] = 1;
  v47((char *)v141 + *(int *)(v33 + 28), 1, 1, v46);
  v144 = 0x80000001BB99CF50;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v145);
    sub_1BB872AFC(v146);
    v136 = v208;
    v144 = v39;
  }
  v147 = (unint64_t *)((char *)&v38[2 * v35] - v35);
  v217.origin.x = a19;
  v217.origin.y = a20;
  v217.size.width = a21;
  v217.size.height = a22;
  v148 = CGRectGetMinY(v217);
  v149 = swift_allocObject();
  *(CGFloat *)(v149 + 16) = v148;
  *(_QWORD *)(v149 + 24) = MEMORY[0x1E0DEE9D8];
  *v147 = v136;
  v147[1] = v144;
  v147[2] = v149 | 0x3000000000000000;
  v147[3] = 1;
  v47((char *)v147 + *(int *)(v33 + 28), 1, 1, v46);
  v150 = 0xD000000000000026;
  v151 = 0x80000001BB99CF80;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v152);
    sub_1BB872AFC(v153);
    v154 = v208;
    v151 = v39;
  }
  else
  {
    v154 = 0xD000000000000026;
  }
  v155 = &v38[2 * v35];
  v218.origin.x = a19;
  v218.origin.y = a20;
  v218.size.width = a21;
  v218.size.height = a22;
  v156 = CGRectGetMaxX(v218);
  v157 = swift_allocObject();
  *(CGFloat *)(v157 + 16) = v156;
  *(_QWORD *)(v157 + 24) = MEMORY[0x1E0DEE9D8];
  *v155 = v154;
  v155[1] = v151;
  v155[2] = v157 | 0x3000000000000000;
  v155[3] = 1;
  v47((char *)v155 + *(int *)(v33 + 28), 1, 1, v46);
  v158 = 0x80000001BB99CFB0;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v159);
    sub_1BB872AFC(v160);
    v150 = v208;
    v158 = v39;
  }
  v161 = (unint64_t *)((char *)v38 + 17 * v35);
  v219.origin.x = a19;
  v219.origin.y = a20;
  v219.size.width = a21;
  v219.size.height = a22;
  v162 = CGRectGetMaxY(v219);
  v163 = swift_allocObject();
  *(CGFloat *)(v163 + 16) = v162;
  *(_QWORD *)(v163 + 24) = MEMORY[0x1E0DEE9D8];
  *v161 = v150;
  v161[1] = v158;
  v161[2] = v163 | 0x3000000000000000;
  v161[3] = 1;
  v47((char *)v161 + *(int *)(v33 + 28), 1, 1, v46);
  v164 = 0xD000000000000029;
  v165 = 0x80000001BB99CFE0;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v166);
    sub_1BB872AFC(v167);
    v168 = v208;
    v165 = v39;
  }
  else
  {
    v168 = 0xD000000000000029;
  }
  v169 = (unint64_t *)((char *)v38 + 18 * v35);
  sub_1BB8735D0();
  v171 = v170;
  v172 = swift_allocObject();
  *(_QWORD *)(v172 + 16) = v171;
  *(_QWORD *)(v172 + 24) = MEMORY[0x1E0DEE9D8];
  *v169 = v168;
  v169[1] = v165;
  v169[2] = v172 | 0x3000000000000000;
  v169[3] = 1;
  v47((char *)v169 + *(int *)(v33 + 28), 1, 1, v46);
  v173 = 0x80000001BB99D010;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v174);
    sub_1BB872AFC(v175);
    v164 = v208;
    v173 = v39;
  }
  v176 = (unint64_t *)((char *)v38 + 19 * v35);
  sub_1BB8735D0();
  v178 = v177;
  v179 = swift_allocObject();
  *(_QWORD *)(v179 + 16) = v178;
  *(_QWORD *)(v179 + 24) = MEMORY[0x1E0DEE9D8];
  *v176 = v164;
  v176[1] = v173;
  v176[2] = v179 | 0x3000000000000000;
  v176[3] = 1;
  v47((char *)v176 + *(int *)(v33 + 28), 1, 1, v46);
  v180 = 0xD000000000000026;
  v181 = 0x80000001BB99D040;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v182);
    sub_1BB872AFC(v183);
    v180 = v208;
    v181 = v39;
  }
  v184 = (unint64_t *)((char *)v38 + 20 * v35);
  v220.origin.x = a19;
  v220.origin.y = a20;
  v220.size.width = a21;
  v220.size.height = a22;
  v185 = CGRectGetWidth(v220);
  v186 = swift_allocObject();
  *(CGFloat *)(v186 + 16) = v185;
  *(_QWORD *)(v186 + 24) = MEMORY[0x1E0DEE9D8];
  *v184 = v180;
  v184[1] = v181;
  v184[2] = v186 | 0x3000000000000000;
  v184[3] = 1;
  v47((char *)v184 + *(int *)(v33 + 28), 1, 1, v46);
  v187 = 0xD000000000000027;
  v188 = 0x80000001BB99D070;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v189);
    sub_1BB872AFC(v190);
    v187 = v208;
    v188 = v39;
  }
  v191 = (unint64_t *)((char *)v38 + 21 * v35);
  v221.origin.x = a19;
  v221.origin.y = a20;
  v221.size.width = a21;
  v221.size.height = a22;
  v192 = CGRectGetHeight(v221);
  v193 = swift_allocObject();
  *(CGFloat *)(v193 + 16) = v192;
  *(_QWORD *)(v193 + 24) = MEMORY[0x1E0DEE9D8];
  *v191 = v187;
  v191[1] = v188;
  v191[2] = v193 | 0x3000000000000000;
  v191[3] = 1;
  v47((char *)v191 + *(int *)(v33 + 28), 1, 1, v46);
  v194 = 0xD000000000000015;
  v195 = 0x80000001BB99D0A0;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v196);
    sub_1BB872AFC(v197);
    v194 = v208;
    v195 = v39;
  }
  v198 = (unint64_t *)((char *)v38 + 22 * v35);
  v199 = swift_allocObject();
  *(_QWORD *)(v199 + 16) = a23;
  *(_QWORD *)(v199 + 24) = MEMORY[0x1E0DEE9D8];
  *v198 = v194;
  v198[1] = v195;
  v198[2] = v199 | 0x3000000000000000;
  v198[3] = 1;
  v47((char *)v198 + *(int *)(v33 + 28), 1, 1, v46);
  v200 = 0xD000000000000016;
  v201 = 0x80000001BB99D0C0;
  if (v39)
  {
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v202);
    sub_1BB872AFC(v203);
    v200 = v208;
    v201 = v39;
  }
  v204 = (unint64_t *)((char *)v38 + 23 * v35);
  v205 = swift_allocObject();
  *(_QWORD *)(v205 + 16) = a24;
  *(_QWORD *)(v205 + 24) = MEMORY[0x1E0DEE9D8];
  *v204 = v200;
  v204[1] = v201;
  v204[2] = v205 | 0x3000000000000000;
  v204[3] = 1;
  v47((char *)v204 + *(int *)(v33 + 28), 1, 1, v46);
  return v207;
}

void sub_1BA7EB4AC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

unint64_t sub_1BA7EB4C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3B50C8;
  if (!qword_1ED3B50C8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B50D0, (uint64_t (*)(void))sub_1BA82A570, (uint64_t)&type metadata for FormatButtonNodeAction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3B50C8);
  }
  return result;
}

unint64_t sub_1BA7EB530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B448;
  if (!qword_1ED39B448)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B50D0, (uint64_t (*)(void))sub_1BA82A570, (uint64_t)&type metadata for FormatButtonNodeAction, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B448);
  }
  return result;
}

void sub_1BA7EB598(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  v8 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v8);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EE8, v3, &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v5);
  sub_1BA710610(0, (unint64_t *)&qword_1ED3B5EF0, v6, (unint64_t *)&qword_1ED3C44F0, (uint64_t)&protocol conformance descriptor for Date);
  MEMORY[0x1E0C80A78](v7);
  __asm { BR              X10 }
}

uint64_t sub_1BA7EB724()
{
  uint64_t v0;
  uint64_t v1;

  **(_QWORD **)(v1 - 296) = v0;
  return swift_retain();
}

uint64_t sub_1BA7ECF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  unint64_t v54;
  size_t v55;
  uint64_t isStackAllocationSafe;
  uint64_t v57;
  void *v58;
  char v59;
  char v60;
  uint64_t result;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[2];
  _QWORD v75[8];

  v75[6] = *MEMORY[0x1E0C80C00];
  v66 = *(_QWORD *)(a4 + 16);
  if (v66)
  {
    v7 = sub_1BA793D58();
    v8 = *(_QWORD *)(*(_QWORD *)(v7 + 40) + 16);
    swift_beginAccess();
    v9 = *(_QWORD *)(*(_QWORD *)(v8 + 16) + 16);
    v63 = a2;
    if (v9)
    {
      v75[0] = *(_QWORD *)(v7 + 56);
      v10 = swift_bridgeObjectRetain();
      v11 = sub_1BA6E42A0(v10);
      sub_1BA6E3FB8(v11);
      swift_release();
      v73 = v75[0];
    }
    else
    {
      v73 = sub_1BA6E3F38();
      swift_release();
    }
    v65 = a4 + 32;
    v62[0] = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v12 = 0;
    v62[1] = a3;
    v64 = a3;
    while (1)
    {
      v14 = (uint64_t *)(v65 + 32 * v12);
      v16 = *v14;
      v15 = v14[1];
      v17 = v14[3];
      v67 = v14[2];
      v18 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      v70 = v17;
      swift_bridgeObjectRetain();
      if (v18 != -1)
        swift_once();
      v19 = qword_1ED4768D0;
      v20 = *(_QWORD *)(qword_1ED4768D0 + 24);
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      v21 = (uint64_t *)(v19 + 16);
      swift_beginAccess();
      v22 = *(_QWORD *)(v19 + 16);
      v23 = *(_QWORD *)(v22 + 16);
      v71 = v12;
      if (!v23)
        goto LABEL_15;
      swift_bridgeObjectRetain();
      v24 = sub_1BA6E35A8(v16, v15);
      if ((v25 & 1) == 0)
        break;
      v26 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 24 * v24 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v48 = *(_QWORD *)(v26 + 16);
      if (!v48)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v71;
        goto LABEL_8;
      }
      v69 = v15;
      v72 = v26;
      v49 = (uint64_t *)(v26 + 64);
      while (1)
      {
        v50 = *(v49 - 1);
        v51 = *v49;
        v52 = *(_BYTE *)(v50 + 32);
        v53 = v52 & 0x3F;
        v54 = (unint64_t)((1 << v52) + 63) >> 6;
        v55 = 8 * v54;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v53 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v62 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v55);
          v57 = sub_1BA6EB5B4((uint64_t)v62 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v50, v73);
          swift_bridgeObjectRelease();
        }
        else
        {
          v58 = (void *)swift_slowAlloc();
          bzero(v58, v55);
          v57 = sub_1BA6EB5B4((uint64_t)v58, v54, v50, v73);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v58, -1, -1);
        }
        v59 = sub_1BA6EB330(v57, v50);
        swift_release();
        if ((v59 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v49 += 5;
        if (!--v48)
          goto LABEL_7;
      }
      v60 = sub_1BA6EBD20(v73, v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0)
        goto LABEL_30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v71;
      v63 = v67;
      v64 = v70;
LABEL_8:
      swift_bridgeObjectRelease();
      v12 = v13 + 1;
      if (v12 == v66)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v63;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    v68 = v20;
    swift_endAccess();
    v74[0] = v16;
    v74[1] = v15;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v74, v75);
    v27 = v75[1];
    v69 = v75[0];
    v28 = v75[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72 = v28;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v74[0] = *v21;
    v30 = v74[0];
    *v21 = 0x8000000000000000;
    v31 = v16;
    v32 = v15;
    v34 = sub_1BA6E35A8(v16, v15);
    v35 = *(_QWORD *)(v30 + 16);
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    v38 = v33;
    if (*(_QWORD *)(v30 + 24) < v37)
    {
      sub_1BA7AAAE4(v37, isUniquelyReferenced_nonNull_native);
      v39 = sub_1BA6E35A8(v31, v32);
      if ((v38 & 1) != (v40 & 1))
      {
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v34 = v39;
      v41 = (_QWORD *)v74[0];
      if ((v38 & 1) == 0)
        goto LABEL_24;
LABEL_22:
      v42 = (uint64_t *)(v41[7] + 24 * v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v42 = v69;
      v42[1] = v27;
      v26 = v72;
      v42[2] = v72;
      v15 = v32;
LABEL_26:
      *v21 = (uint64_t)v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v41 = (_QWORD *)v74[0];
      if ((v33 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v41 = (_QWORD *)v74[0];
      if ((v38 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v41[(v34 >> 6) + 8] |= 1 << v34;
    v43 = (uint64_t *)(v41[6] + 16 * v34);
    *v43 = v31;
    v43[1] = v32;
    v44 = (uint64_t *)(v41[7] + 24 * v34);
    *v44 = v69;
    v44[1] = v27;
    v26 = v72;
    v44[2] = v72;
    v45 = v41[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_42;
    v15 = v32;
    v41[2] = v47;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

char *sub_1BA7ED5D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v37 = a2;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v36 - v17;
  if (a5)
  {
    if (a5 == 1)
    {
      swift_bridgeObjectRetain();
      v19 = objc_msgSend(a1, sel_identifier);
      if (!v19)
      {
        sub_1BB8729A0();
        v19 = (id)sub_1BB872970();
        swift_bridgeObjectRelease();
      }
      v20 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_, v19);

      sub_1BB86C5EC();
      v21 = v37;
      sub_1BA7F0B28(v37, a3, (uint64_t)v18);
      sub_1BA7EDFFC(a3, a4, 1);
      v22 = *(void (**)(char *, uint64_t))(v13 + 8);
      v22(v15, v12);
      if (qword_1ED3BA8B8 != -1)
        swift_once();
      v23 = qword_1ED3B0AE8;
      v24 = v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config;
      v25 = *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
      if (v25)
      {
        v26 = *(_QWORD *)(v24 + 8);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BA7EDAF0((uint64_t)v18, v26, v25, (uint64_t)v11);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v18, v12);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      v15 = (char *)sub_1BA7E8134(v23, (uint64_t)v11);
      v22(v18, v12);
    }
    else
    {
      if (a3 | a4)
      {
        if (a3 ^ 1 | a4)
        {
          if (qword_1ED39DFB0 != -1)
            swift_once();
          type metadata accessor for FormatCommandAction();
          swift_allocObject();
          swift_unknownObjectRetain();
          v34 = swift_retain();
          v29 = sub_1BAFEC334(v34, (uint64_t)a1);
        }
        else
        {
          if (qword_1ED3BA8E8 != -1)
            swift_once();
          type metadata accessor for FormatCommandAction();
          swift_allocObject();
          swift_unknownObjectRetain();
          v28 = swift_retain();
          v29 = sub_1BAFEC088(v28, (uint64_t)a1);
        }
        v15 = (char *)v29;
      }
      else
      {
        if (qword_1ED3BA900 != -1)
          swift_once();
        v30 = qword_1ED3C4C50;
        swift_retain();
        swift_unknownObjectRetain();
        sub_1BB86DD80();
        v31 = *(_BYTE *)(v39 + 16);
        swift_release();
        v38 = v31;
        if (FeedKind.rawValue.getter() == 0xD000000000000013 && v32 == 0x80000001BB95A3A0)
        {
          swift_bridgeObjectRelease();
          v33 = 1;
        }
        else
        {
          v33 = sub_1BB874398();
          swift_bridgeObjectRelease();
        }
        type metadata accessor for FormatCommandAction();
        swift_allocObject();
        v15 = (char *)sub_1BAFEBDE0(v30, (uint64_t)a1, v33 & 1 | 0x100u);
      }
      swift_release();
    }
  }
  else
  {
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    *v27 = 0xD000000000000014;
    v27[1] = 0x80000001BB8DFF20;
    v27[5] = &type metadata for FormatVersions.StarSky;
    v27[6] = &off_1E734BDC0;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  return v15;
}

uint64_t sub_1BA7EDAF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v54 = a2;
  v55 = a3;
  v61 = a4;
  v5 = sub_1BB86C67C();
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  MEMORY[0x1E0C80A78](v5);
  v57 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, v7);
  MEMORY[0x1E0C80A78](v8);
  v56 = (char *)&v48 - v9;
  v10 = sub_1BB86BF20();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v58 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - v14;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v48 - v17;
  v19 = sub_1BB86BFF8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v48 - v24;
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1BA502AD0((uint64_t)v18, (unint64_t *)&unk_1ED3B04A0, (void (*)(uint64_t))MEMORY[0x1E0CAE890]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v61, a1, v60);
  }
  else
  {
    v52 = v19;
    v53 = a1;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v18, v19);
    sub_1BB86BFEC();
    v50 = v25;
    sub_1BB86BFD4();
    sub_1BB86BFB0();
    v27 = sub_1BB86BF38();
    if (v27)
      v28 = v27;
    else
      v28 = MEMORY[0x1E0DEE9D8];
    v29 = *(_QWORD *)(v28 + 16);
    v30 = v61;
    v51 = v20;
    if (v29)
    {
      v49 = v22;
      v31 = v28 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      v32 = *(_QWORD *)(v11 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v33(v15, v31, v10);
        if (sub_1BB86BF08() == 0x6469635F66666ELL && v34 == 0xE700000000000000)
          break;
        v35 = sub_1BB874398();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
        if ((v35 & 1) != 0)
          goto LABEL_21;
        v31 += v32;
        if (!--v29)
        {
          swift_bridgeObjectRelease();
          v30 = v61;
          v22 = v49;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
LABEL_21:
      swift_bridgeObjectRelease_n();
      v46 = v52;
      v47 = *(void (**)(char *, uint64_t))(v51 + 8);
      v47(v49, v52);
      v47(v50, v46);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v61, v53, v60);
    }
    else
    {
LABEL_13:
      sub_1BB86BEFC();
      v36 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v28 = sub_1BA785BF0(0, *(_QWORD *)(v28 + 16) + 1, 1, v28);
      v37 = (uint64_t)v56;
      v38 = v52;
      v40 = *(_QWORD *)(v28 + 16);
      v39 = *(_QWORD *)(v28 + 24);
      v41 = v50;
      if (v40 >= v39 >> 1)
        v28 = sub_1BA785BF0(v39 > 1, v40 + 1, 1, v28);
      *(_QWORD *)(v28 + 16) = v40 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v28+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v40, v58, v10);
      sub_1BB86BF44();
      sub_1BB86BFA4();
      sub_1BB86BFE0();
      sub_1BB86BF80();
      v42 = *(void (**)(char *, uint64_t))(v51 + 8);
      v42(v36, v38);
      v42(v41, v38);
      v44 = v59;
      v43 = v60;
      v45 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v57, v53, v60);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v37, 1, v43) == 1)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v30, v45, v43);
        return sub_1BA502AD0(v37, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v43);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v30, v37, v43);
      }
    }
  }
}

uint64_t sub_1BA7EDFFC(uint64_t result, uint64_t a2, char a3)
{
  if (a3 != 1)
  {
    if (a3)
      return result;
    sub_1BA5E800C(result);
  }
  return swift_bridgeObjectRelease();
}

void sub_1BA7EE044(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA7EE078()
{
  sub_1BB86C8B0();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0520, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  return sub_1BB872958() & 1;
}

uint64_t FormatShadow.color.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

void sub_1BA7EE238(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_1BA7EE264(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA742954(a1, a2);
  if (!v3)
    *v2 = v4;
}

uint64_t sub_1BA7EE2F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  int *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  unint64_t *v39;
  unint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;

  v51 = a2;
  v46 = a1;
  v47 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v47);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6D5338();
  v57 = v5;
  v54 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v56 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v45 - v8;
  v9 = sub_1BB871A70();
  MEMORY[0x1E0C80A78](v9);
  v58 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1BB871B6C();
  v11 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB8721C0();
  v15 = *(_QWORD *)(v14 - 8);
  v59 = v14;
  v60 = v15;
  MEMORY[0x1E0C80A78](v14);
  v52 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v45 - v18;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0C18, (void (*)(uint64_t))sub_1BA7EF0F8);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v45 - v21;
  v53 = v2;
  v23 = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176));
  sub_1BA7EF0F8();
  v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v49 = v24;
  v48(v22, 1, 1, v24);
  sub_1BB872178();
  v45 = v23;
  sub_1BB872100();
  swift_bridgeObjectRelease();
  sub_1BA502AD0((uint64_t)v22, (unint64_t *)&qword_1ED3B0C18, (void (*)(uint64_t))sub_1BA7EF0F8);
  sub_1BB872178();
  v25 = *MEMORY[0x1E0D52788];
  v26 = sub_1BB871B60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v13, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0D52780], v50);
  sub_1BB872178();
  sub_1BB8720F4();
  v27 = v59;
  swift_bridgeObjectRelease();
  v28 = v54;
  sub_1BB872184();
  v30 = *v46;
  v29 = v46[1];
  v31 = v60;
  v32 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  v33 = v52;
  v58 = v19;
  v32(v52, v19, v27);
  v34 = (int *)v47;
  *(_QWORD *)&v4[*(int *)(v47 + 24)] = 0x2000;
  v35 = &v4[v34[7]];
  *(_QWORD *)v35 = 0;
  v35[8] = 1;
  *(_OWORD *)&v4[v34[8]] = xmmword_1BB886E80;
  *(_QWORD *)v4 = v30;
  *((_QWORD *)v4 + 1) = v29;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v4[v34[5]], v33, v27);
  v36 = v55;
  v48(v22, 1, 1, v49);
  sub_1BA4A2870(&qword_1ED3D35E0, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
  swift_bridgeObjectRetain();
  swift_retain();
  v38 = v56;
  v37 = v57;
  sub_1BB871BB4();
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v38, v36, v37);
  v39 = (unint64_t *)(v53 + *(_QWORD *)(*(_QWORD *)v53 + 192));
  swift_beginAccess();
  v40 = *v39;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v39 = v40;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v40 = sub_1BA6D5324(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
    *v39 = v40;
  }
  v43 = *(_QWORD *)(v40 + 16);
  v42 = *(_QWORD *)(v40 + 24);
  if (v43 >= v42 >> 1)
  {
    v40 = sub_1BA6D5324(v42 > 1, v43 + 1, 1, v40);
    *v39 = v40;
  }
  *(_QWORD *)(v40 + 16) = v43 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v40+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v43, v38, v37);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v36, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v58, v59);
}

uint64_t sub_1BA7EE7F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v27 = a2;
  v28 = a3;
  sub_1BA4A3FB4(0, &qword_1ED3B0BA8, (void (*)(uint64_t))MEMORY[0x1E0D53248]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - v5;
  v7 = sub_1BB8719EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB871BFC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v26 = (void (*)(char *, uint64_t, uint64_t))a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D525B8], v7);
  sub_1BB871BF0();
  sub_1BA4A2870(&qword_1ED3B0B48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52930], MEMORY[0x1E0D52928]);
  sub_1BB871EF0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = *MEMORY[0x1E0D53228];
  v17 = sub_1BB871FA4();
  v26 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104);
  v26(v6, v16, v17);
  v25 = *MEMORY[0x1E0D53240];
  v18 = v25;
  v19 = sub_1BB871FB0();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
  v21(v6, v18, v19);
  v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v24(v6, 0, 1, v19);
  sub_1BB871C80();
  sub_1BA4A2870(&qword_1ED3B0B58, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52BF8], MEMORY[0x1E0D52BF0]);
  sub_1BB871EE4();
  sub_1BA502AD0((uint64_t)v6, &qword_1ED3B0BA8, (void (*)(uint64_t))MEMORY[0x1E0D53248]);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v26(v6, *MEMORY[0x1E0D53230], v17);
  v21(v6, v25, v19);
  v24(v6, 0, 1, v19);
  sub_1BB871EE4();
  return sub_1BA502AD0((uint64_t)v6, &qword_1ED3B0BA8, (void (*)(uint64_t))MEMORY[0x1E0D53248]);
}

uint64_t sub_1BA7EEAF4(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  int *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  unint64_t *v58;
  unint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v61;
  unint64_t v62;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;

  v67 = a4;
  v74 = a2;
  v80 = a1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0C18, (void (*)(uint64_t))sub_1BA7EF0F8);
  MEMORY[0x1E0C80A78](v8);
  v78 = (char *)&v64 - v9;
  v73 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1E0C80A78](v73);
  v75 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6D5338();
  v76 = v11;
  v66 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v68 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v77 = (char *)&v64 - v14;
  v15 = sub_1BB871A70();
  MEMORY[0x1E0C80A78](v15);
  v72 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB871B6C();
  v69 = *(_QWORD *)(v17 - 8);
  v70 = v17;
  MEMORY[0x1E0C80A78](v17);
  v65 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1BB8721C0();
  v83 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v71 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v82 = (char *)&v64 - v21;
  v22 = sub_1BB871C80();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v64 - v27;
  v79 = v5;
  v29 = (_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 184));
  v31 = v29[3];
  v30 = v29[4];
  __swift_project_boxed_opaque_existential_1(v29, v31);
  objc_msgSend(a3, sel_frame);
  v33 = v32;
  v35 = v34;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v36(v28, v67, v22);
  v36(v25, a5, v22);
  v37 = *(unsigned __int8 *)(v23 + 80);
  v38 = (v37 + 16) & ~v37;
  v39 = (v24 + v37 + v38) & ~v37;
  v40 = swift_allocObject();
  v41 = v40 + v38;
  v42 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 32);
  v42(v41, v28, v22);
  v43 = v40 + v39;
  v44 = v81;
  v42(v43, v25, v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t (*)@<X0>(_QWORD *@<X0>, uint64_t@<X8>), uint64_t, uint64_t, uint64_t, double, double))(v30 + 24))(v80, v74, sub_1BA51F030, v40, v31, v30, v33, v35);
  swift_release();
  v45 = (int *)v73;
  sub_1BB872178();
  sub_1BB872130();
  swift_bridgeObjectRelease();
  sub_1BB872178();
  (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v65, *MEMORY[0x1E0D527B0], v70);
  sub_1BB872178();
  sub_1BB8720F4();
  swift_bridgeObjectRelease();
  v46 = v82;
  v47 = v76;
  sub_1BB872184();
  v49 = *v80;
  v48 = v80[1];
  v50 = v83;
  v51 = v71;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v71, v46, v44);
  v52 = v75;
  *(_QWORD *)&v75[v45[6]] = 0x2000;
  v53 = &v52[v45[7]];
  *(_QWORD *)v53 = 0;
  v53[8] = 1;
  *(_OWORD *)&v52[v45[8]] = xmmword_1BB886E80;
  *(_QWORD *)v52 = v49;
  *((_QWORD *)v52 + 1) = v48;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v52[v45[5]], v51, v44);
  sub_1BA7EF0F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v78, 1, 1, v54);
  sub_1BA4A2870(&qword_1ED3D35E0, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t)&protocol conformance descriptor for FeedBannerAd);
  swift_bridgeObjectRetain();
  swift_retain();
  v55 = v77;
  sub_1BB871BB4();
  v56 = v66;
  v57 = v68;
  (*(void (**)(void))(v66 + 16))();
  v58 = (unint64_t *)(v79 + *(_QWORD *)(*(_QWORD *)v79 + 192));
  swift_beginAccess();
  v59 = *v58;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v58 = v59;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v59 = sub_1BA6D5324(0, *(_QWORD *)(v59 + 16) + 1, 1, v59);
    *v58 = v59;
  }
  v62 = *(_QWORD *)(v59 + 16);
  v61 = *(_QWORD *)(v59 + 24);
  if (v62 >= v61 >> 1)
  {
    v59 = sub_1BA6D5324(v61 > 1, v62 + 1, 1, v59);
    *v58 = v59;
  }
  *(_QWORD *)(v59 + 16) = v62 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v59+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v62, v57, v47);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v47);
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v82, v81);
}

void sub_1BA7EF0F8()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3B0C10)
  {
    sub_1BB871ECC();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D53030];
    sub_1BB871F5C();
    sub_1BA4A2870(&qword_1ED3D2EF0, v0, MEMORY[0x1E0D53028]);
    v1 = sub_1BB872220();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3B0C10);
  }
}

uint64_t sub_1BA7EF19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  return FeedBannerAdRequester.scheduleRequest(for:placement:position:createContext:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1BA7EF1BC(uint64_t a1)
{
  uint64_t v2;

  sub_1BA7EF1F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA7EF1F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B17E0)
  {
    sub_1BA83CC6C();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B17E0);
  }
}

uint64_t sub_1BA7EF24C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;

  sub_1BA6AA10C(0, &qword_1ED3B9720, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  v39 = v3;
  v30 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  v8 = type metadata accessor for FeedHeadline(0);
  v37 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = *(_QWORD *)(v1 + 16);
  v32 = *(_QWORD *)(v11 + 16);
  if (v32)
  {
    v31 = v11 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = 0;
    v13 = 0;
    v29 = v11;
    while (v12 < *(_QWORD *)(v11 + 16))
    {
      v36 = v12;
      v14 = v31 + 16 * v12;
      v15 = *(void (**)(uint64_t *__return_ptr, char *, _QWORD *))v14;
      v16 = *(_QWORD *)(v14 + 8);
      swift_retain_n();
      v17 = swift_bridgeObjectRetain();
      v18 = (_QWORD *)sub_1BACAC3F0(v17, &qword_1ED3B9720, (void (*)(uint64_t))type metadata accessor for FeedHeadline, &qword_1ED3B9FE8);
      swift_bridgeObjectRelease();
      v40 = v18;
      sub_1BA7EF618(&v40, v15, v16);
      v35 = v13;
      if (v13)
        goto LABEL_19;
      swift_bridgeObjectRelease();
      swift_release();
      v19 = v40;
      v20 = v40[2];
      if (v20)
      {
        v34 = v16;
        v40 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        sub_1BA7C2ABC(0, v20, 0);
        v21 = *(unsigned __int8 *)(v30 + 80);
        v33 = v19;
        v22 = (uint64_t)v19 + ((v21 + 32) & ~v21);
        v23 = *(_QWORD *)(v30 + 72);
        a1 = v40;
        do
        {
          sub_1BA6AA01C(v22, (uint64_t)v7, (uint64_t)&qword_1ED3B9720, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA6AA10C);
          v24 = *(int *)(v39 + 48);
          v25 = (uint64_t)&v38[v24];
          sub_1BA4C2DD8((uint64_t)&v7[v24], (uint64_t)&v38[v24], type metadata accessor for FeedHeadline);
          sub_1BA5193C4(v25, (uint64_t)v10, type metadata accessor for FeedHeadline);
          sub_1BA6AA068((uint64_t)v7, (uint64_t)&qword_1ED3B9720, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD))sub_1BA6AA10C);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BA7C2ABC(0, a1[2] + 1, 1);
            a1 = v40;
          }
          v27 = a1[2];
          v26 = a1[3];
          if (v27 >= v26 >> 1)
          {
            sub_1BA7C2ABC(v26 > 1, v27 + 1, 1);
            a1 = v40;
          }
          a1[2] = v27 + 1;
          sub_1BA5193C4((uint64_t)v10, (uint64_t)a1+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(_QWORD *)(v37 + 72) * v27, type metadata accessor for FeedHeadline);
          v22 += v23;
          --v20;
        }
        while (v20);
        swift_release();
        swift_release();
        v11 = v29;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      v13 = v35;
      v12 = v36 + 1;
      if (v36 + 1 == v32)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return (uint64_t)a1;
  }
  return result;
}

uint64_t sub_1BA7EF5CC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BA6AA10C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BA7EF618(_QWORD **a1, void (*a2)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12[2];

  sub_1BA6AA10C(0, &qword_1ED3B9720, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = (_QWORD *)sub_1BACAB820(v9);
  v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v12[1] = v10;
  swift_retain();
  sub_1BA7EF74C(v12, a2, a3, &qword_1ED3B9720, (void (*)(uint64_t))type metadata accessor for FeedHeadline, (unint64_t *)&unk_1ED3B9750, (uint64_t)&unk_1E729EFD0, (uint64_t)&unk_1E729EFF8, (uint64_t)&unk_1E729F020);
  swift_release();
  *a1 = v9;
  swift_release();
  return swift_release();
}

uint64_t sub_1BA7EF74C(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a3, unint64_t *a4, void (*a5)(uint64_t), unint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  _QWORD *v58;
  unint64_t *v59;
  unint64_t v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t *v82;
  _QWORD *v83;
  void (*v84)(uint64_t);
  unint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  char v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  unint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  unint64_t v163;
  uint64_t result;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  unint64_t v178;
  char *v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  unint64_t *v185;
  void (*v186)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t *v192;
  void (*v193)(uint64_t);
  uint64_t v194;

  v174 = a8;
  v192 = a4;
  sub_1BA6AA10C(0, a4, a5);
  v187 = v14;
  v175 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v170 = (uint64_t)&v165 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v188 = (uint64_t)&v165 - v17;
  v185 = a6;
  v193 = a5;
  sub_1BA6AA16C(0, a6, a5);
  v181 = v18;
  MEMORY[0x1E0C80A78](v18);
  v180 = (uint64_t *)((char *)&v165 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v20);
  v179 = (char *)&v165 - v21;
  v22 = swift_allocObject();
  v186 = a2;
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = a3;
  v23 = a1[1];
  swift_retain_n();
  v24 = sub_1BB8741F4();
  if (v24 >= v23)
  {
    if (v23 < 0)
      goto LABEL_140;
    if (v23)
    {
      swift_retain();
      sub_1BACA6044(0, v23, 1, a1, v186, a3, v192, v193, a9, v185);
    }
    swift_release();
    swift_release();
    return swift_release_n();
  }
  if (v23 >= 0)
    v25 = v23;
  else
    v25 = v23 + 1;
  if (v23 < -1)
    goto LABEL_148;
  v26 = v24;
  v184 = a3;
  v167 = v22;
  if (v23 < 2)
  {
    v173 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v175 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v175 + 80));
    v166 = MEMORY[0x1E0DEE9D8];
    if (v23 == 1)
      goto LABEL_13;
    v31 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v176 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_106:
    if (v31 >= 2)
    {
      v150 = *a1;
      do
      {
        v151 = v31 - 2;
        if (v31 < 2)
          goto LABEL_135;
        if (!v150)
          goto LABEL_147;
        v152 = *(_QWORD *)&v176[16 * v151 + 32];
        v153 = *(_QWORD *)&v176[16 * v31 + 24];
        v154 = *(_QWORD *)(v175 + 72);
        v155 = v150 + v154 * v152;
        v156 = v150 + v154 * *(_QWORD *)&v176[16 * v31 + 16];
        v157 = v150 + v154 * v153;
        v158 = v184;
        swift_retain();
        v159 = v155;
        v160 = v177;
        sub_1BACA71C0(v159, v156, v157, v173, v186, v158, v192, v193, v174, v185);
        v177 = v160;
        if (v160)
          break;
        if (v153 < v152)
          goto LABEL_136;
        v161 = v176;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v161 = sub_1BACAB464((uint64_t)v161);
        if (v151 >= *((_QWORD *)v161 + 2))
          goto LABEL_137;
        v162 = &v161[16 * v151 + 32];
        *(_QWORD *)v162 = v152;
        *((_QWORD *)v162 + 1) = v153;
        v163 = *((_QWORD *)v161 + 2);
        if (v31 > v163)
          goto LABEL_138;
        memmove(&v161[16 * v31 + 16], &v161[16 * v31 + 32], 16 * (v163 - v31));
        v176 = v161;
        *((_QWORD *)v161 + 2) = v163 - 1;
        v31 = v163 - 1;
      }
      while (v163 > 2);
    }
LABEL_117:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v166 + 16) = 0;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  v27 = v25 >> 1;
  v28 = sub_1BB872E74();
  *(_QWORD *)(v28 + 16) = v27;
  v29 = *(unsigned __int8 *)(v175 + 80);
  v166 = v28;
  v173 = v28 + ((v29 + 32) & ~v29);
LABEL_13:
  v30 = 0;
  v176 = (char *)MEMORY[0x1E0DEE9D8];
  v183 = a1;
  v168 = v26;
  while (1)
  {
    v32 = v30;
    v33 = v30 + 1;
    v171 = v30;
    if (v30 + 1 >= v23)
    {
      v49 = v30 + 1;
    }
    else
    {
      v172 = *a1;
      v34 = *(_QWORD *)(v175 + 72);
      v35 = (_QWORD *)(v172 + v34 * v33);
      v36 = (uint64_t *)(v172 + v34 * v30);
      v37 = *(int *)(v187 + 48);
      v38 = *v36;
      v39 = (uint64_t)v36 + v37;
      v40 = v179;
      *(_QWORD *)v179 = *v35;
      v190 = v23;
      v41 = v181;
      v42 = v193;
      sub_1BA4C2DD8((uint64_t)v35 + v37, (uint64_t)&v40[*(int *)(v181 + 48)], (uint64_t (*)(_QWORD))v193);
      v43 = v180;
      *v180 = v38;
      v44 = *(int *)(v41 + 48);
      v23 = v190;
      sub_1BA4C2DD8(v39, (uint64_t)v43 + v44, (uint64_t (*)(_QWORD))v42);
      v186((uint64_t *)((char *)&v194 + 1), v40, v43);
      v45 = (uint64_t)v43;
      v32 = v171;
      v46 = v185;
      sub_1BA6AA068(v45, (uint64_t)v185, (uint64_t)v42, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
      v47 = (uint64_t)v42;
      v48 = v172;
      sub_1BA6AA068((uint64_t)v40, (uint64_t)v46, v47, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
      LODWORD(v189) = BYTE1(v194);
      v49 = v32 + 2;
      v191 = v34;
      if (v32 + 2 >= v23)
      {
        a1 = v183;
        v60 = v34;
      }
      else
      {
        v182 = v34 * v33;
        v178 = v34 * v49;
        while (1)
        {
          v50 = v49;
          v51 = v179;
          v52 = v181;
          v53 = *(int *)(v187 + 48);
          v54 = v48 + v178 + v53;
          v55 = *(_QWORD *)(v48 + v182);
          v56 = v48 + v182 + v53;
          *(_QWORD *)v179 = *(_QWORD *)(v48 + v178);
          v57 = v193;
          sub_1BA4C2DD8(v54, (uint64_t)&v51[*(int *)(v52 + 48)], (uint64_t (*)(_QWORD))v193);
          v58 = v180;
          *v180 = v55;
          sub_1BA4C2DD8(v56, (uint64_t)v58 + *(int *)(v52 + 48), (uint64_t (*)(_QWORD))v57);
          v186(&v194, v51, v58);
          v59 = v185;
          sub_1BA6AA068((uint64_t)v58, (uint64_t)v185, (uint64_t)v57, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
          sub_1BA6AA068((uint64_t)v51, (uint64_t)v59, (uint64_t)v57, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
          if ((_DWORD)v189 != v194)
            break;
          v23 = v190;
          v60 = v191;
          v48 += v191;
          v49 = v50 + 1;
          if (v190 == v50 + 1)
          {
            v49 = v190;
            a1 = v183;
            v32 = v171;
            goto LABEL_25;
          }
        }
        a1 = v183;
        v49 = v50;
        v32 = v171;
        v23 = v190;
        v60 = v191;
      }
LABEL_25:
      v61 = v193;
      v26 = v168;
      if ((_DWORD)v189)
      {
        if (v49 < v32)
          goto LABEL_141;
        if (v32 < v49)
        {
          v62 = 0;
          v63 = v60 * (v49 - 1);
          v64 = v49 * v60;
          v65 = v32;
          v66 = v32 * v60;
          do
          {
            if (v65 != v49 + v62 - 1)
            {
              if (!v172)
                goto LABEL_146;
              v67 = v49;
              v68 = v172 + v66;
              v69 = v172 + v63;
              v70 = v61;
              v71 = v172;
              sub_1BA7EF5CC(v172 + v66, v170, v192, v70);
              if (v66 < v63 || v68 >= v71 + v64)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v66 != v63)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              v61 = v193;
              sub_1BA7EF5CC(v170, v69, v192, v193);
              a1 = v183;
              v49 = v67;
              v60 = v191;
            }
            ++v65;
            --v62;
            v63 -= v60;
            v64 -= v60;
            v66 += v60;
          }
          while (v65 < v49 + v62);
          v26 = v168;
          v32 = v171;
          v23 = v190;
        }
      }
    }
    v72 = v176;
    if (v49 < v23)
    {
      if (__OFSUB__(v49, v32))
        goto LABEL_139;
      if (v49 - v32 < v26)
        break;
    }
LABEL_57:
    if (v49 < v32)
      goto LABEL_134;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v182 = v49;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v72 = sub_1BACAA368(0, *((_QWORD *)v72 + 2) + 1, 1, v72);
    v90 = *((_QWORD *)v72 + 2);
    v89 = *((_QWORD *)v72 + 3);
    v31 = v90 + 1;
    if (v90 >= v89 >> 1)
      v72 = sub_1BACAA368((char *)(v89 > 1), v90 + 1, 1, v72);
    *((_QWORD *)v72 + 2) = v31;
    v91 = v72 + 32;
    v92 = &v72[16 * v90 + 32];
    v93 = v182;
    *(_QWORD *)v92 = v32;
    *((_QWORD *)v92 + 1) = v93;
    v176 = v72;
    if (v90)
    {
      while (1)
      {
        v94 = v31 - 1;
        if (v31 >= 4)
        {
          v99 = &v91[16 * v31];
          v100 = *((_QWORD *)v99 - 8);
          v101 = *((_QWORD *)v99 - 7);
          v105 = __OFSUB__(v101, v100);
          v102 = v101 - v100;
          if (v105)
            goto LABEL_123;
          v104 = *((_QWORD *)v99 - 6);
          v103 = *((_QWORD *)v99 - 5);
          v105 = __OFSUB__(v103, v104);
          v97 = v103 - v104;
          v98 = v105;
          if (v105)
            goto LABEL_124;
          v106 = v31 - 2;
          v107 = &v91[16 * v31 - 32];
          v109 = *(_QWORD *)v107;
          v108 = *((_QWORD *)v107 + 1);
          v105 = __OFSUB__(v108, v109);
          v110 = v108 - v109;
          if (v105)
            goto LABEL_126;
          v105 = __OFADD__(v97, v110);
          v111 = v97 + v110;
          if (v105)
            goto LABEL_129;
          if (v111 >= v102)
          {
            v129 = &v91[16 * v94];
            v131 = *(_QWORD *)v129;
            v130 = *((_QWORD *)v129 + 1);
            v105 = __OFSUB__(v130, v131);
            v132 = v130 - v131;
            if (v105)
              goto LABEL_133;
            v122 = v97 < v132;
            goto LABEL_94;
          }
        }
        else
        {
          if (v31 != 3)
          {
            v123 = *((_QWORD *)v72 + 4);
            v124 = *((_QWORD *)v72 + 5);
            v105 = __OFSUB__(v124, v123);
            v116 = v124 - v123;
            v117 = v105;
            goto LABEL_88;
          }
          v96 = *((_QWORD *)v72 + 4);
          v95 = *((_QWORD *)v72 + 5);
          v105 = __OFSUB__(v95, v96);
          v97 = v95 - v96;
          v98 = v105;
        }
        if ((v98 & 1) != 0)
          goto LABEL_125;
        v106 = v31 - 2;
        v112 = &v91[16 * v31 - 32];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v115 = __OFSUB__(v113, v114);
        v116 = v113 - v114;
        v117 = v115;
        if (v115)
          goto LABEL_128;
        v118 = &v91[16 * v94];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v105 = __OFSUB__(v119, v120);
        v121 = v119 - v120;
        if (v105)
          goto LABEL_131;
        if (__OFADD__(v116, v121))
          goto LABEL_132;
        if (v116 + v121 >= v97)
        {
          v122 = v97 < v121;
LABEL_94:
          if (v122)
            v94 = v106;
          goto LABEL_96;
        }
LABEL_88:
        if ((v117 & 1) != 0)
          goto LABEL_127;
        v125 = &v91[16 * v94];
        v127 = *(_QWORD *)v125;
        v126 = *((_QWORD *)v125 + 1);
        v105 = __OFSUB__(v126, v127);
        v128 = v126 - v127;
        if (v105)
          goto LABEL_130;
        if (v128 < v116)
          goto LABEL_15;
LABEL_96:
        v133 = v94 - 1;
        if (v94 - 1 >= v31)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        v134 = *a1;
        if (!*a1)
          goto LABEL_145;
        v135 = v91;
        v136 = &v91[16 * v133];
        v137 = *(_QWORD *)v136;
        v138 = v135;
        v139 = v94;
        v140 = &v135[16 * v94];
        v141 = *((_QWORD *)v140 + 1);
        v142 = *(_QWORD *)(v175 + 72);
        v143 = v134 + v142 * *(_QWORD *)v136;
        v144 = v134 + v142 * *(_QWORD *)v140;
        v191 = v134 + v142 * v141;
        v145 = v184;
        swift_retain();
        v146 = v143;
        v147 = v177;
        sub_1BACA71C0(v146, v144, v191, v173, v186, v145, v192, v193, v174, v185);
        if (v147)
          goto LABEL_117;
        v72 = v176;
        if (v141 < v137)
          goto LABEL_120;
        if (v139 > *((_QWORD *)v176 + 2))
          goto LABEL_121;
        v148 = v139;
        *(_QWORD *)v136 = v137;
        *(_QWORD *)&v138[16 * v133 + 8] = v141;
        v149 = *((_QWORD *)v72 + 2);
        if (v148 >= v149)
          goto LABEL_122;
        v91 = v138;
        v177 = 0;
        v31 = v149 - 1;
        memmove(v140, v140 + 16, 16 * (v149 - 1 - v148));
        *((_QWORD *)v72 + 2) = v149 - 1;
        a1 = v183;
        if (v149 <= 2)
          goto LABEL_15;
      }
    }
    v31 = 1;
LABEL_15:
    v23 = a1[1];
    v30 = v182;
    v26 = v168;
    if (v182 >= v23)
      goto LABEL_106;
  }
  if (__OFADD__(v32, v26))
    goto LABEL_142;
  if (v32 + v26 >= v23)
    v73 = v23;
  else
    v73 = v32 + v26;
  if (v73 >= v32)
  {
    if (v49 != v73)
    {
      v74 = 0;
      v178 = *(_QWORD *)(v175 + 72);
      v190 = v49 * v178;
      v191 = v178 * (v49 - 1);
      v169 = v73;
      do
      {
        v172 = v74;
        v182 = v49;
        while (1)
        {
          v189 = v32;
          v76 = *a1 + *(int *)(v187 + 48);
          v77 = v190 + v74 + v76;
          v78 = *(_QWORD *)(v191 + v74 + *a1);
          v79 = v191 + v74 + v76;
          v80 = v179;
          *(_QWORD *)v179 = *(_QWORD *)(v190 + v74 + *a1);
          v81 = v181;
          sub_1BA4C2DD8(v77, (uint64_t)&v80[*(int *)(v181 + 48)], (uint64_t (*)(_QWORD))v193);
          v82 = a1;
          v83 = v180;
          *v180 = v78;
          sub_1BA4C2DD8(v79, (uint64_t)v83 + *(int *)(v81 + 48), (uint64_t (*)(_QWORD))v193);
          v186((uint64_t *)((char *)&v194 + 2), v80, v83);
          v84 = v193;
          v85 = v185;
          sub_1BA6AA068((uint64_t)v83, (uint64_t)v185, (uint64_t)v193, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
          sub_1BA6AA068((uint64_t)v80, (uint64_t)v85, (uint64_t)v84, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
          if (BYTE2(v194) != 1)
            break;
          v86 = *v82;
          if (!*v82)
            goto LABEL_144;
          v87 = v86 + v191 + v74;
          sub_1BA7EF5CC(v86 + v190 + v74, v188, v192, v84);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BA7EF5CC(v188, v87, v192, v84);
          v74 -= v178;
          v32 = v189 + 1;
          v75 = v182;
          a1 = v183;
          if (v182 == v189 + 1)
            goto LABEL_50;
        }
        v75 = v182;
        a1 = v82;
LABEL_50:
        v49 = v75 + 1;
        v74 = v172 + v178;
        v32 = v171;
      }
      while (v49 != v169);
      v49 = v169;
      v72 = v176;
    }
    goto LABEL_57;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  swift_release_n();
  __break(1u);
LABEL_145:
  swift_release_n();
  __break(1u);
LABEL_146:
  swift_release_n();
  __break(1u);
LABEL_147:
  swift_release_n();
  __break(1u);
LABEL_148:
  swift_release_n();
  swift_release();
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BA7F0474(void (*a1)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a6, unint64_t *a7, void (*a8)(uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v23)(uint64_t *__return_ptr, char *, _QWORD *);
  uint64_t v24;

  v23 = a5;
  sub_1BA6AA16C(0, a7, a8);
  v15 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (void (**)(uint64_t *__return_ptr, char *, _QWORD *))((char *)&v23
                                                                      - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v23 - v19;
  *(void (**)(uint64_t *__return_ptr, char *, _QWORD *))((char *)&v23 - v19) = a1;
  sub_1BA4C2DD8(a2, (uint64_t)&v23 + *(int *)(v21 + 48) - v19, (uint64_t (*)(_QWORD))a8);
  *v17 = a3;
  sub_1BA4C2DD8(a4, (uint64_t)v17 + *(int *)(v15 + 48), (uint64_t (*)(_QWORD))a8);
  v23(&v24, v20, v17);
  sub_1BA6AA068((uint64_t)v17, (uint64_t)a7, (uint64_t)a8, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
  sub_1BA6AA068((uint64_t)v20, (uint64_t)a7, (uint64_t)a8, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
  return v24;
}

uint64_t sub_1BA7F05A8@<X0>(char *a1@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;

  return sub_1BA7F0624(a1, a2, *(uint64_t (**)(uint64_t, char *, _QWORD, char *))(v3 + 16), a3);
}

uint64_t sub_1BA7F05B0@<X0>(char *a1@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t (*v7)(uint64_t, char *, _QWORD, char *);
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v7 = *(uint64_t (**)(uint64_t, char *, _QWORD, char *))(v3 + 16);
  v8 = *(_QWORD *)a1;
  sub_1BA6AA16C(0, (unint64_t *)&unk_1ED3B9750, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  result = v7(v8, &a1[*(int *)(v9 + 48)], *(_QWORD *)a2, &a2[*(int *)(v9 + 48)]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BA7F0624@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t (*a3)(uint64_t, char *, _QWORD, char *)@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = *(_QWORD *)a1;
  sub_1BA6AA16C(0, (unint64_t *)&unk_1ED3B9750, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  result = a3(v8, &a1[*(int *)(v9 + 48)], *(_QWORD *)a2, &a2[*(int *)(v9 + 48)]);
  *a4 = result & 1;
  return result;
}

BOOL sub_1BA7F069C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA7F06A4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

BOOL sub_1BA7F06A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a4;
  v45 = a5;
  v42 = a2;
  v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v40 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - v13;
  sub_1BA6AA16C(0, (unint64_t *)&unk_1ED3B9750, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  v16 = v15;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (uint64_t *)((char *)&v40 - v20);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v40 - v23;
  v26 = (char *)&v40 + *(int *)(v25 + 48) - v23;
  v41 = a1;
  *(uint64_t *)((char *)&v40 - v23) = a1;
  sub_1BA4C2DD8(v42, (uint64_t)v26, type metadata accessor for FeedHeadline);
  v27 = (uint64_t)v21 + *(int *)(v16 + 48);
  v42 = a3;
  *v21 = a3;
  sub_1BA4C2DD8(v44, v27, type metadata accessor for FeedHeadline);
  v28 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_1BA4C2DD8((uint64_t)v26, v28, type metadata accessor for FeedHeadline);
  v29 = v28;
  v30 = (uint64_t)v43;
  sub_1BA5193C4(v29, (uint64_t)v14, type metadata accessor for FeedHeadline);
  v31 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_1BA4C2DD8(v27, v31, type metadata accessor for FeedHeadline);
  v32 = v31;
  v33 = v45;
  sub_1BA5193C4(v32, (uint64_t)v11, type metadata accessor for FeedHeadline);
  v34 = v33 & ~*((_QWORD *)v14 + 4);
  sub_1BA4C2DD8((uint64_t)v11, v30, type metadata accessor for FeedHeadline);
  if (v34)
  {
    sub_1BA4A2E80(v30, type metadata accessor for FeedHeadline);
    goto LABEL_5;
  }
  v36 = v41;
  v35 = v42;
  v37 = v33 & ~*(_QWORD *)(v30 + 32);
  sub_1BA4A2E80(v30, type metadata accessor for FeedHeadline);
  if (v37)
  {
LABEL_5:
    v38 = (v33 & ~*((_QWORD *)v14 + 4)) == 0;
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FeedHeadline);
    sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FeedHeadline);
    sub_1BA6AA068((uint64_t)v21, (uint64_t)&unk_1ED3B9750, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
    sub_1BA6AA068((uint64_t)v24, (uint64_t)&unk_1ED3B9750, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
    return v38;
  }
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FeedHeadline);
  sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FeedHeadline);
  sub_1BA6AA068((uint64_t)v21, (uint64_t)&unk_1ED3B9750, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
  sub_1BA6AA068((uint64_t)v24, (uint64_t)&unk_1ED3B9750, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(_QWORD))sub_1BA6AA16C);
  return v36 < v35;
}

void sub_1BA7F0998()
{
  __asm { BR              X10 }
}

void sub_1BA7F09D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _BYTE v3[144];
  uint64_t v4[14];
  unsigned __int8 v5;

  if (!v0)
  {
    v2 = MEMORY[0x1E0DEB940];
    sub_1BA760F3C(v1 + 152, (uint64_t)v3, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    sub_1BA760F3C((uint64_t)v3, (uint64_t)v4, (uint64_t)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t)v2, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4AD288);
    if (sub_1BA896370(v4) != 1 && (v5 & 1) == 0)
      sub_1BA825F5C(v4[10], v4[11], v4[12], v4[13], v5);
  }
}

void sub_1BA7F0A6C(uint64_t a1)
{
  sub_1BA4A3FB4(a1, &qword_1ED3C44F8, (void (*)(uint64_t))sub_1BA76D78C);
}

uint64_t sub_1BA7F0A80(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA7F0AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA7F0B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = v3;
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v32 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v11);
  v30 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - v14;
  v16 = sub_1BB86BFF8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1;
  v31 = a2;
  if (!*(_QWORD *)(a2 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v9 + 16))(a3, v4, v8, v18);
  v29 = a3;
  v21 = v4;
  sub_1BB86BF74();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BAFEE640((uint64_t)v15);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v29, v4, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v15, v16);
    v23 = sub_1BB86BF38();
    if (v23)
      v24 = v23;
    else
      v24 = MEMORY[0x1E0DEE9D8];
    MEMORY[0x1E0C80A78](v23);
    *(&v28 - 2) = (uint64_t)&v34;
    v25 = sub_1BA7F0E2C((void (*)(_QWORD))sub_1BA7F10C4, (uint64_t)(&v28 - 4), v31);
    v33 = v24;
    sub_1BA7F0E18(v25);
    sub_1BB86BF44();
    v26 = (uint64_t)v30;
    sub_1BB86BF80();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    v27 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v32, v21, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v26, 1, v8) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v29, v27, v8);
      return sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v27, v8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v29, v26, v8);
    }
  }
}

uint64_t sub_1BA7F0E18(uint64_t a1)
{
  return sub_1BB383A2C(a1, (uint64_t (*)(void))sub_1BA785BF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
}

unint64_t sub_1BA7F0E2C(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v25;
  void (*v26)(_QWORD);
  char *v27;
  char *v28;
  uint64_t v29;
  _QWORD v30[3];
  unint64_t v31;

  sub_1BB1484C0(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1BB86BF20();
  v9 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v28 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v27 = (char *)&v25 - v12;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v25 = a3;
  v14 = (uint64_t *)(a3 + 48);
  v31 = MEMORY[0x1E0DEE9D8];
  v26 = a1;
  do
  {
    v15 = v9;
    v16 = *(v14 - 1);
    v17 = *v14;
    v30[0] = *(v14 - 2);
    v30[1] = v16;
    v30[2] = v17;
    swift_bridgeObjectRetain();
    swift_retain();
    a1(v30);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return v31;
    }
    swift_release();
    swift_bridgeObjectRelease();
    v9 = v15;
    v18 = v29;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v29) == 1)
    {
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BB1484C0);
    }
    else
    {
      v19 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v20 = v27;
      v19(v27, v8, v18);
      v19(v28, v20, v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_1BA785BF0(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
      v22 = *(_QWORD *)(v31 + 16);
      v21 = *(_QWORD *)(v31 + 24);
      if (v22 >= v21 >> 1)
        v31 = sub_1BA785BF0(v21 > 1, v22 + 1, 1, v31);
      v23 = v31;
      *(_QWORD *)(v31 + 16) = v22 + 1;
      v19((char *)(v23+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v22), v28, v29);
      v9 = v15;
      a1 = v26;
    }
    v14 += 3;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1BA7F10C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA7F10F0(a1);
}

uint64_t sub_1BA7F10DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAFEE694(a1);
}

uint64_t sub_1BA7F10F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAFEB080(a1);
}

void sub_1BA7F1104(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3B04A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA7F1120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int16 *v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = (unsigned __int16 *)(a2 + 64);
    do
    {
      if (*((unsigned __int8 *)v4 + 2) != 255)
      {
        v5 = *v4 | (*((unsigned __int8 *)v4 + 2) << 16);
        if (!WORD1(v5) || (WORD1(v5) != 1 ? (v6 = (~(_DWORD)v5 & 0xFF00) == 0) : (v6 = 0), v6))
          sub_1BA771864(*((_QWORD *)v4 - 1), v5);
      }
      v4 += 20;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1BA7F11C0()
{
  unint64_t result;

  result = qword_1ED3A7FE0;
  if (!qword_1ED3A7FE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CFA30, &_s10CodingKeysON_211);
    atomic_store(result, (unint64_t *)&qword_1ED3A7FE0);
  }
  return result;
}

unint64_t sub_1BA7F1204()
{
  unint64_t result;

  result = qword_1ED3CBA78;
  if (!qword_1ED3CBA78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3E90, &_s10CodingKeysON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3CBA78);
  }
  return result;
}

uint64_t sub_1BA7F1248(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA7F1254(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA7F1254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  swift_bridgeObjectRetain();
  v6 = sub_1BA717D44(a2, a3);
  v8 = v7;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1BA6E35A8(v6, v8);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    return 0;
  }
  v12 = *(_QWORD *)(v9 + 56) + 40 * v10;
  v13 = *(_QWORD *)v12;
  v14 = *(_QWORD *)(v12 + 8);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = *(_QWORD *)(v12 + 24);
  v17 = *(unsigned __int8 *)(v12 + 32);
  sub_1BA74AFD8(*(_QWORD *)v12, v14, v15, v16, *(_BYTE *)(v12 + 32));
  swift_bridgeObjectRelease_n();
  if (v17 != 255)
  {
    sub_1BA74E778(v13, v14, v15, v16, v17);
    return 0;
  }
  return 1;
}

unint64_t sub_1BA7F1374()
{
  unint64_t result;

  result = qword_1ED3CABB8;
  if (!qword_1ED3CABB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C98A0, &_s10CodingKeysON_104);
    atomic_store(result, (unint64_t *)&qword_1ED3CABB8);
  }
  return result;
}

unint64_t sub_1BA7F13B8()
{
  unint64_t result;

  result = qword_1ED3A6818;
  if (!qword_1ED3A6818)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D14C0, &_s10CodingKeysON_245);
    atomic_store(result, (unint64_t *)&qword_1ED3A6818);
  }
  return result;
}

unint64_t sub_1BA7F13FC()
{
  unint64_t result;

  result = qword_1ED3C8D40;
  if (!qword_1ED3C8D40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D0B30, &_s10CodingKeysON_233);
    atomic_store(result, (unint64_t *)&qword_1ED3C8D40);
  }
  return result;
}

uint64_t sub_1BA7F1440()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA7F1C2C((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BA7F1480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 8);
  sub_1BA7F2188();
  if (!v1)
    __asm { BR              X10 }
}

uint64_t sub_1BA7F17FC(_BYTE *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  _QWORD *v8;
  _QWORD v10[10];

  v4 = *v2;
  sub_1BB8745CC();
  sub_1BB8745D8();
  swift_bridgeObjectRetain();
  sub_1BA7F1C2C((uint64_t)v10, a2);
  v5 = sub_1BB874608() & ~(-1 << *(_BYTE *)(v4 + 32));
  if (((*(_QWORD *)(v4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10[0] = *v8;
  *v8 = 0x8000000000000000;
  sub_1BA7F1D58(a2, v5, isUniquelyReferenced_nonNull_native);
  *v8 = v10[0];
  swift_bridgeObjectRelease();
  result = 1;
  *a1 = a2;
  return result;
}

void sub_1BA7F1C2C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA7F1C70()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA7F1D58(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  _BYTE v15[72];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BA7F2708();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1BA9E6C5C();
        goto LABEL_10;
      }
      sub_1BA7F2B78();
    }
    v8 = *v3;
    sub_1BB8745CC();
    sub_1BB8745D8();
    sub_1BA7F1C2C((uint64_t)v15, v5);
    result = sub_1BB874608();
    a2 = result & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
      __asm { BR              X9 }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) = v14;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1BA7F216CLL);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

void sub_1BA7F2188()
{
  __asm { BR              X4 }
}

uint64_t sub_1BA7F21F4()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 56) = v0 & 0xEFFFFFFFFFFFFFFBLL;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA754E6C();
  return sub_1BA967D84(v1, v0);
}

void sub_1BA7F22B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9F18)
  {
    sub_1BA505288(255, (unint64_t *)&qword_1ED3B6FE0);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9F18);
  }
}

void sub_1BA7F2318(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1BB4BD6D4(a1, a2, a3, a4, (void (*)(_QWORD))sub_1BA7F258C);
}

void *sub_1BA7F2324(uint64_t (*a1)(_QWORD), void (*a2)(_QWORD, double), void (*a3)(unint64_t, char *), void (*a4)(char *, unint64_t))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *result;
  unint64_t v15;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(unint64_t, char *);
  void (*v38)(char *, unint64_t);

  v37 = a3;
  v38 = a4;
  v6 = v4;
  v7 = a1(0);
  v36 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - v9;
  a2(0, v8);
  v11 = *v4;
  v12 = sub_1BB873F48();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v6 = v13;
    return result;
  }
  v34 = v6;
  result = (void *)(v12 + 64);
  v15 = (unint64_t)((1 << *(_BYTE *)(v13 + 32)) + 63) >> 6;
  if (v13 != v11 || (unint64_t)result >= v11 + 64 + 8 * v15)
    result = memmove(result, (const void *)(v11 + 64), 8 * v15);
  v35 = v11 + 64;
  v17 = 0;
  *(_QWORD *)(v13 + 16) = *(_QWORD *)(v11 + 16);
  v18 = 1 << *(_BYTE *)(v11 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & *(_QWORD *)(v11 + 64);
  v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    v30 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v30 >= v21)
      goto LABEL_26;
    v31 = *(_QWORD *)(v35 + 8 * v30);
    ++v17;
    if (!v31)
    {
      v17 = v30 + 1;
      if (v30 + 1 >= v21)
        goto LABEL_26;
      v31 = *(_QWORD *)(v35 + 8 * v17);
      if (!v31)
        break;
    }
LABEL_25:
    v20 = (v31 - 1) & v31;
    v23 = __clz(__rbit64(v31)) + (v17 << 6);
LABEL_12:
    v24 = 16 * v23;
    v25 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v23);
    v26 = *v25;
    v27 = v25[1];
    v28 = *(_QWORD *)(v36 + 72) * v23;
    v37(*(_QWORD *)(v11 + 56) + v28, v10);
    v29 = (_QWORD *)(*(_QWORD *)(v13 + 48) + v24);
    *v29 = v26;
    v29[1] = v27;
    v38(v10, *(_QWORD *)(v13 + 56) + v28);
    result = (void *)swift_bridgeObjectRetain();
  }
  v32 = v30 + 2;
  if (v32 >= v21)
  {
LABEL_26:
    result = (void *)swift_release();
    v6 = v34;
    goto LABEL_28;
  }
  v31 = *(_QWORD *)(v35 + 8 * v32);
  if (v31)
  {
    v17 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v17 >= v21)
      goto LABEL_26;
    v31 = *(_QWORD *)(v35 + 8 * v17);
    ++v32;
    if (v31)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BA7F255C()
{
  return sub_1BB4C23C8((unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (unint64_t *)&unk_1ED3B9AC8);
}

void *sub_1BA7F2580()
{
  return sub_1BA6E3744((void (*)(_QWORD))sub_1BA7904E4);
}

void sub_1BA7F258C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C0500)
  {
    sub_1BA49A224(255, (unint64_t *)&unk_1ED3B99B0);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C0500);
  }
}

uint64_t sub_1BA7F2600(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BB38C5A4(a1, a2, a3, a4, &qword_1ED3AB910, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
}

uint64_t sub_1BA7F2614(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 56 * a1 + 32;
    v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA7F2708()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *v0;
  sub_1BA756C1C(0, (unint64_t *)&unk_1ED3C4400, (void (*)(void))sub_1BA82BDC8);
  v2 = sub_1BB873C60();
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_25:
    result = swift_release();
    *v0 = v2;
    return result;
  }
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v14 = (_QWORD *)(v1 + 56);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_retain();
  if (v5)
  {
    v8 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v6 <= 1)
    goto LABEL_21;
  v9 = *(_QWORD *)(v1 + 64);
  v10 = 1;
  if (v9)
  {
LABEL_19:
    v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_20:
    v12 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v8);
    sub_1BB8745CC();
    sub_1BB8745D8();
    __asm { BR              X8 }
  }
  v10 = 2;
  if (v6 <= 2)
  {
LABEL_21:
    swift_release();
    v13 = 1 << *(_BYTE *)(v1 + 32);
    if (v13 > 63)
      bzero(v14, ((unint64_t)(v13 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v14 = -1 << v13;
    *(_QWORD *)(v1 + 16) = 0;
    goto LABEL_25;
  }
  v9 = *(_QWORD *)(v1 + 72);
  if (v9)
    goto LABEL_19;
  v10 = 3;
  if (v6 <= 3)
    goto LABEL_21;
  v9 = *(_QWORD *)(v1 + 80);
  if (v9)
    goto LABEL_19;
  v11 = 4;
  if (v6 <= 4)
    goto LABEL_21;
  v9 = *(_QWORD *)(v1 + 88);
  if (v9)
  {
    v10 = 4;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v10 >= v6)
      goto LABEL_21;
    v9 = v14[v10];
    ++v11;
    if (v9)
      goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA7F2B78()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;

  v1 = *v0;
  sub_1BA756C1C(0, (unint64_t *)&unk_1ED3C4400, (void (*)(void))sub_1BA82BDC8);
  v2 = sub_1BB873C60();
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v3 = 1 << *(_BYTE *)(v1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v12 = (unint64_t)(v3 + 63) >> 6;
  result = swift_retain();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v12 <= 1)
    goto LABEL_21;
  v8 = *(_QWORD *)(v1 + 64);
  v9 = 1;
  if (v8)
  {
LABEL_19:
    v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
    v11 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v7);
    sub_1BB8745CC();
    sub_1BB8745D8();
    __asm { BR              X8 }
  }
  v9 = 2;
  if (v12 <= 2)
  {
LABEL_21:
    result = swift_release_n();
LABEL_23:
    *v0 = v2;
    return result;
  }
  v8 = *(_QWORD *)(v1 + 72);
  if (v8)
    goto LABEL_19;
  v9 = 3;
  if (v12 <= 3)
    goto LABEL_21;
  v8 = *(_QWORD *)(v1 + 80);
  if (v8)
    goto LABEL_19;
  v10 = 4;
  if (v12 <= 4)
    goto LABEL_21;
  v8 = *(_QWORD *)(v1 + 88);
  if (v8)
  {
    v9 = 4;
    goto LABEL_19;
  }
  while (1)
  {
    v9 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v9 >= v12)
      goto LABEL_21;
    v8 = *(_QWORD *)(v1 + 56 + 8 * v9);
    ++v10;
    if (v8)
      goto LABEL_19;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BA7F2FB0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, _QWORD, uint64_t);
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  id v27;
  char v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  const char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v44;
  char v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  char v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v0 = sub_1BB86C8B0();
  v59 = *(_QWORD *)(v0 - 8);
  v60 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BB86CAD8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1BB86C0E8();
  v57 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3AAB50 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED3AAB38);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
  sub_1BA6DC310(0, (unint64_t *)&qword_1ED3B9C60, (void (*)(uint64_t))MEMORY[0x1E0CB11B8]);
  v10 = sub_1BB86CAC0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 72);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v58 = v4;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87FC80;
  v15 = v14 + v13;
  v16 = *(void (**)(unint64_t, _QWORD, uint64_t))(v11 + 104);
  v16(v15, *MEMORY[0x1E0CB1140], v10);
  v16(v15 + v12, *MEMORY[0x1E0CB1178], v10);
  v16(v15 + 2 * v12, *MEMORY[0x1E0CB1188], v10);
  sub_1BA861CB8(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BB86C8A4();
  sub_1BB86CA3C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v2, v60);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v6, v3);
  v17 = sub_1BB86C0C4();
  if ((v18 & 1) != 0
    || (v19 = v17, v20 = sub_1BB86C0B8(), (v21 & 1) != 0)
    || (v22 = v20, v23 = sub_1BB86C094(), (v24 & 1) != 0))
  {
    if (qword_1ED3BA7F8 != -1)
      swift_once();
    v36 = (id)qword_1ED476860;
    v37 = sub_1BB8732F4();
    sub_1BA6DC310(0, (unint64_t *)&qword_1ED3D4470, (void (*)(uint64_t))sub_1BA81BA70);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1BB87CE70;
    sub_1BB5BDE90();
    v39 = v61;
    v40 = sub_1BB87420C();
    v42 = v41;
    *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v38 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v38 + 32) = v40;
    *(_QWORD *)(v38 + 40) = v42;
    sub_1BB86EF44("Failed to get expected date components for time of day selectors %{public}@", 75, 2, &dword_1BA493000, v36, v37, v38);

    swift_bridgeObjectRelease();
    v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v25 = v23;
    v26 = v56;
    v27 = objc_msgSend(v56, sel_morningTimeOfDayConfiguration);
    v28 = sub_1BA7F3608(v25, v22, v19);

    if ((v28 & 1) != 0)
    {
      v29 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v31 = v29[2];
      v30 = v29[3];
      if (v31 >= v30 >> 1)
        v29 = sub_1BA6EA0D0((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
      v32 = v57;
      v29[2] = v31 + 1;
      v33 = &v29[2 * v31];
      v34 = 0xD000000000000018;
      v35 = "date-time-of-day-morning";
LABEL_27:
      v33[4] = v34;
      v33[5] = (unint64_t)(v35 - 32) | 0x8000000000000000;
      v39 = v61;
      goto LABEL_14;
    }
    v44 = objc_msgSend(v26, sel_afternoonTimeOfDayConfiguration);
    v45 = sub_1BA7F3608(v25, v22, v19);

    if ((v45 & 1) != 0)
    {
      v29 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v47 = v29[2];
      v46 = v29[3];
      if (v47 >= v46 >> 1)
        v29 = sub_1BA6EA0D0((_QWORD *)(v46 > 1), v47 + 1, 1, v29);
      v32 = v57;
      v29[2] = v47 + 1;
      v33 = &v29[2 * v47];
      v34 = 0xD00000000000001ALL;
      v35 = "date-time-of-day-afternoon";
      goto LABEL_27;
    }
    v48 = objc_msgSend(v26, sel_eveningTimeOfDayConfiguration);
    v49 = sub_1BA7F3608(v25, v22, v19);

    if ((v49 & 1) != 0)
    {
      v29 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v51 = v29[2];
      v50 = v29[3];
      if (v51 >= v50 >> 1)
        v29 = sub_1BA6EA0D0((_QWORD *)(v50 > 1), v51 + 1, 1, v29);
      v32 = v57;
      v29[2] = v51 + 1;
      v33 = &v29[2 * v51];
      v34 = 0xD000000000000018;
      v35 = "date-time-of-day-evening";
      goto LABEL_27;
    }
    v52 = objc_msgSend(v26, sel_nightTimeOfDayConfiguration);
    v53 = sub_1BA7F3608(v25, v22, v19);

    if ((v53 & 1) != 0)
    {
      v29 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v55 = v29[2];
      v54 = v29[3];
      if (v55 >= v54 >> 1)
        v29 = sub_1BA6EA0D0((_QWORD *)(v54 > 1), v55 + 1, 1, v29);
      v32 = v57;
      v29[2] = v55 + 1;
      v33 = &v29[2 * v55];
      v34 = 0xD000000000000016;
      v35 = "date-time-of-day-night";
      goto LABEL_27;
    }
    v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v39 = v61;
  }
  v32 = v57;
LABEL_14:
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v39);
  return v29;
}

uint64_t sub_1BA7F3608(uint64_t result, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;

  v4 = 60 * a2;
  if ((unsigned __int128)(a2 * (__int128)60) >> 64 != (60 * a2) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = __OFADD__(a3, v4);
  v6 = a3 + v4;
  if (v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((unsigned __int128)(result * (__int128)60) >> 64 != (60 * result) >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = 3600 * result;
  if ((unsigned __int128)(60 * result * (__int128)60) >> 64 != (3600 * result) >> 63)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = v6 + v7;
  if (__OFADD__(v6, v7))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v9 = objc_msgSend(v3, sel_start);
  v10 = objc_msgSend(v3, sel_end);
  v11 = objc_msgSend(v3, sel_start);
  if ((uint64_t)v9 < (uint64_t)v10)
  {
    if (v8 < (uint64_t)v11)
      return 0;
    return v8 < (uint64_t)objc_msgSend(v3, sel_end);
  }
  if ((uint64_t)objc_msgSend(v3, sel_end) >= (uint64_t)v11)
    return 0;
  if (v8 < (uint64_t)objc_msgSend(v3, sel_start))
    return v8 < (uint64_t)objc_msgSend(v3, sel_end);
  return 1;
}

uint64_t sub_1BA7F373C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA7F3758(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BA7F3758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  _BYTE v13[40];

  v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BA4C2DD8(a1, (uint64_t)v8, v9);
  sub_1BA4C010C(a2, (uint64_t)v13);
  v10 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v10, (uint64_t)v8, (uint64_t)v13, a3);
}

uint64_t sub_1BA7F3810(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BAC7B9B8(a1, a2, a3, (_QWORD *)*v3, sub_1BA7C586C, type metadata accessor for HeadlineViewLayout.Context);
  *v3 = result;
  return result;
}

unint64_t sub_1BA7F383C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3AAE50;
  if (!qword_1ED3AAE50)
  {
    sub_1BA4B07F0(255, &qword_1ED3AAE48, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3C8348, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle.Selector);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAE50);
  }
  return result;
}

uint64_t sub_1BA7F38CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  _OWORD v26[6];
  uint64_t v27;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v25 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    result = sub_1BA4C2DD8(*(_QWORD *)(a4 + 56) + 104 * v16, (uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA785ECC);
    v17 = v26[2];
    v18 = v26[1];
    *(_OWORD *)v11 = v26[0];
    *(_OWORD *)(v11 + 16) = v18;
    *(_OWORD *)(v11 + 32) = v17;
    v19 = v26[5];
    v20 = v26[4];
    v21 = v26[3];
    *(_QWORD *)(v11 + 96) = v27;
    *(_OWORD *)(v11 + 64) = v20;
    *(_OWORD *)(v11 + 80) = v19;
    *(_OWORD *)(v11 + 48) = v21;
    v11 += 104;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v25;
      goto LABEL_36;
    }
  }
  v22 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v22 >= v14)
    goto LABEL_34;
  v23 = *(_QWORD *)(v6 + 8 * v22);
  if (v23)
    goto LABEL_23;
  v24 = v12 + 2;
  ++v12;
  if (v22 + 1 >= v14)
    goto LABEL_34;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
    goto LABEL_16;
  v12 = v22 + 1;
  if (v22 + 2 >= v14)
    goto LABEL_34;
  v23 = *(_QWORD *)(v6 + 8 * (v22 + 2));
  if (v23)
  {
    v22 += 2;
    goto LABEL_23;
  }
  v12 = v22 + 2;
  if (v22 + 3 >= v14)
    goto LABEL_34;
  v23 = *(_QWORD *)(v6 + 8 * (v22 + 3));
  if (v23)
  {
    v22 += 3;
    goto LABEL_23;
  }
  v24 = v22 + 4;
  v12 = v22 + 3;
  if (v22 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
LABEL_16:
    v22 = v24;
LABEL_23:
    v9 = (v23 - 1) & v23;
    v16 = __clz(__rbit64(v23)) + (v22 << 6);
    v12 = v22;
    goto LABEL_9;
  }
  while (1)
  {
    v22 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v22 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

_QWORD *sub_1BA7F3AFC(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD v24[11];
  uint64_t v25;

  v3 = *(_QWORD *)(a3 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v5 = (uint64_t *)(a3 + 56);
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v21 = v3;
    v22 = v6;
    v6 = (_QWORD *)*(v5 - 3);
    v7 = *(v5 - 2);
    v8 = *(v5 - 1);
    v9 = *v5;
    v10 = v5[1];
    v11 = v5[2];
    v12 = v5[3];
    v13 = v5[4];
    v14 = v5[5];
    v15 = v5[6];
    v24[0] = v6;
    v24[1] = v7;
    v24[2] = v8;
    v24[3] = v9;
    v24[4] = v10;
    v24[5] = v11;
    v24[6] = v12;
    v24[7] = v13;
    v24[8] = v14;
    v24[9] = v15;
    sub_1BA6D78DC();
    a1(&v25, v24);
    if (v23)
    {
      sub_1BA7F4208();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    sub_1BA7F4208();
    v16 = v25;
    if ((~v25 & 0xF000000000000007) != 0)
    {
      v6 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1BB3921AC(0, v22[2] + 1, 1, v22);
      v18 = v6[2];
      v17 = v6[3];
      if (v18 >= v17 >> 1)
        v6 = sub_1BB3921AC((_QWORD *)(v17 > 1), v18 + 1, 1, v6);
      v6[2] = v18 + 1;
      v6[v18 + 4] = v16;
    }
    else
    {
      v6 = v22;
    }
    v5 += 10;
    v3 = v21 - 1;
  }
  while (v21 != 1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t BlueprintSection<>.mapToRegions(content:additionalGroupItems:additionalGroupOptions:feedDescriptor:feedGroupBindingOptions:feedGroupContextIdentifier:feedGroupRevision:nativeAdContext:pluginModels:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  int v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[3];
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55[2];
  _BYTE v56[4];
  char v57[10];

  v42 = a8;
  v46 = a7;
  v44 = a6;
  v47 = a4;
  v45 = a2;
  v43 = a1;
  v37 = a13;
  v41 = a10;
  v38 = a12;
  v15 = *(_QWORD *)(a11 + 24);
  v16 = *(_QWORD *)(a11 + 40);
  v17 = sub_1BB86F778();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6F08], v17);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6EF8], v17);
  v40 = sub_1BB86E38C();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v19 = (char *)&v30 - v18;
  v21 = *a3;
  v20 = a3[1];
  v36 = *a5;
  v35 = a5[1];
  v34 = a5[2];
  v22 = *((_QWORD *)a5 + 6);
  v33 = *((unsigned __int8 *)a5 + 56);
  LOBYTE(a5) = *((_BYTE *)a5 + 57);
  v32 = *(_OWORD *)a9;
  v31 = *(_QWORD *)(a9 + 16);
  v30 = *(_QWORD *)(a9 + 24);
  v37 = type metadata accessor for FeedGroupRegionMapper(0, v15, a13, v16);
  v23 = sub_1BB86FCC4();
  v25 = v24;
  sub_1BB86FCD0();
  v26 = v38;
  BlueprintSection<>.layoutOrder.getter(a11, v38);
  v57[0] = v57[1];
  BlueprintSection<>.feedGroupDebug.getter(a11, v26);
  v55[0] = v21;
  v55[1] = v20;
  v51[0] = v36;
  v51[1] = v35;
  v51[2] = v34;
  v52 = v22;
  v53 = v33;
  v54 = (char)a5;
  v48 = v32;
  v49 = v31;
  v50 = v30;
  *((_QWORD *)&v29 + 1) = v46;
  *(_QWORD *)&v29 = v44;
  v27 = sub_1BA7F4098(v43, v23, v25, (uint64_t)v19, v57, (uint64_t)v56, v47, v45, v55, (uint64_t)v51, v29, v42, &v48, v41);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v56, (uint64_t (*)(_QWORD))sub_1BA6CAB30);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v40);
  return v27;
}

uint64_t BlueprintSection<>.feedGroupDebug.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86FCB8();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for FeedGroupRegionMapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedGroupRegionMapper);
}

uint64_t sub_1BA7F4098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, __int128 a11, uint64_t a12, __int128 *a13, uint64_t a14)
{
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v28;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[72];

  v17 = *a5;
  v18 = *a9;
  v19 = a9[1];
  sub_1BA6A09F0(a10, (uint64_t)v50, &qword_1ED3B23A0, (uint64_t)&type metadata for FeedGroupBindingOptions);
  v25 = *a13;
  v21 = *((_QWORD *)a13 + 2);
  v20 = *((_QWORD *)a13 + 3);
  v22 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
  v32 = a14;
  v33 = a2;
  v34 = a3;
  v35 = a6;
  v36 = v28;
  v37 = a1;
  v38 = a4;
  v39 = v17;
  v40 = a7;
  v41 = a8;
  v42 = v18;
  v43 = v19;
  v44 = v50;
  v45 = a11;
  v46 = a12;
  v47 = v25;
  v48 = v21;
  v49 = v20;
  swift_bridgeObjectRetain();
  v23 = sub_1BA8A1C10((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BA7F428C, (uint64_t)v31, v22);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t _s17ResolvedContainerOwxx()
{
  return sub_1BA7F4208();
}

uint64_t sub_1BA7F4208()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA7F428C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA6C2E34(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_BYTE *)(v2 + 72), *(void **)(v2 + 80), *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 104), *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152),
           *(_QWORD *)(v2 + 160),
           *(_QWORD *)(v2 + 168));
}

void sub_1BA7F42F0(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1BA7F430C(a1, *(void (**)(_QWORD *, uint64_t, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

void sub_1BA7F430C(uint64_t *a1@<X0>, void (*a2)(_QWORD *, uint64_t, uint64_t)@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_QWORD *, uint64_t, uint64_t);
  uint64_t v30[12];

  v9 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[4];
  if (v12 < 0)
  {
    v29 = a2;
    v13 = a1[8];
    v14 = a1[9];
    v15 = a1[6];
    v21 = a1[7];
    v22 = v15;
    v16 = a1[5];
    v27 = a3;
    v17 = a1[2];
    v18 = a1[3];
    v25 = v14;
    v26 = v17;
    v30[11] = v4;
    v19 = a1[1];
    v28 = *a1;
    v30[0] = v28;
    v30[1] = v19;
    v30[2] = v17;
    v30[3] = v18;
    v30[4] = v12 & 0x7FFFFFFFFFFFFFFFLL;
    v30[5] = v16;
    v23 = v13;
    v24 = v16;
    v30[6] = v15;
    v30[7] = v21;
    v30[8] = v13;
    v30[9] = v14;
    sub_1BA7FDABC(v30, v11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29(v11, v26, v18);
    sub_1BA7F4208();
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  }
  else
  {
    *a4 = 0xF000000000000007;
  }
}

void sub_1BA7F44AC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  sub_1BA561BA8(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t type metadata accessor for FormatAnimationNodeDataLayoutAttributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatAnimationNodeDataLayoutAttributes);
}

void sub_1BA7F44D8(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v3;
  _QWORD v5[5];
  uint64_t v6;
  char v7;

  v7 = *v2;
  v5[3] = type metadata accessor for FormatNodeBinderContext();
  v5[4] = &off_1E7304BB8;
  v5[0] = a2;
  swift_retain();
  sub_1BA7FDFA8(v5, &v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  if (v3)
  {
    sub_1BB86EAB8();

  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1BB86EB0C();
  }
}

uint64_t _s10CodingKeysOMa_86(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s10CodingKeysOMn_86);
}

uint64_t sub_1BA7F45A8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF52F0;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA7B6C28();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA7FDDDC();
    sub_1BB874464();
  }
  return swift_release();
}

void FormatTextNodeAlternativeLogic.bind(binder:context:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BA7F4758()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain_n();
  swift_bridgeObjectRetain();
  ((void (*)(uint64_t, uint64_t))FormatTextNodeAlternativeLogic.bind(binder:context:))(v1, v0);
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t FormatEnumPropertyDefinition.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  int v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  void (*v96)(char *, uint64_t, uint64_t);
  char *v97;
  char *v98;
  uint64_t *v99;
  uint64_t v100;
  __int128 v101;
  char v102;
  char v103;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v90 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v89 = (char *)&v87 - v7;
  MEMORY[0x1E0C80A78](v8);
  v91 = (char *)&v87 - v9;
  MEMORY[0x1E0C80A78](v10);
  v92 = (char *)&v87 - v11;
  MEMORY[0x1E0C80A78](v12);
  v93 = (char *)&v87 - v13;
  MEMORY[0x1E0C80A78](v14);
  v94 = (char *)&v87 - v15;
  MEMORY[0x1E0C80A78](v16);
  v95 = (char *)&v87 - v17;
  MEMORY[0x1E0C80A78](v18);
  v96 = (void (*)(char *, uint64_t, uint64_t))((char *)&v87 - v19);
  MEMORY[0x1E0C80A78](v20);
  v97 = (char *)&v87 - v21;
  MEMORY[0x1E0C80A78](v22);
  v98 = (char *)&v87 - v23;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v87 - v25;
  sub_1BAE8FAC4(0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v87 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1[3];
  v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  v32 = type metadata accessor for FormatEnumPropertyDefinition(0);
  v33 = sub_1BAE8F9BC();
  v34 = sub_1BA4A2870(&qword_1ED3D12F0, (uint64_t (*)(uint64_t))sub_1BAE8F9BC, (uint64_t)&unk_1BB8FFC6C);
  v88 = v32;
  sub_1BA6EC1EC(v32, v35, v30, v32, v33, (uint64_t)&type metadata for FormatVersions.JazzkonC, v31, (uint64_t)v29, v34, (uint64_t)&off_1E734BD80);
  v36 = *v2;
  v37 = v2[1];
  v99 = v2;
  v38 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v38 != -1)
    swift_once();
  v39 = sub_1BB86EB84();
  v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED476C20);
  v41 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  v41(v26, v40, v39);
  v42 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v43 = v100;
  sub_1BAD11C70(v36, v37, 0, 0, 0, (uint64_t)v26, (uint64_t)sub_1BA90CF04, 0);
  if (v43)
  {
    sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v49 = (uint64_t)v29;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v44 = (uint64_t)v98;
    v45 = v99[2];
    v46 = v99[3];
    v47 = v40;
    v48 = v99;
    v100 = v47;
    ((void (*)(char *))v41)(v98);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD11C70(v45, v46, 1, 0, 0, v44, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v44, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v51 = v48;
    v52 = v48[4];
    v53 = v51[5];
    v54 = v29;
    v55 = (uint64_t)v97;
    v41(v97, v100, v39);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v56 = v52;
    v57 = v54;
    sub_1BAD11C70(v56, v53, 2, 0, 0, v55, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v58 = v51[6];
    v59 = v51[7];
    v60 = (char *)v42;
    v61 = (uint64_t)v96;
    v41((char *)v96, v100, v39);
    v98 = v60;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v62 = v57;
    sub_1BAD42338(v58, v59, 3, 0, 0, v61, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v61, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v64 = v51[8];
    v63 = v51[9];
    v65 = (uint64_t)v95;
    v41(v95, v100, v39);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD11C70(v64, v63, 4, 0, 0, v65, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v65, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    LOBYTE(v64) = *((_BYTE *)v51 + 80);
    v66 = (uint64_t)v94;
    v41(v94, v100, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BAD11DC8(v64, 5, 0, 0, v66, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v66, type metadata accessor for FormatVersionRequirement);
    v67 = v41;
    v68 = v51;
    v96 = v67;
    v97 = v62;
    v69 = v51[11];
    v70 = v51[12];
    v71 = (uint64_t)v93;
    v67(v93, v100, v39);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD42338(v69, v70, 6, 0, 0, v71, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v71, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v72 = (uint64_t)v92;
    v96(v92, v100, v39);
    swift_storeEnumTagMultiPayload();
    v73 = swift_bridgeObjectRetain();
    sub_1BAD11F20(v73, 7, 0, 0, v72, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v72, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v74 = v96;
    v75 = *((unsigned __int8 *)v68 + 112);
    v76 = v68;
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v77 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED476C08);
    v78 = (uint64_t)v91;
    v79 = v74;
    v74(v91, v77, v39);
    swift_storeEnumTagMultiPayload();
    if (v75)
    {
      if ((sub_1BAE46264(v78, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v101 = xmmword_1BB8D2DD0;
        v102 = 0;
        v103 = 1;
        sub_1BAE8FB3C();
        sub_1BA4A2870(&qword_1ED3AEFA0, (uint64_t (*)(uint64_t))sub_1BAE8FB3C, MEMORY[0x1E0DED188]);
        sub_1BB874464();
      }
      v76 = v99;
      v78 = (uint64_t)v91;
      v79 = v74;
    }
    sub_1BA4A2E80(v78, type metadata accessor for FormatVersionRequirement);
    v80 = qword_1ED3C6D48;
    swift_bridgeObjectRetain();
    if (v80 != -1)
      swift_once();
    v81 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED476BD8);
    v82 = (uint64_t)v89;
    v79(v89, v81, v39);
    swift_storeEnumTagMultiPayload();
    sub_1BA4A2E80(v82, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v83 = (uint64_t)v76 + *(int *)(v88 + 56);
    v84 = (uint64_t)v90;
    v79(v90, v81, v39);
    swift_storeEnumTagMultiPayload();
    v85 = v83;
    v86 = v97;
    sub_1BAD42540(v85, 10, 0, 0, v84, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v84, type metadata accessor for FormatVersionRequirement);
    v49 = (uint64_t)v86;
  }
  return sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BAE8FAC4);
}

unint64_t sub_1BA7F52E0()
{
  unint64_t result;

  result = qword_1ED3CC5A0;
  if (!qword_1ED3CC5A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8CB888, &_s10CodingKeysON_141);
    atomic_store(result, (unint64_t *)&qword_1ED3CC5A0);
  }
  return result;
}

uint64_t FormatEnumPropertyDefinition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (**v10)(char *, _QWORD);
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (**v79)(char *, _QWORD);
  __int128 v80;
  char v81;
  __int128 v82;
  char v83;
  int v84;
  char v85;

  v78 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v75 = (uint64_t)&v59 - v4;
  sub_1BA7607C8();
  v76 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE8F944();
  v77 = v9;
  v10 = *(void (***)(char *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8F9BC();
  sub_1BA4A2870(&qword_1ED3D12F0, (uint64_t (*)(uint64_t))sub_1BAE8F9BC, (uint64_t)&unk_1BB8FFC6C);
  v13 = v79;
  sub_1BB87468C();
  v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v14);
    swift_willThrow();

    v38 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v38);
  }
  v73 = v6;
  v74 = v8;
  v15 = v76;
  v16 = v78;
  v79 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17 = sub_1BB872874();
  v18 = Dictionary<>.errorOnUnknownKeys.getter(v17);
  swift_bridgeObjectRelease();
  v19 = v77;
  v20 = v12;
  if ((v18 & 1) != 0)
  {
    v21 = sub_1BB8740EC();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = (_BYTE *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22)
          goto LABEL_7;
      }
      v28 = a1;
      v29 = v19;
      v31 = *((_QWORD *)v23 - 2);
      v30 = *((_QWORD *)v23 - 1);
      swift_bridgeObjectRetain_n();
      v32 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v32);
      *((_QWORD *)&v59 - 4) = &_s10CodingKeysON_141;
      *((_QWORD *)&v59 - 3) = sub_1BAE8FA3C();
      *((_QWORD *)&v59 - 2) = sub_1BA7F52E0();
      *((_QWORD *)&v59 - 1) = sub_1BAE8FA80();
      swift_getKeyPath();
      swift_retain();
      v33 = sub_1BAE71220((uint64_t)&unk_1E72532E8);
      swift_release_n();
      sub_1BA98D1F0();
      v14 = (void *)swift_allocError();
      *(_QWORD *)v34 = v31;
      *(_QWORD *)(v34 + 8) = v30;
      *(_QWORD *)(v34 + 16) = v33;
      *(_OWORD *)(v34 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      v35 = v31;
      a1 = v28;
      sub_1BA69C828(v35, v30, 1);
      v79[1](v12, v29);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v82 = 0uLL;
  v83 = 0;
  v24 = sub_1BB874098();
  v26 = v25;
  v72 = v24;
  v82 = xmmword_1BB8A1A10;
  v83 = 0;
  v27 = sub_1BB874098();
  v37 = v36;
  v71 = v27;
  v82 = xmmword_1BB8D2D60;
  v83 = 0;
  v68 = sub_1BB874098();
  v69 = v40;
  v70 = v26;
  v82 = xmmword_1BB8D2D70;
  v83 = 0;
  v41 = sub_1BB87402C();
  v43 = v42;
  v67 = v41;
  v82 = xmmword_1BB8D2D90;
  v83 = 0;
  v65 = sub_1BB874098();
  v66 = v44;
  v82 = xmmword_1BB8D2D80;
  v83 = 0;
  v84 = sub_1BB8740A4();
  v82 = xmmword_1BB8D2DA0;
  v83 = 0;
  v62 = sub_1BB87402C();
  v63 = v45;
  v64 = v43;
  sub_1BA4AD288(0, &qword_1ED3B9500, (uint64_t)&type metadata for FormatTypeDefinition.Case, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v82 = xmmword_1BB8D2DB0;
  v83 = 0;
  sub_1BA5C61D4();
  sub_1BB8740D4();
  v60 = v80;
  v59 = xmmword_1BB8D2DD0;
  v82 = xmmword_1BB8D2DD0;
  v83 = 0;
  v46 = sub_1BB8740F8();
  v61 = a1;
  if ((v46 & 1) != 0)
  {
    v80 = v59;
    v81 = 0;
    sub_1BB8740D4();
    v47 = v85;
  }
  else
  {
    v47 = 0;
  }
  v59 = xmmword_1BB8D2DE0;
  v82 = xmmword_1BB8D2DE0;
  v83 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v80 = v59;
    v81 = 0;
    sub_1BA4A2870(qword_1ED3D1EE8, (uint64_t (*)(uint64_t))sub_1BA7607C8, MEMORY[0x1E0DB3140]);
    v48 = v19;
    v49 = v20;
    sub_1BB8740D4();
    v50 = v15;
    v51 = v74;
    v52 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v51, v50);
  }
  else
  {
    v49 = v20;
    v48 = v19;
    v52 = MEMORY[0x1E0DEE9E8];
  }
  sub_1BB86E710();
  v82 = xmmword_1BB8D2DF0;
  v83 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3C47D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48D0]);
  sub_1BB874068();
  v79[1](v49, v48);
  v53 = type metadata accessor for FormatEnumPropertyDefinition(0);
  sub_1BA646EFC(v75, v16 + *(int *)(v53 + 56), (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v54 = v70;
  *(_QWORD *)v16 = v72;
  *(_QWORD *)(v16 + 8) = v54;
  *(_QWORD *)(v16 + 16) = v71;
  *(_QWORD *)(v16 + 24) = v37;
  v55 = v69;
  *(_QWORD *)(v16 + 32) = v68;
  *(_QWORD *)(v16 + 40) = v55;
  v56 = v64;
  *(_QWORD *)(v16 + 48) = v67;
  *(_QWORD *)(v16 + 56) = v56;
  v57 = v66;
  *(_QWORD *)(v16 + 64) = v65;
  *(_QWORD *)(v16 + 72) = v57;
  *(_BYTE *)(v16 + 80) = v84 & 1;
  v58 = v63;
  *(_QWORD *)(v16 + 88) = v62;
  *(_QWORD *)(v16 + 96) = v58;
  *(_QWORD *)(v16 + 104) = v60;
  *(_BYTE *)(v16 + 112) = v47;
  *(_QWORD *)(v16 + 120) = v52;
  v38 = (uint64_t)v61;
  return __swift_destroy_boxed_opaque_existential_1(v38);
}

uint64_t sub_1BA7F5CCC()
{
  return sub_1BA7F5CD4();
}

uint64_t sub_1BA7F5CD4()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  v0 = sub_1BB86C1D8();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEF10];
  MEMORY[0x1E0C80A78](v0);
  sub_1BB86C1C0();
  sub_1BA4A2870(&qword_1EF2B1828, v1, MEMORY[0x1E0CAEF28]);
  return sub_1BB872B80();
}

void sub_1BA7F5D6C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  unint64_t v11;
  uint64_t v12;
  _OWORD v13[5];
  uint64_t v14;
  unint64_t v15;

  v5 = *(_OWORD *)(a2 + 48);
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v5;
  v13[4] = *(_OWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v6;
  v7 = v2[4];
  v8 = v2[6];
  v15 = v2[2];
  sub_1BA6FA63C();
  if (!v3)
  {
    v9 = *(_QWORD *)(v7 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v9; ++i)
      {
        v15 = *(_QWORD *)(v7 + 8 * i + 32);
        sub_1BA7196DC(v15);
        sub_1BA6FA7EC();
        sub_1BA719340(v15);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v8 >> 62 == 1)
    {
      v11 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      sub_1BA67D3F4(v11);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v13, v11, v12);
      sub_1BA6EEDB4(v11);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t FormatImageNodeRequestPath.bind(binder:context:)()
{
  return sub_1BA527060();
}

uint64_t type metadata accessor for FormatDataLayoutAttributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatDataLayoutAttributes);
}

uint64_t destroy for FormatSlotItemCountLimit(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
    v4 = sub_1BB86E710();
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return result;
}

uint64_t sub_1BA7F5F9C(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  _BOOL8 v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  uint64_t v78;
  _BOOL8 v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  char v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t result;
  char v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;

  swift_beginAccess();
  if (*(_BYTE *)(v1 + 64) == 1)
  {
    v3 = *(_BYTE *)(a1 + 64);
    v4 = a1;
  }
  else
  {
    v3 = 0;
    v4 = v1;
  }
  v126 = *(_QWORD *)(v1 + 32);
  v127 = *(_QWORD *)(v1 + 16);
  v129 = *(_QWORD *)(v1 + 40);
  v130 = *(_QWORD *)(v1 + 24);
  v124 = *(_QWORD *)(v4 + 48);
  v125 = *(_QWORD *)(v4 + 56);
  swift_beginAccess();
  v128 = *(_QWORD *)(v1 + 72);
  if (!v128)
  {
    swift_beginAccess();
    v128 = *(_QWORD *)(a1 + 72);
    swift_bridgeObjectRetain();
  }
  if (*(unsigned __int8 *)(v1 + 84) == 255)
    v123 = *(unsigned int *)(a1 + 80) | ((unint64_t)*(unsigned __int8 *)(a1 + 84) << 32);
  else
    v123 = *(unsigned int *)(v1 + 80) | ((unint64_t)*(unsigned __int8 *)(v1 + 84) << 32);
  swift_beginAccess();
  v5 = *(_QWORD *)(v1 + 88);
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 88);
  v7 = v5;
  v8 = v6;
  v155 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v6 + 16);
  if (__OFADD__(v9, v10))
    goto LABEL_87;
  v122 = v3;
  sub_1BA7F6CAC();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v139 = v8;
  swift_bridgeObjectRetain();
  sub_1BB8727C0();
  v151 = sub_1BA6E6D30(0, v9, 0, MEMORY[0x1E0DEE9D8]);
  v11 = *(_QWORD *)(v7 + 16);
  v138 = v7;
  if (!v11)
    goto LABEL_26;
  v140 = v10;
  swift_bridgeObjectRetain();
  v12 = 0;
  do
  {
    v14 = *(_QWORD *)(v7 + v12 + 32);
    v13 = *(_QWORD *)(v7 + v12 + 40);
    v143 = v11;
    v146 = *(_QWORD *)(v7 + v12 + 48);
    v149 = *(_QWORD *)(v7 + v12 + 56);
    v152 = *(_BYTE *)(v7 + v12 + 64);
    v15 = *(_QWORD *)(v7 + v12 + 72);
    v16 = *(unsigned __int8 *)(v7 + v12 + 84);
    v17 = *(unsigned int *)(v7 + v12 + 80);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = sub_1BA6E35A8(v14, v13);
    v21 = v155[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v24 = v19;
    if (v155[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C89FC();
    }
    else
    {
      sub_1BB4B9248(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_1BA6E35A8(v14, v13);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_88;
      v20 = v25;
    }
    v27 = v17 | (v16 << 32);
    if ((v24 & 1) != 0)
    {
      v28 = v155[7] + 56 * v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)v28 = v14;
      *(_QWORD *)(v28 + 8) = v13;
      *(_QWORD *)(v28 + 16) = v146;
      *(_QWORD *)(v28 + 24) = v149;
      *(_BYTE *)(v28 + 32) = v152;
      *(_QWORD *)(v28 + 40) = v15;
      *(_BYTE *)(v28 + 52) = BYTE4(v27);
      *(_DWORD *)(v28 + 48) = v17;
    }
    else
    {
      v155[(v20 >> 6) + 8] |= 1 << v20;
      v29 = (uint64_t *)(v155[6] + 16 * v20);
      *v29 = v14;
      v29[1] = v13;
      v30 = v155[7] + 56 * v20;
      *(_QWORD *)v30 = v14;
      *(_QWORD *)(v30 + 8) = v13;
      *(_QWORD *)(v30 + 16) = v146;
      *(_QWORD *)(v30 + 24) = v149;
      *(_BYTE *)(v30 + 32) = v152;
      *(_QWORD *)(v30 + 40) = v15;
      *(_BYTE *)(v30 + 52) = BYTE4(v27);
      *(_DWORD *)(v30 + 48) = v17;
      v31 = v155[2];
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
        goto LABEL_83;
      v155[2] = v33;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v151[2];
    v35 = v151[3];
    swift_bridgeObjectRetain();
    if (v34 >= v35 >> 1)
      v151 = sub_1BA6E6D30((_QWORD *)(v35 > 1), v34 + 1, 1, v151);
    v151[2] = v34 + 1;
    v36 = &v151[2 * v34];
    v36[4] = v14;
    v36[5] = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 += 56;
    --v11;
    v7 = v138;
  }
  while (v143 != 1);
  swift_bridgeObjectRelease();
  v10 = v140;
LABEL_26:
  v37 = sub_1BA6E6D30(0, v10, 0, MEMORY[0x1E0DEE9D8]);
  v38 = *(_QWORD *)(v139 + 16);
  if (!v38)
    goto LABEL_67;
  v39 = swift_bridgeObjectRetain();
  v40 = 0;
  while (2)
  {
    v150 = v37;
    v42 = *(_QWORD *)(v39 + v40 + 32);
    v43 = *(_QWORD *)(v39 + v40 + 40);
    v44 = *(_QWORD *)(v39 + v40 + 48);
    v45 = *(_QWORD *)(v39 + v40 + 56);
    v46 = *(_BYTE *)(v39 + v40 + 64);
    v147 = *(unsigned int *)(v39 + v40 + 80) | ((unint64_t)*(unsigned __int8 *)(v39 + v40 + 84) << 32);
    v47 = v155[2];
    v153 = *(_QWORD *)(v39 + v40 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v144 = v40;
    if (!v47)
      goto LABEL_48;
    swift_bridgeObjectRetain();
    v48 = sub_1BA6E35A8(v42, v43);
    if ((v49 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_48:
      v142 = v44;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v72 = swift_isUniquelyReferenced_nonNull_native();
      v73 = v42;
      v74 = v72;
      v75 = v73;
      v77 = sub_1BA6E35A8(v73, v43);
      v78 = v155[2];
      v79 = (v76 & 1) == 0;
      v80 = v78 + v79;
      if (__OFADD__(v78, v79))
        goto LABEL_82;
      v81 = v76;
      v82 = v38;
      if (v155[3] >= v80)
      {
        v86 = v147;
        v85 = v46;
        if ((v74 & 1) == 0)
        {
          sub_1BB4C89FC();
          v86 = v147;
        }
      }
      else
      {
        sub_1BB4B9248(v80, v74);
        v83 = sub_1BA6E35A8(v75, v43);
        if ((v81 & 1) != (v84 & 1))
          goto LABEL_88;
        v77 = v83;
        v85 = v46;
        v86 = v147;
      }
      v87 = HIDWORD(v86);
      if ((v81 & 1) != 0)
      {
        v88 = v155[7] + 56 * v77;
        v89 = v86;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)v88 = v75;
        *(_QWORD *)(v88 + 8) = v43;
        *(_QWORD *)(v88 + 16) = v142;
        *(_QWORD *)(v88 + 24) = v45;
        *(_BYTE *)(v88 + 32) = v85;
        *(_QWORD *)(v88 + 40) = v153;
        *(_BYTE *)(v88 + 52) = v87;
        *(_DWORD *)(v88 + 48) = v89;
      }
      else
      {
        v155[(v77 >> 6) + 8] |= 1 << v77;
        v90 = (uint64_t *)(v155[6] + 16 * v77);
        *v90 = v75;
        v90[1] = v43;
        v91 = v155[7] + 56 * v77;
        *(_QWORD *)v91 = v75;
        *(_QWORD *)(v91 + 8) = v43;
        *(_QWORD *)(v91 + 16) = v142;
        *(_QWORD *)(v91 + 24) = v45;
        *(_BYTE *)(v91 + 32) = v85;
        *(_QWORD *)(v91 + 40) = v153;
        *(_BYTE *)(v91 + 52) = BYTE4(v86);
        *(_DWORD *)(v91 + 48) = v86;
        v92 = v155[2];
        v32 = __OFADD__(v92, 1);
        v93 = v92 + 1;
        if (v32)
          goto LABEL_84;
        v155[2] = v93;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v150;
      v94 = v150[2];
      v95 = v150[3];
      swift_bridgeObjectRetain();
      v71 = v82;
      if (v94 >= v95 >> 1)
        v37 = sub_1BA6E6D30((_QWORD *)(v95 > 1), v94 + 1, 1, v150);
      v96 = v144;
      v37[2] = v94 + 1;
      v97 = &v37[2 * v94];
      v97[4] = v75;
      v97[5] = v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v139;
      goto LABEL_30;
    }
    v135 = v38;
    v132 = v46;
    v50 = v155[7] + 56 * v48;
    v51 = *(_QWORD *)(v50 + 8);
    v141 = *(_QWORD *)v50;
    v52 = *(_QWORD *)(v50 + 16);
    v53 = *(_QWORD *)(v50 + 24);
    v54 = *(unsigned __int8 *)(v50 + 32);
    v55 = v45;
    v56 = *(_QWORD *)(v50 + 40);
    v136 = *(unsigned __int8 *)(v50 + 52);
    v57 = *(unsigned int *)(v50 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v131 = v54;
    if (v54)
      v58 = v44;
    else
      v58 = v52;
    v134 = v58;
    if (!v54)
      v55 = v53;
    v59 = v56;
    if (!v56)
      v59 = swift_bridgeObjectRetain();
    v133 = v59;
    if ((v57 | (unint64_t)(v136 << 32)) >> 32 <= 0xFE)
      v60 = v57 | (v136 << 32);
    else
      v60 = v147;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v61 = swift_isUniquelyReferenced_nonNull_native();
    v63 = sub_1BA6E35A8(v141, v51);
    v64 = v155[2];
    v65 = (v62 & 1) == 0;
    v66 = v64 + v65;
    if (__OFADD__(v64, v65))
      goto LABEL_85;
    v67 = v62;
    v68 = v51;
    v137 = v55;
    if (v155[3] >= v66)
    {
      v71 = v135;
      if ((v61 & 1) == 0)
        sub_1BB4C89FC();
    }
    else
    {
      sub_1BB4B9248(v66, v61);
      v69 = sub_1BA6E35A8(v141, v51);
      v71 = v135;
      if ((v67 & 1) != (v70 & 1))
        goto LABEL_88;
      v63 = v69;
    }
    v96 = v144;
    v98 = v131 & v132;
    if ((v67 & 1) != 0)
    {
      v41 = v155[7] + 56 * v63;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)v41 = v141;
      *(_QWORD *)(v41 + 8) = v68;
      *(_QWORD *)(v41 + 16) = v134;
      *(_QWORD *)(v41 + 24) = v137;
      *(_BYTE *)(v41 + 32) = v98;
      *(_QWORD *)(v41 + 40) = v133;
      *(_BYTE *)(v41 + 52) = BYTE4(v60);
      *(_DWORD *)(v41 + 48) = v60;
    }
    else
    {
      v155[(v63 >> 6) + 8] |= 1 << v63;
      v99 = (uint64_t *)(v155[6] + 16 * v63);
      *v99 = v141;
      v99[1] = v68;
      v100 = v155[7] + 56 * v63;
      *(_QWORD *)v100 = v141;
      *(_QWORD *)(v100 + 8) = v68;
      *(_QWORD *)(v100 + 16) = v134;
      *(_QWORD *)(v100 + 24) = v137;
      *(_BYTE *)(v100 + 32) = v98;
      *(_QWORD *)(v100 + 40) = v133;
      *(_BYTE *)(v100 + 52) = BYTE4(v60);
      *(_DWORD *)(v100 + 48) = v60;
      v101 = v155[2];
      v32 = __OFADD__(v101, 1);
      v102 = v101 + 1;
      if (v32)
        goto LABEL_86;
      v155[2] = v102;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v39 = v139;
    v37 = v150;
LABEL_30:
    v40 = v96 + 56;
    v38 = v71 - 1;
    if (v38)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
LABEL_67:
  swift_bridgeObjectRetain();
  v103 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v103);
  v104 = v37[2];
  if (v104)
  {
    swift_bridgeObjectRetain();
    v105 = v37 + 5;
    v106 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (v155[2])
      {
        v107 = *(v105 - 1);
        v108 = *v105;
        swift_bridgeObjectRetain_n();
        v109 = sub_1BA6E35A8(v107, v108);
        if ((v110 & 1) != 0)
        {
          v111 = v155[7] + 56 * v109;
          v112 = *(_QWORD *)(v111 + 8);
          v154 = *(_QWORD *)v111;
          v113 = *(_QWORD *)(v111 + 16);
          v148 = *(_QWORD *)(v111 + 24);
          v145 = *(_BYTE *)(v111 + 32);
          v114 = *(_QWORD *)(v111 + 40);
          v115 = *(unsigned __int8 *)(v111 + 52);
          v116 = *(unsigned int *)(v111 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v106 = sub_1BA7F6B74(0, v106[2] + 1, 1, v106);
          v118 = v106[2];
          v117 = v106[3];
          if (v118 >= v117 >> 1)
            v106 = sub_1BA7F6B74((_QWORD *)(v117 > 1), v118 + 1, 1, v106);
          v106[2] = v118 + 1;
          v119 = &v106[7 * v118];
          v119[4] = v154;
          v119[5] = v112;
          v119[6] = v113;
          v119[7] = v148;
          *((_BYTE *)v119 + 64) = v145;
          v119[9] = v114;
          *((_BYTE *)v119 + 84) = (v116 | (unint64_t)(v115 << 32)) >> 32;
          *((_DWORD *)v119 + 20) = v116;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v105 += 2;
      --v104;
    }
    while (v104);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v106 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v120 = swift_allocObject();
  *(_QWORD *)(v120 + 72) = 0;
  swift_beginAccess();
  *(_QWORD *)(v120 + 16) = v127;
  *(_QWORD *)(v120 + 24) = v130;
  *(_QWORD *)(v120 + 32) = v126;
  *(_QWORD *)(v120 + 40) = v129;
  *(_QWORD *)(v120 + 48) = v124;
  *(_QWORD *)(v120 + 56) = v125;
  *(_BYTE *)(v120 + 64) = v122;
  swift_beginAccess();
  *(_QWORD *)(v120 + 72) = v128;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v120 + 84) = BYTE4(v123);
  *(_DWORD *)(v120 + 80) = v123;
  swift_beginAccess();
  *(_QWORD *)(v120 + 88) = v106;
  return v120;
}

_QWORD *sub_1BA7F6B74(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BA4AD288(0, &qword_1ED3A0A48, (uint64_t)&type metadata for FormatAnimationNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4])
          memmove(v12, a4 + 4, 56 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BA7F2614(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1BA7F6CAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39ECD8)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39ECD8);
  }
}

id sub_1BA7F6D0C(id result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 2:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return (id)sub_1BA5DCC20(a7);
    case 1:
      return result;
    case 0:
      return (id)sub_1BA6F2B04((uint64_t)result, a2, a3);
  }
  return result;
}

void sub_1BA7F6D98(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  switch(a9)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5DCC4C(a7);
      break;
    case 1:

      break;
    case 0:
      sub_1BA6F2B88((uint64_t)a1, a2, a3);
      break;
  }
}

unint64_t sub_1BA7F6E24()
{
  unint64_t result;

  result = qword_1ED3CA380;
  if (!qword_1ED3CA380)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAsyncImageContent, &type metadata for FormatAsyncImageContent);
    atomic_store(result, (unint64_t *)&qword_1ED3CA380);
  }
  return result;
}

unint64_t FormatSyncImageContent.bind(binder:context:)(unint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v5 = result;
  v6 = *v2;
  v7 = (unint64_t)*v2 >> 62;
  if ((_DWORD)v7)
  {
    if ((_DWORD)v7 == 1)
    {
      v8 = *(unsigned __int8 *)(v6 + 64);
      if (v8 != 255)
      {
        v9 = v6 & 0x3FFFFFFFFFFFFFFFLL;
        v21 = *(_QWORD *)(v9 + 48);
        v22 = *(_QWORD *)(v9 + 56);
        sub_1BA76F534(v21, v22, v8);
        FormatBundleImageSize.bind(binder:context:)();
        return sub_1BA76F520(v21, v22, v8);
      }
    }
    else
    {
      v17 = *(_QWORD *)(v6 + 24);
      swift_retain_n();
      swift_bridgeObjectRetain();
      FormatSyncImageContent.bind(binder:context:)(v5, a2);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      else
      {
        swift_release();
        swift_bridgeObjectRetain();
        sub_1BAB92B90(v5, a2, v17);
        swift_release();
        return swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    v10 = *(_QWORD *)(v6 + 48);
    v11 = *(_QWORD *)(v6 + 56);
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(_QWORD *)(v6 + 88);
    v14 = *(_QWORD *)(v6 + 96);
    v15 = *(_BYTE *)(v6 + 104);
    v16 = *(_QWORD *)(v6 + 112);
    v18 = *(unsigned __int16 *)(v6 + 64);
    v20 = *(_QWORD *)(v6 + 16);
    v23 = *(_QWORD *)(v6 + 24);
    v19 = *(_QWORD *)(v6 + 32);
    v24 = *(_BYTE *)(v6 + 40);
    sub_1BA60DF54(v20, v23, v19, v24);
    sub_1BA740E74(v10, v11, v18);
    sub_1BA60DEE4(v12);
    sub_1BA69C808(v13, v14, v15);
    sub_1BA895BA4(v16);
    FormatSymbolImage.bind(binder:context:)(v5, a2);
    sub_1BA60DFC4(v20, v23, v19, v24);
    sub_1BA740460(v10, v11, v18);
    sub_1BA60DF1C(v12);
    sub_1BA69C828(v13, v14, v15);
    return sub_1BA895BB8(v16);
  }
  return result;
}

void sub_1BA7F70B0(unint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _OWORD v25[5];
  uint64_t v26;

  v4 = v2;
  v7 = *(_OWORD *)(a2 + 48);
  v25[2] = *(_OWORD *)(a2 + 32);
  v25[3] = v7;
  v25[4] = *(_OWORD *)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v8;
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v9 = v2[6];
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v10; ++i)
      {
        v12 = *(_QWORD *)(v9 + 8 * i + 32);
        sub_1BA7196DC(v12);
        sub_1BA6FA7EC();
        sub_1BA719340(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7])
      sub_1BA7DFF54(a1, a2, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BA7E0184);
    v13 = v2[8];
    if (v13)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v13 + 72);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_1BA7C5A8C(a1, (uint64_t)v25, v14);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v15 = *(_QWORD *)(v13 + 88);
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain_n();
        v17 = (uint64_t *)(v15 + 72);
        do
        {
          v18 = *v17;
          if (*v17)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7C5A8C(a1, (uint64_t)v25, v18);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v17 += 7;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease_n();
      }
    }
    v19 = v4[9];
    if ((v19 & 0x8000000000000000) == 0)
    {
      v21 = *(_QWORD *)(v19 + 16);
      v20 = *(_QWORD *)(v19 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA7F8DE4(a1, (uint64_t)v25, v21, v20);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    sub_1BA73B1E0();
    if (v4[11])
      sub_1BA726664(a1, (uint64_t)v25);
    if (v4[14] != 1)
      sub_1BA7F7458(a1, (uint64_t *)v25);
    swift_beginAccess();
    v22 = v4[24];
    if (v22 >> 62 == 1)
    {
      v23 = *(_QWORD *)(v22 + 16);
      v24 = *(_QWORD *)(v22 + 24);
      sub_1BA67D3F4(v23);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v25, v23, v24);
      sub_1BA6EEDB4(v23);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1BA7F7458(unint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *((_BYTE *)a2 + 8);
  v5 = *((_BYTE *)a2 + 9);
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v12 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = *v2;
  v20 = v2[2];
  v21 = *a2;
  v33 = v15;
  v17 = v5;
  v18 = v4;
  v22 = v4;
  v23 = v5;
  v16 = v6;
  v24 = v6;
  v25 = v7;
  v26 = v8;
  v27 = v9;
  v28 = v10;
  v29 = v11;
  v30 = v12;
  v31 = v13;
  v32 = v14;
  sub_1BA73B1E0();
  if (!v3)
  {
    if (v20)
    {
      v22 = v18;
      v23 = v17;
      v24 = v16;
      v25 = v7;
      v26 = v8;
      v27 = v9;
      v28 = v10;
      v29 = v11;
      v30 = v12;
      v31 = v13;
      v32 = v14;
      sub_1BA726664(a1, (uint64_t)&v21);
    }
  }
}

uint64_t type metadata accessor for FormatNodeBindingItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatNodeBindingItem);
}

uint64_t sub_1BA7F7558@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  int isUniquelyReferenced_nonNull_native;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  _OWORD *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD *v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  _OWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _OWORD v79[2];
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _OWORD v84[2];
  _OWORD v85[2];
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  _OWORD v90[2];
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _OWORD v97[2];
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _OWORD v104[2];
  _QWORD *v105;
  uint64_t v106;

  sub_1BA7F85E8(0, (unint64_t *)&qword_1ED3B3788, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v70 - v5;
  sub_1BA7F8204(0);
  v77 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v106 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v70 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v70 - v14;
  v105 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  sub_1BA7F8640();
  result = sub_1BB8727C0();
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v40 = v105;
LABEL_24:
    *a2 = a1;
    a2[1] = v40;
    return result;
  }
  v71 = v12;
  v72 = a2;
  v18 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v19 = *(_QWORD *)(v8 + 72);
  v73 = a1;
  swift_bridgeObjectRetain();
  v75 = v8;
  v76 = v6;
  v74 = v15;
  while (1)
  {
    v78 = v17;
    sub_1BA7F7B48(v18, (uint64_t)v15);
    v20 = v105;
    if (v105[2])
    {
      v21 = *(_QWORD *)v15;
      v22 = *((_QWORD *)v15 + 1);
      swift_bridgeObjectRetain();
      v23 = sub_1BA6E35A8(v21, v22);
      if ((v24 & 1) != 0)
      {
        sub_1BA7F7B48(v20[7] + v23 * v19, (uint64_t)v6);
        v25 = 0;
      }
      else
      {
        v25 = 1;
      }
      v26 = v77;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v25, 1, v77);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v26) != 1)
      {
        swift_bridgeObjectRelease_n();
        v45 = v71;
        sub_1BA7F7B8C((uint64_t)v6, (uint64_t)v71);
        type metadata accessor for FormatPackageError();
        sub_1BA4A2870((unint64_t *)&qword_1EF2AC008, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageError, (uint64_t)&unk_1BB8F5900);
        swift_allocError();
        v46 = *((_OWORD *)v15 + 3);
        v47 = *((_OWORD *)v15 + 5);
        v82 = *((_OWORD *)v15 + 4);
        v83 = v47;
        v48 = *((_OWORD *)v15 + 5);
        v84[0] = *((_OWORD *)v15 + 6);
        *(_OWORD *)((char *)v84 + 9) = *(_OWORD *)(v15 + 105);
        v49 = *((_OWORD *)v15 + 1);
        v79[0] = *(_OWORD *)v15;
        v79[1] = v49;
        v50 = *((_OWORD *)v15 + 3);
        v52 = *(_OWORD *)v15;
        v51 = *((_OWORD *)v15 + 1);
        v80 = *((_OWORD *)v15 + 2);
        v81 = v50;
        v53 = v45[1];
        v54 = v45[3];
        v86 = v45[2];
        v87 = v54;
        v55 = v45[1];
        v85[0] = *v45;
        v85[1] = v55;
        *(_OWORD *)((char *)v90 + 9) = *(_OWORD *)((char *)v45 + 105);
        v56 = v45[5];
        v90[0] = v45[6];
        v57 = v45[3];
        v58 = v45[5];
        v88 = v45[4];
        v89 = v58;
        v93 = v80;
        v94 = v46;
        v91 = v52;
        v92 = v51;
        *(_OWORD *)((char *)v97 + 9) = *(_OWORD *)(v15 + 105);
        v95 = v82;
        v96 = v48;
        v99 = v53;
        v100 = v86;
        v97[0] = *((_OWORD *)v15 + 6);
        v98 = v85[0];
        *(_OWORD *)((char *)v104 + 9) = *(_OWORD *)((char *)v45 + 105);
        v59 = v45[6];
        v103 = v56;
        v104[0] = v59;
        v101 = v57;
        v102 = v88;
        v60[2] = v80;
        v60[3] = v46;
        *v60 = v52;
        v60[1] = v51;
        v61 = v95;
        v62 = v96;
        v63 = v97[1];
        v60[6] = v97[0];
        v60[7] = v63;
        v60[4] = v61;
        v60[5] = v62;
        v64 = v98;
        v65 = v99;
        v66 = v101;
        v60[10] = v100;
        v60[11] = v66;
        v60[8] = v64;
        v60[9] = v65;
        v67 = v102;
        v68 = v103;
        v69 = v104[0];
        *(_OWORD *)((char *)v60 + 233) = *(_OWORD *)((char *)v104 + 9);
        v60[13] = v68;
        v60[14] = v69;
        v60[12] = v67;
        swift_storeEnumTagMultiPayload();
        sub_1BA8CED9C((uint64_t)v79);
        sub_1BA8CED9C((uint64_t)v85);
        swift_willThrow();
        sub_1BA7F81C8((uint64_t)v45);
        sub_1BA7F81C8((uint64_t)v15);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v77);
    }
    v27 = v19;
    sub_1BA7F859C((uint64_t)v6);
    v29 = *(_QWORD *)v15;
    v28 = *((_QWORD *)v15 + 1);
    sub_1BA7F7B48((uint64_t)v15, v106);
    swift_bridgeObjectRetain();
    v30 = v105;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v91 = v30;
    v33 = sub_1BA6E35A8(v29, v28);
    v34 = v30[2];
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
      break;
    v37 = v32;
    if (v30[3] >= v36)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v40 = (_QWORD *)v91;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BB4C232C();
        v40 = (_QWORD *)v91;
        if ((v37 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BB4AEA7C(v36, isUniquelyReferenced_nonNull_native);
      v38 = sub_1BA6E35A8(v29, v28);
      if ((v37 & 1) != (v39 & 1))
        goto LABEL_28;
      v33 = v38;
      v40 = (_QWORD *)v91;
      if ((v37 & 1) != 0)
      {
LABEL_3:
        v19 = v27;
        sub_1BA990380(v106, v40[7] + v33 * v27);
        goto LABEL_4;
      }
    }
    v40[(v33 >> 6) + 8] |= 1 << v33;
    v41 = (uint64_t *)(v40[6] + 16 * v33);
    *v41 = v29;
    v41[1] = v28;
    v19 = v27;
    sub_1BA7F7B8C(v106, v40[7] + v33 * v27);
    v42 = v40[2];
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (v43)
      goto LABEL_27;
    v40[2] = v44;
    swift_bridgeObjectRetain();
LABEL_4:
    v105 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v74;
    sub_1BA7F81C8((uint64_t)v74);
    v18 += v19;
    v17 = v78 - 1;
    v8 = v75;
    v6 = v76;
    if (v78 == 1)
    {
      a1 = v73;
      result = swift_bridgeObjectRelease();
      a2 = v72;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for FormatItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 121))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 120) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 121) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 121) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BA7F7B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7F8204(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA7F7B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7F8204(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA7F7BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  __int128 *v80;

  v4 = v3;
  v80 = (__int128 *)a2;
  v65 = a1;
  v6 = type metadata accessor for FormatOption();
  v56 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v50 - v11);
  v61 = a3;
  v13 = *(_QWORD *)(a3 + 16);
  if (v13)
  {
    v14 = v61 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v15 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    v16 = 0;
    v59 = v12;
    v57 = v8;
    v51 = v13;
    v53 = v14;
    v52 = v15;
    while (1)
    {
      v54 = v16;
      sub_1BA8CAF1C(v14 + v15 * v16, (uint64_t)v12, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      v18 = v12[9];
      v17 = v12[10];
      v60 = v12[11];
      v58 = v12[13];
      v55 = v12[14];
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain_n();
        v20 = v18 + 48;
        while (1)
        {
          v66 = *(_QWORD *)(v20 - 16);
          v21 = v80[3];
          v76 = v80[2];
          v77 = v21;
          v78 = v80[4];
          v79 = *((_QWORD *)v80 + 10);
          v22 = v80[1];
          v74 = *v80;
          v75 = v22;
          swift_bridgeObjectRetain();
          swift_retain_n();
          sub_1BA6F84BC();
          if (v4)
            break;
          v20 += 40;
          swift_bridgeObjectRelease();
          swift_release_n();
          if (!--v19)
          {
            swift_bridgeObjectRelease_n();
            v12 = v59;
            goto LABEL_8;
          }
        }
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_release_n();
        goto LABEL_25;
      }
LABEL_8:
      v23 = (uint64_t)v57;
      if (v17)
      {
        v24 = v80[3];
        v76 = v80[2];
        v77 = v24;
        v78 = v80[4];
        v79 = *((_QWORD *)v80 + 10);
        v25 = v80[1];
        v74 = *v80;
        v75 = v25;
        sub_1BA7F825C(v65, (uint64_t)&v74);
        if (v4)
          goto LABEL_27;
      }
      v26 = v60;
      v27 = *(_QWORD *)(v60 + 16);
      if (v27)
      {
        v64 = v4;
        swift_bridgeObjectRetain_n();
        v28 = (uint64_t *)(v26 + 48);
        while (1)
        {
          v62 = v27;
          v29 = *(v28 - 1);
          v31 = *v28;
          v30 = v28[1];
          v33 = v28[2];
          v32 = v28[3];
          v34 = v28[4];
          v35 = v28[5];
          v66 = *(v28 - 2);
          v67 = v29;
          v68 = v31;
          v69 = v30;
          v70 = v33;
          v71 = v32;
          v72 = v34;
          v73 = v35;
          v36 = v80[3];
          v76 = v80[2];
          v77 = v36;
          v78 = v80[4];
          v79 = *((_QWORD *)v80 + 10);
          v37 = v80[1];
          v74 = *v80;
          v75 = v37;
          v38 = v66;
          v39 = v30;
          v40 = v34;
          v63 = v35;
          sub_1BA76B724(v66, v29, v31, v30, v33, v32, v34);
          v41 = v64;
          sub_1BAC5FA3C();
          v64 = v41;
          if (v41)
            break;
          v28 += 8;
          sub_1BA76B698(v38, v29, v31, v39, v33, v32, v40);
          v27 = v62 - 1;
          if (v62 == 1)
          {
            swift_bridgeObjectRelease_n();
            v4 = v64;
            v12 = v59;
            v23 = (uint64_t)v57;
            goto LABEL_15;
          }
        }
        sub_1BA76B698(v38, v29, v31, v39, v33, v32, v40);
        swift_bridgeObjectRelease_n();
LABEL_25:
        v12 = v59;
        goto LABEL_27;
      }
LABEL_15:
      v42 = *(_QWORD *)(v58 + 16);
      if (v42)
        break;
LABEL_20:
      v48 = v55;
      swift_bridgeObjectRetain();
      sub_1BA6FEDF0(v65, (uint64_t)v80, v48);
      swift_bridgeObjectRelease();
      v14 = v53;
      v15 = v52;
      if (v4)
        goto LABEL_27;
      v49 = v54 + 1;
      sub_1BB06B59C((uint64_t)v12, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      v16 = v49;
      if (v49 == v51)
        goto LABEL_28;
    }
    v43 = v56;
    v44 = v58 + ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80));
    swift_bridgeObjectRetain_n();
    v45 = *(_QWORD *)(v43 + 72);
    while (1)
    {
      sub_1BA4C2DD8(v44, v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v66 = *(_QWORD *)(v23 + 16);
      v46 = v80[3];
      v76 = v80[2];
      v77 = v46;
      v78 = v80[4];
      v79 = *((_QWORD *)v80 + 10);
      v47 = v80[1];
      v74 = *v80;
      v75 = v47;
      swift_retain();
      sub_1BA711C44();
      if (v4)
        break;
      swift_release();
      sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v44 += v45;
      if (!--v42)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_20;
      }
    }
    swift_release();
    sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease_n();
LABEL_27:
    sub_1BB06B59C((uint64_t)v12, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
LABEL_28:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA7F81C8(uint64_t a1)
{
  uint64_t v2;

  sub_1BA7F8204(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA7F8204(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B3780)
  {
    v2 = sub_1BA8969CC();
    v4 = type metadata accessor for FormatObject(a1, (uint64_t)&type metadata for FormatItem, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3B3780);
  }
}

void sub_1BA7F825C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int EnumCaseMultiPayload;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  __int128 v33[5];
  uint64_t v34;
  int v35;

  v6 = type metadata accessor for FormatItemNodeAction();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3C8F38, v10);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - v12;
  v14 = *(_OWORD *)(a2 + 48);
  v33[2] = *(_OWORD *)(a2 + 32);
  v33[3] = v14;
  v33[4] = *(_OWORD *)(a2 + 64);
  v34 = *(_QWORD *)(a2 + 80);
  v15 = *(_OWORD *)(a2 + 16);
  LODWORD(v12) = *(_BYTE *)(v2 + 112) & 0xFE;
  v33[0] = *(_OWORD *)a2;
  v33[1] = v15;
  if ((_DWORD)v12 != 126 && (*(_QWORD *)(v2 + 48) & 0xF000000000000007) != 0xF000000000000007)
  {
    v28 = *(_QWORD *)(v2 + 48);
    sub_1BA7547AC();
    if (v3)
      return;
  }
  v16 = *(_QWORD *)(v2 + 120);
  v17 = *(_QWORD *)(v2 + 168);
  v18 = *(unsigned __int8 *)(v2 + 176);
  if (v18 > 1)
  {
    if (v18 == 2)
LABEL_11:
      sub_1BA7644AC(v16, *(_QWORD *)(v2 + 128), *(_QWORD *)(v2 + 136), *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152), *(_QWORD *)(v2 + 160), v17, v18);
  }
  else if (!*(_BYTE *)(v2 + 176))
  {
    if ((v17 & 0xF000000000000007) != 0xD000000000000007)
    {
      if ((~v16 & 0xF000000000000007) != 0)
      {
        v28 = *(_QWORD *)(v2 + 120);
        sub_1BA7547AC();
        if (v3)
          return;
      }
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_12:
  sub_1BA57B488(v2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t)v13, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    sub_1BA502AD0((uint64_t)v13, &qword_1ED3C8F38, (void (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 2) >= 6)
    {
      if (EnumCaseMultiPayload)
      {
        sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      }
      else
      {
        v23 = *(_QWORD *)v9;
        v24 = *((_QWORD *)v9 + 1);
        v27 = *((_QWORD *)v9 + 2);
        v28 = v23;
        v35 = v9[25];
        v25 = v9[24];
        v29 = v24;
        v30 = v27;
        v31 = v25;
        v32 = v35;
        sub_1BA75DD88();
        sub_1BAC65170(v23, v24, v27, v25, v35, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
        if (v3)
        {
          sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
          return;
        }
      }
    }
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
  }
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
  if (v20 <= 2)
    sub_1BA7644C0(v20);
  v21 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle__selectors);
  swift_beginAccess();
  v22 = *v21;
  swift_bridgeObjectRetain();
  sub_1BB572830(a1, v33, v22);
  swift_bridgeObjectRelease();
}

uint64_t sub_1BA7F859C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA7F85E8(0, (unint64_t *)&qword_1ED3B3788, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BA7F85E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BA7F8204(255);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BA7F8640()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C02A0)
  {
    sub_1BA7F8204(255);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C02A0);
  }
}

void sub_1BA7F86A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  _OWORD v22[5];
  uint64_t v23;

  v4 = v2;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 64);
  v22[3] = *(_OWORD *)(a2 + 48);
  v22[4] = v7;
  v8 = *(_OWORD *)(a2 + 16);
  v22[0] = *(_OWORD *)a2;
  v23 = *(_QWORD *)(a2 + 80);
  v22[1] = v8;
  v22[2] = v6;
  swift_beginAccess();
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v9 = v2[6];
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v10; ++i)
      {
        v12 = *(_QWORD *)(v9 + 8 * i + 32);
        sub_1BA7196DC(v12);
        sub_1BA6FA7EC();
        sub_1BA719340(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    sub_1BA7F8970(a1, (uint64_t)v22, v2[9]);
    swift_beginAccess();
    v13 = v2[11];
    if (v13 >> 62 == 1)
    {
      v14 = *(_QWORD *)(v13 + 16);
      v15 = *(_QWORD *)(v13 + 24);
      sub_1BA67D3F4(v14);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v22, v14, v15);
      sub_1BA6EEDB4(v14);
      swift_bridgeObjectRelease();
    }
    v16 = v4[13];
    if (v16)
    {
      swift_beginAccess();
      v17 = *(_QWORD *)(v16 + 72);
      if (v17)
      {
        swift_bridgeObjectRetain();
        sub_1BA7C5A8C(a1, (uint64_t)v22, v17);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v18 = *(_QWORD *)(v16 + 88);
      v19 = *(_QWORD *)(v18 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain_n();
        v20 = (uint64_t *)(v18 + 72);
        do
        {
          v21 = *v20;
          if (*v20)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7C5A8C(a1, (uint64_t)v22, v21);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v20 += 7;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

uint64_t sub_1BA7F8970(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[5];
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v7 = result;
    v8 = a3 + 32;
    swift_bridgeObjectRetain();
    v9 = 0;
    v15 = v8;
    v16 = v5;
    while (1)
    {
      v10 = *(_QWORD *)(v8 + 40 * v9 + 32);
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
        break;
LABEL_3:
      if (++v9 == v5)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = v10 + 48;
    while (1)
    {
      v19 = *(_QWORD *)(v12 - 16);
      v13 = *(_OWORD *)(a2 + 48);
      v17[2] = *(_OWORD *)(a2 + 32);
      v17[3] = v13;
      v17[4] = *(_OWORD *)(a2 + 64);
      v18 = *(_QWORD *)(a2 + 80);
      v14 = *(_OWORD *)(a2 + 16);
      v17[0] = *(_OWORD *)a2;
      v17[1] = v14;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BA6F84BC(v7, v17);
      if (v4)
        break;
      v12 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v8 = v15;
        v5 = v16;
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1BA7F8B2C@<X0>(char *a1@<X8>)
{
  return sub_1BA7AAEE4(a1);
}

uint64_t sub_1BA7F8B78(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  id v11;
  unint64_t v12;
  id v13;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  sub_1BA7F8D78();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.allowSourceMaps.getter(v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    a2 = (uint64_t)sub_1BAB570C8((void *)a2);
    v24 = a2;
    v11 = (id)a2;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (!swift_dynamicCast()
      || (v12 = v23, sub_1BA8EBE4C(v20, *((uint64_t *)&v20 + 1), v21, v22, v23), v12 >> 60 != 12))
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1BA82F074();
      sub_1BB87468C();
      sub_1BA6B5EF0();
      sub_1BB8740D4();
      v19 = v20;
      v15 = a2 | 0xC000000000000000;
      v16 = v21;
      v17 = v22;
      sub_1BA98D1F0();
      a2 = swift_allocError();
      *(_OWORD *)v18 = v19;
      *(_QWORD *)(v18 + 16) = v16;
      *(_QWORD *)(v18 + 24) = v17;
      *(_QWORD *)(v18 + 32) = v15;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  else
  {
    v13 = (id)a2;
  }
  return a2;
}

void sub_1BA7F8D78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4428)
  {
    sub_1BA82F074();
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4428);
  }
}

uint64_t type metadata accessor for FormatFontResource(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3AFF50);
}

uint64_t sub_1BA7F8DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = sub_1BA7F8E80(a1, a2, a3);
  if (!v4 && (a4 & 0x8000000000000000) == 0)
  {
    v10 = *(_QWORD *)(a4 + 16);
    v9 = *(_QWORD *)(a4 + 24);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BA7F8DE4(a1, a2, v10, v9);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA7F8E80(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = v3;
  v22 = result;
  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v8 = (uint64_t *)(a3 + 40);
    do
    {
      v9 = *v8;
      swift_retain();
      swift_retain_n();
      sub_1BA6F9BF4();
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_release();
        return swift_release_n();
      }
      swift_release();
      if (v9 < 0)
      {
        swift_release();
        swift_release();
      }
      else
      {
        v10 = *(_QWORD *)(v9 + 16);
        v11 = *(_QWORD *)(v9 + 24);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BA7F8E80(v22, a2, v10);
        if (v11 < 0)
        {
          swift_release();
          swift_release_n();
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          v12 = *(_QWORD *)(v11 + 16);
          v13 = *(_QWORD *)(v11 + 24);
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BA7F8E80(v22, a2, v12);
          if (v13 < 0)
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v14 = *(_QWORD *)(v13 + 16);
            v15 = *(_QWORD *)(v13 + 24);
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            sub_1BA7F8E80(v22, a2, v14);
            if (v15 < 0)
            {
              swift_release();
              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              v16 = *(_QWORD *)(v15 + 16);
              v17 = *(_QWORD *)(v15 + 24);
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              sub_1BA7F8E80(v22, a2, v16);
              if (v17 < 0)
              {
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                v18 = *(_QWORD *)(v17 + 16);
                v19 = *(_QWORD *)(v17 + 24);
                swift_retain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                sub_1BA7F8E80(v22, a2, v18);
                if ((v19 & 0x8000000000000000) == 0)
                {
                  v20 = *(_QWORD *)(v19 + 16);
                  v21 = *(_QWORD *)(v19 + 24);
                  swift_retain();
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  sub_1BA7F8DE4(v22, a2, v20, v21);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release_n();
                }
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
              }
              swift_release();
              swift_bridgeObjectRelease();
              swift_release_n();
            }
            swift_release();
            swift_bridgeObjectRelease();
            swift_release_n();
          }
          swift_release();
          swift_release_n();
          swift_bridgeObjectRelease();
          swift_release_n();
        }
      }
      v8 += 2;
      --v5;
    }
    while (v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA7F943C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t);
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  int *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;

  v208 = a2;
  v206 = a1;
  v205 = a3;
  v204 = (int *)type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v204);
  v184 = (uint64_t)&v183 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v187 = (uint64_t)&v183 - v7;
  MEMORY[0x1E0C80A78](v8);
  v190 = (uint64_t)&v183 - v9;
  MEMORY[0x1E0C80A78](v10);
  v186 = (uint64_t)&v183 - v11;
  MEMORY[0x1E0C80A78](v12);
  v191 = (uint64_t)&v183 - v13;
  MEMORY[0x1E0C80A78](v14);
  v194 = (uint64_t)&v183 - v15;
  MEMORY[0x1E0C80A78](v16);
  v189 = (uint64_t)&v183 - v17;
  MEMORY[0x1E0C80A78](v18);
  v193 = (uint64_t)&v183 - v19;
  MEMORY[0x1E0C80A78](v20);
  v195 = (uint64_t)&v183 - v21;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1E0C80A78](v22);
  v185 = (uint64_t)&v183 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v203 = (char *)&v183 - v25;
  MEMORY[0x1E0C80A78](v26);
  v202 = (char *)&v183 - v27;
  MEMORY[0x1E0C80A78](v28);
  v188 = (uint64_t)&v183 - v29;
  MEMORY[0x1E0C80A78](v30);
  v201 = (char *)&v183 - v31;
  MEMORY[0x1E0C80A78](v32);
  v200 = (char *)&v183 - v33;
  MEMORY[0x1E0C80A78](v34);
  v192 = (uint64_t)&v183 - v35;
  MEMORY[0x1E0C80A78](v36);
  v199 = (char *)&v183 - v37;
  MEMORY[0x1E0C80A78](v38);
  v198 = (char *)&v183 - v39;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v40);
  v197 = (char *)&v183 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v196 = (char *)&v183 - v43;
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)&v183 - v45;
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)&v183 - v48;
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)&v183 - v51;
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)&v183 - v54;
  MEMORY[0x1E0C80A78](v56);
  v58 = (char *)&v183 - v57;
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)&v183 - v60;
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)&v183 - v63;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  MEMORY[0x1E0C80A78](v65);
  MEMORY[0x1E0C80A78](v66);
  MEMORY[0x1E0C80A78](v67);
  MEMORY[0x1E0C80A78](v68);
  MEMORY[0x1E0C80A78](v69);
  v71 = (char *)&v183 - v70;
  MEMORY[0x1E0C80A78](v72);
  v78 = (char *)&v183 - v74;
  if (a4 < 3.0)
  {
    v79 = (uint64_t)v200;
    v80 = (uint64_t)v201;
    v81 = (uint64_t)v202;
    v82 = (uint64_t)v203;
    v198 = v52;
    v199 = v55;
    v83 = (uint64_t)v46;
    v84 = (uint64_t)v196;
    v85 = (uint64_t)v197;
    if (a4 < 2.0)
    {
      if (a4 < 1.0)
        return sub_1BA7F943C(v206, v208, 3.0);
      v103 = v76;
      v93 = v73;
      sub_1BA57B488(v208, v73, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
      v104 = sub_1BB86DA68();
      v105 = *(_QWORD *)(v104 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v93, 1, v104) == 1)
      {
        v97 = v205;
        v96 = v206;
        goto LABEL_49;
      }
      v208 = v93;
      sub_1BA57B488(v93, v103, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
      v125 = (*(uint64_t (**)(uint64_t, uint64_t))(v105 + 88))(v103, v104);
      if (v125 == *MEMORY[0x1E0DB6228])
      {
        v126 = v207;
        sub_1BA57B488(v207 + v204[7], v81, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v127 = type metadata accessor for FormatURL();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 48))(v81, 1, v127) == 1)
        {
          sub_1BA502AD0(v81, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v128 = sub_1BB86C67C();
          v129 = v83;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v83, 1, 1, v128);
        }
        else
        {
          v129 = v83;
          v155 = v209;
          sub_1BA7FAB40(v206, v83);
          sub_1BA4A2E80(v81, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v209 = v155;
          if (v155)
            goto LABEL_66;
          v128 = sub_1BB86C67C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v83, 0, 1, v128);
        }
        v156 = v126;
        v157 = v190;
        sub_1BA4C2DD8(v156, v190, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        sub_1BB86C67C();
        v158 = *(_QWORD *)(v128 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v129, 1, v128) == 1)
        {
          v159 = swift_retain();
          sub_1BA7FAB40(v159, v205);
          swift_release();
          sub_1BA4A2E80(v157, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          v160 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v161 = v129;
LABEL_76:
          sub_1BA502AD0(v161, (unint64_t *)&qword_1ED3D2E70, v160);
          v91 = v208;
          return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
        }
        sub_1BA4A2E80(v157, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v158 + 32))(v205, v129, v128);
LABEL_66:
        v91 = v208;
        return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
      }
      if (v125 == *MEMORY[0x1E0DB6238])
      {
        v149 = v207;
        v132 = v82;
        sub_1BA57B488(v207 + v204[13], v82, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v150 = type metadata accessor for FormatURL();
        v151 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v150 - 8) + 48))(v82, 1, v150);
        v152 = v209;
        if (v151 == 1)
        {
          sub_1BA502AD0(v132, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v111 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v84, 1, 1, v111);
          goto LABEL_69;
        }
        sub_1BA7FAB40(v206, v84);
        if (!v152)
        {
          sub_1BA4A2E80(v132, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v111 = sub_1BB86C67C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v84, 0, 1, v111);
LABEL_69:
          v172 = v149;
          v142 = v187;
          sub_1BA4C2DD8(v172, v187, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          sub_1BB86C67C();
          v143 = *(_QWORD *)(v111 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v84, 1, v111) == 1)
          {
LABEL_70:
            v173 = swift_retain();
            sub_1BA7FAB40(v173, v205);
            swift_release();
            sub_1BA4A2E80(v142, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
            v160 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            v161 = v84;
            goto LABEL_76;
          }
          goto LABEL_71;
        }
        goto LABEL_90;
      }
      v166 = v209;
      if (v125 == *MEMORY[0x1E0DB6240])
      {
        v167 = v207;
        v132 = v185;
        sub_1BA57B488(v207 + v204[16], v185, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v168 = type metadata accessor for FormatURL();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v168 - 8) + 48))(v132, 1, v168) == 1)
        {
          sub_1BA502AD0(v132, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v169 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 56))(v85, 1, 1, v169);
LABEL_93:
          v179 = v167;
          v180 = v184;
          sub_1BA4C2DD8(v179, v184, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          sub_1BB86C67C();
          v181 = *(_QWORD *)(v169 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v181 + 48))(v85, 1, v169) == 1)
          {
            v182 = swift_retain();
            sub_1BA7FAB40(v182, v205);
            swift_release();
            sub_1BA4A2E80(v180, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
            v160 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            v161 = v85;
            goto LABEL_76;
          }
          sub_1BA4A2E80(v180, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v181 + 32))(v205, v85, v169);
LABEL_79:
          v91 = v208;
          return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
        }
        sub_1BA7FAB40(v206, v85);
        if (!v166)
        {
          sub_1BA4A2E80(v132, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v169 = sub_1BB86C67C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 56))(v85, 0, 1, v169);
          goto LABEL_93;
        }
LABEL_90:
        v140 = v132;
        goto LABEL_91;
      }
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v103, v104);
      v171 = v205;
      v170 = v206;
LABEL_81:
      sub_1BA7FAB40(v170, v171);
      v91 = v208;
      return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    }
    v92 = v77;
    v93 = v75;
    sub_1BA57B488(v208, v75, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    v94 = sub_1BB86DA68();
    v95 = *(_QWORD *)(v94 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94) == 1)
    {
      v96 = v206;
      v97 = v205;
LABEL_49:
      sub_1BA7FAB40(v96, v97);
      v91 = v93;
      return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    }
    v208 = v93;
    sub_1BA57B488(v93, v92, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    v106 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 88))(v92, v94);
    if (v106 == *MEMORY[0x1E0DB6228])
    {
      v107 = v207;
      sub_1BA57B488(v207 + v204[8], v79, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v108 = type metadata accessor for FormatURL();
      v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 48))(v79, 1, v108);
      v110 = v209;
      if (v109 == 1)
      {
        sub_1BA502AD0(v79, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v111 = sub_1BB86C67C();
        v84 = (uint64_t)v199;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v199, 1, 1, v111);
      }
      else
      {
        v84 = (uint64_t)v199;
        sub_1BA7FAB40(v206, (uint64_t)v199);
        v140 = v79;
        if (v110)
        {
LABEL_91:
          sub_1BA4A2E80(v140, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v91 = v208;
          return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
        }
        sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v111 = sub_1BB86C67C();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v84, 0, 1, v111);
      }
      v141 = v107;
      v142 = v194;
      sub_1BA4C2DD8(v141, v194, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      sub_1BB86C67C();
      v143 = *(_QWORD *)(v111 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48))(v84, 1, v111) == 1)
        goto LABEL_70;
LABEL_71:
      sub_1BA4A2E80(v142, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 32))(v205, v84, v111);
      goto LABEL_79;
    }
    v130 = v209;
    if (v106 == *MEMORY[0x1E0DB6238])
    {
      v131 = v207;
      v132 = v80;
      sub_1BA57B488(v207 + v204[14], v80, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v133 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 48))(v80, 1, v133) == 1)
      {
        sub_1BA502AD0(v80, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v134 = sub_1BB86C67C();
        v49 = v198;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v198, 1, 1, v134);
      }
      else
      {
        v49 = v198;
        sub_1BA7FAB40(v206, (uint64_t)v198);
        if (v130)
          goto LABEL_90;
        sub_1BA4A2E80(v80, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v134 = sub_1BB86C67C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v49, 0, 1, v134);
      }
      v162 = v131;
      v163 = v191;
      sub_1BA4C2DD8(v162, v191, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      sub_1BB86C67C();
      v164 = *(_QWORD *)(v134 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48))(v49, 1, v134) == 1)
        goto LABEL_75;
    }
    else
    {
      if (v106 != *MEMORY[0x1E0DB6240])
      {
        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v92, v94);
        v170 = v206;
        v171 = v205;
        goto LABEL_81;
      }
      v153 = v207;
      v132 = v188;
      sub_1BA57B488(v207 + v204[17], v188, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v154 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 48))(v132, 1, v154) == 1)
      {
        sub_1BA502AD0(v132, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v134 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v49, 1, 1, v134);
      }
      else
      {
        sub_1BA7FAB40(v206, (uint64_t)v49);
        if (v130)
          goto LABEL_90;
        sub_1BA4A2E80(v132, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v134 = sub_1BB86C67C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v49, 0, 1, v134);
      }
      v174 = v153;
      v163 = v186;
      sub_1BA4C2DD8(v174, v186, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      sub_1BB86C67C();
      v164 = *(_QWORD *)(v134 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48))(v49, 1, v134) == 1)
      {
LABEL_75:
        v175 = swift_retain();
        sub_1BA7FAB40(v175, v205);
        swift_release();
        sub_1BA4A2E80(v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        v160 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        v161 = (uint64_t)v49;
        goto LABEL_76;
      }
    }
    sub_1BA4A2E80(v163, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    (*(void (**)(uint64_t, char *, uint64_t))(v164 + 32))(v205, v49, v134);
    goto LABEL_79;
  }
  v87 = (uint64_t)v198;
  v88 = (uint64_t)v199;
  sub_1BA57B488(v208, (uint64_t)&v183 - v74, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  v89 = sub_1BB86DA68();
  v90 = *(_QWORD *)(v89 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v78, 1, v89) != 1)
  {
    sub_1BA57B488((uint64_t)v78, (uint64_t)v71, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    v98 = (*(uint64_t (**)(char *, uint64_t))(v90 + 88))(v71, v89);
    if (v98 == *MEMORY[0x1E0DB6228])
    {
      v99 = v78;
      v100 = v207;
      sub_1BA57B488(v207 + v204[9], v87, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v101 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 48))(v87, 1, v101) == 1)
      {
        sub_1BA502AD0(v87, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v102 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v64, 1, 1, v102);
LABEL_22:
        v119 = v100;
        v120 = v195;
        sub_1BA4C2DD8(v119, v195, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        sub_1BB86C67C();
        v121 = *(_QWORD *)(v102 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v64, 1, v102) == 1)
        {
          v122 = swift_retain();
          sub_1BA7FAB40(v122, v205);
          swift_release();
          sub_1BA4A2E80(v120, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          v123 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v124 = (uint64_t)v64;
LABEL_85:
          sub_1BA502AD0(v124, (unint64_t *)&qword_1ED3D2E70, v123);
          goto LABEL_87;
        }
        sub_1BA4A2E80(v120, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        (*(void (**)(uint64_t, char *, uint64_t))(v121 + 32))(v205, v64, v102);
        goto LABEL_87;
      }
      v117 = v209;
      sub_1BA7FAB40(v206, (uint64_t)v64);
      v118 = v87;
      if (!v117)
      {
        sub_1BA4A2E80(v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v102 = sub_1BB86C67C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v64, 0, 1, v102);
        goto LABEL_22;
      }
LABEL_60:
      sub_1BA4A2E80(v118, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      goto LABEL_87;
    }
    if (v98 != *MEMORY[0x1E0DB6238])
    {
      v136 = v206;
      v135 = v207;
      if (v98 != *MEMORY[0x1E0DB6240])
      {
        v93 = (uint64_t)v78;
        (*(void (**)(char *, uint64_t))(v90 + 8))(v71, v89);
        v97 = v205;
        v96 = v136;
        goto LABEL_49;
      }
      v99 = v78;
      v137 = v192;
      sub_1BA57B488(v207 + v204[18], v192, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v138 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 48))(v137, 1, v138) == 1)
      {
        sub_1BA502AD0(v137, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v139 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 56))(v58, 1, 1, v139);
      }
      else
      {
        v165 = v209;
        sub_1BA7FAB40(v136, (uint64_t)v58);
        v118 = v137;
        if (v165)
          goto LABEL_60;
        sub_1BA4A2E80(v137, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v139 = sub_1BB86C67C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 56))(v58, 0, 1, v139);
      }
      v176 = v189;
      sub_1BA4C2DD8(v135, v189, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      sub_1BB86C67C();
      v177 = *(_QWORD *)(v139 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v58, 1, v139) != 1)
      {
        sub_1BA4A2E80(v176, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        (*(void (**)(uint64_t, char *, uint64_t))(v177 + 32))(v205, v58, v139);
        goto LABEL_87;
      }
      v178 = swift_retain();
      sub_1BA7FAB40(v178, v205);
      swift_release();
      sub_1BA4A2E80(v176, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      v123 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      v124 = (uint64_t)v58;
      goto LABEL_85;
    }
    v99 = v78;
    v112 = v207;
    v113 = v88;
    sub_1BA57B488(v207 + v204[15], v88, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v114 = type metadata accessor for FormatURL();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 48))(v88, 1, v114) == 1)
    {
      sub_1BA502AD0(v88, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v115 = sub_1BB86C67C();
      v116 = v61;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v61, 1, 1, v115);
    }
    else
    {
      v116 = v61;
      v144 = v209;
      sub_1BA7FAB40(v206, (uint64_t)v61);
      v118 = v113;
      if (v144)
        goto LABEL_60;
      sub_1BA4A2E80(v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v115 = sub_1BB86C67C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v61, 0, 1, v115);
    }
    v145 = v112;
    v146 = v193;
    sub_1BA4C2DD8(v145, v193, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    sub_1BB86C67C();
    v147 = *(_QWORD *)(v115 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48))(v116, 1, v115) == 1)
    {
      v148 = swift_retain();
      sub_1BA7FAB40(v148, v205);
      swift_release();
      sub_1BA4A2E80(v146, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      v123 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      v124 = (uint64_t)v116;
      goto LABEL_85;
    }
    sub_1BA4A2E80(v146, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    (*(void (**)(uint64_t, char *, uint64_t))(v147 + 32))(v205, v116, v115);
LABEL_87:
    v91 = (uint64_t)v99;
    return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  }
  sub_1BA7FAB40(v206, v205);
  v91 = (uint64_t)v78;
  return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
}

uint64_t sub_1BA7FAB40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v30 = a1;
  v3 = v2;
  v29 = a2;
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v11 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v3, (uint64_t)v16, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v19 = *((_QWORD *)v16 + 2);
      v20 = v30;
      v31 = *(_BYTE *)(v30 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
      sub_1BA4A111C();
      sub_1BB86C5BC();
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v7, v4);
      swift_bridgeObjectRetain();
      sub_1BA7F0B28(v20, v19, v29);
      swift_bridgeObjectRelease();
      v21(v10, v4);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v24 = *(_QWORD *)v16;
      v25 = *((_QWORD *)v16 + 1);
      v26 = *((_QWORD *)v16 + 2);
      v27 = v16[24];
      sub_1BB49AD3C(v30, v24, v25, v26, v27, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack, (uint64_t)sub_1BA711ECC, v29, (uint64_t)sub_1BA7E0DB4);
      return sub_1BA5A7EF8(v24, v25, v26, v27);
    }
  }
  else
  {
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    v23 = *(_QWORD *)&v13[*(int *)(v11 + 20)];
    swift_bridgeObjectRetain();
    sub_1BA7F0B28(v30, v23, v29);
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
  }
}

uint64_t FormatResource.imageURL(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  uint64_t (*v17)(_QWORD);
  double v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[5];
  uint64_t v25;
  uint64_t v26;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - v7;
  v9 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatResource(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_OWORD *)(a1 + 48);
  v24[2] = *(_OWORD *)(a1 + 32);
  v24[3] = v15;
  v24[4] = *(_OWORD *)(a1 + 64);
  v25 = *(_QWORD *)(a1 + 80);
  v16 = *(_OWORD *)(a1 + 16);
  v24[0] = *(_OWORD *)a1;
  v24[1] = v16;
  sub_1BA4C2DD8(v2, (uint64_t)v14, v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA5193C4((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    sub_1BA7FCD4C((uint64_t)v24);
    sub_1BB86DD80();
    sub_1BA7FCCC4((uint64_t)v24);
    v18 = *(double *)(v26 + 24);
    swift_release();
    v19 = sub_1BB86DA68();
    v20 = (void (*)(uint64_t))MEMORY[0x1E0DB6248];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
    sub_1BA7FB024((uint64_t)v24, (uint64_t)v8, a2, v18);
    sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3C3FF0, v20);
    result = sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    if (!v3)
    {
      v22 = sub_1BB86C67C();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 0, 1, v22);
    }
  }
  else
  {
    v23 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 1, 1, v23);
    return sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatResource);
  }
  return result;
}

uint64_t sub_1BA7FB024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t);
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t);
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  int *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;

  v210 = a2;
  v208 = a1;
  v207 = a3;
  v206 = (int *)type metadata accessor for FormatRemoteImage();
  MEMORY[0x1E0C80A78](v206);
  v186 = (uint64_t)&v185 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v189 = (uint64_t)&v185 - v7;
  MEMORY[0x1E0C80A78](v8);
  v192 = (uint64_t)&v185 - v9;
  MEMORY[0x1E0C80A78](v10);
  v188 = (uint64_t)&v185 - v11;
  MEMORY[0x1E0C80A78](v12);
  v193 = (uint64_t)&v185 - v13;
  MEMORY[0x1E0C80A78](v14);
  v196 = (uint64_t)&v185 - v15;
  MEMORY[0x1E0C80A78](v16);
  v191 = (uint64_t)&v185 - v17;
  MEMORY[0x1E0C80A78](v18);
  v195 = (uint64_t)&v185 - v19;
  MEMORY[0x1E0C80A78](v20);
  v197 = (uint64_t)&v185 - v21;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
  MEMORY[0x1E0C80A78](v22);
  v187 = (uint64_t)&v185 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v205 = (char *)&v185 - v25;
  MEMORY[0x1E0C80A78](v26);
  v204 = (char *)&v185 - v27;
  MEMORY[0x1E0C80A78](v28);
  v190 = (uint64_t)&v185 - v29;
  MEMORY[0x1E0C80A78](v30);
  v203 = (char *)&v185 - v31;
  MEMORY[0x1E0C80A78](v32);
  v202 = (char *)&v185 - v33;
  MEMORY[0x1E0C80A78](v34);
  v194 = (uint64_t)&v185 - v35;
  MEMORY[0x1E0C80A78](v36);
  v201 = (char *)&v185 - v37;
  MEMORY[0x1E0C80A78](v38);
  v200 = (char *)&v185 - v39;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v40);
  v199 = (char *)&v185 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v198 = (char *)&v185 - v43;
  MEMORY[0x1E0C80A78](v44);
  v46 = (char *)&v185 - v45;
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)&v185 - v48;
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)&v185 - v51;
  MEMORY[0x1E0C80A78](v53);
  v55 = (char *)&v185 - v54;
  MEMORY[0x1E0C80A78](v56);
  v58 = (char *)&v185 - v57;
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)&v185 - v60;
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)&v185 - v63;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  MEMORY[0x1E0C80A78](v65);
  MEMORY[0x1E0C80A78](v66);
  MEMORY[0x1E0C80A78](v67);
  MEMORY[0x1E0C80A78](v68);
  MEMORY[0x1E0C80A78](v69);
  v71 = (char *)&v185 - v70;
  MEMORY[0x1E0C80A78](v72);
  v78 = (char *)&v185 - v74;
  if (a4 < 3.0)
  {
    v79 = (uint64_t)v202;
    v80 = (uint64_t)v203;
    v81 = (uint64_t)v204;
    v82 = (uint64_t)v205;
    v200 = v52;
    v201 = v55;
    v83 = (uint64_t)v46;
    v84 = (uint64_t)v198;
    v85 = (uint64_t)v199;
    if (a4 < 2.0)
    {
      if (a4 < 1.0)
        return sub_1BA7FB024(v208, v210, 3.0);
      v104 = v76;
      v93 = v73;
      sub_1BA57B488(v210, v73, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
      v105 = sub_1BB86DA68();
      v106 = *(_QWORD *)(v105 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v106 + 48))(v93, 1, v105) == 1)
      {
        v97 = v207;
        v96 = v208;
        goto LABEL_49;
      }
      v210 = v93;
      sub_1BA57B488(v93, v104, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
      v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 88))(v104, v105);
      if (v128 == *MEMORY[0x1E0DB6228])
      {
        v129 = v209;
        sub_1BA57B488(v209 + v206[7], v81, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v130 = type metadata accessor for FormatURL();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 48))(v81, 1, v130) == 1)
        {
          sub_1BA502AD0(v81, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v131 = sub_1BB86C67C();
          v132 = v83;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v83, 1, 1, v131);
          v133 = v208;
        }
        else
        {
          v132 = v83;
          v133 = v208;
          v160 = v211;
          sub_1BA7FC74C(v208, v83);
          sub_1BA4A2E80(v81, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v211 = v160;
          if (v160)
            goto LABEL_66;
          v131 = sub_1BB86C67C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v83, 0, 1, v131);
        }
        v161 = v129;
        v162 = v192;
        sub_1BA4C2DD8(v161, v192, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        sub_1BB86C67C();
        v163 = *(_QWORD *)(v131 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v163 + 48))(v132, 1, v131) == 1)
        {
          sub_1BA7FCD4C(v133);
          sub_1BA7FC74C(v133, v207);
          sub_1BA7FCCC4(v133);
          sub_1BA4A2E80(v162, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          v164 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v165 = v132;
LABEL_77:
          sub_1BA502AD0(v165, (unint64_t *)&qword_1ED3D2E70, v164);
          v91 = v210;
          return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
        }
        sub_1BA4A2E80(v162, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v163 + 32))(v207, v132, v131);
LABEL_66:
        v91 = v210;
        return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
      }
      if (v128 == *MEMORY[0x1E0DB6238])
      {
        v153 = v209;
        v136 = v82;
        sub_1BA57B488(v209 + v206[13], v82, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v154 = type metadata accessor for FormatURL();
        v155 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v154 - 8) + 48))(v82, 1, v154);
        v156 = v211;
        if (v155 == 1)
        {
          sub_1BA502AD0(v136, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v112 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v84, 1, 1, v112);
          v113 = v208;
          goto LABEL_69;
        }
        v113 = v208;
        sub_1BA7FC74C(v208, v84);
        if (!v156)
        {
          sub_1BA4A2E80(v136, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v112 = sub_1BB86C67C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v84, 0, 1, v112);
LABEL_69:
          v178 = v153;
          v147 = v189;
          sub_1BA4C2DD8(v178, v189, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          sub_1BB86C67C();
          v148 = *(_QWORD *)(v112 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v84, 1, v112) == 1)
          {
LABEL_70:
            sub_1BA7FCD4C(v113);
            sub_1BA7FC74C(v113, v207);
            sub_1BA7FCCC4(v113);
            sub_1BA4A2E80(v147, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
            v164 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            v165 = v84;
            goto LABEL_77;
          }
          goto LABEL_71;
        }
        goto LABEL_91;
      }
      v171 = v211;
      if (v128 == *MEMORY[0x1E0DB6240])
      {
        v172 = v209;
        v136 = v187;
        sub_1BA57B488(v209 + v206[16], v187, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v173 = type metadata accessor for FormatURL();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v173 - 8) + 48))(v136, 1, v173) == 1)
        {
          sub_1BA502AD0(v136, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
          v174 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 56))(v85, 1, 1, v174);
          v175 = v208;
LABEL_94:
          v182 = v172;
          v183 = v186;
          sub_1BA4C2DD8(v182, v186, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          sub_1BB86C67C();
          v184 = *(_QWORD *)(v174 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v184 + 48))(v85, 1, v174) == 1)
          {
            sub_1BA7FCD4C(v175);
            sub_1BA7FC74C(v175, v207);
            sub_1BA7FCCC4(v175);
            sub_1BA4A2E80(v183, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
            v164 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
            v165 = v85;
            goto LABEL_77;
          }
          sub_1BA4A2E80(v183, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v184 + 32))(v207, v85, v174);
LABEL_80:
          v91 = v210;
          return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
        }
        v175 = v208;
        sub_1BA7FC74C(v208, v85);
        if (!v171)
        {
          sub_1BA4A2E80(v136, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v174 = sub_1BB86C67C();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 56))(v85, 0, 1, v174);
          goto LABEL_94;
        }
LABEL_91:
        v145 = v136;
        goto LABEL_92;
      }
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
      v177 = v207;
      v176 = v208;
LABEL_82:
      sub_1BA7FC74C(v176, v177);
      v91 = v210;
      return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    }
    v92 = v77;
    v93 = v75;
    sub_1BA57B488(v210, v75, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    v94 = sub_1BB86DA68();
    v95 = *(_QWORD *)(v94 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94) == 1)
    {
      v96 = v208;
      v97 = v207;
LABEL_49:
      sub_1BA7FC74C(v96, v97);
      v91 = v93;
      return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    }
    v210 = v93;
    sub_1BA57B488(v93, v92, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    v107 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 88))(v92, v94);
    if (v107 == *MEMORY[0x1E0DB6228])
    {
      v108 = v209;
      sub_1BA57B488(v209 + v206[8], v79, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v109 = type metadata accessor for FormatURL();
      v110 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 48))(v79, 1, v109);
      v111 = v211;
      if (v110 == 1)
      {
        sub_1BA502AD0(v79, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v112 = sub_1BB86C67C();
        v84 = (uint64_t)v201;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v201, 1, 1, v112);
        v113 = v208;
      }
      else
      {
        v84 = (uint64_t)v201;
        v113 = v208;
        sub_1BA7FC74C(v208, (uint64_t)v201);
        v145 = v79;
        if (v111)
        {
LABEL_92:
          sub_1BA4A2E80(v145, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
          v91 = v210;
          return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
        }
        sub_1BA4A2E80(v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v112 = sub_1BB86C67C();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v84, 0, 1, v112);
      }
      v146 = v108;
      v147 = v196;
      sub_1BA4C2DD8(v146, v196, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      sub_1BB86C67C();
      v148 = *(_QWORD *)(v112 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v84, 1, v112) == 1)
        goto LABEL_70;
LABEL_71:
      sub_1BA4A2E80(v147, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32))(v207, v84, v112);
      goto LABEL_80;
    }
    v134 = v211;
    if (v107 == *MEMORY[0x1E0DB6238])
    {
      v135 = v209;
      v136 = v80;
      sub_1BA57B488(v209 + v206[14], v80, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v137 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 48))(v80, 1, v137) == 1)
      {
        sub_1BA502AD0(v80, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v138 = sub_1BB86C67C();
        v49 = v200;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v200, 1, 1, v138);
        v139 = v208;
      }
      else
      {
        v49 = v200;
        v139 = v208;
        sub_1BA7FC74C(v208, (uint64_t)v200);
        if (v134)
          goto LABEL_91;
        sub_1BA4A2E80(v136, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v138 = sub_1BB86C67C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v49, 0, 1, v138);
      }
      v166 = v135;
      v167 = v193;
      sub_1BA4C2DD8(v166, v193, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      sub_1BB86C67C();
      v168 = *(_QWORD *)(v138 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v49, 1, v138) == 1)
      {
        sub_1BA7FCD4C(v139);
        sub_1BA7FC74C(v139, v207);
        v169 = v139;
LABEL_76:
        sub_1BA7FCCC4(v169);
        sub_1BA4A2E80(v167, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        v164 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        v165 = (uint64_t)v49;
        goto LABEL_77;
      }
    }
    else
    {
      if (v107 != *MEMORY[0x1E0DB6240])
      {
        (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v92, v94);
        v176 = v208;
        v177 = v207;
        goto LABEL_82;
      }
      v157 = v209;
      v136 = v190;
      sub_1BA57B488(v209 + v206[17], v190, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v158 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 48))(v136, 1, v158) == 1)
      {
        sub_1BA502AD0(v136, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v138 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v49, 1, 1, v138);
        v159 = v208;
      }
      else
      {
        v159 = v208;
        sub_1BA7FC74C(v208, (uint64_t)v49);
        if (v134)
          goto LABEL_91;
        sub_1BA4A2E80(v136, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v138 = sub_1BB86C67C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v49, 0, 1, v138);
      }
      v179 = v157;
      v167 = v188;
      sub_1BA4C2DD8(v179, v188, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      sub_1BB86C67C();
      v168 = *(_QWORD *)(v138 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v49, 1, v138) == 1)
      {
        sub_1BA7FCD4C(v159);
        sub_1BA7FC74C(v159, v207);
        v169 = v159;
        goto LABEL_76;
      }
    }
    sub_1BA4A2E80(v167, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    (*(void (**)(uint64_t, char *, uint64_t))(v168 + 32))(v207, v49, v138);
    goto LABEL_80;
  }
  v87 = (uint64_t)v200;
  v88 = (uint64_t)v201;
  sub_1BA57B488(v210, (uint64_t)&v185 - v74, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  v89 = sub_1BB86DA68();
  v90 = *(_QWORD *)(v89 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v78, 1, v89) != 1)
  {
    sub_1BA57B488((uint64_t)v78, (uint64_t)v71, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
    v98 = (*(uint64_t (**)(char *, uint64_t))(v90 + 88))(v71, v89);
    if (v98 == *MEMORY[0x1E0DB6228])
    {
      v99 = v78;
      v100 = v209;
      sub_1BA57B488(v209 + v206[9], v87, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v101 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 48))(v87, 1, v101) == 1)
      {
        sub_1BA502AD0(v87, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v102 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v64, 1, 1, v102);
        v103 = v208;
LABEL_22:
        v123 = v100;
        v124 = v197;
        sub_1BA4C2DD8(v123, v197, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        sub_1BB86C67C();
        v125 = *(_QWORD *)(v102 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v64, 1, v102) == 1)
        {
          sub_1BA7FCD4C(v103);
          sub_1BA7FC74C(v103, v207);
          sub_1BA7FCCC4(v103);
          sub_1BA4A2E80(v124, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
          v126 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
          v127 = (uint64_t)v64;
LABEL_86:
          sub_1BA502AD0(v127, (unint64_t *)&qword_1ED3D2E70, v126);
          goto LABEL_88;
        }
        sub_1BA4A2E80(v124, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        (*(void (**)(uint64_t, char *, uint64_t))(v125 + 32))(v207, v64, v102);
        goto LABEL_88;
      }
      v103 = v208;
      v121 = v211;
      sub_1BA7FC74C(v208, (uint64_t)v64);
      v122 = v87;
      if (!v121)
      {
        sub_1BA4A2E80(v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v102 = sub_1BB86C67C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v64, 0, 1, v102);
        goto LABEL_22;
      }
LABEL_60:
      sub_1BA4A2E80(v122, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      goto LABEL_88;
    }
    if (v98 != *MEMORY[0x1E0DB6238])
    {
      v141 = v208;
      v140 = v209;
      if (v98 != *MEMORY[0x1E0DB6240])
      {
        v93 = (uint64_t)v78;
        (*(void (**)(char *, uint64_t))(v90 + 8))(v71, v89);
        v97 = v207;
        v96 = v141;
        goto LABEL_49;
      }
      v99 = v78;
      v142 = v194;
      sub_1BA57B488(v209 + v206[18], v194, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v143 = type metadata accessor for FormatURL();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 48))(v142, 1, v143) == 1)
      {
        sub_1BA502AD0(v142, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
        v144 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v58, 1, 1, v144);
      }
      else
      {
        v170 = v211;
        sub_1BA7FC74C(v141, (uint64_t)v58);
        v122 = v142;
        if (v170)
          goto LABEL_60;
        sub_1BA4A2E80(v142, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
        v144 = sub_1BB86C67C();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 56))(v58, 0, 1, v144);
      }
      v180 = v191;
      sub_1BA4C2DD8(v140, v191, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      sub_1BB86C67C();
      v181 = *(_QWORD *)(v144 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v181 + 48))(v58, 1, v144) != 1)
      {
        sub_1BA4A2E80(v180, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
        (*(void (**)(uint64_t, char *, uint64_t))(v181 + 32))(v207, v58, v144);
        goto LABEL_88;
      }
      sub_1BA7FCD4C(v141);
      sub_1BA7FC74C(v141, v207);
      sub_1BA7FCCC4(v141);
      sub_1BA4A2E80(v180, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      v126 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      v127 = (uint64_t)v58;
      goto LABEL_86;
    }
    v99 = v78;
    v114 = v209;
    v115 = v88;
    sub_1BA57B488(v209 + v206[15], v88, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
    v116 = type metadata accessor for FormatURL();
    v117 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 48))(v88, 1, v116);
    v118 = v208;
    if (v117 == 1)
    {
      sub_1BA502AD0(v88, (unint64_t *)&qword_1ED3B9070, (void (*)(uint64_t))type metadata accessor for FormatURL);
      v119 = sub_1BB86C67C();
      v120 = v61;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v61, 1, 1, v119);
    }
    else
    {
      v120 = v61;
      v149 = v211;
      sub_1BA7FC74C(v208, (uint64_t)v61);
      v122 = v115;
      if (v149)
        goto LABEL_60;
      sub_1BA4A2E80(v115, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      v119 = sub_1BB86C67C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v61, 0, 1, v119);
    }
    v150 = v114;
    v151 = v195;
    sub_1BA4C2DD8(v150, v195, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    sub_1BB86C67C();
    v152 = *(_QWORD *)(v119 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v120, 1, v119) == 1)
    {
      sub_1BA7FCD4C(v118);
      sub_1BA7FC74C(v118, v207);
      sub_1BA7FCCC4(v118);
      sub_1BA4A2E80(v151, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
      v126 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      v127 = (uint64_t)v120;
      goto LABEL_86;
    }
    sub_1BA4A2E80(v151, (uint64_t (*)(_QWORD))type metadata accessor for FormatRemoteImage);
    (*(void (**)(uint64_t, char *, uint64_t))(v152 + 32))(v207, v120, v119);
LABEL_88:
    v91 = (uint64_t)v99;
    return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
  }
  sub_1BA7FC74C(v208, v207);
  v91 = (uint64_t)v78;
  return sub_1BA502AD0(v91, (unint64_t *)&qword_1ED3C3FF0, (void (*)(uint64_t))MEMORY[0x1E0DB6248]);
}

uint64_t sub_1BA7FC74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v30 = a1;
  v3 = v2;
  v29 = a2;
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  v11 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v3, (uint64_t)v16, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v19 = *((_QWORD *)v16 + 2);
      v20 = v30;
      v31 = *(_BYTE *)(v30 + 9);
      sub_1BA4A111C();
      sub_1BB86C5BC();
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v7, v4);
      swift_bridgeObjectRetain();
      sub_1BA4A1DAC(v20, v19, v29);
      swift_bridgeObjectRelease();
      v21(v10, v4);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v24 = *(_QWORD *)v16;
      v25 = *((_QWORD *)v16 + 1);
      v26 = *((_QWORD *)v16 + 2);
      v27 = v16[24];
      sub_1BA7FC9A8(v30, v24, v25, v26, v27);
      return sub_1BA5A7EF8(v24, v25, v26, v27);
    }
  }
  else
  {
    sub_1BA5193C4((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
    v23 = *(_QWORD *)&v13[*(int *)(v11 + 20)];
    swift_bridgeObjectRetain();
    sub_1BA4A1DAC(v30, v23, v29);
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatAbsoluteURL);
  }
}

void sub_1BA7FC9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v6);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2500, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1E0C80A78](v7);
  v8 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v8);
  __asm { BR              X10 }
}

uint64_t sub_1BA7FCAAC()
{
  _QWORD *v0;

  sub_1BA689E84();
  swift_allocError();
  *v0 = 0xD00000000000006ELL;
  v0[1] = 0x80000001BB9648B0;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BA7FCCC4(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA70AB94(v2, v3);
  swift_release();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1BA7FCD4C(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BA70A884(v2, v3);
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void sub_1BA7FCDD8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1BB49AD3C(a1, a2, a3, a4, a5, (uint64_t)&OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options, (uint64_t)&OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack, (uint64_t)sub_1BA711554, a6, (uint64_t)sub_1BA7E0DB4);
}

uint64_t destroy for FormatRemoteFont(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FormatURL();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return sub_1BA5A7EF8(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24));
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v6 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    type metadata accessor for FormatAbsoluteURL();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatRemoteFont(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  type metadata accessor for FormatURL();
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v12 = *(_QWORD *)v9;
    v13 = *((_QWORD *)v9 + 1);
    v14 = *((_QWORD *)v9 + 2);
    v15 = v9[24];
    sub_1BA690C00(v12, v13, v14, v15);
    *(_QWORD *)v8 = v12;
    *((_QWORD *)v8 + 1) = v13;
    *((_QWORD *)v8 + 2) = v14;
    v8[24] = v15;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *((_QWORD *)v9 + 1);
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *((_QWORD *)v8 + 1) = v11;
      *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v8, v9, v16);
      v17 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v8[*(int *)(v17 + 20)] = *(_QWORD *)&v9[*(int *)(v17 + 20)];
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v18 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_WORD *)v19 + 4) = *((_WORD *)v20 + 4);
  return a1;
}

uint64_t FormatOptionEnum.init(type:value:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;

  v4 = *a1;
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[6];
  v8 = a1[8];
  v9 = a1[9];
  v10 = a2[1];
  v41 = *((unsigned __int8 *)a1 + 80);
  v40 = a1[7];
  if (v41 > 0x3F)
  {
    v39 = a1[8];
    v33 = a1[2];
    v20 = a1[5];
    v21 = a1[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    *(_QWORD *)v22 = v4;
    *(_QWORD *)(v22 + 8) = v21;
    *(_QWORD *)(v22 + 16) = v33;
    *(_QWORD *)(v22 + 24) = v6;
    *(_QWORD *)(v22 + 32) = v5;
    *(_QWORD *)(v22 + 40) = v20;
    *(_QWORD *)(v22 + 48) = v7;
    *(_QWORD *)(v22 + 56) = v40;
    *(_QWORD *)(v22 + 64) = v39;
    *(_QWORD *)(v22 + 72) = v9;
    *(_BYTE *)(v22 + 80) = v41;
    *(_QWORD *)(v22 + 88) = 0xD000000000000025;
    *(_QWORD *)(v22 + 96) = 0x80000001BB990470;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  else
  {
    v35 = a1[1];
    v28 = *a1;
    v11 = *a2;
    v12 = *(_QWORD *)(v5 + 16);
    v36 = a2[2];
    v37 = a1[5];
    v31 = v3;
    v32 = *a2;
    if (v12)
    {
      v30 = a2[1];
      v29 = a1[6];
      v38 = a1[8];
      sub_1BA709DE8(v5, a1[5], v7, a1[7], v8, v9, v41);
      v42 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BA7447E8(0, v12, 0);
      v13 = v42;
      v14 = (uint64_t *)(v5 + 40);
      do
      {
        v15 = *(v14 - 1);
        v16 = *v14;
        v17 = *(_QWORD *)(v42 + 16);
        v18 = *(_QWORD *)(v42 + 24);
        swift_bridgeObjectRetain();
        if (v17 >= v18 >> 1)
          sub_1BA7447E8(v18 > 1, v17 + 1, 1);
        v14 += 6;
        *(_QWORD *)(v42 + 16) = v17 + 1;
        v19 = v42 + 16 * v17;
        *(_QWORD *)(v19 + 32) = v15;
        *(_QWORD *)(v19 + 40) = v16;
        --v12;
      }
      while (v12);
      v8 = v38;
      v7 = v29;
      sub_1BA6C0C20(v5, v37, v29, v40, v38, v9, v41);
      v10 = v30;
      v11 = v32;
    }
    else
    {
      swift_bridgeObjectRetain();
      v13 = MEMORY[0x1E0DEE9D8];
    }
    v24 = sub_1BA6E43EC(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v25 = sub_1BA761FE4(v11, v10, v24);
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(v5, v37, v7, v40, v8, v9, v41);
      sub_1BA709DE8(v5, v37, v7, v40, v8, v9, v41);
      swift_bridgeObjectRetain();
      v34 = sub_1BB52BA70(v36, v24, v5);
      sub_1BA6C0C20(v5, v37, v7, v40, v8, v9, v41);
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(v5, v37, v7, v40, v8, v9, v41);
      swift_bridgeObjectRelease();
      if (v31)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      else
      {
        result = swift_bridgeObjectRelease();
        *a3 = v28;
        a3[1] = v35;
        a3[2] = v32;
        a3[3] = v10;
        a3[4] = v34;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(v5, v37, v7, v40, v8, v9, v41);
      type metadata accessor for FormatLayoutError();
      sub_1BA689E84();
      swift_allocError();
      *v26 = v11;
      v26[1] = v10;
      v26[2] = v5;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[3];
  v48 = a1[4];
  v8 = a1[5];
  v7 = a1[6];
  v10 = a1[7];
  v9 = a1[8];
  v11 = a1[9];
  v47 = a2[1];
  v12 = a2[3];
  v46 = *((unsigned __int8 *)a1 + 80);
  if (v46 > 0x3F)
  {
    v44 = a1[9];
    v17 = a1[2];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    *(_QWORD *)v18 = v5;
    *(_QWORD *)(v18 + 8) = v4;
    *(_QWORD *)(v18 + 16) = v17;
    *(_QWORD *)(v18 + 24) = v6;
    *(_QWORD *)(v18 + 32) = v48;
    *(_QWORD *)(v18 + 40) = v8;
    *(_QWORD *)(v18 + 48) = v7;
    *(_QWORD *)(v18 + 56) = v10;
    *(_QWORD *)(v18 + 64) = v9;
    *(_QWORD *)(v18 + 72) = v44;
    *(_BYTE *)(v18 + 80) = v46;
    *(_QWORD *)(v18 + 88) = 0xD000000000000025;
    *(_QWORD *)(v18 + 96) = 0x80000001BB990470;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v42 = a1[8];
  v43 = a1[5];
  v39 = a2[4];
  v40 = a1[7];
  v13 = *a2;
  v37 = v3;
  v38 = a2[2];
  if (v5 == *a2 && v4 == v47)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v9;
    v15 = v7;
    v16 = v40;
    sub_1BA6C0C20(v48, v43, v7, v40, v42, v11, v46);
  }
  else
  {
    v20 = sub_1BB874398();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v9;
    v15 = v7;
    v16 = v40;
    sub_1BA6C0C20(v48, v43, v7, v40, v42, v11, v46);
    if ((v20 & 1) == 0)
    {
      type metadata accessor for FormatLayoutError();
      sub_1BA689E84();
      swift_allocError();
      *v33 = v13;
      v33[1] = v47;
      v33[2] = v48;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  v34 = v13;
  v21 = *(_QWORD *)(v48 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  if (v21)
  {
    v45 = v11;
    v35 = v12;
    v49 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v21, 0);
    v22 = v49;
    v23 = (uint64_t *)(v48 + 40);
    v24 = v38;
    do
    {
      v25 = *(v23 - 1);
      v26 = *v23;
      v28 = *(_QWORD *)(v49 + 16);
      v27 = *(_QWORD *)(v49 + 24);
      swift_bridgeObjectRetain();
      if (v28 >= v27 >> 1)
        sub_1BA7447E8(v27 > 1, v28 + 1, 1);
      v23 += 6;
      *(_QWORD *)(v49 + 16) = v28 + 1;
      v29 = v49 + 16 * v28;
      *(_QWORD *)(v29 + 32) = v25;
      *(_QWORD *)(v29 + 40) = v26;
      --v21;
    }
    while (v21);
    v14 = v42;
    v16 = v40;
    v11 = v45;
    sub_1BA6C0C20(v48, v43, v15, v40, v42, v45, v46);
    v12 = v35;
  }
  else
  {
    v24 = v38;
  }
  v30 = sub_1BA6E43EC(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v31 = sub_1BA761FE4(v24, v12, v30);
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BA709DE8(v48, v43, v15, v16, v14, v11, v46);
    swift_bridgeObjectRetain();
    v41 = sub_1BB52BA70(v39, v30, v48);
    sub_1BA6C0C20(v48, v43, v15, v16, v14, v11, v46);
    swift_bridgeObjectRelease();
    sub_1BA6C0C20(v48, v43, v15, v16, v14, v11, v46);
    swift_bridgeObjectRelease();
    if (v37)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      result = swift_bridgeObjectRelease();
      *a3 = v34;
      a3[1] = v47;
      a3[2] = v38;
      a3[3] = v12;
      a3[4] = v41;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    *v32 = v24;
    v32[1] = v12;
    v32[2] = v48;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BA7FD438(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _OWORD v22[5];
  uint64_t v23;

  v4 = v2;
  v7 = *(_OWORD *)(a2 + 48);
  v22[2] = *(_OWORD *)(a2 + 32);
  v22[3] = v7;
  v22[4] = *(_OWORD *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 80);
  v8 = *(_OWORD *)(a2 + 16);
  v22[0] = *(_OWORD *)a2;
  v22[1] = v8;
  sub_1BA6FA63C();
  if (!v3)
  {
    swift_beginAccess();
    v9 = v2[9];
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (i = 0; i != v10; ++i)
      {
        v12 = *(_QWORD *)(v9 + 8 * i + 32);
        sub_1BA7196DC(v12);
        sub_1BA6FA7EC();
        sub_1BA719340(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[10])
      sub_1BA7FD6E4(a1, a2);
    v13 = v2[11];
    if (v13)
    {
      swift_beginAccess();
      v14 = *(_QWORD *)(v13 + 72);
      if (v14)
      {
        swift_bridgeObjectRetain();
        sub_1BA7C5A8C(a1, (uint64_t)v22, v14);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      v15 = *(_QWORD *)(v13 + 88);
      v16 = *(_QWORD *)(v15 + 16);
      if (v16)
      {
        swift_bridgeObjectRetain_n();
        v17 = (uint64_t *)(v15 + 72);
        do
        {
          v18 = *v17;
          if (*v17)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA7C5A8C(a1, (uint64_t)v22, v18);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v17 += 7;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease_n();
      }
    }
    swift_beginAccess();
    v19 = v4[13];
    if (v19 >> 62 == 1)
    {
      v20 = *(_QWORD *)(v19 + 16);
      v21 = *(_QWORD *)(v19 + 24);
      sub_1BA67D3F4(v20);
      swift_bridgeObjectRetain();
      sub_1BB5742EC(a1, (uint64_t)v22, v20, v21);
      sub_1BA6EEDB4(v20);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BA7FD6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21[5];
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v5 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_OWORD *)(a2 + 48);
  v21[2] = *(_OWORD *)(a2 + 32);
  v21[3] = v9;
  v21[4] = *(_OWORD *)(a2 + 64);
  v22 = *(_QWORD *)(a2 + 80);
  v10 = *(_OWORD *)(a2 + 16);
  v21[0] = *(_OWORD *)a2;
  v21[1] = v10;
  v11 = *(_QWORD *)(v2 + 56);
  if (v11 && (v12 = *(_QWORD *)(v11 + 16)) != 0)
  {
    v18 = v2;
    v19 = v11;
    v13 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v14 = *(_QWORD *)(v6 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BA4C2DD8(v13, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v20 = *((_QWORD *)v8 + 2);
      swift_retain();
      sub_1BA711C44();
      if (v3)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v13 += v14;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        v2 = v18;
        goto LABEL_7;
      }
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  }
  else
  {
LABEL_7:
    swift_beginAccess();
    v15 = *(_QWORD *)(v2 + 64);
    swift_bridgeObjectRetain();
    sub_1BA7FD884(v23, v21, v15);
  }
  return swift_bridgeObjectRelease();
}

void sub_1BA7FD884(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v4 = v3;
  v28 = a1;
  v7 = type metadata accessor for FormatOption();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a3 + 16);
  if (v11)
  {
    v12 = a3 + 32;
    v24 = a3;
    swift_bridgeObjectRetain();
    v13 = 0;
    v22 = v11;
    v23 = v8;
    v21 = a3 + 32;
    while (1)
    {
      v14 = v12 + 32 * v13;
      v15 = *(_QWORD *)(v14 + 24);
      if (v15)
      {
        v16 = *(_QWORD *)(v15 + 16);
        if (v16)
          break;
      }
LABEL_3:
      if (++v13 == v11)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    v25 = v13;
    v17 = v15 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v26 = *(_QWORD *)(v14 + 8);
    swift_bridgeObjectRetain();
    v27 = v15;
    swift_bridgeObjectRetain_n();
    v18 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_1BA4C2DD8(v17, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v35 = *((_QWORD *)v10 + 2);
      v19 = a2[3];
      v31 = a2[2];
      v32 = v19;
      v33 = a2[4];
      v34 = *((_QWORD *)a2 + 10);
      v20 = a2[1];
      v29 = *a2;
      v30 = v20;
      swift_retain();
      sub_1BA711C44();
      if (v4)
        break;
      swift_release();
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v17 += v18;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v11 = v22;
        v8 = v23;
        v12 = v21;
        v13 = v25;
        goto LABEL_3;
      }
    }
    swift_release();
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1BA7FDA78@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA6EDCD4(&qword_1ED3C6D78, (uint64_t)qword_1ED476C68, a1);
}

uint64_t sub_1BA7FDA94@<X0>(uint64_t a1@<X8>)
{
  return sub_1BA6EDCD4(&qword_1ED3C6D20, (uint64_t)qword_1ED476B78, a1);
}

uint64_t type metadata accessor for FormatEquation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatEquation);
}

uint64_t sub_1BA7FDABC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v25 = a1[3];
  v8 = a1[5];
  v29 = a1[6];
  v30 = a1[7];
  v31 = a1[4];
  v32 = a1[8];
  v33 = a1[9];
  v9 = (int *)type metadata accessor for FormatContent.Resolved();
  v10 = v9[5];
  v11 = v3 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BB86C8B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v11, v13);
  v26 = *(_QWORD *)(v3 + v9[11]);
  v27 = *(void **)(v3 + v9[12]);
  v28 = *(_QWORD *)(v3 + v9[13]);
  sub_1BA4C2DD8(v3 + v9[14], (uint64_t)a2 + v9[14], (uint64_t (*)(_QWORD))sub_1BA6DB154);
  v22 = *(void **)(v3 + v9[15]);
  v24 = *(_BYTE *)(v3 + v9[16]);
  v23 = *(_QWORD *)(v3 + v9[17]);
  v14 = *(_QWORD *)(v3 + v9[6]);
  v21 = *(_QWORD *)(v3 + v9[7]);
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3CFBB8, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v15 + 32) = v5;
  *(_QWORD *)(v15 + 40) = v6;
  *(_QWORD *)(v15 + 48) = v7;
  *(_QWORD *)(v15 + 56) = v25;
  *(_QWORD *)(v15 + 64) = v31;
  *(_QWORD *)(v15 + 72) = v8;
  *(_QWORD *)(v15 + 80) = v29;
  *(_QWORD *)(v15 + 88) = v30;
  *(_QWORD *)(v15 + 96) = v32;
  *(_QWORD *)(v15 + 104) = v33;
  v16 = *(_QWORD *)(v3 + v9[9]);
  v17 = *(_QWORD *)(v3 + v9[10]);
  sub_1BA4C2DD8(v3 + v9[18], (uint64_t)a2 + v9[18], (uint64_t (*)(_QWORD))sub_1BA6D940C);
  *a2 = v5;
  a2[1] = v6;
  *(_QWORD *)((char *)a2 + v9[6]) = v14;
  *(_QWORD *)((char *)a2 + v9[7]) = v21;
  *(_QWORD *)((char *)a2 + v9[8]) = v15;
  *(_QWORD *)((char *)a2 + v9[9]) = v16;
  *(_QWORD *)((char *)a2 + v9[11]) = v26;
  *(_QWORD *)((char *)a2 + v9[12]) = v27;
  *(_QWORD *)((char *)a2 + v9[13]) = v28;
  *(_QWORD *)((char *)a2 + v9[15]) = v22;
  *((_BYTE *)a2 + v9[16]) = v24;
  *(_QWORD *)((char *)a2 + v9[17]) = v23;
  *(_QWORD *)((char *)a2 + v9[10]) = v17;
  v18 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v19 = v27;
  return swift_unknownObjectRetain();
}

unint64_t sub_1BA7FDD54()
{
  unint64_t result;

  result = qword_1ED3B3318;
  if (!qword_1ED3B3318)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRoute, &type metadata for FormatRoute);
    atomic_store(result, (unint64_t *)&qword_1ED3B3318);
  }
  return result;
}

unint64_t sub_1BA7FDD98()
{
  unint64_t result;

  result = qword_1ED3C6630;
  if (!qword_1ED3C6630)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColor, &type metadata for FormatColor);
    atomic_store(result, (unint64_t *)&qword_1ED3C6630);
  }
  return result;
}

unint64_t sub_1BA7FDDDC()
{
  unint64_t result;

  result = qword_1ED39B018;
  if (!qword_1ED39B018)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenu, &type metadata for FormatMenu);
    atomic_store(result, (unint64_t *)&qword_1ED39B018);
  }
  return result;
}

uint64_t type metadata accessor for CachedText(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CachedText);
}

void sub_1BA7FDE2C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3B06E8)
  {
    sub_1BB86D8B8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3B06E8);
  }
}

void sub_1BA7FDE94()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C44E8)
  {
    sub_1BB86C67C();
    sub_1BA82A268();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C44E8);
  }
}

uint64_t sub_1BA7FDF04(uint64_t a1, unsigned __int16 a2)
{
  _QWORD v5[5];
  char v6;
  uint64_t v7;

  v6 = a2 & 1;
  v5[3] = type metadata accessor for FormatNodeContext();
  v5[4] = &off_1E72F9288;
  v5[0] = a1;
  swift_retain();
  sub_1BA7FDFA8(v5, &v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  swift_bridgeObjectRelease();
  return HIBYTE(a2) & 1;
}

_QWORD *sub_1BA7FDFA8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *(*v11)(_OWORD *__return_ptr, ValueMetadata *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v12;
  _QWORD *result;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[2];
  uint64_t v47;
  unint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[2];
  _OWORD v57[7];
  _OWORD v58[3];

  v38 = a2;
  v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  if ((v8 & 1) != 0)
  {
    v11 = *(_QWORD *(**)(_OWORD *__return_ptr, ValueMetadata *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v10 + 32);
    v12 = sub_1BA6B2E68();
    result = v11(v57, &type metadata for FeedIssue, &type metadata for FeedIssue, v12, v9, v10);
    if (v3)
      return result;
    v55 = v57[6];
    v56[0] = v58[0];
    *(_OWORD *)((char *)v56 + 9) = *(_OWORD *)((char *)v58 + 9);
    v49 = v57[0];
    v50 = v57[1];
    v51 = v57[2];
    v52 = v57[3];
    v53 = v57[4];
    v54 = v57[5];
    v14 = *(void **)&v57[0];
    v15 = objc_msgSend(*(id *)&v57[0], sel_layeredCoverJSON);
    if (v15)
    {
      v16 = v15;
      v17 = sub_1BB8729A0();
      v19 = v18;

      objc_msgSend(v14, sel_layeredCoverAspectRatio);
      v21 = v20;
      result = (_QWORD *)sub_1BA8D1FE4((uint64_t)&v49);
      v22 = v38;
      *v38 = v17;
LABEL_10:
      v22[1] = v19;
      v22[2] = v21;
      return result;
    }
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    v32 = v31;
    v47 = 0;
    v48 = 0xE000000000000000;
    v45 = v55;
    v46[0] = v56[0];
    *(_OWORD *)((char *)v46 + 9) = *(_OWORD *)((char *)v56 + 9);
    v41 = v51;
    v42 = v52;
    v43 = v53;
    v44 = v54;
    v39 = v49;
    v40 = v50;
    sub_1BB873E34();
    v33 = v48;
    *v32 = v47;
    v32[1] = v33;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (_QWORD *)sub_1BA8D1FE4((uint64_t)&v49);
  }
  else
  {
    v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32);
    v24 = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
    result = (_QWORD *)v23(v5, v5, v24, v9, v10);
    if (v3)
      return result;
    v25 = (void *)*((_QWORD *)v7 + 5);
    if ((objc_msgSend(v25, sel_respondsToSelector_, sel_layeredThumbnailJSON) & 1) != 0)
    {
      v26 = objc_msgSend(v25, sel_layeredThumbnailJSON);
      if (v26)
      {
        v27 = v26;
        v28 = sub_1BB8729A0();
        v19 = v29;

        if ((objc_msgSend(v25, sel_respondsToSelector_, sel_layeredThumbnailAspectRatio) & 1) != 0)
        {
          objc_msgSend(v25, sel_layeredThumbnailAspectRatio);
          v21 = v30;
          result = (_QWORD *)sub_1BA717468((uint64_t)v7);
          v22 = v38;
          *v38 = v28;
          goto LABEL_10;
        }
        swift_bridgeObjectRelease();
      }
    }
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    v35 = v34;
    *(_QWORD *)&v57[0] = 0;
    *((_QWORD *)&v57[0] + 1) = 0xE000000000000000;
    sub_1BB873E34();
    v36 = *((_QWORD *)&v57[0] + 1);
    *v35 = *(_QWORD *)&v57[0];
    v35[1] = v36;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (_QWORD *)sub_1BA717468((uint64_t)v7);
  }
}

uint64_t sub_1BA7FE348(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[2];
  uint64_t v47;
  uint64_t v48;

  v7 = v5;
  v8 = v4;
  swift_beginAccess();
  v12 = v4[2];
  v13 = v4[3];
  swift_bridgeObjectRetain();
  v42 = sub_1BA717D44(v12, v13);
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 40);
  if (*(_QWORD *)(v16 + 16))
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BA6E35A8(v42, v15);
    if ((v18 & 1) != 0)
    {
      v19 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 16 * v17);
      v20 = *v19;
      v21 = v19[1];
      swift_bridgeObjectRelease_n();
      if (v21)
        goto LABEL_7;
      __break(1u);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v20 = 0;
  v21 = 1;
LABEL_7:
  result = swift_beginAccess();
  v23 = v20 >= 0;
  if (v21 > 0)
    v23 = v20 < 1;
  if (!v23)
  {
    v24 = 0;
    v38 = v20;
    v39 = v8;
    v37 = v21;
    while (1)
    {
      v25 = v24 + v21;
      if (__OFADD__(v24, v21))
        v25 = ((v24 + v21) >> 63) ^ 0x8000000000000000;
      v40 = v25;
      v41 = sub_1BA7FF01C(v20, v21, v24);
      v43 = sub_1BA7FEB08(v20, v21, v24);
      v44 = v8[2];
      v45 = v8[3];
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v26);
      v48 = v24;
      sub_1BB87420C();
      sub_1BB872AFC(v27);
      swift_bridgeObjectRelease();
      sub_1BA709F80(v44, v45);
      swift_bridgeObjectRelease();
      v28 = sub_1BB87420C();
      sub_1BA70A468(v28, v29);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BA70B0DC(v41);
      swift_release();
      swift_bridgeObjectRelease();
      v30 = sub_1BA707E14(v43, 0);
      swift_release();
      swift_bridgeObjectRelease();
      v31 = v8[11];
      v32 = *(_QWORD *)(v31 + 16);
      if (v32)
        break;
      result = swift_release();
LABEL_19:
      v20 = v38;
      v8 = v39;
      v21 = v37;
      v24 = v40;
      v36 = v38 >= v40;
      if (v37 > 0)
        v36 = v40 >= v38;
      if (v36)
        return result;
    }
    swift_bridgeObjectRetain();
    v33 = 32;
    while (1)
    {
      v34 = *(_OWORD *)(v31 + v33);
      v35 = *(_OWORD *)(v31 + v33 + 16);
      v47 = *(_QWORD *)(v31 + v33 + 32);
      v46[0] = v34;
      v46[1] = v35;
      sub_1BA7086BC((uint64_t)v46);
      a4(a1, v30, a3);
      if (v7)
        break;
      sub_1BA708680((uint64_t)v46);
      v33 += 40;
      if (!--v32)
      {
        swift_release();
        result = swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return sub_1BA708680((uint64_t)v46);
  }
  return result;
}

uint64_t FormatRepeatNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  int64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[2];
  _OWORD v41[2];
  uint64_t v42;
  _OWORD v43[3];
  _QWORD *v44;

  v5 = *(_QWORD *)(v2 + 32);
  if ((*(_BYTE *)(v2 + 40) & 1) != 0)
  {
    v39 = a1;
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v6 = sub_1BA728610(*(uint64_t *)&v43[0], v5);
    swift_release();
    result = sub_1BA800BCC(v5, 1);
    if (v3)
      return result;
  }
  else
  {
    v8 = sub_1BA751F34(0x7FFFFFFFFFFFFFFFLL, a2);
    if (v3)
    {
      if ((v5 & 1) != 0)
        return swift_willThrow();
      v39 = a1;

      v6 = 0;
    }
    else
    {
      v39 = a1;
      v6 = *(_QWORD *)(v8 + 16);
      swift_bridgeObjectRelease();
    }
  }
  v9 = v44[6];
  if (v9)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v10 = sub_1BA728610(*(uint64_t *)&v43[0], v9);
    swift_bridgeObjectRelease();
    swift_release();
    v11 = v10 & ~(v10 >> 63);
  }
  else
  {
    v11 = 0;
  }
  v12 = v44[7];
  if (v12)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v13 = sub_1BA728610(*(uint64_t *)&v43[0], v12);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v13 = 0x7FFFFFFFFFFFFFFFLL;
  }
  v14 = v44[8];
  if (v14)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v15 = sub_1BA728610(*(uint64_t *)&v43[0], v14);
    swift_bridgeObjectRelease();
    swift_release();
    if (v15 <= 1)
      v16 = 1;
    else
      v16 = v15;
  }
  else
  {
    v16 = 1;
  }
  if (v6 <= v11)
    v17 = v11;
  else
    v17 = v6;
  if (v17 >= v13)
    v18 = v13;
  else
    v18 = v17;
  swift_beginAccess();
  v19 = v44[2];
  v20 = v44[3];
  swift_bridgeObjectRetain();
  v21 = sub_1BA717D44(v19, v20);
  v23 = v22;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v41[0] = *(_QWORD *)(v39 + 64);
  *(_QWORD *)(v39 + 64) = 0x8000000000000000;
  sub_1BA800C28(v18, v16, v21, v23, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v39 + 64) = *(_QWORD *)&v41[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  result = swift_bridgeObjectRelease();
  if (v18 >= 1)
  {
    v25 = v16;
    v26 = 0;
    v27 = v44;
    do
    {
      v28 = sub_1BA7FF01C(v18, v25, v26);
      v29 = v18;
      v30 = v25;
      v31 = sub_1BA7FEB08(v18, v25, v26);
      v32 = v27[3];
      *(_QWORD *)&v43[0] = v27[2];
      *((_QWORD *)&v43[0] + 1) = v32;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v33);
      *(_QWORD *)&v41[0] = v26;
      sub_1BB87420C();
      sub_1BB872AFC(v34);
      swift_bridgeObjectRelease();
      v36 = *((_QWORD *)&v43[0] + 1);
      v35 = *(_QWORD *)&v43[0];
      memset(v43, 0, sizeof(v43));
      v42 = 0;
      memset(v41, 0, sizeof(v41));
      memset(v40, 0, sizeof(v40));
      v37 = sub_1BA706104(v35, v36, v28, v31, 0, 0, 0, MEMORY[0x1E0DEE9D8], (uint64_t *)v43, (uint64_t)v41, (uint64_t *)v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA706800((uint64_t)v41);
      FormatRepeatNode.bindChildren(binder:context:)(v39, v37);
      result = swift_release();
      v38 = v26 + v30;
      if (__OFADD__(v26, v30))
        break;
      v25 = v30;
      v26 += v30;
      v18 = v29;
    }
    while (v38 < v29);
  }
  return result;
}

uint64_t sub_1BA7FEB08(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24[2];
  uint64_t v25;

  v5 = result;
  v25 = MEMORY[0x1E0DEE9E8];
  v6 = a3 & 1;
  if (a3 < 0)
    v6 = -v6;
  if (v6 == 1)
  {
    v7 = 0x6C6968632D64646FLL;
    v8 = 0xE900000000000064;
  }
  else
  {
    if (v6)
      goto LABEL_8;
    v7 = 0x6968632D6E657665;
    v8 = 0xEA0000000000646CLL;
  }
  sub_1BA6EE5AC(v24, v7, v8);
  result = swift_bridgeObjectRelease();
LABEL_8:
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v5 - 1 == a3)
  {
    sub_1BA6EE5AC(v24, 0x6968632D7473616CLL, 0xEA0000000000646CLL);
    swift_bridgeObjectRelease();
  }
  if (!a3)
  {
    sub_1BA6EE5AC(v24, 0x68632D7473726966, 0xEB00000000646C69);
    swift_bridgeObjectRelease();
  }
  v24[0] = 0x2D7865646E69;
  v24[1] = 0xE600000000000000;
  sub_1BB87420C();
  sub_1BB872AFC(v9);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v10);
  sub_1BA6EE5AC(v24, v24[0], v24[1]);
  swift_bridgeObjectRelease();
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  sub_1BB873CB4();
  result = swift_bridgeObjectRelease();
  strcpy((char *)v24, "reverse-index-");
  HIBYTE(v24[1]) = -18;
  if (__OFSUB__(v5, a3))
    goto LABEL_33;
  if (__OFSUB__(v5 - a3, 1))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  sub_1BB87420C();
  sub_1BB872AFC(v11);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v12);
  sub_1BA6EE5AC(v24, v24[0], v24[1]);
  swift_bridgeObjectRelease();
  strcpy((char *)v24, "stride-");
  v24[1] = 0xE700000000000000;
  sub_1BB87420C();
  sub_1BB872AFC(v13);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v14);
  sub_1BA6EE5AC(v24, v24[0], v24[1]);
  result = swift_bridgeObjectRelease();
  if (!a2)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (a3 == 0x8000000000000000 && a2 == -1)
    goto LABEL_38;
  v15 = a3 / a2;
  v16 = (a3 / a2) & 1;
  if (a3 / a2 < 0)
    v16 = -v16;
  if (v16 == 1)
  {
    v18 = 0xD000000000000010;
    v17 = 0x80000001BB999850;
  }
  else
  {
    if (v16)
      goto LABEL_25;
    v17 = 0x80000001BB999870;
    v18 = 0xD000000000000011;
  }
  sub_1BA6EE5AC(v24, v18, v17);
  swift_bridgeObjectRelease();
LABEL_25:
  v19 = v5 / a2;
  if (v15 == v19 - 1)
  {
    sub_1BA6EE5AC(v24, 0xD000000000000011, 0x80000001BB999830);
    swift_bridgeObjectRelease();
  }
  if (!a3)
  {
    sub_1BA6EE5AC(v24, 0xD000000000000012, 0x80000001BB999810);
    swift_bridgeObjectRelease();
  }
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  strcpy((char *)v24, "stride-index-");
  HIWORD(v24[1]) = -4864;
  sub_1BB87420C();
  sub_1BB872AFC(v20);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v21);
  sub_1BA6EE5AC(v24, v24[0], v24[1]);
  swift_bridgeObjectRelease();
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  sub_1BB873CB4();
  result = swift_bridgeObjectRelease();
  v24[0] = 0xD000000000000015;
  v24[1] = 0x80000001BB9997F0;
  if (!__OFSUB__(v19, v15))
  {
    if (!__OFSUB__(v19 - v15, 1))
    {
      sub_1BB87420C();
      sub_1BB872AFC(v22);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v23);
      sub_1BA6EE5AC(v24, v24[0], v24[1]);
      swift_bridgeObjectRelease();
      return v25;
    }
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1BA7FF01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t *v98;
  _BOOL4 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t result;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t *v169;
  BOOL v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  _QWORD *v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  _QWORD *v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t v208;
  _QWORD *v209;
  _QWORD *v210;
  uint64_t v211;
  unint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  void (*v239)(char *);
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;

  v234 = a3;
  v232 = a1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  v6 = *(_QWORD *)(v5 - 8);
  v236 = v5;
  v237 = v6;
  MEMORY[0x1E0C80A78](v5);
  v220 = (char *)&v219 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v219 - v9;
  MEMORY[0x1E0C80A78](v11);
  v225 = (uint64_t)&v219 - v12;
  MEMORY[0x1E0C80A78](v13);
  v224 = (uint64_t)&v219 - v14;
  MEMORY[0x1E0C80A78](v15);
  v223 = (uint64_t)&v219 - v16;
  MEMORY[0x1E0C80A78](v17);
  v226 = (uint64_t)&v219 - v18;
  MEMORY[0x1E0C80A78](v19);
  v227 = (char *)&v219 - v20;
  MEMORY[0x1E0C80A78](v21);
  v221 = (char *)&v219 - v22;
  MEMORY[0x1E0C80A78](v23);
  v231 = (uint64_t)&v219 - v24;
  MEMORY[0x1E0C80A78](v25);
  v230 = (uint64_t)&v219 - v26;
  MEMORY[0x1E0C80A78](v27);
  v229 = (uint64_t)&v219 - v28;
  MEMORY[0x1E0C80A78](v29);
  v233 = (uint64_t)&v219 - v30;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v219 - v32;
  MEMORY[0x1E0C80A78](v34);
  v36 = (char *)&v219 - v35;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v219 - v38;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9D90, (uint64_t (*)(uint64_t))sub_1BA76B9F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v241 = swift_allocObject();
  *(_OWORD *)(v241 + 16) = xmmword_1BB947E70;
  if (qword_1ED3C6D18 != -1)
    swift_once();
  v222 = v33;
  v228 = a2;
  v219 = v10;
  v40 = 0x746E756F63;
  v41 = sub_1BB86EB84();
  v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED476B60);
  v239 = *(void (**)(char *))(*(_QWORD *)(v41 - 8) + 16);
  v240 = v41;
  v239(v39);
  v238 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v43 = *(_QWORD *)(v3 + 72);
  v44 = *(_QWORD *)(v3 + 80);
  v235 = v43;
  if (v44)
  {
    v242 = v43;
    v243 = v44;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v45);
    sub_1BB872AFC(v46);
    v40 = v242;
    v47 = v243;
  }
  else
  {
    v47 = 0xE500000000000000;
  }
  v48 = 0x656469727473;
  v49 = type metadata accessor for FormatOption();
  v50 = swift_allocBox();
  v52 = v51;
  v53 = swift_allocObject();
  v54 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v53 + 16) = v232;
  *(_QWORD *)(v53 + 24) = v54;
  *v52 = v40;
  v52[1] = v47;
  v52[2] = v53 | 0x4000000000000000;
  v52[3] = 1;
  v55 = (uint64_t)v52 + *(int *)(v49 + 28);
  sub_1BA5193C4((uint64_t)v39, v55, type metadata accessor for FormatVersionRequirement);
  v237 = *(_QWORD *)(v237 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v55, 0, 1, v236);
  v56 = v240;
  *(_QWORD *)(v241 + 32) = v50;
  ((void (*)(char *, uint64_t, uint64_t))v239)(v36, v42, v56);
  swift_storeEnumTagMultiPayload();
  if (v44)
  {
    v242 = v235;
    v243 = v44;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v57);
    sub_1BB872AFC(v58);
    v48 = v242;
    v59 = v243;
  }
  else
  {
    v59 = 0xE600000000000000;
  }
  v60 = v228;
  v61 = 0x7865646E69;
  v62 = swift_allocBox();
  v64 = v63;
  v65 = swift_allocObject();
  *(_QWORD *)(v65 + 16) = v60;
  *(_QWORD *)(v65 + 24) = MEMORY[0x1E0DEE9D8];
  *v64 = v48;
  v64[1] = v59;
  v64[2] = v65 | 0x4000000000000000;
  v64[3] = 1;
  v66 = (uint64_t)v64 + *(int *)(v49 + 28);
  sub_1BA5193C4((uint64_t)v36, v66, type metadata accessor for FormatVersionRequirement);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v66, 0, 1, v236);
  v67 = v240;
  *(_QWORD *)(v241 + 40) = v62;
  v68 = (uint64_t)v222;
  ((void (*)(char *, uint64_t, uint64_t))v239)(v222, v42, v67);
  swift_storeEnumTagMultiPayload();
  if (v44)
  {
    v242 = v235;
    v243 = v44;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v69);
    sub_1BB872AFC(v70);
    v61 = v242;
    v71 = v243;
  }
  else
  {
    v71 = 0xE500000000000000;
  }
  v72 = 1953718636;
  v73 = swift_allocBox();
  v75 = v74;
  v76 = swift_allocObject();
  *(_QWORD *)(v76 + 16) = v234;
  *(_QWORD *)(v76 + 24) = MEMORY[0x1E0DEE9D8];
  *v75 = v61;
  v75[1] = v71;
  v75[2] = v76 | 0x4000000000000000;
  v75[3] = 1;
  v77 = (uint64_t)v75 + *(int *)(v49 + 28);
  sub_1BA5193C4(v68, v77, type metadata accessor for FormatVersionRequirement);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v77, 0, 1, v236);
  v78 = v240;
  *(_QWORD *)(v241 + 48) = v73;
  ((void (*)(uint64_t, uint64_t, uint64_t))v239)(v233, v42, v78);
  swift_storeEnumTagMultiPayload();
  if (v44)
  {
    v79 = v235;
    v242 = v235;
    v243 = v44;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v80);
    sub_1BB872AFC(v81);
    v72 = v242;
    v82 = v243;
  }
  else
  {
    v82 = 0xE400000000000000;
    v79 = v235;
  }
  v83 = swift_allocBox();
  if (__OFSUB__(v232, 1))
  {
    __break(1u);
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  v85 = v83;
  v86 = v84;
  v87 = 0x7473726966;
  v88 = v232 - 1 == v234;
  v89 = swift_allocObject();
  *(_BYTE *)(v89 + 16) = v88;
  *(_QWORD *)(v89 + 24) = MEMORY[0x1E0DEE9D8];
  *v86 = v72;
  v86[1] = v82;
  v86[2] = v89;
  v86[3] = 1;
  v90 = (uint64_t)v86 + *(int *)(v49 + 28);
  sub_1BA5193C4(v233, v90, type metadata accessor for FormatVersionRequirement);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v90, 0, 1, v236);
  v91 = v240;
  *(_QWORD *)(v241 + 56) = v85;
  ((void (*)(uint64_t, uint64_t, uint64_t))v239)(v229, v42, v91);
  swift_storeEnumTagMultiPayload();
  if (v44)
  {
    v242 = v79;
    v243 = v44;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v92);
    sub_1BB872AFC(v93);
    v87 = v242;
    v94 = v243;
  }
  else
  {
    v94 = 0xE500000000000000;
  }
  v95 = 1852143205;
  v96 = swift_allocBox();
  v98 = v97;
  v99 = v234 == 0;
  v100 = swift_allocObject();
  LODWORD(v222) = v99;
  *(_BYTE *)(v100 + 16) = v99;
  *(_QWORD *)(v100 + 24) = MEMORY[0x1E0DEE9D8];
  *v98 = v87;
  v98[1] = v94;
  v98[2] = v100;
  v98[3] = 1;
  v101 = (uint64_t)v98 + *(int *)(v49 + 28);
  sub_1BA5193C4(v229, v101, type metadata accessor for FormatVersionRequirement);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v101, 0, 1, v236);
  v102 = v240;
  *(_QWORD *)(v241 + 64) = v96;
  ((void (*)(uint64_t, uint64_t, uint64_t))v239)(v230, v42, v102);
  swift_storeEnumTagMultiPayload();
  if (v44)
  {
    v242 = v79;
    v243 = v44;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v103);
    sub_1BB872AFC(v104);
    v95 = v242;
    v105 = v243;
  }
  else
  {
    v105 = 0xE400000000000000;
  }
  v106 = 6579311;
  v107 = swift_allocBox();
  v109 = v108;
  if (v234 >= 0)
    v110 = v234 & 1;
  else
    v110 = -(v234 & 1);
  v111 = swift_allocObject();
  *(_BYTE *)(v111 + 16) = v110 == 0;
  *(_QWORD *)(v111 + 24) = MEMORY[0x1E0DEE9D8];
  *v109 = v95;
  v109[1] = v105;
  v109[2] = v111;
  v109[3] = 1;
  v112 = (uint64_t)v109 + *(int *)(v49 + 28);
  sub_1BA5193C4(v230, v112, type metadata accessor for FormatVersionRequirement);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v112, 0, 1, v236);
  v113 = v240;
  *(_QWORD *)(v241 + 72) = v107;
  ((void (*)(uint64_t, uint64_t, uint64_t))v239)(v231, v42, v113);
  swift_storeEnumTagMultiPayload();
  if (v44)
  {
    v242 = v235;
    v243 = v44;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v114);
    sub_1BB872AFC(v115);
    v106 = v242;
    v116 = v243;
  }
  else
  {
    v116 = 0xE300000000000000;
  }
  v230 = 0xEC0000007865646ELL;
  v117 = 0x4965737265766572;
  v118 = swift_allocBox();
  v120 = v119;
  v121 = swift_allocObject();
  *(_BYTE *)(v121 + 16) = v110 == 1;
  *(_QWORD *)(v121 + 24) = MEMORY[0x1E0DEE9D8];
  *v120 = v106;
  v120[1] = v116;
  v120[2] = v121;
  v120[3] = 1;
  v122 = (uint64_t)v120 + *(int *)(v49 + 28);
  sub_1BA5193C4(v231, v122, type metadata accessor for FormatVersionRequirement);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v122, 0, 1, v236);
  v123 = v240;
  *(_QWORD *)(v241 + 80) = v118;
  v124 = (uint64_t)v221;
  ((void (*)(char *, uint64_t, uint64_t))v239)(v221, v42, v123);
  swift_storeEnumTagMultiPayload();
  if (v44)
  {
    v242 = v235;
    v243 = v44;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v125);
    sub_1BB872AFC(v126);
    v117 = v242;
    v127 = v243;
  }
  else
  {
    v127 = 0xEC0000007865646ELL;
  }
  v128 = swift_allocBox();
  v130 = v232 - v234;
  v42 = v236;
  if (__OFSUB__(v232, v234))
    goto LABEL_58;
  v131 = v130 - 1;
  if (!__OFSUB__(v130, 1))
  {
    v132 = v128;
    v133 = v129;
    v134 = swift_allocObject();
    *(_QWORD *)(v134 + 16) = v131;
    *(_QWORD *)(v134 + 24) = MEMORY[0x1E0DEE9D8];
    *v133 = v117;
    v133[1] = v127;
    v133[2] = v134 | 0x4000000000000000;
    v133[3] = 1;
    v135 = (uint64_t)v133 + *(int *)(v49 + 28);
    sub_1BA5193C4(v124, v135, type metadata accessor for FormatVersionRequirement);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v135, 0, 1, v42);
    *(_QWORD *)(v241 + 88) = v132;
    if (qword_1ED3C6D00 == -1)
      goto LABEL_34;
    goto LABEL_60;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  swift_once();
LABEL_34:
  v136 = 0xEC000000746E756FLL;
  v137 = 0x632E656469727473;
  v233 = __swift_project_value_buffer(v240, (uint64_t)qword_1ED476B48);
  v239(v227);
  result = swift_storeEnumTagMultiPayload();
  v139 = v228;
  if (v44)
  {
    v242 = v235;
    v243 = v44;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v140);
    result = (uint64_t)sub_1BB872AFC(v141);
    v137 = v242;
    v136 = v243;
  }
  if (v139)
  {
    v142 = 0x692E656469727473;
    v143 = swift_allocBox();
    v145 = v144;
    v146 = v232 / v139;
    v147 = swift_allocObject();
    v232 = v146;
    *(_QWORD *)(v147 + 16) = v146;
    *(_QWORD *)(v147 + 24) = MEMORY[0x1E0DEE9D8];
    *v145 = v137;
    v145[1] = v136;
    v145[2] = v147 | 0x4000000000000000;
    v145[3] = 1;
    v148 = (uint64_t)v145 + *(int *)(v49 + 28);
    sub_1BA5193C4((uint64_t)v227, v148, type metadata accessor for FormatVersionRequirement);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v148, 0, 1, v42);
    v149 = v240;
    *(_QWORD *)(v241 + 96) = v143;
    ((void (*)(uint64_t, uint64_t, uint64_t))v239)(v226, v233, v149);
    result = swift_storeEnumTagMultiPayload();
    if (v44)
    {
      v242 = v235;
      v243 = v44;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v150);
      result = (uint64_t)sub_1BB872AFC(v151);
      v142 = v242;
      v230 = v243;
    }
    if (v234 == 0x8000000000000000 && v139 == -1)
      goto LABEL_64;
    v152 = v139;
    v153 = 0xEB00000000747361;
    v154 = 0x6C2E656469727473;
    v155 = swift_allocBox();
    v157 = v156;
    v158 = v234 / v152;
    v159 = swift_allocObject();
    *(_QWORD *)(v159 + 16) = v158;
    *(_QWORD *)(v159 + 24) = MEMORY[0x1E0DEE9D8];
    v160 = v230;
    *v157 = v142;
    v157[1] = v160;
    v157[2] = v159 | 0x4000000000000000;
    v157[3] = 1;
    v161 = (uint64_t)v157 + *(int *)(v49 + 28);
    sub_1BA5193C4(v226, v161, type metadata accessor for FormatVersionRequirement);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v161, 0, 1, v42);
    v162 = v240;
    *(_QWORD *)(v241 + 104) = v155;
    ((void (*)(uint64_t, uint64_t, uint64_t))v239)(v223, v233, v162);
    swift_storeEnumTagMultiPayload();
    if (v44)
    {
      v242 = v235;
      v243 = v44;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v163);
      sub_1BB872AFC(v164);
      v154 = v242;
      v153 = v243;
    }
    v165 = 0xEC00000074737269;
    v166 = 0x662E656469727473;
    v167 = swift_allocBox();
    v169 = v168;
    v234 = v158;
    v170 = v158 == v232 - 1;
    v171 = swift_allocObject();
    *(_BYTE *)(v171 + 16) = v170;
    *(_QWORD *)(v171 + 24) = MEMORY[0x1E0DEE9D8];
    *v169 = v154;
    v169[1] = v153;
    v169[2] = v171;
    v169[3] = 1;
    v172 = (uint64_t)v169 + *(int *)(v49 + 28);
    sub_1BA5193C4(v223, v172, type metadata accessor for FormatVersionRequirement);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v172, 0, 1, v42);
    v173 = v240;
    *(_QWORD *)(v241 + 112) = v167;
    ((void (*)(uint64_t, uint64_t, uint64_t))v239)(v224, v233, v173);
    swift_storeEnumTagMultiPayload();
    v174 = v235;
    if (v44)
    {
      v242 = v235;
      v243 = v44;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v175);
      sub_1BB872AFC(v176);
      v166 = v242;
      v165 = v243;
    }
    v177 = 0xEB000000006E6576;
    v178 = 0x652E656469727473;
    v179 = swift_allocBox();
    v181 = v180;
    v182 = swift_allocObject();
    *(_BYTE *)(v182 + 16) = (_BYTE)v222;
    *(_QWORD *)(v182 + 24) = MEMORY[0x1E0DEE9D8];
    *v181 = v166;
    v181[1] = v165;
    v181[2] = v182;
    v181[3] = 1;
    v183 = (uint64_t)v181 + *(int *)(v49 + 28);
    sub_1BA5193C4(v224, v183, type metadata accessor for FormatVersionRequirement);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v183, 0, 1, v42);
    v184 = v240;
    *(_QWORD *)(v241 + 120) = v179;
    ((void (*)(uint64_t, uint64_t, uint64_t))v239)(v225, v233, v184);
    swift_storeEnumTagMultiPayload();
    if (v44)
    {
      v242 = v174;
      v243 = v44;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v185);
      sub_1BB872AFC(v186);
      v178 = v242;
      v177 = v243;
    }
    v187 = 0xEA00000000006464;
    v188 = 0x6F2E656469727473;
    v189 = swift_allocBox();
    v191 = v190;
    if (v234 >= 0)
      v192 = v234 & 1;
    else
      v192 = -(v234 & 1);
    v193 = swift_allocObject();
    *(_BYTE *)(v193 + 16) = v192 == 0;
    *(_QWORD *)(v193 + 24) = MEMORY[0x1E0DEE9D8];
    *v191 = v178;
    v191[1] = v177;
    v191[2] = v193;
    v191[3] = 1;
    v194 = (uint64_t)v191 + *(int *)(v49 + 28);
    sub_1BA5193C4(v225, v194, type metadata accessor for FormatVersionRequirement);
    v195 = v236;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v194, 0, 1, v236);
    v196 = v240;
    *(_QWORD *)(v241 + 128) = v189;
    v197 = (uint64_t)v219;
    ((void (*)(char *, uint64_t, uint64_t))v239)(v219, v233, v196);
    swift_storeEnumTagMultiPayload();
    if (v44)
    {
      v242 = v235;
      v243 = v44;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v198);
      sub_1BB872AFC(v199);
      v188 = v242;
      v187 = v243;
    }
    v200 = 0xD000000000000013;
    v201 = swift_allocBox();
    v203 = v202;
    v204 = swift_allocObject();
    *(_BYTE *)(v204 + 16) = v192 == 1;
    *(_QWORD *)(v204 + 24) = MEMORY[0x1E0DEE9D8];
    *v203 = v188;
    v203[1] = v187;
    v203[2] = v204;
    v203[3] = 1;
    v205 = (uint64_t)v203 + *(int *)(v49 + 28);
    sub_1BA5193C4(v197, v205, type metadata accessor for FormatVersionRequirement);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v205, 0, 1, v195);
    v206 = v240;
    *(_QWORD *)(v241 + 136) = v201;
    v207 = (uint64_t)v220;
    ((void (*)(char *, uint64_t, uint64_t))v239)(v220, v233, v206);
    swift_storeEnumTagMultiPayload();
    v208 = 0x80000001BB999890;
    if (v44)
    {
      v242 = v235;
      v243 = v44;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v209);
      sub_1BB872AFC(v210);
      v200 = v242;
      v208 = v243;
    }
    v211 = v234;
    result = swift_allocBox();
    v213 = v232 - v211;
    if (!__OFSUB__(v232, v211))
    {
      v214 = v213 - 1;
      if (!__OFSUB__(v213, 1))
      {
        v215 = result;
        v216 = v212;
        v217 = swift_allocObject();
        *(_QWORD *)(v217 + 16) = v214;
        *(_QWORD *)(v217 + 24) = MEMORY[0x1E0DEE9D8];
        *v216 = v200;
        v216[1] = v208;
        v216[2] = v217 | 0x4000000000000000;
        v216[3] = 1;
        v218 = (uint64_t)v216 + *(int *)(v49 + 28);
        sub_1BA5193C4(v207, v218, type metadata accessor for FormatVersionRequirement);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v237)(v218, 0, 1, v195);
        result = v241;
        *(_QWORD *)(v241 + 144) = v215;
        return result;
      }
      goto LABEL_63;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t FormatRepeatNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *);
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  char v58;
  uint64_t v59;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v49 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v49 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v52 = (char *)&v49 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v53 = (char *)&v49 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v49 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v49 - v19;
  sub_1BAEB5ED8(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  v26 = sub_1BAEB5FC8();
  v27 = sub_1BA4A2870(&qword_1ED3D0C50, (uint64_t (*)(uint64_t))sub_1BAEB5FC8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v28, v25, v4, v26, (uint64_t)&type metadata for FormatVersions.JazzkonG, v24, (uint64_t)v23, v27, (uint64_t)&off_1E734BD00);
  swift_beginAccess();
  v29 = v2[2];
  v30 = v2[3];
  v31 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v31 != -1)
    swift_once();
  v32 = sub_1BB86EB84();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C38);
  v34 = *(void (**)(char *))(*(_QWORD *)(v32 - 8) + 16);
  v55 = v33;
  v34(v20);
  v54 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v35 = v56;
  sub_1BAD265E8(v29, v30, 0, 0, 0, (uint64_t)v20, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE535A4, (uint64_t (*)(uint64_t))sub_1BAEB5F50, &qword_1ED3AE768);
  if (!v35)
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v36 = v2[4];
    v37 = *((_BYTE *)v2 + 40);
    ((void (*)(char *, uint64_t, uint64_t))v34)(v18, v55, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BA800BD8(v36, v37);
    sub_1BAD1F9E0(v36, v37, 1, 0, 0, (uint64_t)v18, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVersionRequirement);
    sub_1BA800BCC(v36, v37);
    v39 = (uint64_t)v53;
    ((void (*)(char *, uint64_t, uint64_t))v34)(v53, v55, v32);
    swift_storeEnumTagMultiPayload();
    v40 = swift_bridgeObjectRetain();
    sub_1BAD65548(v40, 2, 0, 0, v39, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v39, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v41 = (uint64_t)v52;
    ((void (*)(char *, uint64_t, uint64_t))v34)(v52, v55, v32);
    swift_storeEnumTagMultiPayload();
    v42 = swift_bridgeObjectRetain();
    sub_1BAD65548(v42, 3, 0, 0, v41, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v43 = (uint64_t)v51;
    ((void (*)(char *, uint64_t, uint64_t))v34)(v51, v55, v32);
    swift_storeEnumTagMultiPayload();
    v44 = swift_bridgeObjectRetain();
    sub_1BAD65548(v44, 4, 0, 0, v43, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v45 = v2[9];
    v46 = v2[10];
    v47 = (uint64_t)v50;
    ((void (*)(char *, uint64_t, uint64_t))v34)(v50, v55, v32);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD65768(v45, v46, 5, 0, 0, v47, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v48 = v2[11];
    v20 = v49;
    ((void (*)(char *, uint64_t, uint64_t))v34)(v49, v55, v32);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if ((sub_1BAE535A4((uint64_t)v20, 6, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v57 = xmmword_1BB8D2DA0;
      v58 = 0;
      v59 = v48;
      sub_1BAEB5F50();
      sub_1BA4A2870(&qword_1ED3AE768, (uint64_t (*)(uint64_t))sub_1BAEB5F50, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA653FC0();
      sub_1BB874464();
    }
  }
  sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BAEB5ED8);
}

uint64_t FormatRepeatNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (*(_BYTE *)(v2 + 40) != 1
    || (v6 = *(_QWORD *)(v2 + 32), sub_1BA800BD8(v6, 1), sub_1BA75A6B4(a2, v6), result = sub_1BA800BCC(v6, 1), !v3))
  {
    v8 = *(_QWORD *)(v2 + 48);
    if (!v8 || (swift_bridgeObjectRetain(), sub_1BA75A6B4(a2, v8), result = swift_bridgeObjectRelease(), !v3))
    {
      v9 = *(_QWORD *)(v2 + 56);
      if (!v9 || (swift_bridgeObjectRetain(), sub_1BA75A6B4(a2, v9), result = swift_bridgeObjectRelease(), !v3))
      {
        v10 = *(_QWORD *)(v2 + 64);
        if (!v10 || (swift_bridgeObjectRetain(), sub_1BA75A6B4(a2, v10), result = swift_bridgeObjectRelease(), !v3))
        {
          result = swift_beginAccess();
          v11 = *(_QWORD *)(v2 + 88);
          v12 = *(_QWORD *)(v11 + 16);
          if (v12)
          {
            swift_bridgeObjectRetain_n();
            v13 = v11 + 64;
            while (1)
            {
              swift_bridgeObjectRetain();
              swift_retain();
              FormatSourceMapNode.bind(binder:context:)(a1, a2);
              if (v3)
                break;
              v13 += 40;
              swift_bridgeObjectRelease();
              swift_release();
              if (!--v12)
                return swift_bridgeObjectRelease_n();
            }
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            return swift_release();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BA800BCC(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA800BD8(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_1BA800BE4()
{
  unint64_t result;

  result = qword_1ED39BA20;
  if (!qword_1ED39BA20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRepeatNodeIteration, &type metadata for FormatRepeatNodeIteration);
    atomic_store(result, (unint64_t *)&qword_1ED39BA20);
  }
  return result;
}

uint64_t sub_1BA800C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1BA6E35A8(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_1BB4C4058();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v23 = (uint64_t *)(v20[6] + 16 * v14);
    *v23 = a3;
    v23[1] = a4;
    v24 = (_QWORD *)(v20[7] + 16 * v14);
    *v24 = a1;
    v24[1] = a2;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v20[2] = v27;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1BA800D94(result, a5 & 1);
  result = sub_1BA6E35A8(a3, a4);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA800D94(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  sub_1BA80109C();
  v38 = a2;
  v6 = sub_1BB873F54();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v11)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v39 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1BB8745CC();
    sub_1BB872A90();
    result = sub_1BB874608();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v19) = v39;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1BA80109C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9B38)
  {
    sub_1BA81D584();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9B38);
  }
}

__n128 __swift_memcpy107_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 91) = *(__int128 *)((char *)a2 + 91);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatBackground(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x78)
  {
    *(_QWORD *)result = a2 - 121;
    if (a3 >= 0x79)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x79)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SportsDataVisualizationConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatTextNodeStyle.Selector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 520) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 528) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 528) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

double storeEnumTagSinglePayload for FormatNodeStyle(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 56) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 48) = (unint64_t)-a2 << 16;
      *(_QWORD *)(a1 + 56) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatAdjustment(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x66)
  {
    *(_QWORD *)result = a2 - 103;
    if (a3 >= 0x67)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x67)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t destroy for PuzzleStatsService.UpdatingState()
{
  return swift_release();
}

uint64_t sub_1BA801344@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA80136C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA80136C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA801398 + 4 * byte_1BB8AEF62[a1]))(1819044198, 0xE400000000000000);
}

uint64_t sub_1BA801398()
{
  return 0x746E6563726570;
}

uint64_t sub_1BA8013B0()
{
  return 0x46746E6563726570;
}

uint64_t sub_1BA8013D0()
{
  return 0x6F69736E656D6964;
}

uint64_t sub_1BA8013EC()
{
  return 0x69466F54657A6973;
}

unint64_t sub_1BA80140C()
{
  return 0xD000000000000011;
}

uint64_t getEnumTagSinglePayload for SportsDataVisualizationResponseBracketItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 73))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatColorBinding(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatColorBinding(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_1BA801774(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BA8017F0 + 4 * byte_1BB89DC50[v10]))();
  }
}

void sub_1BA801874(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BA801968()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BA8019DCLL);
}

void sub_1BA801970(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BA801978);
  JUMPOUT(0x1BA8019DCLL);
}

void sub_1BA8019B8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA8019DCLL);
}

void sub_1BA8019C0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BA8019DCLL);
}

uint64_t sub_1BA8019C8(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1BA8019DCLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1BA8019D8);
    JUMPOUT(0x1BA8019D4);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t getEnumTagSinglePayload for FormatDecorationContent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x78 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 120);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x77)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1BA801A44()
{
  unsigned __int8 *v0;

  return sub_1BA801A4C(*v0);
}

uint64_t sub_1BA801A4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA801A84 + 4 * byte_1BB90E4EE[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA801A84()
{
  return 0x446873696C627570;
}

uint64_t sub_1BA801AA4()
{
  return 0x4449676174;
}

uint64_t sub_1BA801AB8()
{
  return 0x44496575737369;
}

uint64_t sub_1BA801AD0()
{
  return 0x49656C6369747261;
}

uint64_t sub_1BA801AF0()
{
  return 0x6465626D45626577;
}

unint64_t sub_1BA801B0C()
{
  return 0xD000000000000012;
}

uint64_t sub_1BA801B2C()
{
  return 0x7974696E69666661;
}

uint64_t sub_1BA801B50()
{
  return 0x6F7779654B644169;
}

uint64_t sub_1BA801B70()
{
  return 0x73656D656874;
}

uint64_t sub_1BA801B84()
{
  return 0x70756F7267627573;
}

unint64_t sub_1BA801BCC()
{
  return 0xD000000000000011;
}

uint64_t sub_1BA801BE8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA801C10(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA801C10(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA801C44 + 4 * byte_1BB8AED02[a1]))(0x6E61656C6F6F62, 0xE700000000000000);
}

uint64_t sub_1BA801C44()
{
  return 1836412517;
}

uint64_t sub_1BA801C54()
{
  return 1702125924;
}

uint64_t sub_1BA801C64()
{
  return 0x74616F6C66;
}

uint64_t sub_1BA801C78()
{
  return 0x72656765746E69;
}

uint64_t sub_1BA801C8C()
{
  return 0x676E69727473;
}

uint64_t sub_1BA801CA0()
{
  return 7107189;
}

uint64_t sub_1BA801CB0()
{
  return 0x726F6C6F63;
}

uint64_t sub_1BA801CC4()
{
  return 0x646E756F626E75;
}

uint64_t sub_1BA801CD8()
{
  return 0x6567616D69;
}

uint64_t sub_1BA801CEC()
{
  return 0x6F65646976;
}

uint64_t sub_1BA801D00()
{
  return 0x7463617274736261;
}

uint64_t sub_1BA801D18()
{
  return 1953394534;
}

uint64_t sub_1BA801D28()
{
  return 0x616C506F65646976;
}

uint64_t sub_1BA801D48()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA801D7C + 4 * byte_1BB891AA4[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA801D7C()
{
  return 0x65756C6176;
}

uint64_t sub_1BA801D90()
{
  return 0x726F74617265706FLL;
}

uint64_t sub_1BA801DA8()
{
  return 0x6E6F6974706FLL;
}

uint64_t sub_1BA801DBC()
{
  char *v0;

  return sub_1BA65FED8(*v0);
}

uint64_t _s10CodingTypeOwst_4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA801E14 + 4 * byte_1BB8AFB49[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA801E48 + 4 * byte_1BB8AFB44[v4]))();
}

uint64_t sub_1BA801E48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA801E50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA801E58);
  return result;
}

uint64_t sub_1BA801E64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA801E6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA801E70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA801E78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FeedSubscriptionPaidAccess(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t getEnumTagSinglePayload for FormatViewNodeStyle.Selector(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 153))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for FeedPuzzle()
{
  return &type metadata for FeedPuzzle;
}

ValueMetadata *type metadata accessor for FeedTag()
{
  return &type metadata for FeedTag;
}

uint64_t getEnumTagSinglePayload for FormatCornerRadius(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 16) & 0x7E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

ValueMetadata *type metadata accessor for FeedIssue()
{
  return &type metadata for FeedIssue;
}

ValueMetadata *type metadata accessor for FeedPuzzleType()
{
  return &type metadata for FeedPuzzleType;
}

uint64_t getEnumTagSinglePayload for FormatItemKind(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFF1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483633);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 14;
  if (v4 >= 0x10)
    return v5;
  else
    return 0;
}

uint64_t sub_1BA80204C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA6BEFC8(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatTextContent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x77 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 119);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x76)
    v3 = -1;
  return v3 + 1;
}

uint64_t destroy for FormatNodeStyle(uint64_t a1)
{
  return sub_1BA76B698(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

uint64_t storeEnumTagSinglePayload for FormatOptionBindingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatColorProcessor(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7B && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 123);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7A)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatTextContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x76)
  {
    *(_QWORD *)result = a2 - 119;
    if (a3 >= 0x77)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x77)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BA8021D0()
{
  unsigned __int8 *v0;

  return sub_1BA68B124(*v0);
}

uint64_t sub_1BA8021DC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 16) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BA8022B0 + 4 * byte_1BB89DC5F[(v9 - 1)]))();
}

uint64_t sub_1BA802320()
{
  unsigned __int8 *v0;

  return sub_1BA6F7430(*v0);
}

uint64_t storeEnumTagSinglePayload for FormatSystemColor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 40 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 40) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD7)
    return ((uint64_t (*)(void))((char *)&loc_1BA802378 + 4 * byte_1BB8EED47[v4]))();
  *a1 = a2 + 40;
  return ((uint64_t (*)(void))((char *)sub_1BA8023AC + 4 * byte_1BB8EED42[v4]))();
}

uint64_t sub_1BA8023AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8023B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8023BCLL);
  return result;
}

uint64_t sub_1BA8023C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8023D0);
  *(_BYTE *)result = a2 + 40;
  return result;
}

uint64_t sub_1BA8023D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8023DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatSystemColor(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD8)
    goto LABEL_17;
  if (a2 + 40 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 40) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 40;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 40;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 40;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x29;
  v8 = v6 - 41;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

NewsFeed::FormatSystemColor_optional sub_1BA802478(Swift::String *a1)
{
  return FormatSystemColor.init(rawValue:)(*a1);
}

uint64_t sub_1BA802484(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 1)
    v3 = 1;
  v4 = *(unsigned __int8 *)(result + v3);
  if (v4 < 2)
  {
    if (v4 != 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1BA8024C8 + 4 * byte_1BB919C85[v5]))();
  }
  return result;
}

uint64_t sub_1BA80251C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA802544 + 4 * byte_1BB931BB0[*v0]))(1953459315, 0xE400000000000000);
}

uint64_t sub_1BA802544()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BA802560()
{
  return 0x726F66736E617274;
}

uint64_t sub_1BA802580()
{
  return 0x736D657469;
}

uint64_t sub_1BA802594()
{
  return 0x726F7463656C6573;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatAccessibilityRole(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFA)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BA802610 + 4 * byte_1BB8ACE76[v5]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BA802644 + 4 * byte_1BB8ACE71[v5]))();
}

uint64_t sub_1BA802644(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA80264C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA802654);
  return result;
}

uint64_t sub_1BA802660(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA802668);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BA80266C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA802674(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t destroy for FormatAdjustment(unint64_t *a1)
{
  return sub_1BA719340(*a1);
}

uint64_t sub_1BA80268C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA8026B4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA8026B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA8026E8 + 4 * byte_1BB8AF186[a1]))(0x676E69646E6962, 0xE700000000000000);
}

uint64_t sub_1BA8026E8()
{
  return 0x656E696C6E69;
}

uint64_t sub_1BA8026FC()
{
  return 0x657A696C61636F6CLL;
}

uint64_t sub_1BA80272C()
{
  return 0x656D686361747461;
}

uint64_t sub_1BA802748()
{
  return 0x686374697773;
}

uint64_t sub_1BA80275C()
{
  return 0x7265626D756ELL;
}

uint64_t sub_1BA802770()
{
  return 1802398060;
}

uint64_t sub_1BA802780()
{
  return 0x656D695465746164;
}

uint64_t sub_1BA802798()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA8027B0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA8027FC + 4 * byte_1BB8F51C3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA802830 + 4 * byte_1BB8F51BE[v4]))();
}

uint64_t sub_1BA802830(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA802838(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA802840);
  return result;
}

uint64_t sub_1BA80284C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA802854);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA802858(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA802860(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FeedLayoutOrder(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1BA8028FC()
{
  unsigned __int8 *v0;

  return sub_1BA8029FC(*v0);
}

uint64_t storeEnumTagSinglePayload for FormatViewNodeStyle.Selector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 152) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 153) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 153) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s5ImageOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1BA8029FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA802A34 + 4 * byte_1BB927DF7[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA802A34()
{
  return 0x6E6F6973726576;
}

uint64_t sub_1BA802A4C()
{
  return 1701605234;
}

uint64_t sub_1BA802A5C()
{
  return 0x6F69746365726964;
}

uint64_t sub_1BA802A78()
{
  return 1701667182;
}

uint64_t sub_1BA802A88()
{
  return 0x746E656D6D6F63;
}

uint64_t sub_1BA802AA0()
{
  return 0x7370756F7267;
}

uint64_t sub_1BA802AB4()
{
  return 0x736D657469;
}

uint64_t sub_1BA802AC8()
{
  return 0x7374657070696E73;
}

uint64_t sub_1BA802AE0()
{
  return 0x656D656C70707573;
}

uint64_t sub_1BA802B04()
{
  return 0x73656C797473;
}

uint64_t sub_1BA802B18()
{
  return 0x73746F6C73;
}

uint64_t sub_1BA802B2C()
{
  return 0x7365707974;
}

uint64_t sub_1BA802B40()
{
  return 0x697461726F636564;
}

uint64_t sub_1BA802B60()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA802B78()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA802B98()
{
  return 0x617A696C61636F6CLL;
}

uint64_t sub_1BA802BBC()
{
  return 0x79536E6D756C6F63;
}

uint64_t sub_1BA802BDC()
{
  return 0x636E657265666572;
}

uint64_t sub_1BA802BF4()
{
  return 0x72656C69706D6F63;
}

unint64_t destroy for FormatColorProcessor(unint64_t *a1)
{
  return sub_1BA74447C(*a1);
}

uint64_t storeEnumTagSinglePayload for FormatItemKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF1)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483633;
    if (a3 >= 0x7FFFFFF1)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF1)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 14;
  }
  return result;
}

uint64_t sub_1BA802C78()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F6974706FLL;
  else
    return 0x65756C6176;
}

uint64_t _s10CodingTypeOwst_3(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 28 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 28) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE3)
    return ((uint64_t (*)(void))((char *)&loc_1BA802CF8 + 4 * byte_1BB8AFAC7[v4]))();
  *a1 = a2 + 28;
  return ((uint64_t (*)(void))((char *)sub_1BA802D2C + 4 * byte_1BB8AFAC2[v4]))();
}

uint64_t sub_1BA802D2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA802D34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA802D3CLL);
  return result;
}

uint64_t sub_1BA802D48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA802D50);
  *(_BYTE *)result = a2 + 28;
  return result;
}

uint64_t sub_1BA802D54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA802D5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s10CodingTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE4)
    goto LABEL_17;
  if (a2 + 28 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 28) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 28;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 28;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 28;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1D;
  v8 = v6 - 29;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t sub_1BA802DF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA619A70(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BA802E00()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65756C6176;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x6E656E6F706D6F63;
}

uint64_t getEnumTagSinglePayload for FormatFill(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 104) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t _s10CodingTypeOwst_0_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA802EF8 + 4 * byte_1BB8AFB3F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA802F2C + 4 * byte_1BB8AFB3A[v4]))();
}

uint64_t sub_1BA802F2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA802F34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA802F3CLL);
  return result;
}

uint64_t sub_1BA802F48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA802F50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA802F54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA802F5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatSymbolImageFill(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x74)
  {
    *(_QWORD *)result = a2 - 117;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x75)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x75)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatSymbolImageFill(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x75 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 117);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x74)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatNodeStyle.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1BA8030A0 + 4 * byte_1BB8E4121[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1BA8030D4 + 4 * byte_1BB8E411C[v4]))();
}

uint64_t sub_1BA8030D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8030DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8030E4);
  return result;
}

uint64_t sub_1BA8030F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8030F8);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1BA8030FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA803104(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatAccessibilityTrait(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatQueryValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BA8031DC()
{
  char *v0;

  return sub_1BA577768(*v0);
}

uint64_t sub_1BA8031E8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x71)
    v6 = 113;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 > 0x71)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = (*a1 >> 60) & 0x8F | (16 * (*a1 & 7));
      v16 = v15 ^ 0x7F;
      v17 = 128 - v15;
      if (v16 >= 0x71)
        return 0;
      else
        return v17;
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BA8032BC + 4 * byte_1BB9525A0[(v9 - 1)]))();
}

uint64_t getEnumTagSinglePayload for SportsConfigResourceParameter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

void sub_1BA803384(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1BA80357C()
{
  char *v0;

  return sub_1BA575420(*v0);
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseBracketItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatOptionExpression(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3;

  if (a2 > 0x7FE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 2047;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FF)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0x7FF)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 1) & 0x3FF) - (a2 << 10);
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_WORD *)(result + 32) = (32 * v3) & 0xF000 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatOptionExpression(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FF && *(_BYTE *)(a1 + 34))
    return (*(_DWORD *)a1 + 2047);
  v3 = (*(_WORD *)(a1 + 32) & 0xFE | (*(unsigned __int16 *)(a1 + 32) >> 15) | (*(unsigned __int16 *)(a1 + 32) >> 4) & 0x700) ^ 0x7FF;
  if (v3 >= 0x7FE)
    v3 = -1;
  return v3 + 1;
}

ValueMetadata *type metadata accessor for FeedPoolCachePolicy()
{
  return &type metadata for FeedPoolCachePolicy;
}

uint64_t sub_1BA8036AC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA8036D4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA8036D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA803708 + 4 * byte_1BB8AF1C6[a1]))(0x656E696C64616568, 0xE800000000000000);
}

uint64_t sub_1BA803708()
{
  return 0x6575737369;
}

uint64_t sub_1BA80371C()
{
  return 0x70756F7267;
}

uint64_t sub_1BA803730()
{
  return 0x6E6F6974706FLL;
}

uint64_t sub_1BA803744()
{
  return 0x79747265706F7270;
}

uint64_t sub_1BA803758()
{
  return 0x6172546F69647561;
}

uint64_t sub_1BA803778()
{
  return 6775156;
}

uint64_t sub_1BA803788()
{
  return 0x6465626D45626577;
}

uint64_t sub_1BA80379C()
{
  return 0x656C7A7A7570;
}

uint64_t sub_1BA8037B0()
{
  return 0x7954656C7A7A7570;
}

uint64_t sub_1BA8037CC()
{
  return 0x7453656C7A7A7570;
}

uint64_t sub_1BA8037F0()
{
  return 0x74496D6F74737563;
}

uint64_t sub_1BA803810()
{
  return 0x76457374726F7073;
}

uint64_t sub_1BA803830()
{
  return 0x6C6C6177796170;
}

uint64_t storeEnumTagSinglePayload for FormatDecorationContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x77)
  {
    *(_QWORD *)result = a2 - 120;
    if (a3 >= 0x78)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x78)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatOperator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BA8038E4 + 4 * byte_1BB891AC3[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BA803918 + 4 * byte_1BB891ABE[v4]))();
}

uint64_t sub_1BA803918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA803920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA803928);
  return result;
}

uint64_t sub_1BA803934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA80393CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BA803940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA803948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA803954()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA803980 + 4 * byte_1BB91B140[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1BA803980()
{
  return 0x4479616C70736964;
}

uint64_t sub_1BA8039A0()
{
  return 0x70795479726F7473;
}

uint64_t sub_1BA8039BC()
{
  return 0x63784574726F6873;
}

uint64_t sub_1BA8039DC()
{
  return 0x69616E626D756874;
}

uint64_t sub_1BA8039FC()
{
  return 0x4C52556574756F72;
}

uint64_t storeEnumTagSinglePayload for FormatNodeAccessibilityRole(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatTextNodeBinding(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1F2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 499;
    if (a3 >= 0x1F3)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if (a3 >= 0x1F3)
      *(_BYTE *)(result + 50) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_BYTE *)(result + 48) = 8 * (-(char)a2 & 1);
      *(_BYTE *)(result + 49) = -a2 >> 1;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatTextNodeBinding(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1F3 && *(_BYTE *)(a1 + 50))
    return (*(_DWORD *)a1 + 499);
  v3 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 1 | (2 * *(unsigned __int8 *)(a1 + 49))) ^ 0x1FF;
  if (v3 >= 0x1F2)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_1BA803B2C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA803B54(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA803B54(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA803B80 + 4 * byte_1BB8E40D0[a1]))(2003134838, 0xE400000000000000);
}

uint64_t sub_1BA803B80()
{
  return 1954047348;
}

uint64_t sub_1BA803B8C()
{
  return 0x6567616D69;
}

uint64_t sub_1BA803BA0()
{
  return 1835365481;
}

uint64_t sub_1BA803BAC()
{
  return 0x6465626D45626577;
}

uint64_t sub_1BA803BC4()
{
  return 0x6D6F74737563;
}

uint64_t sub_1BA803BD8()
{
  return 0x656D656C70707573;
}

uint64_t sub_1BA803BFC()
{
  return 1633905005;
}

uint64_t sub_1BA803C08()
{
  return 0x4D6465726579616CLL;
}

uint64_t sub_1BA803C28()
{
  return 0x6F65646976;
}

uint64_t sub_1BA803C3C()
{
  return 0x766F436575737369;
}

uint64_t sub_1BA803C58()
{
  return 0x70756F7267;
}

uint64_t sub_1BA803C6C()
{
  return 1802723693;
}

uint64_t sub_1BA803C78()
{
  return 0x6F6974616D696E61;
}

uint64_t sub_1BA803C94()
{
  return 0x616C506F65646976;
}

uint64_t sub_1BA803CB4()
{
  return 0x73736572676F7270;
}

uint64_t sub_1BA803CD4()
{
  return 0x6D45656C7A7A7570;
}

uint64_t sub_1BA803CF4()
{
  return 0x65726F736E6F7073;
}

void sub_1BA803D18(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1BA803ED8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = ((*(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
     + *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BA803F98 + 4 * byte_1BB9523E0[(v7 - 1)]))();
}

uint64_t sub_1BA803FE8()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6176;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BA804024()
{
  unsigned __int8 *v0;

  return sub_1BA80402C(*v0);
}

uint64_t sub_1BA80402C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA80405C + 4 * byte_1BB8FA020[a1]))(0x656D617266, 0xE500000000000000);
}

uint64_t sub_1BA80405C()
{
  return 0x62614C656C746974;
}

unint64_t sub_1BA804080()
{
  return 0xD000000000000013;
}

uint64_t sub_1BA8040E4()
{
  return 0x656956616964656DLL;
}

unint64_t sub_1BA804108()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1BA804120()
{
  return 0xD00000000000001BLL;
}

void sub_1BA804138()
{
  JUMPOUT(0x1BA80414CLL);
}

uint64_t getEnumTagSinglePayload for FormatImageNodeStyle.Selector(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t getEnumTagSinglePayload for GroupLayoutBindingContext.OrderedItemBinding(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatColorProcessor(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7A)
  {
    *(_QWORD *)result = a2 - 123;
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BA804238@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA804260(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA804260(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA804290 + 4 * byte_1BB8AE250[a1]))(0x7465736E69, 0xE500000000000000);
}

uint64_t sub_1BA804290()
{
  return 0x726F68636E61;
}

uint64_t sub_1BA8042A4()
{
  return 0x74657366666FLL;
}

uint64_t sub_1BA8042B8()
{
  return 0x747265766E69;
}

uint64_t sub_1BA8042CC()
{
  return 0x69577473756A6461;
}

uint64_t sub_1BA8042EC()
{
  return 0x65487473756A6461;
}

uint64_t sub_1BA80430C()
{
  return 0x68746469576E696DLL;
}

uint64_t sub_1BA804334()
{
  return 0x68676965486E696DLL;
}

uint64_t sub_1BA80435C()
{
  return 0x63657073416E696DLL;
}

uint64_t sub_1BA804380()
{
  return 0x796C7069746C756DLL;
}

uint64_t sub_1BA8043B8()
{
  return 0x657A69736572;
}

uint64_t sub_1BA8043CC()
{
  return 0x6E41657A69736572;
}

unint64_t sub_1BA8043EC()
{
  return 0xD000000000000012;
}

unint64_t sub_1BA80443C()
{
  return 0xD00000000000001ALL;
}

void sub_1BA804478()
{
  JUMPOUT(0x1BA80448CLL);
}

uint64_t sub_1BA804498()
{
  return 0x4C747865546E696DLL;
}

uint64_t sub_1BA8044C4()
{
  return 0x7274654D746E6F66;
}

uint64_t sub_1BA8044E0()
{
  return 0x726765746E496F6ELL;
}

uint64_t sub_1BA804500()
{
  return 0x6F426F5470696C63;
}

uint64_t sub_1BA804520()
{
  return 0x686374697773;
}

uint64_t sub_1BA804534()
{
  return 0x797274656D6F6567;
}

uint64_t sub_1BA80454C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t storeEnumTagSinglePayload for FormatComputedInvalidation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_WORD *)(result + 24) = (((-a2 >> 1) & 0x3F) - ((_WORD)a2 << 6)) << 9;
    }
  }
  return result;
}

uint64_t sub_1BA8045B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA6199FC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t storeEnumTagSinglePayload for FeedItemVisibility(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatImageResize(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA804654 + 4 * byte_1BB904221[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA804688 + 4 * byte_1BB90421C[v4]))();
}

uint64_t sub_1BA804688(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804690(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA804698);
  return result;
}

uint64_t sub_1BA8046A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8046ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA8046B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8046B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatImageRequestData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupKind()
{
  return &type metadata for FeedGroupKind;
}

uint64_t getEnumTagSinglePayload for FormatPropertyValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x72 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 114);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x72)
    v3 = -1;
  if (v3 + 1 >= 2)
    return v3;
  else
    return 0;
}

uint64_t getEnumTagSinglePayload for FormatOptionEnum(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatColorComponent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BA80481C + 4 * byte_1BB8E5881[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BA804850 + 4 * byte_1BB8E587C[v4]))();
}

uint64_t sub_1BA804850(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804858(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA804860);
  return result;
}

uint64_t sub_1BA80486C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA804874);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BA804878(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804880(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatColorComponent(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

NewsFeed::FormatColorComponent_optional sub_1BA80491C(Swift::String *a1)
{
  return FormatColorComponent.init(rawValue:)(*a1);
}

uint64_t storeEnumTagSinglePayload for FormatContentMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BA804974 + 4 * byte_1BB8FE6E7[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BA8049A8 + 4 * byte_1BB8FE6E2[v4]))();
}

uint64_t sub_1BA8049A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8049B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8049B8);
  return result;
}

uint64_t sub_1BA8049C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8049CCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BA8049D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8049D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatAccessibility(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BA804A30 + 4 * byte_1BB95895A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BA804A64 + 4 * byte_1BB958955[v4]))();
}

uint64_t sub_1BA804A64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804A6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA804A74);
  return result;
}

uint64_t sub_1BA804A80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA804A88);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BA804A8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804A94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804AA0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t storeEnumTagSinglePayload for FormatImageNodeRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedLayoutResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for FeedLayoutResult()
{
  return &type metadata for FeedLayoutResult;
}

double storeEnumTagSinglePayload for FormatBindingExpression(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 106) = 0;
    *(_WORD *)(a1 + 104) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 107) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 48) = (unint64_t)-a2 << 11;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      *(_OWORD *)(a1 + 88) = 0u;
      *(_DWORD *)(a1 + 103) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 107) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatBindingExpression(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 107))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48) >> 11;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t _s14descr1E7323649C4TextOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t _s14descr1E7323649C4TextOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14descr1E7323649C4TextO10CodingTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1BA804D0C + 4 * byte_1BB92DC0A[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1BA804D40 + 4 * byte_1BB92DC05[v4]))();
}

uint64_t sub_1BA804D40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804D48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA804D50);
  return result;
}

uint64_t sub_1BA804D5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA804D64);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1BA804D68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804D70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatFontTrait(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatAnchor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BA804E58 + 4 * byte_1BB8E7116[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BA804E8C + 4 * byte_1BB8E7111[v4]))();
}

uint64_t sub_1BA804E8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804E94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA804E9CLL);
  return result;
}

uint64_t sub_1BA804EA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA804EB0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BA804EB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804EBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatCorner(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BA804F14 + 4 * byte_1BB91E412[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BA804F48 + 4 * byte_1BB91E40D[v4]))();
}

uint64_t sub_1BA804F48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804F50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA804F58);
  return result;
}

uint64_t sub_1BA804F64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA804F6CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BA804F70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA804F78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

NewsFeed::FormatCorner_optional sub_1BA804F84(Swift::String *a1)
{
  return FormatCorner.init(rawValue:)(*a1);
}

uint64_t sub_1BA804F90()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA804FC0 + 4 * byte_1BB8AE4BB[*v0]))();
}

void sub_1BA804FC0(_QWORD *a1@<X8>)
{
  *a1 = 6775156;
  a1[1] = 0xE300000000000000;
}

void sub_1BA804FD4(_QWORD *a1@<X8>)
{
  *a1 = 0x6575737369;
  a1[1] = 0xE500000000000000;
}

void sub_1BA804FEC(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F6974706FLL;
  a1[1] = 0xE600000000000000;
}

void sub_1BA805004(_QWORD *a1@<X8>)
{
  *a1 = 0x70756F7267;
  a1[1] = 0xE500000000000000;
}

void sub_1BA80501C(_QWORD *a1@<X8>)
{
  *a1 = 0x76457374726F7073;
  a1[1] = 0xEB00000000746E65;
}

void sub_1BA805040(_QWORD *a1@<X8>)
{
  *a1 = 0x7954656C7A7A7570;
  a1[1] = 0xEA00000000006570;
}

uint64_t sub_1BA805060(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 240))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1BA8050BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA8050F0 + 4 * byte_1BB8F2960[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA8050F0()
{
  return 0x656469727265766FLL;
}

uint64_t sub_1BA805120()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BA805138()
{
  return 0x74616E7265746C61;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t block_destroy_helper_43()
{
  return swift_release();
}

uint64_t block_destroy_helper_44()
{
  return swift_release();
}

uint64_t block_destroy_helper_45()
{
  return swift_release();
}

uint64_t block_destroy_helper_46()
{
  return swift_release();
}

uint64_t block_destroy_helper_47()
{
  return swift_release();
}

uint64_t block_destroy_helper_48()
{
  return swift_release();
}

uint64_t block_destroy_helper_49()
{
  return swift_release();
}

uint64_t block_destroy_helper_50()
{
  return swift_release();
}

uint64_t block_destroy_helper_51()
{
  return swift_release();
}

uint64_t block_destroy_helper_52()
{
  return swift_release();
}

uint64_t block_destroy_helper_53()
{
  return swift_release();
}

uint64_t block_destroy_helper_54()
{
  return swift_release();
}

uint64_t block_destroy_helper_55()
{
  return swift_release();
}

uint64_t block_destroy_helper_56()
{
  return swift_release();
}

uint64_t block_destroy_helper_57()
{
  return swift_release();
}

uint64_t block_destroy_helper_58()
{
  return swift_release();
}

uint64_t block_destroy_helper_59()
{
  return swift_release();
}

uint64_t block_destroy_helper_60()
{
  return swift_release();
}

uint64_t block_destroy_helper_61()
{
  return swift_release();
}

uint64_t block_destroy_helper_62()
{
  return swift_release();
}

uint64_t block_destroy_helper_63()
{
  return swift_release();
}

uint64_t block_destroy_helper_64()
{
  return swift_release();
}

uint64_t block_destroy_helper_65()
{
  return swift_release();
}

uint64_t block_destroy_helper_66()
{
  return swift_release();
}

uint64_t block_destroy_helper_67()
{
  return swift_release();
}

uint64_t block_destroy_helper_68()
{
  return swift_release();
}

uint64_t block_destroy_helper_69()
{
  return swift_release();
}

uint64_t block_destroy_helper_70()
{
  return swift_release();
}

uint64_t block_destroy_helper_71()
{
  return swift_release();
}

uint64_t block_destroy_helper_72()
{
  return swift_release();
}

uint64_t block_destroy_helper_73()
{
  return swift_release();
}

uint64_t block_destroy_helper_74()
{
  return swift_release();
}

uint64_t block_destroy_helper_75()
{
  return swift_release();
}

uint64_t block_destroy_helper_76()
{
  return swift_release();
}

uint64_t block_destroy_helper_77()
{
  return swift_release();
}

uint64_t block_destroy_helper_78()
{
  return swift_release();
}

uint64_t block_destroy_helper_79()
{
  return swift_release();
}

uint64_t block_destroy_helper_80()
{
  return swift_release();
}

uint64_t block_destroy_helper_81()
{
  return swift_release();
}

uint64_t block_destroy_helper_82()
{
  return swift_release();
}

uint64_t block_destroy_helper_83()
{
  return swift_release();
}

uint64_t block_destroy_helper_84()
{
  return swift_release();
}

uint64_t block_destroy_helper_85()
{
  return swift_release();
}

uint64_t block_destroy_helper_86()
{
  return swift_release();
}

uint64_t block_destroy_helper_87()
{
  return swift_release();
}

uint64_t block_destroy_helper_88()
{
  return swift_release();
}

uint64_t block_destroy_helper_89()
{
  return swift_release();
}

uint64_t block_destroy_helper_90()
{
  return swift_release();
}

uint64_t block_destroy_helper_91()
{
  return swift_release();
}

uint64_t block_destroy_helper_92()
{
  return swift_release();
}

uint64_t block_destroy_helper_93()
{
  return swift_release();
}

uint64_t block_destroy_helper_94()
{
  return swift_release();
}

uint64_t block_destroy_helper_95()
{
  return swift_release();
}

uint64_t block_destroy_helper_96()
{
  return swift_release();
}

uint64_t block_destroy_helper_97()
{
  return swift_release();
}

uint64_t block_destroy_helper_98()
{
  return swift_release();
}

uint64_t block_destroy_helper_99()
{
  return swift_release();
}

uint64_t block_destroy_helper_100()
{
  return swift_release();
}

uint64_t block_destroy_helper_101()
{
  return swift_release();
}

uint64_t block_destroy_helper_102()
{
  return swift_release();
}

uint64_t block_destroy_helper_103()
{
  return swift_release();
}

uint64_t block_destroy_helper_104()
{
  return swift_release();
}

uint64_t block_destroy_helper_105()
{
  return swift_release();
}

uint64_t block_destroy_helper_106()
{
  return swift_release();
}

uint64_t block_destroy_helper_107()
{
  return swift_release();
}

uint64_t block_destroy_helper_108()
{
  return swift_release();
}

uint64_t block_destroy_helper_109()
{
  return swift_release();
}

uint64_t block_destroy_helper_110()
{
  return swift_release();
}

uint64_t block_destroy_helper_111()
{
  return swift_release();
}

uint64_t block_destroy_helper_112()
{
  return swift_release();
}

uint64_t block_destroy_helper_113()
{
  return swift_release();
}

uint64_t block_destroy_helper_114()
{
  return swift_release();
}

uint64_t block_destroy_helper_115()
{
  return swift_release();
}

uint64_t block_destroy_helper_116()
{
  return swift_release();
}

uint64_t block_destroy_helper_117()
{
  return swift_release();
}

uint64_t block_destroy_helper_118()
{
  return swift_release();
}

uint64_t block_destroy_helper_119()
{
  return swift_release();
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1BA805534@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA80555C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA80555C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA805598 + 4 * byte_1BB92DBB0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA805598()
{
  return 0x656C746974;
}

uint64_t sub_1BA8055AC()
{
  return 0x6D6F43656C746974;
}

uint64_t sub_1BA8055CC()
{
  return 0x446873696C627570;
}

uint64_t sub_1BA805600()
{
  return 0x74707265637865;
}

uint64_t sub_1BA805618()
{
  return 0x63784574726F6873;
}

uint64_t sub_1BA805638()
{
  return 0x614E726F68747561;
}

unint64_t sub_1BA805654()
{
  return 0xD000000000000015;
}

uint64_t sub_1BA805670()
{
  return 0x656873696C627570;
}

uint64_t sub_1BA805694()
{
  return 0x65726F736E6F7073;
}

uint64_t sub_1BA8056B4()
{
  return 0x70795479726F7473;
}

uint64_t getEnumTagSinglePayload for FormatAccessibilityRole(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
  {
    v6 = *a1;
    v7 = v6 >= 4;
    v8 = v6 - 4;
    if (!v7)
      v8 = -1;
    if (v8 + 1 < 2)
      v8 = 0;
    if (v8 >= 3)
      return v8 - 2;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 6;
    if (a2 + 6 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BA805808 + 4 * byte_1BB8ACE6C[v4]))();
  }
}

uint64_t getEnumTagSinglePayload for FormatItemTrait(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xCF)
    goto LABEL_17;
  if (a2 + 49 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 49) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 49;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 49;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 49;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x32;
  v8 = v6 - 50;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatColorAssignComponentProcessor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 6;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatContent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t destroy for FormatCornerRadius(uint64_t a1)
{
  return sub_1BA6F2B88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t storeEnumTagSinglePayload for FormatImageNodeStyle.Selector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatPropertyValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x71)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 114;
    if (a3 >= 0x72)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x72)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = ((8 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 4) | ((unint64_t)((8 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 4)) << 57)) & 0xF000000000000007;
  }
  return result;
}

uint64_t sub_1BA805A24@<X0>(char *a1@<X8>)
{
  return sub_1BA4E2654(a1);
}

uint64_t storeEnumTagSinglePayload for GroupLayoutBindingContext.OrderedItemBinding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatBackground(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x79 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 121);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x78)
    v3 = -1;
  return v3 + 1;
}

void sub_1BA805ADC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x71u)
    v6 = 113;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t storeEnumTagSinglePayload for FormatOptionEnum(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatBorder(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr1E7342C99C4BoolOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_1BA805DC4 + 4 * byte_1BB94E3B3[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_1BA805DF8 + 4 * byte_1BB94E3AE[v4]))();
}

uint64_t sub_1BA805DF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA805E00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA805E08);
  return result;
}

uint64_t sub_1BA805E14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA805E1CLL);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_1BA805E20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA805E28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatCornerRadius.Value(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatCornerRadius.Value(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BA805EBC(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a2);
}

uint64_t sub_1BA805ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return nullsub_1(a4);
}

uint64_t sub_1BA805EEC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA805F20 + 4 * byte_1BB8AE769[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA805F20()
{
  return 1702521203;
}

uint64_t sub_1BA805F30()
{
  return 0x656D7473756A6461;
}

uint64_t sub_1BA805F50()
{
  return 1885433183;
}

uint64_t storeEnumTagSinglePayload for FormatAndExpression(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x71)
  {
    *(_QWORD *)result = a2 - 114;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x72)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x72)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatAndExpression(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x72 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 114);
  v3 = ((*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x71)
    v3 = -1;
  return v3 + 1;
}

uint64_t getEnumTagSinglePayload for FormatContentSubgroup()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for FormatFontAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)(result + 33) = a2 + 4;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatSystemFont(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 66) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 66) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatSystemFont(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 66))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BA8060FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 121;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 120;
}

uint64_t sub_1BA80613C()
{
  char *v0;

  return sub_1BA53A9CC(*v0);
}

uint64_t storeEnumTagSinglePayload for FeedSlot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FeedSlot(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BA8061E0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6572707845736872;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x657270784573686CLL;
}

uint64_t sub_1BA806234(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 240) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 240) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatFontWeight(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BA806310 + 4 * byte_1BB8E92EE[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BA806344 + 4 * byte_1BB8E92E9[v4]))();
}

uint64_t sub_1BA806344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA80634C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA806354);
  return result;
}

uint64_t sub_1BA806360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA806368);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BA80636C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA806374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

NewsFeed::FormatFontWeight_optional sub_1BA806380(Swift::String *a1)
{
  return FormatFontWeight.init(rawValue:)(*a1);
}

uint64_t storeEnumTagSinglePayload for FormatImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x79)
  {
    *(_QWORD *)result = a2 - 122;
    if (a3 >= 0x7A)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7A)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatImage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7A && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 122);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x79)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatTextSize.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BA806484 + 4 * byte_1BB917670[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BA8064B8 + 4 * byte_1BB91766B[v4]))();
}

uint64_t sub_1BA8064B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8064C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8064C8);
  return result;
}

uint64_t sub_1BA8064D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8064DCLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BA8064E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8064E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupDecoration()
{
  return &type metadata for FeedGroupDecoration;
}

uint64_t storeEnumTagSinglePayload for FormatItemTrait(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 49 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 49) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xCF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xCE)
    return ((uint64_t (*)(void))((char *)&loc_1BA806558 + 4 * byte_1BB939127[v4]))();
  *a1 = a2 + 49;
  return ((uint64_t (*)(void))((char *)sub_1BA80658C + 4 * byte_1BB939122[v4]))();
}

uint64_t sub_1BA80658C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA806594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA80659CLL);
  return result;
}

uint64_t sub_1BA8065A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8065B0);
  *(_BYTE *)result = a2 + 49;
  return result;
}

uint64_t sub_1BA8065B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8065BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8065C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA8065F4 + 4 * byte_1BB8AE708[*v0]))();
}

void sub_1BA8065F4(_QWORD *a1@<X8>)
{
  *a1 = 0x746E656964617267;
  a1[1] = 0xE800000000000000;
}

void sub_1BA806610(char *a1@<X8>)
{
  strcpy(a1, "radialGradient");
  a1[15] = -18;
}

void sub_1BA806638(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x656E696873;
  a1[1] = v1;
}

uint64_t FeedGap.init(identifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)(a3 + 16) = 2;
  *(_QWORD *)(a3 + 24) = 0;
  *(_BYTE *)(a3 + 32) = 1;
  *(_QWORD *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = 0;
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_1BA806670()
{
  return 0x327374756F79616CLL;
}

uint64_t getEnumTagSinglePayload for SportsStandingDataVisualizationMetadata(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1BA8066E4()
{
  sub_1BA80676C();
  return sub_1BB872CD0();
}

uint64_t sub_1BA80672C()
{
  sub_1BA80676C();
  return sub_1BB872CDC();
}

unint64_t sub_1BA80676C()
{
  unint64_t result;

  result = qword_1ED3D2FB0;
  if (!qword_1ED3D2FB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for NewsEnvironment, &type metadata for NewsEnvironment);
    atomic_store(result, (unint64_t *)&qword_1ED3D2FB0);
  }
  return result;
}

uint64_t sub_1BA8067B0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA8067D8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA8067D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA80680C + 4 * byte_1BB8AE4EB[a1]))(0x646574696D696CLL, 0xE700000000000000);
}

uint64_t sub_1BA80680C()
{
  return 0x6D694C6172747865;
}

uint64_t sub_1BA80682C()
{
  return 0x6E6769737361;
}

uint64_t sub_1BA806840()
{
  return 0x796669646F6DLL;
}

uint64_t sub_1BA806854()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_1BA806874()
{
  return 0x6563616C706572;
}

uint64_t sub_1BA806888()
{
  return 0x646E656C62;
}

unint64_t sub_1BA80689C()
{
  return 0xD000000000000011;
}

uint64_t sub_1BA8068B8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BA8068E0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA8068E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA80691C + 4 * byte_1BB917662[a1]))(0x656C626978656C66, 0xEC00000074786554);
}

uint64_t sub_1BA80691C()
{
  return 1954047348;
}

uint64_t sub_1BA80692C()
{
  return 0x726568746FLL;
}

uint64_t sub_1BA806940()
{
  return 0x686374697773;
}

uint64_t sub_1BA806954()
{
  return 0x694C656C676E6973;
}

uint64_t sub_1BA806970()
{
  return 0x74786554746C61;
}

uint64_t sub_1BA806988()
{
  return 0x6978656C46746C61;
}

uint64_t sub_1BA8069AC()
{
  return 0x6C6F686563616C70;
}

unint64_t sub_1BA8069D0()
{
  return 0xD000000000000017;
}

uint64_t sub_1BA8069EC()
{
  unsigned __int8 *v0;

  return sub_1BA533E58(*v0);
}

uint64_t getEnumTagSinglePayload for FormatContentSlotItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for FormatTypeDefinition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_BYTE *)(result + 48) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatTypeDefinition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 48) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 48) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t getEnumTagSinglePayload for FormatBoolean(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatOptionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BA806B70 + 4 * byte_1BB94D6C1[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BA806BA4 + 4 * byte_1BB94D6BC[v4]))();
}

uint64_t sub_1BA806BA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA806BAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA806BB4);
  return result;
}

uint64_t sub_1BA806BC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA806BC8);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BA806BCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA806BD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatOperator(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

NewsFeed::FormatOptionType_optional sub_1BA806C70(Swift::String *a1)
{
  return FormatOptionType.init(rawValue:)(*a1);
}

uint64_t sub_1BA806C7C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA806CB0 + 4 * byte_1BB915CE0[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BA806CB0()
{
  return 1701667182;
}

uint64_t sub_1BA806CC0()
{
  return 0x6E6F69746361;
}

uint64_t sub_1BA806CD4()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BA806CEC()
{
  return 0x726F7463656C6573;
}

uint64_t storeEnumTagSinglePayload for SportsStandingDataVisualizationMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

