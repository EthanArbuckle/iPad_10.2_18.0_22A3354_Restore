uint64_t sub_1BA884794(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *i;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  BOOL v9;
  char v10;
  uint64_t result;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a2 + 64);
    for (i = (unsigned __int8 *)(a1 + 64); ; i += 40)
    {
      v5 = *((_QWORD *)i - 2);
      v6 = *i;
      v7 = *((_QWORD *)v3 - 2);
      v13 = *((_QWORD *)v3 - 1);
      v14 = *((_QWORD *)i - 1);
      v8 = *v3;
      v9 = *((_QWORD *)i - 4) == *((_QWORD *)v3 - 4) && *((_QWORD *)i - 3) == *((_QWORD *)v3 - 3);
      if (!v9 && (sub_1BB874398() & 1) == 0)
        return 0;
      swift_bridgeObjectRetain();
      sub_1BA79A788(v5);
      swift_bridgeObjectRetain();
      sub_1BA79A788(v7);
      v10 = sub_1BB76ADEC(v5, v7);
      swift_bridgeObjectRelease();
      sub_1BA7994F4(v7);
      swift_bridgeObjectRelease();
      sub_1BA7994F4(v5);
      if ((v10 & 1) == 0)
        return 0;
      if (v6 > 0xFD)
      {
        if (v8 <= 0xFD)
          return 0;
        goto LABEL_6;
      }
      if (v8 > 0xFD)
        return 0;
      if (!(v6 >> 6))
        break;
      if (v6 >> 6 == 1)
      {
        if ((v8 & 0xC0) != 0x40)
          return 0;
        goto LABEL_20;
      }
      v12 = v8 & 0xC0;
      result = 0;
      if (v14 | v6 ^ 0x80)
      {
        if (v12 != 128 || v13 != 1)
          return result;
      }
      else if (v12 != 128 || v13)
      {
        return result;
      }
      if (v8 != 128)
        return result;
LABEL_6:
      v3 += 40;
      if (!--v2)
        return 1;
    }
    if (v8 >= 0x40)
      return 0;
LABEL_20:
    if ((v6 & 1) != 0)
    {
      if ((v8 & 1) == 0)
        return 0;
    }
    else
    {
      result = 0;
      if ((v8 & 1) != 0 || v14 != v13)
        return result;
    }
    goto LABEL_6;
  }
  return 1;
}

uint64_t sub_1BA884954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  char v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  __int16 v58;
  __int16 v59;
  __int128 v60;
  __int128 v61;
  char v62;
  char v63;
  __int16 v64;
  __int16 v65;
  __int128 v66;
  __int128 v67;
  char v68;
  char v69;
  __int16 v70;
  __int16 v71;
  __int128 v72;
  __int128 v73;
  char v74;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t *v86;
  unint64_t *v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int16 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int16 v100;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unint64_t *)(a2 + 56);
  v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    v7 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *((unsigned __int8 *)v4 - 8);
    v9 = *v4;
    v10 = *(v3 - 3);
    v11 = *(v3 - 2);
    v92 = *((unsigned __int8 *)v3 - 8);
    v12 = *v3;
    v90 = v11;
    v91 = v6;
    v89 = *((_BYTE *)v4 - 8);
    v87 = v3;
    v88 = v2;
    v86 = v4;
    if (v89)
    {
      if (v8 == 1)
      {
        if (v92 != 1)
          goto LABEL_72;
        sub_1BA73B1CC(v7, v6, 1);
        swift_retain();
        sub_1BA73B1CC(v10, v11, 1);
        swift_retain();
        v13 = v11;
        v14 = v7;
        sub_1BA73B1B8(v7, v6, 1);
        sub_1BA73B1B8(v10, v13, 1);
        if (((((v7 & 1) == 0) ^ v10) & 1) == 0)
        {
          sub_1BA73B1B8(v10, v90, 1);
          swift_release();
          sub_1BA73B1B8(v7, v6, 1);
          goto LABEL_82;
        }
      }
      else
      {
        if (v92 != 2)
          goto LABEL_72;
        sub_1BA73B1CC(v7, v6, 2);
        swift_retain();
        sub_1BA73B1CC(v10, v11, 2);
        swift_retain();
        sub_1BA73B1B8(v7, v6, 2);
        sub_1BA73B1B8(v10, v11, 2);
        v14 = v7;
        if (v7 != v10)
        {
          sub_1BA73B1B8(v10, v90, 2);
          swift_release();
          v76 = v7;
          v77 = v6;
          v78 = 2;
LABEL_74:
          sub_1BA73B1B8(v76, v77, v78);
          goto LABEL_82;
        }
      }
    }
    else
    {
      if (*((_BYTE *)v3 - 8))
      {
        swift_bridgeObjectRetain();
LABEL_72:
        sub_1BA73B1CC(v10, v11, v92);
        sub_1BA73B1B8(v7, v6, v8);
        sub_1BA73B1B8(v10, v11, v92);
        return 0;
      }
      if (v7 == v10 && v6 == v11)
        v16 = 1;
      else
        v16 = sub_1BB874398();
      sub_1BA73B1CC(v7, v6, 0);
      swift_retain();
      sub_1BA73B1CC(v10, v11, 0);
      swift_retain();
      sub_1BA73B1CC(v10, v11, 0);
      sub_1BA73B1CC(v7, v6, 0);
      v17 = v11;
      v14 = v7;
      sub_1BA73B1B8(v7, v6, 0);
      sub_1BA73B1B8(v10, v17, 0);
      if ((v16 & 1) == 0)
      {
        sub_1BA73B1B8(v10, v90, 0);
        swift_release();
        v76 = v7;
        v77 = v6;
        v78 = 0;
        goto LABEL_74;
      }
    }
    if (!(v9 >> 62))
    {
      v18 = v14;
      if (v12 >> 62)
        goto LABEL_69;
      v58 = *(_WORD *)(v9 + 64);
      v59 = *(_WORD *)(v12 + 64);
      v60 = *(_OWORD *)(v9 + 32);
      v97 = *(_OWORD *)(v9 + 16);
      v98 = v60;
      v99 = *(_OWORD *)(v9 + 48);
      v100 = v58;
      v61 = *(_OWORD *)(v12 + 32);
      v93 = *(_OWORD *)(v12 + 16);
      v94 = v61;
      v95 = *(_OWORD *)(v12 + 48);
      v96 = v59;
      swift_retain();
      swift_retain();
      _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v97);
      v63 = v62;
      swift_release();
      swift_release();
      sub_1BA73B1B8(v10, v90, v92);
      swift_release();
      sub_1BA73B1B8(v14, v6, v89);
LABEL_48:
      swift_release();
      if ((v63 & 1) == 0)
        return 0;
      goto LABEL_6;
    }
    v18 = v14;
    v19 = v12 >> 62;
    if (v9 >> 62 != 1)
    {
      if (v19 != 2)
      {
LABEL_69:
        sub_1BA73B1B8(v10, v90, v92);
        swift_release();
        sub_1BA73B1B8(v18, v6, v89);
        goto LABEL_82;
      }
      if (*(_QWORD *)(v9 + 16) != *(_QWORD *)(v12 + 16) || *(_QWORD *)(v9 + 24) != *(_QWORD *)(v12 + 24))
      {
        v5 = sub_1BB874398();
        sub_1BA73B1B8(v10, v90, v92);
        swift_release();
        sub_1BA73B1B8(v14, v91, v89);
        swift_release();
        if ((v5 & 1) == 0)
          return 0;
        goto LABEL_6;
      }
      v56 = v90;
      v57 = v89;
      goto LABEL_67;
    }
    if (v19 != 1)
      goto LABEL_69;
    v84 = v14;
    v21 = *(_QWORD *)(v9 + 16);
    v20 = *(_QWORD *)(v9 + 24);
    v22 = *(_QWORD *)(v9 + 32);
    v23 = *(_QWORD *)(v12 + 16);
    v24 = *(_QWORD *)(v12 + 24);
    v25 = *(_QWORD *)(v12 + 32);
    v26 = *(_QWORD *)(v21 + 32);
    v27 = *(_BYTE *)(v21 + 40);
    v28 = *(_BYTE *)(v21 + 41);
    v29 = *(_QWORD *)(v23 + 32);
    v30 = *(_BYTE *)(v23 + 40);
    v31 = *(_BYTE *)(v23 + 41);
    v97 = *(_OWORD *)(v21 + 16);
    *(_QWORD *)&v98 = v26;
    BYTE8(v98) = v27;
    BYTE9(v98) = v28;
    v93 = *(_OWORD *)(v23 + 16);
    *(_QWORD *)&v94 = v29;
    BYTE8(v94) = v30;
    BYTE9(v94) = v31;
    v85 = (_QWORD *)(v25 & 0x3FFFFFFFFFFFFFFFLL);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if ((static FormatCommandBinding.== infix(_:_:)(&v97, &v93) & 1) == 0 || (sub_1BA884954(v20, v24) & 1) == 0)
    {
LABEL_70:
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BA73B1B8(v10, v90, v92);
      swift_release();
      sub_1BA73B1B8(v84, v91, v89);
      goto LABEL_82;
    }
    if (!(v22 >> 62))
    {
      if (v25 >> 62)
        goto LABEL_70;
      v64 = *(_WORD *)(v22 + 64);
      v65 = *(_WORD *)(v25 + 64);
      v66 = *(_OWORD *)(v22 + 32);
      v97 = *(_OWORD *)(v22 + 16);
      v98 = v66;
      v99 = *(_OWORD *)(v22 + 48);
      v100 = v64;
      v67 = *(_OWORD *)(v25 + 32);
      v93 = *(_OWORD *)(v25 + 16);
      v94 = v67;
      v95 = *(_OWORD *)(v25 + 48);
      v96 = v65;
      swift_retain();
      swift_retain();
      _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v97);
      v63 = v68;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release_n();
      swift_release_n();
      sub_1BA73B1B8(v10, v90, v92);
      swift_release();
      sub_1BA73B1B8(v84, v91, v89);
      goto LABEL_48;
    }
    v32 = v25 >> 62;
    if (v22 >> 62 == 1)
      break;
    if (v32 != 2)
      goto LABEL_70;
    if (*(_QWORD *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) == *(_QWORD *)((v25 & 0x3FFFFFFFFFFFFFFFLL) + 0x10)
      && *(_QWORD *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == *(_QWORD *)((v25 & 0x3FFFFFFFFFFFFFFFLL) + 0x18))
    {
      v69 = 1;
    }
    else
    {
      v69 = sub_1BB874398();
    }
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA73B1B8(v10, v90, v92);
    swift_release();
    sub_1BA73B1B8(v84, v91, v89);
    swift_release();
    if ((v69 & 1) == 0)
      return 0;
LABEL_6:
    v3 = v87 + 4;
    v4 = v86 + 4;
    v2 = v88 - 1;
    if (v88 == 1)
      return 1;
  }
  if (v32 != 1)
    goto LABEL_70;
  v33 = *(_QWORD *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  v83 = *(_QWORD *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  v34 = *(_QWORD *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  v35 = v85[2];
  v36 = v85[3];
  v37 = v85[4];
  v38 = *(_QWORD *)(v33 + 32);
  v39 = *(_BYTE *)(v33 + 40);
  v40 = *(_BYTE *)(v33 + 41);
  v41 = *(_QWORD *)(v35 + 32);
  v42 = *(_BYTE *)(v35 + 40);
  v43 = *(_BYTE *)(v35 + 41);
  v97 = *(_OWORD *)(v33 + 16);
  *(_QWORD *)&v98 = v38;
  BYTE8(v98) = v39;
  BYTE9(v98) = v40;
  v93 = *(_OWORD *)(v35 + 16);
  *(_QWORD *)&v94 = v41;
  BYTE8(v94) = v42;
  BYTE9(v94) = v43;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if ((static FormatCommandBinding.== infix(_:_:)(&v97, &v93) & 1) == 0 || (sub_1BA884954(v83, v36) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v56 = v90;
    v6 = v91;
    v18 = v84;
    v57 = v89;
    goto LABEL_80;
  }
  v44 = v37 >> 62;
  if (!(v34 >> 62))
  {
    if (v44)
      goto LABEL_76;
    v70 = *(_WORD *)(v34 + 64);
    v71 = *(_WORD *)(v37 + 64);
    v72 = *(_OWORD *)(v34 + 32);
    v97 = *(_OWORD *)(v34 + 16);
    v98 = v72;
    v99 = *(_OWORD *)(v34 + 48);
    v100 = v70;
    v73 = *(_OWORD *)(v37 + 32);
    v93 = *(_OWORD *)(v37 + 16);
    v94 = v73;
    v95 = *(_OWORD *)(v37 + 48);
    v96 = v71;
    swift_retain();
    swift_retain();
    _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v97);
    v82 = v74;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release_n();
    v56 = v90;
    v6 = v91;
    v18 = v84;
    goto LABEL_65;
  }
  if (v34 >> 62 != 1)
  {
    if (v44 != 2)
    {
LABEL_76:
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release_n();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v56 = v90;
      v6 = v91;
      v18 = v84;
      goto LABEL_79;
    }
    if (*(_QWORD *)((v34 & 0x3FFFFFFFFFFFFFFFLL) + 0x10) == *(_QWORD *)((v37 & 0x3FFFFFFFFFFFFFFFLL) + 0x10)
      && *(_QWORD *)((v34 & 0x3FFFFFFFFFFFFFFFLL) + 0x18) == *(_QWORD *)((v37 & 0x3FFFFFFFFFFFFFFFLL) + 0x18))
    {
      v82 = 1;
    }
    else
    {
      v82 = sub_1BB874398();
    }
    v56 = v90;
    v6 = v91;
    v18 = v84;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_65:
    v57 = v89;
    if ((v82 & 1) == 0)
      goto LABEL_81;
LABEL_66:
    swift_release();
    swift_release();
LABEL_67:
    sub_1BA73B1B8(v10, v56, v92);
    swift_release();
    sub_1BA73B1B8(v18, v6, v57);
    swift_release();
    goto LABEL_6;
  }
  if (v44 != 1)
    goto LABEL_76;
  v45 = *(_QWORD *)((v34 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  v81 = *(_QWORD *)((v34 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  v46 = *(_QWORD *)((v34 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  v48 = *(_QWORD *)((v37 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  v47 = *(_QWORD *)((v37 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  v49 = *(_QWORD *)((v37 & 0x3FFFFFFFFFFFFFFFLL) + 0x20);
  v50 = *(_QWORD *)(v45 + 32);
  v51 = *(_BYTE *)(v45 + 40);
  v52 = *(_BYTE *)(v45 + 41);
  v53 = *(_QWORD *)(v48 + 32);
  v54 = *(_BYTE *)(v48 + 40);
  v55 = *(_BYTE *)(v48 + 41);
  v97 = *(_OWORD *)(v45 + 16);
  *(_QWORD *)&v98 = v50;
  BYTE8(v98) = v51;
  BYTE9(v98) = v52;
  v93 = *(_OWORD *)(v48 + 16);
  *(_QWORD *)&v94 = v53;
  BYTE8(v94) = v54;
  v79 = v46;
  BYTE9(v94) = v55;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if ((static FormatCommandBinding.== infix(_:_:)(&v97, &v93) & 1) != 0 && (sub_1BA884954(v81, v47) & 1) != 0)
  {
    *(_QWORD *)&v97 = v79;
    *(_QWORD *)&v93 = v49;
    v80 = static FormatAccessibilityContent.== infix(_:_:)(&v97, &v93);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v56 = v90;
    v6 = v91;
    v18 = v84;
    if ((v80 & 1) == 0)
      goto LABEL_78;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release_n();
    swift_release_n();
    v57 = v89;
    goto LABEL_66;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v56 = v90;
  v6 = v91;
  v18 = v84;
LABEL_78:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  swift_release();
LABEL_79:
  v57 = v89;
LABEL_80:
  swift_release();
LABEL_81:
  swift_release();
  swift_release();
  sub_1BA73B1B8(v10, v56, v92);
  swift_release();
  sub_1BA73B1B8(v18, v6, v57);
LABEL_82:
  swift_release();
  return 0;
}

uint64_t sub_1BA88579C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  BOOL v19;
  _OWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _OWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v7 = *(_OWORD *)(a1 + v5 + 48);
        v8 = *(_QWORD *)(a1 + v5 + 64);
        v9 = *(_QWORD *)(a1 + v5 + 72);
        v10 = *(_BYTE *)(a1 + v5 + 80);
        v11 = *(_QWORD *)(a1 + v5 + 120);
        v28[0] = *(_OWORD *)(a1 + v5 + 32);
        v28[1] = v7;
        v29 = v8;
        v30 = v9;
        v31 = v10;
        v32 = *(_OWORD *)(a1 + v5 + 88);
        v33 = *(_OWORD *)(a1 + v5 + 104);
        v34 = v11;
        v12 = *(_OWORD *)(a2 + v5 + 48);
        v13 = *(_QWORD *)(a2 + v5 + 64);
        v14 = *(_QWORD *)(a2 + v5 + 72);
        v15 = *(_BYTE *)(a2 + v5 + 80);
        v16 = *(_QWORD *)(a2 + v5 + 120);
        v21[0] = *(_OWORD *)(a2 + v5 + 32);
        v21[1] = v12;
        v22 = v13;
        v23 = v14;
        v24 = v15;
        v25 = *(_OWORD *)(a2 + v5 + 88);
        v26 = *(_OWORD *)(a2 + v5 + 104);
        v27 = v16;
        v17 = sub_1BB43A6C0((uint64_t)v28, (uint64_t)v21);
        v19 = v6-- != 0;
        if ((v17 & 1) == 0)
          break;
        v5 += 96;
      }
      while (v19);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1BA885898(uint64_t a1, uint64_t a2)
{
  return sub_1BA8884F4(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *))static FormatLayeredMediaNodeContent.== infix(_:_:), (uint64_t (*)(uint64_t, uint64_t))sub_1BA885898);
}

uint64_t sub_1BA8858AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  BOOL v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_QWORD *)(a1 + 40);
    for (i = (_QWORD *)(a2 + 40); ; i += 2)
    {
      v5 = *(v3 - 1) == *(i - 1) && *v3 == *i;
      if (!v5 && (sub_1BB874398() & 1) == 0)
        break;
      v3 += 2;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1BA885930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  char v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a1 + 32);
    v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      v7 = *v3++;
      v6 = v7;
      v9 = *v4++;
      v8 = v9;
      if (v6 == 1)
        v10 = 6578544;
      else
        v10 = 6513005;
      if (v6)
        v11 = v10;
      else
        v11 = 0x656E6F6870;
      if (v6)
        v12 = 0xE300000000000000;
      else
        v12 = 0xE500000000000000;
      if (v8 == 1)
        v13 = 6578544;
      else
        v13 = 6513005;
      if (v8)
        v14 = v13;
      else
        v14 = 0x656E6F6870;
      if (v8)
        v15 = 0xE300000000000000;
      else
        v15 = 0xE500000000000000;
      if (v11 == v14 && v12 == v15)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v5 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0)
          return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1BA885A54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_BYTE *)(a1 + 32);
    v4 = (_BYTE *)(a2 + 32);
    do
    {
      if (*v3)
        v5 = 0x746C7561666564;
      else
        v5 = 1685217635;
      if (*v3)
        v6 = 0xE700000000000000;
      else
        v6 = 0xE400000000000000;
      if (*v4)
        v7 = 0x746C7561666564;
      else
        v7 = 1685217635;
      if (*v4)
        v8 = 0xE700000000000000;
      else
        v8 = 0xE400000000000000;
      if (v5 == v7 && v6 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v10 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
          return 0;
      }
      ++v3;
      ++v4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1BA885B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

uint64_t sub_1BA885DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (_QWORD *)(a2 + 40);
  for (i = (uint64_t *)(a1 + 40); ; i += 2)
  {
    v9 = *i;
    v10 = *(v3 - 1);
    v11 = *v3;
    v66 = *(i - 1);
    v65 = v10;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    static FormatExpression.== infix(_:_:)((uint64_t)&v66);
    if ((v12 & 1) == 0)
    {
LABEL_56:
      swift_release();
      swift_release();
      swift_release();
LABEL_60:
      swift_release();
      return 0;
    }
    if ((v9 & 0x8000000000000000) == 0)
      break;
    if ((v11 & 0x8000000000000000) == 0)
      goto LABEL_56;
    v7 = *(_QWORD *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    v64 = *(_QWORD *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    v22 = *(_QWORD *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    v23 = *(unsigned __int8 *)((v9 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    v24 = *(_QWORD *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
    v25 = *(_QWORD *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
    v61 = *(_QWORD *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
    v62 = v22;
    v26 = *(unsigned __int8 *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
    if (!v23)
    {
      v27 = v7;
      if (v26)
        goto LABEL_64;
      swift_retain();
      swift_retain();
      v28 = v64;
      sub_1BA896AE4(v64, v27, v62, 0);
      sub_1BA896AE4(v24, v25, v61, 0);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release_n();
      goto LABEL_34;
    }
    if (v23 == 1)
    {
      v27 = v7;
      if (v26 != 1)
        goto LABEL_64;
      swift_retain();
      swift_retain();
      v28 = v64;
      sub_1BA896AE4(v64, v27, v62, 1);
      sub_1BA896AE4(v24, v25, v61, 1);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release_n();
      if ((v64 & 0x80) == 0)
      {
        if ((v24 & 0x80) != 0)
          return 0;
LABEL_34:
        if (v24 != v28)
          return 0;
        goto LABEL_7;
      }
      if ((v24 & 0x80) == 0 || ((v24 ^ v64) & 1) != 0)
        return 0;
    }
    else
    {
      if (v26 != 2)
      {
        v27 = v7;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_64:
        swift_retain();
        swift_retain();
        sub_1BA896AAC(v24, v25, v61, v26);
        sub_1BA896AE4(v64, v27, v62, v23);
        v52 = v24;
        v53 = v25;
        v54 = v61;
        v55 = v26;
        goto LABEL_65;
      }
      v41 = v24;
      if (v64 != v24 || v7 != v25)
      {
        v5 = v7;
        v6 = sub_1BB874398();
        v7 = v5;
        if ((v6 & 1) == 0)
        {
          swift_retain();
          swift_retain();
          sub_1BA896AAC(v41, v25, v61, 2);
          sub_1BA896AAC(v64, v5, v62, 2);
          sub_1BA896AE4(v64, v5, v62, 2);
          v52 = v41;
          v53 = v25;
          v54 = v61;
          v55 = 2;
LABEL_65:
          sub_1BA896AE4(v52, v53, v54, v55);
          swift_release();
          swift_release();
          swift_release_n();
          goto LABEL_68;
        }
      }
      v8 = v7;
      sub_1BA896AAC(v41, v25, v61, 2);
      sub_1BA896AAC(v64, v8, v62, 2);
      swift_retain();
      swift_retain();
      sub_1BA896AAC(v41, v25, v61, 2);
      sub_1BA896AAC(v64, v8, v62, 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v59 = sub_1BA8869D0(v62, v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA896AE4(v64, v8, v62, 2);
      sub_1BA896AE4(v41, v25, v61, 2);
      sub_1BA896AE4(v41, v25, v61, 2);
      sub_1BA896AE4(v64, v8, v62, 2);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release_n();
      if ((v59 & 1) == 0)
        return 0;
    }
LABEL_7:
    v3 += 2;
    if (!--v2)
      return 1;
  }
  if (v11 < 0)
    goto LABEL_56;
  v60 = v2;
  v58 = v3;
  v13 = *(_QWORD *)(v9 + 16);
  v14 = *(_QWORD *)(v9 + 24);
  v15 = *(_QWORD *)(v11 + 16);
  v16 = *(_QWORD *)(v11 + 24);
  v63 = v16 & 0x7FFFFFFFFFFFFFFFLL;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if ((sub_1BA885DEC(v13, v15) & 1) == 0)
  {
LABEL_57:
    swift_release();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    if (v16 < 0)
      goto LABEL_57;
    v18 = *(_QWORD *)(v14 + 16);
    v17 = *(_QWORD *)(v14 + 24);
    v20 = *(_QWORD *)(v16 + 16);
    v19 = *(_QWORD *)(v16 + 24);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    if ((sub_1BA885DEC(v18, v20) & 1) == 0)
    {
      swift_release();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_59:
      swift_release();
      goto LABEL_60;
    }
    v66 = v17;
    v65 = v19;
    v21 = static FormatVideoPlayerContent.== infix(_:_:)(&v66, &v65);
    swift_release();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
      goto LABEL_59;
    swift_release();
    swift_release();
    v2 = v60;
    goto LABEL_7;
  }
  if ((v16 & 0x8000000000000000) == 0)
    goto LABEL_57;
  v29 = *(_QWORD *)((v14 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
  v30 = *(_QWORD *)((v14 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
  v31 = *(_QWORD *)((v14 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
  v32 = *(unsigned __int8 *)((v14 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
  v33 = *(_QWORD *)((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
  v34 = *(_QWORD *)((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
  v35 = *(_QWORD *)((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x20);
  v36 = *(unsigned __int8 *)((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x28);
  if (!v32)
  {
    v37 = v30;
    v38 = *(_QWORD *)(v63 + 32);
    v39 = *(_QWORD *)(v63 + 16);
    if (*(_BYTE *)(v63 + 40))
      goto LABEL_67;
    v42 = v29;
    swift_retain();
    swift_retain();
    sub_1BA896AE4(v42, v37, v31, 0);
    sub_1BA896AE4(v39, v34, v38, 0);
    swift_release();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    v3 = v58;
    if (v39 != v42)
      return 0;
    goto LABEL_7;
  }
  if (v32 == 1)
  {
    v37 = v30;
    v38 = *(_QWORD *)(v63 + 32);
    v39 = *(_QWORD *)(v63 + 16);
    if (v36 != 1)
      goto LABEL_67;
    v40 = v29;
    swift_retain();
    swift_retain();
    sub_1BA896AE4(v40, v37, v31, 1);
    sub_1BA896AE4(v39, v34, v38, 1);
    swift_release();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    if ((v40 & 0x80) != 0)
    {
      v3 = v58;
      if ((v39 & 0x80) == 0 || ((v39 ^ v40) & 1) != 0)
        return 0;
    }
    else
    {
      v3 = v58;
      if ((v39 & 0x80) != 0 || v39 != v40)
        return 0;
    }
    goto LABEL_7;
  }
  if (v36 == 2)
  {
    v43 = v29;
    if (v29 != v33 || v30 != v34)
    {
      v44 = v30;
      v45 = *(_QWORD *)(v63 + 16);
      v46 = sub_1BB874398();
      v30 = v44;
      v33 = v45;
      if ((v46 & 1) == 0)
      {
        swift_retain();
        swift_retain();
        sub_1BA896AAC(v45, v34, v35, 2);
        sub_1BA896AAC(v43, v44, v31, 2);
        sub_1BA896AE4(v43, v44, v31, 2);
        sub_1BA896AE4(v45, v34, v35, 2);
        swift_release();
        swift_release();
        swift_release_n();
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        goto LABEL_68;
      }
    }
    v47 = v30;
    v48 = v33;
    sub_1BA896AAC(v33, v34, v35, 2);
    sub_1BA896AAC(v43, v47, v31, 2);
    swift_retain();
    swift_retain();
    sub_1BA896AAC(v48, v34, v35, 2);
    sub_1BA896AAC(v43, v47, v31, 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v49 = v35;
    v50 = sub_1BA8869D0(v31, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA896AE4(v43, v47, v31, 2);
    sub_1BA896AE4(v48, v34, v49, 2);
    sub_1BA896AE4(v48, v34, v49, 2);
    sub_1BA896AE4(v43, v47, v31, 2);
    swift_release();
    swift_release();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    v3 = v58;
    v2 = v60;
    if ((v50 & 1) == 0)
      return 0;
    goto LABEL_7;
  }
  v38 = *(_QWORD *)(v63 + 32);
  v39 = *(_QWORD *)(v63 + 16);
  v56 = v29;
  v37 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v56;
LABEL_67:
  v57 = v29;
  swift_retain();
  swift_retain();
  sub_1BA896AAC(v39, v34, v38, v36);
  sub_1BA896AE4(v57, v37, v31, v32);
  sub_1BA896AE4(v39, v34, v38, v36);
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release_n();
LABEL_68:
  swift_release_n();
  return 0;
}

uint64_t sub_1BA8869D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = 0;
  v4 = a1 + 32;
  v5 = a2 + 32;
  while (1)
  {
    v6 = *(_QWORD *)(v4 + 8 * v3);
    v7 = *(_QWORD *)(v5 + 8 * v3);
    if (v6)
      break;
    if (v7)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      return 0;
    }
    swift_bridgeObjectRelease_n();
LABEL_5:
    if (++v3 == v2)
      return 1;
  }
  if (!v7)
    goto LABEL_29;
  v8 = *(_QWORD *)(v6 + 16);
  if (v8 != *(_QWORD *)(v7 + 16))
    return 0;
  if (v8)
    v9 = v6 == v7;
  else
    v9 = 1;
  if (v9)
    goto LABEL_5;
  v10 = (uint64_t *)(v7 + 48);
  v11 = (uint64_t *)(v6 + 48);
  while (1)
  {
    v12 = *v11;
    v13 = *v10;
    v14 = *(v11 - 2) == *(v10 - 2) && *(v11 - 1) == *(v10 - 1);
    if (!v14 && (sub_1BB874398() & 1) == 0)
      return 0;
    v15 = *(_QWORD *)(v12 + 16) == *(_QWORD *)(v13 + 16) && *(_QWORD *)(v12 + 24) == *(_QWORD *)(v13 + 24);
    if (!v15 && (sub_1BB874398() & 1) == 0)
      return 0;
    v10 += 3;
    v11 += 3;
    if (!--v8)
      goto LABEL_5;
  }
}

uint64_t sub_1BA886B00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  _QWORD v37[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (uint64_t *)(a2 + 48);
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *v4;
      v6 = *v3;
      v7 = *(v4 - 2) == *(v3 - 2) && *(v4 - 1) == *(v3 - 1);
      if (!v7 && (sub_1BB874398() & 1) == 0)
        return 0;
      if (v5 < 0)
      {
        if ((v6 & 0x8000000000000000) == 0)
          return 0;
        v35 = v2;
        v9 = *(_QWORD *)(v5 + 16);
        v8 = *(_QWORD *)(v5 + 24);
        v11 = *(_QWORD *)(v6 + 16);
        v10 = *(_QWORD *)(v6 + 24);
        if (v9 < 0)
        {
          if ((v11 & 0x8000000000000000) == 0)
          {
            swift_retain();
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_release();
            swift_release();
            goto LABEL_51;
          }
          v34 = v8;
          v33 = v10;
          v12 = *(_QWORD *)(v9 + 16);
          v32 = *(_QWORD *)(v9 + 24);
          v14 = *(_QWORD *)(v11 + 16);
          v13 = *(_QWORD *)(v11 + 24);
          if (v12 < 0)
          {
            if ((v14 & 0x8000000000000000) == 0)
            {
              swift_retain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_release();
              goto LABEL_49;
            }
            v16 = *(_QWORD *)(v12 + 16);
            v31 = *(_QWORD *)(v12 + 24);
            v17 = *(_QWORD *)(v14 + 16);
            v18 = *(_QWORD *)(v14 + 24);
            v30 = v13;
            if (v16 < 0)
            {
              if ((v17 & 0x8000000000000000) == 0)
              {
                swift_retain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_release();
                goto LABEL_45;
              }
              v20 = *(_QWORD *)(v16 + 24);
              v21 = *(_QWORD *)((v16 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
              v22 = *(_QWORD *)(v17 + 16);
              v23 = *(_QWORD *)(v17 + 24);
              v37[0] = v21;
              v37[1] = v20;
              v36[0] = v22;
              v36[1] = v23;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              v29 = v18;
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              if ((static FormatPuzzleEmbedNodeContent.== infix(_:_:)(v37, v36) & 1) == 0)
              {
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_48;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v24 = sub_1BA886B00(v20, v23);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              if ((v24 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
LABEL_48:
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_bridgeObjectRelease();
LABEL_49:
                swift_release();
                goto LABEL_50;
              }
              v19 = v31;
              v18 = v29;
            }
            else
            {
              if (v17 < 0)
              {
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_retain();
                swift_bridgeObjectRetain();
                swift_retain();
LABEL_45:
                swift_release();
                goto LABEL_48;
              }
              swift_bridgeObjectRetain();
              swift_retain();
              swift_retain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              v19 = v31;
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v25 = sub_1BA886B00(v19, v18);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            if ((v25 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
LABEL_50:
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_51;
            }
            v15 = v32;
            v13 = v30;
          }
          else
          {
            if (v14 < 0)
            {
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              goto LABEL_49;
            }
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            v15 = v32;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v26 = sub_1BA886B00(v15, v13);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          if ((v26 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_release_n();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_51;
          }
          v8 = v34;
          v10 = v33;
        }
        else
        {
          if (v11 < 0)
          {
            swift_retain();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_release();
LABEL_51:
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain_n();
          swift_retain_n();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27 = sub_1BA886B00(v8, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        v2 = v35;
        if ((v27 & 1) == 0)
          return 0;
      }
      else if (v6 < 0)
      {
        return 0;
      }
      v3 += 3;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return 1;
}

void sub_1BA8874A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v38;
  char v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16) || !v2 || a1 == a2)
    return;
  v3 = 0;
  v4 = a1 + 32;
  v5 = a2 + 32;
  while (1)
  {
    v6 = (_QWORD *)(v4 + 24 * v3);
    v7 = v6[1];
    v8 = v6[2];
    v9 = (_QWORD *)(v5 + 24 * v3);
    v10 = v9[2];
    v11 = *v6 == *v9 && v7 == v9[1];
    if (!v11 && (sub_1BB874398() & 1) == 0)
      return;
    v12 = *(_QWORD *)(v8 + 16);
    if (v12 != *(_QWORD *)(v10 + 16))
      return;
    if (v12 && v8 != v10)
      break;
LABEL_16:
    if (++v3 == v2)
      return;
  }
  v50 = v10 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = 0;
  v47 = v3;
  v48 = v2;
  v45 = v5;
  v46 = v4;
  v44 = v12;
  while (1)
  {
    if (v14 >= *(_QWORD *)(v10 + 16))
      goto LABEL_71;
    v15 = (uint64_t *)(v8 + 32 + 48 * v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = v15[2];
    v55 = v15[3];
    v52 = v15[4];
    v53 = v15[5];
    v51 = v14;
    v19 = (_QWORD *)(v50 + 48 * v14);
    v20 = v19[2];
    v21 = v19[3];
    v22 = v19[5];
    v54 = v19[4];
    v23 = v16 == *v19 && v17 == v19[1];
    if (!v23 && (sub_1BB874398() & 1) == 0)
      goto LABEL_60;
    v24 = *(_QWORD *)(v18 + 16);
    if (v24 != *(_QWORD *)(v20 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_63:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_64;
    }
    if (v24)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18 != v20)
      {
        v43 = v7;
        v49 = v10;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42 = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = 0;
        while (1)
        {
          v26 = *(_QWORD *)(v18 + v25 + 48);
          v27 = v20;
          v28 = v20 + v25;
          v29 = *(_QWORD *)(v20 + v25 + 32);
          v30 = *(_QWORD *)(v20 + v25 + 40);
          v31 = *(_QWORD *)(v28 + 48);
          v32 = *(_QWORD *)(v18 + v25 + 32) == v29 && *(_QWORD *)(v18 + v25 + 40) == v30;
          if (!v32 && (sub_1BB874398() & 1) == 0)
            break;
          v33 = v31 & 0xF000000000000007;
          if ((~v26 & 0xF000000000000007) != 0)
          {
            if (v33 == 0xF000000000000007)
            {
LABEL_61:
              sub_1BA5E7FF4(v26);
              sub_1BA5E7FF4(v31);
              sub_1BA5E800C(v26);
              sub_1BA5E800C(v31);
              break;
            }
            v56 = v31;
            v57[0] = v26;
            sub_1BA5E7FF4(v31);
            sub_1BA5E7FF4(v26);
            sub_1BA5E7FF4(v31);
            sub_1BA5E7FF4(v26);
            sub_1BA5E7FF4(v26);
            sub_1BA5E7FF4(v31);
            swift_bridgeObjectRetain();
            sub_1BA5E7FF4(v26);
            swift_bridgeObjectRetain();
            sub_1BA5E7FF4(v31);
            v34 = static FormatOptionValue.== infix(_:_:)(v57, (unint64_t *)&v56);
            sub_1BA5E800C(v26);
            sub_1BA5E800C(v31);
            sub_1BA5E800C(v31);
            sub_1BA5E800C(v26);
            sub_1BA5E800C(v31);
            sub_1BA5E800C(v26);
            swift_bridgeObjectRelease();
            sub_1BA5E800C(v31);
            swift_bridgeObjectRelease();
            sub_1BA5E800C(v26);
            if ((v34 & 1) == 0)
              break;
          }
          else
          {
            if (v33 != 0xF000000000000007)
              goto LABEL_61;
            sub_1BA5E800C(v26);
            sub_1BA5E800C(v31);
          }
          v25 += 24;
          --v24;
          v20 = v27;
          if (!v24)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v10 = v49;
            v7 = v43;
            v22 = v42;
            goto LABEL_43;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_63;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_43:
      v35 = v55;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v36 = *(_QWORD *)(v35 + 16);
    if (v36 != *(_QWORD *)(v21 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_60:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_64:
      swift_bridgeObjectRelease();
      return;
    }
    if (v36 && v35 != v21)
      break;
LABEL_54:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = sub_1BA887CA8(v52, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v40 & 1) == 0)
      goto LABEL_63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = sub_1BA6EB330(v53, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    if ((v41 & 1) == 0)
      goto LABEL_60;
    v14 = v51 + 1;
    v5 = v45;
    v3 = v47;
    v2 = v48;
    v4 = v46;
    if (v51 + 1 == v44)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = 0;
  while (1)
  {
    v57[0] = *(_QWORD *)(v55 + 8 * v38 + 32);
    if (v38 >= *(_QWORD *)(v21 + 16))
      break;
    v56 = *(_QWORD *)(v21 + 8 * v38 + 32);
    static FormatSlotTransform.== infix(_:_:)((uint64_t)v57);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_60;
    }
    if (v36 == ++v38)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_71:
  __break(1u);
}

uint64_t sub_1BA887CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = type metadata accessor for FormatContentSlotItemObject();
  v48 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - v8;
  v10 = type metadata accessor for FormatContentSlotItem();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v37 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v17 || a1 == a2)
    return 1;
  v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v46 = a2 + v18;
  v47 = a1 + v18;
  v19 = 0;
  v45 = *(_QWORD *)(v14 + 72);
  v41 = v10;
  v42 = (char *)&v37 - v15;
  v43 = v17;
  while (1)
  {
    v21 = v45 * v19;
    sub_1BA4C2DD8(v47 + v45 * v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
    sub_1BA4C2DD8(v46 + v21, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
    if ((static FormatContentSlotItemObject.== infix(_:_:)(v16, v12) & 1) == 0)
      goto LABEL_24;
    v22 = *(int *)(v10 + 20);
    v23 = *(_QWORD *)&v16[v22];
    v24 = *(_QWORD *)&v16[v22 + 8];
    v25 = (uint64_t *)&v12[v22];
    v26 = *v25;
    v27 = v25[1];
    if (v23)
      break;
    if (v26)
      goto LABEL_28;
LABEL_6:
    ++v19;
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
    result = 1;
    if (v19 == v43)
      return result;
  }
  if (!v26)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = 0;
LABEL_28:
    v36 = v26;
    sub_1BA5DCC20(v26);
    sub_1BA5DCC4C(v23);
    sub_1BA5DCC4C(v36);
LABEL_24:
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItem);
    return 0;
  }
  v28 = *v25;
  sub_1BA5DCC20(v23);
  sub_1BA5DCC20(v23);
  sub_1BA5DCC20(v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = sub_1BA8880B0(v23, v28);
  swift_bridgeObjectRelease();
  v44 = v28;
  swift_bridgeObjectRelease();
  if ((v29 & 1) == 0 || (v30 = *(_QWORD *)(v24 + 16), v30 != *(_QWORD *)(v27 + 16)))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5DCC4C(v44);
    sub_1BA5DCC4C(v23);
    v16 = v42;
    goto LABEL_24;
  }
  if (!v30 || v24 == v27)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5DCC4C(v44);
    sub_1BA5DCC4C(v23);
    v10 = v41;
    v16 = v42;
    goto LABEL_6;
  }
  v38 = v19;
  v39 = v23;
  v40 = v12;
  v31 = v48;
  v32 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = 0;
  v34 = *(_QWORD *)(v31 + 72);
  while (1)
  {
    result = sub_1BA4C2DD8(v24 + v32, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
    if (v33 >= *(_QWORD *)(v27 + 16))
      break;
    sub_1BA4C2DD8(v27 + v32, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
    v35 = static FormatContentSlotItemObject.== infix(_:_:)(v9, v6);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject);
    if ((v35 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = v39;
      v12 = v40;
      goto LABEL_23;
    }
    ++v33;
    v32 += v34;
    if (v30 == v33)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = v39;
      v12 = v40;
      v19 = v38;
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA88809C(uint64_t a1, uint64_t a2)
{
  return sub_1BA88214C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject, (uint64_t (*)(char *, char *))static FormatContentSlotItemObject.== infix(_:_:));
}

uint64_t sub_1BA8880B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (uint64_t *)(a2 + 48);
    for (i = (uint64_t *)(a1 + 48); ; i += 3)
    {
      v5 = *i;
      v6 = *v3;
      v7 = *(i - 2) == *(v3 - 2) && *(i - 1) == *(v3 - 1);
      if (!v7 && (sub_1BB874398() & 1) == 0)
        break;
      v8 = v6 & 0xF000000000000007;
      if ((~v5 & 0xF000000000000007) != 0)
      {
        if (v8 == 0xF000000000000007)
        {
LABEL_18:
          sub_1BA5E7FF4(v5);
          sub_1BA5E7FF4(v6);
          sub_1BA5E800C(v5);
          sub_1BA5E800C(v6);
          return 0;
        }
        v11 = v6;
        v12 = v5;
        sub_1BA5E7FF4(v6);
        sub_1BA5E7FF4(v5);
        sub_1BA5E7FF4(v6);
        sub_1BA5E7FF4(v5);
        sub_1BA5E7FF4(v5);
        sub_1BA5E7FF4(v6);
        swift_bridgeObjectRetain();
        sub_1BA5E7FF4(v5);
        swift_bridgeObjectRetain();
        sub_1BA5E7FF4(v6);
        v9 = static FormatOptionValue.== infix(_:_:)(&v12, (unint64_t *)&v11);
        sub_1BA5E800C(v5);
        sub_1BA5E800C(v6);
        sub_1BA5E800C(v6);
        sub_1BA5E800C(v5);
        sub_1BA5E800C(v6);
        sub_1BA5E800C(v5);
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v6);
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v5);
        if ((v9 & 1) == 0)
          return 0;
      }
      else
      {
        if (v8 != 0xF000000000000007)
          goto LABEL_18;
        sub_1BA5E800C(v5);
        sub_1BA5E800C(v6);
      }
      v3 += 3;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1BA888270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;
  int v6;
  char v8;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a2 + 48);
    v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      v5 = *v4;
      v6 = *v3;
      if (*((_QWORD *)v4 - 2) == *((_QWORD *)v3 - 2) && *((_QWORD *)v4 - 1) == *((_QWORD *)v3 - 1))
      {
        if (v5 != v6)
          return 0;
      }
      else
      {
        v8 = sub_1BB874398();
        result = 0;
        if ((v8 & 1) == 0 || ((v5 ^ v6) & 1) != 0)
          return result;
      }
      v3 += 24;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1BA888320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;
  uint64_t v20;

  sub_1BA6BCAFC(0, (unint64_t *)&qword_1ED3B5D40, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (unint64_t *)&unk_1ED3C69B0, (uint64_t)&protocol conformance descriptor for FormatPackage);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v19 = a1;
      v20 = a2;
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_1BA8968F8(v19 + v12, (uint64_t)v10, (unint64_t *)&qword_1ED3B5D40, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (unint64_t *)&unk_1ED3C69B0, (uint64_t)&protocol conformance descriptor for FormatPackage);
        sub_1BA8968F8(v20 + v12, (uint64_t)v6, (unint64_t *)&qword_1ED3B5D40, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (unint64_t *)&unk_1ED3C69B0, (uint64_t)&protocol conformance descriptor for FormatPackage);
        v15 = sub_1BB2A5EB0((uint64_t)v10, (uint64_t)v6);
        sub_1BA89694C((uint64_t)v6, (unint64_t *)&qword_1ED3B5D40, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (unint64_t *)&unk_1ED3C69B0, (uint64_t)&protocol conformance descriptor for FormatPackage);
        sub_1BA89694C((uint64_t)v10, (unint64_t *)&qword_1ED3B5D40, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (unint64_t *)&unk_1ED3C69B0, (uint64_t)&protocol conformance descriptor for FormatPackage);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1BA8884D4(uint64_t a1, uint64_t a2)
{
  return sub_1BA891D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))_s8NewsFeed20FormatColorProcessorO2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1BA8884E0(uint64_t a1, uint64_t a2)
{
  return sub_1BA8884F4(a1, a2, (uint64_t (*)(_QWORD *, _QWORD *))static FormatIssueCoverContent.== infix(_:_:), (uint64_t (*)(uint64_t, uint64_t))sub_1BA8884E0);
}

uint64_t sub_1BA8884F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD *, _QWORD *), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  _QWORD v40[2];
  _QWORD v41[3];

  v4 = *(_QWORD *)(a1 + 16);
  if (v4 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v4 && a1 != a2)
  {
    v5 = a4;
    v6 = (uint64_t *)(a2 + 48);
    v7 = (uint64_t *)(a1 + 48);
    do
    {
      v8 = *v7;
      v9 = *v6;
      v10 = *(v7 - 2) == *(v6 - 2) && *(v7 - 1) == *(v6 - 1);
      if (!v10 && (sub_1BB874398() & 1) == 0)
        return 0;
      if (v8 < 0)
      {
        if ((v9 & 0x8000000000000000) == 0)
          return 0;
        v12 = *(_QWORD *)(v8 + 16);
        v11 = *(_QWORD *)(v8 + 24);
        v13 = *(_QWORD *)(v9 + 16);
        v39 = *(_QWORD *)(v9 + 24);
        if (v12 < 0)
        {
          if ((v13 & 0x8000000000000000) == 0)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_66;
          }
          v16 = *(_QWORD *)(v12 + 16);
          v37 = *(_QWORD *)(v12 + 24);
          v17 = *(_QWORD *)(v13 + 16);
          v36 = *(_QWORD *)(v13 + 24);
          if (v16 < 0)
          {
            if ((v17 & 0x8000000000000000) == 0)
            {
              swift_retain();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_release_n();
              swift_release();
              goto LABEL_64;
            }
            v18 = *(_QWORD *)(v16 + 16);
            v19 = *(_QWORD *)(v17 + 16);
            v33 = *(_QWORD *)(v16 + 24);
            v35 = *(_QWORD *)(v17 + 24);
            if (v18 < 0)
            {
              if ((v19 & 0x8000000000000000) == 0)
              {
                swift_retain();
                swift_retain_n();
                swift_retain_n();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_release_n();
                swift_release();
                goto LABEL_60;
              }
              v20 = *(_QWORD *)(v18 + 24);
              v21 = *(_QWORD *)(v19 + 16);
              v22 = *(_QWORD *)(v19 + 24);
              v41[0] = *(_QWORD *)((v18 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
              v41[1] = v20;
              v40[0] = v21;
              v40[1] = v22;
              v27 = v20;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_bridgeObjectRetain();
              if ((a3(v41, v40) & 1) == 0)
              {
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_63;
              }
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v26 = v5(v27, v22);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              if ((v26 & 1) == 0)
                goto LABEL_62;
            }
            else
            {
              if (v19 < 0)
              {
                swift_retain_n();
                swift_retain_n();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                swift_release_n();
LABEL_60:
                swift_release();
                goto LABEL_63;
              }
              v29 = *(_BYTE *)(v18 + 16);
              v28 = *(_BYTE *)(v19 + 16);
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((v29 & 1) != 0)
              {
                if ((v28 & 1) == 0)
                  goto LABEL_62;
              }
              else if ((v28 & 1) != 0)
              {
LABEL_62:
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
LABEL_63:
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
LABEL_64:
                swift_release();
LABEL_65:
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release_n();
LABEL_66:
                swift_release();
LABEL_67:
                swift_release();
                swift_bridgeObjectRelease();
                return 0;
              }
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v30 = v5(v33, v35);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            swift_release();
            swift_release();
            if ((v30 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_63;
            }
          }
          else
          {
            if (v17 < 0)
            {
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_retain_n();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_release_n();
              goto LABEL_64;
            }
            v34 = *(_BYTE *)(v16 + 16);
            v32 = *(_BYTE *)(v17 + 16);
            swift_retain_n();
            swift_retain_n();
            swift_retain_n();
            swift_retain_n();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((v34 & 1) != 0)
            {
              v5 = a4;
              if ((v32 & 1) == 0)
                goto LABEL_54;
            }
            else
            {
              v5 = a4;
              if ((v32 & 1) != 0)
              {
LABEL_54:
                swift_bridgeObjectRelease();
                swift_release_n();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_65;
              }
            }
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v23 = v5(v37, v36);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_release();
          swift_release();
          if ((v23 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_65;
          }
        }
        else
        {
          if (v13 < 0)
          {
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_67;
          }
          v14 = *(_BYTE *)(v12 + 16);
          v15 = *(_BYTE *)(v13 + 16);
          swift_retain_n();
          swift_retain_n();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v14 & 1) != 0)
          {
            v5 = a4;
            if ((v15 & 1) == 0)
              goto LABEL_50;
          }
          else
          {
            v5 = a4;
            if ((v15 & 1) != 0)
            {
LABEL_50:
              swift_bridgeObjectRelease();
              swift_release_n();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_66;
            }
          }
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24 = v5(v11, v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release();
        swift_release();
        if ((v24 & 1) == 0)
          return 0;
      }
      else
      {
        if (v9 < 0)
          return 0;
        if ((*(_BYTE *)(v8 + 16) & 1) != 0)
        {
          if ((*(_BYTE *)(v9 + 16) & 1) == 0)
            return 0;
        }
        else if ((*(_BYTE *)(v9 + 16) & 1) != 0)
        {
          return 0;
        }
      }
      v6 += 3;
      v7 += 3;
      --v4;
    }
    while (v4);
  }
  return 1;
}

uint64_t sub_1BA888FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  __int128 *v15;
  uint64_t v16;
  __int128 *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  int v26;
  uint64_t v27;
  double v28;
  char v29;
  __int128 *v30;
  __int128 *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  BOOL v52;
  uint64_t *v53;
  __int128 *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  BOOL v68;
  double v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  double v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  double *v93;
  double *v94;
  uint64_t v95;
  double v96;
  double v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  double *v102;
  double *v103;
  uint64_t v104;
  double v105;
  double v106;
  double v107;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t *v112;
  __int128 *v113;
  uint64_t v114;
  _QWORD v115[2];
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  _QWORD v124[16];
  _BYTE v125[128];
  uint64_t v126;
  _QWORD v127[16];
  __int128 v128[8];
  _BYTE v129[128];
  uint64_t v130;
  uint64_t v131;
  __int128 v132[8];
  _BYTE v133[136];
  _BYTE v134[136];
  _BYTE v135[136];
  _BYTE v136[136];
  uint64_t v137;
  _BYTE v138[144];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = 0;
  v4 = a2 + 32;
  v114 = a1 + 32;
  while (1)
  {
    sub_1BA895BCC(v114 + 136 * v3, (uint64_t)v134);
    sub_1BA895BCC(v4 + 136 * v3, (uint64_t)v135);
    sub_1BA895BCC((uint64_t)v134, (uint64_t)v136);
    sub_1BA895BCC((uint64_t)v135, (uint64_t)&v137);
    sub_1BA895BCC((uint64_t)v134, (uint64_t)v138);
    v5 = sub_1BA895C08((uint64_t)v138);
    if (!v5)
      break;
    if (v5 == 1)
    {
      v6 = sub_1BA895E68((uint64_t)v138);
      sub_1BA895BCC((uint64_t)v135, (uint64_t)v133);
      if (sub_1BA895C08((uint64_t)v133) == 1)
      {
        v7 = sub_1BA895E68((uint64_t)v133);
        sub_1BA53BAD8(v6, (uint64_t)v129);
        sub_1BA53BAD8(v7, (uint64_t)&v131);
        sub_1BA53BAD8(v6, (uint64_t)v132);
        if (sub_1BA895ED8((uint64_t)v132) == 1)
        {
          v8 = sub_1BA895EE4((uint64_t)v132);
          v9 = *(_QWORD *)v8;
          v10 = *(unsigned __int8 *)(v8 + 8);
          sub_1BA53BAD8(v7, (uint64_t)v125);
          v11 = sub_1BA895ED8((uint64_t)v125);
          v12 = (uint64_t *)sub_1BA895EE4((uint64_t)v125);
          if (v11 == 1)
          {
            v13 = *v12;
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            *(_QWORD *)&v128[0] = v9;
            v127[0] = v13;
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            static FormatColor.== infix(_:_:)((uint64_t)v128);
            if ((v14 & 1) != 0)
              __asm { BR              X8 }
            sub_1BA895EF4((uint64_t)v129);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
            goto LABEL_139;
          }
          goto LABEL_132;
        }
        v30 = (__int128 *)sub_1BA895EE4((uint64_t)v132);
        sub_1BA53BAD8(v7, (uint64_t)v128);
        if (sub_1BA895ED8((uint64_t)v128) == 1)
        {
          sub_1BA895EE4((uint64_t)v128);
LABEL_132:
          sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BA895EF4((uint64_t)v129);
          goto LABEL_133;
        }
        v31 = (__int128 *)sub_1BA895EE4((uint64_t)v128);
        sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
        sub_1BA895FE8(v30, (uint64_t)v125);
        sub_1BA895FE8(v31, (uint64_t)&v126);
        sub_1BA895FE8(v30, (uint64_t)v127);
        v113 = v30;
        if (sub_1BA896024((uint64_t)v127) == 1)
        {
          v32 = sub_1BA896030((uint64_t)v127);
          sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BA895FE8(v31, (uint64_t)v124);
          v33 = sub_1BA896024((uint64_t)v124);
          v34 = sub_1BA896030((uint64_t)v124);
          if (v33 == 1)
          {
            v35 = v34;
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            if (*(double *)v32 != *(double *)v35 || *(double *)(v32 + 8) != *(double *)(v35 + 8))
              goto LABEL_136;
            if ((*(_BYTE *)(v32 + 48) & 1) != 0)
            {
              if ((*(_BYTE *)(v35 + 48) & 1) == 0
                || *(double *)(v32 + 16) != *(double *)(v35 + 16)
                || *(double *)(v32 + 24) != *(double *)(v35 + 24)
                || *(double *)(v32 + 32) != *(double *)(v35 + 32))
              {
                goto LABEL_136;
              }
              v36 = *(double *)(v32 + 40);
              v37 = *(double *)(v35 + 40);
            }
            else
            {
              if ((*(_BYTE *)(v35 + 48) & 1) != 0)
                goto LABEL_136;
              v36 = *(double *)(v32 + 16);
              v37 = *(double *)(v35 + 16);
            }
            if (v36 == v37
              && *(double *)(v32 + 56) == *(double *)(v35 + 56)
              && *(double *)(v32 + 64) == *(double *)(v35 + 64))
            {
              if ((*(_BYTE *)(v32 + 104) & 1) != 0)
              {
                if ((*(_BYTE *)(v35 + 104) & 1) != 0
                  && *(double *)(v32 + 72) == *(double *)(v35 + 72)
                  && *(double *)(v32 + 80) == *(double *)(v35 + 80)
                  && *(double *)(v32 + 88) == *(double *)(v35 + 88))
                {
                  v83 = *(double *)(v32 + 96);
                  v84 = *(double *)(v35 + 96);
                  goto LABEL_93;
                }
              }
              else if ((*(_BYTE *)(v35 + 104) & 1) == 0)
              {
                v83 = *(double *)(v32 + 72);
                v84 = *(double *)(v35 + 72);
LABEL_93:
                if (v83 == v84)
                {
                  v85 = *(_QWORD *)(v32 + 112);
                  v86 = *(_QWORD *)(v35 + 112);
                  v87 = *(_QWORD *)(v85 + 16);
                  if (v87 != *(_QWORD *)(v86 + 16))
                  {
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
LABEL_144:
                    sub_1BA896040((uint64_t)v125);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
LABEL_145:
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
                    sub_1BA895EF4((uint64_t)v129);
                    goto LABEL_138;
                  }
                  if (v87)
                  {
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    if (v85 != v86)
                    {
                      v88 = (uint64_t *)(v85 + 32);
                      v89 = (uint64_t *)(v86 + 32);
                      do
                      {
                        v90 = *v88++;
                        v119 = v90;
                        v91 = *v89++;
                        v115[0] = v91;
                        static FormatColor.== infix(_:_:)((uint64_t)&v119);
                        if ((v92 & 1) == 0)
                          goto LABEL_144;
                      }
                      while (--v87);
                    }
                  }
                  else
                  {
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
                  }
                  v99 = *(_QWORD *)(v32 + 120);
                  v100 = *(_QWORD *)(v35 + 120);
                  if (!v99)
                  {
                    sub_1BA896040((uint64_t)v125);
                    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
                    if (v100)
                      goto LABEL_145;
                    goto LABEL_119;
                  }
                  if (v100)
                  {
                    v101 = *(_QWORD *)(v99 + 16);
                    if (v101 == *(_QWORD *)(v100 + 16))
                    {
                      if (!v101 || v99 == v100)
                      {
LABEL_117:
                        sub_1BA896040((uint64_t)v125);
                        sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
LABEL_119:
                        sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
                        goto LABEL_120;
                      }
                      if (*(double *)(v99 + 32) == *(double *)(v100 + 32))
                      {
                        v102 = (double *)(v99 + 40);
                        v103 = (double *)(v100 + 40);
                        v104 = v101 - 1;
                        while (v104)
                        {
                          v105 = *v102++;
                          v106 = v105;
                          v107 = *v103++;
                          --v104;
                          if (v106 != v107)
                            goto LABEL_129;
                        }
                        goto LABEL_117;
                      }
                    }
                  }
LABEL_129:
                  sub_1BA896040((uint64_t)v125);
                  sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
                  goto LABEL_145;
                }
              }
            }
LABEL_136:
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA896040((uint64_t)v125);
            goto LABEL_137;
          }
        }
        else
        {
          v53 = (uint64_t *)sub_1BA896030((uint64_t)v127);
          v54 = v31;
          v55 = *v53;
          v56 = v53[1];
          v57 = v53[2];
          v58 = v53[3];
          v59 = v53[4];
          v60 = v53[5];
          v61 = v53[6];
          v62 = v53[7];
          sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BA895FE8(v54, (uint64_t)v124);
          v63 = sub_1BA896024((uint64_t)v124);
          v64 = sub_1BA896030((uint64_t)v124);
          if (v63 != 1)
          {
            v65 = *(_QWORD *)v64;
            v66 = *(_QWORD *)(v64 + 8);
            v119 = v55;
            v120 = v56;
            *(_QWORD *)&v121 = v57;
            *((_QWORD *)&v121 + 1) = v58;
            *(_QWORD *)&v122 = v59;
            *((_QWORD *)&v122 + 1) = v60;
            *(_QWORD *)&v123 = v61;
            *((_QWORD *)&v123 + 1) = v62;
            v115[0] = v65;
            v115[1] = v66;
            v67 = *(_OWORD *)(v64 + 32);
            v116 = *(_OWORD *)(v64 + 16);
            v117 = v67;
            v118 = *(_OWORD *)(v64 + 48);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            v68 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)&v119, (uint64_t)v115);
            sub_1BA896040((uint64_t)v125);
            sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
            sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
            if (v68)
LABEL_120:
              __asm { BR              X9 }
LABEL_137:
            sub_1BA895EF4((uint64_t)v129);
            goto LABEL_138;
          }
        }
        sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
        sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
        sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
        sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
        goto LABEL_136;
      }
      sub_1BA895BCC((uint64_t)v134, (uint64_t)v125);
      v109 = sub_1BA895E68((uint64_t)v125);
      sub_1BA895BCC((uint64_t)v134, (uint64_t)v129);
      v110 = sub_1BA895E68((uint64_t)v129);
      sub_1BA895E78(v110);
      sub_1BA895E78(v109);
LABEL_127:
      sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895C80((uint64_t)v136);
      goto LABEL_141;
    }
    v24 = sub_1BA895E68((uint64_t)v138);
    v25 = *(double *)v24;
    v26 = *(unsigned __int8 *)(v24 + 8);
    sub_1BA895BCC((uint64_t)v135, (uint64_t)v129);
    if (sub_1BA895C08((uint64_t)v129) != 2)
      goto LABEL_127;
    v27 = sub_1BA895E68((uint64_t)v129);
    v28 = *(double *)v27;
    v29 = *(_BYTE *)(v27 + 8);
    sub_1BA895C80((uint64_t)v136);
    if (v26)
      __asm { BR              X8 }
    if ((v29 & 1) != 0 || v25 != v28)
      return 0;
LABEL_5:
    if (++v3 == v2)
      return 1;
  }
  v15 = (__int128 *)sub_1BA895E68((uint64_t)v138);
  sub_1BA895BCC((uint64_t)v135, (uint64_t)v125);
  if (sub_1BA895C08((uint64_t)v125))
  {
    sub_1BA895BCC((uint64_t)v134, (uint64_t)v133);
    v111 = (uint64_t *)sub_1BA895E68((uint64_t)v133);
    sub_1BA895BCC((uint64_t)v134, (uint64_t)v129);
    v112 = (uint64_t *)sub_1BA895E68((uint64_t)v129);
    sub_1BA896120(v112);
    sub_1BA896120(v111);
    goto LABEL_127;
  }
  v16 = v4;
  v17 = (__int128 *)sub_1BA895E68((uint64_t)v125);
  sub_1BA896178(v15, (uint64_t)v128);
  sub_1BA896178(v17, (uint64_t)v132);
  sub_1BA895FE8(v128, (uint64_t)v129);
  sub_1BA895FE8(v132, (uint64_t)&v130);
  sub_1BA895FE8(v128, (uint64_t)v133);
  if (sub_1BA896024((uint64_t)v133) != 1)
  {
    v38 = (uint64_t *)sub_1BA896030((uint64_t)v133);
    v39 = *v38;
    v40 = v38[1];
    v41 = v38[2];
    v42 = v38[3];
    v43 = v38[4];
    v44 = v38[5];
    v45 = v38[6];
    v46 = v38[7];
    sub_1BA895FE8(v132, (uint64_t)v127);
    v47 = sub_1BA896024((uint64_t)v127);
    v48 = sub_1BA896030((uint64_t)v127);
    if (v47 == 1)
    {
LABEL_128:
      sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      sub_1BA896040((uint64_t)v129);
LABEL_133:
      sub_1BA895C80((uint64_t)v136);
      goto LABEL_140;
    }
    v49 = *(_QWORD *)v48;
    v50 = *(_QWORD *)(v48 + 8);
    v124[0] = v39;
    v124[1] = v40;
    v124[2] = v41;
    v124[3] = v42;
    v124[4] = v43;
    v124[5] = v44;
    v124[6] = v45;
    v124[7] = v46;
    v119 = v49;
    v120 = v50;
    v51 = *(_OWORD *)(v48 + 32);
    v121 = *(_OWORD *)(v48 + 16);
    v122 = v51;
    v123 = *(_OWORD *)(v48 + 48);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    v52 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)v124, (uint64_t)&v119);
    sub_1BA896040((uint64_t)v129);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    sub_1BA895C80((uint64_t)v136);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    v4 = v16;
    if (!v52)
      return 0;
    goto LABEL_5;
  }
  v18 = sub_1BA896030((uint64_t)v133);
  sub_1BA895FE8(v132, (uint64_t)v127);
  v19 = sub_1BA896024((uint64_t)v127);
  v20 = sub_1BA896030((uint64_t)v127);
  if (v19 != 1)
    goto LABEL_128;
  v21 = v20;
  sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  if (*(double *)v18 != *(double *)v21 || *(double *)(v18 + 8) != *(double *)(v21 + 8))
  {
LABEL_122:
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    goto LABEL_123;
  }
  if ((*(_BYTE *)(v18 + 48) & 1) != 0)
  {
    if ((*(_BYTE *)(v21 + 48) & 1) == 0
      || *(double *)(v18 + 16) != *(double *)(v21 + 16)
      || *(double *)(v18 + 24) != *(double *)(v21 + 24)
      || *(double *)(v18 + 32) != *(double *)(v21 + 32))
    {
      goto LABEL_122;
    }
    v22 = *(double *)(v18 + 40);
    v23 = *(double *)(v21 + 40);
  }
  else
  {
    if ((*(_BYTE *)(v21 + 48) & 1) != 0)
      goto LABEL_122;
    v22 = *(double *)(v18 + 16);
    v23 = *(double *)(v21 + 16);
  }
  if (v22 != v23 || *(double *)(v18 + 56) != *(double *)(v21 + 56) || *(double *)(v18 + 64) != *(double *)(v21 + 64))
    goto LABEL_122;
  if ((*(_BYTE *)(v18 + 104) & 1) != 0)
  {
    if ((*(_BYTE *)(v21 + 104) & 1) == 0
      || *(double *)(v18 + 72) != *(double *)(v21 + 72)
      || *(double *)(v18 + 80) != *(double *)(v21 + 80)
      || *(double *)(v18 + 88) != *(double *)(v21 + 88))
    {
      goto LABEL_122;
    }
    v69 = *(double *)(v18 + 96);
    v70 = *(double *)(v21 + 96);
  }
  else
  {
    if ((*(_BYTE *)(v21 + 104) & 1) != 0)
      goto LABEL_122;
    v69 = *(double *)(v18 + 72);
    v70 = *(double *)(v21 + 72);
  }
  if (v69 != v70)
    goto LABEL_122;
  v71 = *(_QWORD *)(v18 + 112);
  v72 = *(_QWORD *)(v21 + 112);
  v73 = *(_QWORD *)(v71 + 16);
  if (v73 != *(_QWORD *)(v72 + 16))
    goto LABEL_122;
  if (!v73)
  {
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
    goto LABEL_69;
  }
  sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
  if (v71 == v72)
  {
LABEL_69:
    v79 = *(_QWORD *)(v18 + 120);
    v80 = *(_QWORD *)(v21 + 120);
    if (v79)
    {
      if (!v80)
        goto LABEL_123;
      v81 = *(_QWORD *)(v79 + 16);
      if (v81 != *(_QWORD *)(v80 + 16))
        goto LABEL_123;
      if (v81)
        v82 = v79 == v80;
      else
        v82 = 1;
      if (!v82)
      {
        if (*(double *)(v79 + 32) != *(double *)(v80 + 32))
          goto LABEL_123;
        v93 = (double *)(v79 + 40);
        v94 = (double *)(v80 + 40);
        v95 = v81 - 1;
        while (v95)
        {
          v96 = *v93++;
          v97 = v96;
          v98 = *v94++;
          --v95;
          if (v97 != v98)
            goto LABEL_123;
        }
      }
      sub_1BA896040((uint64_t)v129);
      sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    }
    else
    {
      sub_1BA896040((uint64_t)v129);
      sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
      if (v80)
        goto LABEL_139;
    }
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    sub_1BA895C80((uint64_t)v136);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    v4 = v16;
    goto LABEL_5;
  }
  v74 = (uint64_t *)(v71 + 32);
  v75 = (uint64_t *)(v72 + 32);
  while (1)
  {
    v76 = *v74++;
    v124[0] = v76;
    v77 = *v75++;
    v119 = v77;
    static FormatColor.== infix(_:_:)((uint64_t)v124);
    if ((v78 & 1) == 0)
      break;
    if (!--v73)
      goto LABEL_69;
  }
LABEL_123:
  sub_1BA896040((uint64_t)v129);
LABEL_138:
  sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
LABEL_139:
  sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
  sub_1BA895C80((uint64_t)v136);
LABEL_140:
  sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
  sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
  sub_1BA895DFC((uint64_t)v135, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
LABEL_141:
  sub_1BA895DFC((uint64_t)v134, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
  return 0;
}

BOOL sub_1BA88AB58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v11;
  _BOOL8 result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unsigned __int8 *)(a1 + 32);
  v4 = (unsigned __int8 *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v7 = *v3++;
    v6 = v7;
    v9 = *v4++;
    v8 = v9;
    v11 = v5-- != 0;
    result = v6 == v8;
  }
  while (v6 == v8 && v11);
  return result;
}

uint64_t sub_1BA88ABB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unsigned int v28;
  BOOL v29;
  char v30;
  BOOL v31;
  int v32;
  uint64_t v33;
  BOOL v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;
  unsigned __int8 v90;
  uint64_t v91;
  uint64_t v92;
  unsigned __int8 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned __int8 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned __int8 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  BOOL v123;
  BOOL v124;
  BOOL v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned __int8 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned __int8 v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned __int8 v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unsigned __int8 v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  char v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unsigned __int8 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  unint64_t v190;
  _QWORD *v191;
  _QWORD *v192;
  BOOL v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unsigned __int8 v211;
  uint64_t v212;
  unsigned __int8 v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unsigned __int8 v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t result;
  uint64_t v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  unsigned __int8 v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  int v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unsigned __int8 v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  unsigned __int8 v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  unsigned int v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  unsigned __int8 v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  unsigned __int8 v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  unsigned __int8 v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  unsigned __int8 v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  unsigned int v336;
  uint64_t v337;
  uint64_t v338;
  unint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  unsigned int v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  _QWORD *v355;
  _QWORD *v356;
  __int128 v357;
  uint64_t v358;
  char v359;
  char v360;
  __int128 v361;
  uint64_t v362;
  char v363;
  char v364;
  uint64_t v365;
  uint64_t v366;

  v4 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v329 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v350 = (uint64_t)&v329 - v9;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v10 && a1 != a2)
  {
    v331 = v8;
    v11 = 0;
    v12 = a1 + 32;
    v13 = a2 + 32;
    v334 = v10;
    v330 = v6;
    v333 = a1 + 32;
    v332 = a2 + 32;
    while (1)
    {
      v14 = (uint64_t *)(v12 + 88 * v11);
      v15 = *v14;
      v16 = v14[1];
      v18 = v14[2];
      v17 = v14[3];
      v19 = (_QWORD *)v14[4];
      v352 = v14[5];
      v20 = v14[7];
      v347 = v14[6];
      v342 = v14[8];
      v345 = v14[9];
      v21 = *((unsigned __int8 *)v14 + 80);
      v22 = (uint64_t *)(v13 + 88 * v11);
      v23 = *v22;
      v24 = v22[1];
      v26 = v22[2];
      v25 = v22[3];
      v27 = (_QWORD *)v22[4];
      v354 = v22[5];
      v353 = v22[6];
      v351 = v22[7];
      v344 = v22[8];
      v348 = v22[9];
      v28 = *((unsigned __int8 *)v22 + 80);
      v29 = v15 == v23 && v16 == v24;
      v341 = v17;
      v340 = v25;
      if (!v29)
      {
        v30 = sub_1BB874398();
        v25 = v340;
        v17 = v341;
        if ((v30 & 1) == 0)
          return 0;
      }
      if (v17)
      {
        if (!v25)
          return 0;
        v31 = v18 == v26 && v17 == v25;
        if (!v31 && (sub_1BB874398() & 1) == 0)
          return 0;
      }
      else if (v25)
      {
        return 0;
      }
      v356 = v19;
      v343 = v28;
      v355 = v27;
      v346 = v20;
      v335 = v11;
      if (v21 >> 6)
      {
        v338 = v16;
        v337 = v24;
        v32 = v28 & 0xC0;
        if (v21 >> 6 == 1)
        {
          if (v32 != 64)
            goto LABEL_132;
          v33 = v19[2];
          if (v33 != v27[2])
            goto LABEL_131;
          if (v33)
            v34 = v19 == v27;
          else
            v34 = 1;
          if (!v34)
          {
            v35 = v19[4] == v27[4] && v19[5] == v27[5];
            if (!v35 && (sub_1BB874398() & 1) == 0)
              goto LABEL_131;
            v36 = v33 - 1;
            if (v36)
            {
              v191 = v27 + 7;
              v192 = v19 + 7;
              while (1)
              {
                v193 = *(v192 - 1) == *(v191 - 1) && *v192 == *v191;
                if (!v193 && (sub_1BB874398() & 1) == 0)
                  break;
                v191 += 2;
                v192 += 2;
                if (!--v36)
                  goto LABEL_33;
              }
LABEL_131:
              v252 = v344;
              v253 = v348;
              sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v344, v348, v343);
              v254 = v21;
              v255 = (uint64_t)v19;
              v256 = (uint64_t)v19;
              v257 = v20;
              v258 = v347;
              v259 = v352;
              v260 = v20;
              v261 = v342;
              v262 = v345;
              sub_1BA709DE8(v256, v352, v347, v260, v342, v345, v254);
              sub_1BA6C0C20(v255, v259, v258, v257, v261, v262, v254);
              v234 = (uint64_t)v27;
              v236 = v353;
              v235 = v354;
              v237 = v351;
              v238 = v252;
              v239 = v253;
              v263 = (char *)&v366 + 4;
              goto LABEL_142;
            }
          }
LABEL_33:
          v37 = *(_QWORD *)(v352 + 16);
          v29 = v37 == *(_QWORD *)(v354 + 16);
          v336 = v21;
          if (!v29)
          {
            v300 = v344;
            v301 = v348;
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v344, v348, v343);
            v302 = v21;
            v303 = (uint64_t)v19;
            v304 = (uint64_t)v19;
            v305 = v20;
            v306 = v347;
            v307 = v352;
            v308 = v20;
            v309 = v342;
            v310 = v345;
            sub_1BA709DE8(v304, v352, v347, v308, v342, v345, v302);
            v311 = v301;
            LOBYTE(v301) = v343;
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v300, v311, v343);
            sub_1BA709DE8(v303, v307, v306, v305, v309, v310, v302);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA709DE8(v303, v307, v306, v305, v309, v310, v302);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v300, v348, v301);
LABEL_130:
            v241 = v346;
            v242 = v342;
            v243 = v345;
            sub_1BA6C0C20((uint64_t)v356, v352, v347, v346, v342, v345, v336);
            v244 = v354;
            v245 = (uint64_t)v355;
            v246 = v353;
            v247 = v351;
            v248 = v344;
            v249 = v348;
            v250 = v343;
            sub_1BA6C0C20((uint64_t)v355, v354, v353, v351, v344, v348, v343);
            sub_1BA6C0C20(v245, v244, v246, v247, v248, v249, v250);
            v251 = v243;
            LOBYTE(v243) = v336;
            sub_1BA6C0C20((uint64_t)v356, v352, v347, v241, v242, v251, v336);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6C0C20(v245, v244, v246, v247, v248, v249, v250);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v234 = (uint64_t)v356;
            v235 = v352;
            v236 = v347;
            v237 = v241;
            v238 = v242;
            v239 = v345;
            LOBYTE(v240) = v243;
            goto LABEL_143;
          }
          v38 = v347;
          if (v37)
          {
            v39 = v353;
            v40 = v351;
            v41 = v21;
            v42 = v344;
            v43 = v348;
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v344, v348, v343);
            v44 = (uint64_t)v19;
            v45 = v38;
            v46 = v38;
            v47 = v345;
            v48 = v346;
            v49 = v342;
            sub_1BA709DE8(v44, v352, v46, v346, v342, v345, v41);
            v50 = v43;
            LOBYTE(v43) = v343;
            sub_1BA709DE8((uint64_t)v355, v354, v39, v40, v42, v50, v343);
            v51 = (uint64_t)v356;
            v52 = v352;
            sub_1BA709DE8((uint64_t)v356, v352, v45, v48, v49, v47, v41);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA709DE8(v51, v52, v45, v48, v49, v47, v41);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v53 = v354;
            sub_1BA709DE8((uint64_t)v355, v354, v353, v40, v344, v348, v43);
            if (v52 != v53)
            {
              v54 = (uint64_t *)(v354 + 64);
              v55 = (uint64_t *)(v352 + 64);
              do
              {
                v339 = v37;
                v57 = *(v55 - 4);
                v58 = *(v55 - 3);
                v60 = *(v55 - 2);
                v59 = *(v55 - 1);
                v61 = *v55;
                v62 = *(v54 - 4);
                v63 = *(v54 - 3);
                v65 = *(v54 - 2);
                v64 = *(v54 - 1);
                v349 = *v54;
                v66 = v57 == v62 && v58 == v63;
                if (!v66 && (sub_1BB874398() & 1) == 0)
                  goto LABEL_130;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain();
                v67 = sub_1BA6EB330(v60, v65);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v67 & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_130;
                }
                if (v59 == v64 && v61 == v349)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  v56 = sub_1BB874398();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v56 & 1) == 0)
                    goto LABEL_130;
                }
                v54 += 5;
                v55 += 5;
                v37 = v339 - 1;
              }
              while (v339 != 1);
            }
          }
          else
          {
            v148 = v344;
            v149 = v348;
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v344, v348, v343);
            v150 = v352;
            v151 = v38;
            v152 = v38;
            v153 = v345;
            v154 = v346;
            v155 = v342;
            sub_1BA709DE8((uint64_t)v19, v352, v152, v346, v342, v345, v21);
            v156 = v149;
            LOBYTE(v149) = v343;
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v148, v156, v343);
            sub_1BA709DE8((uint64_t)v19, v150, v151, v154, v155, v153, v21);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA709DE8((uint64_t)v19, v150, v151, v154, v155, v153, v21);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v148, v348, v149);
          }
          v157 = v336;
          if ((v336 & 1) != 0)
          {
            v158 = v345;
            v159 = v346;
            v160 = v342;
            v161 = v347;
            v172 = v348;
            v162 = v352;
            v163 = v344;
            if ((v343 & 1) == 0)
            {
LABEL_135:
              LODWORD(v350) = v336 & 1;
              sub_1BA7261E0(v161, v159, v160, v158, v336 & 1);
              v312 = v353;
              v171 = v351;
              sub_1BA7261E0(v353, v351, v163, v348, (v157 & 1) == 0);
              sub_1BA6C1F54(v161, v159, v160, v158, v350);
              v313 = v163;
              v314 = v348;
              sub_1BA6C1F54(v312, v171, v313, v348, (v157 & 1) == 0);
              goto LABEL_139;
            }
            if (v347 != v353 || v346 != v351)
            {
              v184 = sub_1BB874398();
              v163 = v344;
              if ((v184 & 1) == 0)
              {
                sub_1BA7261E0(v161, v159, v160, v158, 1);
                v322 = v353;
                v171 = v351;
                sub_1BA7261E0(v353, v351, v163, v172, 1);
                sub_1BA6C1F54(v161, v159, v160, v158, 1);
                v317 = v322;
                v318 = v171;
                v319 = v163;
                v320 = v172;
                v321 = 1;
LABEL_138:
                sub_1BA6C1F54(v317, v318, v319, v320, v321);
                v314 = v172;
LABEL_139:
                sub_1BA6C0C20((uint64_t)v356, v162, v161, v159, v160, v158, v157);
                v183 = v162;
                v323 = v354;
                v324 = (uint64_t)v355;
                v325 = v353;
                v326 = v343;
                sub_1BA6C0C20((uint64_t)v355, v354, v353, v171, v344, v314, v343);
                v327 = v324;
                v181 = v323;
                v328 = v171;
                v176 = (uint64_t)v356;
                sub_1BA6C0C20(v327, v323, v325, v328, v344, v314, v326);
LABEL_140:
                sub_1BA6C0C20(v176, v183, v161, v159, v160, v345, v336);
                v196 = v344;
                v206 = v176;
                v195 = v351;
                v194 = v353;
                v208 = v181;
                v209 = (uint64_t)v355;
                v211 = v343;
                v204 = v348;
LABEL_141:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1BA6C0C20(v209, v208, v194, v195, v196, v204, v211);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v234 = v206;
                v235 = v183;
                v237 = v346;
                v236 = v347;
                v238 = v160;
                v239 = v345;
                v263 = (char *)&v365 + 4;
LABEL_142:
                v240 = *((_DWORD *)v263 - 64);
                goto LABEL_143;
              }
            }
            v185 = v159;
            v186 = v160;
            if ((v160 & 1) != 0)
              v187 = 0x6F74656C676E6973;
            else
              v187 = 0x65636E6174736E69;
            if ((v160 & 1) != 0)
              v188 = 0xE90000000000006ELL;
            else
              v188 = 0xE800000000000000;
            if ((v163 & 1) != 0)
              v189 = 0x6F74656C676E6973;
            else
              v189 = 0x65636E6174736E69;
            if ((v163 & 1) != 0)
              v190 = 0xE90000000000006ELL;
            else
              v190 = 0xE800000000000000;
            v339 = v188;
            if (v187 == v189 && v188 == v190)
              LODWORD(v349) = 1;
            else
              LODWORD(v349) = sub_1BB874398();
            v194 = v353;
            v195 = v351;
            v196 = v344;
            v197 = v348;
            sub_1BA7261E0(v353, v351, v344, v348, 1);
            v198 = v161;
            v199 = v161;
            v200 = v185;
            v201 = v345;
            sub_1BA7261E0(v199, v185, v186, v345, 1);
            v202 = v185;
            v203 = v186;
            sub_1BA7261E0(v198, v202, v186, v201, 1);
            sub_1BA7261E0(v194, v195, v196, v197, 1);
            swift_bridgeObjectRelease();
            v204 = v197;
            swift_bridgeObjectRelease();
            v205 = v201;
            sub_1BA6C1F54(v198, v200, v203, v201, 1);
            sub_1BA6C1F54(v194, v195, v196, v197, 1);
            sub_1BA6C1F54(v194, v195, v196, v197, 1);
            sub_1BA6C1F54(v198, v200, v203, v201, 1);
            v206 = (uint64_t)v356;
            v207 = v203;
            LOBYTE(v203) = v336;
            sub_1BA6C0C20((uint64_t)v356, v352, v198, v200, v207, v205, v336);
            v208 = v354;
            v209 = (uint64_t)v355;
            v210 = v197;
            v211 = v343;
            sub_1BA6C0C20((uint64_t)v355, v354, v194, v195, v196, v210, v343);
            sub_1BA6C0C20(v209, v208, v194, v195, v196, v204, v211);
            v212 = v198;
            v160 = v342;
            v213 = v203;
            v183 = v352;
            sub_1BA6C0C20(v206, v352, v212, v346, v342, v345, v213);
            if ((v349 & 1) == 0)
              goto LABEL_141;
          }
          else
          {
            v158 = v345;
            v159 = v346;
            v160 = v342;
            v161 = v347;
            v162 = v352;
            v163 = v344;
            if ((v343 & 1) != 0)
              goto LABEL_135;
            v164 = *(_QWORD *)(v347 + 32);
            v165 = *(_BYTE *)(v347 + 40);
            v166 = *(_BYTE *)(v347 + 41);
            v167 = v353;
            v168 = *(_QWORD *)(v353 + 32);
            v169 = *(_BYTE *)(v353 + 40);
            v170 = *(_BYTE *)(v353 + 41);
            v361 = *(_OWORD *)(v347 + 16);
            v362 = v164;
            v363 = v165;
            v364 = v166;
            v357 = *(_OWORD *)(v353 + 16);
            v358 = v168;
            v359 = v169;
            v360 = v170;
            v171 = v351;
            sub_1BA7261E0(v353, v351, v344, v348, 0);
            sub_1BA7261E0(v161, v159, v160, v158, 0);
            sub_1BA7261E0(v161, v159, v160, v158, 0);
            v172 = v348;
            sub_1BA7261E0(v167, v171, v163, v348, 0);
            if ((static FormatCommandBinding.== infix(_:_:)(&v361, &v357) & 1) == 0
              || (sub_1BA8923A8(v159, v171) & 1) == 0)
            {
              sub_1BA6C1F54(v161, v159, v160, v158, 0);
              v315 = v353;
              v316 = v344;
              sub_1BA6C1F54(v353, v171, v344, v172, 0);
              sub_1BA6C1F54(v315, v171, v316, v172, 0);
              v317 = v161;
              v318 = v159;
              v319 = v160;
              v320 = v158;
              v321 = 0;
              goto LABEL_138;
            }
            v173 = v344;
            if (v160 == v344 && v158 == v172)
            {
              sub_1BA6C1F54(v161, v159, v160, v158, 0);
              v174 = v353;
              v175 = v351;
              sub_1BA6C1F54(v353, v351, v160, v158, 0);
              sub_1BA6C1F54(v174, v175, v160, v158, 0);
              sub_1BA6C1F54(v161, v159, v160, v158, 0);
              v176 = (uint64_t)v356;
              sub_1BA6C0C20((uint64_t)v356, v162, v161, v159, v160, v158, v157);
              v178 = v354;
              v177 = (uint64_t)v355;
              v179 = v343;
              sub_1BA6C0C20((uint64_t)v355, v354, v174, v175, v160, v158, v343);
              v180 = v177;
              v181 = v178;
              v182 = v158;
              v183 = v352;
              sub_1BA6C0C20(v180, v178, v174, v175, v160, v182, v179);
            }
            else
            {
              LODWORD(v349) = sub_1BB874398();
              sub_1BA6C1F54(v161, v159, v160, v158, 0);
              v214 = v353;
              v215 = v351;
              sub_1BA6C1F54(v353, v351, v173, v172, 0);
              sub_1BA6C1F54(v214, v215, v173, v172, 0);
              sub_1BA6C1F54(v161, v159, v160, v158, 0);
              sub_1BA6C0C20((uint64_t)v356, v162, v161, v159, v160, v158, v157);
              v183 = v162;
              v216 = (uint64_t)v355;
              v217 = v172;
              v218 = v354;
              v219 = v343;
              sub_1BA6C0C20((uint64_t)v355, v354, v214, v215, v173, v217, v343);
              v220 = v216;
              v181 = v218;
              v221 = v215;
              v176 = (uint64_t)v356;
              v222 = v217;
              v159 = v346;
              sub_1BA6C0C20(v220, v218, v214, v221, v173, v222, v219);
              if ((v349 & 1) == 0)
                goto LABEL_140;
            }
            sub_1BA6C0C20(v176, v183, v161, v159, v160, v345, v336);
            v196 = v344;
            v206 = v176;
            v195 = v351;
            v194 = v353;
            v208 = v181;
            v209 = (uint64_t)v355;
            v211 = v343;
            v204 = v348;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6C0C20(v209, v208, v194, v195, v196, v204, v211);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v81 = v206;
          v82 = v183;
          v84 = v346;
          v83 = v347;
          v85 = v160;
          v86 = v345;
          v87 = v336;
        }
        else
        {
          if (v32 != 128)
          {
LABEL_132:
            v264 = v344;
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v344, v348, v28);
            v265 = v20;
            v266 = v347;
            v267 = v352;
            v268 = v20;
            v269 = v342;
            v270 = v345;
            sub_1BA709DE8((uint64_t)v19, v352, v347, v268, v342, v345, v21);
            sub_1BA6C0C20((uint64_t)v19, v267, v266, v265, v269, v270, v21);
            v234 = (uint64_t)v27;
            v236 = v353;
            v235 = v354;
            v237 = v351;
            v238 = v264;
            v239 = v348;
            LOBYTE(v240) = v28;
            goto LABEL_143;
          }
          v88 = v19[2];
          if (v88 != v27[2])
          {
            v272 = v353;
            v271 = v354;
            v273 = v351;
            v274 = v344;
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v344, v348, v343);
            v275 = v21;
            v276 = (uint64_t)v19;
            v277 = (uint64_t)v19;
            v278 = v352;
            v280 = v346;
            v279 = v347;
            v281 = v342;
            v336 = v275;
            sub_1BA709DE8(v277, v352, v347, v346, v342, v345, v275);
            v282 = v271;
            v283 = v272;
            v284 = v348;
            LOBYTE(v271) = v343;
            sub_1BA709DE8((uint64_t)v27, v282, v283, v273, v274, v348, v343);
            v285 = v345;
            sub_1BA709DE8(v276, v278, v279, v280, v281, v345, v336);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v286 = v279;
            v104 = v336;
            sub_1BA709DE8(v276, v278, v286, v280, v281, v285, v336);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA709DE8((uint64_t)v27, v354, v353, v273, v344, v284, v271);
LABEL_134:
            v287 = v352;
            v288 = v342;
            sub_1BA6C0C20((uint64_t)v356, v352, v347, v346, v342, v345, v104);
            v289 = v354;
            v290 = v104;
            v291 = v353;
            v292 = v351;
            v293 = v344;
            v294 = v348;
            v295 = v343;
            sub_1BA6C0C20((uint64_t)v27, v354, v353, v351, v344, v348, v343);
            sub_1BA6C0C20((uint64_t)v27, v289, v291, v292, v293, v294, v295);
            v296 = v287;
            v297 = v347;
            v298 = v288;
            v299 = v345;
            sub_1BA6C0C20((uint64_t)v356, v296, v347, v346, v298, v345, v290);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6C0C20((uint64_t)v27, v289, v291, v292, v293, v294, v295);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v234 = (uint64_t)v356;
            v235 = v352;
            v236 = v297;
            v237 = v346;
            v238 = v342;
            v239 = v299;
            LOBYTE(v240) = v290;
            goto LABEL_143;
          }
          v89 = v352;
          v90 = v21;
          if (v88)
          {
            v349 = *(unsigned __int8 *)(v331 + 80);
            v91 = v344;
            v92 = v348;
            v93 = v343;
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v344, v348, v343);
            v94 = (uint64_t)v19;
            v95 = v89;
            v97 = v346;
            v96 = v347;
            v98 = v342;
            v99 = v345;
            v100 = v90;
            v101 = v95;
            sub_1BA709DE8(v94, v95, v347, v346, v342, v345, v100);
            sub_1BA709DE8((uint64_t)v355, v354, v353, v351, v91, v92, v93);
            v102 = (uint64_t)v356;
            sub_1BA709DE8((uint64_t)v356, v101, v96, v97, v98, v99, v100);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v103 = v99;
            v104 = v100;
            sub_1BA709DE8(v102, v101, v96, v97, v98, v103, v100);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v27 = v355;
            sub_1BA709DE8((uint64_t)v355, v354, v353, v351, v91, v348, v93);
            v105 = (uint64_t)v330;
            if ((_QWORD *)v102 != v27)
            {
              v106 = (v349 + 32) & ~v349;
              v107 = *(_QWORD *)(v331 + 72);
              do
              {
                v108 = v350;
                sub_1BA4C2DD8((uint64_t)v356 + v106, v350, type metadata accessor for FormatPropertyDefinition);
                sub_1BA4C2DD8((uint64_t)v27 + v106, v105, type metadata accessor for FormatPropertyDefinition);
                _s8NewsFeed24FormatPropertyDefinitionO2eeoiySbAC_ACtFZ_0(v108, v105);
                v110 = v109;
                sub_1BA4A2E80(v105, type metadata accessor for FormatPropertyDefinition);
                sub_1BA4A2E80(v108, type metadata accessor for FormatPropertyDefinition);
                if ((v110 & 1) == 0)
                  goto LABEL_134;
                v106 += v107;
              }
              while (--v88);
            }
          }
          else
          {
            v127 = v353;
            v126 = v354;
            v128 = v351;
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v344, v348, v343);
            v129 = v89;
            v131 = v346;
            v130 = v347;
            v132 = v342;
            v133 = v90;
            v134 = v129;
            sub_1BA709DE8((uint64_t)v19, v129, v347, v346, v342, v345, v133);
            v135 = v127;
            v136 = v128;
            v137 = v344;
            LOBYTE(v127) = v343;
            sub_1BA709DE8((uint64_t)v27, v126, v135, v136, v344, v348, v343);
            v138 = v345;
            sub_1BA709DE8((uint64_t)v19, v134, v130, v131, v132, v345, v133);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v139 = (uint64_t)v19;
            v104 = v133;
            sub_1BA709DE8(v139, v134, v130, v131, v132, v138, v133);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA709DE8((uint64_t)v27, v354, v353, v351, v137, v348, v127);
          }
          v140 = v345;
          sub_1BA6C0C20((uint64_t)v356, v352, v347, v346, v342, v345, v104);
          v141 = v354;
          v142 = v104;
          v143 = v353;
          v144 = v351;
          v145 = v344;
          v146 = v348;
          v147 = v343;
          sub_1BA6C0C20((uint64_t)v27, v354, v353, v351, v344, v348, v343);
          sub_1BA6C0C20((uint64_t)v27, v141, v143, v144, v145, v146, v147);
          sub_1BA6C0C20((uint64_t)v356, v352, v347, v346, v342, v140, v142);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BA6C0C20((uint64_t)v27, v141, v143, v144, v145, v146, v147);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v81 = (uint64_t)v356;
          v82 = v352;
          v84 = v346;
          v83 = v347;
          v85 = v342;
          v86 = v140;
          v87 = v142;
        }
      }
      else
      {
        if (v28 >= 0x40)
          goto LABEL_132;
        v336 = v21;
        v68 = v19[2];
        if (v68 != v27[2])
          goto LABEL_128;
        v69 = (uint64_t)v355;
        v70 = (uint64_t)v356;
        if (v68)
          v71 = v356 == v355;
        else
          v71 = 1;
        if (!v71)
        {
          v111 = 0;
          while (1)
          {
            v112 = v70 + v111;
            v113 = *(_QWORD *)(v70 + v111 + 32);
            v114 = *(_QWORD *)(v70 + v111 + 40);
            v115 = *(_QWORD *)(v70 + v111 + 48);
            v116 = *(_QWORD *)(v70 + v111 + 56);
            v117 = *(_QWORD *)(v112 + 64);
            v118 = *(_QWORD *)(v112 + 72);
            v119 = *(_QWORD *)(v69 + v111 + 48);
            v120 = *(_QWORD *)(v69 + v111 + 56);
            v121 = *(_QWORD *)(v69 + v111 + 64);
            v122 = *(_QWORD *)(v69 + v111 + 72);
            v123 = v113 == *(_QWORD *)(v69 + v111 + 32) && v114 == *(_QWORD *)(v69 + v111 + 40);
            if (!v123 && (sub_1BB874398() & 1) == 0)
              break;
            v124 = v115 == v119 && v116 == v120;
            if (!v124 && (sub_1BB874398() & 1) == 0)
              break;
            v125 = v117 == v121 && v118 == v122;
            if (!v125 && (sub_1BB874398() & 1) == 0)
              break;
            v111 += 48;
            --v68;
            v69 = (uint64_t)v355;
            v70 = (uint64_t)v356;
            if (!v68)
              goto LABEL_56;
          }
LABEL_128:
          v224 = v344;
          v225 = v348;
          v226 = v343;
          sub_1BA709DE8((uint64_t)v355, v354, v353, v351, v344, v348, v343);
          v227 = (uint64_t)v356;
          v228 = v352;
          v229 = v346;
          v230 = v347;
          v231 = v342;
          v232 = v345;
          v233 = v336;
          sub_1BA709DE8((uint64_t)v356, v352, v347, v346, v342, v345, v336);
          sub_1BA6C0C20(v227, v228, v230, v229, v231, v232, v233);
          v235 = v354;
          v234 = (uint64_t)v355;
          v236 = v353;
          v237 = v351;
          v238 = v224;
          v239 = v225;
          LOBYTE(v240) = v226;
LABEL_143:
          sub_1BA6C0C20(v234, v235, v236, v237, v238, v239, v240);
          return 0;
        }
LABEL_56:
        v72 = v344;
        v73 = v348;
        v74 = v343;
        sub_1BA709DE8(v69, v354, v353, v351, v344, v348, v343);
        v75 = v352;
        v76 = v346;
        v77 = v347;
        v78 = v342;
        v79 = v345;
        v80 = v336;
        sub_1BA709DE8(v70, v352, v347, v346, v342, v345, v336);
        sub_1BA6C0C20(v70, v75, v77, v76, v78, v79, v80);
        v82 = v354;
        v81 = (uint64_t)v355;
        v83 = v353;
        v84 = v351;
        v85 = v72;
        v86 = v73;
        v87 = v74;
      }
      sub_1BA6C0C20(v81, v82, v83, v84, v85, v86, v87);
      v11 = v335 + 1;
      result = 1;
      v12 = v333;
      v13 = v332;
      if (v335 + 1 == v334)
        return result;
    }
  }
  return 1;
}

uint64_t sub_1BA88C7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  char v12;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (uint64_t *)(a2 + 64);
    for (i = (uint64_t *)(a1 + 64); ; i += 5)
    {
      v6 = *(i - 2);
      v5 = *(i - 1);
      v14 = *i;
      v8 = *(v3 - 2);
      v7 = *(v3 - 1);
      v9 = *v3;
      v10 = *(i - 4) == *(v3 - 4) && *(i - 3) == *(v3 - 3);
      if (!v10 && (sub_1BB874398() & 1) == 0)
        break;
      v11 = v6 == v8 && v5 == v7;
      if (!v11 && (sub_1BB874398() & 1) == 0)
        break;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      v12 = sub_1BA883A18(v14, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if ((v12 & 1) == 0)
        break;
      v3 += 5;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1BA88C948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
  {
    v18 = 0;
    return v18 & 1;
  }
  if (!v2 || a1 == a2)
  {
    v18 = 1;
    return v18 & 1;
  }
  v3 = v2 - 1;
  v4 = (_QWORD *)(a2 + 56);
  v5 = (_QWORD *)(a1 + 56);
  while (1)
  {
    v6 = *(v5 - 3);
    v7 = *(v5 - 2);
    v8 = *((unsigned __int8 *)v5 - 8);
    v10 = *(v4 - 3);
    v9 = *(v4 - 2);
    v11 = *((unsigned __int8 *)v4 - 8);
    v12 = *v4;
    v26 = *((_BYTE *)v4 - 8);
    v27 = *((_BYTE *)v5 - 8);
    v24 = *v5;
    v25 = v3;
    if (!v27)
      break;
    if (v8 == 1)
    {
      if (v11 != 1)
        goto LABEL_28;
      sub_1BA73B1CC(v6, v7, 1);
      swift_retain();
      sub_1BA73B1CC(v10, v9, 1);
      v13 = v12;
      swift_retain();
      v14 = v6;
      sub_1BA73B1B8(v6, v7, 1);
      v15 = v9;
      sub_1BA73B1B8(v10, v9, 1);
      v16 = v10;
      if (((((v6 & 1) == 0) ^ v10) & 1) == 0)
      {
        sub_1BA73B1B8(v10, v9, 1);
        swift_release();
        v20 = v6;
        v21 = v7;
        v22 = 1;
        goto LABEL_30;
      }
    }
    else
    {
      if (v11 != 2)
        goto LABEL_28;
      sub_1BA73B1CC(v6, v7, 2);
      swift_retain();
      sub_1BA73B1CC(v10, v9, 2);
      v13 = v12;
      swift_retain();
      sub_1BA73B1B8(v6, v7, 2);
      v15 = v9;
      sub_1BA73B1B8(v10, v9, 2);
      v14 = v6;
      v16 = v10;
      if (v6 != v10)
      {
        sub_1BA73B1B8(v10, v9, 2);
        swift_release();
        v20 = v6;
        v21 = v7;
        v22 = 2;
        goto LABEL_30;
      }
    }
LABEL_21:
    v18 = sub_1BB5D7F98(v24, v13);
    sub_1BA73B1B8(v16, v15, v26);
    swift_release();
    sub_1BA73B1B8(v14, v7, v27);
    swift_release();
    v3 = v25 - 1;
    if ((v18 & 1) != 0)
    {
      v4 += 4;
      v5 += 4;
      if (v25)
        continue;
    }
    return v18 & 1;
  }
  if (*((_BYTE *)v4 - 8))
  {
    swift_bridgeObjectRetain();
LABEL_28:
    sub_1BA73B1CC(v10, v9, v11);
    sub_1BA73B1B8(v6, v7, v8);
    sub_1BA73B1B8(v10, v9, v11);
    v18 = 0;
    return v18 & 1;
  }
  if (v6 == v10 && v7 == v9)
    v23 = 1;
  else
    v23 = sub_1BB874398();
  sub_1BA73B1CC(v6, v7, 0);
  swift_retain();
  sub_1BA73B1CC(v10, v9, 0);
  v13 = v12;
  swift_retain();
  sub_1BA73B1CC(v10, v9, 0);
  sub_1BA73B1CC(v6, v7, 0);
  v14 = v6;
  sub_1BA73B1B8(v6, v7, 0);
  v16 = v10;
  v15 = v9;
  sub_1BA73B1B8(v10, v9, 0);
  if ((v23 & 1) != 0)
    goto LABEL_21;
  sub_1BA73B1B8(v10, v9, 0);
  swift_release();
  v20 = v6;
  v21 = v7;
  v22 = 0;
LABEL_30:
  sub_1BA73B1B8(v20, v21, v22);
  swift_release();
  v18 = 0;
  return v18 & 1;
}

uint64_t sub_1BA88CCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  BOOL v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
  {
LABEL_14:
    v9 = 0;
    return v9 & 1;
  }
  if (v2 && a1 != a2)
  {
    v3 = v2 - 1;
    v4 = (uint64_t *)(a2 + 40);
    v5 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v6 = *v5;
      v7 = *v4;
      v13 = *(v5 - 1);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      static FormatExpression.== infix(_:_:)((uint64_t)&v13);
      if ((v8 & 1) == 0)
        break;
      v9 = sub_1BB5D7F98(v6, v7);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v11 = v3-- != 0;
      if ((v9 & 1) != 0)
      {
        v4 += 2;
        v5 += 2;
        if (v11)
          continue;
      }
      return v9 & 1;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_14;
  }
  v9 = 1;
  return v9 & 1;
}

uint64_t sub_1BA88CE24(uint64_t a1, uint64_t a2)
{
  return sub_1BA895610(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatWebEmbedNodeContent.== infix(_:_:));
}

uint64_t sub_1BA88CE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  BOOL v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  uint64_t v34;

  v4 = type metadata accessor for FormatOptionsNodeStatement();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v34 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v11 || a1 == a2)
    return 1;
  v12 = 0;
  v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(v8 + 72);
  while (1)
  {
    sub_1BA4C2DD8(v14 + v16 * v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    sub_1BA4C2DD8(v15 + v16 * v12, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    v18 = *v10 == *v6 && v10[1] == v6[1];
    if (!v18 && (sub_1BB874398() & 1) == 0)
      break;
    static FormatOptionsNodeStatementValue.== infix(_:_:)((uint64_t)v10 + *(int *)(v4 + 20), (uint64_t)v6 + *(int *)(v4 + 20));
    if ((v19 & 1) == 0)
      break;
    v20 = *(int *)(v4 + 24);
    v21 = *(_QWORD *)((char *)v10 + v20);
    v22 = *(_QWORD *)((char *)v6 + v20);
    v23 = *(_QWORD *)(v21 + 16);
    if (v23 != *(_QWORD *)(v22 + 16))
      break;
    if (v23)
      v24 = v21 == v22;
    else
      v24 = 1;
    if (!v24)
    {
      v25 = (unsigned __int8 *)(v21 + 32);
      v26 = (unsigned __int8 *)(v22 + 32);
      do
      {
        v29 = *v25++;
        v28 = v29;
        v31 = *v26++;
        v30 = v31;
        if (v28 >> 6)
        {
          if (v28 >> 6 == 1)
          {
            v32 = (v30 ^ v28) & 1;
            if ((v30 & 0xC0) != 0x40 || v32 != 0)
              goto LABEL_33;
          }
          else if ((v30 & 0xC0) != 0x80)
          {
            goto LABEL_33;
          }
        }
        else if (v30 > 0x3F || v28 != v30)
        {
          goto LABEL_33;
        }
        --v23;
      }
      while (v23);
    }
    ++v12;
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    result = 1;
    if (v12 == v11)
      return result;
  }
LABEL_33:
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
  return 0;
}

uint64_t sub_1BA88D048(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  BOOL v41;
  char v42;
  uint64_t v43;
  double v44;
  double v45;
  char v46;
  char v47;
  char v48;
  char v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[8];
  _QWORD v72[8];
  _QWORD v73[8];
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2)
      return 1;
    v3 = a1;
    result = 1;
    if (v3 == a2)
      return result;
    v61 = 0;
    v5 = v2 - 1;
    v43 = v3;
    while (1)
    {
      v6 = v3 + v61;
      v7 = *(_QWORD *)(v3 + v61 + 32);
      v8 = *(_QWORD *)(v3 + v61 + 40);
      v10 = *(_QWORD *)(v3 + v61 + 48);
      v9 = *(_QWORD *)(v3 + v61 + 56);
      v11 = *(_QWORD *)(v3 + v61 + 64);
      v12 = *(_QWORD *)(v3 + v61 + 72);
      v14 = *(_QWORD *)(v3 + v61 + 80);
      v13 = *(_QWORD *)(v3 + v61 + 88);
      v15 = *(unsigned __int8 *)(v3 + v61 + 96);
      v16 = *(unsigned __int8 *)(v3 + v61 + 97);
      v45 = *(double *)(v3 + v61 + 104);
      v17 = *(_BYTE *)(v3 + v61 + 112);
      v18 = *(_BYTE *)(v6 + 113);
      v19 = *(_QWORD *)(a2 + v61 + 32);
      v20 = *(_QWORD *)(a2 + v61 + 40);
      v21 = *(_QWORD *)(a2 + v61 + 48);
      v22 = *(_QWORD *)(a2 + v61 + 56);
      v23 = *(_QWORD *)(a2 + v61 + 64);
      v24 = *(_QWORD *)(a2 + v61 + 72);
      v25 = *(_QWORD *)(a2 + v61 + 80);
      v26 = *(_QWORD *)(a2 + v61 + 88);
      v27 = *(_BYTE *)(a2 + v61 + 96);
      v28 = *(unsigned __int8 *)(a2 + v61 + 97);
      v44 = *(double *)(a2 + v61 + 104);
      v46 = *(_BYTE *)(a2 + v61 + 112);
      LOBYTE(v6) = *(_BYTE *)(a2 + v61 + 113);
      v70 = v7;
      v73[0] = v7;
      v73[1] = v8;
      v73[2] = v10;
      v73[3] = v9;
      v73[4] = v11;
      v73[5] = v12;
      v73[6] = v14;
      v73[7] = v13;
      v29 = v13;
      v74 = v15;
      v75 = v19;
      v76 = v20;
      v77 = v21;
      v78 = v22;
      v79 = v23;
      v80 = v24;
      v81 = v25;
      v82 = v26;
      v83 = v27;
      v63 = v24;
      v64 = v13;
      v50 = v5;
      v58 = v20;
      v47 = v17;
      v48 = v6;
      v49 = v18;
      v51 = v27;
      v52 = v15;
      v67 = v25;
      v68 = v26;
      v65 = v22;
      v66 = v23;
      v62 = v21;
      v69 = v8;
      v57 = v19;
      v53 = v28;
      v54 = v16;
      v59 = v11;
      v60 = v9;
      v55 = v14;
      if (v15 == 1)
      {
        if ((v27 & 1) == 0)
          goto LABEL_33;
        v72[0] = v7;
        v72[1] = v8;
        v72[2] = v10;
        v72[3] = v9;
        v72[4] = v11;
        v72[5] = v12;
        v72[6] = v14;
        v72[7] = v13;
        v71[0] = v19;
        v71[1] = v20;
        v71[2] = v21;
        v71[3] = v22;
        v71[4] = v23;
        v71[5] = v24;
        v71[6] = v25;
        v71[7] = v26;
        v30 = v19;
        v31 = v20;
        v32 = v21;
        v33 = v24;
        sub_1BA8961B4(v19, v20, v21, v22, v23, v24, v25, v26, 1);
        sub_1BA8961B4(v70, v69, v10, v9, v59, v12, v14, v64, 1);
        sub_1BA8961B4(v70, v69, v10, v9, v59, v12, v14, v64, 1);
        sub_1BA8961B4(v30, v31, v32, v65, v66, v33, v67, v68, 1);
        sub_1BA8961B4(v30, v31, v32, v65, v66, v33, v67, v68, 1);
        sub_1BA8961B4(v70, v69, v10, v9, v59, v12, v14, v64, 1);
        v41 = _s8NewsFeed14FormatGradientV2eeoiySbAC_ACtFZ_0((uint64_t)v72, (uint64_t)v71);
        sub_1BA896218((uint64_t)v73);
        sub_1BA8962BC(v30, v31, v32, v65, v66, v33, v67, v68, 1);
        v34 = v9;
        v35 = v59;
        v8 = v69;
        v36 = v12;
        v37 = v55;
        sub_1BA8962BC(v70, v69, v10, v60, v59, v12, v55, v64, 1);
        if (!v41)
        {
          sub_1BA8962BC(v57, v58, v62, v65, v66, v63, v67, v68, 1);
          sub_1BA8962BC(v70, v69, v10, v60, v59, v12, v55, v64, 1);
          return 0;
        }
      }
      else
      {
        if ((v27 & 1) != 0)
        {
LABEL_33:
          sub_1BA8961B4(v19, v20, v21, v22, v23, v24, v25, v26, v15 ^ 1);
          sub_1BA8961B4(v70, v8, v10, v9, v11, v12, v14, v29, v15);
          sub_1BA896218((uint64_t)v73);
          return 0;
        }
        v72[0] = v7;
        v71[0] = v19;
        v38 = v23;
        v39 = v25;
        sub_1BA8961B4(v19, v20, v21, v22, v23, v24, v25, v26, 0);
        sub_1BA8961B4(v70, v8, v10, v9, v11, v12, v14, v29, 0);
        sub_1BA8961B4(v70, v8, v10, v9, v11, v12, v14, v29, 0);
        sub_1BA8961B4(v57, v58, v62, v65, v38, v63, v39, v68, 0);
        sub_1BA8961B4(v57, v58, v62, v65, v38, v63, v39, v68, 0);
        sub_1BA8961B4(v70, v8, v10, v9, v11, v12, v14, v64, 0);
        static FormatColor.== infix(_:_:)((uint64_t)v72);
        v42 = v40;
        sub_1BA896218((uint64_t)v73);
        sub_1BA8962BC(v57, v58, v62, v65, v66, v63, v67, v68, 0);
        v34 = v9;
        v35 = v11;
        v36 = v12;
        v37 = v55;
        sub_1BA8962BC(v70, v8, v10, v60, v11, v12, v55, v64, 0);
        if ((v42 & 1) == 0)
        {
          sub_1BA8962BC(v57, v58, v62, v65, v66, v63, v67, v68, 0);
          sub_1BA8962BC(v70, v8, v10, v60, v11, v12, v55, v64, 0);
          return 0;
        }
      }
      if ((_DWORD)v54 != 16)
        break;
      sub_1BA8962BC(v57, v58, v62, v65, v66, v63, v67, v68, v51);
      sub_1BA8962BC(v70, v8, v10, v34, v35, v36, v37, v64, v52);
      v3 = v43;
      if (v53 != 16)
        return 0;
      if ((v49 & 1) != 0)
      {
        if ((v48 & 1) == 0)
          return 0;
      }
      else
      {
        if ((v48 & 1) != 0)
          return 0;
        if ((v47 & 1) != 0)
        {
          if (v45 == 0.0)
          {
            if ((v46 & 1) == 0 || v44 != 0.0)
              return 0;
          }
          else if ((v46 & 1) == 0 || v44 == 0.0)
          {
            return 0;
          }
        }
        else if ((v46 & 1) != 0 || v45 != v44)
        {
          return 0;
        }
      }
      if (!v50)
        return 1;
      v61 += 88;
      v5 = v50 - 1;
    }
    if (v53 != 16)
      __asm { BR              X8 }
    sub_1BA8962BC(v57, v58, v62, v65, v66, v63, v67, v68, v51);
    sub_1BA8962BC(v70, v8, v10, v34, v35, v36, v37, v64, v52);
  }
  return 0;
}

uint64_t sub_1BA88DA98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  BOOL v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  BOOL v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v26 = a1 + 32;
    v4 = a2 + 32;
    while (1)
    {
      v6 = (_QWORD *)(v26 + 40 * v3);
      v8 = v6[2];
      v7 = v6[3];
      v9 = v6[4];
      v10 = (_QWORD *)(v4 + 40 * v3);
      v12 = v10[2];
      v11 = v10[3];
      v13 = v10[4];
      v14 = *v6 == *v10 && v6[1] == v10[1];
      if (!v14 && (sub_1BB874398() & 1) == 0)
        return 0;
      if (v7)
      {
        if (!v11)
          return 0;
        v15 = v8 == v12 && v7 == v11;
        if (!v15 && (sub_1BB874398() & 1) == 0)
          return 0;
      }
      else if (v11)
      {
        return 0;
      }
      v16 = *(_QWORD *)(v9 + 16);
      if (v16 != *(_QWORD *)(v13 + 16))
        return 0;
      if (v16)
        v17 = v9 == v13;
      else
        v17 = 1;
      if (!v17)
      {
        v18 = (uint64_t *)(v13 + 56);
        v19 = (uint64_t *)(v9 + 56);
        do
        {
          v20 = *(v19 - 1);
          v21 = *v19;
          v22 = *(v18 - 1);
          v23 = *v18;
          v24 = *(v19 - 3) == *(v18 - 3) && *(v19 - 2) == *(v18 - 2);
          if (!v24 && (sub_1BB874398() & 1) == 0)
            return 0;
          v25 = v20 == v22 && v21 == v23;
          if (!v25 && (sub_1BB874398() & 1) == 0)
            return 0;
          v18 += 4;
          v19 += 4;
        }
        while (--v16);
      }
      ++v3;
      result = 1;
      if (v3 == v2)
        return result;
    }
  }
  return 1;
}

uint64_t sub_1BA88DC28(uint64_t a1, uint64_t a2)
{
  return sub_1BA88214C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage, (uint64_t (*)(char *, char *))static FormatPackage.== infix(_:_:));
}

uint64_t sub_1BA88DC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  _OWORD v17[7];
  _OWORD v18[2];
  _OWORD v19[7];
  _OWORD v20[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (_OWORD *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = v3[7];
        v19[6] = v3[6];
        v20[0] = v7;
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v3 + 121);
        v8 = v3[3];
        v19[2] = v3[2];
        v19[3] = v8;
        v9 = v3[5];
        v19[4] = v3[4];
        v19[5] = v9;
        v10 = v3[1];
        v19[0] = *v3;
        v19[1] = v10;
        v11 = v4[7];
        v17[6] = v4[6];
        v18[0] = v11;
        *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v4 + 121);
        v12 = v4[3];
        v17[2] = v4[2];
        v17[3] = v12;
        v13 = v4[5];
        v17[4] = v4[4];
        v17[5] = v13;
        v14 = v4[1];
        v17[0] = *v4;
        v17[1] = v14;
        v15 = static PuzzleMenuConfig.== infix(_:_:)(v19, v17);
        if ((v15 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 9;
        v3 += 9;
      }
      while (v6);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1BA88DD18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  char v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a1 + 32);
    v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      v7 = *v3++;
      v6 = v7;
      v9 = *v4++;
      v8 = v9;
      if (v6 == 1)
        v10 = 0x64656C6261736964;
      else
        v10 = 0xD000000000000012;
      if (v6 == 1)
        v11 = 0xE800000000000000;
      else
        v11 = 0x80000001BB959DB0;
      if (v6)
        v12 = v10;
      else
        v12 = 0x7463757274736564;
      if (v6)
        v13 = v11;
      else
        v13 = 0xEB00000000657669;
      v14 = 0x80000001BB959DB0;
      if (v8 == 1)
        v15 = 0x64656C6261736964;
      else
        v15 = 0xD000000000000012;
      if (v8 == 1)
        v14 = 0xE800000000000000;
      if (v8)
        v16 = v15;
      else
        v16 = 0x7463757274736564;
      if (v8)
        v17 = v14;
      else
        v17 = 0xEB00000000657669;
      if (v12 == v16 && v13 == v17)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v5 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0)
          return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

unint64_t sub_1BA88DE7C(unint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v3 = result;
  v4 = result >> 62;
  if (result >> 62)
    goto LABEL_34;
  v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = a2 >> 62;
  if (!(a2 >> 62))
    goto LABEL_3;
  while (2)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (v5 != v18)
      goto LABEL_30;
LABEL_4:
    if (!v5)
      goto LABEL_28;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    if (v3 < 0)
      v7 = v3;
    if (!v4)
      v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
    v8 = a2 & 0xFFFFFFFFFFFFFF8;
    v9 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
    if ((a2 & 0x8000000000000000) != 0)
      v8 = a2;
    if (v6)
      v9 = v8;
    if (v7 == v9)
    {
LABEL_28:
      v16 = 1;
      return v16 & 1;
    }
    if (v5 < 0)
    {
      __break(1u);
      return result;
    }
    v10 = 0;
    v11 = a2 & 0xC000000000000001;
    while (v5 != v10)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v4 = MEMORY[0x1BCCE4630](v10, v3);
        if (v11)
          goto LABEL_19;
      }
      else
      {
        v4 = *(_QWORD *)(v3 + 32 + 8 * v10);
        swift_retain();
        if (v11)
        {
LABEL_19:
          v12 = MEMORY[0x1BCCE4630](v10, a2);
          goto LABEL_23;
        }
      }
      if (v10 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_33;
      v12 = *(_QWORD *)(a2 + 32 + 8 * v10);
      swift_retain();
LABEL_23:
      v19 = *(_QWORD *)(v4 + 16);
      static FormatExpression.== infix(_:_:)((uint64_t)&v19);
      if ((v13 & 1) == 0)
      {
        swift_release();
        swift_release();
        goto LABEL_30;
      }
      swift_beginAccess();
      v14 = *(_QWORD *)(v4 + 24);
      swift_beginAccess();
      v15 = *(_QWORD *)(v12 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1BA883A18(v14, v15);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0 && v5 - 1 != v10++)
        continue;
      return v16 & 1;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    v6 = a2 >> 62;
    if (a2 >> 62)
      continue;
    break;
  }
LABEL_3:
  if (v5 == *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_4;
LABEL_30:
  v16 = 0;
  return v16 & 1;
}

uint64_t sub_1BA88E0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1 + 32;
    v4 = a2 + 32;
    do
    {
      ++v3;
      ++v4;
      v5 = FormatItemTrait.rawValue.getter();
      v7 = v6;
      if (v5 == FormatItemTrait.rawValue.getter() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v10 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
          return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1BA88E1D8(uint64_t a1, uint64_t a2)
{
  return sub_1BA895610(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatDecorationContent.== infix(_:_:));
}

uint64_t sub_1BA88E1E4(uint64_t a1, uint64_t a2)
{
  return sub_1BA8954B8(a1, a2, (uint64_t (*)(char *, char *))static FormatButtonNodeAction.== infix(_:_:));
}

uint64_t sub_1BA88E1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v9 = 1;
    }
    else
    {
      v3 = (uint64_t *)(a1 + 32);
      v4 = (uint64_t *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v7 = *v3++;
        v6 = v7;
        v8 = *v4++;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9 = sub_1BA8588BC(v6, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 = v5-- != 0;
      }
      while ((v9 & 1) != 0 && v11);
    }
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1BA88E29C(uint64_t a1, uint64_t a2)
{
  return sub_1BA748C14(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], &qword_1EF2A96D8, MEMORY[0x1E0DB48C8]);
}

uint64_t sub_1BA88E2B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  int v16;
  uint64_t v17;
  char v18;
  BOOL v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  char v22;
  uint64_t v23;
  BOOL v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = 0;
  v4 = a1 + 32;
  v5 = a2 + 32;
  while (1)
  {
    v6 = (unsigned __int8 *)(v4 + 32 * v3);
    v7 = *v6;
    v9 = *((_QWORD *)v6 + 1);
    v8 = *((_QWORD *)v6 + 2);
    v10 = v6[24];
    v11 = (unsigned __int8 *)(v5 + 32 * v3);
    v12 = *v11;
    v14 = *((_QWORD *)v11 + 1);
    v13 = *((_QWORD *)v11 + 2);
    v15 = v11[24];
    if (v7 >> 6)
    {
      v16 = v12 & 0xC0;
      if (v7 >> 6 == 1)
      {
        if (v16 != 64)
          return 0;
      }
      else if (v16 != 128)
      {
        return 0;
      }
    }
    else
    {
      if (v12 > 0x3F)
        return 0;
      if (v7)
      {
        if (v7 == 1)
        {
          if (v12 != 1)
            return 0;
        }
        else if (v12 != 2)
        {
          return 0;
        }
      }
      else if (v12)
      {
        return 0;
      }
    }
    if ((v10 & 1) == 0)
      break;
    if ((v15 & 1) == 0)
      goto LABEL_46;
    v17 = *(_QWORD *)(v9 + 16);
    v18 = v10;
    if (v17 != *(_QWORD *)(v14 + 16))
      goto LABEL_47;
    if (v17)
      v19 = v9 == v14;
    else
      v19 = 1;
    if (!v19)
    {
      v20 = (unsigned __int8 *)(v9 + 32);
      v21 = (unsigned __int8 *)(v14 + 32);
      while (*v20 == *v21)
      {
        ++v20;
        ++v21;
        if (!--v17)
          goto LABEL_29;
      }
      v10 = 1;
      v18 = 1;
      goto LABEL_47;
    }
LABEL_29:
    v22 = sub_1BA8833A4(v8, v13);
    sub_1BA896BB8(v9, v8, 1);
    sub_1BA896BB8(v14, v13, 1);
    sub_1BA896BE0(v9, v8, 1);
    sub_1BA896BE0(v14, v13, 1);
    if ((v22 & 1) == 0)
      return 0;
LABEL_41:
    ++v3;
    result = 1;
    if (v3 == v2)
      return result;
  }
  if ((v15 & 1) != 0)
  {
LABEL_46:
    v18 = v10 ^ 1;
    goto LABEL_47;
  }
  v23 = *(_QWORD *)(v9 + 16);
  v18 = v10;
  if (v23 != *(_QWORD *)(v14 + 16))
    goto LABEL_47;
  if (v23)
    v24 = v9 == v14;
  else
    v24 = 1;
  if (v24)
  {
LABEL_40:
    sub_1BA896BB8(v9, v8, 0);
    sub_1BA896BB8(v14, v13, 0);
    sub_1BA896BE0(v9, v8, 0);
    sub_1BA896BE0(v14, v13, 0);
    goto LABEL_41;
  }
  v25 = (unsigned __int8 *)(v9 + 32);
  v26 = (unsigned __int8 *)(v14 + 32);
  while (*v25 == *v26)
  {
    ++v25;
    ++v26;
    if (!--v23)
      goto LABEL_40;
  }
  v10 = 0;
  v18 = 0;
LABEL_47:
  sub_1BA896BB8(v9, v8, v10);
  sub_1BA896BB8(v14, v13, v18);
  sub_1BA896BE0(v9, v8, v10);
  sub_1BA896BE0(v14, v13, v18);
  return 0;
}

uint64_t sub_1BA88E548(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __int128 v8;
  char v9;
  BOOL v11;
  _OWORD v13[3];
  char v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v9 = 1;
    }
    else
    {
      v3 = v2 - 1;
      v4 = (__int128 *)(a1 + 48);
      v5 = a2 + 80;
      do
      {
        v6 = *((_BYTE *)v4 + 32);
        v7 = *v4;
        v8 = v4[1];
        v13[0] = *(v4 - 1);
        v13[1] = v7;
        v13[2] = v8;
        v14 = v6;
        _s8NewsFeed25FormatBezierPathComponentO2eeoiySbAC_ACtFZ_0((uint64_t)v13);
        v11 = v3-- != 0;
        if ((v9 & 1) == 0)
          break;
        v4 = (__int128 *)((char *)v4 + 56);
        v5 += 56;
      }
      while (v11);
    }
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

void sub_1BA88E600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16) || !v2 || a1 == a2)
    return;
  v3 = 0;
  v4 = a1 + 32;
  v5 = a2 + 32;
  while (1)
  {
    v6 = *(_QWORD *)(v4 + 16 * v3);
    v7 = *(_QWORD *)(v4 + 16 * v3 + 8);
    v8 = (uint64_t *)(v5 + 16 * v3);
    v9 = v8[1];
    v13 = *v8;
    v14 = v6;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    static FormatExpression.== infix(_:_:)((uint64_t)&v14);
    if ((v10 & 1) == 0 || (v11 = *(_QWORD *)(v7 + 16), v11 != *(_QWORD *)(v9 + 16)))
    {
LABEL_18:
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    if (v11)
      break;
LABEL_13:
    swift_bridgeObjectRelease();
    swift_release();
LABEL_15:
    ++v3;
    swift_bridgeObjectRelease();
    swift_release();
    if (v3 == v2)
      return;
  }
  if (v7 == v9)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v12 = 0;
  while (1)
  {
    v14 = *(_QWORD *)(v7 + 8 * v12 + 32);
    if (v12 >= *(_QWORD *)(v9 + 16))
      break;
    v13 = *(_QWORD *)(v9 + 8 * v12 + 32);
    if ((static FormatAdjustment.== infix(_:_:)(&v14, &v13) & 1) == 0)
      goto LABEL_18;
    if (v11 == ++v12)
      goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1BA88E794(uint64_t a1, uint64_t a2)
{
  return sub_1BA895610(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatVideoNodeContent.== infix(_:_:));
}

uint64_t sub_1BA88E7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 *v3;
  __int128 *i;
  __int128 v5;
  char v6;
  char v7;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (__int128 *)(a1 + 32);
    for (i = (__int128 *)(a2 + 32); ; ++i)
    {
      v5 = *v3;
      v10 = *i;
      v11 = v5;
      v9 = v5;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      static FormatExpression.== infix(_:_:)((uint64_t)&v9);
      if ((v6 & 1) == 0)
        break;
      v7 = static FormatVideoNodeContent.== infix(_:_:)((char *)&v11 + 8, (char *)&v10 + 8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if ((v7 & 1) == 0)
        return 0;
      ++v3;
      if (!--v2)
        return 1;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return 0;
}

uint64_t sub_1BA88E8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  BOOL v13;
  _QWORD v15[2];
  __int128 v16;
  char v17;
  _QWORD v18[2];
  __int128 v19;
  char v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v11 = 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v7 = *(_QWORD *)(a1 + v5 + 40);
        v8 = *(_BYTE *)(a1 + v5 + 64);
        v18[0] = *(_QWORD *)(a1 + v5 + 32);
        v18[1] = v7;
        v19 = *(_OWORD *)(a1 + v5 + 48);
        v20 = v8;
        v9 = *(_QWORD *)(a2 + v5 + 40);
        v10 = *(_BYTE *)(a2 + v5 + 64);
        v15[0] = *(_QWORD *)(a2 + v5 + 32);
        v15[1] = v9;
        v16 = *(_OWORD *)(a2 + v5 + 48);
        v17 = v10;
        v11 = _s8NewsFeed30FormatSponsoredBannerNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v18, (uint64_t)v15);
        v13 = v6-- != 0;
        if ((v11 & 1) == 0)
          break;
        v5 += 40;
      }
      while (v13);
    }
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1BA88E9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *i;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  _BOOL4 v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a1 + 65);
    for (i = (unsigned __int8 *)(a2 + 65); ; i += 40)
    {
      v5 = *(uint64_t *)(v3 - 17);
      v6 = *(v3 - 1);
      v7 = *v3;
      v31 = *(uint64_t *)(i - 17);
      v32 = *(_QWORD *)(i - 9);
      v33 = *(_QWORD *)(v3 - 9);
      LODWORD(v8) = *(i - 1);
      v9 = *i;
      if (*(_QWORD *)(v3 - 33) != *(_QWORD *)(i - 33) || *(_QWORD *)(v3 - 25) != *(_QWORD *)(i - 25))
      {
        v10 = *(v3 - 1);
        v11 = *(i - 1);
        v8 = *(_QWORD *)(v3 - 17);
        v12 = sub_1BB874398();
        v5 = v8;
        LODWORD(v8) = v11;
        v6 = v10;
        if ((v12 & 1) == 0)
          return 0;
      }
      if (v6 > 0xFD)
        break;
      if (v8 > 0xFD)
      {
LABEL_30:
        v19 = v8;
        v20 = v5;
        sub_1BA6E6C54(v5, v33, v6);
        sub_1BA6E6C54(v31, v32, v19);
        sub_1BA6E6CC4(v20, v33, v6);
        v21 = v31;
        v22 = v32;
        v23 = v19;
        goto LABEL_36;
      }
      v30 = v7;
      if ((v6 & 0x80) == 0)
      {
        if ((v8 & 0x80) != 0)
        {
          v24 = v8;
          v8 = v5;
          sub_1BA6E6C54(v5, v33, v6);
          sub_1BA6E6C54(v8, v33, v6);
          swift_bridgeObjectRetain();
          v5 = v8;
          LOBYTE(v8) = v24;
LABEL_32:
          v25 = v8;
          v26 = v8;
          v17 = v5;
          sub_1BA6E6C54(v31, v32, v25);
          swift_bridgeObjectRetain();
          v18 = v33;
          sub_1BA6E6C54(v17, v33, v6);
          swift_bridgeObjectRetain();
          sub_1BA6E6C54(v31, v32, v26);
          sub_1BA6F2B88(v17, v33, v6);
          sub_1BA6F2B88(v31, v32, v26);
          sub_1BA6E6CC4(v17, v33, v6);
          sub_1BA6E6CC4(v17, v33, v6);
          swift_bridgeObjectRelease();
          sub_1BA6E6CC4(v31, v32, v26);
LABEL_35:
          swift_bridgeObjectRelease();
          v21 = v17;
          v22 = v18;
          v23 = v6;
LABEL_36:
          sub_1BA6E6CC4(v21, v22, v23);
          return 0;
        }
        if (*(double *)&v5 != *(double *)&v31)
        {
          v18 = v33;
          v27 = v8;
          v17 = v5;
          sub_1BA6E6C54(v5, v33, v6);
          sub_1BA6E6C54(v31, v32, v27);
          swift_bridgeObjectRetain();
          sub_1BA6E6C54(v17, v33, v6);
          sub_1BA6F2B88(v17, v33, v6);
          sub_1BA6F2B88(v31, v32, v27);
          goto LABEL_35;
        }
        v13 = v5;
        sub_1BA6E6C54(v5, v33, v6);
        sub_1BA6E6C54(v13, v33, v6);
        sub_1BA6E6C54(v13, v33, v6);
        sub_1BA6E6C54(v31, v32, v8);
        sub_1BA6E6C54(v13, v33, v6);
        sub_1BA6E6C54(v31, v32, v8);
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v13, v33, v6);
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v31, v32, v8);
        v28 = sub_1BA620178(v33, v32);
        sub_1BA6F2B88(v13, v33, v6);
        sub_1BA6F2B88(v31, v32, v8);
        sub_1BA6E6CC4(v31, v32, v8);
        sub_1BA6E6CC4(v13, v33, v6);
        sub_1BA6E6CC4(v13, v33, v6);
        sub_1BA6F2B88(v13, v33, v6);
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v31, v32, v8);
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v13, v33, v6);
        result = 0;
        if ((v28 & 1) == 0 || ((((v6 & 1) == 0) ^ v8) & 1) == 0)
          return result;
LABEL_19:
        if (v7 == 2)
          goto LABEL_5;
        goto LABEL_20;
      }
      if ((v8 & 0x80) == 0)
        goto LABEL_32;
      v29 = (v5 & 1) == 0;
      v15 = v8;
      v16 = v8;
      v17 = v5;
      sub_1BA6E6C54(v31, v32, v15);
      swift_bridgeObjectRetain();
      v18 = v33;
      sub_1BA6E6C54(v17, v33, v6);
      swift_bridgeObjectRetain();
      sub_1BA6E6C54(v31, v32, v16);
      sub_1BA6F2B88(v17, v33, v6);
      sub_1BA6F2B88(v31, v32, v16);
      sub_1BA6E6CC4(v17, v33, v6);
      if (((v29 ^ v31) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v31, v32, v16);
        goto LABEL_35;
      }
      sub_1BA6E6CC4(v17, v33, v6);
      swift_bridgeObjectRelease();
      sub_1BA6E6CC4(v31, v32, v16);
      swift_bridgeObjectRelease();
      sub_1BA6E6CC4(v17, v33, v6);
      LOBYTE(v7) = v30;
      if (v30 == 2)
      {
LABEL_5:
        if (v9 != 2)
          return 0;
        goto LABEL_6;
      }
LABEL_20:
      result = 0;
      if (v9 == 2 || ((((v7 & 1) == 0) ^ v9) & 1) == 0)
        return result;
LABEL_6:
      v3 += 40;
      if (!--v2)
        return 1;
    }
    if (v8 <= 0xFD)
      goto LABEL_30;
    goto LABEL_19;
  }
  return 1;
}

uint64_t sub_1BA88EF54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  BOOL v15;
  _QWORD v17[2];
  __int128 v18;
  uint64_t v19;
  char v20;
  _QWORD v21[2];
  __int128 v22;
  uint64_t v23;
  char v24;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v13 = 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v7 = *(_QWORD *)(a1 + v5 + 40);
        v8 = *(_QWORD *)(a1 + v5 + 64);
        v9 = *(_BYTE *)(a1 + v5 + 72);
        v21[0] = *(_QWORD *)(a1 + v5 + 32);
        v21[1] = v7;
        v22 = *(_OWORD *)(a1 + v5 + 48);
        v23 = v8;
        v24 = v9;
        v10 = *(_QWORD *)(a2 + v5 + 40);
        v11 = *(_QWORD *)(a2 + v5 + 64);
        v12 = *(_BYTE *)(a2 + v5 + 72);
        v17[0] = *(_QWORD *)(a2 + v5 + 32);
        v17[1] = v10;
        v18 = *(_OWORD *)(a2 + v5 + 48);
        v19 = v11;
        v20 = v12;
        v13 = _s8NewsFeed27FormatProgressViewNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v21, (uint64_t)v17);
        v15 = v6-- != 0;
        if ((v13 & 1) == 0)
          break;
        v5 += 48;
      }
      while (v15);
    }
  }
  else
  {
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1BA88F024(uint64_t a1, uint64_t a2)
{
  return sub_1BA88F118(a1, a2, (uint64_t (*)(_OWORD *, _OWORD *))_s8NewsFeed20FormatVideoNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0);
}

uint64_t sub_1BA88F030(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  _OWORD v17[9];
  uint64_t v18;
  _OWORD v19[9];
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = *(_OWORD *)(v3 + 112);
        v19[6] = *(_OWORD *)(v3 + 96);
        v19[7] = v7;
        v19[8] = *(_OWORD *)(v3 + 128);
        v20 = *(_QWORD *)(v3 + 144);
        v8 = *(_OWORD *)(v3 + 48);
        v19[2] = *(_OWORD *)(v3 + 32);
        v19[3] = v8;
        v9 = *(_OWORD *)(v3 + 80);
        v19[4] = *(_OWORD *)(v3 + 64);
        v19[5] = v9;
        v10 = *(_OWORD *)(v3 + 16);
        v19[0] = *(_OWORD *)v3;
        v19[1] = v10;
        v11 = *(_OWORD *)(v4 + 112);
        v17[6] = *(_OWORD *)(v4 + 96);
        v17[7] = v11;
        v17[8] = *(_OWORD *)(v4 + 128);
        v18 = *(_QWORD *)(v4 + 144);
        v12 = *(_OWORD *)(v4 + 48);
        v17[2] = *(_OWORD *)(v4 + 32);
        v17[3] = v12;
        v13 = *(_OWORD *)(v4 + 80);
        v17[4] = *(_OWORD *)(v4 + 64);
        v17[5] = v13;
        v14 = *(_OWORD *)(v4 + 16);
        v17[0] = *(_OWORD *)v4;
        v17[1] = v14;
        v15 = _s8NewsFeed25FormatIssueCoverNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v19, (uint64_t)v17);
        if ((v15 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 152;
        v3 += 152;
      }
      while (v6);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1BA88F118(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *, _OWORD *))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  _OWORD v21[10];
  char v22;
  _OWORD v23[10];
  char v24;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 == *(_QWORD *)(a2 + 16))
  {
    if (!v3 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v5 = a1 + 32;
      v6 = a2 + 32;
      v7 = v3 - 1;
      do
      {
        v8 = v7;
        v9 = *(_OWORD *)(v5 + 144);
        v23[8] = *(_OWORD *)(v5 + 128);
        v23[9] = v9;
        v24 = *(_BYTE *)(v5 + 160);
        v10 = *(_OWORD *)(v5 + 80);
        v23[4] = *(_OWORD *)(v5 + 64);
        v23[5] = v10;
        v11 = *(_OWORD *)(v5 + 112);
        v23[6] = *(_OWORD *)(v5 + 96);
        v23[7] = v11;
        v12 = *(_OWORD *)(v5 + 16);
        v23[0] = *(_OWORD *)v5;
        v23[1] = v12;
        v13 = *(_OWORD *)(v5 + 48);
        v23[2] = *(_OWORD *)(v5 + 32);
        v23[3] = v13;
        v14 = *(_OWORD *)(v6 + 144);
        v21[8] = *(_OWORD *)(v6 + 128);
        v21[9] = v14;
        v22 = *(_BYTE *)(v6 + 160);
        v15 = *(_OWORD *)(v6 + 80);
        v21[4] = *(_OWORD *)(v6 + 64);
        v21[5] = v15;
        v16 = *(_OWORD *)(v6 + 112);
        v21[6] = *(_OWORD *)(v6 + 96);
        v21[7] = v16;
        v17 = *(_OWORD *)(v6 + 16);
        v21[0] = *(_OWORD *)v6;
        v21[1] = v17;
        v18 = *(_OWORD *)(v6 + 48);
        v21[2] = *(_OWORD *)(v6 + 32);
        v21[3] = v18;
        v19 = a3(v23, v21);
        if ((v19 & 1) == 0)
          break;
        v7 = v8 - 1;
        v6 += 168;
        v5 += 168;
      }
      while (v8);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1BA88F20C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  _OWORD v21[13];
  _OWORD v22[13];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (_OWORD *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = v3[11];
        v22[10] = v3[10];
        v22[11] = v7;
        v22[12] = v3[12];
        v8 = v3[7];
        v22[6] = v3[6];
        v22[7] = v8;
        v9 = v3[9];
        v22[8] = v3[8];
        v22[9] = v9;
        v10 = v3[3];
        v22[2] = v3[2];
        v22[3] = v10;
        v11 = v3[5];
        v22[4] = v3[4];
        v22[5] = v11;
        v12 = v3[1];
        v22[0] = *v3;
        v22[1] = v12;
        v13 = v4[11];
        v21[10] = v4[10];
        v21[11] = v13;
        v21[12] = v4[12];
        v14 = v4[7];
        v21[6] = v4[6];
        v21[7] = v14;
        v15 = v4[9];
        v21[8] = v4[8];
        v21[9] = v15;
        v16 = v4[3];
        v21[2] = v4[2];
        v21[3] = v16;
        v17 = v4[5];
        v21[4] = v4[4];
        v21[5] = v17;
        v18 = v4[1];
        v21[0] = *v4;
        v21[1] = v18;
        v19 = _s8NewsFeed27FormatLayeredMediaNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v22, (uint64_t)v21);
        if ((v19 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 13;
        v3 += 13;
      }
      while (v6);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_1BA88F304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v28;
  uint64_t v29;
  __int16 v30;
  char v31;
  uint64_t v32;
  unsigned __int16 v33;
  char v34;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    if (a1 != a2)
    {
      v4 = 0;
      v26 = a1;
      while (1)
      {
        v5 = *(unsigned __int8 *)(a1 + v4 + 48);
        v6 = *(_QWORD *)(a1 + v4 + 56);
        v7 = *(unsigned __int8 *)(a1 + v4 + 66);
        v8 = *(unsigned __int16 *)(a1 + v4 + 64);
        v28 = *(unsigned __int8 *)(a1 + v4 + 67);
        v9 = *(unsigned __int8 *)(v3 + v4 + 48);
        v10 = *(_QWORD *)(v3 + v4 + 56);
        v11 = *(unsigned __int8 *)(v3 + v4 + 66);
        v12 = *(unsigned __int16 *)(v3 + v4 + 64);
        v13 = *(unsigned __int8 *)(v3 + v4 + 67);
        if (*(_QWORD *)(a1 + v4 + 32) != *(_QWORD *)(v3 + v4 + 32)
          || *(_QWORD *)(a1 + v4 + 40) != *(_QWORD *)(v3 + v4 + 40))
        {
          v25 = *(unsigned __int8 *)(v3 + v4 + 67);
          v14 = *(_QWORD *)(a1 + v4 + 56);
          v15 = *(_QWORD *)(v3 + v4 + 56);
          v16 = v2;
          v17 = *(unsigned __int16 *)(v3 + v4 + 64);
          v18 = sub_1BB874398();
          v12 = v17;
          v2 = v16;
          v10 = v15;
          v6 = v14;
          v13 = v25;
          if ((v18 & 1) == 0)
            return 0;
        }
        if (v5 == 2)
        {
          if (v9 != 2)
            return 0;
        }
        else
        {
          result = 0;
          if (v9 == 2 || ((((v5 & 1) == 0) ^ v9) & 1) == 0)
            return result;
        }
        v20 = v8 | (v7 << 16);
        v21 = v12 | (v11 << 16);
        if (BYTE2(v20) == 255)
        {
          if (BYTE2(v21) != 255)
            goto LABEL_32;
        }
        else
        {
          v32 = v6;
          v33 = v20;
          v34 = BYTE2(v20);
          if (BYTE2(v21) == 255)
          {
            v23 = v10;
            sub_1BA77A170(v6, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
            sub_1BA77A170(v6, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
            sub_1BA77A170(v6, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
            v10 = v23;
LABEL_32:
            v24 = v10;
            sub_1BA771834(v10, v21);
            sub_1BA771864(v6, v20);
            sub_1BA771864(v24, v21);
            return 0;
          }
          v29 = v10;
          v30 = v12;
          v31 = (v12 | (v11 << 16)) >> 16;
          sub_1BA77A170(v6, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          sub_1BA77A170(v6, v20, SBYTE2(v20), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AD890, (uint64_t (*)(void))sub_1BA7AD89C);
          v22 = _s8NewsFeed31FormatSupplementaryNodePinTraitO2eeoiySbAC_ACtFZ_0((uint64_t)&v32, (uint64_t)&v29);
          sub_1BA77A170(v32, v33, v34, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
          sub_1BA771864(v6, v20);
          if ((v22 & 1) == 0)
            return 0;
        }
        if (v28 == 3)
        {
          if (v13 != 3)
            return 0;
        }
        else
        {
          if (v13 == 3)
            return 0;
          if (v28 == 2)
          {
            if (v13 != 2)
              return 0;
          }
          else
          {
            result = 0;
            if (v13 == 2 || ((v13 ^ v28) & 1) != 0)
              return result;
          }
        }
        v4 += 40;
        --v2;
        a1 = v26;
        v3 = a2;
        if (!v2)
          return 1;
      }
    }
  }
  return 1;
}

uint64_t sub_1BA88F5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v62 - v9;
  sub_1BA896B1C(0, (unint64_t *)&qword_1EF2A96D0, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v80 = (uint64_t)&v62 - v13;
  v14 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v21 = (uint64_t *)((char *)&v62 - v20);
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 == *(_QWORD *)(a2 + 16))
  {
    if (!v22 || a1 == a2)
      return 1;
    v74 = v18;
    v75 = v12;
    v76 = v5;
    v77 = v4;
    v70 = v7;
    v71 = v10;
    v23 = 0;
    v24 = a1 + 32;
    v25 = a2 + 32;
    v68 = v22;
    v69 = v19;
    v79 = v16;
    while (1)
    {
      v27 = v24 + 32 * v23;
      v28 = *(_QWORD *)(v27 + 8);
      v29 = *(unsigned __int8 *)(v27 + 16);
      v30 = *(_QWORD *)(v27 + 24);
      v31 = v25 + 32 * v23;
      v32 = *(_QWORD *)(v31 + 8);
      v33 = *(unsigned __int8 *)(v31 + 16);
      v34 = *(_QWORD *)(v31 + 24);
      if (*(_QWORD *)v27 != *(_QWORD *)v31 || v28 != v32)
      {
        v36 = *(_QWORD *)(v27 + 8);
        v37 = v24;
        v38 = v25;
        v39 = sub_1BB874398();
        v28 = v36;
        v25 = v38;
        v16 = v79;
        v24 = v37;
        v22 = v68;
        v19 = v69;
        if ((v39 & 1) == 0)
          break;
      }
      if (v29 == 2)
      {
        if (v33 != 2)
          return 0;
      }
      else
      {
        result = 0;
        if (v33 == 2 || ((((v29 & 1) == 0) ^ v33) & 1) == 0)
          return result;
      }
      if (v30)
      {
        if (!v34)
          return 0;
        v40 = *(_QWORD *)(v30 + 16);
        if (v40 != *(_QWORD *)(v34 + 16))
          return 0;
        if (v40 && v30 != v34)
        {
          v63 = v25;
          v64 = v24;
          v65 = v23;
          v66 = v28;
          v41 = v30;
          v42 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
          v43 = v19;
          swift_bridgeObjectRetain();
          v78 = v41;
          swift_bridgeObjectRetain_n();
          v67 = v32;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          v44 = 0;
          v72 = *(_QWORD *)(v43 + 72);
          v73 = v40;
          while (1)
          {
            result = sub_1BA4C2DD8(v78 + v42, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            if (v44 >= *(_QWORD *)(v34 + 16))
              break;
            sub_1BA4C2DD8(v34 + v42, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v45 = *v21 == *v16 && v21[1] == v16[1];
            if (!v45 && (sub_1BB874398() & 1) == 0)
              goto LABEL_50;
            v46 = v21[2];
            v81 = v16[2];
            v82 = v46;
            if ((static FormatOptionValue.== infix(_:_:)(&v82, &v81) & 1) == 0)
              goto LABEL_50;
            v47 = v21[3];
            v48 = v16[3];
            if (v47 == 1)
            {
              if (v48 != 1)
                goto LABEL_50;
            }
            else
            {
              if (v48 == 1)
                goto LABEL_50;
              if (v47)
              {
                if (!v48)
                  goto LABEL_50;
                sub_1BA6E9BC8(v16[3]);
                sub_1BA6E9BC8(v47);
                v49 = sub_1BA6EB330(v47, v48);
                sub_1BA6E9B40(v48);
                sub_1BA6E9B40(v47);
                if ((v49 & 1) == 0)
                  goto LABEL_50;
              }
              else if (v48)
              {
                goto LABEL_50;
              }
            }
            v50 = *(int *)(v74 + 28);
            v51 = (uint64_t)v16 + v50;
            v52 = v80;
            v53 = v80 + *(int *)(v75 + 48);
            sub_1BA57B488((uint64_t)v21 + v50, v80, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
            sub_1BA57B488(v51, v53, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
            v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
            v55 = v52;
            v56 = v77;
            if (v54(v55, 1, v77) == 1)
            {
              if (v54(v53, 1, v56) != 1)
                goto LABEL_49;
              sub_1BA502AD0(v80, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
              v16 = v79;
            }
            else
            {
              v57 = v34;
              v58 = (uint64_t)v71;
              sub_1BA57B488(v80, (uint64_t)v71, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
              if (v54(v53, 1, v56) == 1)
              {
                sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
LABEL_49:
                sub_1BA896B7C(v80, (unint64_t *)&qword_1EF2A96D0, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
                v16 = v79;
LABEL_50:
                sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
                sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                return 0;
              }
              v59 = v53;
              v60 = (uint64_t)v70;
              sub_1BA5193C4(v59, (uint64_t)v70, type metadata accessor for FormatVersionRequirement);
              v61 = sub_1BA9FD2E0(v58, v60);
              sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
              sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
              sub_1BA502AD0(v80, (unint64_t *)&qword_1ED3D0B48, (void (*)(uint64_t))type metadata accessor for FormatVersionRequirement);
              v34 = v57;
              v16 = v79;
              if ((v61 & 1) == 0)
                goto LABEL_50;
            }
            ++v44;
            sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            v42 += v72;
            if (v73 == v44)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              v22 = v68;
              v19 = v69;
              v24 = v64;
              v23 = v65;
              v25 = v63;
              goto LABEL_7;
            }
          }
          __break(1u);
          return result;
        }
      }
      else if (v34)
      {
        return 0;
      }
LABEL_7:
      ++v23;
      result = 1;
      if (v23 == v22)
        return result;
    }
  }
  return 0;
}

uint64_t sub_1BA88FBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int16 v9;
  char v10;
  uint64_t v11;
  char v12;
  __int16 v13;
  char v14;
  char v15;
  BOOL v17;
  _QWORD v19[2];
  __int128 v20;
  char v21;
  __int128 v22;
  __int16 v23;
  char v24;
  _QWORD v25[2];
  __int128 v26;
  char v27;
  __int128 v28;
  __int16 v29;
  char v30;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v5 = 0;
      v6 = v2 - 1;
      do
      {
        v7 = *(_QWORD *)(a1 + v5 + 40);
        v8 = *(_BYTE *)(a1 + v5 + 64);
        v9 = *(_WORD *)(a1 + v5 + 88);
        v10 = *(_BYTE *)(a1 + v5 + 90);
        v25[0] = *(_QWORD *)(a1 + v5 + 32);
        v25[1] = v7;
        v26 = *(_OWORD *)(a1 + v5 + 48);
        v27 = v8;
        v28 = *(_OWORD *)(a1 + v5 + 72);
        v29 = v9;
        v30 = v10;
        v11 = *(_QWORD *)(a2 + v5 + 40);
        v12 = *(_BYTE *)(a2 + v5 + 64);
        v13 = *(_WORD *)(a2 + v5 + 88);
        v14 = *(_BYTE *)(a2 + v5 + 90);
        v19[0] = *(_QWORD *)(a2 + v5 + 32);
        v19[1] = v11;
        v20 = *(_OWORD *)(a2 + v5 + 48);
        v21 = v12;
        v22 = *(_OWORD *)(a2 + v5 + 72);
        v23 = v13;
        v24 = v14;
        v15 = _s8NewsFeed23FormatWebEmbedNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v25, (uint64_t)v19);
        v17 = v6-- != 0;
        if ((v15 & 1) == 0)
          break;
        v5 += 64;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1BA88FCC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v53;
  char v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  char v76;
  char v77;
  __int128 v78;
  uint64_t v79;
  char v80;
  char v81;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    goto LABEL_41;
  if (!v2 || a1 == a2)
  {
    v40 = 1;
    return v40 & 1;
  }
  v3 = v2 - 1;
  v4 = (uint64_t *)(a2 + 48);
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v5 - 2);
    v6 = *(v5 - 1);
    v8 = v5[1];
    v70 = v5[2];
    v71 = *v5;
    v9 = v5[4];
    v68 = v5[5];
    v10 = *(v4 - 2);
    v11 = *(v4 - 1);
    v13 = *v4;
    v12 = v4[1];
    v72 = v5[3];
    v73 = v4[2];
    v69 = v4[3];
    v64 = *v4;
    v65 = v4[4];
    v62 = v8;
    v63 = v12;
    v58 = v7;
    v59 = v6;
    v61 = v11;
    v60 = v10;
    v56 = v4;
    v57 = v3;
    v55 = v5;
    v67 = v9;
    if ((v8 & 4) != 0)
    {
      if ((v12 & 4) == 0)
      {
LABEL_26:
        sub_1BA7CCBB4(v7, v6, v71, v8);
        sub_1BA7CCBB4(v10, v11, v13, v12);
        sub_1BA7CCC14(v7, v6, v71, v8);
        sub_1BA7CCC14(v10, v11, v13, v12);
        goto LABEL_41;
      }
      *(_QWORD *)&v78 = *(v5 - 2);
      *(_QWORD *)&v74 = v10;
      sub_1BA7CCBB4(v10, v11, v13, v12);
      sub_1BA7CCBB4(v7, v6, v71, v8);
      sub_1BA7CCBB4(v10, v11, v13, v12);
      sub_1BA7CCBB4(v7, v6, v71, v8);
      sub_1BA7CCBB4(v7, v6, v71, v8);
      sub_1BA7CCBB4(v10, v11, v13, v12);
      sub_1BA7CCBB4(v7, v6, v71, v8);
      sub_1BA7CCCA0(v70, v72, v9);
      swift_retain();
      sub_1BA7CCBB4(v10, v11, v13, v12);
      v22 = v9;
      v21 = v65;
      sub_1BA7CCCA0(v73, v69, v65);
      swift_retain();
      static FormatTextContent.== infix(_:_:)((uint64_t)&v78);
      v54 = v23;
      sub_1BA7CCC14(v7, v6, v71, v62);
      sub_1BA7CCC14(v10, v11, v13, v12);
      sub_1BA7CCC14(v10, v11, v13, v12);
      sub_1BA7CCC14(v7, v6, v71, v62);
      sub_1BA7CCC14(v10, v11, v13, v12);
      sub_1BA7CCC14(v7, v6, v71, v62);
      if ((v54 & 1) == 0)
      {
        sub_1BA7CCC14(v10, v11, v64, v12);
        sub_1BA7CCC64(v73, v69, v65);
        swift_release();
        sub_1BA7CCC14(v7, v6, v71, v62);
        v43 = v70;
        v44 = v72;
        v45 = v22;
LABEL_32:
        sub_1BA7CCC64(v43, v44, v45);
        goto LABEL_40;
      }
    }
    else
    {
      if ((v12 & 4) != 0)
        goto LABEL_26;
      sub_1BA7CCBB4(v10, v11, v13, v12);
      sub_1BA7CCBB4(v7, v6, v71, v8);
      sub_1BA7CCBB4(v10, v11, v13, v12);
      sub_1BA7CCBB4(v7, v6, v71, v8);
      sub_1BA7CCBB4(v7, v6, v71, v8);
      sub_1BA7CCBB4(v10, v11, v13, v12);
      sub_1BA7CCBB4(v7, v6, v71, v8);
      sub_1BA7CCCA0(v70, v72, v9);
      swift_retain();
      sub_1BA7CCBB4(v10, v11, v13, v12);
      sub_1BA7CCCA0(v73, v69, v65);
      swift_retain();
      if ((sub_1BA890D20(v7, v10) & 1) == 0)
        goto LABEL_30;
      v14 = *(_QWORD *)(v6 + 32);
      v15 = *(_BYTE *)(v6 + 40);
      v16 = *(_BYTE *)(v6 + 41);
      v17 = *(_QWORD *)(v11 + 32);
      v18 = *(_BYTE *)(v11 + 40);
      v19 = *(_BYTE *)(v11 + 41);
      v78 = *(_OWORD *)(v6 + 16);
      v79 = v14;
      v80 = v15;
      v81 = v16;
      v74 = *(_OWORD *)(v11 + 16);
      v75 = v17;
      v76 = v18;
      v77 = v19;
      if ((static FormatCommandBinding.== infix(_:_:)(&v78, &v74) & 1) == 0
        || (sub_1BA891E00(v71, v64, (uint64_t (*)(uint64_t *, _QWORD *))static FormatTextContent.== infix(_:_:)) & 1) == 0)
      {
LABEL_30:
        sub_1BA7CCC14(v7, v6, v71, v8);
        sub_1BA7CCC14(v10, v11, v64, v12);
        sub_1BA7CCC14(v10, v11, v64, v12);
        sub_1BA7CCC14(v7, v6, v71, v8);
        sub_1BA7CCC14(v10, v11, v64, v12);
        sub_1BA7CCC14(v7, v6, v71, v8);
        sub_1BA7CCC14(v10, v11, v64, v12);
        sub_1BA7CCC64(v73, v69, v65);
        swift_release();
        sub_1BA7CCC14(v7, v6, v71, v8);
        v43 = v70;
        v44 = v72;
        v45 = v9;
        goto LABEL_32;
      }
      *(_QWORD *)&v78 = v8;
      *(_QWORD *)&v74 = v12;
      static FormatTextContent.== infix(_:_:)((uint64_t)&v78);
      v53 = v20;
      sub_1BA7CCC14(v7, v6, v71, v8);
      sub_1BA7CCC14(v10, v11, v64, v12);
      sub_1BA7CCC14(v10, v11, v64, v12);
      sub_1BA7CCC14(v7, v6, v71, v8);
      sub_1BA7CCC14(v10, v11, v64, v12);
      sub_1BA7CCC14(v7, v6, v71, v8);
      if ((v53 & 1) == 0)
      {
        sub_1BA7CCC14(v10, v11, v64, v12);
        sub_1BA7CCC64(v73, v69, v65);
        swift_release();
        sub_1BA7CCC14(v7, v6, v71, v8);
        v43 = v70;
        v44 = v72;
        v45 = v9;
        goto LABEL_32;
      }
      v21 = v65;
      v22 = v67;
    }
    v24 = v21;
    if ((v22 & 0x2000000000000000) == 0)
      break;
    if ((v21 & 0x2000000000000000) == 0)
    {
LABEL_27:
      sub_1BA7CCCA0(v70, v72, v22);
      sub_1BA7CCCA0(v73, v69, v21);
      sub_1BA7CCC64(v70, v72, v22);
      sub_1BA7CCC64(v73, v69, v21);
      sub_1BA7CCC14(v10, v61, v64, v12);
      sub_1BA7CCC64(v73, v69, v21);
      swift_release();
      sub_1BA7CCC14(v7, v6, v71, v62);
      v41 = v70;
      v42 = v72;
      goto LABEL_39;
    }
    v25 = v69;
    v26 = v70;
    *(_QWORD *)&v78 = v70;
    v37 = v73;
    *(_QWORD *)&v74 = v73;
    sub_1BA7CCCA0(v73, v69, v21);
    v33 = v72;
    sub_1BA7CCCA0(v70, v72, v22);
    sub_1BA7CCCA0(v73, v69, v21);
    sub_1BA7CCCA0(v70, v72, v22);
    sub_1BA7CCCA0(v70, v72, v22);
    sub_1BA7CCCA0(v73, v69, v21);
    v38 = static FormatSyncImageContent.== infix(_:_:)((uint64_t *)&v78, (unint64_t *)&v74);
    sub_1BA7CCC64(v70, v72, v22);
    sub_1BA7CCC64(v73, v69, v24);
    sub_1BA7CCC64(v73, v69, v24);
    sub_1BA7CCC64(v70, v72, v22);
    sub_1BA7CCC64(v73, v69, v24);
    sub_1BA7CCC64(v70, v72, v22);
    v34 = v62;
    v35 = v71;
    v36 = v59;
    if (!v38)
      goto LABEL_35;
LABEL_22:
    sub_1BB668C18(v68);
    v40 = v39;
    sub_1BA7CCC14(v60, v61, v64, v63);
    sub_1BA7CCC64(v37, v25, v24);
    swift_release();
    sub_1BA7CCC14(v58, v36, v35, v34);
    sub_1BA7CCC64(v26, v72, v67);
    swift_release();
    v3 = v57 - 1;
    if ((v40 & 1) != 0)
    {
      v4 = v56 + 8;
      v5 = v55 + 8;
      if (v57)
        continue;
    }
    return v40 & 1;
  }
  if ((v21 & 0x2000000000000000) != 0)
    goto LABEL_27;
  v25 = v69;
  v26 = v70;
  v27 = *(_QWORD *)(v70 + 32);
  v28 = *(_BYTE *)(v70 + 40);
  v29 = *(_BYTE *)(v70 + 41);
  v30 = *(_QWORD *)(v73 + 32);
  v31 = *(_BYTE *)(v73 + 40);
  v32 = *(_BYTE *)(v73 + 41);
  v78 = *(_OWORD *)(v70 + 16);
  v79 = v27;
  v80 = v28;
  v81 = v29;
  v74 = *(_OWORD *)(v73 + 16);
  v75 = v30;
  v76 = v31;
  v77 = v32;
  sub_1BA7CCCA0(v73, v69, v21);
  v33 = v72;
  sub_1BA7CCCA0(v70, v72, v22);
  sub_1BA7CCCA0(v73, v69, v21);
  sub_1BA7CCCA0(v70, v72, v22);
  sub_1BA7CCCA0(v70, v72, v22);
  sub_1BA7CCCA0(v73, v69, v21);
  if ((static FormatCommandBinding.== infix(_:_:)(&v78, &v74) & 1) == 0)
  {
    sub_1BA7CCC64(v70, v72, v22);
    sub_1BA7CCC64(v73, v69, v21);
    sub_1BA7CCC64(v73, v69, v21);
    sub_1BA7CCC64(v70, v72, v22);
    sub_1BA7CCC64(v73, v69, v21);
    sub_1BA7CCC64(v70, v72, v22);
    sub_1BA7CCC14(v60, v61, v64, v12);
    sub_1BA7CCC64(v73, v69, v21);
    swift_release();
    v46 = v7;
    v47 = v6;
    v48 = v71;
    v49 = v62;
    goto LABEL_38;
  }
  v34 = v62;
  v35 = v71;
  v36 = v59;
  if ((sub_1BA8909B0(v72, v69) & 1) == 0)
  {
    sub_1BA7CCC64(v70, v72, v22);
    v37 = v73;
    sub_1BA7CCC64(v73, v69, v21);
    sub_1BA7CCC64(v73, v69, v21);
    sub_1BA7CCC64(v70, v72, v22);
    sub_1BA7CCC64(v73, v69, v21);
    sub_1BA7CCC64(v70, v72, v22);
LABEL_35:
    sub_1BA7CCC14(v60, v61, v64, v63);
    v50 = v37;
    v51 = v25;
    goto LABEL_37;
  }
  *(_QWORD *)&v78 = v22;
  *(_QWORD *)&v74 = v21;
  v66 = static FormatSyncImageContent.== infix(_:_:)((uint64_t *)&v78, (unint64_t *)&v74);
  sub_1BA7CCC64(v70, v72, v22);
  sub_1BA7CCC64(v73, v69, v21);
  sub_1BA7CCC64(v73, v69, v21);
  sub_1BA7CCC64(v70, v72, v22);
  sub_1BA7CCC64(v73, v69, v21);
  sub_1BA7CCC64(v70, v72, v22);
  if (v66)
  {
    v37 = v73;
    goto LABEL_22;
  }
  sub_1BA7CCC14(v60, v61, v64, v63);
  v50 = v73;
  v51 = v69;
LABEL_37:
  sub_1BA7CCC64(v50, v51, v24);
  swift_release();
  v46 = v58;
  v47 = v36;
  v48 = v35;
  v49 = v34;
LABEL_38:
  sub_1BA7CCC14(v46, v47, v48, v49);
  v41 = v26;
  v42 = v33;
LABEL_39:
  sub_1BA7CCC64(v41, v42, v22);
LABEL_40:
  swift_release();
LABEL_41:
  v40 = 0;
  return v40 & 1;
}

uint64_t sub_1BA8909B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  unint64_t v23[3];
  char v24;
  uint64_t v25;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unint64_t *)(a2 + 56);
  for (i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    v6 = *(i - 3);
    v5 = *(i - 2);
    v7 = *((unsigned __int8 *)i - 8);
    v8 = *i;
    v10 = *(v3 - 3);
    v9 = *(v3 - 2);
    v11 = *((unsigned __int8 *)v3 - 8);
    v12 = *v3;
    v23[1] = v6;
    v23[2] = v5;
    v24 = v7;
    v25 = v8;
    v23[0] = v12;
    v21 = v11;
    v22 = v7;
    if (!v7)
      break;
    if (v7 == 1)
    {
      if (v11 != 1)
        goto LABEL_23;
      sub_1BA73B1CC(v6, v5, 1);
      swift_retain();
      sub_1BA73B1CC(v10, v9, 1);
      swift_retain();
      sub_1BA73B1B8(v6, v5, 1);
      sub_1BA73B1B8(v10, v9, 1);
      if (((((v6 & 1) == 0) ^ v10) & 1) == 0)
      {
        sub_1BA73B1B8(v10, v9, 1);
        swift_release();
        v18 = v6;
        v19 = v5;
        v20 = 1;
        goto LABEL_25;
      }
    }
    else
    {
      if (v11 != 2)
        goto LABEL_23;
      sub_1BA73B1CC(v6, v5, 2);
      swift_retain();
      sub_1BA73B1CC(v10, v9, 2);
      swift_retain();
      sub_1BA73B1B8(v6, v5, 2);
      sub_1BA73B1B8(v10, v9, 2);
      if (v6 != v10)
      {
        sub_1BA73B1B8(v10, v9, 2);
        swift_release();
        v18 = v6;
        v19 = v5;
        v20 = 2;
        goto LABEL_25;
      }
    }
LABEL_19:
    v14 = static FormatSyncImageContent.== infix(_:_:)(&v25, v23);
    sub_1BA73B1B8(v10, v9, v21);
    swift_release();
    sub_1BA73B1B8(v6, v5, v22);
    swift_release();
    if (!v14)
      return 0;
    v3 += 4;
    if (!--v2)
      return 1;
  }
  if (v11)
  {
    v16 = v11;
    swift_bridgeObjectRetain();
    LOBYTE(v11) = v16;
LABEL_23:
    v17 = v11;
    sub_1BA73B1CC(v10, v9, v11);
    sub_1BA73B1B8(v6, v5, v7);
    sub_1BA73B1B8(v10, v9, v17);
    return 0;
  }
  if (v6 == v10 && v5 == v9)
    v13 = 1;
  else
    v13 = sub_1BB874398();
  sub_1BA73B1CC(v6, v5, 0);
  swift_retain();
  sub_1BA73B1CC(v10, v9, 0);
  swift_retain();
  sub_1BA73B1CC(v10, v9, 0);
  sub_1BA73B1CC(v6, v5, 0);
  sub_1BA73B1B8(v6, v5, 0);
  sub_1BA73B1B8(v10, v9, 0);
  if ((v13 & 1) != 0)
    goto LABEL_19;
  sub_1BA73B1B8(v10, v9, 0);
  swift_release();
  v18 = v6;
  v19 = v5;
  v20 = 0;
LABEL_25:
  sub_1BA73B1B8(v18, v19, v20);
  swift_release();
  return 0;
}

uint64_t sub_1BA890D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  char v31;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
  {
LABEL_13:
    v20 = 0;
    return v20 & 1;
  }
  if (v2 && a1 != a2)
  {
    v3 = v2 - 1;
    v4 = (uint64_t *)(a2 + 56);
    v5 = (uint64_t *)(a1 + 56);
    while (1)
    {
      v22 = v3;
      v6 = *(v5 - 1);
      v7 = *v5;
      v8 = *(v5 - 3);
      v9 = *(v5 - 2);
      v10 = *(v4 - 2);
      v11 = *v4;
      v23 = *(v4 - 1);
      *(_QWORD *)&v24 = *(v4 - 3);
      *(_QWORD *)&v28 = v8;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      static FormatExpression.== infix(_:_:)((uint64_t)&v28);
      if ((v12 & 1) == 0)
        break;
      v13 = *(_QWORD *)(v9 + 32);
      v14 = *(_BYTE *)(v9 + 40);
      v15 = *(_BYTE *)(v9 + 41);
      v16 = *(_QWORD *)(v10 + 32);
      v17 = *(_BYTE *)(v10 + 40);
      v18 = *(_BYTE *)(v10 + 41);
      v28 = *(_OWORD *)(v9 + 16);
      v29 = v13;
      v30 = v14;
      v31 = v15;
      v24 = *(_OWORD *)(v10 + 16);
      v25 = v16;
      v26 = v17;
      v27 = v18;
      if ((static FormatCommandBinding.== infix(_:_:)(&v28, &v24) & 1) == 0
        || (sub_1BA891E00(v6, v23, (uint64_t (*)(uint64_t *, _QWORD *))static FormatTextContent.== infix(_:_:)) & 1) == 0)
      {
        break;
      }
      *(_QWORD *)&v28 = v7;
      *(_QWORD *)&v24 = v11;
      static FormatTextContent.== infix(_:_:)((uint64_t)&v28);
      v20 = v19;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v3 = v22 - 1;
      if ((v20 & 1) != 0)
      {
        v4 += 4;
        v5 += 4;
        if (v22)
          continue;
      }
      return v20 & 1;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_13;
  }
  v20 = 1;
  return v20 & 1;
}

BOOL sub_1BA890F40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  BOOL v17;
  _OWORD v19[11];
  char v20;
  _OWORD v21[11];
  char v22;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = *(_OWORD *)(v3 + 144);
        v21[8] = *(_OWORD *)(v3 + 128);
        v21[9] = v7;
        v21[10] = *(_OWORD *)(v3 + 160);
        v22 = *(_BYTE *)(v3 + 176);
        v8 = *(_OWORD *)(v3 + 80);
        v21[4] = *(_OWORD *)(v3 + 64);
        v21[5] = v8;
        v9 = *(_OWORD *)(v3 + 112);
        v21[6] = *(_OWORD *)(v3 + 96);
        v21[7] = v9;
        v10 = *(_OWORD *)(v3 + 16);
        v21[0] = *(_OWORD *)v3;
        v21[1] = v10;
        v11 = *(_OWORD *)(v3 + 48);
        v21[2] = *(_OWORD *)(v3 + 32);
        v21[3] = v11;
        v12 = *(_OWORD *)(v4 + 144);
        v19[8] = *(_OWORD *)(v4 + 128);
        v19[9] = v12;
        v19[10] = *(_OWORD *)(v4 + 160);
        v20 = *(_BYTE *)(v4 + 176);
        v13 = *(_OWORD *)(v4 + 80);
        v19[4] = *(_OWORD *)(v4 + 64);
        v19[5] = v13;
        v14 = *(_OWORD *)(v4 + 112);
        v19[6] = *(_OWORD *)(v4 + 96);
        v19[7] = v14;
        v15 = *(_OWORD *)(v4 + 16);
        v19[0] = *(_OWORD *)v4;
        v19[1] = v15;
        v16 = *(_OWORD *)(v4 + 48);
        v19[2] = *(_OWORD *)(v4 + 32);
        v19[3] = v16;
        v17 = _s8NewsFeed24FormatGroupNodeMaskStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v21, (uint64_t)v19);
        if (!v17)
          break;
        v5 = v6 - 1;
        v4 += 184;
        v3 += 184;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v17;
}

uint64_t sub_1BA891038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  _OWORD v17[9];
  __int16 v18;
  _OWORD v19[9];
  __int16 v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = *(_OWORD *)(v3 + 112);
        v19[6] = *(_OWORD *)(v3 + 96);
        v19[7] = v7;
        v19[8] = *(_OWORD *)(v3 + 128);
        v20 = *(_WORD *)(v3 + 144);
        v8 = *(_OWORD *)(v3 + 48);
        v19[2] = *(_OWORD *)(v3 + 32);
        v19[3] = v8;
        v9 = *(_OWORD *)(v3 + 80);
        v19[4] = *(_OWORD *)(v3 + 64);
        v19[5] = v9;
        v10 = *(_OWORD *)(v3 + 16);
        v19[0] = *(_OWORD *)v3;
        v19[1] = v10;
        v11 = *(_OWORD *)(v4 + 112);
        v17[6] = *(_OWORD *)(v4 + 96);
        v17[7] = v11;
        v17[8] = *(_OWORD *)(v4 + 128);
        v18 = *(_WORD *)(v4 + 144);
        v12 = *(_OWORD *)(v4 + 48);
        v17[2] = *(_OWORD *)(v4 + 32);
        v17[3] = v12;
        v13 = *(_OWORD *)(v4 + 80);
        v17[4] = *(_OWORD *)(v4 + 64);
        v17[5] = v13;
        v14 = *(_OWORD *)(v4 + 16);
        v17[0] = *(_OWORD *)v4;
        v17[1] = v14;
        v15 = _s8NewsFeed20FormatGroupNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v19, (uint64_t)v17);
        if ((v15 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 152;
        v3 += 152;
      }
      while (v6);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

BOOL sub_1BA891120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  BOOL v19;
  _OWORD v21[12];
  uint64_t v22;
  _OWORD v23[12];
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      v3 = a1 + 32;
      v4 = a2 + 32;
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = *(_OWORD *)(v3 + 176);
        v23[10] = *(_OWORD *)(v3 + 160);
        v23[11] = v7;
        v24 = *(_QWORD *)(v3 + 192);
        v8 = *(_OWORD *)(v3 + 112);
        v23[6] = *(_OWORD *)(v3 + 96);
        v23[7] = v8;
        v9 = *(_OWORD *)(v3 + 144);
        v23[8] = *(_OWORD *)(v3 + 128);
        v23[9] = v9;
        v10 = *(_OWORD *)(v3 + 48);
        v23[2] = *(_OWORD *)(v3 + 32);
        v23[3] = v10;
        v11 = *(_OWORD *)(v3 + 80);
        v23[4] = *(_OWORD *)(v3 + 64);
        v23[5] = v11;
        v12 = *(_OWORD *)(v3 + 16);
        v23[0] = *(_OWORD *)v3;
        v23[1] = v12;
        v13 = *(_OWORD *)(v4 + 176);
        v21[10] = *(_OWORD *)(v4 + 160);
        v21[11] = v13;
        v22 = *(_QWORD *)(v4 + 192);
        v14 = *(_OWORD *)(v4 + 112);
        v21[6] = *(_OWORD *)(v4 + 96);
        v21[7] = v14;
        v15 = *(_OWORD *)(v4 + 144);
        v21[8] = *(_OWORD *)(v4 + 128);
        v21[9] = v15;
        v16 = *(_OWORD *)(v4 + 48);
        v21[2] = *(_OWORD *)(v4 + 32);
        v21[3] = v16;
        v17 = *(_OWORD *)(v4 + 80);
        v21[4] = *(_OWORD *)(v4 + 64);
        v21[5] = v17;
        v18 = *(_OWORD *)(v4 + 16);
        v21[0] = *(_OWORD *)v4;
        v21[1] = v18;
        v19 = _s8NewsFeed20FormatImageNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v23, (uint64_t)v21);
        if (!v19)
          break;
        v5 = v6 - 1;
        v4 += 200;
        v3 += 200;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v19;
}

uint64_t sub_1BA891218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  _OWORD v17[8];
  _OWORD v18[2];
  _OWORD v19[8];
  _OWORD v20[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (_OWORD *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = v3[7];
        v19[6] = v3[6];
        v19[7] = v7;
        v20[0] = v3[8];
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v3 + 137);
        v8 = v3[3];
        v19[2] = v3[2];
        v19[3] = v8;
        v9 = v3[5];
        v19[4] = v3[4];
        v19[5] = v9;
        v10 = v3[1];
        v19[0] = *v3;
        v19[1] = v10;
        v11 = v4[7];
        v17[6] = v4[6];
        v17[7] = v11;
        v18[0] = v4[8];
        *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v4 + 137);
        v12 = v4[3];
        v17[2] = v4[2];
        v17[3] = v12;
        v13 = v4[5];
        v17[4] = v4[4];
        v17[5] = v13;
        v14 = v4[1];
        v17[0] = *v4;
        v17[1] = v14;
        v15 = _s8NewsFeed19FormatViewNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v19, (uint64_t)v17);
        if ((v15 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 10;
        v3 += 10;
      }
      while (v6);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1BA891304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    if (a1 != a2)
    {
      v4 = 0;
      v23 = a1;
      while (1)
      {
        v5 = *(double *)(a1 + v4 + 48);
        v6 = *(double *)(a1 + v4 + 56);
        v7 = *(_BYTE *)(a1 + v4 + 64);
        v8 = *(_QWORD *)(a1 + v4 + 72);
        v9 = *(unsigned __int8 *)(a1 + v4 + 84);
        v10 = *(unsigned int *)(a1 + v4 + 80);
        v11 = *(double *)(v3 + v4 + 48);
        v12 = *(double *)(v3 + v4 + 56);
        v13 = *(unsigned __int8 *)(v3 + v4 + 64);
        v14 = *(_QWORD *)(v3 + v4 + 72);
        v15 = *(unsigned __int8 *)(v3 + v4 + 84);
        v16 = *(unsigned int *)(v3 + v4 + 80);
        if ((*(_QWORD *)(a1 + v4 + 32) != *(_QWORD *)(v3 + v4 + 32)
           || *(_QWORD *)(a1 + v4 + 40) != *(_QWORD *)(v3 + v4 + 40))
          && (sub_1BB874398() & 1) == 0)
        {
          return 0;
        }
        if ((v7 & 1) != 0)
        {
          if (!v13)
            return 0;
        }
        else
        {
          result = 0;
          if ((v13 & 1) != 0)
            return result;
          if (v5 != v11 || v6 != v12)
            return result;
        }
        if (v8)
        {
          if (!v14)
            return 0;
          swift_bridgeObjectRetain();
          v19 = swift_bridgeObjectRetain();
          v20 = sub_1BA8835AC(v19, v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
            return 0;
        }
        else if (v14)
        {
          return 0;
        }
        v21 = v10 | (v9 << 32);
        v22 = v16 | (v15 << 32);
        if (BYTE4(v21) == 255)
        {
          if (BYTE4(v22) != 255)
            return 0;
          goto LABEL_6;
        }
        if (BYTE4(v22) == 255)
          return 0;
        if (!BYTE4(v21))
          break;
        if (BYTE4(v21) == 1)
        {
          result = 0;
          if (BYTE4(v22) != 1)
            return result;
          goto LABEL_31;
        }
        if ((_DWORD)v10)
        {
          if ((_DWORD)v10 == 1)
          {
            result = 0;
            if (BYTE4(v22) != 2 || (_DWORD)v16 != 1)
              return result;
          }
          else
          {
            result = 0;
            if (BYTE4(v22) != 2 || (_DWORD)v16 != 2)
              return result;
          }
        }
        else
        {
          result = 0;
          if (BYTE4(v22) != 2 || (_DWORD)v16)
            return result;
        }
LABEL_6:
        v4 += 56;
        --v2;
        a1 = v23;
        v3 = a2;
        if (!v2)
          return 1;
      }
      result = 0;
      if (BYTE4(v22))
        return result;
LABEL_31:
      if (*(float *)&v10 != *(float *)&v16)
        return result;
      goto LABEL_6;
    }
  }
  return 1;
}

uint64_t sub_1BA891504(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  char v9;
  char v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = a2 + 56;
    for (i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      v6 = *(i - 1);
      v5 = *i;
      v7 = *(i - 3) == *(_QWORD *)(v3 - 24) && *(i - 2) == *(_QWORD *)(v3 - 16);
      if (!v7 && (sub_1BB874398() & 1) == 0)
        break;
      v12 = v6;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      static FormatTextContent.== infix(_:_:)((uint64_t)&v12);
      if ((v8 & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      v12 = v5;
      static FormatTextNodeAlternativeLogic.== infix(_:_:)((uint64_t)&v12);
      v10 = v9;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
        return 0;
      v3 += 32;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1BA891684(uint64_t a1, uint64_t a2)
{
  return sub_1BA892ADC(a1, a2, (void (*)(uint64_t))sub_1BA725020, (uint64_t (*)(char *, char *))static FormatTextSize.== infix(_:_:), (void (*)(uint64_t))sub_1BA725050);
}

uint64_t sub_1BA8916A0(uint64_t a1, uint64_t a2)
{
  return sub_1BA895610(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatMicaNodeContent.== infix(_:_:));
}

uint64_t sub_1BA8916AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  _OWORD v17[7];
  _OWORD v18[2];
  _OWORD v19[7];
  _OWORD v20[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v3 = (_OWORD *)(a1 + 32);
      v4 = (_OWORD *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        v7 = v3[7];
        v19[6] = v3[6];
        v20[0] = v7;
        *(_OWORD *)((char *)v20 + 10) = *(_OWORD *)((char *)v3 + 122);
        v8 = v3[3];
        v19[2] = v3[2];
        v19[3] = v8;
        v9 = v3[5];
        v19[4] = v3[4];
        v19[5] = v9;
        v10 = v3[1];
        v19[0] = *v3;
        v19[1] = v10;
        v11 = v4[7];
        v17[6] = v4[6];
        v18[0] = v11;
        *(_OWORD *)((char *)v18 + 10) = *(_OWORD *)((char *)v4 + 122);
        v12 = v4[3];
        v17[2] = v4[2];
        v17[3] = v12;
        v13 = v4[5];
        v17[4] = v4[4];
        v17[5] = v13;
        v14 = v4[1];
        v17[0] = *v4;
        v17[1] = v14;
        v15 = _s8NewsFeed19FormatMicaNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0((uint64_t)v19, (uint64_t)v17);
        if ((v15 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 9;
        v3 += 9;
      }
      while (v6);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1BA891788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  BOOL v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
  {
LABEL_14:
    v9 = 0;
    return v9 & 1;
  }
  if (v2 && a1 != a2)
  {
    v3 = v2 - 1;
    v4 = (uint64_t *)(a2 + 40);
    v5 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v6 = *v5;
      v7 = *v4;
      v13 = *(v5 - 1);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      static FormatExpression.== infix(_:_:)((uint64_t)&v13);
      if ((v8 & 1) == 0)
        break;
      v9 = sub_1BB668C18(v6, v7);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v11 = v3-- != 0;
      if ((v9 & 1) != 0)
      {
        v4 += 2;
        v5 += 2;
        if (v11)
          continue;
      }
      return v9 & 1;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_14;
  }
  v9 = 1;
  return v9 & 1;
}

uint64_t sub_1BA8918B8(uint64_t a1, uint64_t a2)
{
  return sub_1BA895610(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatVisibility.== infix(_:_:));
}

uint64_t sub_1BA8918C4(uint64_t a1, uint64_t a2)
{
  return sub_1BA88214C(a1, a2, type metadata accessor for FormatCompilerSlotDefinition, (uint64_t (*)(char *, char *))_s8NewsFeed28FormatCompilerSlotDefinitionV2eeoiySbAC_ACtFZ_0);
}

uint64_t sub_1BA8918D8(uint64_t a1, uint64_t a2)
{
  return sub_1BA88214C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(char *, char *))static FormatSlotDefinition.== infix(_:_:));
}

uint64_t sub_1BA8918EC(uint64_t a1, uint64_t a2)
{
  return sub_1BA891B78(a1, a2, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(char *, char *))sub_1BB2A6380);
}

uint64_t sub_1BA891910(uint64_t a1, uint64_t a2)
{
  return sub_1BA891B78(a1, a2, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(char *, char *))sub_1BB2A695C);
}

uint64_t sub_1BA891934(uint64_t a1, uint64_t a2)
{
  return sub_1BA891B78(a1, a2, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(char *, char *))sub_1BB2A70B4);
}

uint64_t sub_1BA891958(uint64_t a1, uint64_t a2)
{
  return sub_1BA891B78(a1, a2, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(char *, char *))sub_1BB2A7700);
}

uint64_t sub_1BA89197C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;
  uint64_t v20;

  sub_1BA6BCAFC(0, &qword_1ED3BE5D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, &qword_1ED3D0280, (uint64_t)&protocol conformance descriptor for FormatSnippet);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v19 = a1;
      v20 = a2;
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_1BA8968F8(v19 + v12, (uint64_t)v10, &qword_1ED3BE5D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, &qword_1ED3D0280, (uint64_t)&protocol conformance descriptor for FormatSnippet);
        sub_1BA8968F8(v20 + v12, (uint64_t)v6, &qword_1ED3BE5D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, &qword_1ED3D0280, (uint64_t)&protocol conformance descriptor for FormatSnippet);
        v15 = sub_1BB2A7E28((uint64_t)v10, (uint64_t)v6);
        sub_1BA89694C((uint64_t)v6, &qword_1ED3BE5D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, &qword_1ED3D0280, (uint64_t)&protocol conformance descriptor for FormatSnippet);
        sub_1BA89694C((uint64_t)v10, &qword_1ED3BE5D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, &qword_1ED3D0280, (uint64_t)&protocol conformance descriptor for FormatSnippet);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1BA891B30(uint64_t a1, uint64_t a2)
{
  return sub_1BA891B78(a1, a2, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(char *, char *))sub_1BB2A82A0);
}

uint64_t sub_1BA891B54(uint64_t a1, uint64_t a2)
{
  return sub_1BA891B78(a1, a2, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(char *, char *))sub_1BB2A88D4);
}

uint64_t sub_1BA891B78(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(char *, char *))
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t (*v20)(char *, char *);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  BOOL v26;
  uint64_t v28;
  uint64_t v29;

  sub_1BA896A10(0, a3, a4, a5);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v28 - v17;
  v19 = *(_QWORD *)(a1 + 16);
  if (v19 == *(_QWORD *)(a2 + 16))
  {
    if (!v19 || a1 == a2)
    {
      v24 = 1;
    }
    else
    {
      v28 = a1;
      v29 = a2;
      v20 = a6;
      v21 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v22 = *(_QWORD *)(v16 + 72);
      v23 = v19 - 1;
      do
      {
        sub_1BA8967A0(v28 + v21, (uint64_t)v18, a3, a4, a5);
        sub_1BA8967A0(v29 + v21, (uint64_t)v14, a3, a4, a5);
        v24 = v20(v18, v14);
        sub_1BA8967F0((uint64_t)v14, a3, a4, a5);
        sub_1BA8967F0((uint64_t)v18, a3, a4, a5);
        v26 = v23-- != 0;
        if ((v24 & 1) == 0)
          break;
        v21 += v22;
      }
      while (v26);
    }
  }
  else
  {
    v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_1BA891CFC(uint64_t a1, uint64_t a2)
{
  return sub_1BA891B78(a1, a2, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(char *, char *))sub_1BB2A8EEC);
}

BOOL sub_1BA891D20(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
}

uint64_t sub_1BA891D34(uint64_t a1, uint64_t a2)
{
  return sub_1BA891D40(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatColor.== infix(_:_:));
}

uint64_t sub_1BA891D40(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t *))
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  BOOL v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 == *(_QWORD *)(a2 + 16))
  {
    if (!v3 || a1 == a2)
    {
      v11 = 1;
    }
    else
    {
      v5 = (uint64_t *)(a1 + 32);
      v6 = (uint64_t *)(a2 + 32);
      v7 = v3 - 1;
      do
      {
        v9 = *v5++;
        v8 = v9;
        v10 = *v6++;
        v15 = v10;
        v16 = v8;
        v11 = a3(&v16, &v15);
        v13 = v7-- != 0;
      }
      while ((v11 & 1) != 0 && v13);
    }
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_1BA891DD0(uint64_t a1, uint64_t a2)
{
  return sub_1BA895610(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatSymbolImageColor.== infix(_:_:));
}

uint64_t sub_1BA891DDC(uint64_t a1, uint64_t a2)
{
  return sub_1BA895610(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatAsyncImageContent.== infix(_:_:));
}

uint64_t sub_1BA891DE8(uint64_t a1, uint64_t a2)
{
  return sub_1BA8954B8(a1, a2, (uint64_t (*)(char *, char *))static FormatAsyncImageContent.== infix(_:_:));
}

uint64_t sub_1BA891DF4(uint64_t a1, uint64_t a2)
{
  return sub_1BA891E00(a1, a2, (uint64_t (*)(uint64_t *, _QWORD *))static FormatAsyncImageContent.== infix(_:_:));
}

uint64_t sub_1BA891E00(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, _QWORD *))
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t *i;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char v14;
  char v15;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v23;
  char v24;
  _QWORD v25[3];
  char v26;
  uint64_t v27;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v3 || a1 == a2)
    return 1;
  v4 = (uint64_t *)(a2 + 56);
  for (i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    v7 = *(i - 3);
    v6 = *(i - 2);
    v8 = *((unsigned __int8 *)i - 8);
    v9 = *i;
    v11 = *(v4 - 3);
    v10 = *(v4 - 2);
    v12 = *((unsigned __int8 *)v4 - 8);
    v13 = *v4;
    v25[1] = v7;
    v25[2] = v6;
    v26 = v8;
    v27 = v9;
    v25[0] = v13;
    v23 = v12;
    v24 = v8;
    if (!v8)
      break;
    if (v8 == 1)
    {
      if (v12 != 1)
        goto LABEL_23;
      sub_1BA73B1CC(v7, v6, 1);
      swift_retain();
      sub_1BA73B1CC(v11, v10, 1);
      swift_retain();
      sub_1BA73B1B8(v7, v6, 1);
      sub_1BA73B1B8(v11, v10, 1);
      if (((((v7 & 1) == 0) ^ v11) & 1) == 0)
      {
        sub_1BA73B1B8(v11, v10, 1);
        swift_release();
        v19 = v7;
        v20 = v6;
        v21 = 1;
        goto LABEL_25;
      }
    }
    else
    {
      if (v12 != 2)
        goto LABEL_23;
      sub_1BA73B1CC(v7, v6, 2);
      swift_retain();
      sub_1BA73B1CC(v11, v10, 2);
      swift_retain();
      sub_1BA73B1B8(v7, v6, 2);
      sub_1BA73B1B8(v11, v10, 2);
      if (v7 != v11)
      {
        sub_1BA73B1B8(v11, v10, 2);
        swift_release();
        v19 = v7;
        v20 = v6;
        v21 = 2;
        goto LABEL_25;
      }
    }
LABEL_19:
    v15 = a3(&v27, v25);
    sub_1BA73B1B8(v11, v10, v23);
    swift_release();
    sub_1BA73B1B8(v7, v6, v24);
    swift_release();
    if ((v15 & 1) == 0)
      return 0;
    v4 += 4;
    if (!--v3)
      return 1;
  }
  if (v12)
  {
    v17 = v12;
    swift_bridgeObjectRetain();
    LOBYTE(v12) = v17;
LABEL_23:
    v18 = v12;
    sub_1BA73B1CC(v11, v10, v12);
    sub_1BA73B1B8(v7, v6, v8);
    sub_1BA73B1B8(v11, v10, v18);
    return 0;
  }
  if (v7 == v11 && v6 == v10)
    v14 = 1;
  else
    v14 = sub_1BB874398();
  sub_1BA73B1CC(v7, v6, 0);
  swift_retain();
  sub_1BA73B1CC(v11, v10, 0);
  swift_retain();
  sub_1BA73B1CC(v11, v10, 0);
  sub_1BA73B1CC(v7, v6, 0);
  sub_1BA73B1B8(v7, v6, 0);
  sub_1BA73B1B8(v11, v10, 0);
  if ((v14 & 1) != 0)
    goto LABEL_19;
  sub_1BA73B1B8(v11, v10, 0);
  swift_release();
  v19 = v7;
  v20 = v6;
  v21 = 0;
LABEL_25:
  sub_1BA73B1B8(v19, v20, v21);
  swift_release();
  return 0;
}

BOOL sub_1BA892178(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float *v3;
  float *v4;
  uint64_t v5;
  _BOOL8 result;
  float v7;
  float v8;
  float v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return 0;
  v3 = (float *)(a1 + 36);
  v4 = (float *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1BA8921E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *i;
  int v5;
  int v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (unsigned __int8 *)(a2 + 48);
    for (i = (unsigned __int8 *)(a1 + 48); ; i += 24)
    {
      v5 = *i;
      v6 = *v3;
      v7 = *((_QWORD *)i - 2) == *((_QWORD *)v3 - 2) && *((_QWORD *)i - 1) == *((_QWORD *)v3 - 1);
      if (!v7 && (sub_1BB874398() & 1) == 0)
        break;
      if (v5)
        v8 = 0x746C7561666564;
      else
        v8 = 1685217635;
      if (v5)
        v9 = 0xE700000000000000;
      else
        v9 = 0xE400000000000000;
      if (v6)
        v10 = 0x746C7561666564;
      else
        v10 = 1685217635;
      if (v6)
        v11 = 0xE700000000000000;
      else
        v11 = 0xE400000000000000;
      if (v8 == v10 && v9 == v11)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v13 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
          return 0;
      }
      v3 += 24;
      if (!--v2)
        return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1BA892300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  char v7;
  BOOL v9;
  __int128 v11;
  char v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v7 = 1;
    }
    else
    {
      v3 = v2 - 1;
      v4 = a2 + 48;
      v5 = (_BYTE *)(a1 + 48);
      do
      {
        v6 = *v5;
        v11 = *((_OWORD *)v5 - 1);
        v12 = v6;
        _s8NewsFeed22FormatGroupRequirementO2eeoiySbAC_ACtFZ_0((uint64_t)&v11);
        v9 = v3-- != 0;
        if ((v7 & 1) == 0)
          break;
        v4 += 24;
        v5 += 24;
      }
      while (v9);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1BA8923A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *i;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (_QWORD *)(a2 + 64);
  for (i = (_QWORD *)(a1 + 64); ; i += 5)
  {
    v7 = *(i - 4);
    v6 = *(i - 3);
    v8 = *((unsigned __int8 *)i - 16);
    v9 = *(i - 1);
    v10 = *(v3 - 4);
    v39 = *(v3 - 3);
    v40 = *i;
    LODWORD(v11) = *((unsigned __int8 *)v3 - 16);
    v12 = *v3;
    v37 = *((_BYTE *)v3 - 16);
    v36 = v2;
    v38 = *(v3 - 1);
    if (*((_BYTE *)i - 16))
      break;
    if (*((_BYTE *)v3 - 16))
    {
      v29 = *((_BYTE *)v3 - 16);
      v11 = *(i - 3);
      swift_bridgeObjectRetain();
      v6 = v11;
      LOBYTE(v11) = v29;
LABEL_29:
      v30 = v6;
      sub_1BA73B1CC(v10, v39, v11);
      sub_1BA73B1B8(v7, v30, v8);
      sub_1BA73B1B8(v10, v39, v11);
      return 0;
    }
    v20 = v7 == v10 && v6 == v39;
    if (v20)
    {
      v18 = *(v3 - 4);
      v26 = *(i - 3);
      sub_1BA73B1CC(v7, v6, 0);
      swift_bridgeObjectRetain();
      sub_1BA73B1CC(v7, v26, 0);
      swift_bridgeObjectRetain();
      sub_1BA73B1CC(v7, v26, 0);
      sub_1BA73B1CC(v7, v26, 0);
      sub_1BA73B1B8(v7, v26, 0);
      v15 = v7;
      v27 = v7;
      v17 = v26;
      sub_1BA73B1B8(v27, v26, 0);
    }
    else
    {
      v21 = *(i - 3);
      v34 = sub_1BB874398();
      sub_1BA73B1CC(v7, v21, 0);
      swift_bridgeObjectRetain();
      sub_1BA73B1CC(v10, v39, 0);
      swift_bridgeObjectRetain();
      sub_1BA73B1CC(v10, v39, 0);
      sub_1BA73B1CC(v7, v21, 0);
      v15 = v7;
      v22 = v7;
      v17 = v21;
      sub_1BA73B1B8(v22, v21, 0);
      v18 = v10;
      sub_1BA73B1B8(v10, v39, 0);
      if ((v34 & 1) == 0)
      {
        sub_1BA73B1B8(v10, v39, 0);
        swift_bridgeObjectRelease();
        v31 = v15;
        v32 = v21;
        v33 = 0;
        goto LABEL_30;
      }
    }
LABEL_23:
    if (v9 == v38 && v40 == v12)
    {
      sub_1BA73B1B8(v18, v39, v37);
      swift_bridgeObjectRelease();
      sub_1BA73B1B8(v15, v17, v8);
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = sub_1BB874398();
      sub_1BA73B1B8(v18, v39, v37);
      swift_bridgeObjectRelease();
      sub_1BA73B1B8(v15, v17, v8);
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0)
        return 0;
    }
    v3 += 5;
    v2 = v36 - 1;
    if (v36 == 1)
      return 1;
  }
  if (v8 == 1)
  {
    if ((_DWORD)v11 != 1)
      goto LABEL_29;
    v13 = (*(i - 4) & 1) == 0;
    v14 = *(i - 3);
    sub_1BA73B1CC(v7, v6, 1);
    swift_bridgeObjectRetain();
    sub_1BA73B1CC(v10, v39, 1);
    swift_bridgeObjectRetain();
    v15 = v7;
    v16 = v7;
    v17 = v14;
    sub_1BA73B1B8(v16, v14, 1);
    sub_1BA73B1B8(v10, v39, 1);
    v18 = v10;
    v19 = v13 ^ v10;
    LOBYTE(v8) = 1;
    if ((v19 & 1) == 0)
    {
      sub_1BA73B1B8(v10, v39, 1);
      swift_bridgeObjectRelease();
      v31 = v15;
      v32 = v14;
      v33 = 1;
      goto LABEL_30;
    }
    goto LABEL_23;
  }
  if ((_DWORD)v11 != 2)
    goto LABEL_29;
  v23 = *(i - 3);
  sub_1BA73B1CC(v7, v6, 2);
  swift_bridgeObjectRetain();
  sub_1BA73B1CC(v10, v39, 2);
  swift_bridgeObjectRetain();
  v24 = v7;
  v35 = v9;
  v25 = v7;
  v17 = v23;
  sub_1BA73B1B8(v24, v23, 2);
  sub_1BA73B1B8(v10, v39, 2);
  v18 = v10;
  v15 = v25;
  v20 = v25 == v10;
  v9 = v35;
  if (v20)
    goto LABEL_23;
  sub_1BA73B1B8(v10, v39, 2);
  swift_bridgeObjectRelease();
  v31 = v15;
  v32 = v23;
  v33 = 2;
LABEL_30:
  sub_1BA73B1B8(v31, v32, v33);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BA892830(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (uint64_t *)(a2 + 64);
    for (i = (uint64_t *)(a1 + 64); ; i += 5)
    {
      v7 = *(i - 2);
      v6 = *(i - 1);
      v8 = *i;
      v9 = *(v3 - 2);
      v13 = *(v3 - 1);
      v14 = *v3;
      v10 = *(i - 4) == *(v3 - 4) && *(i - 3) == *(v3 - 3);
      if (!v10 && (sub_1BB874398() & 1) == 0)
        break;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v11 = sub_1BA6EB330(v7, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      if (v6 == v13 && v8 == v14)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v5 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0)
          return 0;
      }
      v3 += 5;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1BA892A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  double v9[66];
  double __dst[66];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v7 = 1;
    }
    else
    {
      v3 = (char *)(a1 + 32);
      v4 = (char *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v6 = v5;
        memcpy(__dst, v3, sizeof(__dst));
        memcpy(v9, v4, sizeof(v9));
        v7 = _s8NewsFeed19FormatTextNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(__dst, v9);
        if ((v7 & 1) == 0)
          break;
        v5 = v6 - 1;
        v4 += 528;
        v3 += 528;
      }
      while (v6);
    }
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_1BA892AC0(uint64_t a1, uint64_t a2)
{
  return sub_1BA892ADC(a1, a2, (void (*)(uint64_t))sub_1BA71CA6C, (uint64_t (*)(char *, char *))static FormatSize.== infix(_:_:), (void (*)(uint64_t))sub_1BA719718);
}

uint64_t sub_1BA892ADC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t (*a4)(char *, char *), void (*a5)(uint64_t))
{
  uint64_t v5;
  __int128 *v8;
  __int128 *i;
  char v10;
  char v11;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5 == *(_QWORD *)(a2 + 16))
  {
    if (!v5 || a1 == a2)
      return 1;
    v8 = (__int128 *)(a1 + 32);
    for (i = (__int128 *)(a2 + 32); ; ++i)
    {
      v14 = *v8;
      v17 = *i;
      v15 = *((_QWORD *)&v17 + 1);
      v18 = v14;
      v16 = v14;
      swift_retain();
      a3(*((_QWORD *)&v14 + 1));
      swift_retain();
      a3(v15);
      static FormatExpression.== infix(_:_:)((uint64_t)&v16);
      if ((v10 & 1) == 0)
        break;
      v11 = a4((char *)&v18 + 8, (char *)&v17 + 8);
      swift_release();
      a5(v15);
      swift_release();
      a5(*((_QWORD *)&v14 + 1));
      if ((v11 & 1) == 0)
        return 0;
      ++v8;
      if (!--v5)
        return 1;
    }
    swift_release();
    a5(v15);
    swift_release();
    a5(*((_QWORD *)&v14 + 1));
  }
  return 0;
}

uint64_t sub_1BA892C34(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  char v12;
  char v13;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4];
  swift_retain();
  swift_retain();
  sub_1BB5D7F98(v5);
  LOBYTE(v5) = v6;
  swift_release();
  swift_release();
  if ((v5 & 1) == 0)
    return 0;
  v7 = a1 + 5;
  v8 = a2 + 5;
  v9 = v2 - 1;
  do
  {
    v10 = v9 == 0;
    if (!v9)
      break;
    v11 = *v7++;
    ++v8;
    swift_retain();
    swift_retain();
    sub_1BB5D7F98(v11);
    v13 = v12;
    swift_release();
    swift_release();
    --v9;
  }
  while ((v13 & 1) != 0);
  return v10;
}

uint64_t sub_1BA892D40(uint64_t a1, uint64_t a2)
{
  return sub_1BA88214C(a1, a2, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t (*)(char *, char *))_s8NewsFeed19FormatItemNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0);
}

BOOL sub_1BA892D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  uint64_t v5;
  _BOOL8 result;
  double v7;
  double v8;
  double v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  v3 = (double *)(a1 + 40);
  v4 = (double *)(a2 + 40);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_1BA892DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  char v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1 + 48;
    v4 = a2 + 48;
    do
    {
      v6 = *(_BYTE *)(v4 - 8);
      if ((*(_BYTE *)(v3 - 8) & 1) != 0)
      {
        if (!*(_BYTE *)(v4 - 8))
          return 0;
      }
      else
      {
        if (*(_QWORD *)(v3 - 16) != *(_QWORD *)(v4 - 16))
          v6 = 1;
        if ((v6 & 1) != 0)
          return 0;
      }
      if ((*(_BYTE *)(v3 + 8) & 1) != 0)
      {
        if (!*(_BYTE *)(v4 + 8))
          return 0;
      }
      else
      {
        if (*(_QWORD *)v3 == *(_QWORD *)v4)
          v7 = *(_BYTE *)(v4 + 8);
        else
          v7 = 1;
        if ((v7 & 1) != 0)
          return 0;
      }
      if ((*(_BYTE *)(v3 + 24) & 1) != 0)
      {
        if (!*(_BYTE *)(v4 + 24))
          return 0;
      }
      else
      {
        if (*(_QWORD *)(v3 + 16) == *(_QWORD *)(v4 + 16))
          v8 = *(_BYTE *)(v4 + 24);
        else
          v8 = 1;
        if ((v8 & 1) != 0)
          return 0;
      }
      if ((*(_BYTE *)(v3 + 40) & 1) != 0)
      {
        if (!*(_BYTE *)(v4 + 40))
          return 0;
      }
      else
      {
        if (*(_QWORD *)(v3 + 32) == *(_QWORD *)(v4 + 32))
          v5 = *(_BYTE *)(v4 + 40);
        else
          v5 = 1;
        if ((v5 & 1) != 0)
          return 0;
      }
      v4 += 64;
      v3 += 64;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1BA892EA4(uint64_t a1, unint64_t a2)
{
  return sub_1BA892EDC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA7E8], &qword_1ED3A24C8, MEMORY[0x1E0DDA800]);
}

uint64_t sub_1BA892EC0(uint64_t a1, unint64_t a2)
{
  return sub_1BA892EDC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA848], &qword_1ED3A24F0, MEMORY[0x1E0DDA860]);
}

uint64_t sub_1BA892EDC(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  char v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;

  v10 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v12 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v13 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v11 == v13)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v12 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_47;
LABEL_3:
  v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11 != v13)
    return 0;
LABEL_4:
  if (!v11)
    return 1;
  i = a1 & 0xFFFFFFFFFFFFFF8;
  v15 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v16 = a1;
  else
    v16 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v10)
    v15 = v16;
  v17 = a2 & 0xFFFFFFFFFFFFFF8;
  v18 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v19 = a2;
  else
    v19 = a2 & 0xFFFFFFFFFFFFFF8;
  if (v12)
    v18 = v19;
  if (v15 == v18)
    return 1;
  if (v11 < 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v29 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_52:
    result = MEMORY[0x1BCCE4630](0, a1);
    v13 = result;
    goto LABEL_20;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_54;
  }
  v13 = *(_QWORD *)(a1 + 32);
  result = swift_retain();
LABEL_20:
  v28 = a2 & 0xC000000000000001;
  v25 = a5;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_54:
    a5 = MEMORY[0x1BCCE4630](0, a2);
LABEL_23:
    if (*(_QWORD *)(v13 + 16) == *(_QWORD *)(a5 + 16) && *(_QWORD *)(v13 + 24) == *(_QWORD *)(a5 + 24)
      || (sub_1BB874398() & 1) != 0)
    {
      v26 = v17;
      v27 = i;
      a3(0);
      a3 = (uint64_t (*)(uint64_t))sub_1BA4A2870(a4, a3, v25);
      v21 = sub_1BB872958();
      swift_release();
      swift_release();
      if ((v21 & 1) != 0)
      {
        a4 = (unint64_t *)(1 - v11);
        for (i = 5; ; ++i)
        {
          v11 = (unint64_t *)((char *)a4 + i) == (unint64_t *)5;
          if ((unint64_t *)((char *)a4 + i) == (unint64_t *)5)
            return v11;
          v17 = i - 4;
          if (v29)
          {
            v23 = MEMORY[0x1BCCE4630](i - 4, a1);
            if (v28)
              goto LABEL_32;
          }
          else
          {
            if (v17 >= *(_QWORD *)(v27 + 16))
            {
              __break(1u);
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
            v23 = *(_QWORD *)(a1 + 8 * i);
            swift_retain();
            if (v28)
            {
LABEL_32:
              a5 = MEMORY[0x1BCCE4630](i - 4, a2);
              goto LABEL_37;
            }
          }
          if (v17 >= *(_QWORD *)(v26 + 16))
            goto LABEL_50;
          a5 = *(_QWORD *)(a2 + 8 * i);
          swift_retain();
LABEL_37:
          v24 = *(_QWORD *)(v23 + 16) == *(_QWORD *)(a5 + 16) && *(_QWORD *)(v23 + 24) == *(_QWORD *)(a5 + 24);
          if (!v24 && (sub_1BB874398() & 1) == 0)
            goto LABEL_42;
          v22 = sub_1BB872958();
          swift_release();
          swift_release();
          if ((v22 & 1) == 0)
            return v11;
        }
      }
    }
    else
    {
LABEL_42:
      swift_release();
      swift_release();
    }
    return 0;
  }
  if (*(_QWORD *)(v17 + 16))
  {
    a5 = *(_QWORD *)(a2 + 32);
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA893228(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  uint64_t i;
  char v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;

  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v7 = (_QWORD *)sub_1BB873F30();
    swift_bridgeObjectRelease();
    if ((_QWORD *)v5 == v7)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v6 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_47;
LABEL_3:
  v7 = *(_QWORD **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((_QWORD *)v5 != v7)
    return 0;
LABEL_4:
  if (!v5)
    return 1;
  v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v9 = a1;
  else
    v9 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v4)
    v8 = v9;
  v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v11 = a2;
  else
    v11 = a2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v10 = v11;
  if (v8 == v10)
    return 1;
  if (v5 < 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_52:
    result = MEMORY[0x1BCCE4630](0, a1);
    v7 = (_QWORD *)result;
    goto LABEL_20;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_54;
  }
  v7 = *(_QWORD **)(a1 + 32);
  result = swift_retain();
LABEL_20:
  v22 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_54:
    v13 = (_QWORD *)MEMORY[0x1BCCE4630](0, a2);
LABEL_23:
    if (v7[2] == v13[2] && v7[3] == v13[3] || (sub_1BB874398() & 1) != 0)
    {
      v14 = sub_1BA8934F8(v7[4], v13[4]);
      swift_release();
      swift_release();
      if ((v14 & 1) != 0)
      {
        v15 = 1 - v5;
        for (i = 5; ; ++i)
        {
          v5 = v15 + i == 5;
          if (v15 + i == 5)
            return v5;
          v18 = i - 4;
          if (v23)
          {
            v19 = (_QWORD *)MEMORY[0x1BCCE4630](i - 4, a1);
            if (v22)
              goto LABEL_32;
          }
          else
          {
            if (v18 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
            v19 = *(_QWORD **)(a1 + 8 * i);
            swift_retain();
            if (v22)
            {
LABEL_32:
              v20 = (_QWORD *)MEMORY[0x1BCCE4630](i - 4, a2);
              goto LABEL_37;
            }
          }
          if (v18 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_50;
          v20 = *(_QWORD **)(a2 + 8 * i);
          swift_retain();
LABEL_37:
          v21 = v19[2] == v20[2] && v19[3] == v20[3];
          if (!v21 && (sub_1BB874398() & 1) == 0)
            goto LABEL_42;
          v17 = sub_1BA8934F8(v19[4], v20[4]);
          swift_release();
          swift_release();
          if ((v17 & 1) == 0)
            return v5;
        }
      }
    }
    else
    {
LABEL_42:
      swift_release();
      swift_release();
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(_QWORD **)(a2 + 32);
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8934F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;

  v4 = sub_1BB86D078();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0DDA848];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, v5);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - v9;
  sub_1BA896B1C(0, (unint64_t *)&qword_1EF2A96C8, (unint64_t *)&qword_1ED3A2500, v5);
  v12 = v11;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v38 - v13;
  v15 = type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota();
  MEMORY[0x1E0C80A78](v15);
  v17 = (double *)((char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v22 = (double *)((char *)&v38 - v21);
  v23 = *(_QWORD *)(a1 + 16);
  if (v23 == *(_QWORD *)(a2 + 16))
  {
    v47 = v4;
    v38 = v10;
    if (!v23 || a1 == a2)
      return 1;
    v48 = v6;
    v49 = v14;
    v44 = v19;
    v45 = v12;
    v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v40 = *(_QWORD *)(v20 + 72);
    v25 = (void (*)(uint64_t))MEMORY[0x1E0DDA848];
    v41 = a2;
    v42 = a1;
    v43 = v17;
    v26 = v46;
    while (1)
    {
      sub_1BA4C2DD8(a1 + v24, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
      sub_1BA4C2DD8(a2 + v24, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
      if (*(_QWORD *)v22 != *(_QWORD *)v17 || v22[1] != v17[1])
        break;
      v27 = *(int *)(v44 + 24);
      v28 = (uint64_t)v17 + v27;
      v29 = (uint64_t)v49;
      v30 = (uint64_t)&v49[*(int *)(v45 + 48)];
      sub_1BA57B488((uint64_t)v22 + v27, (uint64_t)v49, (unint64_t *)&qword_1ED3A2500, v25);
      sub_1BA57B488(v28, v30, (unint64_t *)&qword_1ED3A2500, v25);
      v31 = v47;
      v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
      if (v32(v29, 1, v47) == 1)
      {
        if (v32(v30, 1, v31) != 1)
          goto LABEL_16;
        sub_1BA502AD0((uint64_t)v49, (unint64_t *)&qword_1ED3A2500, v25);
        a2 = v41;
        a1 = v42;
        v17 = v43;
      }
      else
      {
        v33 = (uint64_t)v38;
        sub_1BA57B488(v29, (uint64_t)v38, (unint64_t *)&qword_1ED3A2500, v25);
        if (v32(v30, 1, v31) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v33, v31);
LABEL_16:
          sub_1BA896B7C((uint64_t)v49, (unint64_t *)&qword_1EF2A96C8, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
          v17 = v43;
          break;
        }
        v34 = v33;
        v35 = v48;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v26, v30, v31);
        sub_1BA4A2870(&qword_1ED3A24F0, (uint64_t (*)(uint64_t))v25, MEMORY[0x1E0DDA860]);
        v39 = sub_1BB872958();
        v36 = *(void (**)(char *, uint64_t))(v35 + 8);
        v36(v26, v31);
        v36((char *)v34, v31);
        sub_1BA502AD0(v29, (unint64_t *)&qword_1ED3A2500, v25);
        a2 = v41;
        a1 = v42;
        v17 = v43;
        if ((v39 & 1) == 0)
          break;
      }
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
      sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
      v24 += v40;
      if (!--v23)
        return 1;
    }
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
    sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupExplicitSlotBundleArticleQuota);
  }
  return 0;
}

uint64_t sub_1BA8938F4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, unint64_t, uint64_t);
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  double *v45;
  double *v46;
  uint64_t v47;
  double v48;
  double v49;
  double v50;
  _QWORD v51[3];
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;

  v4 = sub_1BB86D078();
  v5 = *(char **)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9.n128_f64[0] = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v51 - v10;
  if (!((unint64_t)a1 >> 62))
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v13 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_64:
    swift_bridgeObjectRetain();
    v14 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v12 == v14)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v13 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_64;
LABEL_3:
  v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v12 != v14)
    return 0;
LABEL_4:
  if (!v12)
    return 1;
  v15 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v16 = a1;
  else
    v16 = a1 & 0xFFFFFFFFFFFFFF8;
  if ((unint64_t)a1 >> 62)
    v15 = v16;
  v17 = a2 & 0xFFFFFFFFFFFFFF8;
  v18 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v19 = a2;
  else
    v19 = a2 & 0xFFFFFFFFFFFFFF8;
  if (v13)
    v18 = v19;
  if (v15 == v18)
    return 1;
  if (v12 < 0)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v59 = a1 & 0xFFFFFFFFFFFFFF8;
  v61 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_68:
    result = MEMORY[0x1BCCE4630](0, a1, v9);
    v14 = result;
    goto LABEL_20;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_70;
  }
  v14 = *(_QWORD *)(a1 + 32);
  result = swift_retain();
LABEL_20:
  v60 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_70:
    v21 = MEMORY[0x1BCCE4630](0, a2, v9);
LABEL_23:
    v22 = v21;
    if (*(_QWORD *)(v14 + 16) == *(_QWORD *)(v21 + 16) && (v23 = v14, *(_QWORD *)(v14 + 24) == *(_QWORD *)(v21 + 24))
      || (v24 = v21, v25 = sub_1BB874398(), v22 = v24, v23 = v14, (v25 & 1) != 0))
    {
      v26 = *(_QWORD *)(*(_QWORD *)v23 + 120);
      v27 = *(_QWORD *)(*(_QWORD *)v22 + 120);
      if (*(double *)(v23 + v26) == *(double *)(v22 + v27))
      {
        v28 = *(_QWORD *)(v23 + v26 + 8);
        v29 = *(_QWORD *)(v22 + v27 + 8);
        v30 = *(_QWORD *)(v28 + 16);
        if (v30 == *(_QWORD *)(v29 + 16))
        {
          v51[1] = a2 + 32;
          v51[2] = a1 + 32;
          v31 = 1;
          v54 = a2;
          v55 = v12;
          v64 = v11;
          v65 = v5;
          v63 = v7;
          v52 = a1;
          v53 = v17;
          while (1)
          {
            if (v30 && v28 != v29)
            {
              if (*(double *)(v28 + 32) != *(double *)(v29 + 32))
                break;
              if (v30 != 1)
              {
                if (*(double *)(v28 + 40) != *(double *)(v29 + 40))
                  break;
                v45 = (double *)(v28 + 48);
                v46 = (double *)(v29 + 48);
                v47 = v30 - 2;
                while (v47)
                {
                  v48 = *v45++;
                  v49 = v48;
                  v50 = *v46++;
                  --v47;
                  if (v49 != v50)
                    goto LABEL_59;
                }
              }
            }
            v57 = v23;
            v58 = v31;
            v32 = v23 + v26;
            v33 = v22;
            v12 = type metadata accessor for FeedGroupBundleArticleQuotas();
            v34 = *(int *)(v12 + 24);
            v56 = v33;
            v35 = v33 + v27;
            if ((MEMORY[0x1BCCDD97C](v32 + v34, v35 + v34) & 1) == 0)
              break;
            v36 = *(int *)(v12 + 28);
            a1 = *(_QWORD *)(v35 + v36);
            v66 = *(_QWORD *)(v32 + v36);
            v11 = *(char **)(v66 + 16);
            if (v11 != *(char **)(a1 + 16))
              break;
            if (v11 && v66 != a1)
            {
              v5 = 0;
              v17 = (v65[80] + 32) & ~(unint64_t)v65[80];
              v62 = *((_QWORD *)v65 + 9);
              v37 = (void (*)(char *, unint64_t, uint64_t))*((_QWORD *)v65 + 2);
              while (1)
              {
                v38 = v64;
                v37(v64, v66 + v17, v4);
                if ((unint64_t)v5 >= *(_QWORD *)(a1 + 16))
                  break;
                v37(v7, a1 + v17, v4);
                sub_1BA4A2870(&qword_1ED3A24F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA848], MEMORY[0x1E0DDA860]);
                v12 = sub_1BB872958();
                a2 = *((_QWORD *)v65 + 1);
                ((void (*)(char *, uint64_t))a2)(v7, v4);
                ((void (*)(char *, uint64_t))a2)(v38, v4);
                if ((v12 & 1) == 0)
                  goto LABEL_59;
                ++v5;
                v17 += v62;
                if (v11 == v5)
                  goto LABEL_41;
              }
              __break(1u);
              goto LABEL_67;
            }
LABEL_41:
            swift_release();
            result = swift_release();
            v39 = v58;
            if (v58 == v55)
              return 1;
            if (v61)
            {
              result = MEMORY[0x1BCCE4630](v58, v52);
              v40 = v53;
              a2 = v54;
              if (!v60)
                goto LABEL_47;
            }
            else
            {
              v40 = v53;
              a2 = v54;
              if (v58 >= *(_QWORD *)(v59 + 16))
                goto LABEL_72;
              result = swift_retain();
              if (!v60)
              {
LABEL_47:
                if (v39 >= *(_QWORD *)(v40 + 16))
                  goto LABEL_73;
                v41 = result;
                v42 = swift_retain();
                goto LABEL_49;
              }
            }
            v41 = result;
            v42 = MEMORY[0x1BCCE4630](v39, a2);
LABEL_49:
            v22 = v42;
            v23 = v41;
            if (*(_QWORD *)(v41 + 16) == *(_QWORD *)(v42 + 16) && *(_QWORD *)(v41 + 24) == *(_QWORD *)(v42 + 24)
              || (v43 = v42, v44 = sub_1BB874398(), v22 = v43, v39 = v58, v23 = v41, (v44 & 1) != 0))
            {
              v26 = *(_QWORD *)(*(_QWORD *)v23 + 120);
              v27 = *(_QWORD *)(*(_QWORD *)v22 + 120);
              if (*(double *)(v23 + v26) == *(double *)(v22 + v27))
              {
                v31 = v39 + 1;
                v28 = *(_QWORD *)(v23 + v26 + 8);
                v29 = *(_QWORD *)(v22 + v27 + 8);
                v30 = *(_QWORD *)(v28 + 16);
                if (v30 == *(_QWORD *)(v29 + 16))
                  continue;
              }
            }
            break;
          }
        }
      }
    }
LABEL_59:
    swift_release();
    swift_release();
    return 0;
  }
  if (*(_QWORD *)(v17 + 16))
  {
    v21 = swift_retain();
    goto LABEL_23;
  }
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
  return result;
}

uint64_t sub_1BA893E44(uint64_t a1, uint64_t a2)
{
  return sub_1BA748C14(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DDA848], &qword_1ED3A24F0, MEMORY[0x1E0DDA860]);
}

uint64_t sub_1BA893E60(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v7 = (_QWORD *)sub_1BB873F30();
    swift_bridgeObjectRelease();
    if ((_QWORD *)v5 == v7)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v6 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_47;
LABEL_3:
  v7 = *(_QWORD **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((_QWORD *)v5 != v7)
    return 0;
LABEL_4:
  if (!v5)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v4)
    v9 = v10;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v12 = a2;
  else
    v12 = a2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v11 = v12;
  if (v9 == v11)
    return 1;
  if (v5 < 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_52:
    result = MEMORY[0x1BCCE4630](0, a1);
    v7 = (_QWORD *)result;
    goto LABEL_20;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_54;
  }
  v7 = *(_QWORD **)(a1 + 32);
  result = swift_retain();
LABEL_20:
  v25 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_54:
    v14 = (_QWORD *)MEMORY[0x1BCCE4630](0, a2);
LABEL_23:
    if (v7[2] == v14[2] && v7[3] == v14[3] || (sub_1BB874398() & 1) != 0)
    {
      v24 = v8;
      v15 = v7[4];
      v16 = v14[4];
      swift_release();
      swift_release();
      if (v15 == v16)
      {
        v17 = 1 - v5;
        for (i = 5; ; ++i)
        {
          v5 = v17 + i == 5;
          if (v17 + i == 5)
            return v5;
          v20 = i - 4;
          if (v26)
          {
            v21 = (_QWORD *)MEMORY[0x1BCCE4630](i - 4, a1);
            if (v25)
              goto LABEL_32;
          }
          else
          {
            if (v20 >= *(_QWORD *)(v24 + 16))
            {
              __break(1u);
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
            v21 = *(_QWORD **)(a1 + 8 * i);
            swift_retain();
            if (v25)
            {
LABEL_32:
              v22 = (_QWORD *)MEMORY[0x1BCCE4630](i - 4, a2);
              goto LABEL_37;
            }
          }
          if (v20 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_50;
          v22 = *(_QWORD **)(a2 + 8 * i);
          swift_retain();
LABEL_37:
          v23 = v21[2] == v22[2] && v21[3] == v22[3];
          if (!v23 && (sub_1BB874398() & 1) == 0)
            goto LABEL_42;
          v19 = v21[4];
          v8 = v22[4];
          swift_release();
          swift_release();
          if (v19 != v8)
            return v5;
        }
      }
    }
    else
    {
LABEL_42:
      swift_release();
      swift_release();
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD **)(a2 + 32);
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BA894130(unint64_t result, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t i;
  double v18;
  double v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;

  v3 = result;
  v4 = result >> 62;
  if (!(result >> 62))
  {
    v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_46:
    swift_bridgeObjectRetain();
    v24 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (v5 == v24)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BB873F30();
  result = swift_bridgeObjectRelease();
  v6 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_46;
LABEL_3:
  if (v5 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v5)
    return 1;
  v7 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v3 < 0)
    v8 = v3;
  else
    v8 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v4)
    v7 = v8;
  v9 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v10 = a2;
  else
    v10 = a2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v9 = v10;
  if (v7 == v9)
    return 1;
  if (v5 < 0)
  {
LABEL_50:
    __break(1u);
LABEL_51:
    result = MEMORY[0x1BCCE4630](0, v3);
    v11 = result;
    v12 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
      goto LABEL_20;
LABEL_52:
    v13 = MEMORY[0x1BCCE4630](0, a2);
LABEL_22:
    if (*(_QWORD *)(v11 + 16) == *(_QWORD *)(v13 + 16) && *(_QWORD *)(v11 + 24) == *(_QWORD *)(v13 + 24)
      || (sub_1BB874398() & 1) != 0)
    {
      v14 = *(double *)(v13 + 32);
      v15 = *(double *)(v11 + 32);
      swift_release();
      swift_release();
      if (v15 == v14)
      {
        v16 = 1 - v5;
        for (i = 5; ; ++i)
        {
          v5 = v16 + i == 5;
          if (v16 + i == 5)
            return v5;
          v20 = i - 4;
          if (v25)
          {
            v21 = MEMORY[0x1BCCE4630](i - 4, v3);
            if (v12)
              goto LABEL_31;
          }
          else
          {
            if (v20 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_49:
              __break(1u);
              goto LABEL_50;
            }
            v21 = *(_QWORD *)(v3 + 8 * i);
            swift_retain();
            if (v12)
            {
LABEL_31:
              v22 = MEMORY[0x1BCCE4630](i - 4, a2);
              goto LABEL_36;
            }
          }
          if (v20 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_49;
          v22 = *(_QWORD *)(a2 + 8 * i);
          swift_retain();
LABEL_36:
          v23 = *(_QWORD *)(v21 + 16) == *(_QWORD *)(v22 + 16) && *(_QWORD *)(v21 + 24) == *(_QWORD *)(v22 + 24);
          if (!v23 && (sub_1BB874398() & 1) == 0)
            goto LABEL_41;
          v18 = *(double *)(v22 + 32);
          v19 = *(double *)(v21 + 32);
          swift_release();
          swift_release();
          if (v19 != v18)
            return v5;
        }
      }
    }
    else
    {
LABEL_41:
      swift_release();
      swift_release();
    }
    return 0;
  }
  v25 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0)
    goto LABEL_51;
  if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_54;
  }
  v11 = *(_QWORD *)(v3 + 32);
  result = swift_retain();
  v12 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
    goto LABEL_52;
LABEL_20:
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(_QWORD *)(a2 + 32);
    swift_retain();
    goto LABEL_22;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1BA8943F8(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  char v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_63:
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v5 == v7)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v6 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_63;
LABEL_3:
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5 != v7)
    return 0;
LABEL_4:
  if (!v5)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v4)
    v9 = v10;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v12 = a2;
  else
    v12 = a2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v11 = v12;
  if (v9 == v11)
    return 1;
  if (v5 < 0)
    goto LABEL_67;
  v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_68:
    result = MEMORY[0x1BCCE4630](0, a1);
    v7 = result;
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_70;
    }
    v7 = *(_QWORD *)(a1 + 32);
    result = swift_retain();
  }
  v22 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_70:
    v14 = MEMORY[0x1BCCE4630](0, a2);
    goto LABEL_23;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD *)(a2 + 32);
    swift_retain();
LABEL_23:
    if (*(_QWORD *)(v7 + 16) == *(_QWORD *)(v14 + 16) && *(_QWORD *)(v7 + 24) == *(_QWORD *)(v14 + 24)
      || (sub_1BB874398() & 1) != 0)
    {
      v21 = v8;
      v15 = 1 - v5;
      for (i = 5; ; ++i)
      {
        v17 = *(_BYTE *)(v14 + 40);
        v5 = *(_QWORD *)(v14 + 64);
        if ((*(_BYTE *)(v7 + 40) & 1) != 0)
        {
          if (!*(_BYTE *)(v14 + 40))
            break;
        }
        else
        {
          if (*(double *)(v7 + 32) != *(double *)(v14 + 32))
            v17 = 1;
          if ((v17 & 1) != 0)
            break;
        }
        if ((*(_BYTE *)(v7 + 56) & 1) != 0)
        {
          if (!*(_BYTE *)(v14 + 56))
            break;
        }
        else
        {
          if (*(_QWORD *)(v7 + 48) == *(_QWORD *)(v14 + 48))
            v18 = *(_BYTE *)(v14 + 56);
          else
            v18 = 1;
          if ((v18 & 1) != 0)
            break;
        }
        if (*(_QWORD *)(v7 + 64))
        {
          if (!v5)
            break;
          swift_bridgeObjectRetain();
          v19 = swift_bridgeObjectRetain();
          v8 = sub_1BA6EB330(v19, v5);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v8 & 1) == 0)
            return 0;
        }
        else
        {
          if (v5)
            break;
          swift_release();
          swift_release();
        }
        if (v15 + i == 5)
          return 1;
        v20 = i - 4;
        if (v23)
        {
          v7 = MEMORY[0x1BCCE4630](i - 4, a1);
          if (v22)
            goto LABEL_51;
        }
        else
        {
          if (v20 >= *(_QWORD *)(v21 + 16))
          {
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
            goto LABEL_68;
          }
          v7 = *(_QWORD *)(a1 + 8 * i);
          swift_retain();
          if (v22)
          {
LABEL_51:
            v14 = MEMORY[0x1BCCE4630](i - 4, a2);
            goto LABEL_56;
          }
        }
        if (v20 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_66;
        v14 = *(_QWORD *)(a2 + 8 * i);
        swift_retain();
LABEL_56:
        if ((*(_QWORD *)(v7 + 16) != *(_QWORD *)(v14 + 16) || *(_QWORD *)(v7 + 24) != *(_QWORD *)(v14 + 24))
          && (sub_1BB874398() & 1) == 0)
        {
          break;
        }
      }
    }
    swift_release();
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA894740(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t i;
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v5 == v7)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v6 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_47;
LABEL_3:
  v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5 != v7)
    return 0;
LABEL_4:
  if (!v5)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v4)
    v9 = v10;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v12 = a2;
  else
    v12 = a2 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v11 = v12;
  if (v9 == v11)
    return 1;
  if (v5 < 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_52:
    result = MEMORY[0x1BCCE4630](0, a1);
    v7 = result;
    goto LABEL_20;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_54;
  }
  v7 = *(_QWORD *)(a1 + 32);
  result = swift_retain();
LABEL_20:
  v25 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_54:
    v14 = MEMORY[0x1BCCE4630](0, a2);
LABEL_23:
    if (*(_QWORD *)(v7 + 16) == *(_QWORD *)(v14 + 16) && *(_QWORD *)(v7 + 24) == *(_QWORD *)(v14 + 24)
      || (sub_1BB874398() & 1) != 0)
    {
      v24 = v8;
      v15 = *(unsigned __int8 *)(v7 + 32);
      v16 = *(unsigned __int8 *)(v14 + 32);
      swift_release();
      swift_release();
      if (v15 == v16)
      {
        v17 = 1 - v5;
        for (i = 5; ; ++i)
        {
          v5 = v17 + i == 5;
          if (v17 + i == 5)
            return v5;
          v20 = i - 4;
          if (v26)
          {
            v21 = MEMORY[0x1BCCE4630](i - 4, a1);
            if (v25)
              goto LABEL_32;
          }
          else
          {
            if (v20 >= *(_QWORD *)(v24 + 16))
            {
              __break(1u);
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
            v21 = *(_QWORD *)(a1 + 8 * i);
            swift_retain();
            if (v25)
            {
LABEL_32:
              v22 = MEMORY[0x1BCCE4630](i - 4, a2);
              goto LABEL_37;
            }
          }
          if (v20 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_50;
          v22 = *(_QWORD *)(a2 + 8 * i);
          swift_retain();
LABEL_37:
          v23 = *(_QWORD *)(v21 + 16) == *(_QWORD *)(v22 + 16) && *(_QWORD *)(v21 + 24) == *(_QWORD *)(v22 + 24);
          if (!v23 && (sub_1BB874398() & 1) == 0)
            goto LABEL_42;
          v19 = *(unsigned __int8 *)(v21 + 32);
          v8 = *(unsigned __int8 *)(v22 + 32);
          swift_release();
          swift_release();
          if (v19 != (_DWORD)v8)
            return v5;
        }
      }
    }
    else
    {
LABEL_42:
      swift_release();
      swift_release();
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD *)(a2 + 32);
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA894A10(uint64_t a1, unint64_t a2)
{
  return sub_1BA894E0C(a1, a2, sub_1BA6C1868);
}

uint64_t sub_1BA894A1C(uint64_t a1, unint64_t a2)
{
  return sub_1BA894E0C(a1, a2, sub_1BA85B740);
}

uint64_t sub_1BA894A28(uint64_t a1, unint64_t a2)
{
  return sub_1BA894E0C(a1, a2, sub_1BA85B9E8);
}

uint64_t sub_1BA894A34(uint64_t a1, unint64_t a2)
{
  return sub_1BA894E0C(a1, a2, sub_1BA85BDE8);
}

uint64_t sub_1BA894A40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  float64x2_t *v4;
  float64x2_t *v5;
  int32x2_t v6;
  uint64_t result;
  BOOL v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = v2 - 1;
  v4 = (float64x2_t *)(a2 + 40);
  v5 = (float64x2_t *)(a1 + 40);
  do
  {
    v6 = vmovn_s64(vceqq_f64(*v5, *v4));
    result = ((*(_QWORD *)&v5[-1].f64[1] == *(_QWORD *)&v4[-1].f64[1]) & v6.i8[0]) & v6.i8[4];
    v9 = v3-- != 0;
    if ((_DWORD)result != 1)
      break;
    v4 = (float64x2_t *)((char *)v4 + 24);
    v5 = (float64x2_t *)((char *)v5 + 24);
  }
  while (v9);
  return result;
}

unint64_t sub_1BA894AC8(unint64_t result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;
  double *v24;
  uint64_t v25;

  v4 = result;
  v5 = result >> 62;
  if (!(result >> 62))
  {
    v6 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_57:
    swift_bridgeObjectRetain();
    v25 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (v6 == v25)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BB873F30();
  result = swift_bridgeObjectRelease();
  v7 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_57;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v4 < 0)
    v9 = v4;
  else
    v9 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v5)
    v8 = v9;
  v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v11 = a2;
  else
    v11 = a2 & 0xFFFFFFFFFFFFFF8;
  if (v7)
    v10 = v11;
  if (v8 == v10)
    return 1;
  if (v6 < 0)
  {
    __break(1u);
LABEL_60:
    result = MEMORY[0x1BCCE4630](0, v4);
    v12 = (_QWORD *)result;
    v13 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
      goto LABEL_20;
LABEL_61:
    v14 = (_QWORD *)MEMORY[0x1BCCE4630](0, a2);
LABEL_22:
    if (v12[2] == v14[2] && v12[3] == v14[3] || (sub_1BB874398() & 1) != 0)
    {
      v15 = sub_1BA894A40(v12[4], v14[4]);
      swift_release();
      result = swift_release();
      if ((v15 & 1) != 0)
      {
        if (v6 == 1)
          return 1;
        v16 = 1;
        while (1)
        {
          if (v16 == v6)
            goto LABEL_64;
          if (v2)
          {
            result = MEMORY[0x1BCCE4630](v16, v4);
            v17 = (_QWORD *)result;
            if (v13)
              goto LABEL_34;
          }
          else
          {
            if (v16 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_65;
            v17 = *(_QWORD **)(v4 + 32 + 8 * v16);
            result = swift_retain();
            if (v13)
            {
LABEL_34:
              v18 = (_QWORD *)MEMORY[0x1BCCE4630](v16, a2);
              goto LABEL_39;
            }
          }
          if (v16 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_66;
          v18 = *(_QWORD **)(a2 + 32 + 8 * v16);
          swift_retain();
LABEL_39:
          v19 = v17[2] == v18[2] && v17[3] == v18[3];
          if (!v19 && (sub_1BB874398() & 1) == 0)
            goto LABEL_53;
          v20 = v17[4];
          v21 = v18[4];
          v22 = *(_QWORD *)(v20 + 16);
          if (v22 != *(_QWORD *)(v21 + 16))
            goto LABEL_53;
          if (v22 && v20 != v21)
          {
            v23 = (double *)(v21 + 48);
            v24 = (double *)(v20 + 48);
            while (*((_QWORD *)v24 - 2) == *((_QWORD *)v23 - 2) && *(v24 - 1) == *(v23 - 1) && *v24 == *v23)
            {
              v23 += 3;
              v24 += 3;
              if (!--v22)
                goto LABEL_30;
            }
            goto LABEL_53;
          }
LABEL_30:
          swift_release();
          swift_release();
          ++v16;
          result = 1;
          if (v16 == v6)
            return result;
        }
      }
    }
    else
    {
LABEL_53:
      swift_release();
      swift_release();
    }
    return 0;
  }
  v2 = v4 & 0xC000000000000001;
  if ((v4 & 0xC000000000000001) != 0)
    goto LABEL_60;
  if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_63;
  }
  v12 = *(_QWORD **)(v4 + 32);
  result = swift_retain();
  v13 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
    goto LABEL_61;
LABEL_20:
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v14 = *(_QWORD **)(a2 + 32);
    swift_retain();
    goto LABEL_22;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_1BA894E00(uint64_t a1, unint64_t a2)
{
  return sub_1BA894E0C(a1, a2, sub_1BA6EB330);
}

uint64_t sub_1BA894E0C(uint64_t a1, unint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;
  char v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v6 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)sub_1BB873F30();
    swift_bridgeObjectRelease();
    if ((_QWORD *)v7 == v9)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  v8 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_47;
LABEL_3:
  v9 = *(_QWORD **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((_QWORD *)v7 != v9)
    return 0;
LABEL_4:
  if (!v7)
    return 1;
  i = a1 & 0xFFFFFFFFFFFFFF8;
  v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v6)
    v11 = v12;
  v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v14 = a2;
  else
    v14 = a2 & 0xFFFFFFFFFFFFFF8;
  if (v8)
    v13 = v14;
  if (v11 == v13)
    return 1;
  if (v7 < 0)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v26 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_52:
    result = MEMORY[0x1BCCE4630](0, a1);
    v9 = (_QWORD *)result;
    goto LABEL_20;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_54;
  }
  v9 = *(_QWORD **)(a1 + 32);
  result = swift_retain();
LABEL_20:
  v25 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_54:
    v16 = (_QWORD *)MEMORY[0x1BCCE4630](0, a2);
LABEL_23:
    if (v9[2] == v16[2] && v9[3] == v16[3] || (sub_1BB874398() & 1) != 0)
    {
      v17 = a3(v9[4], v16[4]);
      swift_release();
      swift_release();
      if ((v17 & 1) != 0)
      {
        v24 = i;
        v18 = 1 - v7;
        for (i = 5; ; ++i)
        {
          v7 = v18 + i == 5;
          if (v18 + i == 5)
            return v7;
          v20 = i - 4;
          if (v26)
          {
            v21 = (_QWORD *)MEMORY[0x1BCCE4630](i - 4, a1);
            if (v25)
              goto LABEL_32;
          }
          else
          {
            if (v20 >= *(_QWORD *)(v24 + 16))
            {
              __break(1u);
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
            v21 = *(_QWORD **)(a1 + 8 * i);
            swift_retain();
            if (v25)
            {
LABEL_32:
              v22 = (_QWORD *)MEMORY[0x1BCCE4630](i - 4, a2);
              goto LABEL_37;
            }
          }
          if (v20 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_50;
          v22 = *(_QWORD **)(a2 + 8 * i);
          swift_retain();
LABEL_37:
          v23 = v21[2] == v22[2] && v21[3] == v22[3];
          if (!v23 && (sub_1BB874398() & 1) == 0)
            goto LABEL_42;
          v19 = a3(v21[4], v22[4]);
          swift_release();
          swift_release();
          if ((v19 & 1) == 0)
            return v7;
        }
      }
    }
    else
    {
LABEL_42:
      swift_release();
      swift_release();
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(_QWORD **)(a2 + 32);
    swift_retain();
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

BOOL sub_1BA8950E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1BA895154(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = (_BYTE *)(a1 + 32);
    v4 = (_BYTE *)(a2 + 32);
    do
    {
      if (*v3)
        v5 = 0x6B636F6C62;
      else
        v5 = 0x776F6C6C6F66;
      if (*v3)
        v6 = 0xE500000000000000;
      else
        v6 = 0xE600000000000000;
      if (*v4)
        v7 = 0x6B636F6C62;
      else
        v7 = 0x776F6C6C6F66;
      if (*v4)
        v8 = 0xE500000000000000;
      else
        v8 = 0xE600000000000000;
      if (v5 == v7 && v6 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v10 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
          return 0;
      }
      ++v3;
      ++v4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1BA895250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (uint64_t *)(a2 + 64);
    for (i = (uint64_t *)(a1 + 64); ; i += 5)
    {
      v5 = *(i - 2);
      v6 = *(i - 1);
      v7 = *i;
      v9 = *(v3 - 2);
      v8 = *(v3 - 1);
      v15 = *v3;
      v10 = *(i - 4) == *(v3 - 4) && *(i - 3) == *(v3 - 3);
      if (!v10 && (sub_1BB874398() & 1) == 0)
        break;
      v16 = v9;
      v17 = v5;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if ((static FormatTextContent.== infix(_:_:)(&v17, &v16) & 1) == 0)
        goto LABEL_19;
      if (v6)
      {
        if (!v8
          || (swift_retain(),
              v11 = swift_retain(),
              v12 = _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v11, v8),
              swift_release(),
              swift_release(),
              (v12 & 1) == 0))
        {
LABEL_19:
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      else if (v8)
      {
        goto LABEL_19;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_1BA6EB330(v7, v15);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if ((v13 & 1) == 0)
        return 0;
      v3 += 5;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1BA8954A0(uint64_t a1, uint64_t a2)
{
  return sub_1BA895610(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatTextContent.== infix(_:_:));
}

uint64_t sub_1BA8954AC(uint64_t a1, uint64_t a2)
{
  return sub_1BA8954B8(a1, a2, (uint64_t (*)(char *, char *))static FormatTextContent.== infix(_:_:));
}

uint64_t sub_1BA8954B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, char *))
{
  uint64_t v3;
  __int128 *v5;
  __int128 *i;
  __int128 v7;
  char v8;
  char v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 == *(_QWORD *)(a2 + 16))
  {
    if (!v3 || a1 == a2)
      return 1;
    v5 = (__int128 *)(a1 + 32);
    for (i = (__int128 *)(a2 + 32); ; ++i)
    {
      v7 = *v5;
      v12 = *i;
      v13 = v7;
      v11 = v7;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      static FormatExpression.== infix(_:_:)((uint64_t)&v11);
      if ((v8 & 1) == 0)
        break;
      v9 = a3((char *)&v13 + 8, (char *)&v12 + 8);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if ((v9 & 1) == 0)
        return 0;
      ++v5;
      if (!--v3)
        return 1;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return 0;
}

uint64_t sub_1BA895604(uint64_t a1, uint64_t a2)
{
  return sub_1BA895610(a1, a2, (uint64_t (*)(uint64_t *, uint64_t *))static FormatColor.== infix(_:_:));
}

uint64_t sub_1BA895610(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *, uint64_t *))
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 == *(_QWORD *)(a2 + 16))
  {
    if (!v3 || a1 == a2)
      return 1;
    v5 = (uint64_t *)(a2 + 48);
    for (i = (uint64_t *)(a1 + 48); ; i += 3)
    {
      v7 = *(i - 1);
      v8 = *i;
      v9 = *(v5 - 2);
      v10 = *(v5 - 1);
      v11 = *v5;
      v14 = *(i - 2);
      v15 = v7;
      v16 = v8;
      v13 = v11;
      if ((v14 != v9 || v7 != v10) && (sub_1BB874398() & 1) == 0)
        break;
      if ((a3(&v16, &v13) & 1) == 0)
        break;
      v5 += 3;
      if (!--v3)
        return 1;
    }
  }
  return 0;
}

BOOL static FormatSyncImageContent.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __int128 v11;
  BOOL v12;
  uint64_t v13;
  char v14;
  __int16 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int16 v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int16 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int16 v39;
  __int128 v40;
  __int128 v41;
  char v42;
  uint64_t v43;

  v2 = *a1;
  v3 = *a2;
  v4 = (unint64_t)*a1 >> 62;
  if (!(_DWORD)v4)
  {
    if (!(v3 >> 62))
    {
      v13 = *(_QWORD *)(v2 + 112);
      v14 = *(_BYTE *)(v2 + 104);
      v15 = *(_WORD *)(v2 + 64);
      v16 = *(_BYTE *)(v2 + 40);
      v17 = *(_QWORD *)(v2 + 32);
      v18 = *(_QWORD *)(v3 + 32);
      v19 = *(_BYTE *)(v3 + 40);
      v20 = *(_WORD *)(v3 + 64);
      v21 = *(_BYTE *)(v3 + 104);
      v22 = *(_QWORD *)(v3 + 112);
      v36 = *(_OWORD *)(v2 + 16);
      *(_QWORD *)&v37 = v17;
      BYTE8(v37) = v16;
      v38 = *(_OWORD *)(v2 + 48);
      v39 = v15;
      v40 = *(_OWORD *)(v2 + 72);
      v41 = *(_OWORD *)(v2 + 88);
      v42 = v14;
      v43 = v13;
      v28 = *(_OWORD *)(v3 + 16);
      *(_QWORD *)&v29 = v18;
      BYTE8(v29) = v19;
      v30 = *(_OWORD *)(v3 + 48);
      v31 = v20;
      v32 = *(_OWORD *)(v3 + 72);
      v33 = *(_OWORD *)(v3 + 88);
      v34 = v21;
      v35 = v22;
      swift_retain();
      swift_retain();
      v12 = _s8NewsFeed17FormatSymbolImageV2eeoiySbAC_ACtFZ_0(&v36, &v28);
      goto LABEL_7;
    }
    return 0;
  }
  if ((_DWORD)v4 != 1)
  {
    if (v3 >> 62 == 2)
    {
      v23 = *(_QWORD *)(v2 + 24);
      v24 = *(_QWORD *)(v3 + 16);
      v25 = *(_QWORD *)(v3 + 24);
      *(_QWORD *)&v36 = *(_QWORD *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      *((_QWORD *)&v36 + 1) = v23;
      *(_QWORD *)&v28 = v24;
      *((_QWORD *)&v28 + 1) = v25;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatSyncImageContent.== infix(_:_:)(&v36, &v28) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v26 = sub_1BA895610(v23, v25, (uint64_t (*)(uint64_t *, uint64_t *))static FormatSyncImageContent.== infix(_:_:));
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if ((v26 & 1) != 0)
          return 1;
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    return 0;
  }
  if (v3 >> 62 != 1)
    return 0;
  v5 = *(_BYTE *)(v2 + 64);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(_BYTE *)(v3 + 64);
  *(_QWORD *)&v36 = *(_QWORD *)(v2 + 16);
  *((_QWORD *)&v36 + 1) = v6;
  v10 = *(_OWORD *)(v2 + 48);
  v37 = *(_OWORD *)(v2 + 32);
  v38 = v10;
  LOBYTE(v39) = v5;
  *(_QWORD *)&v28 = v7;
  *((_QWORD *)&v28 + 1) = v8;
  v11 = *(_OWORD *)(v3 + 48);
  v29 = *(_OWORD *)(v3 + 32);
  v30 = v11;
  LOBYTE(v31) = v9;
  swift_retain();
  swift_retain();
  v12 = _s8NewsFeed17FormatBundleImageV2eeoiySbAC_ACtFZ_0((uint64_t)&v36, (uint64_t)&v28);
LABEL_7:
  swift_release();
  swift_release();
  return v12;
}

uint64_t sub_1BA895988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  __int128 v18;
  uint64_t v19;
  char v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  char v25;

  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_BYTE *)(a1 + 40);
  v12 = *(_BYTE *)(a1 + 41);
  v13 = *(_QWORD *)(a4 + 32);
  v14 = *(_BYTE *)(a4 + 40);
  v15 = *(_BYTE *)(a4 + 41);
  v22 = *(_OWORD *)(a1 + 16);
  v23 = v10;
  v24 = v11;
  v25 = v12;
  v18 = *(_OWORD *)(a4 + 16);
  v19 = v13;
  v20 = v14;
  v21 = v15;
  if ((static FormatCommandBinding.== infix(_:_:)(&v22, &v18) & 1) != 0
    && (sub_1BA891E00(a2, a5, (uint64_t (*)(uint64_t *, _QWORD *))static FormatTextContent.== infix(_:_:)) & 1) != 0)
  {
    *(_QWORD *)&v22 = a3;
    *(_QWORD *)&v18 = a6;
    static FormatTextContent.== infix(_:_:)((uint64_t)&v22);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

unint64_t sub_1BA895A48(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA829C74();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA895A6C()
{
  unint64_t result;

  result = qword_1ED3D09D0;
  if (!qword_1ED3D09D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSyncImageContent, &type metadata for FormatSyncImageContent);
    atomic_store(result, (unint64_t *)&qword_1ED3D09D0);
  }
  return result;
}

_QWORD *assignWithCopy for FormatSyncImageContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for FormatSyncImageContent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1BA895B24(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_1BA895B30(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1BA895B40(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for FormatSyncImageContent()
{
  return &type metadata for FormatSyncImageContent;
}

uint64_t sub_1BA895B64(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 == 1)
    return sub_1BA682148(result, a2);
  if (!(a3 >> 6))
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BA895B84(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 == 1)
    return sub_1BA766C18(result, a2);
  if (!(a3 >> 6))
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1BA895BA4(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1BA739250(result);
  return result;
}

unint64_t sub_1BA895BB8(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return sub_1BA6F5D74(result);
  return result;
}

uint64_t sub_1BA895BCC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy129_8(a2, a1);
  return a2;
}

uint64_t sub_1BA895C08(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 128) >> 5) & 3;
}

uint64_t sub_1BA895C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14 < 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1BA5DCC20(a7);
  }
}

uint64_t sub_1BA895C80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *(_QWORD *)(a1 + 136);
  v15 = *(_QWORD *)(a1 + 144);
  v14 = *(_QWORD *)(a1 + 152);
  v2 = *(_QWORD *)(a1 + 168);
  v13 = *(_QWORD *)(a1 + 160);
  v3 = *(_QWORD *)(a1 + 176);
  v4 = *(_QWORD *)(a1 + 184);
  v5 = *(_QWORD *)(a1 + 192);
  v11 = *(_OWORD *)(a1 + 216);
  v12 = *(_OWORD *)(a1 + 200);
  v10 = *(_OWORD *)(a1 + 232);
  v7 = *(_QWORD *)(a1 + 248);
  v6 = *(_QWORD *)(a1 + 256);
  v8 = *(_BYTE *)(a1 + 264);
  sub_1BA76849C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
  sub_1BA76849C(v16, v15, v14, v13, v2, v3, v4, v5, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v7, v6, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
  return a1;
}

uint64_t sub_1BA895D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BA5DCC4C(a7);
  }
}

uint64_t sub_1BA895DFC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1BA76849C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128), a2, a3);
  return a1;
}

uint64_t sub_1BA895E68(uint64_t result)
{
  *(_BYTE *)(result + 128) &= 0x9Fu;
  return result;
}

uint64_t sub_1BA895E78(uint64_t a1)
{
  sub_1BA769620(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  return a1;
}

uint64_t sub_1BA895ED8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 128) >> 7;
}

uint64_t sub_1BA895EE4(uint64_t result)
{
  *(_BYTE *)(result + 128) &= ~0x80u;
  return result;
}

uint64_t sub_1BA895EF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *(_QWORD *)(a1 + 136);
  v2 = *(_QWORD *)(a1 + 152);
  v15 = *(_QWORD *)(a1 + 144);
  v3 = *(_QWORD *)(a1 + 160);
  v4 = *(_QWORD *)(a1 + 168);
  v5 = *(_QWORD *)(a1 + 176);
  v6 = *(_QWORD *)(a1 + 184);
  v7 = *(_QWORD *)(a1 + 192);
  v13 = *(_OWORD *)(a1 + 216);
  v14 = *(_OWORD *)(a1 + 200);
  v12 = *(_OWORD *)(a1 + 232);
  v9 = *(_QWORD *)(a1 + 248);
  v8 = *(_QWORD *)(a1 + 256);
  v10 = *(_BYTE *)(a1 + 264);
  sub_1BA769654(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  sub_1BA769654(v16, v15, v2, v3, v4, v5, v6, v7, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v8, v10);
  return a1;
}

uint64_t sub_1BA895FE8(__int128 *a1, uint64_t a2)
{
  __swift_memcpy128_8(a2, a1);
  return a2;
}

uint64_t sub_1BA896024(uint64_t a1)
{
  return *(_QWORD *)(a1 + 104) >> 63;
}

uint64_t sub_1BA896030(uint64_t result)
{
  *(_QWORD *)(result + 104) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1BA896040(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  v11 = *(_OWORD *)(a1 + 208);
  v12 = *(_OWORD *)(a1 + 192);
  v10 = *(_OWORD *)(a1 + 224);
  sub_1BA895D94(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_1BA895D94(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t *sub_1BA896120(uint64_t *a1)
{
  sub_1BA895C14(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
  return a1;
}

uint64_t sub_1BA896178(__int128 *a1, uint64_t a2)
{
  __swift_memcpy128_8(a2, a1);
  return a2;
}

uint64_t sub_1BA8961B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
    return swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA5DCC20(a7);
}

uint64_t sub_1BA896218(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  sub_1BA8962BC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  sub_1BA8962BC(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1BA8962BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
    return swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA5DCC4C(a7);
}

void sub_1BA89631C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39E5C0)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39E5C0);
  }
}

uint64_t sub_1BA896370(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_1BA896394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA8963E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 152);
  v16 = *(_QWORD *)(a1 + 144);
  v3 = *(_QWORD *)(a1 + 160);
  v4 = *(_QWORD *)(a1 + 168);
  v5 = *(_QWORD *)(a1 + 176);
  v6 = *(_QWORD *)(a1 + 184);
  v7 = *(_QWORD *)(a1 + 192);
  v8 = *(_QWORD *)(a1 + 200);
  v15 = *(_OWORD *)(a1 + 208);
  v13 = *(_OWORD *)(a1 + 240);
  v14 = *(_OWORD *)(a1 + 224);
  v12 = *(_OWORD *)(a1 + 256);
  v9 = *(_QWORD *)(a1 + 272);
  v10 = *(_BYTE *)(a1 + 280);
  sub_1BA4B6260(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_OWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_BYTE *)(a1 + 136));
  sub_1BA4B6260(v16, v2, v3, v4, v5, v6, v7, v8, v15, BYTE8(v15), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_1BA8964E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA89652C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 128);
  v13 = *(_QWORD *)(a1 + 120);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_BYTE *)(a1 + 112);
  v11 = *(_BYTE *)(a1 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA796C58(v2, v3, v4);
  sub_1BA825F44(v10, v9, v8, v7, v5);
  sub_1BA796C58(v13, v12, v11);
  return a1;
}

uint64_t sub_1BA896610(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 128);
  v13 = *(_QWORD *)(a1 + 120);
  v4 = *(_BYTE *)(a1 + 72);
  v5 = *(_BYTE *)(a1 + 112);
  v11 = *(_BYTE *)(a1 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA796C70(v2, v3, v4);
  sub_1BA825F5C(v10, v9, v8, v7, v5);
  sub_1BA796C70(v13, v12, v11);
  return a1;
}

uint64_t sub_1BA8966F8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 136);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), v4);
  return a1;
}

unint64_t sub_1BA89675C()
{
  unint64_t result;

  result = qword_1ED3D0680;
  if (!qword_1ED3D0680)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLocalization, &type metadata for FormatLocalization);
    atomic_store(result, (unint64_t *)&qword_1ED3D0680);
  }
  return result;
}

uint64_t sub_1BA8967A0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v7;

  sub_1BA896A10(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BA8967F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v5;

  sub_1BA896A10(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_1BA89682C()
{
  unint64_t result;

  result = qword_1ED3D0510;
  if (!qword_1ED3D0510)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDecoration, &type metadata for FormatDecoration);
    atomic_store(result, (unint64_t *)&qword_1ED3D0510);
  }
  return result;
}

unint64_t sub_1BA896870()
{
  unint64_t result;

  result = qword_1ED3D0160;
  if (!qword_1ED3D0160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatType, &type metadata for FormatType);
    atomic_store(result, (unint64_t *)&qword_1ED3D0160);
  }
  return result;
}

unint64_t sub_1BA8968B4()
{
  unint64_t result;

  result = qword_1ED3D07A0;
  if (!qword_1ED3D07A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementary, &type metadata for FormatSupplementary);
    atomic_store(result, (unint64_t *)&qword_1ED3D07A0);
  }
  return result;
}

uint64_t sub_1BA8968F8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v8;

  sub_1BA6BCAFC(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_1BA89694C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v6;

  sub_1BA6BCAFC(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

unint64_t sub_1BA896988()
{
  unint64_t result;

  result = qword_1ED3D01E0;
  if (!qword_1ED3D01E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStyle, &type metadata for FormatStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3D01E0);
  }
  return result;
}

unint64_t sub_1BA8969CC()
{
  unint64_t result;

  result = qword_1ED3D0130;
  if (!qword_1ED3D0130)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItem, &type metadata for FormatItem);
    atomic_store(result, (unint64_t *)&qword_1ED3D0130);
  }
  return result;
}

void sub_1BA896A10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3();
    v9 = type metadata accessor for FormatFileReference(a1, a4, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BA896A68()
{
  unint64_t result;

  result = qword_1ED3D01B0;
  if (!qword_1ED3D01B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroup, &type metadata for FormatGroup);
    atomic_store(result, (unint64_t *)&qword_1ED3D01B0);
  }
  return result;
}

uint64_t sub_1BA896AAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA896AE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BA896B1C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BA4A3FB4(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BA896B7C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  sub_1BA896B1C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BA896BB8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA896BE0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA896C18(uint64_t a1, float a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t result;
  void *v10;
  float v11;
  uint64_t v12;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = a2;
    v12 = a4;
    v10 = a5;
    sub_1BA897270(a1, &v11, &v10, 1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA896CA8()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1BA896CCC(void **a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  char v25;
  Swift::Double v26;
  Swift::Double v27;
  Swift::Double v28;
  uint64_t v29;
  Swift::Double v30;
  NewsFeed::FormatLineCap v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  char *v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  NewsFeed::FormatProgressCircleOptionsResolved options;
  uint64_t v52;

  v3 = (unint64_t)*a1;
  v4 = (unint64_t)*a1 >> 62;
  if (!(_DWORD)v4)
  {
    v18 = *(_QWORD *)(a2 + 16);
    v17 = *(_QWORD *)(a2 + 24);
    v19 = (_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed21FormatProgressBarView_identifier);
    swift_beginAccess();
    *v19 = v18;
    v19[1] = v17;
    v20 = (id)(v3 & 0x3FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB8736F0();
    v21 = *(_QWORD *)(a2 + 96);
    if (v21)
    {
      objc_msgSend((id)v3, sel_setAccessibilityIgnoresInvertColors_, *(_BYTE *)(v21 + 80) & 1);
      if ((~*(_QWORD *)(v21 + 64) & 0xF000000000000007) != 0)
      {
        v52 = *(_QWORD *)(v21 + 64);
        v22 = (id)v3;
        FormatColor.color.getter();
        v24 = v23;
        goto LABEL_14;
      }
    }
    else
    {
      objc_msgSend((id)v3, sel_setAccessibilityIgnoresInvertColors_, 0);
    }
    v38 = (id)v3;
    v24 = 0;
LABEL_14:
    objc_msgSend((id)v3, sel_setProgressTintColor_, v24);

    if (v21 && (~*(_QWORD *)(v21 + 72) & 0xF000000000000007) != 0)
    {
      v52 = *(_QWORD *)(v21 + 72);
      v41 = (id)v3;
      FormatColor.color.getter();
      v40 = v42;
    }
    else
    {
      v39 = (id)v3;
      v40 = 0;
    }
    objc_msgSend((id)v3, sel_setTrackTintColor_, v40);
    v35 = v20;
    goto LABEL_39;
  }
  if ((_DWORD)v4 != 1)
  {
    v25 = *(_BYTE *)(a2 + 152);
    if ((v25 & 0xC0) != 0x40)
      return;
    v27 = *(double *)(a2 + 136);
    v26 = *(double *)(a2 + 144);
    v28 = *(double *)(a2 + 128);
    v29 = *(_QWORD *)(a2 + 120);
    v30 = *(double *)(a2 + 112);
    v31 = v25 & 0x3F;
    v33 = *(_QWORD *)(a2 + 16);
    v32 = *(_QWORD *)(a2 + 24);
    v34 = (_QWORD *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC8NewsFeed24FormatProgressCircleView_identifier);
    swift_beginAccess();
    *v34 = v33;
    v34[1] = v32;
    v35 = (id)(v3 & 0x3FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB8736F0();
    v36 = *(_QWORD *)(a2 + 96);
    if (v36)
      v37 = *(_BYTE *)(v36 + 80) & 1;
    else
      v37 = 0;
    objc_msgSend(v35, sel_setAccessibilityIgnoresInvertColors_, v37);
    options.radius = v30;
    options.clockwise = v29 & 1;
    options.stepPercentage = v28;
    options.minPercentage = v27;
    options.maxPercentage = v26;
    options.lineCap = v31;
    FormatProgressCircleView.setUpCircleView(options:)(&options);
    if (v36 && (~*(_QWORD *)(v36 + 64) & 0xF000000000000007) != 0)
    {
      options.radius = *(Swift::Double *)(v36 + 64);
      FormatColor.color.getter();
      v40 = v49;
    }
    else
    {
      v40 = objc_msgSend((id)objc_opt_self(), sel_redColor);
      if (!v36)
        goto LABEL_36;
    }
    if ((~*(_QWORD *)(v36 + 72) & 0xF000000000000007) != 0)
    {
      options.radius = *(Swift::Double *)(v36 + 72);
      FormatColor.color.getter();
      goto LABEL_38;
    }
LABEL_36:
    v50 = objc_msgSend((id)objc_opt_self(), sel_grayColor);
LABEL_38:
    v20 = v50;
    FormatProgressCircleView.setProgressColors(backgroundColor:strokeColor:)((UIColor)v40, (UIColor)v50);
    goto LABEL_39;
  }
  if (*(unsigned __int8 *)(a2 + 152) >= 0x40u)
    return;
  v5 = (char *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
  v7 = *(_QWORD *)(a2 + 136);
  v6 = *(_QWORD *)(a2 + 144);
  v9 = *(_QWORD *)(a2 + 120);
  v8 = *(_QWORD *)(a2 + 128);
  v10 = *(_QWORD *)(a2 + 112);
  v12 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v13 = &v5[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier];
  swift_beginAccess();
  *(_QWORD *)v13 = v12;
  *((_QWORD *)v13 + 1) = v11;
  v14 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BB8736F0();
  v15 = *(_QWORD *)(a2 + 96);
  if (v15)
    v16 = *(_BYTE *)(v15 + 80) & 1;
  else
    v16 = 0;
  objc_msgSend(v14, sel_setAccessibilityIgnoresInvertColors_, v16);
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_radius] = v10;
  v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_clockwise] = v9 & 1;
  v43 = &v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_stepPercentage];
  *(_QWORD *)v43 = v8;
  v43[8] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_minPercentage] = v7;
  *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_maxPercentage] = v6;
  if (v15 && (~*(_QWORD *)(v15 + 64) & 0xF000000000000007) != 0)
  {
    v52 = *(_QWORD *)(v15 + 64);
    FormatColor.color.getter();
    v20 = v44;
  }
  else
  {
    v20 = objc_msgSend((id)objc_opt_self(), sel_redColor);
    if (!v15)
      goto LABEL_31;
  }
  if ((~*(_QWORD *)(v15 + 72) & 0xF000000000000007) != 0)
  {
    v52 = *(_QWORD *)(v15 + 72);
    FormatColor.color.getter();
    goto LABEL_33;
  }
LABEL_31:
  v45 = objc_msgSend((id)objc_opt_self(), sel_grayColor);
LABEL_33:
  v46 = v45;
  v47 = *(id *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer];
  v48 = objc_msgSend(v20, sel_CGColor);
  objc_msgSend(v47, sel_setFillColor_, v48);

  v35 = *(id *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer];
  v40 = objc_msgSend(v46, sel_CGColor);
  objc_msgSend(v35, sel_setFillColor_, v40);

LABEL_39:
}

void sub_1BA8971DC(uint64_t a1, void **a2, uint64_t *a3, uint64_t a4)
{
  unint64_t v6;
  id v7;
  uint64_t v8;

  v6 = (unint64_t)*a2;
  if ((unint64_t)*a2 >> 62)
  {
    v8 = *a3;
    v7 = (id)(v6 & 0x3FFFFFFFFFFFFFFFLL);
    sub_1BA6786EC(a1, v7, &v8, a4);

  }
  else
  {
    v8 = *a3;
    sub_1BA6786EC(a1, (id)v6, &v8, a4);

  }
}

void sub_1BA897270(uint64_t a1, float *a2, void **a3, char a4)
{
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  float v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  double v20;
  id v21;
  double v22;
  float v23;
  double v24;
  id v25;
  double v26;
  Swift::Double v27;
  uint64_t v28;

  v8 = (void (*)(uint64_t))MEMORY[0x1E0DB7748];
  sub_1BA4A3FB4(0, &qword_1ED3C4958, (void (*)(uint64_t))MEMORY[0x1E0DB7748]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_DWORD *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - v13;
  v15 = *a2;
  v16 = (unint64_t)*a3;
  sub_1BA57B488(a1, (uint64_t)&v28 - v13, &qword_1ED3C4958, v8);
  v17 = sub_1BB86FB08();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17) != 1)
  {
    sub_1BA57B488((uint64_t)v14, (uint64_t)v11, &qword_1ED3C4958, (void (*)(uint64_t))MEMORY[0x1E0DB7748]);
    v19 = (*(uint64_t (**)(_DWORD *, uint64_t))(v18 + 88))(v11, v17);
    if (v19 == *MEMORY[0x1E0DB7738])
    {
      (*(void (**)(_DWORD *, uint64_t))(v18 + 96))(v11, v17);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if (v19 != *MEMORY[0x1E0DB7740])
    {
      if (v19 == *MEMORY[0x1E0DB7728])
      {
        (*(void (**)(_DWORD *, uint64_t))(v18 + 96))(v11, v17);
        LODWORD(v22) = 0;
        if (v15 > 0.0)
        {
          LODWORD(v22) = *v11;
LABEL_17:
          v23 = *(float *)&v22 / v15;
          LODWORD(v22) = 1.0;
          if (v23 < 1.0)
          {
            LODWORD(v22) = 0;
            if (v23 >= 0.0)
              *(float *)&v22 = v23;
          }
        }
      }
      else
      {
        if (v19 != *MEMORY[0x1E0DB7730])
        {
          if (v19 == *MEMORY[0x1E0DB7720])
            goto LABEL_5;
          (*(void (**)(_DWORD *, uint64_t))(v18 + 8))(v11, v17);
          if (!(v16 >> 62))
          {
            LODWORD(v26) = 0;
            objc_msgSend((id)v16, sel_setProgress_animated_, a4 & 1, v26);
            goto LABEL_31;
          }
          if (v16 >> 62 == 1)
          {
            v25 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
            FormatProgressPieView.updatePieProgress(progress:)(0.0);
            goto LABEL_30;
          }
          v25 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
          v27 = 0.0;
LABEL_29:
          FormatProgressCircleView.updateCircleProgress(progress:)(v27);
          goto LABEL_30;
        }
        (*(void (**)(_DWORD *, uint64_t))(v18 + 96))(v11, v17);
        LODWORD(v22) = 0;
        if (v15 > 0.0)
        {
          v22 = *(double *)v11;
          *(float *)&v22 = *(double *)v11;
          goto LABEL_17;
        }
      }
      if (!(v16 >> 62))
      {
        objc_msgSend((id)v16, sel_setProgress_animated_, a4 & 1, v22);
LABEL_31:
        sub_1BA502AD0((uint64_t)v14, &qword_1ED3C4958, (void (*)(uint64_t))MEMORY[0x1E0DB7748]);
        return;
      }
      v24 = *(float *)&v22;
      if (v16 >> 62 == 1)
      {
        v25 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
        FormatProgressPieView.updatePieProgress(progress:)(v24);
LABEL_30:

        goto LABEL_31;
      }
      v25 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
      v27 = v24;
      goto LABEL_29;
    }
  }
LABEL_5:
  sub_1BA502AD0((uint64_t)v14, &qword_1ED3C4958, (void (*)(uint64_t))MEMORY[0x1E0DB7748]);
  if (v16 >> 62)
  {
    if (v16 >> 62 == 1)
    {
      v21 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
      FormatProgressPieView.updatePieProgress(progress:)(0.0);
    }
    else
    {
      v21 = (id)(v16 & 0x3FFFFFFFFFFFFFFFLL);
      FormatProgressCircleView.updateCircleProgress(progress:)(0.0);
    }

  }
  else
  {
    LODWORD(v20) = 0;
    objc_msgSend((id)v16, sel_setProgress_animated_, a4 & 1, v20);
  }
}

void sub_1BA8975CC(uint64_t a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  float v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void **__return_ptr, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t);
  id v28;
  uint64_t v29;
  id v30;
  void *v31[3];
  uint64_t v32;
  void *v33[5];

  v5 = v4;
  sub_1BA4A3FB4(0, &qword_1ED3C4958, (void (*)(uint64_t))MEMORY[0x1E0DB7748]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - v11;
  v13 = *(float *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = (unint64_t)*a3;
  v31[0] = (void *)v15;
  sub_1BA896CCC(v31, a2);
  v16 = *(_QWORD *)(a2 + 176);
  v33[0] = (void *)v15;
  v17 = *(_QWORD *)(a2 + 96);
  if (v17)
  {
    v18 = *(void **)(v17 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    v18 = 0;
  }
  v31[0] = v18;
  sub_1BA8971DC(v16, v33, (uint64_t *)v31, a4);
  swift_bridgeObjectRelease();
  if (v14 < 0)
  {
    v22 = *(_QWORD *)(v5 + 16);
    v23 = *(_QWORD *)(v5 + 24);
    v24 = *(void (**)(uint64_t, uint64_t))(v14 + 120);
    sub_1BA897950(v14);
    v24(v22, v23);
    *(float *)v33 = v13;
    v33[1] = (void *)v14;
    v31[0] = (void *)v15;
    sub_1BA897270((uint64_t)v12, (float *)v33, v31, 0);
    v25 = swift_allocObject();
    swift_weakInit();
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v25;
    *(float *)(v26 + 24) = v13;
    *(_QWORD *)(v26 + 32) = v14;
    *(_QWORD *)(v26 + 40) = v15;
    v27 = *(void (**)(void **__return_ptr, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t))(v14 + 136);
    v28 = (id)(v15 & 0x3FFFFFFFFFFFFFFFLL);
    sub_1BA897950(v14);
    swift_retain();
    v27(v33, v22, v23, sub_1BA8979CC, v26);
    swift_release();
    swift_release();
    sub_1BA57B488((uint64_t)v33, (uint64_t)v31, &qword_1ED3B0798, (void (*)(uint64_t))sub_1BA8979DC);
    if (v32)
    {
      __swift_project_boxed_opaque_existential_1(v31, v32);
      sub_1BB86DCF0();
      sub_1BA8979BC(v14);
      sub_1BA502AD0((uint64_t)v33, &qword_1ED3B0798, (void (*)(uint64_t))sub_1BA8979DC);
      sub_1BA502AD0((uint64_t)v12, &qword_1ED3C4958, (void (*)(uint64_t))MEMORY[0x1E0DB7748]);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
    else
    {
      sub_1BA8979BC(v14);
      sub_1BA502AD0((uint64_t)v33, &qword_1ED3B0798, (void (*)(uint64_t))sub_1BA8979DC);
      sub_1BA502AD0((uint64_t)v12, &qword_1ED3C4958, (void (*)(uint64_t))MEMORY[0x1E0DB7748]);
      sub_1BA502AD0((uint64_t)v31, &qword_1ED3B0798, (void (*)(uint64_t))sub_1BA8979DC);
    }
  }
  else
  {
    LODWORD(v19) = 0;
    if (v13 > 0.0)
    {
      *(float *)&v20 = *(float *)&v14 / v13;
      LODWORD(v19) = 1.0;
      if ((float)(*(float *)&v14 / v13) < 1.0)
      {
        LODWORD(v19) = 0;
        if (*(float *)&v20 >= 0.0)
          *(float *)&v19 = *(float *)&v14 / v13;
      }
    }
    if (v15 >> 62)
    {
      v21 = *(float *)&v19;
      v30 = (id)(v15 & 0x3FFFFFFFFFFFFFFFLL);
      if (v15 >> 62 == 1)
        FormatProgressPieView.updatePieProgress(progress:)(v21);
      else
        FormatProgressCircleView.updateCircleProgress(progress:)(v21);

    }
    else
    {
      objc_msgSend((id)v15, sel_setProgress_animated_, 0, v19, v20);
    }
  }
}

uint64_t sub_1BA897950(uint64_t result)
{
  if (result < 0)
    return swift_retain();
  return result;
}

uint64_t sub_1BA897960()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA897984()
{
  uint64_t v0;

  swift_release();
  sub_1BA8979BC(*(_QWORD *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_1BA8979BC(uint64_t result)
{
  if (result < 0)
    return swift_release();
  return result;
}

uint64_t sub_1BA8979CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA896C18(a1, *(float *)(v1 + 24), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

unint64_t sub_1BA8979DC()
{
  unint64_t result;

  result = qword_1ED3B0790;
  if (!qword_1ED3B0790)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B0790);
  }
  return result;
}

id IssueCoverViewStyle.parentBackgroundColor.getter()
{
  id *v0;

  return *v0;
}

NewsFeed::IssueCoverViewStyle __swiftcall IssueCoverViewStyle.init(parentBackgroundColor:)(NewsFeed::IssueCoverViewStyle parentBackgroundColor)
{
  NewsFeed::IssueCoverViewStyle *v1;

  v1->parentBackgroundColor.super.isa = parentBackgroundColor.parentBackgroundColor.super.isa;
  return parentBackgroundColor;
}

uint64_t IssueCoverViewRendererType.render(_:on:with:traits:coverViewStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v15;
  _OWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[3];
  uint64_t v20;
  char v21;

  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  v9 = *(_QWORD *)(a3 + 48);
  v10 = *(_QWORD *)(a3 + 56);
  v11 = *a5;
  v12 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v12;
  v19[2] = *(_OWORD *)(a1 + 32);
  v20 = v7;
  v21 = v8;
  v13 = *(_OWORD *)(a3 + 16);
  v16[0] = *(_OWORD *)a3;
  v16[1] = v13;
  v16[2] = *(_OWORD *)(a3 + 32);
  v17 = v9;
  v18 = v10;
  v15 = v11;
  return (*(uint64_t (**)(_OWORD *, uint64_t, _OWORD *, uint64_t, uint64_t *))(a7 + 8))(v19, a2, v16, a4, &v15);
}

ValueMetadata *type metadata accessor for IssueCoverViewStyle()
{
  return &type metadata for IssueCoverViewStyle;
}

uint64_t dispatch thunk of IssueCoverViewRendererType.render(_:on:with:traits:coverViewStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

void sub_1BA897AD0(uint64_t a1, _BYTE *a2, __int128 *a3, uint64_t a4, void **a5)
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  int v12;
  __int128 v13;
  __int128 v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  Swift::String_optional v28;
  Swift::Bool v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  id v65;
  id v66;
  id v67;
  _BYTE *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  _QWORD *v75;
  void *v76;
  id v77;
  id v78;
  uint64_t v80;
  void *v81;
  __int128 v82[4];
  _QWORD v83[4];
  __int128 v84;
  __int128 v85;
  __int128 v86;
  _BYTE v87[24];
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;

  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(void **)(a1 + 16);
  v80 = *(_QWORD *)(a1 + 24);
  v10 = *(void **)(a1 + 32);
  v9 = *(void **)(a1 + 40);
  v11 = *(void **)(a1 + 48);
  v12 = *(unsigned __int8 *)(a1 + 56);
  v13 = a3[1];
  v88 = *a3;
  v89 = v13;
  v14 = a3[3];
  v90 = a3[2];
  v91 = v14;
  v76 = *a5;
  v77 = v9;
  sub_1BB8736F0();
  v71 = a4;
  if (!v12)
  {
    v20 = v6;
    v21 = v10;
    v22 = v11;
    v23 = v8;
    v24 = v20;
    v25 = v23;
    v26 = objc_msgSend(v24, sel_identifier);
    v17 = sub_1BB8729A0();
    v19 = v27;

    v11 = v22;
    v10 = v21;
    sub_1BA899748(v6, v7, v8, v80, v21, (uint64_t)v77, v11, 0);
    goto LABEL_5;
  }
  if (v12 == 1)
  {
    sub_1BA8996DC(v6, v7, v8, v80, v10, (uint64_t)v77, v11, 1);
    v73 = v11;
    v15 = v6;
    swift_bridgeObjectRetain();
    v16 = objc_msgSend(v15, sel_identifier);
    v17 = sub_1BB8729A0();
    v19 = v18;
    swift_bridgeObjectRelease();

    v11 = v73;
LABEL_5:
    sub_1BA899748(v6, v7, v8, v80, v10, (uint64_t)v77, v11, v12);
    goto LABEL_7;
  }
  v19 = (void *)0xE400000000000000;
  v17 = 1701736302;
LABEL_7:
  v28.value._countAndFlagsBits = v17;
  v28.value._object = v19;
  v29 = IssueCoverView.prepareForReuse(identifier:)(v28);
  swift_bridgeObjectRelease();
  if (v29)
  {
    v74 = (id)*MEMORY[0x1E0CD2A68];
    sub_1BB873594();
    *(_QWORD *)&v84 = v74;
    *((_QWORD *)&v84 + 1) = *((_QWORD *)&v90 + 1);
    *(_QWORD *)&v85 = v30;
    *((_QWORD *)&v85 + 1) = v31;
    *(_QWORD *)&v86 = v32;
    *((_QWORD *)&v86 + 1) = v33;
    *(_QWORD *)v87 = v90;
    *(_OWORD *)&v87[8] = v91;
    __swift_project_boxed_opaque_existential_1(v75 + 7, v75[10]);
    *(_QWORD *)&v82[0] = v76;
    sub_1BB829254(a2, (uint64_t)&v84, (void **)v82);
    if (!v12)
    {
      v70 = v6;
      v72 = v8;
      v50 = v11;
      v51 = objc_msgSend(v70, sel_identifier);
      v69 = sub_1BB8729A0();
      v53 = v52;

      sub_1BA8996DC(v6, v7, v8, v80, v10, (uint64_t)v77, v50, 0);
      v54 = v74;
      swift_retain();
      v55 = v76;
      sub_1BB42CC84(v69, v53, a2, v75, v55, (uint64_t)&v84, v70, v72, (uint64_t)&v88);
      sub_1BA899748(v6, v7, v8, v80, v10, (uint64_t)v77, v50, 0);
      swift_bridgeObjectRelease();
      swift_release();

      sub_1BA899748(v6, v7, v8, v80, v10, (uint64_t)v77, v50, 0);
      return;
    }
    if (v12 != 1)
    {
      v49 = v74;
      goto LABEL_20;
    }
    v34 = *(_QWORD *)(v71 + 16);
    if (v34)
    {
      v35 = 0;
      while ((*(_BYTE *)(v71 + v35 + 32) & 1) == 0)
      {
        if (v34 == ++v35)
          goto LABEL_14;
      }
      v56 = v6;
      swift_bridgeObjectRetain();
      v57 = v10;
      v58 = v11;
      if (!UIAccessibilityIsReduceMotionEnabled())
      {
        v83[0] = v56;
        v83[1] = v7;
        v83[2] = v8;
        v83[3] = v80;
        v82[0] = v88;
        v82[1] = v89;
        v82[2] = v90;
        v82[3] = v91;
        v81 = v76;
        sub_1BA8981AC((uint64_t)v83, a2, v82, (uint64_t)&v84, v71, &v81);
        sub_1BA657D64();
        v59 = (void *)sub_1BB87345C();
        v60 = swift_allocObject();
        v61 = v89;
        *(_OWORD *)(v60 + 48) = v88;
        *(_OWORD *)(v60 + 64) = v61;
        v62 = v91;
        *(_OWORD *)(v60 + 80) = v90;
        *(_OWORD *)(v60 + 96) = v62;
        v63 = v84;
        *(_OWORD *)(v60 + 136) = v85;
        v64 = *(_OWORD *)v87;
        *(_OWORD *)(v60 + 152) = v86;
        *(_OWORD *)(v60 + 168) = v64;
        *(_QWORD *)(v60 + 16) = v57;
        *(_QWORD *)(v60 + 24) = v77;
        *(_QWORD *)(v60 + 32) = v58;
        *(_QWORD *)(v60 + 40) = a2;
        *(_QWORD *)(v60 + 112) = v76;
        *(_QWORD *)(v60 + 184) = *(_QWORD *)&v87[16];
        *(_OWORD *)(v60 + 120) = v63;
        v65 = v74;
        v66 = v76;
        v78 = v57;
        v67 = v58;
        v68 = a2;
        sub_1BB86EA34();
        swift_release();
        swift_release();

        swift_release();
        swift_bridgeObjectRelease();

        goto LABEL_16;
      }
    }
    else
    {
LABEL_14:
      v36 = v6;
      swift_bridgeObjectRetain();
      v37 = v10;
      v38 = v11;
    }
    v39 = objc_msgSend(v10, sel_identifier);
    v40 = sub_1BB8729A0();
    v41 = v11;
    v43 = v42;

    v44 = v74;
    swift_retain();
    v45 = v76;
    v46 = v10;
    v47 = v45;
    v78 = v46;
    v48 = v41;
    sub_1BB42CC84(v40, v43, a2, v75, v47, (uint64_t)&v84, v78, v48, (uint64_t)&v88);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();

LABEL_16:
    v49 = v78;
LABEL_20:

  }
}

uint64_t sub_1BA8981AC(uint64_t a1, void *a2, __int128 *a3, uint64_t a4, uint64_t a5, void **a6)
{
  uint64_t v6;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _BYTE *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void (*v30)(_QWORD *, void *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  _QWORD v50[5];
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;

  v9 = *(void **)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v48 = *(_QWORD *)(a1 + 24);
  v12 = a3[1];
  v54 = *a3;
  v55 = v12;
  v13 = a3[3];
  v56 = a3[2];
  v57 = v13;
  v49 = *a6;
  sub_1BA4C010C(v6 + 144, (uint64_t)v51);
  v14 = v52;
  v15 = v53;
  __swift_project_boxed_opaque_existential_1(v51, v52);
  v46 = v9;
  v16 = objc_msgSend(v9, sel_identifier);
  v17 = sub_1BB8729A0();
  v19 = v18;

  v20 = type metadata accessor for LayeredMediaLoader();
  v21 = (_QWORD *)swift_allocObject();
  v22 = type metadata accessor for LayeredMediaParser();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v17;
  v23[3] = v19;
  v23[4] = v11;
  v23[5] = v48;
  v21[5] = v22;
  v21[6] = &protocol witness table for LayeredMediaParser;
  v21[2] = v23;
  v50[3] = v20;
  v50[4] = &protocol witness table for LayeredMediaLoader;
  v50[0] = v21;
  v24 = *(_QWORD *)(a5 + 16);
  if (v24)
  {
    v25 = (_BYTE *)(a5 + 32);
    v26 = &unk_1E724CD88;
    v27 = v47;
    v28 = v46;
    v29 = a2;
    while (*v25 == 1)
    {
      ++v25;
      if (!--v24)
      {
        v26 = (void *)MEMORY[0x1E0DEE9D8];
        break;
      }
    }
  }
  else
  {
    v26 = (void *)MEMORY[0x1E0DEE9D8];
    v27 = v47;
    v28 = v46;
    v29 = a2;
  }
  v30 = *(void (**)(_QWORD *, void *, uint64_t, uint64_t))(v15 + 8);
  swift_bridgeObjectRetain();
  v30(v50, v26, v14, v15);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  v31 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  MEMORY[0x1E0C80A78](v31);
  type metadata accessor for LayeredMediaView(0);
  sub_1BB86EC14();
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v29;
  *(_QWORD *)(v32 + 24) = v28;
  *(_QWORD *)(v32 + 32) = v10;
  *(_QWORD *)(v32 + 40) = v11;
  *(_QWORD *)(v32 + 48) = v48;
  *(_QWORD *)(v32 + 56) = v27;
  *(_QWORD *)(v32 + 64) = v49;
  v33 = v55;
  *(_OWORD *)(v32 + 72) = v54;
  *(_OWORD *)(v32 + 88) = v33;
  v34 = v57;
  *(_OWORD *)(v32 + 104) = v56;
  *(_OWORD *)(v32 + 120) = v34;
  v35 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(v32 + 136) = *(_OWORD *)a4;
  v36 = *(_OWORD *)(a4 + 32);
  v37 = *(_OWORD *)(a4 + 48);
  *(_QWORD *)(v32 + 200) = *(_QWORD *)(a4 + 64);
  *(_OWORD *)(v32 + 184) = v37;
  *(_OWORD *)(v32 + 168) = v36;
  *(_OWORD *)(v32 + 152) = v35;
  v38 = v29;
  v39 = v28;
  swift_bridgeObjectRetain();
  swift_retain();
  v40 = v49;
  sub_1BA745810((id *)a4);
  v41 = (void *)sub_1BB86E854();
  sub_1BB86E968();
  swift_release();
  swift_release();

  v42 = (void *)sub_1BB86E854();
  v43 = sub_1BB86E9A4();
  swift_release();
  swift_release();

  return v43;
}

void sub_1BA898514(int a1, _QWORD *a2, id a3, void *a4, _BYTE *a5, uint64_t a6, void *a7, id *a8)
{
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;

  v14 = objc_msgSend(a3, sel_identifier);
  v15 = sub_1BB8729A0();
  v17 = v16;

  swift_retain();
  v18 = a7;
  sub_1BA745810(a8);
  v19 = a3;
  v20 = a4;
  sub_1BB42CC84(v15, v17, a5, a2, v18, (uint64_t)a8, v19, v20, a6);

  sub_1BA8997B4(a8);
  swift_bridgeObjectRelease();
  swift_release();

}

uint64_t sub_1BA898624(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(void);
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = MEMORY[0x1E0DEAEC8];
  sub_1BA4AD288(0, &qword_1ED3D4438, (uint64_t)&type metadata for LayeredMediaLayer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB86EC14();
  swift_retain();
  v4 = (void *)sub_1BB86E854();
  sub_1BA4AD288(0, &qword_1ED39DA08, (uint64_t)&type metadata for LayeredMediaLayerRenderable, (uint64_t (*)(_QWORD, uint64_t))v3);
  sub_1BB86E974();
  swift_release();
  swift_release();

  v5 = (void *)sub_1BB86DE94();
  v6 = swift_allocObject();
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = v7;
  type metadata accessor for LayeredMediaView(0);
  swift_retain();
  v8 = sub_1BB86E974();
  swift_release();

  swift_release();
  return v8;
}

uint64_t sub_1BA89876C()
{
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

void sub_1BA8987F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, void *a11, uint64_t a12, id *a13)
{
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  id v25;

  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  swift_retain();
  v20 = objc_msgSend(a6, sel_identifier);
  v21 = sub_1BB8729A0();
  v23 = v22;

  swift_retain();
  v25 = a11;
  sub_1BA745810(a13);
  v24 = a5;
  swift_retain();
  swift_retain();
  sub_1BB42CD80(v21, v23, a9, v24, a10, v25, a12, (uint64_t)a13, v24, (uint64_t)sub_1BA4D7950, v19, a3, a4);

  swift_release();
  swift_release();
  sub_1BA8997B4(a13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

}

void sub_1BA898954(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  _QWORD *v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41[5];

  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 80));
  v41[0] = a3;
  sub_1BB82995C((uint64_t)a1, v41);
  objc_msgSend(a1, sel_setClipsToBounds_, 1);
  sub_1BB873594();
  objc_msgSend(a1, sel_setFrame_);
  v16 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v16, sel_setCornerCurve_, *(_QWORD *)a5);

  v17 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v17, sel_setCornerRadius_, *(double *)(a5 + 8));

  v18 = objc_msgSend(a1, sel_layer);
  v19 = v18;
  v20 = *(_QWORD *)(a5 + 56);
  if ((v20 & 1) != 0)
  {
    if ((v20 & 2) != 0)
    {
      v21 = 3;
      if ((v20 & 4) == 0)
        goto LABEL_8;
    }
    else
    {
      v21 = 1;
      if ((v20 & 4) == 0)
        goto LABEL_8;
    }
    goto LABEL_7;
  }
  if ((v20 & 2) == 0)
  {
    v21 = 0;
    if ((v20 & 4) == 0)
      goto LABEL_8;
LABEL_7:
    v21 |= 4uLL;
    goto LABEL_8;
  }
  v21 = 2;
  if ((v20 & 4) != 0)
    goto LABEL_7;
LABEL_8:
  if ((v20 & 8) != 0)
    v21 |= 8uLL;
  objc_msgSend(v18, sel_setMaskedCorners_, v21);

  v22 = (void *)objc_opt_self();
  v23 = objc_msgSend(v22, sel_mainScreen);
  objc_msgSend(v23, sel_nativeBounds);
  v25 = v24;
  v27 = v26;

  objc_msgSend(a6, sel_bounds);
  v29 = v28;
  v31 = v30;
  v32 = objc_msgSend(v22, sel_mainScreen);
  objc_msgSend(v32, sel_scale);
  v34 = v33;

  v41[0] = v25;
  v41[1] = v27;
  v41[2] = v29;
  v41[3] = v31;
  v41[4] = v34;
  v35 = objc_msgSend(a1, sel_setAlpha_, 0.0);
  MEMORY[0x1E0C80A78](v35);
  sub_1BB86EC14();
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = a1;
  v36[3] = a7;
  v36[4] = a8;
  v37 = a1;
  swift_retain();
  v38 = (void *)sub_1BB86E854();
  type metadata accessor for IssueCoverViewRenderer();
  sub_1BB86E98C();
  swift_release();
  swift_release();

  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = a9;
  *(_QWORD *)(v39 + 24) = a10;
  swift_retain();
  v40 = (void *)sub_1BB86E854();
  sub_1BB86E9A4();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1BA898CB4(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  __int128 v12;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1BB86F850();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1BA89993C(a1 + 16, (uint64_t)&v17);
  if (!v18)
  {
    sub_1BA8999A0((uint64_t)&v17);
    goto LABEL_7;
  }
  sub_1BA4CECCC(&v17, (uint64_t)&v19);
  v22 = v6;
  __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
  sub_1BB86F838();
  v10 = sub_1BB870894();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  if ((v10 & 1) != 0)
  {
LABEL_7:
    v15 = *(_OWORD *)(a3 + 16);
    v19 = *(_OWORD *)a3;
    v20 = v15;
    v21 = *(_QWORD *)(a3 + 32);
    return sub_1BA84B47C(a2, &v19);
  }
  if (qword_1ED39EA60 != -1)
    swift_once();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  v12 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v11 + 24) = *(_OWORD *)a3;
  *(_OWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 56) = *(_QWORD *)(a3 + 32);
  type metadata accessor for LayeredMediaViewRenderer();
  v13 = a2;
  v14 = sub_1BB86EC08();
  swift_release();
  return v14;
}

id sub_1BA898EC4(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD aBlock[3];
  void *v18;
  id (*v19)();
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v7 = sub_1BB86F850();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1BA89993C(a2 + 16, (uint64_t)&v21);
  if (v22)
  {
    sub_1BA4CECCC(&v21, (uint64_t)aBlock);
    v23 = v7;
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v18);
    sub_1BB86F844();
    v11 = sub_1BB870894();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    if ((v11 & 1) == 0)
      return objc_msgSend(a3, sel_setAlpha_, 1.0);
  }
  else
  {
    sub_1BA8999A0((uint64_t)&v21);
  }
  v13 = (void *)objc_opt_self();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  v19 = sub_1BA899A20;
  v20 = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  v18 = &block_descriptor_0;
  v15 = _Block_copy(aBlock);
  v16 = a3;
  swift_release();
  objc_msgSend(v13, sel_animateWithDuration_animations_, v15, 0.15);
  _Block_release(v15);
  return (id)a4();
}

uint64_t sub_1BA8990C8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ED39E0B0 != -1)
    swift_once();
  v0 = (id)qword_1ED4763D0;
  v1 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0xE000000000000000;
  sub_1BB86EF44("Failed to display cover with error %{public}@", 45, 2, &dword_1BA493000, v0, v1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA899214(void *a1, _QWORD *a2, void *a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  void *v14;
  id v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  void *v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39[3];
  uint64_t v40;
  unint64_t v41;

  __swift_project_boxed_opaque_existential_1(a2 + 7, a2[10]);
  v39[0] = a3;
  sub_1BB82972C(a1, v39, a4);
  v14 = (void *)objc_opt_self();
  v15 = a5;
  v16 = a6;
  v17 = objc_msgSend(v14, sel_mainScreen);
  objc_msgSend(v17, sel_scale);
  v19 = v18;

  v20 = *(double *)(a7 + 40);
  v21 = *(_QWORD *)(a7 + 48);
  v22 = v16;
  sub_1BB873594();
  v24 = v23;
  v26 = v25;
  if (v20 > 0.0)
    v27 = *(_QWORD *)&v20;
  else
    v27 = 0;
  if (v20 > 0.0)
    v28 = v21;
  else
    v28 = 0;
  v29 = type metadata accessor for IssueCoverImageProcessorRequest();
  v30 = swift_allocObject();
  v31 = (void *)sub_1BA8E9174(v22, v27, v28, v20 <= 0.0, v30, v24, v26, v19);

  __swift_project_boxed_opaque_existential_1(a2 + 12, a2[15]);
  v40 = v29;
  v32 = sub_1BA899AE8();
  v41 = v32;
  v39[0] = v31;
  swift_retain();
  v33 = (void *)sub_1BB86F904();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  if (v33)
  {
    v34 = v33;
    sub_1BB871710();

    return swift_release();
  }
  else
  {
    v40 = v29;
    v41 = v32;
    v39[0] = v31;
    v36 = swift_allocObject();
    swift_weakInit();
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v36;
    *(_QWORD *)(v37 + 24) = a1;
    swift_retain();
    swift_retain();
    v38 = a1;
    sub_1BB8716EC();
    swift_release();
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
}

uint64_t sub_1BA8994A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  _QWORD v8[4];

  v0 = sub_1BB86F850();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result + 16;
    swift_beginAccess();
    sub_1BA89993C(v5, (uint64_t)&v6);
    if (v7)
    {
      sub_1BA4CECCC(&v6, (uint64_t)v8);
      __swift_project_boxed_opaque_existential_1(v8, v8[3]);
      sub_1BB86F844();
      sub_1BB870894();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
    else
    {
      sub_1BA8999A0((uint64_t)&v6);
    }
    sub_1BB871704();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA899600()
{
  uint64_t v0;

  sub_1BA8999A0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1BA89964C(uint64_t a1, _BYTE *a2, __int128 *a3, uint64_t a4, void **a5)
{
  sub_1BA897AD0(a1, a2, a3, a4, a5);
}

uint64_t sub_1BA89966C()
{
  id *v0;

  return swift_deallocObject();
}

void sub_1BA8996B0(int a1, _QWORD *a2)
{
  uint64_t v2;

  sub_1BA898514(a1, a2, *(id *)(v2 + 16), *(void **)(v2 + 32), *(_BYTE **)(v2 + 40), v2 + 48, *(void **)(v2 + 112), (id *)(v2 + 120));
}

id sub_1BA8996DC(id result, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8)
{
  id v9;
  id v10;

  if (a8)
  {
    if (a8 != 1)
      return result;
    v9 = result;
    swift_bridgeObjectRetain();
  }
  else
  {
    a5 = result;
    a7 = a3;
  }
  v10 = a5;
  return a7;
}

void sub_1BA899748(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, void *a7, char a8)
{
  if (a8)
  {
    if (a8 != 1)
      return;

    swift_bridgeObjectRelease();
  }
  else
  {
    a5 = a1;
    a7 = a3;
  }

}

id *sub_1BA8997B4(id *a1)
{

  return a1;
}

uint64_t sub_1BA8997DC()
{
  uint64_t v0;

  return sub_1BA898624(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BA8997F4()
{
  id *v0;

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BA899840()
{
  return sub_1BA89876C();
}

void sub_1BA899878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1BA8987F8(a1, a2, a3, a4, *(void **)(v4 + 16), *(void **)(v4 + 24), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(void **)(v4 + 56), *(_QWORD *)(v4 + 64), *(void **)(v4 + 72), *(_QWORD *)(v4 + 80), *(id **)(v4 + 88));
}

uint64_t sub_1BA8998B4()
{
  uint64_t v0;

  return sub_1BA898CB4(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BA8998D0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

id sub_1BA8998FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BA898EC4(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(void))(v2 + 24));
}

uint64_t sub_1BA899918()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA89993C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, &qword_1ED3B0A00, (unint64_t *)&unk_1ED3B09F0, MEMORY[0x1E0DB9CB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA8999A0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, &qword_1ED3B0A00, (unint64_t *)&unk_1ED3B09F0, MEMORY[0x1E0DB9CB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BA8999FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BA899A20()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
}

uint64_t sub_1BA899A34()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BA899A58(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA84B430(a1, *(char **)(v1 + 16), v1 + 24);
}

uint64_t sub_1BA899A74()
{
  return sub_1BB14871C();
}

uint64_t sub_1BA899A8C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BB148768(a1, a2);
}

uint64_t sub_1BA899AA4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

char *sub_1BA899AD0@<X0>(uint64_t *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;

  return sub_1BB1487C8(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_1BA899AE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AC0F8;
  if (!qword_1ED3AC0F8)
  {
    v1 = type metadata accessor for IssueCoverImageProcessorRequest();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueCoverImageProcessorRequest, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AC0F8);
  }
  return result;
}

uint64_t sub_1BA899B30()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA899B54()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BA899B80()
{
  return sub_1BA8994A4();
}

void sub_1BA899B8C()
{
  char *v0;

  sub_1BA8D22F0(*v0);
}

void sub_1BA899B94()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA899BCC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BA899C20(uint64_t a1)
{
  char *v1;

  sub_1BAB0B620(a1, *v1);
}

uint64_t sub_1BA899C28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA89A388();
  *a1 = result;
  return result;
}

uint64_t sub_1BA899C54()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA899C80 + 4 * byte_1BB87EF44[*v0]))();
}

void sub_1BA899C80(_QWORD *a1@<X8>)
{
  *a1 = 0x65766F6D6572;
  a1[1] = 0xE600000000000000;
}

void sub_1BA899C98(_QWORD *a1@<X8>)
{
  *a1 = 1885956979;
  a1[1] = 0xE400000000000000;
}

void sub_1BA899CAC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001BB959B10;
}

void sub_1BA899CCC(char *a1)
{
  sub_1BB8052D0(*a1);
}

uint64_t sub_1BA899CD8()
{
  sub_1BA89A344();
  return sub_1BB872D60();
}

uint64_t sub_1BA899D34()
{
  sub_1BA89A344();
  return sub_1BB872D0C();
}

uint64_t FeedGroupEmitterRuleResult.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if (!*(_BYTE *)(v0 + 16))
  {
    v1 = 0x202C65766F6D6552;
    goto LABEL_5;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    v1 = 0x202C70696B53;
LABEL_5:
    v3 = v1;
    sub_1BB872AFC((_QWORD *)v1);
    return v3;
  }
  if (*(_OWORD *)v0 == 0)
    return 0x776F6C6C41;
  else
    return 0x746E552070696B53;
}

BOOL static FeedGroupEmitterRuleResult.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
LABEL_4:
    if (!*(_BYTE *)(a2 + 16))
      return v2 < v3;
    goto LABEL_9;
  }
  if ((_DWORD)v2 == 1)
  {
    v2 = 2;
    goto LABEL_4;
  }
  v2 = 3;
  if (*(_OWORD *)a1 != 0)
    v2 = 1;
  if (*(_BYTE *)(a2 + 16))
  {
LABEL_9:
    if ((_DWORD)v3 == 1)
    {
      v3 = 2;
    }
    else
    {
      v3 = 3;
      if (*(_OWORD *)a2 != 0)
        v3 = 1;
    }
  }
  return v2 < v3;
}

BOOL sub_1BA899EA4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
LABEL_4:
    if (!*(_BYTE *)(a2 + 16))
      return v2 < v3;
    goto LABEL_9;
  }
  if ((_DWORD)v2 == 1)
  {
    v2 = 2;
    goto LABEL_4;
  }
  v2 = 3;
  if (*(_OWORD *)a1 != 0)
    v2 = 1;
  if (*(_BYTE *)(a2 + 16))
  {
LABEL_9:
    if ((_DWORD)v3 == 1)
    {
      v3 = 2;
    }
    else
    {
      v3 = 3;
      if (*(_OWORD *)a2 != 0)
        v3 = 1;
    }
  }
  return v2 < v3;
}

BOOL sub_1BA899F0C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 16))
  {
LABEL_4:
    if (!*(_BYTE *)(a1 + 16))
      return v3 >= v2;
    goto LABEL_9;
  }
  if ((_DWORD)v3 == 1)
  {
    v3 = 2;
    goto LABEL_4;
  }
  v3 = 3;
  if (*(_OWORD *)a2 != 0)
    v3 = 1;
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_9:
    if ((_DWORD)v2 == 1)
    {
      v2 = 2;
    }
    else
    {
      v2 = 3;
      if (*(_OWORD *)a1 != 0)
        v2 = 1;
    }
  }
  return v3 >= v2;
}

BOOL sub_1BA899F74(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
LABEL_4:
    if (!*(_BYTE *)(a2 + 16))
      return v2 >= v3;
    goto LABEL_9;
  }
  if ((_DWORD)v2 == 1)
  {
    v2 = 2;
    goto LABEL_4;
  }
  v2 = 3;
  if (*(_OWORD *)a1 != 0)
    v2 = 1;
  if (*(_BYTE *)(a2 + 16))
  {
LABEL_9:
    if ((_DWORD)v3 == 1)
    {
      v3 = 2;
    }
    else
    {
      v3 = 3;
      if (*(_OWORD *)a2 != 0)
        v3 = 1;
    }
  }
  return v2 >= v3;
}

BOOL sub_1BA899FDC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a2 + 16))
  {
LABEL_4:
    if (!*(_BYTE *)(a1 + 16))
      return v3 < v2;
    goto LABEL_9;
  }
  if ((_DWORD)v3 == 1)
  {
    v3 = 2;
    goto LABEL_4;
  }
  v3 = 3;
  if (*(_OWORD *)a2 != 0)
    v3 = 1;
  if (*(_BYTE *)(a1 + 16))
  {
LABEL_9:
    if ((_DWORD)v2 == 1)
    {
      v2 = 2;
    }
    else
    {
      v2 = 3;
      if (*(_OWORD *)a1 != 0)
        v2 = 1;
    }
  }
  return v3 < v2;
}

void _s8NewsFeed0B22GroupEmitterRuleResultO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  char v1;

  if (*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a1 + 16) == 1)
    {
      v1 = 2;
    }
    else if (*(_OWORD *)a1 == 0)
    {
      v1 = 0;
    }
    else
    {
      v1 = 3;
    }
  }
  else
  {
    v1 = 1;
  }
  sub_1BB8052D0(v1);
}

unint64_t sub_1BA89A0B8()
{
  unint64_t result;

  result = qword_1EF2A96E0;
  if (!qword_1EF2A96E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitterRuleResult, &type metadata for FeedGroupEmitterRuleResult);
    atomic_store(result, (unint64_t *)&qword_1EF2A96E0);
  }
  return result;
}

uint64_t destroy for DebugFormatUploadEntryTarget(uint64_t a1)
{
  return sub_1BA5F1DE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed28DebugFormatUploadEntryTargetOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA5F1EC8(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugFormatUploadEntryTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA5F1EC8(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA5F1DE8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugFormatUploadEntryTarget(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA5F1DE8(v4, v5, v6);
  return a1;
}

uint64_t sub_1BA89A1F0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BA89A208(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupEmitterRuleResult()
{
  return &type metadata for FeedGroupEmitterRuleResult;
}

uint64_t storeEnumTagSinglePayload for FeedGroupEmitterRuleResult.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA89A27C + 4 * byte_1BB87EF4D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA89A2B0 + 4 * byte_1BB87EF48[v4]))();
}

uint64_t sub_1BA89A2B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA89A2B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA89A2C0);
  return result;
}

uint64_t sub_1BA89A2CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA89A2D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA89A2D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA89A2E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupEmitterRuleResult.Kind()
{
  return &type metadata for FeedGroupEmitterRuleResult.Kind;
}

unint64_t sub_1BA89A300()
{
  unint64_t result;

  result = qword_1EF2A96E8;
  if (!qword_1EF2A96E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87F024, &type metadata for FeedGroupEmitterRuleResult.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF2A96E8);
  }
  return result;
}

unint64_t sub_1BA89A344()
{
  unint64_t result;

  result = qword_1ED3A5150;
  if (!qword_1ED3A5150)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87F04C, &type metadata for FeedGroupEmitterRuleResult.Kind);
    atomic_store(result, (unint64_t *)&qword_1ED3A5150);
  }
  return result;
}

uint64_t sub_1BA89A388()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

NewsFeed::DebugFormatUploadTarget_optional __swiftcall DebugFormatUploadTarget.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::DebugFormatUploadTarget_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DebugFormatUploadTarget.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D6F6F727377656ELL;
  if (*v0 != 1)
    v1 = 1752461154;
  if (*v0)
    return v1;
  else
    return 0x7265536C61636F6CLL;
}

uint64_t sub_1BA89A484(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F7050(*a1, *a2);
}

uint64_t sub_1BA89A490()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA89A530()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA89A5AC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::DebugFormatUploadTarget_optional sub_1BA89A648(Swift::String *a1)
{
  return DebugFormatUploadTarget.init(rawValue:)(*a1);
}

void sub_1BA89A654(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB00000000726576;
  v4 = 0xE800000000000000;
  v5 = 0x6D6F6F727377656ELL;
  if (v2 != 1)
  {
    v5 = 1752461154;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7265536C61636F6CLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BA89A6B4()
{
  sub_1BA89A950();
  return sub_1BB872CDC();
}

uint64_t sub_1BA89A6F4()
{
  sub_1BA89A950();
  return sub_1BB872CD0();
}

uint64_t sub_1BA89A73C()
{
  sub_1BA89A950();
  return sub_1BB872CC4();
}

uint64_t DebugFormatUploadTarget.description.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6D6F6F727377654ELL;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x786F62706F7244;
}

unint64_t sub_1BA89A7E0()
{
  unint64_t result;

  result = qword_1EF2A96F0;
  if (!qword_1EF2A96F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugFormatUploadTarget, &type metadata for DebugFormatUploadTarget);
    atomic_store(result, (unint64_t *)&qword_1EF2A96F0);
  }
  return result;
}

uint64_t sub_1BA89A824()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6D6F6F727377654ELL;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x786F62706F7244;
}

uint64_t storeEnumTagSinglePayload for DebugFormatUploadTarget(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA89A8D0 + 4 * byte_1BB87F125[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA89A904 + 4 * byte_1BB87F120[v4]))();
}

uint64_t sub_1BA89A904(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA89A90C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA89A914);
  return result;
}

uint64_t sub_1BA89A920(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA89A928);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA89A92C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA89A934(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadTarget()
{
  return &type metadata for DebugFormatUploadTarget;
}

unint64_t sub_1BA89A950()
{
  unint64_t result;

  result = qword_1EF2BCF20;
  if (!qword_1EF2BCF20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugFormatUploadTarget, &type metadata for DebugFormatUploadTarget);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF20);
  }
  return result;
}

uint64_t DebugFormatBackendEnvironment.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E6967617453;
  if (*v0 != 1)
    v1 = 0x69746375646F7250;
  if (*v0)
    return v1;
  else
    return 16721;
}

uint64_t sub_1BA89A9E8@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - v10;
  if (!*v1)
  {
    sub_1BB86C634();
    v15 = sub_1BB86C67C();
    v16 = *(_QWORD *)(v15 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15);
    if ((_DWORD)result != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v11, v15);
    goto LABEL_11;
  }
  if (*v1 == 1)
  {
    sub_1BB86C634();
    v12 = sub_1BB86C67C();
    v13 = *(_QWORD *)(v12 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12);
    if ((_DWORD)result != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a1, v8, v12);
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1BB86C634();
  v17 = sub_1BB86C67C();
  v18 = *(_QWORD *)(v17 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v5, 1, v17);
  if ((_DWORD)result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a1, v5, v17);
}

NewsFeed::DebugFormatBackendEnvironment_optional __swiftcall DebugFormatBackendEnvironment.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::DebugFormatBackendEnvironment_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DebugFormatBackendEnvironment.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E6967617473;
  if (*v0 != 1)
    v1 = 0x69746375646F7270;
  if (*v0)
    return v1;
  else
    return 24945;
}

uint64_t sub_1BA89AC74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F109C(*a1, *a2);
}

unint64_t sub_1BA89AC84()
{
  unint64_t result;

  result = qword_1EF2A96F8;
  if (!qword_1EF2A96F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugFormatBackendEnvironment, &type metadata for DebugFormatBackendEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EF2A96F8);
  }
  return result;
}

uint64_t sub_1BA89ACC8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA89AD60()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA89ADD4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::DebugFormatBackendEnvironment_optional sub_1BA89AE68(Swift::String *a1)
{
  return DebugFormatBackendEnvironment.init(rawValue:)(*a1);
}

void sub_1BA89AE74(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE200000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x676E6967617473;
  if (v2 != 1)
  {
    v5 = 0x69746375646F7270;
    v4 = 0xEA00000000006E6FLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 24945;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BA89AECC()
{
  sub_1BA89B15C();
  return sub_1BB872D60();
}

uint64_t sub_1BA89AF28()
{
  sub_1BA89B15C();
  return sub_1BB872D0C();
}

uint64_t sub_1BA89AF74()
{
  sub_1BA89B15C();
  return sub_1BB872CDC();
}

uint64_t sub_1BA89AFB4()
{
  sub_1BA89B15C();
  return sub_1BB872CD0();
}

uint64_t sub_1BA89AFFC()
{
  sub_1BA89B15C();
  return sub_1BB872CC4();
}

uint64_t sub_1BA89B03C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E6967617453;
  if (*v0 != 1)
    v1 = 0x69746375646F7250;
  if (*v0)
    return v1;
  else
    return 16721;
}

uint64_t storeEnumTagSinglePayload for DebugFormatBackendEnvironment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA89B0DC + 4 * byte_1BB87F295[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA89B110 + 4 * byte_1BB87F290[v4]))();
}

uint64_t sub_1BA89B110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA89B118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA89B120);
  return result;
}

uint64_t sub_1BA89B12C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA89B134);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA89B138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA89B140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatBackendEnvironment()
{
  return &type metadata for DebugFormatBackendEnvironment;
}

unint64_t sub_1BA89B15C()
{
  unint64_t result;

  result = qword_1EF2A9700;
  if (!qword_1EF2A9700)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugFormatBackendEnvironment, &type metadata for DebugFormatBackendEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EF2A9700);
  }
  return result;
}

uint64_t FormatContentTheme.themes.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentTheme.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentTheme.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

_QWORD *FormatContentTheme.__allocating_init(themes:properties:selectors:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = *a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

_QWORD *FormatContentTheme.init(themes:properties:selectors:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = *a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t FormatContentTheme.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatContentTheme.init(from:)(a1);
  return v2;
}

_QWORD *FormatContentTheme.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v2 = v1;
  v38 = *v1;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3A0D40, (void (*)(uint64_t))sub_1BA6927D0);
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v34 - v5;
  sub_1BA4A3FB4(0, &qword_1ED3A2560, (void (*)(uint64_t))sub_1BA89B794);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - v7;
  sub_1BA89BB6C(0, &qword_1ED3A30F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA89B83C();
  v14 = v37;
  sub_1BB87468C();
  if (v14)
  {
    swift_deallocPartialClassInstance();
    v28 = (uint64_t)a1;
    goto LABEL_12;
  }
  v34 = v8;
  v35 = a1;
  v37 = v11;
  sub_1BA89B8C0(0, &qword_1ED3CF0D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileVersionURIReferenceCollection);
  v39 = 1;
  sub_1BA89B880(&qword_1ED3CF0D0, &qword_1ED3CF0D8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileVersionURIReferenceCollection, (uint64_t)&protocol conformance descriptor for FormatFileVersionURIReferenceCollection<A>);
  sub_1BB874068();
  v15 = v10;
  if (!v40)
    goto LABEL_6;
  if (!*(_QWORD *)(v40 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_6:
    sub_1BA89B940();
    v17 = (void *)swift_allocError();
    *v18 = 1;
    swift_willThrow();
    sub_1BA89B8C0(0, (unint64_t *)&qword_1ED3B8410, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    v39 = 0;
    sub_1BA89B880((unint64_t *)&unk_1ED3B8400, (unint64_t *)&qword_1ED3B8410, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection, (uint64_t)&protocol conformance descriptor for FormatFileReferenceCollection<A>);
    sub_1BB8740D4();

    v16 = v1;
    v1[2] = v40;
    goto LABEL_7;
  }
  v16 = v1;
  v1[2] = v40;
LABEL_7:
  sub_1BA89B794();
  v20 = v19;
  LOBYTE(v40) = 2;
  sub_1BA50AD30(&qword_1ED39EDD8, 255, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
  v21 = (uint64_t)v34;
  sub_1BB874068();
  v22 = v21;
  v23 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v20) == 1)
  {
    sub_1BA502AD0(v21, &qword_1ED3A2560, (void (*)(uint64_t))sub_1BA89B794);
    v24 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v24 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v20);
  }
  v16[3] = v24;
  sub_1BA6927D0();
  v26 = v25;
  LOBYTE(v40) = 3;
  sub_1BA50AD30(&qword_1ED3BBE20, 255, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
  v27 = (uint64_t)v36;
  sub_1BB874068();
  v30 = v13;
  v31 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v27, 1, v26) == 1)
  {
    sub_1BA502AD0(v27, (unint64_t *)&unk_1ED3A0D40, (void (*)(uint64_t))sub_1BA6927D0);
    v32 = MEMORY[0x1E0DEE9E8];
  }
  else
  {
    v32 = sub_1BB86DD08();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v27, v26);
  }
  v33 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v15);
  v2[4] = v32;
  v28 = v33;
LABEL_12:
  __swift_destroy_boxed_opaque_existential_1(v28);
  return v2;
}

void sub_1BA89B794()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39EDE0)
  {
    sub_1BA8350B4();
    sub_1BA89B7F8();
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39EDE0);
  }
}

unint64_t sub_1BA89B7F8()
{
  unint64_t result;

  result = qword_1ED3B4180;
  if (!qword_1ED3B4180)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProperty, &type metadata for FormatProperty);
    atomic_store(result, (unint64_t *)&qword_1ED3B4180);
  }
  return result;
}

unint64_t sub_1BA89B83C()
{
  unint64_t result;

  result = qword_1ED3A2A58;
  if (!qword_1ED3A2A58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87F654, &type metadata for FormatContentTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A58);
  }
  return result;
}

uint64_t sub_1BA89B880(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA89B8C0(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA89B8C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for FormatPackage();
    v7 = sub_1BA50AD30((unint64_t *)&unk_1ED3C69B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_1BA89B940()
{
  unint64_t result;

  result = qword_1ED3C2530;
  if (!qword_1ED3C2530)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentError, &type metadata for FormatContentError);
    atomic_store(result, (unint64_t *)&qword_1ED3C2530);
  }
  return result;
}

uint64_t FormatContentTheme.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  sub_1BA89BB6C(0, &qword_1EF2A9708, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA89B83C();
  sub_1BB8746C8();
  v12 = v3[2];
  HIBYTE(v11) = 0;
  sub_1BA89B8C0(0, (unint64_t *)&qword_1ED3B8410, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
  sub_1BA89B880(&qword_1ED39D440, (unint64_t *)&qword_1ED3B8410, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection, (uint64_t)&protocol conformance descriptor for FormatFileReferenceCollection<A>);
  sub_1BB8741AC();
  if (!v2)
  {
    if (*(_QWORD *)(v3[3] + 16))
    {
      v12 = v3[3];
      HIBYTE(v11) = 2;
      sub_1BA89BBC8();
      sub_1BA89BC1C();
      sub_1BB8741AC();
    }
    if (*(_QWORD *)(v3[4] + 16))
    {
      v12 = v3[4];
      HIBYTE(v11) = 3;
      sub_1BA6BCC84();
      sub_1BA89BC7C();
      sub_1BB8741AC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1BA89BB6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA89B83C();
    v7 = a3(a1, &type metadata for FormatContentTheme.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BA89BBC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9470)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9470);
  }
}

unint64_t sub_1BA89BC1C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39D9A0;
  if (!qword_1ED39D9A0)
  {
    sub_1BA89BBC8();
    v2 = v1;
    v3 = sub_1BA89B7F8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39D9A0);
  }
  return result;
}

unint64_t sub_1BA89BC7C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED39BFB0;
  if (!qword_1ED39BFB0)
  {
    sub_1BA6BCC84();
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED39BFB0);
  }
  return result;
}

void sub_1BA89BCD4(char *a1)
{
  sub_1BB7FF070(*a1);
}

void sub_1BA89BCE0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BA89BD28()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA89BDA0()
{
  __asm { BR              X10 }
}

uint64_t sub_1BA89BDD8()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BA89BE3C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BA89BE80()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA89BEF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA89C3E4();
  *a1 = result;
  return result;
}

uint64_t sub_1BA89BF24()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BA89BF50 + 4 * byte_1BB87F45C[*v0]))();
}

void sub_1BA89BF50(_QWORD *a1@<X8>)
{
  *a1 = 0x3273656D656874;
  a1[1] = 0xE700000000000000;
}

void sub_1BA89BF6C(_QWORD *a1@<X8>)
{
  *a1 = 0x69747265706F7270;
  a1[1] = 0xEA00000000007365;
}

void sub_1BA89BF8C(_QWORD *a1@<X8>)
{
  *a1 = 0x726F7463656C6573;
  a1[1] = 0xE900000000000073;
}

uint64_t sub_1BA89BFAC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA89BFD8 + 4 * byte_1BB87F460[*v0]))(0x73656D656874, 0xE600000000000000);
}

uint64_t sub_1BA89BFD8()
{
  return 0x3273656D656874;
}

uint64_t sub_1BA89BFF0()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BA89C00C()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA89C028@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA89C3E4();
  *a1 = result;
  return result;
}

uint64_t sub_1BA89C04C()
{
  sub_1BA89B83C();
  return sub_1BB874710();
}

uint64_t sub_1BA89C074()
{
  sub_1BA89B83C();
  return sub_1BB87471C();
}

uint64_t FormatContentTheme.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatContentTheme.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA89C0FC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1EF2A9710, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentTheme, (uint64_t)&protocol conformance descriptor for FormatContentTheme);
  a1[2] = sub_1BA50AD30(&qword_1EF2A9718, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentTheme, (uint64_t)&protocol conformance descriptor for FormatContentTheme);
  result = sub_1BA50AD30(&qword_1EF2A9720, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentTheme, (uint64_t)&protocol conformance descriptor for FormatContentTheme);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatContentTheme()
{
  return objc_opt_self();
}

_QWORD *sub_1BA89C194@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatContentTheme.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BA89C1E8(_QWORD *a1)
{
  return FormatContentTheme.encode(to:)(a1);
}

uint64_t sub_1BA89C208(_QWORD **a1, _QWORD **a2)
{
  return _s8NewsFeed18FormatContentThemeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t method lookup function for FormatContentTheme()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatContentTheme.__allocating_init(themes:properties:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of FormatContentTheme.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for FormatContentTheme.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA89C28C + 4 * byte_1BB87F469[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA89C2C0 + 4 * byte_1BB87F464[v4]))();
}

uint64_t sub_1BA89C2C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA89C2C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA89C2D0);
  return result;
}

uint64_t sub_1BA89C2DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA89C2E4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA89C2E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA89C2F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentTheme.CodingKeys()
{
  return &type metadata for FormatContentTheme.CodingKeys;
}

unint64_t sub_1BA89C310()
{
  unint64_t result;

  result = qword_1EF2A9728;
  if (!qword_1EF2A9728)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87F62C, &type metadata for FormatContentTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9728);
  }
  return result;
}

unint64_t sub_1BA89C358()
{
  unint64_t result;

  result = qword_1ED3A0EA0;
  if (!qword_1ED3A0EA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87F564, &type metadata for FormatContentTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A0EA0);
  }
  return result;
}

unint64_t sub_1BA89C3A0()
{
  unint64_t result;

  result = qword_1ED3A2A60;
  if (!qword_1ED3A2A60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87F58C, &type metadata for FormatContentTheme.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A60);
  }
  return result;
}

uint64_t sub_1BA89C3E4()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

void SportsEmbedConfigurationKind.leagueTag.getter(uint64_t a1)
{
  __asm { BR              X10 }
}

id sub_1BA89C45C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 48), sel_eventLeagueTag);
}

void sub_1BA89C564()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C48A0)
  {
    sub_1BA89C5C4();
    sub_1BA89C618();
    v0 = sub_1BB86EC80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C48A0);
  }
}

void sub_1BA89C5C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CF830)
  {
    type metadata accessor for SportsBracketDataVisualization();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CF830);
  }
}

unint64_t sub_1BA89C618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CF840;
  if (!qword_1ED3CF840)
  {
    sub_1BA89C5C4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CF840);
  }
  return result;
}

uint64_t SportsEmbedConfigurationKind.championshipTag.getter(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  if (a1 >> 61 != 1)
    return 0;
  sub_1BA89C564();
  swift_retain();
  sub_1BB86EC68();
  v1 = *(_QWORD *)(v3 + 64);
  swift_unknownObjectRetain();
  swift_release();
  swift_release();
  return v1;
}

unint64_t SportsEmbedConfigurationKind.responseEmbedType.getter@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = 0x20605070304uLL >> ((result >> 58) & 0x38);
  return result;
}

void SportsEmbedConfigurationKind.umcCanonicalId.getter(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BA89C740(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BA89C76C()
{
  swift_retain();
  SportsBracketGroupDataVisualization.umcCanonicalId.getter();
  swift_release();
  JUMPOUT(0x1BA89C754);
}

uint64_t SportsEmbedConfigurationKind.description.getter(unint64_t a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA89C7C8 + 4 * byte_1BB87F6B7[a1 >> 61]))(0x726F635320786F42, 0xE900000000000065);
}

uint64_t sub_1BA89C7C8()
{
  return 0x74656B63617242;
}

uint64_t sub_1BA89C7E0()
{
  return 0x79616C502079654BLL;
}

uint64_t sub_1BA89C800()
{
  return 0x6F635320656E694CLL;
}

uint64_t sub_1BA89C81C()
{
  return 0x52207972756A6E49;
}

uint64_t sub_1BA89C840()
{
  return 0x676E69646E617453;
}

uint64_t sub_1BA89C858()
{
  return 0x65726F6353;
}

uint64_t sub_1BA89C86C()
{
  _QWORD *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA89C8A4 + 4 * byte_1BB87F6BE[*v0 >> 61]))(0x726F635320786F42, 0xE900000000000065);
}

uint64_t sub_1BA89C8A4()
{
  return 0x74656B63617242;
}

uint64_t sub_1BA89C8BC()
{
  return 0x79616C502079654BLL;
}

uint64_t sub_1BA89C8DC()
{
  return 0x6F635320656E694CLL;
}

uint64_t sub_1BA89C8F8()
{
  return 0x52207972756A6E49;
}

uint64_t sub_1BA89C91C()
{
  return 0x676E69646E617453;
}

uint64_t sub_1BA89C934()
{
  return 0x65726F6353;
}

_QWORD *assignWithCopy for FormatColorNotExpression(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for FormatColorNotExpression(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1BA89C9BC(_QWORD *a1)
{
  return *a1 >> 61;
}

_QWORD *sub_1BA89C9C8(_QWORD *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigurationKind()
{
  return &type metadata for SportsEmbedConfigurationKind;
}

uint64_t static FormatCodingFalseStrategy.defaultValue.getter()
{
  return 0;
}

uint64_t static FormatCodingFalseStrategy.shouldEncode(wrappedValue:)(char a1)
{
  return a1 & 1;
}

uint64_t static FormatCodingTrueStrategy.defaultValue.getter()
{
  return 1;
}

BOOL static FormatCodingTrueStrategy.shouldEncode(wrappedValue:)(char a1)
{
  return (a1 & 1) == 0;
}

ValueMetadata *type metadata accessor for FormatCodingFalseStrategy()
{
  return &type metadata for FormatCodingFalseStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingTrueStrategy()
{
  return &type metadata for FormatCodingTrueStrategy;
}

uint64_t FormatSnippet.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSnippet.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatSnippet.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA89CB48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA89CC78(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 48) = v3;
  *(_QWORD *)(v4 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.description.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA89CD94(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 64) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.children.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA89CEA4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 72) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.options.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.options.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA89CFB4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.types.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA89D0C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 88) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSnippet.types.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSnippet.types.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSnippet.__allocating_init(identifier:name:description:children:options:selectors:types:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;

  v17 = swift_allocObject();
  FormatSnippet.init(identifier:name:description:children:options:selectors:types:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

uint64_t FormatSnippet.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSnippet.__deallocating_deinit()
{
  FormatSnippet.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA89D2B0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA89D3D4(&qword_1ED3D0280, (uint64_t)&protocol conformance descriptor for FormatSnippet);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA89D2E4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BA89D330()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA89D370(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA89D3D4(&qword_1ED3BCD90, (uint64_t)&protocol conformance descriptor for FormatSnippet);
  a1[2] = sub_1BA89D3D4(&qword_1ED3BCD88, (uint64_t)&protocol conformance descriptor for FormatSnippet);
  result = sub_1BA89D3D4((unint64_t *)&unk_1ED3D0270, (uint64_t)&protocol conformance descriptor for FormatSnippet);
  a1[3] = result;
  return result;
}

uint64_t sub_1BA89D3D4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatSnippet();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA89D410(_QWORD **a1, _QWORD **a2)
{
  return _s8NewsFeed13FormatSnippetC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BA89D41C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA89D468@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 56);
  *a2 = *(_QWORD *)(v3 + 48);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA89D4B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA89D500@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA89D54C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA89D598@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSnippet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatSnippet.__allocating_init(identifier:name:description:children:options:selectors:types:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1BA89D600()
{
  uint64_t v0;
  _BYTE v1[48];

  sub_1BA4FDEAC(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1BA89D654()
{
  uint64_t v0;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v2);
  return v0 - 6;
}

void sub_1BA89D774()
{
  JUMPOUT(0x1BA89D764);
}

unint64_t sub_1BA89D7DC()
{
  unint64_t result;

  result = qword_1ED3ABB20;
  if (!qword_1ED3ABB20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystemKind, &type metadata for FormatGroupColumnSystemKind);
    atomic_store(result, (unint64_t *)&qword_1ED3ABB20);
  }
  return result;
}

unint64_t sub_1BA89D820()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2A9730;
  if (!qword_1EF2A9730)
  {
    type metadata accessor for UIUserInterfaceIdiom(255);
    result = MEMORY[0x1BCCE5B24](&unk_1BB87BE18, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9730);
  }
  return result;
}

uint64_t sub_1BA89D868(uint64_t a1)
{
  destroy for GroupLayoutFactoryError(a1);
  return a1;
}

uint64_t assignWithCopy for GroupLayoutFactoryError(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  void *v9;
  id v10;
  char v11;
  char v12;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 0xD)
      v4 = *(_DWORD *)a1 + 13;
    switch(v4)
    {
      case 0u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 1u:

        break;
      case 6u:
      case 7u:
        swift_bridgeObjectRelease();
        goto LABEL_6;
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
LABEL_6:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 0xD)
      v5 = *(_DWORD *)a2 + 13;
    switch(v5)
    {
      case 0u:
        v6 = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 24) = v6;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
        *(_BYTE *)(a1 + 40) = 0;
        return a1;
      case 1u:
        v9 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_BYTE *)(a1 + 40) = 1;
        v10 = v9;
        return a1;
      case 2u:
        *(_OWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 40) = 2;
        return a1;
      case 3u:
        *(_OWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 40) = 3;
        return a1;
      case 4u:
        *(_OWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 40) = 4;
        return a1;
      case 5u:
        *(_OWORD *)a1 = *a2;
        *(_BYTE *)(a1 + 40) = 5;
        return a1;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
        v11 = 6;
        goto LABEL_21;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
        v11 = 7;
LABEL_21:
        *(_BYTE *)(a1 + 40) = v11;
        swift_bridgeObjectRetain();
        goto LABEL_28;
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v12 = 8;
        goto LABEL_27;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v12 = 9;
        goto LABEL_27;
      case 0xAu:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v12 = 10;
        goto LABEL_27;
      case 0xBu:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v12 = 11;
        goto LABEL_27;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
        v12 = 12;
LABEL_27:
        *(_BYTE *)(a1 + 40) = v12;
LABEL_28:
        swift_bridgeObjectRetain();
        break;
      default:
        v7 = *a2;
        v8 = a2[1];
        *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for GroupLayoutFactoryError(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  char v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 0xD)
      v4 = *(_DWORD *)a1 + 13;
    switch(v4)
    {
      case 0u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 1u:

        break;
      case 6u:
      case 7u:
        swift_bridgeObjectRelease();
        goto LABEL_6;
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
LABEL_6:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 0xD)
      v5 = *(_DWORD *)a2 + 13;
    switch(v5)
    {
      case 0u:
        v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = 0;
        return a1;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = 1;
        goto LABEL_26;
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 2;
        goto LABEL_26;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 3;
        goto LABEL_26;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 4;
        goto LABEL_26;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 5;
        goto LABEL_26;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v8 = 6;
        goto LABEL_26;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v8 = 7;
        goto LABEL_26;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 8;
        goto LABEL_26;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 9;
        goto LABEL_26;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 10;
        goto LABEL_26;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 11;
        goto LABEL_26;
      case 0xCu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v8 = 12;
LABEL_26:
        *(_BYTE *)(a1 + 40) = v8;
        break;
      default:
        v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLayoutFactoryError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xF3 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 243);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 0xE)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for GroupLayoutFactoryError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF2)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 243;
    if (a3 >= 0xF3)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xF3)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BA89DD20(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 0xD)
    return (*(_DWORD *)a1 + 13);
  return result;
}

uint64_t sub_1BA89DD3C(uint64_t result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 13;
    LOBYTE(a2) = 13;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutFactoryError()
{
  return &type metadata for GroupLayoutFactoryError;
}

unint64_t sub_1BA89DD74(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA7E415C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA89DD98()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void sub_1BA89DDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BA89DE08(a4);
}

id sub_1BA89DDE0()
{
  return objc_msgSend((id)objc_opt_self(), sel_isInternalBuild);
}

void sub_1BA89DE08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;

  v3 = v1[5];
  v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(a1, v3, v4);
  if (v5)
  {
    v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                               + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), sel_JSONString));
    sub_1BB8729A0();

  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_generalPasteboard);
  v8 = (id)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setString_, v8);
  swift_release();

}

ValueMetadata *type metadata accessor for FormatHeadlineBinding()
{
  return &type metadata for FormatHeadlineBinding;
}

uint64_t sub_1BA89DF1C(uint64_t a1, void (*a2)(_QWORD *, _QWORD, uint64_t, _QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  __int128 v67;
  _QWORD *v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  _QWORD *v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  __int128 v85;
  _QWORD *v86;
  uint64_t result;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  void (*v93)(_QWORD *, _QWORD, uint64_t, _QWORD *);
  _QWORD *v94;
  uint64_t v95;
  _QWORD v96[4];
  _QWORD v97[4];
  _QWORD v98[4];
  _QWORD v99[4];
  _QWORD v100[3];
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _OWORD v106[2];
  uint64_t v107;
  _OWORD v108[2];
  uint64_t v109;
  _OWORD v110[2];
  uint64_t v111;
  _OWORD v112[2];
  uint64_t v113;
  _OWORD v114[2];
  uint64_t v115;
  _OWORD v116[2];
  uint64_t v117;
  _OWORD v118[2];
  uint64_t v119;
  _OWORD v120[2];
  uint64_t v121;
  _OWORD v122[2];
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9750, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v95 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v89 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v88 - v7);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FAA0;
  v100[2] = a2;
  v10 = sub_1BA89F4C0((void (*)(char *))sub_1BA89EA74, (uint64_t)v100, (uint64_t)&unk_1E724CFA8, (uint64_t)&v105);
  sub_1BAF89090(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v10, v106);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v11 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v11;
  v90 = inited + 32;
  *(_QWORD *)(v11 + 48) = v107;
  v12 = v106[1];
  *(_OWORD *)(v11 + 16) = v106[0];
  *(_OWORD *)(v11 + 32) = v12;
  v99[2] = a2;
  v13 = sub_1BA89F4C0((void (*)(char *))sub_1BA89EAC4, (uint64_t)v99, (uint64_t)&unk_1E724CFE0, (uint64_t)&v104);
  sub_1BAF89090(0x726F6C6F43, 0xE500000000000000, 0, 0, v13, v108);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v14 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(v14 + 48) = v109;
  v15 = v108[1];
  *(_OWORD *)(v14 + 16) = v108[0];
  *(_OWORD *)(v14 + 32) = v15;
  v98[2] = a2;
  v98[3] = a1;
  v16 = sub_1BB141008((void (*)(_QWORD))sub_1BA89EAE0, (uint64_t)v98, (uint64_t)&unk_1E724D008);
  sub_1BAF89090(0x646E616D6D6F43, 0xE700000000000000, 0, 0, v16, v110);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v17 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v17;
  *(_QWORD *)(v17 + 48) = v111;
  v18 = v110[1];
  *(_OWORD *)(v17 + 16) = v110[0];
  *(_OWORD *)(v17 + 32) = v18;
  v97[2] = a2;
  v97[3] = a1;
  v19 = sub_1BA89F4C0((void (*)(char *))sub_1BA89EAF8, (uint64_t)v97, (uint64_t)&unk_1E724D0A0, (uint64_t)&v103);
  sub_1BAF89090(1953394502, 0xE400000000000000, 0, 0, v19, v112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 176) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 184) = &off_1E72D2F60;
  v20 = swift_allocObject();
  *(_QWORD *)(inited + 152) = v20;
  *(_QWORD *)(v20 + 48) = v113;
  v21 = v112[1];
  *(_OWORD *)(v20 + 16) = v112[0];
  *(_OWORD *)(v20 + 32) = v21;
  v93 = a2;
  v96[2] = a2;
  v22 = sub_1BA89F4EC((void (*)(char *))sub_1BA89EB14, (uint64_t)v96, (uint64_t)&unk_1E724D0C8);
  sub_1BAF89090(0x74616F6C46, 0xE500000000000000, 0, 0, v22, v114);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 216) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 224) = &off_1E72D2F60;
  v23 = swift_allocObject();
  *(_QWORD *)(inited + 192) = v23;
  *(_QWORD *)(v23 + 48) = v115;
  v24 = v114[1];
  *(_OWORD *)(v23 + 16) = v114[0];
  *(_OWORD *)(v23 + 32) = v24;
  *(_QWORD *)&v124 = MEMORY[0x1E0DEE9D8];
  v25 = 20;
  v26 = &byte_1E724D060;
  v27 = (uint64_t)v93;
  do
  {
    v28 = *v26++;
    LOBYTE(v120[0]) = v28;
    sub_1BB5C29D0((uint64_t)v120);
    sub_1BB383BA8(*(uint64_t *)&v122[0]);
    --v25;
  }
  while (v25);
  v29 = sub_1BA97461C(v124);
  swift_bridgeObjectRelease();
  sub_1BAF89090(1954047316, 0xE400000000000000, 0, 0, v29, v116);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 256) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 264) = &off_1E72D2F60;
  v30 = swift_allocObject();
  *(_QWORD *)(inited + 232) = v30;
  *(_QWORD *)(v30 + 48) = v117;
  v31 = v116[1];
  *(_OWORD *)(v30 + 16) = v116[0];
  *(_OWORD *)(v30 + 32) = v31;
  MEMORY[0x1E0C80A78](v30);
  *(&v88 - 2) = (_QWORD *)v27;
  v32 = sub_1BA89F4C0((void (*)(char *))sub_1BA89EB30, (uint64_t)(&v88 - 4), (uint64_t)&unk_1E724D078, (uint64_t)&v102);
  sub_1BAF89090(5001813, 0xE300000000000000, 0, 0, v32, v118);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 296) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 304) = &off_1E72D2F60;
  v33 = swift_allocObject();
  *(_QWORD *)(inited + 272) = v33;
  *(_QWORD *)(v33 + 48) = v119;
  v34 = v118[1];
  *(_OWORD *)(v33 + 16) = v118[0];
  *(_OWORD *)(v33 + 32) = v34;
  sub_1BA849824(v27, (uint64_t)v120);
  *(_QWORD *)(inited + 336) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 344) = &off_1E72D2F60;
  v35 = swift_allocObject();
  v91 = (_QWORD *)inited;
  *(_QWORD *)(inited + 312) = v35;
  *(_QWORD *)(v35 + 48) = v121;
  v36 = v120[1];
  *(_OWORD *)(v35 + 16) = v120[0];
  *(_OWORD *)(v35 + 32) = v36;
  v92 = (_QWORD *)type metadata accessor for FeedHeadline(0);
  *((_QWORD *)&v125 + 1) = v92;
  v126 = sub_1BA4A2870(&qword_1ED3B2D40, type metadata accessor for FeedHeadline, (uint64_t)&protocol conformance descriptor for FeedHeadline);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v124);
  sub_1BA76C878(v27, (uint64_t)boxed_opaque_existential_0);
  sub_1BA7592C4(&v124, (uint64_t *)v122);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
  v38 = *(_QWORD *)&v122[0];
  *(_QWORD *)&v122[0] = MEMORY[0x1E0DEE9D8];
  sub_1BAC79E1C(0, 0, 0);
  v39 = *(_QWORD *)&v122[0];
  if (v38)
  {
    v94 = v8 + 2;
    while (1)
    {
      *(_QWORD *)&v124 = 91;
      *((_QWORD *)&v124 + 1) = 0xE100000000000000;
      v101 = (_QWORD *)(v38 & -v38);
      v101 = sub_1BA78E0E8();
      sub_1BA6D249C();
      sub_1BA4A2870((unint64_t *)&qword_1ED3B95D0, (uint64_t (*)(uint64_t))sub_1BA6D249C, MEMORY[0x1E0DEAF20]);
      sub_1BB872904();
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v40);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v41);
      v42 = sub_1BA9C0430(1uLL, v124, *((unint64_t *)&v124 + 1));
      v44 = v43;
      swift_bridgeObjectRelease();
      if (__OFSUB__(sub_1BB873A44(), 1))
        break;
      v45 = sub_1BB873A38();
      if ((v46 & 1) != 0)
        v47 = v44;
      else
        v47 = v45;
      if (v47 >> 14 < v42 >> 14)
        goto LABEL_22;
      v48 = sub_1BB873A68();
      v50 = v49;
      v52 = v51;
      v54 = v53;
      swift_bridgeObjectRelease();
      v55 = MEMORY[0x1BCCE334C](v48, v50, v52, v54);
      v57 = v56;
      swift_bridgeObjectRelease();
      v58 = type metadata accessor for FormatInspectionItem(0);
      v59 = (uint64_t *)((char *)v8 + *(int *)(v58 + 24));
      *v59 = 0;
      v59[1] = 0xE000000000000000;
      v60 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 0, 1, v60);
      *v8 = v55;
      v8[1] = v57;
      v61 = v94;
      *v94 = 0;
      v61[1] = 0;
      v62 = (char *)v8 + *(int *)(v58 + 28);
      *(_QWORD *)v62 = 0;
      *((_QWORD *)v62 + 1) = 0;
      v62[16] = -1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v8, 0, 1, v58);
      *(_QWORD *)&v122[0] = v39;
      v64 = *(_QWORD *)(v39 + 16);
      v63 = *(_QWORD *)(v39 + 24);
      if (v64 >= v63 >> 1)
      {
        sub_1BAC79E1C(v63 > 1, v64 + 1, 1);
        v39 = *(_QWORD *)&v122[0];
      }
      v38 ^= v38 & -v38;
      *(_QWORD *)(v39 + 16) = v64 + 1;
      sub_1BA89EB4C((uint64_t)v8, v39+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(_QWORD *)(v95 + 72) * v64);
      if (!v38)
        goto LABEL_13;
    }
    __break(1u);
LABEL_22:
    __break(1u);
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
LABEL_13:
    sub_1BAF89090(0x737469617254, 0xE600000000000000, 0, 0, v39, v122);
    swift_release();
    v65 = v91;
    v91[47] = &type metadata for FormatInspectionGroup;
    v65[48] = &off_1E72D2F60;
    v66 = swift_allocObject();
    v65[44] = v66;
    *(_QWORD *)(v66 + 48) = v123;
    v67 = v122[1];
    *(_OWORD *)(v66 + 16) = v122[0];
    *(_OWORD *)(v66 + 32) = v67;
    v68 = FeedHeadline.State.selectors.getter();
    v69 = v68[2];
    if (v69)
    {
      *(_QWORD *)&v124 = MEMORY[0x1E0DEE9D8];
      sub_1BAC79E1C(0, v69, 0);
      v70 = v124;
      v71 = type metadata accessor for FormatInspectionItem(0);
      v72 = type metadata accessor for FormatInspectionItem.Value(0);
      v93 = *(void (**)(_QWORD *, _QWORD, uint64_t, _QWORD *))(*(_QWORD *)(v72 - 8) + 56);
      v94 = (_QWORD *)v72;
      v73 = v89;
      v92 = v89 + 16;
      v88 = v68;
      v74 = v68 + 5;
      do
      {
        v75 = *(v74 - 1);
        v76 = *v74;
        v77 = (_QWORD *)((char *)v73 + *(int *)(v71 + 24));
        *v77 = 0;
        v77[1] = 0xE000000000000000;
        v78 = v94;
        swift_storeEnumTagMultiPayload();
        v93(v77, 0, 1, v78);
        *v73 = v75;
        v73[1] = v76;
        v79 = v92;
        *v92 = 0;
        v79[1] = 0;
        v80 = (char *)v73 + *(int *)(v71 + 28);
        *(_QWORD *)v80 = 0;
        *((_QWORD *)v80 + 1) = 0;
        v80[16] = -1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v73, 0, 1, v71);
        *(_QWORD *)&v124 = v70;
        v81 = (uint64_t)v73;
        v82 = *(_QWORD *)(v70 + 16);
        v83 = *(_QWORD *)(v70 + 24);
        swift_bridgeObjectRetain();
        if (v82 >= v83 >> 1)
        {
          sub_1BAC79E1C(v83 > 1, v82 + 1, 1);
          v70 = v124;
        }
        v74 += 2;
        *(_QWORD *)(v70 + 16) = v82 + 1;
        sub_1BA89EB4C(v81, v70+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(_QWORD *)(v95 + 72) * v82);
        --v69;
        v73 = (_QWORD *)v81;
      }
      while (v69);
      swift_bridgeObjectRelease();
      v65 = v91;
    }
    else
    {
      swift_bridgeObjectRelease();
      v70 = MEMORY[0x1E0DEE9D8];
    }
    sub_1BAF89090(0x6553206574617453, 0xEF73726F7463656CLL, 0, 0, v70, &v124);
    swift_bridgeObjectRelease();
    v65[52] = &type metadata for FormatInspectionGroup;
    v65[53] = &off_1E72D2F60;
    v84 = swift_allocObject();
    v65[49] = v84;
    *(_QWORD *)(v84 + 48) = v126;
    v85 = v125;
    *(_OWORD *)(v84 + 16) = v124;
    *(_OWORD *)(v84 + 32) = v85;
    v86 = sub_1BB6DF010((uint64_t)v65);
    swift_setDeallocating();
    sub_1BA89EA04(0);
    swift_arrayDestroy();
    return (uint64_t)v86;
  }
  return result;
}

void sub_1BA89EA04(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2ABC80, (uint64_t (*)(uint64_t))sub_1BA89EA20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BA89EA20()
{
  unint64_t result;

  result = qword_1EF2A9760;
  if (!qword_1EF2A9760)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2A9760);
  }
  return result;
}

void sub_1BA89EA74(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BB7C65E0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BA89EA90()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BA89EAC4(uint64_t a1)
{
  sub_1BAAC46FC(a1);
}

uint64_t sub_1BA89EAE0@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB40FC6C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BA89EAF8@<X0>(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB738EA4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BA89EB14@<X0>(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB446734(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1BA89EB30(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BB2CB88C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BA89EB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9750, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA89EBA8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F8CC0(*a1, *a2);
}

unint64_t sub_1BA89EBB8()
{
  unint64_t result;

  result = qword_1EF2A9738;
  if (!qword_1EF2A9738)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlendMode, &type metadata for FormatBlendMode);
    atomic_store(result, (unint64_t *)&qword_1EF2A9738);
  }
  return result;
}

uint64_t sub_1BA89EBFC()
{
  sub_1BB8745CC();
  FormatBlendMode.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA89EC60()
{
  FormatBlendMode.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA89ECB0()
{
  sub_1BB8745CC();
  FormatBlendMode.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA89ED10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatBlendMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1BA89ED34(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA89ED60();
  result = sub_1BA4BC204();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA89ED60()
{
  unint64_t result;

  result = qword_1EF2A9740;
  if (!qword_1EF2A9740)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlendMode, &type metadata for FormatBlendMode);
    atomic_store(result, (unint64_t *)&qword_1EF2A9740);
  }
  return result;
}

unint64_t sub_1BA89EDA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA89EDC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA89EDC8()
{
  unint64_t result;

  result = qword_1EF2A9748;
  if (!qword_1EF2A9748)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlendMode, &type metadata for FormatBlendMode);
    atomic_store(result, (unint64_t *)&qword_1EF2A9748);
  }
  return result;
}

unint64_t sub_1BA89EE0C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA534708();
  a1[2] = sub_1BA5516DC();
  result = sub_1BA89EBB8();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatBlendMode()
{
  return &type metadata for FormatBlendMode;
}

uint64_t sub_1BA89EE50()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1BA89EE58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = swift_bridgeObjectRetain() + 56;
    v5 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v25 = v3;
      v6 = *(_QWORD *)(v4 + 40);
      v26 = *(_QWORD *)(v4 + 32);
      sub_1BA6D78DC();
      sub_1BA6D78DC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v7 = sub_1BB4A4184(v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BA6D74C4(v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = sub_1BB4A4338(v26);
      v28 = v2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7F4208();
      v8 = *(_QWORD *)(v27 + 16);
      v9 = *(_QWORD *)(v5 + 16);
      v10 = v9 + v8;
      if (__OFADD__(v9, v8))
        break;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
      {
        if (v9 <= v10)
          v12 = v9 + v8;
        else
          v12 = v9;
        v5 = sub_1BA6C1FFC(isUniquelyReferenced_nonNull_native, v12, 1, v5);
      }
      if (*(_QWORD *)(v27 + 16))
      {
        v13 = *(_QWORD *)(v5 + 16);
        v14 = (*(_QWORD *)(v5 + 24) >> 1) - v13;
        v15 = type metadata accessor for FormatWebEmbed.Resolved();
        if (v14 < v8)
          goto LABEL_24;
        v16 = *(_QWORD *)(v15 - 8);
        v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
        v18 = *(_QWORD *)(v16 + 72);
        v19 = v5 + v17 + v18 * v13;
        v20 = v18 * v8;
        if (v27 + v17 < v19 + v20 && v19 < v27 + v17 + v20)
          goto LABEL_26;
        swift_arrayInitWithCopy();
        if (v8)
        {
          v21 = *(_QWORD *)(v5 + 16);
          v22 = __OFADD__(v21, v8);
          v23 = v21 + v8;
          if (v22)
            goto LABEL_25;
          *(_QWORD *)(v5 + 16) = v23;
        }
      }
      else if (v8)
      {
        goto LABEL_23;
      }
      v4 += 80;
      swift_bridgeObjectRelease();
      --v3;
      v2 = v28;
      if (v25 == 1)
      {
        swift_bridgeObjectRelease();
        return v5;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    result = sub_1BB873F84();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1BA89F20C(void (*a1)(uint64_t *__return_ptr, unint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BA7444AC(0, v5, 0);
    v6 = v19;
    v9 = (unint64_t *)(a3 + 32);
    while (1)
    {
      v11 = *v9++;
      v10 = v11;
      v17 = v11;
      sub_1BA74444C(v11);
      a1(&v18, &v17, &v16);
      if (v4)
        break;
      v4 = 0;
      sub_1BA74447C(v10);
      v12 = v18;
      v19 = v6;
      v14 = *(_QWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BA7444AC(v13 > 1, v14 + 1, 1);
        v6 = v19;
      }
      *(_QWORD *)(v6 + 16) = v14 + 1;
      *(_QWORD *)(v6 + 8 * v14 + 32) = v12;
      if (!--v5)
        return v6;
    }
    sub_1BA74447C(v10);
    swift_release();
  }
  return v6;
}

uint64_t sub_1BA89F330(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *i;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  void (*v19)(_QWORD *);
  uint64_t v20;
  _QWORD v21[3];
  uint64_t v22;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for FormatSection();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79EA8(0, v10, 0);
    v11 = v22;
    for (i = (uint64_t *)(a3 + 48); ; i += 3)
    {
      v13 = *(i - 1);
      v14 = *i;
      v21[0] = *(i - 2);
      v21[1] = v13;
      v21[2] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v21);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = v11;
      v16 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BAC79EA8(v15 > 1, v16 + 1, 1);
        v11 = v22;
      }
      *(_QWORD *)(v11 + 16) = v16 + 1;
      sub_1BA5193C4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatSection);
      if (!--v10)
        return v11;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1BA89F4C0(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA8A2594(a1, a2, a3, a4, (uint64_t (*)(_QWORD))sub_1BA8C88C8, (void (*)(BOOL, unint64_t, uint64_t))sub_1BAC79E1C, (void (*)(char *, unint64_t))sub_1BA89EB4C);
}

uint64_t sub_1BA89F4EC(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1BA8A34C8(a1, a2, a3);
}

uint64_t sub_1BA89F500(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_1BA7447E8(v7 > 1, v8 + 1, 1);
      v4 += 4;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA89F5D4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_1BA7447E8(v7 > 1, v8 + 1, 1);
      v4 += 2;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BA89F6A8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BAC79FC4(0, v1, 0);
  v2 = v25;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = v7;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    result = swift_retain();
    if (v15 >= v14 >> 1)
      result = sub_1BAC79FC4(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_QWORD *)(v25 + 8 * v15 + 32) = v13;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v24 + 1;
    v6 = v9;
    if (v24 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BA89F8C8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BAC79FC4(0, v1, 0);
  v2 = v25;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = v7;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    result = swift_retain();
    if (v15 >= v14 >> 1)
      result = sub_1BAC79FC4(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_QWORD *)(v25 + 8 * v15 + 32) = v13 | 0x2000000000000000;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v24 + 1;
    v6 = v9;
    if (v24 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BA89FAEC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BAC79FC4(0, v1, 0);
  v2 = v25;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = v7;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    result = swift_retain();
    if (v15 >= v14 >> 1)
      result = sub_1BAC79FC4(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_QWORD *)(v25 + 8 * v15 + 32) = v13 | 0x4000000000000000;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v24 + 1;
    v6 = v9;
    if (v24 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BA89FD10(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BAC79FC4(0, v1, 0);
  v2 = v25;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = v7;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    result = swift_retain();
    if (v15 >= v14 >> 1)
      result = sub_1BAC79FC4(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_QWORD *)(v25 + 8 * v15 + 32) = v13 | 0x6000000000000000;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v24 + 1;
    v6 = v9;
    if (v24 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BA89FF34(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BAC79FC4(0, v1, 0);
  v2 = v25;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = v7;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    result = swift_retain();
    if (v15 >= v14 >> 1)
      result = sub_1BAC79FC4(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_QWORD *)(v25 + 8 * v15 + 32) = v13 | 0x8000000000000000;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v24 + 1;
    v6 = v9;
    if (v24 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BA8A0158(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BAC79FC4(0, v1, 0);
  v2 = v25;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = v7;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    result = swift_retain();
    if (v15 >= v14 >> 1)
      result = sub_1BAC79FC4(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_QWORD *)(v25 + 8 * v15 + 32) = v13 | 0xA000000000000000;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v24 + 1;
    v6 = v9;
    if (v24 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BA8A0380(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1BAC79FC4(0, v1, 0);
  v2 = v25;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = v7;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v12;
    v15 = *(_QWORD *)(v25 + 16);
    v14 = *(_QWORD *)(v25 + 24);
    result = swift_retain();
    if (v15 >= v14 >> 1)
      result = sub_1BAC79FC4(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v25 + 16) = v15 + 1;
    *(_QWORD *)(v25 + 8 * v15 + 32) = v13 | 0xC000000000000000;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v24 + 1;
    v6 = v9;
    if (v24 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BA8A05A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA6BCBF8(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v15 = v1;
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BA6D3988(0, v7, 0);
    v8 = v17;
    v16 = type metadata accessor for FormatContentSubgroup();
    v9 = *(_QWORD *)(v16 - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1BA4C2DD8(v10 + *(int *)(v16 + 20), (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
      v17 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BA6D3988(v12 > 1, v13 + 1, 1);
        v8 = v17;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      sub_1BA5193C4((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1BA8A070C(void (*a1)(uint64_t *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v6)
      break;
    v13 = MEMORY[0x1E0DEE9D8];
    result = sub_1BB873DD4();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1BCCE4630](v8, a3);
      }
      else
      {
        v9 = *(_QWORD *)(a3 + 8 * v8 + 32);
        swift_retain();
      }
      v11 = v9;
      a1(&v12, &v11, &v10);
      swift_release();
      if (v3)
        return swift_release();
      ++v8;
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      if (v6 == v8)
        return v13;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA8A0880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  sub_1BA8CA5C8(0);
  v50 = v3;
  MEMORY[0x1E0C80A78](v3);
  v49 = (uint64_t)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v48 = (_QWORD *)((char *)v40 - v6);
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)v40 - v8;
  v9 = type metadata accessor for FormatService.ThemePackage(0);
  v54 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (!v12)
    return v13;
  v40[1] = v1;
  v55 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A01C(0, v12, 0);
  result = sub_1BA6AFD6C(a1);
  v16 = result;
  v17 = 0;
  v18 = a1 + 64;
  v41 = a1 + 80;
  v42 = v12;
  v45 = v11;
  v46 = a1;
  v43 = v15;
  v44 = a1 + 64;
  v19 = v47;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *(_BYTE *)(a1 + 32))
  {
    v22 = (unint64_t)v16 >> 6;
    if ((*(_QWORD *)(v18 + 8 * ((unint64_t)v16 >> 6)) & (1 << v16)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v15)
      goto LABEL_26;
    v51 = v17;
    v52 = 1 << v16;
    v23 = v50;
    v24 = (uint64_t)v19 + *(int *)(v50 + 48);
    v25 = *(_QWORD *)(a1 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v16);
    v28 = *v26;
    v27 = v26[1];
    v53 = *(_QWORD *)(v54 + 72);
    sub_1BA4C2DD8(v25 + v53 * v16, v24, type metadata accessor for FormatService.ThemePackage);
    *v19 = v28;
    v19[1] = v27;
    v29 = (uint64_t)v48;
    *v48 = v28;
    *(_QWORD *)(v29 + 8) = v27;
    sub_1BA4C2DD8(v24, v29 + *(int *)(v23 + 48), type metadata accessor for FormatService.ThemePackage);
    v30 = v49;
    sub_1BA5193C4(v29, v49, (uint64_t (*)(_QWORD))sub_1BA8CA5C8);
    swift_bridgeObjectRetain_n();
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA8CA5C8);
    v31 = *(int *)(v23 + 48);
    v32 = (uint64_t)v45;
    sub_1BA4C2DD8(v30 + v31, (uint64_t)v45, type metadata accessor for FormatService.ThemePackage);
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))sub_1BA8CA5C8);
    v13 = v55;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC7A01C(0, *(_QWORD *)(v13 + 16) + 1, 1);
      v13 = v55;
    }
    v34 = *(_QWORD *)(v13 + 16);
    v33 = *(_QWORD *)(v13 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_1BAC7A01C(v33 > 1, v34 + 1, 1);
      v13 = v55;
    }
    *(_QWORD *)(v13 + 16) = v34 + 1;
    result = sub_1BA5193C4(v32, v13+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ v34 * v53, type metadata accessor for FormatService.ThemePackage);
    a1 = v46;
    v20 = 1 << *(_BYTE *)(v46 + 32);
    if (v16 >= v20)
      goto LABEL_27;
    v18 = v44;
    v35 = *(_QWORD *)(v44 + 8 * v22);
    if ((v35 & v52) == 0)
      goto LABEL_28;
    LODWORD(v15) = v43;
    if (*(_DWORD *)(v46 + 36) != (_DWORD)v43)
      goto LABEL_29;
    v36 = v35 & (-2 << (v16 & 0x3F));
    if (v36)
    {
      v20 = __clz(__rbit64(v36)) | v16 & 0xFFFFFFFFFFFFFFC0;
      v21 = v42;
    }
    else
    {
      v37 = v22 + 1;
      v38 = (unint64_t)(v20 + 63) >> 6;
      v21 = v42;
      if (v22 + 1 < v38)
      {
        v39 = *(_QWORD *)(v44 + 8 * v37);
        if (v39)
        {
LABEL_22:
          v20 = __clz(__rbit64(v39)) + (v37 << 6);
        }
        else
        {
          while (v38 - 2 != v22)
          {
            v39 = *(_QWORD *)(v41 + 8 * v22++);
            if (v39)
            {
              v37 = v22 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v17 = v51 + 1;
    v16 = v20;
    if (v51 + 1 == v21)
      return v13;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BA8A0C3C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v12 = MEMORY[0x1E0DEE9D8];
    result = sub_1BA7447E8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1BCCE4630](v5, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        swift_retain();
      }
      swift_beginAccess();
      v8 = *(_QWORD *)(v6 + 16);
      v7 = *(_QWORD *)(v6 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      v10 = *(_QWORD *)(v12 + 16);
      v9 = *(_QWORD *)(v12 + 24);
      if (v10 >= v9 >> 1)
        sub_1BA7447E8(v9 > 1, v10 + 1, 1);
      ++v5;
      *(_QWORD *)(v12 + 16) = v10 + 1;
      v11 = v12 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v8;
      *(_QWORD *)(v11 + 40) = v7;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8A0DB4(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = v7;
  v10 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    sub_1BA4CDF6C(0, a5, a6, a7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = a3 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v19 = *(_QWORD *)(v17 + 72);
    while (1)
    {
      a1(&v20, v18);
      if (v8)
        break;
      v8 = 0;
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v18 += v19;
      if (!--v10)
        return v21;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA8A0EDC(void (*a1)(_QWORD *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  void (*v20)(_QWORD *, uint64_t *);
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];
  uint64_t v24;

  v4 = v3;
  v20 = a1;
  v21 = a2;
  v6 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A0A8(0, v10, 0);
    v11 = v24;
    v12 = (uint64_t *)(a3 + 56);
    while (1)
    {
      v13 = *(v12 - 2);
      v15 = *(v12 - 1);
      v14 = *v12;
      v23[0] = *(v12 - 3);
      v23[1] = v13;
      v23[2] = v15;
      v23[3] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v23, &v22);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = v11;
      v17 = *(_QWORD *)(v11 + 16);
      v16 = *(_QWORD *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BAC7A0A8(v16 > 1, v17 + 1, 1);
        v11 = v24;
      }
      v12 += 4;
      *(_QWORD *)(v11 + 16) = v17 + 1;
      sub_1BA5193C4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17, type metadata accessor for FormatDerivedDataResultOptionReference);
      if (!--v10)
        return v11;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1BA8A1070(void (*a1)(uint64_t *__return_ptr, _QWORD *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v24;
  _QWORD v25[3];
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1BA785114(0, v5, 0);
    result = v33;
    v8 = (_QWORD *)(a3 + 64);
    while (1)
    {
      v9 = result;
      v10 = *(v8 - 3);
      v11 = *(v8 - 2);
      v12 = *((_WORD *)v8 - 4);
      v13 = *v8;
      v25[0] = *(v8 - 4);
      v25[1] = v10;
      v25[2] = v11;
      v26 = v12;
      v27 = v13;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      a1(&v28, v25, &v24);
      if (v4)
        break;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v14 = v28;
      v15 = v29;
      v16 = v30;
      v17 = v31;
      v18 = v32;
      result = v9;
      v33 = v9;
      v19 = *(_QWORD *)(v9 + 16);
      v20 = *(_QWORD *)(result + 24);
      if (v19 >= v20 >> 1)
      {
        v22 = v29;
        sub_1BA785114(v20 > 1, v19 + 1, 1);
        v15 = v22;
        result = v33;
      }
      *(_QWORD *)(result + 16) = v19 + 1;
      v21 = result + 40 * v19;
      *(_QWORD *)(v21 + 32) = v14;
      *(_OWORD *)(v21 + 40) = v15;
      *(_BYTE *)(v21 + 56) = v16;
      *(_BYTE *)(v21 + 57) = v17;
      *(_QWORD *)(v21 + 64) = v18;
      v8 += 5;
      --v5;
      v4 = 0;
      if (!v5)
        return result;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA8A1234(void (*a1)(uint64_t *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BA772D64(0, v5, 0);
    v6 = v18;
    v9 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v10 = *v9++;
      v16 = v10;
      swift_retain();
      a1(&v17, &v16, &v15);
      if (v4)
        break;
      v4 = 0;
      swift_release();
      v11 = v17;
      v18 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BA772D64(v12 > 1, v13 + 1, 1);
        v6 = v18;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      *(_QWORD *)(v6 + 8 * v13 + 32) = v11;
      if (!--v5)
        return v6;
    }
    swift_release();
    swift_release();
  }
  return v6;
}

_QWORD *sub_1BA8A135C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *(*v17)(_QWORD *__return_ptr, uint64_t *);
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;

  v17 = (_QWORD *(*)(_QWORD *__return_ptr, uint64_t *))result;
  v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v6 = v4;
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    return (_QWORD *)v7;
  v21 = MEMORY[0x1E0DEE9D8];
  result = (_QWORD *)sub_1BA7447E8(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = v21;
    v9 = a3;
    if (a4 <= a3)
      v10 = a3;
    else
      v10 = a4;
    v16 = v10;
    while (a4 != v9)
    {
      v19 = v9;
      result = v17(v20, &v19);
      if (v6)
      {
        swift_release();
        return (_QWORD *)v7;
      }
      v6 = 0;
      v11 = v20[0];
      v12 = v20[1];
      v21 = v7;
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        result = (_QWORD *)sub_1BA7447E8(v13 > 1, v14 + 1, 1);
        v7 = v21;
      }
      *(_QWORD *)(v7 + 16) = v14 + 1;
      v15 = v7 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 40) = v12;
      if (a4 < a3)
        goto LABEL_19;
      if (v16 == v9)
        goto LABEL_20;
      if (a4 == ++v9)
        return (_QWORD *)v7;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1BA8A14AC(void (*a1)(__int128 *__return_ptr, _QWORD *, uint64_t *), uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];
  unsigned __int8 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BA527244(0, v3, 0);
    v4 = v29;
    v6 = (unsigned __int8 *)(a3 + 64);
    while (1)
    {
      v7 = *((_QWORD *)v6 - 4);
      v8 = *((_QWORD *)v6 - 3);
      v10 = *((_QWORD *)v6 - 2);
      v9 = *((_QWORD *)v6 - 1);
      v11 = *v6;
      v24[0] = v7;
      v24[1] = v8;
      v24[2] = v10;
      v24[3] = v9;
      v25 = v11;
      sub_1BA527164(v7, v8, v10, v9, v11);
      a1(&v26, v24, &v23);
      if (v22)
        break;
      v22 = 0;
      sub_1BA5271D4(v7, v8, v10, v9, v11);
      v12 = v26;
      v13 = v27;
      v14 = v28;
      v29 = v4;
      v16 = *(_QWORD *)(v4 + 16);
      v15 = *(_QWORD *)(v4 + 24);
      if (v16 >= v15 >> 1)
      {
        v19 = v27;
        v20 = v26;
        sub_1BA527244(v15 > 1, v16 + 1, 1);
        v13 = v19;
        v12 = v20;
        v4 = v29;
      }
      v6 += 40;
      *(_QWORD *)(v4 + 16) = v16 + 1;
      v17 = v4 + 40 * v16;
      *(_OWORD *)(v17 + 32) = v12;
      *(_OWORD *)(v17 + 48) = v13;
      *(_BYTE *)(v17 + 64) = v14;
      if (!--v3)
        return v4;
    }
    sub_1BA5271D4(v7, v8, v10, v9, v11);
    swift_release();
  }
  return v4;
}

uint64_t sub_1BA8A1628(void (*a1)(_QWORD *__return_ptr, _BYTE *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v9;
  int64_t i;
  unint64_t v11;
  unint64_t v12;
  _BYTE v14[136];
  uint64_t v15;
  _BYTE v16[136];
  _QWORD v17[17];
  _BYTE v18[144];
  uint64_t v19;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A138(0, v5, 0);
    v9 = a3 + 32;
    v6 = v19;
    for (i = v5 - 1; ; --i)
    {
      sub_1BA895BCC(v9, (uint64_t)v18);
      sub_1BA895BCC((uint64_t)v18, (uint64_t)v16);
      sub_1BA895DFC((uint64_t)v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
      a1(v17, v16, &v15);
      if (v4)
        break;
      v4 = 0;
      sub_1BA895DFC((uint64_t)v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
      sub_1BA895BCC((uint64_t)v17, (uint64_t)v14);
      v19 = v6;
      v12 = *(_QWORD *)(v6 + 16);
      v11 = *(_QWORD *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1BAC7A138(v11 > 1, v12 + 1, 1);
        v6 = v19;
      }
      *(_QWORD *)(v6 + 16) = v12 + 1;
      sub_1BA895BCC((uint64_t)v14, v6 + 136 * v12 + 32);
      if (!i)
        return v6;
      v9 += 136;
    }
    sub_1BA895DFC((uint64_t)v18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
    swift_release();
  }
  return v6;
}

uint64_t sub_1BA8A17A8(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1BA8A271C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption, (void (*)(BOOL, unint64_t, uint64_t))sub_1BAC7A10C, (void (*)(char *, unint64_t))sub_1BA8569CC);
}

uint64_t sub_1BA8A17D4(void (*a1)(__int128 *__return_ptr, _QWORD *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  _QWORD v21[3];
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A1E4(0, v5, 0);
    v6 = v24;
    v9 = (uint64_t *)(a3 + 48);
    while (1)
    {
      v11 = *(v9 - 2);
      v10 = *(v9 - 1);
      v12 = *v9;
      v21[0] = v11;
      v21[1] = v10;
      v21[2] = v12;
      sub_1BA5E7FF4(v11);
      sub_1BA6E6C68(v10);
      sub_1BA6E6C68(v12);
      a1(&v22, v21, &v20);
      if (v4)
        break;
      v4 = 0;
      sub_1BA5E800C(v11);
      sub_1BA6E6CD8(v10);
      sub_1BA6E6CD8(v12);
      v13 = v22;
      v14 = v23;
      v24 = v6;
      v16 = *(_QWORD *)(v6 + 16);
      v15 = *(_QWORD *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        v19 = v22;
        sub_1BAC7A1E4(v15 > 1, v16 + 1, 1);
        v13 = v19;
        v6 = v24;
      }
      v9 += 3;
      *(_QWORD *)(v6 + 16) = v16 + 1;
      v17 = v6 + 24 * v16;
      *(_OWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 48) = v14;
      if (!--v5)
        return v6;
    }
    sub_1BA5E800C(v11);
    sub_1BA6E6CD8(v10);
    sub_1BA6E6CD8(v12);
    swift_release();
  }
  return v6;
}

uint64_t sub_1BA8A1948(void (*a1)(uint64_t *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A200(0, v5, 0);
    v6 = v18;
    v9 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v10 = *v9++;
      v16 = v10;
      swift_retain();
      a1(&v17, &v16, &v15);
      if (v4)
        break;
      v4 = 0;
      swift_release();
      v11 = v17;
      v18 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BAC7A200(v12 > 1, v13 + 1, 1);
        v6 = v18;
      }
      *(_QWORD *)(v6 + 16) = v13 + 1;
      *(_QWORD *)(v6 + 8 * v13 + 32) = v11;
      if (!--v5)
        return v6;
    }
    swift_release();
    swift_release();
  }
  return v6;
}

uint64_t sub_1BA8A1A70(void (*a1)(__int128 *__return_ptr, _OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  _OWORD *i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  _OWORD v21[9];
  __int128 v22[2];
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1BA5E34AC(0, v5, 0);
    v6 = v31;
    for (i = (_OWORD *)(a3 + 32); ; i += 9)
    {
      --v5;
      v10 = i[5];
      v11 = i[7];
      v28 = i[6];
      v29 = v11;
      v12 = i[7];
      v30 = i[8];
      v13 = i[1];
      v14 = i[3];
      v24 = i[2];
      v25 = v14;
      v15 = i[3];
      v16 = i[5];
      v26 = i[4];
      v27 = v16;
      v17 = i[1];
      v23[0] = *i;
      v23[1] = v17;
      v21[6] = v28;
      v21[7] = v12;
      v21[8] = i[8];
      v21[2] = v24;
      v21[3] = v15;
      v21[4] = v26;
      v21[5] = v10;
      v21[0] = v23[0];
      v21[1] = v13;
      sub_1BA8C88FC((uint64_t)v23);
      a1(v22, v21);
      if (v4)
        break;
      v4 = 0;
      sub_1BA8C89E4((uint64_t)v23);
      v31 = v6;
      v19 = *(_QWORD *)(v6 + 16);
      v18 = *(_QWORD *)(v6 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BA5E34AC(v18 > 1, v19 + 1, 1);
        v6 = v31;
      }
      *(_QWORD *)(v6 + 16) = v19 + 1;
      sub_1BA4CECCC(v22, v6 + 40 * v19 + 32);
      if (!v5)
        return v6;
    }
    sub_1BA8C89E4((uint64_t)v23);
    swift_release();
  }
  return v6;
}

uint64_t sub_1BA8A1BE4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA8A2D44(a1, a2, a3, a4, type metadata accessor for HeadlineViewLayout.Context, (void (*)(BOOL, unint64_t, uint64_t))sub_1BA7F3810, type metadata accessor for FeedHeadline);
}

uint64_t sub_1BA8A1C10(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  return sub_1BA8A1C24(a1, a2, a3);
}

uint64_t sub_1BA8A1C24(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[10];
  uint64_t v20;
  uint64_t v21;

  v3 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v6 = (uint64_t *)(a3 + 56);
    while (1)
    {
      v17 = v3;
      v7 = *(v6 - 2);
      v8 = *(v6 - 1);
      v9 = *v6;
      v10 = v6[1];
      v11 = v6[2];
      v12 = v6[3];
      v13 = v6[4];
      v14 = v6[5];
      v15 = v6[6];
      v19[0] = *(v6 - 3);
      v19[1] = v7;
      v19[2] = v8;
      v19[3] = v9;
      v19[4] = v10;
      v19[5] = v11;
      v19[6] = v12;
      v19[7] = v13;
      v19[8] = v14;
      v19[9] = v15;
      sub_1BA6D78DC();
      a1(&v20, v19);
      if (v18)
        break;
      v18 = 0;
      v6 += 10;
      sub_1BA7F4208();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v3 = v17 - 1;
      if (v17 == 1)
        return v21;
    }
    sub_1BA7F4208();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA8A1D9C(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int64_t v4;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  _QWORD v29[8];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;

  v4 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v35 = MEMORY[0x1E0DEE9D8];
    sub_1BA6C2984(0, v4, 0);
    result = v35;
    v7 = (uint64_t *)(a3 + 48);
    while (1)
    {
      v26 = v4;
      v27 = result;
      v8 = *(v7 - 1);
      v9 = *v7;
      v10 = v7[1];
      v11 = v7[2];
      v12 = v7[3];
      v13 = v7[4];
      v14 = v7[5];
      v29[0] = *(v7 - 2);
      v29[1] = v8;
      v29[2] = v9;
      v29[3] = v10;
      v29[4] = v11;
      v29[5] = v12;
      v29[6] = v13;
      v29[7] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v30, v29);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v30;
      v16 = v31;
      v17 = v32;
      v18 = v33;
      v19 = v34;
      result = v27;
      v35 = v27;
      v21 = *(_QWORD *)(v27 + 16);
      v20 = *(_QWORD *)(v27 + 24);
      if (v21 >= v20 >> 1)
      {
        v28 = v31;
        v23 = v33;
        v24 = v32;
        sub_1BA6C2984(v20 > 1, v21 + 1, 1);
        v18 = v23;
        v17 = v24;
        v16 = v28;
        result = v35;
      }
      *(_QWORD *)(result + 16) = v21 + 1;
      v22 = result + (v21 << 6);
      *(_QWORD *)(v22 + 32) = v15;
      v7 += 8;
      *(_OWORD *)(v22 + 40) = v16;
      *(_OWORD *)(v22 + 56) = v17;
      *(_OWORD *)(v22 + 72) = v18;
      *(_QWORD *)(v22 + 88) = v19;
      v3 = 0;
      v4 = v26 - 1;
      if (v26 == 1)
        return result;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA8A1F94(void (*a1)(_QWORD *__return_ptr, _OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  _OWORD *i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  _OWORD v21[7];
  _OWORD v22[2];
  _QWORD __src[49];
  _OWORD v24[2];
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[3];
  uint64_t v31;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A3E8(0, v5, 0);
    v6 = v31;
    for (i = (_OWORD *)(a3 + 32); ; i += 9)
    {
      --v5;
      v10 = i[5];
      v11 = i[7];
      v29 = i[6];
      v30[0] = v11;
      *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)i + 121);
      v12 = i[1];
      v13 = i[3];
      v25 = i[2];
      v26 = v13;
      v14 = i[3];
      v15 = i[5];
      v27 = i[4];
      v28 = v15;
      v16 = i[1];
      v24[0] = *i;
      v24[1] = v16;
      v17 = i[7];
      v21[6] = v29;
      v22[0] = v17;
      *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)i + 121);
      v21[2] = v25;
      v21[3] = v14;
      v21[4] = v27;
      v21[5] = v10;
      v21[0] = v24[0];
      v21[1] = v12;
      sub_1BA8D1F08((uint64_t)v24);
      a1(__src, v21);
      if (v4)
        break;
      v4 = 0;
      sub_1BA8D1FE4((uint64_t)v24);
      v31 = v6;
      v19 = *(_QWORD *)(v6 + 16);
      v18 = *(_QWORD *)(v6 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BAC7A3E8(v18 > 1, v19 + 1, 1);
        v6 = v31;
      }
      *(_QWORD *)(v6 + 16) = v19 + 1;
      memcpy((void *)(v6 + 392 * v19 + 32), __src, 0x188uLL);
      if (!v5)
        return v6;
    }
    sub_1BA8D1FE4((uint64_t)v24);
    swift_release();
  }
  return v6;
}

uint64_t sub_1BA8A2110(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1BA8A2A40(a1, a2, a3);
}

uint64_t sub_1BA8A2124(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA8A2140(a1, a2, a3, a4, type metadata accessor for FormatContent);
}

uint64_t sub_1BA8A2140(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = v5;
  v8 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v16 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v12 = *(_QWORD *)(a5(0) - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v14 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      a1(&v15, v13);
      if (v6)
        break;
      v6 = 0;
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v13 += v14;
      if (!--v8)
        return v16;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA8A224C(void (*a1)(__int128 *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  if (a3 >> 62)
    goto LABEL_18;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    if (!v6)
      return v7;
    v21 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7A4C0(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
      break;
    v9 = 0;
    v7 = v21;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        v10 = MEMORY[0x1BCCE4630](v9, a3);
      }
      else
      {
        v10 = *(_QWORD *)(a3 + 8 * v9 + 32);
        swift_unknownObjectRetain();
      }
      v18 = v10;
      a1(&v19, &v18);
      if (v4)
      {
        swift_release();
        swift_unknownObjectRelease();
        return v7;
      }
      v4 = 0;
      swift_unknownObjectRelease();
      v11 = v19;
      v12 = v20;
      v21 = v7;
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        v16 = v19;
        sub_1BAC7A4C0(v13 > 1, v14 + 1, 1);
        v11 = v16;
        v7 = v21;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v14 + 1;
      v15 = v7 + 24 * v14;
      *(_OWORD *)(v15 + 32) = v11;
      *(_QWORD *)(v15 + 48) = v12;
      if (v6 == v9)
        return v7;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8A23F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *i;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = v3;
  v16[0] = a1;
  v16[1] = a2;
  v6 = type metadata accessor for SportsDataServiceRequest(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A578(0, v10, 0);
    v11 = v19;
    for (i = (uint64_t *)(a3 + 32); ; ++i)
    {
      v18 = *i;
      swift_bridgeObjectRetain();
      ((void (*)(uint64_t *, uint64_t *))v16[0])(&v18, &v17);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      v19 = v11;
      v14 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BAC7A578(v13 > 1, v14 + 1, 1);
        v11 = v19;
      }
      *(_QWORD *)(v11 + 16) = v14 + 1;
      sub_1BA5193C4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v14, type metadata accessor for SportsDataServiceRequest);
      if (!--v10)
        return v11;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1BA8A2568(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA8A2594(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue, (void (*)(BOOL, unint64_t, uint64_t))sub_1BAC7A274, (void (*)(char *, unint64_t))sub_1BA8C88E4);
}

uint64_t sub_1BA8A2594(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t), void (*a7)(char *, unint64_t))
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  void (*v24)(BOOL, unint64_t, uint64_t);
  void (*v25)(char *, unint64_t);
  void (*v26)(char *);
  uint64_t v27;
  char v28;
  uint64_t v29;

  v25 = a7;
  v26 = a1;
  v9 = v7;
  v27 = a2;
  v11 = a5(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  v16 = *(_QWORD *)(a3 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    v24 = a6;
    ((void (*)(_QWORD, uint64_t, _QWORD, double))a6)(0, v16, 0, v13);
    v17 = v29;
    v18 = (char *)(a3 + 32);
    while (1)
    {
      v19 = *v18++;
      v28 = v19;
      v26(&v28);
      if (v9)
        break;
      v9 = 0;
      v29 = v17;
      v21 = *(_QWORD *)(v17 + 16);
      v20 = *(_QWORD *)(v17 + 24);
      if (v21 >= v20 >> 1)
      {
        v24(v20 > 1, v21 + 1, 1);
        v17 = v29;
      }
      *(_QWORD *)(v17 + 16) = v21 + 1;
      v25(v15, v17+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v21);
      if (!--v16)
        return v17;
    }
    swift_release();
  }
  return v17;
}

uint64_t sub_1BA8A26F0(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1BA8A271C(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet, (void (*)(BOOL, unint64_t, uint64_t))sub_1BAC7A78C, (void (*)(char *, unint64_t))sub_1BA8C88F0);
}

uint64_t sub_1BA8A271C(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, unint64_t, uint64_t), void (*a6)(char *, unint64_t))
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v22)(BOOL, unint64_t, uint64_t);
  unint64_t v23;
  void (*v24)(char *, unint64_t);
  void (*v25)(uint64_t, uint64_t *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24 = a6;
  v25 = a1;
  v8 = v6;
  v26 = a2;
  v10 = a4(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(a3 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v28 = MEMORY[0x1E0DEE9D8];
    v22 = a5;
    ((void (*)(_QWORD, uint64_t, _QWORD, double))a5)(0, v15, 0, v12);
    v16 = v28;
    v23 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v17 = a3 + v23;
    v18 = *(_QWORD *)(v11 + 72);
    while (1)
    {
      v25(v17, &v27);
      if (v8)
        break;
      v8 = 0;
      v28 = v16;
      v20 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v16 + 24);
      if (v20 >= v19 >> 1)
      {
        v22(v19 > 1, v20 + 1, 1);
        v16 = v28;
      }
      *(_QWORD *)(v16 + 16) = v20 + 1;
      v24(v14, v16 + v23 + v20 * v18);
      v17 += v18;
      if (!--v15)
        return v16;
    }
    swift_release();
  }
  return v16;
}

uint64_t sub_1BA8A2880(void (*a1)(_QWORD *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(_QWORD *, uint64_t *);
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[4];
  uint64_t v25;

  v4 = v3;
  v21 = a1;
  v22 = a2;
  v19 = sub_1BB86DB94();
  v6 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    v20 = v8;
    sub_1BA791984(0, v9, 0);
    v10 = v25;
    v11 = (uint64_t *)(a3 + 56);
    while (1)
    {
      v12 = *(v11 - 2);
      v13 = *(v11 - 1);
      v14 = *v11;
      v24[0] = *(v11 - 3);
      v24[1] = v12;
      v24[2] = v13;
      v24[3] = v14;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v21(v24, &v23);
      if (v4)
        break;
      v4 = 0;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v25 = v10;
      v16 = *(_QWORD *)(v10 + 16);
      v15 = *(_QWORD *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BA791984(v15 > 1, v16 + 1, 1);
        v10 = v25;
      }
      v11 += 4;
      *(_QWORD *)(v10 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v16, v20, v19);
      if (!--v9)
        return v10;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_1BA8A2A40(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v17[2];
  uint64_t v18;

  v4 = v3;
  v17[1] = a2;
  sub_1BA8C88C8(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    v13 = sub_1BAC79E1C(0, v11, 0);
    v12 = v18;
    while (1)
    {
      a1(v13);
      if (v4)
        break;
      v4 = 0;
      v18 = v12;
      v15 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC79E1C(v14 > 1, v15 + 1, 1);
        v12 = v18;
      }
      *(_QWORD *)(v12 + 16) = v15 + 1;
      v13 = sub_1BA89EB4C((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v15);
      if (!--v11)
        return v12;
    }
    swift_release();
  }
  return v12;
}

uint64_t sub_1BA8A2B80(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for FormatDerivedDataBinderResult();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A8F0(0, v10, 0);
    v11 = v22;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = a3 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v18 = *(_QWORD *)(v13 + 72);
    while (1)
    {
      v19(v14, &v21);
      if (v4)
        break;
      v4 = 0;
      v22 = v11;
      v16 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BAC7A8F0(v15 > 1, v16 + 1, 1);
        v11 = v22;
      }
      *(_QWORD *)(v11 + 16) = v16 + 1;
      sub_1BA5193C4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBinderResult);
      v14 += v18;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1BA8A2D18(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA8A2D44(a1, a2, a3, a4, type metadata accessor for WebEmbedDataVisualizationDataRequest, (void (*)(BOOL, unint64_t, uint64_t))sub_1BAC7AB8C, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1BA8A2D44(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(_QWORD))
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  void (*v25)(BOOL, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;

  v10 = v7;
  v28 = a1;
  v29 = a2;
  v27 = a5;
  v12 = a5(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v24 - v15;
  v17 = *(_QWORD *)(a3 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  if (v17)
  {
    v30 = MEMORY[0x1E0DEE9D8];
    v25 = a6;
    ((void (*)(_QWORD, uint64_t, _QWORD, double))a6)(0, v17, 0, v14);
    v18 = v30;
    v19 = *(_QWORD *)(a7(0) - 8);
    v20 = a3 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v26 = *(_QWORD *)(v19 + 72);
    while (1)
    {
      v28(v20);
      if (v10)
        break;
      v10 = 0;
      v30 = v18;
      v22 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v18 + 24);
      if (v22 >= v21 >> 1)
      {
        v25(v21 > 1, v22 + 1, 1);
        v18 = v30;
      }
      *(_QWORD *)(v18 + 16) = v22 + 1;
      sub_1BA5193C4((uint64_t)v16, v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v22, v27);
      v20 += v26;
      if (!--v17)
        return v18;
    }
    swift_release();
  }
  return v18;
}

uint64_t sub_1BA8A2EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t i;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;

  v4 = v3;
  v16[0] = a1;
  v16[1] = a2;
  v6 = type metadata accessor for DebugInspectViewItem();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AC60(0, v10, 0);
    v11 = v17;
    for (i = a3 + 32; ; i += 40)
    {
      ((void (*)(uint64_t))v16[0])(i);
      if (v4)
        break;
      v4 = 0;
      v17 = v11;
      v14 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BAC7AC60(v13 > 1, v14 + 1, 1);
        v11 = v17;
      }
      *(_QWORD *)(v11 + 16) = v14 + 1;
      sub_1BA5193C4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1BA8A3018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  char v20;
  uint64_t v21;

  v4 = v3;
  v18[0] = a1;
  v18[1] = a2;
  v6 = type metadata accessor for DebugInspectViewItem();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AC60(0, v10, 0);
    v11 = v21;
    v12 = (char *)(a3 + 40);
    while (1)
    {
      v13 = *((_QWORD *)v12 - 1);
      v14 = *v12;
      v19 = v13;
      v20 = v14;
      sub_1BA8C88B0(v13, v14);
      ((void (*)(uint64_t *))v18[0])(&v19);
      if (v4)
        break;
      v4 = 0;
      sub_1BA8C88BC(v13, v14);
      v21 = v11;
      v16 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BAC7AC60(v15 > 1, v16 + 1, 1);
        v11 = v21;
      }
      v12 += 16;
      *(_QWORD *)(v11 + 16) = v16 + 1;
      sub_1BA5193C4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      if (!--v10)
        return v11;
    }
    sub_1BA8C88BC(v13, v14);
    swift_release();
  }
  return v11;
}

uint64_t sub_1BA8A319C(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  v6 = type metadata accessor for PluginLayout.Context(0);
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62)
    goto LABEL_18;
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    if (!v9)
      return v10;
    v22 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7AD38(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v10 = v22;
    v17 = a3 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v17)
      {
        v13 = MEMORY[0x1BCCE4630](v12, a3);
      }
      else
      {
        v13 = *(_QWORD *)(a3 + 8 * v12 + 32);
        swift_retain();
      }
      v21 = v13;
      v19(&v21);
      if (v4)
      {
        swift_release();
        swift_release();
        return v10;
      }
      v4 = 0;
      swift_release();
      v22 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7AD38(v14 > 1, v15 + 1, 1);
        v10 = v22;
      }
      ++v12;
      *(_QWORD *)(v10 + 16) = v15 + 1;
      sub_1BA5193C4((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v15, type metadata accessor for PluginLayout.Context);
      if (v9 == v12)
        return v10;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v9 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8A3388(void (*a1)(_OWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t i;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v23[12];
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AD64(0, v5, 0);
    v6 = v25;
    for (i = a3 + 32; ; i += 152)
    {
      a1(v23, i);
      if (v4)
        break;
      v4 = 0;
      v25 = v6;
      v11 = *(_QWORD *)(v6 + 16);
      v10 = *(_QWORD *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BAC7AD64(v10 > 1, v11 + 1, 1);
        v6 = v25;
      }
      *(_QWORD *)(v6 + 16) = v11 + 1;
      v12 = v6 + 200 * v11;
      *(_OWORD *)(v12 + 32) = v23[0];
      v13 = v23[1];
      v14 = v23[2];
      v15 = v23[4];
      *(_OWORD *)(v12 + 80) = v23[3];
      *(_OWORD *)(v12 + 96) = v15;
      *(_OWORD *)(v12 + 48) = v13;
      *(_OWORD *)(v12 + 64) = v14;
      v16 = v23[5];
      v17 = v23[6];
      v18 = v23[8];
      *(_OWORD *)(v12 + 144) = v23[7];
      *(_OWORD *)(v12 + 160) = v18;
      *(_OWORD *)(v12 + 112) = v16;
      *(_OWORD *)(v12 + 128) = v17;
      v19 = v23[9];
      v20 = v23[10];
      v21 = v23[11];
      *(_QWORD *)(v12 + 224) = v24;
      *(_OWORD *)(v12 + 192) = v20;
      *(_OWORD *)(v12 + 208) = v21;
      *(_OWORD *)(v12 + 176) = v19;
      if (!--v5)
        return v6;
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1BA8A34C8(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *i;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  void (*v17)(char *);
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = v3;
  v17 = a1;
  v18 = a2;
  sub_1BA8C88C8(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v10, 0);
    v11 = v20;
    for (i = (char *)(a3 + 32); ; ++i)
    {
      v19 = *i;
      v17(&v19);
      if (v4)
        break;
      v4 = 0;
      v20 = v11;
      v14 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BAC79E1C(v13 > 1, v14 + 1, 1);
        v11 = v20;
      }
      *(_QWORD *)(v11 + 16) = v14 + 1;
      sub_1BA89EB4C((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v14);
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1BA8A3618(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD *);
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[8];
  uint64_t v29;

  v22 = a1;
  v23 = a2;
  v5 = type metadata accessor for FormatContentSubgroup();
  v21 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v24 = (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a3 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (v7)
  {
    v27 = v3;
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79FF0(0, v7, 0);
    v8 = v29;
    v9 = (uint64_t *)(a3 + 48);
    while (1)
    {
      v25 = v7;
      v26 = v8;
      v10 = *(v9 - 1);
      v12 = *v9;
      v11 = v9[1];
      v8 = v9[2];
      v13 = v9[3];
      v14 = v9[4];
      v15 = v9[5];
      v28[0] = *(v9 - 2);
      v28[1] = v10;
      v28[2] = v12;
      v28[3] = v11;
      v28[4] = v8;
      v28[5] = v13;
      v28[6] = v14;
      v28[7] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = v27;
      v22(v28);
      if (v16)
        break;
      v27 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v26;
      v29 = v26;
      v18 = *(_QWORD *)(v26 + 16);
      v17 = *(_QWORD *)(v26 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BAC79FF0(v17 > 1, v18 + 1, 1);
        v8 = v29;
      }
      v9 += 8;
      *(_QWORD *)(v8 + 16) = v18 + 1;
      sub_1BA5193C4(v24, v8+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(_QWORD *)(v21 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
      v7 = v25 - 1;
      if (v25 == 1)
        return v8;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1BA8A385C(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int64_t v4;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v21;
  uint64_t v22;
  __int128 v23;
  _QWORD v24[8];
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v4 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B44C(0, v4, 0);
    result = v27;
    v7 = (uint64_t *)(a3 + 48);
    while (1)
    {
      v21 = v4;
      v22 = result;
      v8 = *(v7 - 1);
      v9 = *v7;
      v10 = v7[1];
      v11 = v7[2];
      v12 = v7[3];
      v13 = v7[4];
      v14 = v7[5];
      v24[0] = *(v7 - 2);
      v24[1] = v8;
      v24[2] = v9;
      v24[3] = v10;
      v24[4] = v11;
      v24[5] = v12;
      v24[6] = v13;
      v24[7] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v25, v24);
      if (v3)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = v25;
      v16 = v26;
      result = v22;
      v27 = v22;
      v18 = *(_QWORD *)(v22 + 16);
      v17 = *(_QWORD *)(v22 + 24);
      if (v18 >= v17 >> 1)
      {
        v23 = v26;
        sub_1BAC7B44C(v17 > 1, v18 + 1, 1);
        v16 = v23;
        result = v27;
      }
      v7 += 8;
      *(_QWORD *)(result + 16) = v18 + 1;
      v19 = result + 24 * v18;
      *(_QWORD *)(v19 + 32) = v15;
      *(_OWORD *)(v19 + 40) = v16;
      v3 = 0;
      v4 = v21 - 1;
      if (v21 == 1)
        return result;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA8A3A3C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v19 = a1;
  v20 = a2;
  sub_1BA8C88C8(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v10, 0);
    v11 = v21;
    v12 = *(_QWORD *)(type metadata accessor for FormatDebuggerCallStackFrame(0) - 8);
    v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v18 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4)
        break;
      v4 = 0;
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC79E1C(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      sub_1BA89EB4C((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15);
      v13 += v18;
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1BA8A3BA8(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t result;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v12[3];
  char v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v8 = (_BYTE *)(a3 + 56);
    while (1)
    {
      v9 = *((_QWORD *)v8 - 2);
      v10 = *((_QWORD *)v8 - 1);
      v11 = *v8;
      v12[0] = *((_QWORD *)v8 - 3);
      v12[1] = v9;
      v12[2] = v10;
      v13 = v11;
      swift_bridgeObjectRetain();
      a1(&v14, v12);
      swift_bridgeObjectRelease();
      if (v3)
        break;
      v8 += 32;
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      if (!--v5)
        return v15;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA8A3CB4(void (*a1)(_QWORD *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[8];
  _QWORD v23[5];
  uint64_t v24;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E7C(0, v3, 0);
    v4 = v24;
    v6 = (uint64_t *)(a3 + 48);
    while (1)
    {
      v19 = v3;
      v20 = v4;
      v7 = *(v6 - 1);
      v9 = *v6;
      v8 = v6[1];
      v10 = v6[2];
      v11 = v6[3];
      v12 = v6[4];
      v13 = v6[5];
      v22[0] = *(v6 - 2);
      v22[1] = v7;
      v22[2] = v9;
      v22[3] = v8;
      v22[4] = v10;
      v22[5] = v11;
      v22[6] = v12;
      v22[7] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v4 = a2;
      a1(v23, v22);
      if (v21)
        break;
      v21 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v20;
      v24 = v20;
      v15 = *(_QWORD *)(v20 + 16);
      v14 = *(_QWORD *)(v20 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC79E7C(v14 > 1, v15 + 1, 1);
        v4 = v24;
      }
      v6 += 8;
      *(_QWORD *)(v4 + 16) = v15 + 1;
      sub_1BA5193C4((uint64_t)v23, v4 + 40 * v15 + 32, (uint64_t (*)(_QWORD))sub_1BA89EA04);
      v3 = v19 - 1;
      if (v19 == 1)
        return v4;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1BA8A3E9C(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  void (*v18)(uint64_t *);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v18 = a1;
  v19 = a2;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3A3E80, (uint64_t (*)(void))sub_1BA83171C, (uint64_t)&type metadata for FormatLayoutModel, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB88A0]);
  v17 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B8C0(0, v10, 0);
    v11 = v21;
    v12 = (uint64_t *)(a3 + 32);
    while (1)
    {
      v13 = *v12++;
      v20 = v13;
      swift_retain();
      v18(&v20);
      if (v4)
        break;
      v4 = 0;
      swift_release();
      v21 = v11;
      v15 = *(_QWORD *)(v11 + 16);
      v14 = *(_QWORD *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC7B8C0(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      *(_QWORD *)(v11 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v15, v9, v17);
      if (!--v10)
        return v11;
    }
    swift_release();
    swift_release();
  }
  return v11;
}

unint64_t sub_1BA8A402C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v4 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6BD034(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCBF8(0);
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v54 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v48 - v14;
  MEMORY[0x1E0C80A78](v16);
  v50 = (uint64_t)&v48 - v18;
  v19 = *(_QWORD *)(a1 + 16);
  if (v19)
  {
    v51 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v20 = a1 + v51;
    v58 = v17;
    v56 = *(_QWORD *)(v17 + 72);
    v48 = a1;
    swift_bridgeObjectRetain();
    v55 = MEMORY[0x1E0DEE9D8];
    v53 = v6;
    v59 = v11;
    v49 = a2;
    v57 = v9;
    while (1)
    {
      sub_1BA4C2DD8(v20, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
        sub_1BA5193C4((uint64_t)&v15[*(int *)(v21 + 48)], (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      }
      else
      {
        sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
        sub_1BA5193C4((uint64_t)&v15[*(int *)(v22 + 48)], (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v23 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v15, v23);
      }
      v24 = *v6;
      v25 = v6[1];
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      if (!v25)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v9, 1, 1, v59);
        goto LABEL_4;
      }
      v26 = *a2;
      if (!*(_QWORD *)(*a2 + 16))
        goto LABEL_17;
      swift_bridgeObjectRetain();
      v27 = sub_1BA6E35A8(v24, v25);
      if ((v28 & 1) == 0)
        break;
      v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (qword_1ED3BB468 != -1)
        swift_once();
      v30 = sub_1BB86EB84();
      v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED3B8FC8);
      MEMORY[0x1E0C80A78](v31);
      *(&v48 - 2) = v32;
      swift_bridgeObjectRetain();
      v33 = v52;
      sub_1BA6D3964((uint64_t (*)(char *))sub_1BA6D39B4, (uint64_t)(&v48 - 4), v29);
      v52 = v33;
      sub_1BA50AD30((unint64_t *)&qword_1ED3B0910, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
      v34 = v59;
      v35 = sub_1BB872DE4();
      swift_bridgeObjectRelease();
      v36 = *(_QWORD *)(v35 + 16);
      if (v36)
      {
        v37 = (uint64_t)v57;
        sub_1BA4C2DD8(v35 + v51 + (v36 - 1) * v56, (uint64_t)v57, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v37, 0, 1, v34);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v57, 1, 1, v34);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = v49;
LABEL_20:
      swift_bridgeObjectRetain();
      v38 = sub_1BA6E35A8(v24, v25);
      v40 = v39;
      swift_bridgeObjectRelease();
      if ((v40 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v42 = *a2;
        v60 = *a2;
        *a2 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1BB4C1CDC();
          v42 = v60;
        }
        swift_bridgeObjectRelease();
        sub_1BA81C280(v38, v42);
        *a2 = v42;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v6 = v53;
      v9 = v57;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v57, 1, v59) != 1)
      {
        v43 = v50;
        sub_1BA5193C4((uint64_t)v9, v50, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        sub_1BA5193C4(v43, v54, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v44 = v55;
        else
          v44 = sub_1BA6BAD3C(0, *(_QWORD *)(v55 + 16) + 1, 1, v55);
        v46 = *(_QWORD *)(v44 + 16);
        v45 = *(_QWORD *)(v44 + 24);
        if (v46 >= v45 >> 1)
          v44 = sub_1BA6BAD3C(v45 > 1, v46 + 1, 1, v44);
        *(_QWORD *)(v44 + 16) = v46 + 1;
        v55 = v44;
        sub_1BA5193C4(v54, v44 + v51 + v46 * v56, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        v9 = v57;
        goto LABEL_5;
      }
LABEL_4:
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6BD034);
LABEL_5:
      v20 += v56;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        return v55;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v57, 1, 1, v59);
    goto LABEL_20;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA8A464C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  unint64_t *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;

  v4 = type metadata accessor for FormatService.ThemePackage(0);
  v76 = *(_QWORD *)(v4 - 8);
  v77 = v4;
  MEMORY[0x1E0C80A78](v4);
  v79 = (_QWORD *)((char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6BCBF8(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CA590(0);
  v67 = v10;
  MEMORY[0x1E0C80A78](v10);
  v75 = (uint64_t)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v74 = (uint64_t)v58 - v13;
  MEMORY[0x1E0C80A78](v14);
  v65 = (uint64_t)v58 - v15;
  MEMORY[0x1E0C80A78](v16);
  v73 = (uint64_t)v58 - v17;
  MEMORY[0x1E0C80A78](v18);
  v72 = (uint64_t)v58 - v19;
  sub_1BA8CA624(0);
  v71 = v20;
  MEMORY[0x1E0C80A78](v20);
  v70 = (char *)v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v69 = (_QWORD *)((char *)v58 - v23);
  MEMORY[0x1E0C80A78](v24);
  v68 = (char *)v58 - v25;
  v80 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A01C(0, 0, 0);
  v26 = *(_QWORD *)(a1 + 16);
  v59 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v66 = v26;
  if (!v26)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v80;
  }
  v27 = 0;
  v28 = v59 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v61 = *(_QWORD *)(v7 + 72);
  v29 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0)
    v30 = a2;
  else
    v30 = a2 & 0xFFFFFFFFFFFFFF8;
  v58[0] = v30;
  v63 = a2;
  v64 = a2 & 0xC000000000000001;
  v60 = a2 & 0xFFFFFFFFFFFFFF8;
  v62 = v9;
  v31 = (uint64_t *)v68;
  while (1)
  {
    result = sub_1BA4C2DD8(v28, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    if ((unint64_t)a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v57 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
      if (v27 == v57)
      {
LABEL_20:
        sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        goto LABEL_21;
      }
    }
    else if (v27 == *(_QWORD *)(v29 + 16))
    {
      goto LABEL_20;
    }
    v78 = v28;
    if (v64)
    {
      v33 = MEMORY[0x1BCCE4630](v27, a2);
      goto LABEL_11;
    }
    if (v27 >= *(_QWORD *)(v29 + 16))
      break;
    v33 = *(_QWORD *)(a2 + 8 * v27 + 32);
    swift_retain();
LABEL_11:
    v34 = v67;
    v35 = *(int *)(v67 + 48);
    v36 = v73;
    sub_1BA5193C4((uint64_t)v9, v73, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    *(_QWORD *)(v36 + v35) = v33;
    v37 = v36;
    v38 = v72;
    sub_1BA5193C4(v37, v72, (uint64_t (*)(_QWORD))sub_1BA8CA590);
    v39 = v71;
    v40 = (uint64_t)&v70[*(int *)(v71 + 48)];
    sub_1BA5193C4(v38, v40, (uint64_t (*)(_QWORD))sub_1BA8CA590);
    v41 = (uint64_t)v69;
    v42 = (uint64_t)v69 + *(int *)(v39 + 48);
    *v69 = v27;
    sub_1BA5193C4(v40, v42, (uint64_t (*)(_QWORD))sub_1BA8CA590);
    sub_1BA5193C4(v41, (uint64_t)v31, (uint64_t (*)(_QWORD))sub_1BA8CA624);
    v43 = *v31;
    v44 = (uint64_t)v31 + *(int *)(v39 + 48);
    v45 = *(_QWORD *)(v44 + *(int *)(v34 + 48));
    v46 = v65;
    sub_1BA4C2DD8(v44, v65, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    *(_QWORD *)(v46 + *(int *)(v34 + 48)) = v45;
    v47 = *(int *)(v34 + 48);
    v48 = v74;
    sub_1BA4C2DD8(v46, v74, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    *(_QWORD *)(v48 + v47) = v45;
    v49 = *(int *)(v34 + 48);
    v50 = v75;
    sub_1BA4C2DD8(v46, v75, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    swift_retain();
    sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))sub_1BA8CA590);
    *(_QWORD *)(v50 + v49) = v45;
    v51 = v79;
    *v79 = v43;
    v52 = v77;
    sub_1BA5193C4(v48, (uint64_t)v51 + *(int *)(v77 + 20), (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    *(_QWORD *)((char *)v51 + *(int *)(v52 + 24)) = v45;
    swift_retain();
    sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))sub_1BA8CA624);
    v53 = v80;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC7A01C(0, *(_QWORD *)(v53 + 16) + 1, 1);
      v53 = v80;
    }
    v54 = v78;
    v56 = *(_QWORD *)(v53 + 16);
    v55 = *(_QWORD *)(v53 + 24);
    v29 = v60;
    if (v56 >= v55 >> 1)
    {
      sub_1BAC7A01C(v55 > 1, v56 + 1, 1);
      v53 = v80;
    }
    ++v27;
    *(_QWORD *)(v53 + 16) = v56 + 1;
    sub_1BA5193C4((uint64_t)v79, v53+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(_QWORD *)(v76 + 72) * v56, type metadata accessor for FormatService.ThemePackage);
    v9 = v62;
    v28 = v54 + v61;
    a2 = v63;
    if (v66 == v27)
      goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8A4B98(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unint64_t *__return_ptr, uint64_t, uint64_t, _QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  void (*v36)(uint64_t);
  unint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t result;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(unint64_t *__return_ptr, uint64_t, uint64_t, _QWORD);
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  __int16 v127;
  void (*v128)(uint64_t);

  v6 = v5;
  v103 = a5;
  v102 = a4;
  sub_1BA6BCBF8(0);
  v105 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v115 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (unint64_t)&v86 - v13;
  sub_1BA8CA590(0);
  v108 = v15;
  MEMORY[0x1E0C80A78](v15);
  v97 = (uint64_t)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v96 = (uint64_t)&v86 - v18;
  MEMORY[0x1E0C80A78](v19);
  v90 = (uint64_t)&v86 - v20;
  MEMORY[0x1E0C80A78](v21);
  v89 = (uint64_t)&v86 - v22;
  v23 = type metadata accessor for FormatContentSubgroup();
  v106 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v116 = (uint64_t)&v86 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v92 = (uint64_t)&v86 - v26;
  sub_1BA8CA5AC(0);
  v101 = v27;
  MEMORY[0x1E0C80A78](v27);
  v95 = (uint64_t)&v86 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v88 = (uint64_t)&v86 - v30;
  MEMORY[0x1E0C80A78](v31);
  v87 = (uint64_t)&v86 - v32;
  v33 = *(_QWORD *)(a1 + 16);
  v34 = *(void (**)(uint64_t))(a2 + 16);
  v104 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
    goto LABEL_73;
  v35 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v36 = v35 >= (uint64_t)v34 ? v34 : (void (*)(uint64_t))v35;
    v37 = (uint64_t)v36 >= v33 ? v33 : (unint64_t)v36;
    v128 = (void (*)(uint64_t))MEMORY[0x1E0DEE9D8];
    sub_1BAC79ED4(0, v37 & ~((uint64_t)v37 >> 63), 0);
    v38 = v128;
    v127 = 0;
    if ((v37 & 0x8000000000000000) != 0)
      break;
    v100 = a1;
    v99 = a2;
    v98 = a3;
    if (v37)
    {
      v91 = v14;
      v33 = a3 & 0xFFFFFFFFFFFFFF8;
      if (a3 < 0)
        v39 = a3;
      else
        v39 = a3 & 0xFFFFFFFFFFFFFF8;
      v86 = v39;
      v94 = a3 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v14 = 0;
      v93 = a3 & 0xFFFFFFFFFFFFFF8;
      v107 = v37;
      do
      {
        if (v37 == v14)
        {
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
        v41 = *(_QWORD *)(a1 + 16);
        if (v14 == v41)
          goto LABEL_77;
        if (v14 >= v41)
          goto LABEL_67;
        sub_1BA4C2DD8(a1+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(_QWORD *)(v106 + 72) * v14, v116, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
        v42 = *(_QWORD *)(a2 + 16);
        if (v14 == v42)
          goto LABEL_76;
        if (v14 >= v42)
          goto LABEL_68;
        v34 = v38;
        sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v14, v115, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        if (v104)
        {
          swift_bridgeObjectRetain();
          v60 = sub_1BB873F30();
          swift_bridgeObjectRelease();
          if (v14 == v60)
            goto LABEL_75;
        }
        else if (v14 == *(_QWORD *)(v33 + 16))
        {
          goto LABEL_75;
        }
        if (v94)
        {
          v43 = MEMORY[0x1BCCE4630](v14, a3);
        }
        else
        {
          if (v14 >= *(_QWORD *)(v33 + 16))
            goto LABEL_69;
          v43 = *(_QWORD *)(a3 + 8 * v14 + 32);
          swift_retain();
        }
        v44 = v108;
        v45 = *(int *)(v108 + 48);
        v46 = v97;
        sub_1BA5193C4(v115, v97, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
        *(_QWORD *)(v46 + v45) = v43;
        v47 = v96;
        sub_1BA5193C4(v46, v96, (uint64_t (*)(_QWORD))sub_1BA8CA590);
        v48 = v95;
        v49 = v95 + *(int *)(v101 + 48);
        sub_1BA5193C4(v116, v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
        sub_1BA5193C4(v47, v49, (uint64_t (*)(_QWORD))sub_1BA8CA590);
        v102(&v117, v48, v49, *(_QWORD *)(v49 + *(int *)(v44 + 48)));
        if (v6)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BA8CA5AC);
        }
        v114 = 0;
        sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BA8CA5AC);
        v50 = v118;
        v52 = v119;
        v51 = v120;
        v53 = v121;
        v54 = v122;
        v112 = v123;
        v113 = v117;
        v110 = v125;
        v111 = v124;
        v109 = v126;
        v38 = v34;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_1BAC79ED4(0, *((_QWORD *)v34 + 2) + 1, 1);
          v38 = v128;
        }
        v56 = *((_QWORD *)v38 + 2);
        v55 = *((_QWORD *)v38 + 3);
        v34 = (void (*)(uint64_t))(v56 + 1);
        if (v56 >= v55 >> 1)
        {
          result = sub_1BAC79ED4(v55 > 1, v56 + 1, 1);
          v38 = v128;
        }
        ++v14;
        *((_QWORD *)v38 + 2) = v34;
        v57 = (_QWORD *)((char *)v38 + 80 * v56);
        v57[4] = v113;
        v57[5] = v50;
        v57[6] = v52;
        v57[7] = v51;
        v57[8] = v53;
        v57[9] = v54;
        v58 = v111;
        v57[10] = v112;
        v57[11] = v58;
        v59 = v109;
        v57[12] = v110;
        v57[13] = v59;
        v37 = v107;
        v6 = v114;
        a1 = v100;
        a2 = v99;
        a3 = v98;
        v33 = v93;
      }
      while (v107 != v14);
      v14 = v91;
      if ((v127 & 1) != 0)
        goto LABEL_64;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v33 = a3 & 0xFFFFFFFFFFFFFF8;
    if (a3 < 0)
      v61 = a3;
    else
      v61 = a3 & 0xFFFFFFFFFFFFFF8;
    v97 = v61;
    v62 = *(_QWORD *)(a1 + 16);
    if (v37 == v62)
    {
LABEL_64:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v128;
    }
    LODWORD(v111) = HIBYTE(v127);
    v34 = sub_1BA6BCBF8;
    v109 = a3 & 0xFFFFFFFFFFFFFF8;
    v110 = a3 & 0xC000000000000001;
    v91 = v14;
    while (v37 < v62)
    {
      sub_1BA4C2DD8(a1+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(_QWORD *)(v106 + 72) * v37, v92, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
      if ((v111 & 1) != 0)
        goto LABEL_63;
      v63 = *(_QWORD *)(a2 + 16);
      if (v37 == v63)
        goto LABEL_63;
      if (v37 >= v63)
        goto LABEL_71;
      sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v37, v14, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
      if (v104)
      {
        swift_bridgeObjectRetain();
        v85 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (v37 == v85)
        {
LABEL_62:
          sub_1BA4A2E80(v14, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
LABEL_63:
          sub_1BA4A2E80(v92, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
          goto LABEL_64;
        }
      }
      else if (v37 == *(_QWORD *)(v33 + 16))
      {
        goto LABEL_62;
      }
      v107 = v37;
      if (v110)
      {
        v64 = MEMORY[0x1BCCE4630](v37, a3);
      }
      else
      {
        if (v37 >= *(_QWORD *)(v33 + 16))
          goto LABEL_72;
        v64 = *(_QWORD *)(a3 + 8 * v37 + 32);
        swift_retain();
      }
      v65 = *(int *)(v108 + 48);
      v66 = v90;
      sub_1BA5193C4(v14, v90, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
      *(_QWORD *)(v66 + v65) = v64;
      v67 = v89;
      sub_1BA5193C4(v66, v89, (uint64_t (*)(_QWORD))sub_1BA8CA590);
      v68 = v101;
      v69 = v88;
      v70 = v88 + *(int *)(v101 + 48);
      sub_1BA5193C4(v92, v88, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
      sub_1BA5193C4(v67, v70, (uint64_t (*)(_QWORD))sub_1BA8CA590);
      v71 = v87;
      sub_1BA5193C4(v69, v87, (uint64_t (*)(_QWORD))sub_1BA8CA5AC);
      v102(&v117, v71, v71 + *(int *)(v68 + 48), *(_QWORD *)(v71 + *(int *)(v68 + 48) + *(int *)(v108 + 48)));
      sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))sub_1BA8CA5AC);
      if (v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_release();
      }
      v73 = v117;
      v72 = v118;
      v74 = v119;
      v75 = v120;
      v76 = v121;
      v115 = v123;
      v116 = v122;
      v113 = v125;
      v114 = v124;
      v112 = v126;
      v77 = v128;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79ED4(0, *((_QWORD *)v77 + 2) + 1, 1);
        v77 = v128;
      }
      v79 = *((_QWORD *)v77 + 2);
      v78 = *((_QWORD *)v77 + 3);
      if (v79 >= v78 >> 1)
      {
        sub_1BAC79ED4(v78 > 1, v79 + 1, 1);
        v77 = v128;
      }
      v80 = v107 + 1;
      *((_QWORD *)v77 + 2) = v79 + 1;
      v37 = v80;
      v81 = (_QWORD *)((char *)v77 + 80 * v79);
      v81[4] = v73;
      v81[5] = v72;
      v81[6] = v74;
      v81[7] = v75;
      v82 = v116;
      v81[8] = v76;
      v81[9] = v82;
      v83 = v114;
      v81[10] = v115;
      v81[11] = v83;
      v84 = v112;
      v81[12] = v113;
      v81[13] = v84;
      a1 = v100;
      v62 = *(_QWORD *)(v100 + 16);
      a2 = v99;
      a3 = v98;
      v14 = v91;
      v33 = v109;
      v34 = sub_1BA6BCBF8;
      if (v37 == v62)
        goto LABEL_64;
    }
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    swift_bridgeObjectRetain();
    v35 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_75:
  sub_1BA4A2E80(v115, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
LABEL_76:
  result = sub_1BA4A2E80(v116, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t FormatServiceType.resolve(content:pool:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  void *v7;
  uint64_t v8;

  result = (*(uint64_t (**)(void))(a5 + 8))();
  if (!v5)
  {
    v7 = (void *)sub_1BB86E854();
    type metadata accessor for FormatContent.Resolved();
    v8 = sub_1BB86E974();
    swift_release();

    return v8;
  }
  return result;
}

uint64_t sub_1BA8A5674@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4C2DD8(*a1 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
}

uint64_t sub_1BA8A56B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t result;
  unsigned __int8 v5;

  v3 = *(unsigned __int8 *)(v2 + 472);
  if (v3 != 2)
    return v3 & 1;
  if (qword_1ED3BA620 != -1)
    swift_once();
  sub_1BA50AD30(&qword_1ED3B3C00, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatService, (uint64_t)&protocol conformance descriptor for FormatService);
  sub_1BB86D210();
  result = v5;
  *(_BYTE *)(v2 + 472) = v5;
  return result;
}

uint64_t sub_1BA8A5760(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t result;
  unsigned __int8 v5;

  v3 = *(unsigned __int8 *)(v2 + 473);
  if (v3 != 2)
    return v3 & 1;
  if (qword_1ED3BA628 != -1)
    swift_once();
  sub_1BA50AD30(&qword_1ED3B3C00, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatService, (uint64_t)&protocol conformance descriptor for FormatService);
  sub_1BB86D210();
  result = v5;
  *(_BYTE *)(v2 + 473) = v5;
  return result;
}

uint64_t *FormatService.resolveResult(content:pool:options:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;

  v65 = a3;
  v67 = a2;
  v4 = type metadata accessor for FormatContentPool();
  v60 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v61 = v5;
  v62 = (uint64_t)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for FormatServiceOptions();
  v57 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v58 = v6;
  v59 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6D940C(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatContent(0);
  v55 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = v11;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v54 - v15);
  v68 = v3;
  v17 = objc_msgSend(*(id *)(v3 + 152), sel_appConfigurationManager, v14);
  type metadata accessor for FeedAppConfigManager();
  *(_QWORD *)(swift_initStackObject() + 16) = v17;
  type metadata accessor for FormatFeedConfigManager();
  swift_initStackObject();
  sub_1BA90728C();
  v18 = FeedAppConfigManager.segmentSetIds.getter();
  swift_release();
  swift_unknownObjectRelease();
  v19 = swift_bridgeObjectRetain();
  v20 = v64;
  sub_1BA8C406C(v19, v18);
  v22 = v21;
  swift_bridgeObjectRelease();
  v69 = v22;
  sub_1BA4B07F0(0, &qword_1ED3B9518, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC(&qword_1ED3D2590, &qword_1ED3B9518, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, MEMORY[0x1E0DEAF38]);
  v23 = MEMORY[0x1E0DEA968];
  v24 = v65;
  v25 = sub_1BB872BC8();
  v64 = v20;
  swift_bridgeObjectRelease();
  v26 = sub_1BB871E24();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 1, 1, v26);
  v69 = 0;
  FormatContent.copy(identifier:tagID:issueID:articleID:webEmbedID:sponsoredAdBanner:properties:themes:subgroups:selectors:)(0, 0, 0, 0, 0, 0, 0, 0, v12, 0, 0, (uint64_t)v9, 0, &v69, v25, 0);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6D940C);
  sub_1BAFD7D78((uint64_t)v12, (uint64_t)v16);
  v63 = v12;
  v27 = (uint64_t)v12;
  v28 = v23;
  sub_1BA4A2E80(v27, type metadata accessor for FormatContent);
  v29 = *(_QWORD *)(v24 + *(int *)(v66 + 52));
  sub_1BA7AA598();
  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BB87D7A0;
  v32 = *v16;
  v31 = v16[1];
  *(_QWORD *)(v30 + 56) = v28;
  v33 = sub_1BA6A2D8C();
  *(_QWORD *)(v30 + 64) = v33;
  *(_QWORD *)(v30 + 32) = v32;
  *(_QWORD *)(v30 + 40) = v31;
  v34 = *(_QWORD *)(*(uint64_t *)((char *)v16 + *(int *)(v10 + 56)) + 16);
  v35 = MEMORY[0x1E0DEB418];
  v36 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v30 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v30 + 104) = v36;
  *(_QWORD *)(v30 + 72) = v34;
  v37 = *(_QWORD *)(*(uint64_t *)((char *)v16 + *(int *)(v10 + 60)) + 16);
  *(_QWORD *)(v30 + 136) = v35;
  *(_QWORD *)(v30 + 144) = v36;
  *(_QWORD *)(v30 + 112) = v37;
  v38 = qword_1ED3BB468;
  swift_bridgeObjectRetain();
  if (v38 != -1)
    swift_once();
  v39 = sub_1BB86EB84();
  __swift_project_value_buffer(v39, (uint64_t)qword_1ED3B8FC8);
  v40 = sub_1BB86EB24();
  *(_QWORD *)(v30 + 176) = v28;
  *(_QWORD *)(v30 + 184) = v33;
  *(_QWORD *)(v30 + 152) = v40;
  *(_QWORD *)(v30 + 160) = v41;
  v42 = sub_1BB87330C();
  sub_1BB86EF44("FormatService content %{public}@ resolving %ld themes and %ld subgroups against format version %{public}@", 105, 2, &dword_1BA493000, v29, v42, v30);
  swift_bridgeObjectRelease();
  v43 = v67;
  v44 = v68;
  v45 = v64;
  v66 = sub_1BA8A6304(v16, v67, v24);
  if (!v45)
  {
    v46 = v59;
    sub_1BA4C2DD8(v24, v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
    sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v63, type metadata accessor for FormatContent);
    v47 = v62;
    sub_1BA4C2DD8((uint64_t)v43, v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
    v48 = (*(unsigned __int8 *)(v57 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    v49 = (v58 + *(unsigned __int8 *)(v55 + 80) + v48) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    v50 = (v56 + *(unsigned __int8 *)(v60 + 80) + v49) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = v44;
    sub_1BA5193C4(v46, v51 + v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
    sub_1BA5193C4((uint64_t)v63, v51 + v49, type metadata accessor for FormatContent);
    sub_1BA5193C4(v47, v51 + v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
    swift_retain();
    v52 = (void *)sub_1BB86E854();
    type metadata accessor for FormatServiceResult();
    v43 = (uint64_t *)sub_1BB86E968();
    swift_release();
    swift_release();

  }
  sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatContent);
  return v43;
}

BOOL sub_1BA8A5DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;

  v34 = a2;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - v4;
  v6 = (int *)type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 40);
  sub_1BA8CAF1C(v9, (uint64_t)v5, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v10 = *(_QWORD *)&v8[v6[10]];
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRelease();
  if (v11)
  {
    sub_1BA8CAF1C(v9, (uint64_t)v5, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    sub_1BA5193C4((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v12 = *(_QWORD *)&v8[v6[10]];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    if (qword_1ED3C10B8 != -1)
      swift_once();
    v13 = qword_1ED3C10A0;
    v14 = unk_1ED3C10A8;
    sub_1BA653B2C(qword_1ED3C10A0, unk_1ED3C10A8);
    v15 = sub_1BAB0BFCC(v13, v14, v12);
    swift_bridgeObjectRelease();
    sub_1BA6DB13C(v13, v14);
    if ((v15 & 1) == 0)
      return 0;
  }
  sub_1BA8CAF1C(v9, (uint64_t)v5, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v16 = *(_QWORD *)&v8[v6[11]];
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v17 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    sub_1BA8CAF1C(v9, (uint64_t)v5, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    sub_1BA5193C4((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v18 = *(_QWORD *)&v8[v6[11]];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    if (qword_1ED3C10B8 != -1)
      swift_once();
    v19 = qword_1ED3C10A0;
    v20 = unk_1ED3C10A8;
    sub_1BA653B2C(qword_1ED3C10A0, unk_1ED3C10A8);
    v21 = sub_1BAB0BFCC(v19, v20, v18);
    swift_bridgeObjectRelease();
    sub_1BA6DB13C(v19, v20);
    if ((v21 & 1) != 0)
      return 0;
  }
  sub_1BA8CAF1C(v9, (uint64_t)v5, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v22 = *(_QWORD *)&v8[v6[8]];
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v23 = v34;
  sub_1BA5F9B5C(v34, v22, (uint64_t)&v35);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v33 = v36;
  *((_QWORD *)&v33 + 1) = v35;
  v24 = v37;
  sub_1BA8CAF1C(v9, (uint64_t)v5, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v25 = *(_QWORD *)&v8[v6[9]];
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA5F98F8(v23, v25, (uint64_t)&v35);
  swift_bridgeObjectRelease();
  v27 = v35;
  v26 = v36;
  v28 = v37;
  sub_1BA8CF7A4();
  if (!v24)
  {
    sub_1BA5F1DE8(v27, v26, v28);
    v29 = *((_QWORD *)&v33 + 1);
    v30 = v33;
LABEL_14:
    v31 = 0;
    goto LABEL_17;
  }
  if (v24 == 1)
  {
    sub_1BA5F1DE8(v27, v26, v28);
    v29 = *((_QWORD *)&v33 + 1);
    v30 = v33;
LABEL_12:
    v31 = 1;
LABEL_17:
    sub_1BA5F1DE8(v29, v30, v31);
    return 0;
  }
  if (v33 != 0)
  {
    v29 = v27;
    v30 = v26;
    v31 = v28;
    goto LABEL_17;
  }
  if (!v28)
  {
    v29 = v27;
    v30 = v26;
    goto LABEL_14;
  }
  if (v28 == 1)
  {
    v29 = v27;
    v30 = v26;
    goto LABEL_12;
  }
  return !(v26 | v27);
}

uint64_t sub_1BA8A6304(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  int8x16_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  _QWORD v59[3];
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char v89[8];
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char v93[8];
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  char v97[8];
  char v98[8];
  __int128 v99;

  v5 = v3;
  v73 = a3;
  v63 = a2;
  v72 = *v3;
  v7 = type metadata accessor for FormatServiceOptions();
  v70 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v71 = v8;
  v88 = (uint64_t)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatContentPool();
  v68 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v69 = v10;
  v87 = (uint64_t)v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatContent(0);
  v66 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v67 = v12;
  v85 = (uint64_t)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (void *)v5[61];
  sub_1BA4C010C((uint64_t)(v5 + 62), (uint64_t)&v99);
  v18 = *a1;
  v17 = a1[1];
  type metadata accessor for FormatServiceResolverServices();
  v19 = (_QWORD *)swift_allocObject();
  v86 = v19;
  v19[2] = v16;
  sub_1BA4CECCC(&v99, (uint64_t)(v19 + 3));
  v19[8] = v18;
  v19[9] = v17;
  v20 = v16;
  swift_bridgeObjectRetain();
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1BA8A05A4(v21);
  swift_bridgeObjectRelease();
  v23 = v73;
  v84 = sub_1BA8C9054(*(uint64_t *)((char *)a1 + *(int *)(v11 + 56)));
  v24 = sub_1BB86C67C();
  v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v80 = v15;
  v82(v15, 1, 1, v24);
  sub_1BA4F5FBC(0);
  v94 = v5;
  v95 = v15;
  v96 = v23;
  v65 = v22;
  v25 = sub_1BA8A2140((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8C9BD0, (uint64_t)v93, v22, (uint64_t)v98, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  v81 = v4;
  *(_QWORD *)&v99 = v25;
  v26 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3B9300, (uint64_t (*)(uint64_t))sub_1BA4F5FBC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC(&qword_1ED3B9308, &qword_1ED3B9300, (uint64_t (*)(uint64_t))sub_1BA4F5FBC, MEMORY[0x1E0DEAF50]);
  v83 = sub_1BB86E920();
  swift_bridgeObjectRelease();

  v27 = v73;
  v28 = (uint64_t)v80;
  sub_1BA4A2E80((uint64_t)v80, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v82((char *)v28, 1, 1, v24);
  v90 = v5;
  v91 = v28;
  v92 = v27;
  v29 = v81;
  v30 = sub_1BA8A2140((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8C9BD0, (uint64_t)v89, v84, (uint64_t)v97, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  v64 = v29;
  *(_QWORD *)&v99 = v30;
  v31 = (void *)sub_1BB86E854();
  v32 = v63;
  v79 = sub_1BB86E920();
  swift_bridgeObjectRelease();

  sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v74 = sub_1BA8A70D0(v32, v27, a1, (uint64_t)v86);
  v82 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1BA8A8608((uint64_t)v32, v27, a1);
  v81 = sub_1BA8A8ED8((uint64_t)v32, v27, a1);
  v80 = (char *)sub_1BA8A9614((uint64_t)v32, v27, a1);
  v78 = sub_1BA8AA0D0((uint64_t)v32, v27, a1);
  v62 = sub_1BA8AA998(v27, a1);
  v77 = sub_1BA8AAC98((uint64_t)v32, v27, a1);
  v76 = sub_1BA8AB5D4((uint64_t)v32, v27, a1);
  v75 = sub_1BA8ABAC0((uint64_t)v32, v27, a1);
  v61 = sub_1BA8ABF78(v27, a1);
  v33 = FormatContent.requirements.getter();
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    v35 = (_BYTE *)(v33 + 72);
    while (1)
    {
      if (*v35 == 17)
      {
        v36 = vorrq_s8(*(int8x16_t *)(v35 - 40), *(int8x16_t *)(v35 - 24));
        if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v36.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v36, v36, 8uLL)) | *((_QWORD *)v35 - 1)))
          break;
      }
      v35 += 48;
      if (!--v34)
        goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    v37 = v5[47];
    v38 = v5[48];
    __swift_project_boxed_opaque_existential_1(v5 + 44, v37);
    v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    *(_QWORD *)&v99 = sub_1BA8F2AEC(MEMORY[0x1E0DEE9D8]);
    sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4860, (uint64_t (*)(uint64_t))sub_1BA81E3D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v39 = sub_1BB86E9E0();
  }
  v40 = v39;
  v59[0] = v5;
  v60 = sub_1BA8AC18C(v32, v27, a1);
  MEMORY[0x1E0C80A78](v60);
  v41 = v79;
  v59[-12] = v83;
  v59[-11] = v41;
  v42 = v82;
  v59[-10] = v74;
  v59[-9] = v42;
  v43 = (uint64_t)v80;
  v59[-8] = v81;
  v59[-7] = v43;
  v59[-6] = v78;
  v59[-5] = v40;
  v59[2] = v40;
  v44 = v77;
  v59[-4] = v45;
  v59[-3] = v44;
  v46 = v75;
  v59[-2] = v76;
  v59[-1] = v46;
  sub_1BA8C9C70();
  v59[1] = sub_1BB86EC14();
  sub_1BA4C2DD8((uint64_t)a1, v85, type metadata accessor for FormatContent);
  sub_1BA4C2DD8((uint64_t)v32, v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA4C2DD8(v27, v88, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v47 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  v48 = (v67 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  v49 = (*(unsigned __int8 *)(v68 + 80) + v48 + 8) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  v50 = (v69 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  v51 = (v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  v52 = (v51 + 15) & 0xFFFFFFFFFFFFFFF8;
  v53 = (*(unsigned __int8 *)(v70 + 80) + v52 + 8) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  v54 = (v71 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject();
  sub_1BA5193C4(v85, v55 + v47, type metadata accessor for FormatContent);
  *(_QWORD *)(v55 + v48) = v86;
  sub_1BA5193C4(v87, v55 + v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  *(_QWORD *)(v55 + v50) = v62;
  *(_QWORD *)(v55 + v51) = v61;
  *(_QWORD *)(v55 + v52) = v84;
  sub_1BA5193C4(v88, v55 + v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  *(_QWORD *)(v55 + v54) = v65;
  swift_retain();
  v56 = (void *)sub_1BB86E854();
  type metadata accessor for FormatServiceResult();
  v57 = sub_1BB86E98C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v57;
}

uint64_t sub_1BA8A6C08(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v29 = a4;
  v30 = a5;
  v7 = type metadata accessor for FormatContentPool();
  v31 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v31 + 64);
  MEMORY[0x1E0C80A78](v7);
  v33 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatContent(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v32 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatServiceOptions();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v17 = v34;
  v18 = FormatService.prefetch(content:options:)(v16 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, a3);
  if (!v17)
  {
    v28 = v18;
    v34 = 0;
    sub_1BA4C2DD8(a3, (uint64_t)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
    v19 = v32;
    sub_1BA4C2DD8(v29, v32, type metadata accessor for FormatContent);
    v20 = v33;
    sub_1BA4C2DD8(v30, v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
    v21 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v22 = (v14 + *(unsigned __int8 *)(v10 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v23 = (v11 + *(unsigned __int8 *)(v31 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v24 = (v8 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v25 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v15, v25 + v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
    sub_1BA5193C4(v19, v25 + v22, type metadata accessor for FormatContent);
    sub_1BA5193C4(v20, v25 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
    *(_QWORD *)(v25 + v24) = v16;
    swift_retain();
    v26 = (void *)sub_1BB86E854();
    type metadata accessor for FormatServiceResult();
    v14 = sub_1BB86E974();
    swift_release();
    swift_release();

  }
  return v14;
}

uint64_t sub_1BA8A6E68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;

  v26 = a3;
  v27 = a4;
  v28 = a1;
  v29 = a6;
  v8 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatContentPool();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - v15;
  v17 = type metadata accessor for FormatContent(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for FormatServiceOptions();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a2, (uint64_t)v22, v23);
  sub_1BA4C2DD8(v26, (uint64_t)v19, type metadata accessor for FormatContent);
  sub_1BA4C2DD8(v27, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA4C2DD8(v28, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4C2DD8(a5 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  v24 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v22, v24 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4((uint64_t)v19, v24 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, type metadata accessor for FormatContent);
  sub_1BA5193C4((uint64_t)v16, v24 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA5193C4((uint64_t)v10, v24 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  result = sub_1BA5193C4((uint64_t)v13, v24 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  *v29 = v24;
  return result;
}

uint64_t sub_1BA8A70D0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t result;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char v108;
  void *v109;
  void *ObjectType;
  id v111;
  void *v112;
  char *v113;
  _QWORD *v114;
  void (*v115)(uint64_t, char *, uint64_t);
  char *v116;
  uint64_t v117;
  unsigned int (*v118)(uint64_t, uint64_t, uint64_t);
  uint64_t v119;
  double v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  void *v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  uint64_t v189;
  unsigned int (*v190)(uint64_t, uint64_t, uint64_t);
  uint64_t v191;
  unint64_t v192;
  char *v193;
  uint64_t v194;
  void (*v195)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t *v201;
  char *v202;
  id v203;
  char *v204;
  char *v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  uint64_t v212;
  unint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;

  v200 = a4;
  v201 = a1;
  v183 = *v4;
  v7 = type metadata accessor for FormatContent(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v187 = type metadata accessor for FormatServiceOptions();
  v177 = *(_QWORD *)(v187 - 8);
  MEMORY[0x1E0C80A78](v187);
  v178 = v10;
  v11 = (char *)&v172 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v12);
  v193 = (char *)&v172 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_1BB86C8B0();
  v211 = *(_QWORD **)(v209 - 8);
  MEMORY[0x1E0C80A78](v209);
  v204 = (char *)&v172 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v205 = (char *)&v172 - v16;
  v212 = sub_1BB86C67C();
  v208 = *(_QWORD *)(v212 - 8);
  MEMORY[0x1E0C80A78](v212);
  v173 = (char *)&v172 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v186 = (uint64_t)&v172 - v19;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v20);
  v176 = (char *)&v172 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v174 = (char *)&v172 - v23;
  MEMORY[0x1E0C80A78](v24);
  v185 = (uint64_t)&v172 - v25;
  MEMORY[0x1E0C80A78](v26);
  v194 = (uint64_t)&v172 - v27;
  MEMORY[0x1E0C80A78](v28);
  v184 = (uint64_t)&v172 - v29;
  MEMORY[0x1E0C80A78](v30);
  v196 = (uint64_t)&v172 - v31;
  MEMORY[0x1E0C80A78](v32);
  v190 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v172 - v33);
  MEMORY[0x1E0C80A78](v34);
  v202 = (char *)&v172 - v35;
  MEMORY[0x1E0C80A78](v36);
  v210 = (uint64_t)&v172 - v37;
  MEMORY[0x1E0C80A78](v38);
  v199 = (char *)&v172 - v39;
  sub_1BA4CDF6C(0, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v40);
  v198 = (uint64_t)&v172 - v41;
  v197 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1E0C80A78](v197);
  v175 = (uint64_t)&v172 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  v192 = (unint64_t)&v172 - v44;
  MEMORY[0x1E0C80A78](v45);
  v195 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v172 - v46);
  MEMORY[0x1E0C80A78](v47);
  v207 = (unint64_t)&v172 - v48;
  v49 = FormatContent.requirements.getter();
  v50 = Array<A>.articles.getter(v49);
  swift_bridgeObjectRelease();
  v215 = v50;
  sub_1BA4B07F0(0, &qword_1ED3C0388, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC((unint64_t *)&unk_1ED3C0390, &qword_1ED3C0388, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticle, MEMORY[0x1E0DEAF38]);
  v51 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v52 = MEMORY[0x1E0DEE9D8];
  v217 = MEMORY[0x1E0DEE9D8];
  v53 = swift_allocObject();
  v189 = v53;
  *(_QWORD *)(v53 + 16) = v52;
  v214 = (_QWORD *)(v53 + 16);
  v54 = *(_BYTE *)(a2 + 48);
  v191 = a2;
  v213 = v51;
  v182 = (uint64_t)&v172 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = a3;
  v181 = v9;
  v180 = v8;
  v179 = v11;
  if ((v54 & 1) == 0)
  {
    v97 = *(double *)(a2 + 40);
    v55 = v51;
    if (v51 >> 62)
    {
      swift_bridgeObjectRetain();
      v98 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v98 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v99 = v201;
    v100 = (uint64_t)v193;
    if (!v98)
      goto LABEL_72;
    v62 = v51 & 0xC000000000000001;
    v101 = 4;
    v207 = v51 & 0xC000000000000001;
    v210 = v98;
    while (1)
    {
      v51 = v101 - 4;
      if (v62)
      {
        v102 = MEMORY[0x1BCCE4630](v101 - 4, v55);
        v103 = v101 - 3;
        if (__OFADD__(v51, 1))
          goto LABEL_80;
      }
      else
      {
        v102 = *(_QWORD *)(v55 + 8 * v101);
        swift_retain();
        v103 = v101 - 3;
        if (__OFADD__(v51, 1))
        {
LABEL_80:
          __break(1u);
LABEL_81:
          swift_bridgeObjectRetain();
          v148 = sub_1BB873F30();
          swift_bridgeObjectRelease();
LABEL_74:
          v149 = v188;
          v150 = MEMORY[0x1E0DEB418];
          v151 = MEMORY[0x1E0DEB490];
          *(_QWORD *)(v55 + 56) = MEMORY[0x1E0DEB418];
          *(_QWORD *)(v55 + 64) = v151;
          *(_QWORD *)(v55 + 32) = v148;
          v152 = *v214;
          v153 = *v214 >> 62;
          if (v153)
          {
            swift_bridgeObjectRetain();
            v154 = sub_1BB873F30();
            swift_bridgeObjectRelease();
          }
          else
          {
            v154 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          *(_QWORD *)(v55 + 96) = v150;
          *(_QWORD *)(v55 + 104) = v151;
          *(_QWORD *)(v55 + 72) = v154;
          v156 = *v149;
          v155 = v149[1];
          *(_QWORD *)(v55 + 136) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v55 + 144) = sub_1BA6A2D8C();
          *(_QWORD *)(v55 + 112) = v156;
          *(_QWORD *)(v55 + 120) = v155;
          swift_bridgeObjectRetain();
          v157 = sub_1BB87330C();
          sub_1BB86EF44("Format service will resolve %ld prefetched and %ld unresolved headlines for %{public}@", 86, 2, &dword_1BA493000, v51, v157, v55);
          v158 = swift_bridgeObjectRelease();
          if (v153)
          {
            swift_bridgeObjectRetain();
            v170 = sub_1BB873F30();
            v158 = swift_bridgeObjectRelease();
            if (!v170)
              goto LABEL_84;
LABEL_78:
            MEMORY[0x1E0C80A78](v158);
            v159 = v214;
            *(&v172 - 4) = v206;
            *(&v172 - 3) = (uint64_t)v159;
            v160 = v191;
            *(&v172 - 2) = v191;
            sub_1BA6CA500(0, (unint64_t *)&qword_1ED3D4440, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
            sub_1BB86EC14();
            v161 = (uint64_t)v179;
            sub_1BA4C2DD8(v160, (uint64_t)v179, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
            v162 = v182;
            sub_1BA4C2DD8((uint64_t)v149, v182, type metadata accessor for FormatContent);
            v163 = v217;
            v164 = (*(unsigned __int8 *)(v177 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80);
            v165 = (v178 + *(unsigned __int8 *)(v180 + 80) + v164) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80);
            v166 = (_QWORD *)swift_allocObject();
            v167 = v200;
            v166[2] = v189;
            v166[3] = v167;
            v166[4] = v163;
            sub_1BA5193C4(v161, (uint64_t)v166 + v164, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
            sub_1BA5193C4(v162, (uint64_t)v166 + v165, type metadata accessor for FormatContent);
            swift_retain();
            swift_retain();
            v168 = (void *)sub_1BB86E854();
            v169 = sub_1BB86E98C();
            swift_release();
            swift_release();
            swift_release();

          }
          else
          {
            if (*(_QWORD *)((v152 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_78;
LABEL_84:
            v171 = sub_1BA8B0774(v62, v191, v149);
            swift_bridgeObjectRelease();
            v216 = v171;
            sub_1BA8CB71C();
            swift_allocObject();
            v169 = sub_1BB86E9E0();
            swift_release();
          }
          return v169;
        }
      }
      v104 = *v99;
      if (!*(_QWORD *)(*v99 + 16))
        goto LABEL_53;
      v106 = *(_QWORD *)(v102 + 16);
      v105 = *(_QWORD *)(v102 + 24);
      swift_bridgeObjectRetain();
      v107 = sub_1BA6E35A8(v106, v105);
      if ((v108 & 1) != 0)
        break;
      swift_bridgeObjectRelease();
LABEL_53:
      v121 = swift_retain();
      v122 = v214;
      MEMORY[0x1BCCE36AC](v121);
      if (*(_QWORD *)((*v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      swift_release();
LABEL_56:
      ++v101;
      v55 = v213;
      if (v103 == v98)
        goto LABEL_72;
    }
    v109 = *(void **)(*(_QWORD *)(v104 + 56) + 8 * v107);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    ObjectType = (void *)swift_getObjectType();
    v111 = objc_msgSend(v109, sel_lastFetchedDate);
    if (v111)
    {
      v112 = v111;
      v203 = ObjectType;
      v113 = v204;
      sub_1BB86C874();

      v114 = v211;
      v115 = (void (*)(uint64_t, char *, uint64_t))v211[4];
      v116 = v113;
      v117 = v209;
      v115(v100, v116, v209);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v114[7])(v100, 0, 1, v117);
      v118 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v114[6];
      v62 = v207;
      v119 = (uint64_t)v205;
      if (v118(v100, 1, v117) != 1)
      {
        v115(v119, (char *)v100, v117);
        sub_1BB86C844();
        if (v97 >= -v120)
        {
          v123 = v102 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
          swift_beginAccess();
          v124 = v198;
          sub_1BA8CAF1C(v123, v198, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
          sub_1BA5193C4(v124, v192, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
          v125 = v206;
          v126 = (char *)objc_msgSend(objc_msgSend(*(id *)(v206 + 152), sel_configurationManager), sel_configuration);
          result = swift_unknownObjectRelease();
          v98 = v210;
          v202 = v126;
          if (!v126)
            goto LABEL_89;
          v199 = *(char **)(v125 + 136);
          v127 = *(_QWORD *)(v200 + 72);
          v186 = *(_QWORD *)(v200 + 64);
          v196 = v127;
          sub_1BA8CAF1C(v123, v124, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
          v128 = v175;
          sub_1BA5193C4(v124, v175, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
          v129 = v185;
          sub_1BA4C2DD8(v128 + *(int *)(v197 + 36), v185, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
          v130 = v196;
          swift_bridgeObjectRetain();
          sub_1BA4A2E80(v128, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
          v131 = v208;
          v132 = v212;
          v190 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v208 + 48);
          if (v190(v129, 1, v212) == 1)
          {
            v133 = objc_msgSend(v109, sel_routeURL);
            v100 = (uint64_t)v193;
            if (v133)
            {
              v134 = v133;
              v135 = (uint64_t)v174;
              sub_1BB86C5EC();

              v136 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v208 + 56);
              v137 = (char *)v135;
              v138 = 0;
            }
            else
            {
              v136 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v208 + 56);
              v135 = (uint64_t)v174;
              v137 = v174;
              v138 = 1;
            }
            v195 = v136;
            v136((uint64_t)v137, v138, 1, v132);
            v140 = (uint64_t)v176;
            sub_1BA5193C4(v135, v194, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            sub_1BA4A2E80(v185, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            if (!v130)
            {
LABEL_68:
              v141 = 1;
LABEL_69:
              v145 = v184;
              v195(v184, v141, 1, v132);
              sub_1BA4A2E80(v194, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
              swift_bridgeObjectRelease();
              v146 = v192;
              v203 = FCHeadlineProviding.overridden(by:configuration:assetManager:routeURL:)(v192, (uint64_t)v202, v199, v145);
              swift_unknownObjectRelease();
              sub_1BA4A2E80(v145, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
              v147 = sub_1BA4A2E80(v146, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
              MEMORY[0x1BCCE36AC](v147);
              if (*(_QWORD *)((v217 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v217 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1BB872E44();
              sub_1BB872E8C();
              sub_1BB872DCC();
              swift_release();
              swift_unknownObjectRelease();
              ((void (*)(char *, uint64_t))v211[1])(v205, v209);
              v99 = v201;
              v62 = v207;
              goto LABEL_56;
            }
          }
          else
          {
            v139 = v194;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v131 + 32))(v194, v129, v132);
            v195 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56);
            v195(v139, 0, 1, v132);
            v100 = (uint64_t)v193;
            v140 = (uint64_t)v176;
            if (!v130)
              goto LABEL_68;
          }
          sub_1BA4C2DD8(v194, v140, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
          if (v190(v140, 1, v132) == 1)
          {
            sub_1BA4A2E80(v140, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            v141 = 1;
          }
          else
          {
            v142 = v208;
            v143 = v140;
            v144 = (uint64_t)v173;
            (*(void (**)(char *, uint64_t, uint64_t))(v208 + 32))(v173, v143, v132);
            sub_1BA7EDAF0(v144, v186, v130, v184);
            (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v144, v132);
            v141 = 0;
          }
          goto LABEL_69;
        }
        ((void (*)(uint64_t, uint64_t))v211[1])(v119, v117);
        swift_unknownObjectRelease();
        goto LABEL_52;
      }
    }
    else
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v211[7])(v100, 1, 1, v209);
    }
    swift_unknownObjectRelease();
    sub_1BA4A2E80(v100, (uint64_t (*)(_QWORD))sub_1BA76D78C);
LABEL_52:
    v98 = v210;
    goto LABEL_53;
  }
  v55 = v51;
  if (v51 >> 62)
  {
    swift_bridgeObjectRetain();
    v56 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v56 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v57 = v201;
  if (!v56)
  {
LABEL_72:
    swift_bridgeObjectRelease();
    v51 = *(_QWORD *)(v191 + *(int *)(v187 + 52));
    sub_1BA7AA598();
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1BB87FC80;
    v62 = v217;
    if (v217 >> 62)
      goto LABEL_81;
    v148 = *(_QWORD *)((v217 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_74;
  }
  v58 = v51 & 0xC000000000000001;
  v59 = 4;
  v193 = (char *)v56;
  v192 = v51 & 0xC000000000000001;
  while (1)
  {
    v62 = v59 - 4;
    if (v58)
    {
      v63 = MEMORY[0x1BCCE4630](v59 - 4, v55);
      v64 = v59 - 3;
      if (__OFADD__(v62, 1))
        goto LABEL_79;
    }
    else
    {
      v63 = *(_QWORD *)(v55 + 8 * v59);
      swift_retain();
      v64 = v59 - 3;
      if (__OFADD__(v62, 1))
      {
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
    }
    v65 = *v57;
    if (!*(_QWORD *)(*v57 + 16))
      goto LABEL_7;
    v67 = *(_QWORD *)(v63 + 16);
    v66 = *(_QWORD *)(v63 + 24);
    swift_bridgeObjectRetain();
    v68 = sub_1BA6E35A8(v67, v66);
    if ((v69 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v55 = v213;
LABEL_7:
      v60 = swift_retain();
      v61 = v214;
      MEMORY[0x1BCCE36AC](v60);
      if (*(_QWORD *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      v51 = (unint64_t)v214;
      sub_1BB872E8C();
      sub_1BB872DCC();
      swift_release();
      goto LABEL_10;
    }
    v209 = v64;
    v211 = *(_QWORD **)(*(_QWORD *)(v65 + 56) + 8 * v68);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    v70 = v63 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
    swift_beginAccess();
    v71 = v198;
    sub_1BA8CAF1C(v70, v198, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    sub_1BA5193C4(v71, v207, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    v72 = v206;
    v73 = (char *)objc_msgSend(objc_msgSend(*(id *)(v206 + 152), sel_configurationManager), sel_configuration);
    result = swift_unknownObjectRelease();
    v205 = v73;
    if (!v73)
      break;
    v75 = swift_getObjectType();
    v203 = *(id *)(v72 + 136);
    v204 = (char *)v75;
    v76 = *(_QWORD *)(v200 + 72);
    v194 = *(_QWORD *)(v200 + 64);
    sub_1BA8CAF1C(v70, v71, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    v77 = v195;
    sub_1BA5193C4(v71, (uint64_t)v195, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    v78 = (uint64_t)v202;
    sub_1BA4C2DD8((uint64_t)v77 + *(int *)(v197 + 36), (uint64_t)v202, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v79 = v76;
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v77, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    v80 = v208;
    v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v208 + 48);
    v82 = v212;
    if (v81(v78, 1, v212) == 1)
    {
      v83 = objc_msgSend(v211, sel_routeURL);
      if (v83)
      {
        v84 = v83;
        v85 = (uint64_t)v190;
        sub_1BB86C5EC();

        v86 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v208 + 56);
        v86(v85, 0, 1, v212);
      }
      else
      {
        v86 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v208 + 56);
        v85 = (uint64_t)v190;
        v86((uint64_t)v190, 1, 1, v212);
      }
      v64 = v209;
      v88 = v76;
      sub_1BA5193C4(v85, v210, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      sub_1BA4A2E80((uint64_t)v202, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    else
    {
      v87 = v210;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v210, v78, v82);
      v86 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56);
      v86(v87, 0, 1, v82);
      v64 = v209;
      v88 = v79;
    }
    v89 = v196;
    if (v88)
    {
      sub_1BA4C2DD8(v210, v196, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v90 = v212;
      if (v81(v89, 1, v212) == 1)
      {
        sub_1BA4A2E80(v89, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        v91 = 1;
      }
      else
      {
        v92 = v208;
        v93 = v186;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 32))(v186, v89, v90);
        sub_1BA7EDAF0(v93, v194, v88, (uint64_t)v199);
        (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v90);
        v91 = 0;
      }
      v64 = v209;
    }
    else
    {
      v91 = 1;
    }
    v94 = (uint64_t)v199;
    v86((uint64_t)v199, v91, 1, v212);
    sub_1BA4A2E80(v210, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    swift_bridgeObjectRelease();
    v95 = v207;
    FCHeadlineProviding.overridden(by:configuration:assetManager:routeURL:)(v207, (uint64_t)v205, v203, v94);
    swift_unknownObjectRelease();
    sub_1BA4A2E80(v94, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v96 = sub_1BA4A2E80(v95, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    v51 = (unint64_t)&v217;
    MEMORY[0x1BCCE36AC](v96);
    if (*(_QWORD *)((v217 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v217 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BB872E44();
    sub_1BB872E8C();
    sub_1BB872DCC();
    swift_release();
    swift_unknownObjectRelease();
    v57 = v201;
    v55 = v213;
    v56 = (uint64_t)v193;
    v58 = v192;
LABEL_10:
    ++v59;
    if (v64 == v56)
      goto LABEL_72;
  }
  __break(1u);
LABEL_89:
  __break(1u);
  return result;
}

uint64_t sub_1BA8A8608(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t result;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;

  v88 = a2;
  v81 = *v3;
  v6 = type metadata accessor for FormatContent(0);
  v78 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v79 = v7;
  v80 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for FormatServiceOptions();
  v75 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v76 = v8;
  v77 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = FormatContent.requirements.getter();
  v10 = Array<A>.articleLists.getter(v9);
  swift_bridgeObjectRelease();
  v93 = v10;
  sub_1BA4B07F0(0, &qword_1ED3CF740, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleList, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC(&qword_1ED3CF748, &qword_1ED3CF740, (uint64_t (*)(uint64_t))type metadata accessor for FormatArticleList, MEMORY[0x1E0DEAF38]);
  v11 = sub_1BB872BC8();
  v90 = 0;
  swift_bridgeObjectRelease();
  v89 = a3;
  v12 = FormatContent.requirements.getter();
  isUniquelyReferenced_nonNull_native = Array<A>.articles.getter(v12);
  swift_bridgeObjectRelease();
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_42:
    swift_bridgeObjectRetain();
    v14 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v15 = MEMORY[0x1E0DEE9D8];
  v85 = v11;
  if (!v14)
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
    goto LABEL_14;
  }
  v93 = MEMORY[0x1E0DEE9D8];
  sub_1BA7447E8(0, v14 & ~(v14 >> 63), 0);
  if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = a1;
    v17 = 0;
    v18 = v93;
    do
    {
      if ((isUniquelyReferenced_nonNull_native & 0xC000000000000001) != 0)
      {
        v19 = MEMORY[0x1BCCE4630](v17, isUniquelyReferenced_nonNull_native);
      }
      else
      {
        v19 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v17 + 32);
        swift_retain();
      }
      v21 = *(_QWORD *)(v19 + 16);
      v20 = *(_QWORD *)(v19 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      v93 = v18;
      v23 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1BA7447E8(v22 > 1, v23 + 1, 1);
        v18 = v93;
      }
      ++v17;
      *(_QWORD *)(v18 + 16) = v23 + 1;
      v24 = v18 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v21;
      *(_QWORD *)(v24 + 40) = v20;
    }
    while (v14 != v17);
    swift_bridgeObjectRelease();
    a1 = v16;
    v11 = v85;
    v15 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    v87 = sub_1BA6E43EC(v18);
    swift_bridgeObjectRelease();
    v25 = swift_allocObject();
    v26 = (_QWORD *)sub_1BA8F28DC(v15);
    *(_QWORD *)(v25 + 16) = v26;
    v93 = v15;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      v27 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v27)
      {
LABEL_16:
        if (v27 >= 1)
        {
          v28 = 0;
          v91 = v11 & 0xC000000000000001;
          v83 = v27;
          v84 = a1;
          while (1)
          {
            if (v91)
            {
              v29 = MEMORY[0x1BCCE4630](v28, v11);
            }
            else
            {
              v29 = *(_QWORD *)(v11 + 8 * v28 + 32);
              swift_retain();
            }
            v30 = *(_QWORD *)(a1 + 8);
            if (!*(_QWORD *)(v30 + 16))
              goto LABEL_32;
            v32 = *(_QWORD *)(v29 + 16);
            v31 = *(_QWORD *)(v29 + 24);
            swift_bridgeObjectRetain();
            v33 = sub_1BA6E35A8(v32, v31);
            if ((v34 & 1) == 0)
            {
              swift_bridgeObjectRelease();
LABEL_32:
              v50 = swift_retain();
              MEMORY[0x1BCCE36AC](v50);
              if (*(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_1BB872E44();
              sub_1BB872E8C();
              sub_1BB872DCC();
              swift_release();
              goto LABEL_20;
            }
            v35 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v33);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v36 = *(_QWORD *)(v29 + 16);
            v11 = *(_QWORD *)(v29 + 24);
            v37 = v87;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v38 = v90;
            v39 = sub_1BA8C9530(v35, v37);
            v90 = v38;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v40 = sub_1BA8B0774(v39, v88, v89);
            swift_bridgeObjectRelease();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v92 = *(_QWORD **)(v25 + 16);
            v41 = v92;
            a1 = v25;
            *(_QWORD *)(v25 + 16) = 0x8000000000000000;
            v43 = sub_1BA6E35A8(v36, v11);
            v44 = v41[2];
            v45 = (v42 & 1) == 0;
            v46 = v44 + v45;
            if (__OFADD__(v44, v45))
            {
              __break(1u);
              goto LABEL_42;
            }
            v47 = v42;
            if (v41[3] >= v46)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              {
                v26 = v92;
                if ((v42 & 1) != 0)
                  goto LABEL_37;
              }
              else
              {
                sub_1BB4C1CE8();
                v26 = v92;
                if ((v47 & 1) != 0)
                  goto LABEL_37;
              }
            }
            else
            {
              sub_1BB4ADCAC(v46, isUniquelyReferenced_nonNull_native);
              v48 = sub_1BA6E35A8(v36, v11);
              if ((v47 & 1) != (v49 & 1))
                goto LABEL_56;
              v43 = v48;
              v26 = v92;
              if ((v47 & 1) != 0)
              {
LABEL_37:
                v51 = v26[7];
                swift_bridgeObjectRelease();
                *(_QWORD *)(v51 + 8 * v43) = v40;
                goto LABEL_19;
              }
            }
            sub_1BB4C10E8(v43, v36, v11, v40, v26);
            swift_bridgeObjectRetain();
LABEL_19:
            v25 = a1;
            *(_QWORD *)(a1 + 16) = v26;
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a1 = v84;
            v11 = v85;
            v27 = v83;
LABEL_20:
            if (v27 == ++v28)
            {
              swift_bridgeObjectRelease();
              v52 = v93;
              goto LABEL_45;
            }
          }
        }
        goto LABEL_55;
      }
    }
    else
    {
      v27 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v27)
        goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    v52 = MEMORY[0x1E0DEE9D8];
LABEL_45:
    v53 = *(_QWORD *)(v88 + *(int *)(v82 + 52));
    sub_1BA7AA598();
    v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_1BB87FC80;
    v55 = v26[2];
    v56 = MEMORY[0x1E0DEB418];
    v57 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v54 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v54 + 64) = v57;
    *(_QWORD *)(v54 + 32) = v55;
    if (v52 >> 62)
    {
      swift_bridgeObjectRetain();
      v58 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v58 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)(v54 + 96) = v56;
    *(_QWORD *)(v54 + 104) = v57;
    *(_QWORD *)(v54 + 72) = v58;
    v60 = *v89;
    v59 = v89[1];
    *(_QWORD *)(v54 + 136) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v54 + 144) = sub_1BA6A2D8C();
    *(_QWORD *)(v54 + 112) = v60;
    *(_QWORD *)(v54 + 120) = v59;
    swift_bridgeObjectRetain();
    v61 = sub_1BB87330C();
    sub_1BB86EF44("Format service will resolve %ld prefetched and %ld unresolved article lists for %{public}@", 90, 2, &dword_1BA493000, v53, v61, v54);
    v62 = swift_bridgeObjectRelease();
    if (v52 >> 62)
    {
      swift_bridgeObjectRetain();
      v72 = sub_1BB873F30();
      v62 = swift_bridgeObjectRelease();
      if (v72)
        goto LABEL_49;
    }
    else if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_49:
      MEMORY[0x1E0C80A78](v62);
      *(&v74 - 4) = v86;
      *(&v74 - 3) = (uint64_t)&v93;
      v63 = v88;
      *(&v74 - 2) = v88;
      sub_1BA8CBF8C();
      sub_1BB86EC14();
      v64 = v77;
      sub_1BA4C2DD8(v63, v77, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
      v65 = v80;
      sub_1BA4C2DD8((uint64_t)v89, v80, type metadata accessor for FormatContent);
      v66 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
      v67 = (v76 + *(unsigned __int8 *)(v78 + 80) + v66) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
      v68 = swift_allocObject();
      v69 = v87;
      *(_QWORD *)(v68 + 16) = v25;
      *(_QWORD *)(v68 + 24) = v69;
      sub_1BA5193C4(v64, v68 + v66, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
      sub_1BA5193C4(v65, v68 + v67, type metadata accessor for FormatContent);
      swift_retain();
      v70 = (void *)sub_1BB86E854();
      sub_1BA8C9E2C();
      v71 = sub_1BB86E98C();
      swift_release();
      swift_release();

LABEL_53:
      swift_release();
      swift_bridgeObjectRelease();
      return v71;
    }
    swift_bridgeObjectRelease();
    v92 = *(_QWORD **)(v25 + 16);
    sub_1BA4B07F0(0, &qword_1ED3C4870, (uint64_t (*)(uint64_t))sub_1BA8C9E2C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v71 = sub_1BB86E9E0();
    goto LABEL_53;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA8A8ED8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;

  v4 = FormatContent.requirements.getter();
  Array<A>.issues.getter(v4);
  swift_bridgeObjectRelease();
  sub_1BA4B07F0(0, &qword_1ED3C0360, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC((unint64_t *)&unk_1ED3C0368, &qword_1ED3C0360, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssue, MEMORY[0x1E0DEAF38]);
  v5 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x1E0DEE9D8];
  v53 = MEMORY[0x1E0DEE9D8];
  result = swift_allocObject();
  v8 = result;
  *(_QWORD *)(result + 16) = v6;
  v9 = (_QWORD *)(result + 16);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    v52 = v9;
    if (v10)
      goto LABEL_3;
LABEL_28:
    swift_bridgeObjectRelease();
    v29 = MEMORY[0x1E0DEE9D8];
LABEL_29:
    v30 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
    sub_1BA7AA598();
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1BB87FC80;
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = v52;
      v32 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v33 = MEMORY[0x1E0DEB418];
    v34 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v31 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v31 + 64) = v34;
    *(_QWORD *)(v31 + 32) = v32;
    v35 = *v9;
    v36 = *v9 >> 62;
    if (v36)
    {
      swift_bridgeObjectRetain();
      v37 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)(v31 + 96) = v33;
    *(_QWORD *)(v31 + 104) = v34;
    *(_QWORD *)(v31 + 72) = v37;
    v39 = *a3;
    v38 = a3[1];
    *(_QWORD *)(v31 + 136) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v31 + 144) = sub_1BA6A2D8C();
    *(_QWORD *)(v31 + 112) = v39;
    *(_QWORD *)(v31 + 120) = v38;
    swift_bridgeObjectRetain();
    v40 = sub_1BB87330C();
    sub_1BB86EF44("Format service will resolve %ld prefetched and %ld unresolved issues for %{public}@", 83, 2, &dword_1BA493000, v30, v40, v31);
    v41 = swift_bridgeObjectRelease();
    if (v36)
    {
      swift_bridgeObjectRetain();
      v45 = sub_1BB873F30();
      v41 = swift_bridgeObjectRelease();
      if (v45)
        goto LABEL_35;
    }
    else if (*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_35:
      MEMORY[0x1E0C80A78](v41);
      sub_1BA6CA500(0, &qword_1ED3BB4A0, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
      sub_1BB86EC14();
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = v8;
      *(_QWORD *)(v42 + 24) = v53;
      swift_retain();
      v43 = (void *)sub_1BB86E854();
      sub_1BA8C9EB0(0, &qword_1ED3C02B8, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
      v44 = sub_1BB86E974();
      swift_release();
      swift_release();
      swift_release();

      return v44;
    }
    sub_1BA6CA500(0, &qword_1ED3BB4A0, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    sub_1BA8CBE54();
    sub_1BA8CBEBC((unint64_t *)&unk_1ED3C0490, (unint64_t *)&qword_1ED3BA820, 0x1E0D58C20, (uint64_t)&protocol conformance descriptor for FCIssue);
    sub_1BB872BBC();
    swift_bridgeObjectRelease();
    sub_1BA8CBEFC();
    swift_allocObject();
    v44 = sub_1BB86E9E0();
    swift_release();
    return v44;
  }
  v10 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v52 = (_QWORD *)(result + 16);
  if (!v10)
    goto LABEL_28;
LABEL_3:
  if (v10 >= 1)
  {
    v46 = v8;
    v11 = 0;
    v12 = v5 & 0xC000000000000001;
    v13 = *(_QWORD *)(a1 + 16);
    v49 = v5;
    v50 = v5 & 0xC000000000000001;
    v51 = v10;
    while (1)
    {
      if (v12)
      {
        v15 = (_QWORD *)MEMORY[0x1BCCE4630](v11, v5);
        if (!*(_QWORD *)(v13 + 16))
          goto LABEL_6;
      }
      else
      {
        v15 = *(_QWORD **)(v5 + 8 * v11 + 32);
        swift_retain();
        if (!*(_QWORD *)(v13 + 16))
          goto LABEL_6;
      }
      v17 = v15[2];
      v16 = v15[3];
      swift_bridgeObjectRetain();
      v18 = sub_1BA6E35A8(v17, v16);
      if ((v19 & 1) != 0)
      {
        v20 = *(id *)(*(_QWORD *)(v13 + 56) + 8 * v18);
        swift_bridgeObjectRelease();
        v21 = v15[7];
        if (v15[5])
        {
          v22 = objc_allocWithZone(MEMORY[0x1E0D58C38]);
          swift_bridgeObjectRetain_n();
          v23 = v20;
          swift_bridgeObjectRetain_n();
          v24 = (void *)sub_1BB872970();
          swift_bridgeObjectRelease();
          if (!v21)
          {
            v25 = 0;
            goto LABEL_21;
          }
LABEL_20:
          v25 = (void *)sub_1BB872970();
          swift_bridgeObjectRelease();
LABEL_21:
          v27 = objc_msgSend(v22, sel_initWithTitle_issueDescription_, v24, v25);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58C20]), sel_initWithIssue_overrides_, v20, v27);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          v9 = v52;
          v5 = v49;
        }
        else
        {
          if (v21)
          {
            v22 = objc_allocWithZone(MEMORY[0x1E0D58C38]);
            swift_bridgeObjectRetain_n();
            v26 = v20;
            v24 = 0;
            goto LABEL_20;
          }
          v28 = v20;
        }
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
        swift_release();

        v12 = v50;
        v10 = v51;
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
LABEL_6:
      v14 = swift_retain();
      MEMORY[0x1BCCE36AC](v14);
      if (*(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BB872E44();
      sub_1BB872E8C();
      sub_1BB872DCC();
      swift_release();
LABEL_9:
      if (v10 == ++v11)
      {
        swift_bridgeObjectRelease();
        v29 = v53;
        v8 = v46;
        goto LABEL_29;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8A9614(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  int64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t i;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  char isUniquelyReferenced_nonNull_native;
  char v99;
  unint64_t v100;
  uint64_t v101;
  _BOOL8 v102;
  uint64_t v103;
  char v104;
  unint64_t v105;
  char v106;
  unint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t result;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  unint64_t v122;
  int64_t v123;
  unint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;

  v119 = a2;
  v120 = a3;
  v117 = *v3;
  v6 = type metadata accessor for FormatContent(0);
  v114 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v115 = v7;
  v116 = (uint64_t)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for FormatServiceOptions();
  v111 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v112 = v8;
  v113 = (uint64_t)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = FormatContent.requirements.getter();
  v10 = Array<A>.tags.getter(v9);
  swift_bridgeObjectRelease();
  v11 = sub_1BA8A0C3C(v10);
  swift_bridgeObjectRelease();
  v125 = sub_1BA6E43EC(v11);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v13 = (_QWORD *)sub_1BA8F28F0(MEMORY[0x1E0DEE9D8]);
  v127 = v12;
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(v14 + 64);
  v122 = v14 + 64;
  v16 = 1 << *(_BYTE *)(v14 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v123 = (unint64_t)(v16 + 63) >> 6;
  v124 = v14;
  swift_bridgeObjectRetain();
  v19 = 0;
  while (1)
  {
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
      goto LABEL_85;
    if (v23 >= v123)
      break;
    v24 = *(_QWORD *)(v122 + 8 * v23);
    ++v19;
    if (!v24)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v123)
        break;
      v24 = *(_QWORD *)(v122 + 8 * v19);
      if (!v24)
      {
        v19 = v23 + 2;
        if (v23 + 2 >= v123)
          break;
        v24 = *(_QWORD *)(v122 + 8 * v19);
        if (!v24)
        {
          v25 = v23 + 3;
          if (v25 >= v123)
            break;
          v24 = *(_QWORD *)(v122 + 8 * v25);
          if (!v24)
          {
            while (1)
            {
              v19 = v25 + 1;
              if (__OFADD__(v25, 1))
                break;
              if (v19 >= v123)
                goto LABEL_33;
              v24 = *(_QWORD *)(v122 + 8 * v19);
              ++v25;
              if (v24)
                goto LABEL_21;
            }
LABEL_89:
            __break(1u);
LABEL_90:
            __break(1u);
            while (2)
            {
              __break(1u);
LABEL_92:
              swift_bridgeObjectRetain_n();
              v86 = sub_1BB873F30();
              swift_bridgeObjectRelease();
              if (!v86)
                goto LABEL_93;
LABEL_64:
              v124 = v4 & 0xC000000000000001;
              v87 = (_QWORD *)MEMORY[0x1E0DEE9E0];
              v88 = 4;
              v123 = v4;
LABEL_67:
              v90 = v88 - 4;
              if (v124)
              {
                v91 = (void *)MEMORY[0x1BCCE4630](v88 - 4, v4);
                v92 = v88 - 3;
                if (__OFADD__(v90, 1))
                  goto LABEL_87;
              }
              else
              {
                v91 = (void *)swift_unknownObjectRetain();
                v92 = v88 - 3;
                if (__OFADD__(v90, 1))
                  goto LABEL_87;
              }
              v125 = v92;
              v93 = v86;
              v94 = v91;
              v95 = objc_msgSend(v91, sel_identifier);
              v4 = sub_1BB8729A0();
              v97 = v96;

              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v126 = v87;
              v100 = sub_1BA6E35A8(v4, v97);
              v101 = v87[2];
              v102 = (v99 & 1) == 0;
              v103 = v101 + v102;
              if (__OFADD__(v101, v102))
                goto LABEL_88;
              v104 = v99;
              if (v87[3] >= v103)
              {
                if ((isUniquelyReferenced_nonNull_native & 1) != 0)
                {
                  v87 = v126;
                  if ((v99 & 1) == 0)
                    goto LABEL_79;
                }
                else
                {
                  sub_1BB4C1CF4();
                  v87 = v126;
                  if ((v104 & 1) == 0)
                    goto LABEL_79;
                }
              }
              else
              {
                sub_1BB4ADCB8(v103, isUniquelyReferenced_nonNull_native);
                v105 = sub_1BA6E35A8(v4, v97);
                if ((v104 & 1) != (v106 & 1))
                  goto LABEL_96;
                v100 = v105;
                v87 = v126;
                if ((v104 & 1) == 0)
                {
LABEL_79:
                  v87[(v100 >> 6) + 8] |= 1 << v100;
                  v107 = (unint64_t *)(v87[6] + 16 * v100);
                  *v107 = v4;
                  v107[1] = v97;
                  *(_QWORD *)(v87[7] + 8 * v100) = v94;
                  v108 = v87[2];
                  v40 = __OFADD__(v108, 1);
                  v109 = v108 + 1;
                  if (v40)
                    continue;
                  v87[2] = v109;
                  swift_bridgeObjectRetain();
                  goto LABEL_66;
                }
              }
              break;
            }
            v89 = v87[7];
            swift_unknownObjectRelease();
            *(_QWORD *)(v89 + 8 * v100) = v94;
LABEL_66:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            ++v88;
            v86 = v93;
            v4 = v123;
            if (v125 == v93)
              goto LABEL_94;
            goto LABEL_67;
          }
          v19 = v25;
        }
      }
    }
LABEL_21:
    v18 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v19 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v124 + 48) + 16 * v22);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(*(_QWORD *)(v124 + 56) + 8 * v22);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    v30 = swift_isUniquelyReferenced_nonNull_native();
    v126 = v13;
    v4 = sub_1BA6E35A8(v28, v27);
    v32 = v13[2];
    v33 = (v31 & 1) == 0;
    v34 = v32 + v33;
    if (__OFADD__(v32, v33))
    {
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    v35 = v31;
    if (v13[3] >= v34)
    {
      if ((v30 & 1) != 0)
      {
        v13 = v126;
        if ((v31 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BB4C1CF4();
        v13 = v126;
        if ((v35 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BB4ADCB8(v34, v30);
      v36 = sub_1BA6E35A8(v28, v27);
      if ((v35 & 1) != (v37 & 1))
      {
LABEL_96:
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v4 = v36;
      v13 = v126;
      if ((v35 & 1) != 0)
      {
LABEL_4:
        v20 = v13[7];
        swift_unknownObjectRelease();
        *(_QWORD *)(v20 + 8 * v4) = v29;
        goto LABEL_5;
      }
    }
    v13[(v4 >> 6) + 8] |= 1 << v4;
    v38 = (uint64_t *)(v13[6] + 16 * v4);
    *v38 = v28;
    v38[1] = v27;
    *(_QWORD *)(v13[7] + 8 * v4) = v29;
    v39 = v13[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_84;
    v13[2] = v41;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_33:
  swift_release();
  v4 = 0;
  v42 = v125 + 56;
  v43 = 1 << *(_BYTE *)(v125 + 32);
  v44 = -1;
  if (v43 < 64)
    v44 = ~(-1 << v43);
  v45 = v44 & *(_QWORD *)(v125 + 56);
  v46 = (unint64_t)(v43 + 63) >> 6;
  if (v45)
    goto LABEL_59;
LABEL_38:
  v47 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (v47 < v46)
  {
    v48 = *(_QWORD *)(v42 + 8 * v47);
    ++v4;
    if (v48)
      goto LABEL_51;
    v4 = v47 + 1;
    if (v47 + 1 < v46)
    {
      v48 = *(_QWORD *)(v42 + 8 * v4);
      if (v48)
        goto LABEL_51;
      v4 = v47 + 2;
      if (v47 + 2 < v46)
      {
        v48 = *(_QWORD *)(v42 + 8 * v4);
        if (v48)
          goto LABEL_51;
        v49 = v47 + 3;
        if (v49 < v46)
        {
          v48 = *(_QWORD *)(v42 + 8 * v49);
          if (!v48)
          {
            while (1)
            {
              v4 = v49 + 1;
              if (__OFADD__(v49, 1))
                goto LABEL_90;
              if ((uint64_t)v4 >= v46)
                goto LABEL_60;
              v48 = *(_QWORD *)(v42 + 8 * v4);
              ++v49;
              if (v48)
                goto LABEL_51;
            }
          }
          v4 = v49;
LABEL_51:
          v45 = (v48 - 1) & v48;
          for (i = __clz(__rbit64(v48)) + (v4 << 6); ; i = v61 | (v4 << 6))
          {
            v51 = (uint64_t *)(*(_QWORD *)(v125 + 48) + 16 * i);
            v53 = *v51;
            v52 = v51[1];
            v54 = v13[2];
            swift_bridgeObjectRetain();
            if (v54
              && (swift_bridgeObjectRetain(),
                  sub_1BA6E35A8(v53, v52),
                  v56 = v55,
                  swift_bridgeObjectRelease(),
                  (v56 & 1) != 0))
            {
              swift_bridgeObjectRelease();
              if (!v45)
                goto LABEL_38;
            }
            else
            {
              v57 = v127;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v57 = sub_1BA6EA0D0(0, v57[2] + 1, 1, v57);
              v59 = v57[2];
              v58 = v57[3];
              if (v59 >= v58 >> 1)
                v57 = sub_1BA6EA0D0((_QWORD *)(v58 > 1), v59 + 1, 1, v57);
              v57[2] = v59 + 1;
              v60 = &v57[2 * v59];
              v60[4] = v53;
              v60[5] = v52;
              v127 = v57;
              if (!v45)
                goto LABEL_38;
            }
LABEL_59:
            v61 = __clz(__rbit64(v45));
            v45 &= v45 - 1;
          }
        }
      }
    }
  }
LABEL_60:
  swift_release();
  v62 = v119;
  v63 = *(_QWORD *)(v119 + *(int *)(v118 + 52));
  sub_1BA7AA598();
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1BB87FC80;
  v65 = v13[2];
  v66 = MEMORY[0x1E0DEB418];
  v67 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v64 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v64 + 64) = v67;
  *(_QWORD *)(v64 + 32) = v65;
  v68 = v127;
  v69 = v127[2];
  *(_QWORD *)(v64 + 96) = v66;
  *(_QWORD *)(v64 + 104) = v67;
  *(_QWORD *)(v64 + 72) = v69;
  v70 = v120;
  v72 = *v120;
  v71 = v120[1];
  *(_QWORD *)(v64 + 136) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v64 + 144) = sub_1BA6A2D8C();
  *(_QWORD *)(v64 + 112) = v72;
  *(_QWORD *)(v64 + 120) = v71;
  swift_bridgeObjectRetain();
  v73 = sub_1BB87330C();
  sub_1BB86EF44("Format service will resolve %ld prefetched and %ld unresolved tags for %{public}@", 81, 2, &dword_1BA493000, v63, v73, v64);
  v74 = swift_bridgeObjectRelease();
  if (v68[2])
  {
    MEMORY[0x1E0C80A78](v74);
    *(&v111 - 4) = v121;
    *(&v111 - 3) = (uint64_t)&v127;
    *(&v111 - 2) = v62;
    sub_1BA6CA500(0, (unint64_t *)&qword_1ED3B9630, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    sub_1BB86EC14();
    v75 = v113;
    sub_1BA4C2DD8(v62, v113, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
    v76 = (uint64_t)v70;
    v77 = v116;
    sub_1BA4C2DD8(v76, v116, type metadata accessor for FormatContent);
    v78 = (*(unsigned __int8 *)(v111 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
    v79 = (v112 + *(unsigned __int8 *)(v114 + 80) + v78) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    v80 = swift_allocObject();
    sub_1BA5193C4(v75, v80 + v78, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
    sub_1BA5193C4(v77, v80 + v79, type metadata accessor for FormatContent);
    v81 = (void *)sub_1BB86E854();
    sub_1BB86E98C();
    swift_release();
    swift_release();

    v126 = v13;
    swift_bridgeObjectRetain();
    v82 = (void *)sub_1BB86E854();
    sub_1BA8C9EB0(0, (unint64_t *)&qword_1ED3B91F0, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    sub_1BA8CBCF4((unint64_t *)&qword_1ED3B9640, (unint64_t *)&qword_1ED3B9630, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
    v83 = sub_1BB86EA88();
    swift_bridgeObjectRelease();
    swift_release();

  }
  else
  {
    v84 = swift_bridgeObjectRetain();
    v85 = sub_1BA574364(v84);
    swift_bridgeObjectRelease();
    v4 = sub_1BA8B0244(v85, v62, v70);
    swift_release();
    if (v4 >> 62)
      goto LABEL_92;
    v86 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v86)
      goto LABEL_64;
LABEL_93:
    v87 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_94:
    swift_bridgeObjectRelease_n();
    v126 = v87;
    sub_1BA8CBD3C();
    swift_allocObject();
    v83 = sub_1BB86E9E0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v83;
}

uint64_t sub_1BA8AA0D0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t i;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  int64_t v99;
  unint64_t v100;

  v4 = v3;
  v93 = a2;
  v7 = *v4;
  v92 = type metadata accessor for FormatServiceOptions();
  v90 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v91 = v8;
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatContent(0);
  v89 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v94 = v11;
  v95 = a3;
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = FormatContent.requirements.getter();
  v14 = Array<A>.tagFeeds.getter(v13);
  swift_bridgeObjectRelease();
  v15 = sub_1BA8A0C3C(v14);
  swift_bridgeObjectRelease();
  v16 = sub_1BA6E43EC(v15);
  result = swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v16 + 16))
  {
    swift_bridgeObjectRelease();
    v100 = sub_1BA8F28DC(MEMORY[0x1E0DEE9D8]);
    sub_1BA4B07F0(0, &qword_1ED3C4870, (uint64_t (*)(uint64_t))sub_1BA8C9E2C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  v86 = v12;
  v87 = v9;
  v96 = v4;
  v88 = v7;
  v18 = 0;
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(_QWORD *)(v16 + 56);
  v98 = v16 + 56;
  v21 = 1 << *(_BYTE *)(v16 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(a1 + 24);
  v25 = v22 & v20;
  v99 = (unint64_t)(v21 + 63) >> 6;
  v100 = MEMORY[0x1E0DEE9D8];
  v97 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((v22 & v20) != 0)
    goto LABEL_7;
LABEL_8:
  v28 = v18 + 1;
  if (!__OFADD__(v18, 1))
  {
    if (v28 < v99)
    {
      v29 = *(_QWORD *)(v98 + 8 * v28);
      ++v18;
      if (v29)
        goto LABEL_21;
      v18 = v28 + 1;
      if (v28 + 1 < v99)
      {
        v29 = *(_QWORD *)(v98 + 8 * v18);
        if (v29)
          goto LABEL_21;
        v18 = v28 + 2;
        if (v28 + 2 < v99)
        {
          v29 = *(_QWORD *)(v98 + 8 * v18);
          if (!v29)
          {
            v30 = v28 + 3;
            if (v30 < v99)
            {
              v29 = *(_QWORD *)(v98 + 8 * v30);
              if (v29)
              {
                v18 = v30;
                goto LABEL_21;
              }
              while (1)
              {
                v18 = v30 + 1;
                if (__OFADD__(v30, 1))
                  goto LABEL_44;
                if (v18 >= v99)
                  goto LABEL_37;
                v29 = *(_QWORD *)(v98 + 8 * v18);
                ++v30;
                if (v29)
                  goto LABEL_21;
              }
            }
            goto LABEL_37;
          }
LABEL_21:
          v25 = (v29 - 1) & v29;
          for (i = __clz(__rbit64(v29)) + (v18 << 6); ; i = v26 | (v18 << 6))
          {
            v31 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * i);
            v33 = *v31;
            v32 = v31[1];
            v34 = *(_QWORD *)(v24 + 16);
            swift_bridgeObjectRetain();
            if (!v34 || (sub_1BA6E35A8(v33, v32), (v35 & 1) == 0))
            {
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v23 = sub_1BA6EA0D0(0, v23[2] + 1, 1, v23);
              v37 = v23[2];
              v36 = v23[3];
              if (v37 >= v36 >> 1)
                v23 = sub_1BA6EA0D0((_QWORD *)(v36 > 1), v37 + 1, 1, v23);
              v23[2] = v37 + 1;
              v38 = &v23[2 * v37];
              v38[4] = v33;
              v38[5] = v32;
              v100 = (unint64_t)v23;
            }
            if (*(_QWORD *)(v19 + 16)
              && (swift_bridgeObjectRetain(),
                  sub_1BA6E35A8(v33, v32),
                  v40 = v39,
                  swift_bridgeObjectRelease(),
                  (v40 & 1) != 0))
            {
              result = swift_bridgeObjectRelease();
              if (!v25)
                goto LABEL_8;
            }
            else
            {
              result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                result = (uint64_t)sub_1BA6EA0D0(0, v97[2] + 1, 1, v97);
                v97 = (_QWORD *)result;
              }
              v42 = v97[2];
              v41 = v97[3];
              if (v42 >= v41 >> 1)
              {
                result = (uint64_t)sub_1BA6EA0D0((_QWORD *)(v41 > 1), v42 + 1, 1, v97);
                v97 = (_QWORD *)result;
              }
              v43 = v97;
              v97[2] = v42 + 1;
              v44 = &v43[2 * v42];
              v44[4] = v33;
              v44[5] = v32;
              if (!v25)
                goto LABEL_8;
            }
LABEL_7:
            v26 = __clz(__rbit64(v25));
            v25 &= v25 - 1;
          }
        }
      }
    }
LABEL_37:
    swift_release();
    v45 = v97[2];
    swift_bridgeObjectRelease();
    v46 = v93;
    v47 = *(_QWORD *)(v93 + *(int *)(v92 + 52));
    sub_1BA7AA598();
    if (v45)
    {
      v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1BB87FC80;
      v49 = *(_QWORD *)(v24 + 16);
      v50 = MEMORY[0x1E0DEB418];
      v51 = MEMORY[0x1E0DEB490];
      *(_QWORD *)(v48 + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(v48 + 64) = v51;
      *(_QWORD *)(v48 + 32) = v49;
      v52 = v23[2];
      *(_QWORD *)(v48 + 96) = v50;
      *(_QWORD *)(v48 + 104) = v51;
      *(_QWORD *)(v48 + 72) = v52;
      v53 = v95;
      v55 = *v95;
      v54 = v95[1];
      *(_QWORD *)(v48 + 136) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v48 + 144) = sub_1BA6A2D8C();
      *(_QWORD *)(v48 + 112) = v55;
      *(_QWORD *)(v48 + 120) = v54;
      swift_bridgeObjectRetain();
      v56 = sub_1BB87330C();
      sub_1BB86EF44("Format service will resolve %ld prefetched and %ld unresolved tags for %{public}@ for tag feed fetch", 100, 2, &dword_1BA493000, v47, v56, v48);
      v57 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v57);
      *(&v85 - 4) = (uint64_t)&v100;
      *(&v85 - 3) = v24;
      *(&v85 - 2) = (uint64_t)v96;
      *(&v85 - 1) = v46;
      sub_1BA6CA500(0, (unint64_t *)&qword_1ED3B9630, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
      sub_1BB86EC14();
      v58 = (uint64_t)v86;
      sub_1BA4C2DD8((uint64_t)v53, (uint64_t)v86, type metadata accessor for FormatContent);
      v59 = (uint64_t)v87;
      sub_1BA4C2DD8(v46, (uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
      v60 = *(unsigned __int8 *)(v89 + 80);
      v61 = (v60 + 16) & ~v60;
      v62 = v91;
      v63 = *(unsigned __int8 *)(v90 + 80);
      v64 = (v94 + v63 + v61) & ~v63;
      v99 = v60 | v63 | 7;
      v65 = swift_allocObject();
      sub_1BA5193C4(v58, v65 + v61, type metadata accessor for FormatContent);
      sub_1BA5193C4(v59, v65 + v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
      v66 = (void *)sub_1BB86E854();
      sub_1BA8C9E2C();
      v98 = v67;
      sub_1BB86E980();
      swift_release();
      swift_release();

      sub_1BA4C2DD8(v93, v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
      sub_1BA4C2DD8((uint64_t)v95, v58, type metadata accessor for FormatContent);
      v68 = (v63 + 16) & ~v63;
      v69 = (v62 + v60 + v68) & ~v60;
      v70 = swift_allocObject();
      sub_1BA5193C4(v59, v70 + v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
      sub_1BA5193C4(v58, v70 + v69, type metadata accessor for FormatContent);
    }
    else
    {
      v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = xmmword_1BB87CE70;
      sub_1BA8CB71C();
      swift_bridgeObjectRetain();
      v74 = MEMORY[0x1E0DEA968];
      v75 = sub_1BB8727D8();
      v77 = v76;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v73 + 56) = v74;
      *(_QWORD *)(v73 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v73 + 32) = v75;
      *(_QWORD *)(v73 + 40) = v77;
      v78 = sub_1BB87330C();
      sub_1BB86EF44("Format service will resolve inflight tag feed fetches for %{public}@", 68, 2, &dword_1BA493000, v47, v78, v73);
      v79 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v79);
      *(&v85 - 2) = v19;
      sub_1BA8C9E2C();
      sub_1BB86EC14();
      v80 = (uint64_t)v87;
      sub_1BA4C2DD8(v46, (uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
      v81 = (uint64_t)v86;
      sub_1BA4C2DD8((uint64_t)v95, (uint64_t)v86, type metadata accessor for FormatContent);
      v82 = (*(unsigned __int8 *)(v90 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
      v83 = (v91 + *(unsigned __int8 *)(v89 + 80) + v82) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
      v84 = swift_allocObject();
      sub_1BA5193C4(v80, v84 + v82, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
      sub_1BA5193C4(v81, v84 + v83, type metadata accessor for FormatContent);
    }
    v71 = (void *)sub_1BB86E854();
    v72 = sub_1BB86E98C();
    swift_release();
    swift_release();

    swift_bridgeObjectRelease();
    return v72;
  }
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BA8AA998(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v4 = FormatContent.requirements.getter();
  v5 = Array<A>.webArchives.getter(v4);
  swift_bridgeObjectRelease();
  v6 = v5[2];
  if (v6)
  {
    v28 = a1;
    v29 = a2;
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79FA8(0, v6, 0);
    v7 = v30;
    v8 = v5 + 7;
    do
    {
      v9 = *(v8 - 3);
      v10 = *(v8 - 2);
      v11 = *(v8 - 1);
      v12 = *v8;
      v14 = *(_QWORD *)(v30 + 16);
      v13 = *(_QWORD *)(v30 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1)
        sub_1BAC79FA8(v13 > 1, v14 + 1, 1);
      v8 += 4;
      *(_QWORD *)(v30 + 16) = v14 + 1;
      v15 = (_QWORD *)(v30 + 32 * v14);
      v15[4] = v9;
      v15[5] = v10;
      v15[6] = v11;
      v15[7] = v12;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    a2 = v29;
    a1 = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  v16 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
  sub_1BA7AA598();
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BB87A390;
  v18 = *(_QWORD *)(v7 + 16);
  v19 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v17 + 64) = v19;
  *(_QWORD *)(v17 + 32) = v18;
  v20 = *a2;
  v21 = a2[1];
  v22 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v17 + 104) = sub_1BA6A2D8C();
  *(_QWORD *)(v17 + 72) = v20;
  *(_QWORD *)(v17 + 80) = v21;
  swift_bridgeObjectRetain();
  v23 = sub_1BB87330C();
  sub_1BB86EF44("Format service will resolve %ld web archives for %{public}@", 59, 2, &dword_1BA493000, v16, v23, v17);
  v24 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v24);
  sub_1BA8CB2A8(0, (unint64_t *)&unk_1ED3B91C0, (void (*)(uint64_t))type metadata accessor for WebArchive);
  sub_1BB86EC14();
  v25 = (void *)sub_1BB86E854();
  sub_1BA8CB2A8(0, &qword_1ED3B91D8, (void (*)(uint64_t))type metadata accessor for FormatWebArchiveResource.Resolved);
  sub_1BB86E974();
  swift_release();

  sub_1BA89F500(v7);
  swift_bridgeObjectRelease();
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v22, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A14((unint64_t *)&unk_1ED3B95E0, (unint64_t *)&qword_1ED3B95C0, v22);
  v26 = sub_1BB86E914();
  swift_bridgeObjectRelease();
  swift_release();
  return v26;
}

uint64_t sub_1BA8AAC98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int64_t v59;
  uint64_t v60;
  int64_t v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t i;
  int64_t v65;
  unint64_t v66;
  int64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  unint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  _QWORD *v93;
  uint64_t result;
  uint64_t v95;
  uint64_t v99;
  unint64_t v100;
  int64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  _QWORD *v105;

  v3 = FormatContent.requirements.getter();
  v4 = Array<A>.puzzles.getter(v3);
  swift_bridgeObjectRelease();
  v104 = sub_1BA8F290C(MEMORY[0x1E0DEE9D8]);
  if (v4 >> 62)
    goto LABEL_23;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v5)
  {
    v100 = v4;
    v102 = v4 & 0xC000000000000001;
    v6 = 4;
    while (1)
    {
      v8 = v6 - 4;
      if (!v102)
        break;
      v9 = MEMORY[0x1BCCE4630](v6 - 4, v4);
      v10 = v6 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_20;
LABEL_11:
      v11 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v9 + 24);
      swift_bridgeObjectRetain();
      v4 = v104;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v105 = (_QWORD *)v104;
      v15 = sub_1BA6E35A8(v11, v12);
      v16 = *(_QWORD *)(v104 + 16);
      v17 = (v14 & 1) == 0;
      v18 = v16 + v17;
      if (__OFADD__(v16, v17))
        goto LABEL_21;
      v19 = v14;
      if (*(_QWORD *)(v104 + 24) >= v18)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v4 = (unint64_t)&v105;
          sub_1BB4C1D0C();
        }
      }
      else
      {
        sub_1BB4ADFE0(v18, isUniquelyReferenced_nonNull_native);
        v4 = (unint64_t)v105;
        v20 = sub_1BA6E35A8(v11, v12);
        if ((v19 & 1) != (v21 & 1))
          goto LABEL_98;
        v15 = v20;
      }
      v22 = v105;
      v104 = (unint64_t)v105;
      if ((v19 & 1) != 0)
      {
        v7 = v105[7];
        swift_release();
        *(_QWORD *)(v7 + 8 * v15) = v9;
      }
      else
      {
        v105[(v15 >> 6) + 8] |= 1 << v15;
        v23 = (uint64_t *)(v22[6] + 16 * v15);
        *v23 = v11;
        v23[1] = v12;
        *(_QWORD *)(v22[7] + 8 * v15) = v9;
        v24 = v22[2];
        v25 = __OFADD__(v24, 1);
        v26 = v24 + 1;
        if (v25)
          goto LABEL_22;
        v22[2] = v26;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v6;
      v4 = v100;
      if (v10 == v5)
        goto LABEL_24;
    }
    v9 = *(_QWORD *)(v4 + 8 * v6);
    swift_retain();
    v10 = v6 - 3;
    if (!__OFADD__(v8, 1))
      goto LABEL_11;
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain_n();
    v5 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
  v27 = (_QWORD *)sub_1BA8F2920(MEMORY[0x1E0DEE9D8]);
  v28 = *(_QWORD *)(a1 + 48);
  v99 = v28 + 64;
  v29 = 1 << *(_BYTE *)(v28 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & *(_QWORD *)(v28 + 64);
  v101 = (unint64_t)(v29 + 63) >> 6;
  v103 = v28;
  swift_bridgeObjectRetain();
  v32 = 0;
  while (1)
  {
    if (v31)
    {
      v34 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      v35 = v34 | (v32 << 6);
      goto LABEL_45;
    }
    v36 = v32 + 1;
    if (__OFADD__(v32, 1))
      goto LABEL_95;
    if (v36 >= v101)
      break;
    v37 = *(_QWORD *)(v99 + 8 * v36);
    ++v32;
    if (!v37)
    {
      v32 = v36 + 1;
      if (v36 + 1 >= v101)
        break;
      v37 = *(_QWORD *)(v99 + 8 * v32);
      if (!v37)
      {
        v32 = v36 + 2;
        if (v36 + 2 >= v101)
          break;
        v37 = *(_QWORD *)(v99 + 8 * v32);
        if (!v37)
        {
          v38 = v36 + 3;
          if (v38 >= v101)
            break;
          v37 = *(_QWORD *)(v99 + 8 * v38);
          if (!v37)
          {
            while (1)
            {
              v32 = v38 + 1;
              if (__OFADD__(v38, 1))
                goto LABEL_96;
              if (v32 >= v101)
                goto LABEL_56;
              v37 = *(_QWORD *)(v99 + 8 * v32);
              ++v38;
              if (v37)
                goto LABEL_44;
            }
          }
          v32 = v38;
        }
      }
    }
LABEL_44:
    v31 = (v37 - 1) & v37;
    v35 = __clz(__rbit64(v37)) + (v32 << 6);
LABEL_45:
    v39 = (uint64_t *)(*(_QWORD *)(v103 + 48) + 16 * v35);
    v41 = *v39;
    v40 = v39[1];
    v42 = *(_QWORD *)(*(_QWORD *)(v103 + 56) + 8 * v35);
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    v43 = swift_isUniquelyReferenced_nonNull_native();
    v105 = v27;
    v45 = sub_1BA6E35A8(v41, v40);
    v46 = v27[2];
    v47 = (v44 & 1) == 0;
    v48 = v46 + v47;
    if (__OFADD__(v46, v47))
    {
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    v49 = v44;
    if (v27[3] >= v48)
    {
      if ((v43 & 1) != 0)
      {
        v27 = v105;
        if ((v44 & 1) != 0)
          goto LABEL_27;
      }
      else
      {
        sub_1BB4C1D00();
        v27 = v105;
        if ((v49 & 1) != 0)
          goto LABEL_27;
      }
    }
    else
    {
      sub_1BB4ADCC4(v48, v43);
      v50 = sub_1BA6E35A8(v41, v40);
      if ((v49 & 1) != (v51 & 1))
        goto LABEL_98;
      v45 = v50;
      v27 = v105;
      if ((v49 & 1) != 0)
      {
LABEL_27:
        v33 = v27[7];
        swift_unknownObjectRelease();
        *(_QWORD *)(v33 + 8 * v45) = v42;
        goto LABEL_28;
      }
    }
    v27[(v45 >> 6) + 8] |= 1 << v45;
    v52 = (uint64_t *)(v27[6] + 16 * v45);
    *v52 = v41;
    v52[1] = v40;
    *(_QWORD *)(v27[7] + 8 * v45) = v42;
    v53 = v27[2];
    v25 = __OFADD__(v53, 1);
    v54 = v53 + 1;
    if (v25)
      goto LABEL_93;
    v27[2] = v54;
    swift_bridgeObjectRetain();
LABEL_28:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_56:
  swift_release();
  v55 = v104 + 64;
  v56 = 1 << *(_BYTE *)(v104 + 32);
  v57 = -1;
  if (v56 < 64)
    v57 = ~(-1 << v56);
  v58 = v57 & *(_QWORD *)(v104 + 64);
  v59 = (unint64_t)(v56 + 63) >> 6;
  v60 = swift_bridgeObjectRetain();
  v61 = 0;
  v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v58)
    goto LABEL_61;
LABEL_62:
  v65 = v61 + 1;
  if (__OFADD__(v61, 1))
    goto LABEL_94;
  if (v65 >= v59)
    goto LABEL_88;
  v66 = *(_QWORD *)(v55 + 8 * v65);
  ++v61;
  if (v66)
  {
LABEL_79:
    v58 = (v66 - 1) & v66;
    for (i = __clz(__rbit64(v66)) + (v61 << 6); ; i = v63 | (v61 << 6))
    {
      v68 = (uint64_t *)(*(_QWORD *)(v60 + 48) + 16 * i);
      v70 = *v68;
      v69 = v68[1];
      v71 = v27[2];
      swift_bridgeObjectRetain();
      if (v71
        && (swift_bridgeObjectRetain(), sub_1BA6E35A8(v70, v69), v73 = v72, swift_bridgeObjectRelease(), (v73 & 1) != 0))
      {
        swift_bridgeObjectRelease();
        v60 = v104;
        if (!v58)
          goto LABEL_62;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v62 = sub_1BA6EA0D0(0, v62[2] + 1, 1, v62);
        v75 = v62[2];
        v74 = v62[3];
        v60 = v104;
        if (v75 >= v74 >> 1)
        {
          v77 = sub_1BA6EA0D0((_QWORD *)(v74 > 1), v75 + 1, 1, v62);
          v60 = v104;
          v62 = v77;
        }
        v62[2] = v75 + 1;
        v76 = &v62[2 * v75];
        v76[4] = v70;
        v76[5] = v69;
        if (!v58)
          goto LABEL_62;
      }
LABEL_61:
      v63 = __clz(__rbit64(v58));
      v58 &= v58 - 1;
    }
  }
  v61 = v65 + 1;
  if (v65 + 1 >= v59)
  {
LABEL_88:
    v78 = v60;
    swift_release();
    v79 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
    sub_1BA7AA598();
    v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = xmmword_1BB87FC80;
    v81 = v27[2];
    v82 = MEMORY[0x1E0DEB418];
    v83 = MEMORY[0x1E0DEB490];
    *(_QWORD *)(v80 + 56) = MEMORY[0x1E0DEB418];
    *(_QWORD *)(v80 + 64) = v83;
    *(_QWORD *)(v80 + 32) = v81;
    v84 = v62[2];
    *(_QWORD *)(v80 + 96) = v82;
    *(_QWORD *)(v80 + 104) = v83;
    *(_QWORD *)(v80 + 72) = v84;
    v86 = *a3;
    v85 = a3[1];
    *(_QWORD *)(v80 + 136) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v80 + 144) = sub_1BA6A2D8C();
    *(_QWORD *)(v80 + 112) = v86;
    *(_QWORD *)(v80 + 120) = v85;
    swift_bridgeObjectRetain();
    v87 = sub_1BB87330C();
    sub_1BB86EF44("Format service will resolve %ld prefetched and %ld unresolved puzzles for %{public}@", 84, 2, &dword_1BA493000, v79, v87, v80);
    swift_bridgeObjectRelease();
    if (v62[2])
    {
      sub_1BA8CAF70();
      v88 = swift_allocObject();
      *(_QWORD *)(v88 + 16) = v95;
      *(_QWORD *)(v88 + 24) = v62;
      swift_retain();
      sub_1BB86E95C();
      v105 = v27;
      *(_QWORD *)(swift_allocObject() + 16) = v78;
      swift_bridgeObjectRetain();
      v89 = (void *)sub_1BB86E854();
      sub_1BA8C9EB0(0, (unint64_t *)&unk_1ED3CF690, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
      sub_1BA8CBCF4((unint64_t *)&unk_1ED3AB0C0, (unint64_t *)&unk_1ED3AB0B0, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding);
      v90 = sub_1BB86EA88();
      swift_release();
      swift_release();

      swift_bridgeObjectRelease();
    }
    else
    {
      v91 = swift_bridgeObjectRetain();
      v92 = sub_1BA574364(v91);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v93 = sub_1BA8C3A68(MEMORY[0x1E0DEE9E0], v92, v78);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      v105 = v93;
      sub_1BA8CB074();
      swift_allocObject();
      v90 = sub_1BB86E9E0();
    }
    swift_bridgeObjectRelease();
    return v90;
  }
  v66 = *(_QWORD *)(v55 + 8 * v61);
  if (v66)
    goto LABEL_79;
  v61 = v65 + 2;
  if (v65 + 2 >= v59)
    goto LABEL_88;
  v66 = *(_QWORD *)(v55 + 8 * v61);
  if (v66)
    goto LABEL_79;
  v61 = v65 + 3;
  if (v65 + 3 >= v59)
    goto LABEL_88;
  v66 = *(_QWORD *)(v55 + 8 * v61);
  if (v66)
    goto LABEL_79;
  v61 = v65 + 4;
  if (v65 + 4 >= v59)
    goto LABEL_88;
  v66 = *(_QWORD *)(v55 + 8 * v61);
  if (v66)
    goto LABEL_79;
  v67 = v65 + 5;
  if (v67 >= v59)
    goto LABEL_88;
  v66 = *(_QWORD *)(v55 + 8 * v67);
  if (v66)
  {
    v61 = v67;
    goto LABEL_79;
  }
  while (1)
  {
    v61 = v67 + 1;
    if (__OFADD__(v67, 1))
      break;
    if (v61 >= v59)
      goto LABEL_88;
    v66 = *(_QWORD *)(v55 + 8 * v61);
    ++v67;
    if (v66)
      goto LABEL_79;
  }
LABEL_97:
  __break(1u);
LABEL_98:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA8AB5D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v3 = FormatContent.requirements.getter();
  v4 = Array<A>.puzzleTypes.getter(v3);
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = sub_1BA8F2958(MEMORY[0x1E0DEE9D8]);
  if (v4 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain_n();
    v6 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_3;
LABEL_26:
    swift_bridgeObjectRelease_n();
    if (*(_QWORD *)(isUniquelyReferenced_nonNull_native + 16))
    {
      v26 = sub_1BA8B3618(a1, isUniquelyReferenced_nonNull_native, v51);
      v28 = v27;
      if (*(_QWORD *)(v27 + 16))
      {
        v29 = objc_msgSend((id)objc_opt_self(), sel_cachePolicyWithSoftMaxAge_, 120.0);
        v30 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
        sub_1BA7AA598();
        v31 = isUniquelyReferenced_nonNull_native;
        v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = xmmword_1BB87FC80;
        v33 = *(_QWORD *)(v26 + 16);
        v34 = MEMORY[0x1E0DEB418];
        v35 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v32 + 64) = v35;
        *(_QWORD *)(v32 + 32) = v33;
        v36 = *(_QWORD *)(v28 + 16);
        *(_QWORD *)(v32 + 96) = v34;
        *(_QWORD *)(v32 + 104) = v35;
        *(_QWORD *)(v32 + 72) = v36;
        v38 = *a3;
        v37 = a3[1];
        *(_QWORD *)(v32 + 136) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v32 + 144) = sub_1BA6A2D8C();
        *(_QWORD *)(v32 + 112) = v38;
        *(_QWORD *)(v32 + 120) = v37;
        swift_bridgeObjectRetain();
        v39 = sub_1BB87330C();
        sub_1BB86EF44("Format service will resolve %ld prefetched and %ld unresolved puzzle types for %{public}@", 89, 2, &dword_1BA493000, v30, v39, v32);
        swift_bridgeObjectRelease();
        sub_1BA8CACE4();
        v40 = (_QWORD *)swift_allocObject();
        v40[2] = v51;
        v40[3] = v28;
        v40[4] = v29;
        swift_retain();
        v41 = v29;
        sub_1BB86E95C();
        v54 = v26;
        v42 = *(void **)(v51 + 136);
        v43 = swift_allocObject();
        *(_QWORD *)(v43 + 16) = v31;
        *(_QWORD *)(v43 + 24) = v42;
        v44 = v42;
        v45 = (void *)sub_1BB86E854();
        sub_1BA8C9EB0(0, &qword_1ED3CF6A0, (uint64_t)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
        sub_1BA8CBCF4(&qword_1EF2A9828, &qword_1ED3AB100, (uint64_t)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding);
        v46 = sub_1BB86EA88();
        swift_bridgeObjectRelease();
        swift_release();

        swift_release();
        return v46;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v54 = v26;
    }
    else
    {
      swift_bridgeObjectRelease();
      v54 = sub_1BA8F293C(MEMORY[0x1E0DEE9D8]);
    }
    sub_1BA8CAE48();
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
    goto LABEL_26;
LABEL_3:
  v52 = v4;
  v53 = v4 & 0xC000000000000001;
  v7 = 4;
  while (1)
  {
    v9 = v7 - 4;
    if (v53)
    {
      v10 = MEMORY[0x1BCCE4630](v7 - 4, v4);
      v11 = v7 - 3;
      if (__OFADD__(v9, 1))
        goto LABEL_22;
    }
    else
    {
      v10 = *(_QWORD *)(v4 + 8 * v7);
      swift_retain();
      v11 = v7 - 3;
      if (__OFADD__(v9, 1))
      {
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    v12 = *(_QWORD *)(v10 + 16);
    v13 = *(_QWORD *)(v10 + 24);
    swift_bridgeObjectRetain();
    v4 = isUniquelyReferenced_nonNull_native;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v54 = v4;
    v15 = sub_1BA6E35A8(v12, v13);
    v16 = *(_QWORD *)(v4 + 16);
    v17 = (v14 & 1) == 0;
    v18 = v16 + v17;
    if (__OFADD__(v16, v17))
      goto LABEL_23;
    v19 = v14;
    if (*(_QWORD *)(v4 + 24) < v18)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = v54;
      if ((v14 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      v4 = (unint64_t)&v54;
      sub_1BB4C1D24();
      isUniquelyReferenced_nonNull_native = v54;
      if ((v19 & 1) != 0)
      {
LABEL_4:
        v8 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 56);
        swift_release();
        *(_QWORD *)(v8 + 8 * v15) = v10;
        goto LABEL_5;
      }
    }
LABEL_18:
    *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * (v15 >> 6) + 64) |= 1 << v15;
    v22 = (uint64_t *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v15);
    *v22 = v12;
    v22[1] = v13;
    *(_QWORD *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + 8 * v15) = v10;
    v23 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_24;
    *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v25;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v7;
    v4 = v52;
    if (v11 == v6)
      goto LABEL_26;
  }
  sub_1BB4ADFF8(v18, isUniquelyReferenced_nonNull_native);
  v4 = v54;
  v20 = sub_1BA6E35A8(v12, v13);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    isUniquelyReferenced_nonNull_native = v54;
    if ((v19 & 1) != 0)
      goto LABEL_4;
    goto LABEL_18;
  }
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA8ABAC0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;

  v4 = v3;
  v8 = FormatContent.requirements.getter();
  v9 = Array<A>.puzzleStatistics.getter(v8);
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)sub_1BA8F2988(MEMORY[0x1E0DEE9D8]);
  v11 = v9[2];
  if (!v11)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    if (v10[2])
    {
      v32 = sub_1BA8B4064(a1, (uint64_t)v10);
      v34 = v33;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v34 + 16))
      {
        v35 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
        sub_1BA7AA598();
        v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_1BB87FC80;
        v37 = *(_QWORD *)(v32 + 16);
        v38 = MEMORY[0x1E0DEB418];
        v39 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEB418];
        *(_QWORD *)(v36 + 64) = v39;
        *(_QWORD *)(v36 + 32) = v37;
        v40 = *(_QWORD *)(v34 + 16);
        *(_QWORD *)(v36 + 96) = v38;
        *(_QWORD *)(v36 + 104) = v39;
        *(_QWORD *)(v36 + 72) = v40;
        v42 = *a3;
        v41 = a3[1];
        *(_QWORD *)(v36 + 136) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v36 + 144) = sub_1BA6A2D8C();
        *(_QWORD *)(v36 + 112) = v42;
        *(_QWORD *)(v36 + 120) = v41;
        swift_bridgeObjectRetain();
        v43 = sub_1BB87330C();
        sub_1BB86EF44("Format service will resolve %ld prefetched and %ld unresolved puzzle statistics for %{public}@", 94, 2, &dword_1BA493000, v35, v43, v36);
        swift_bridgeObjectRelease();
        sub_1BA4B07F0(0, &qword_1ED3AD1D8, (uint64_t (*)(uint64_t))sub_1BA8CA908, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
        v44 = swift_allocObject();
        *(_QWORD *)(v44 + 16) = v34;
        *(_QWORD *)(v44 + 24) = v4;
        swift_retain();
        sub_1BB86E95C();
        v45 = (void *)sub_1BB86E854();
        sub_1BA8CB2A8(0, &qword_1ED3C43C0, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
        sub_1BA50AD30(&qword_1ED3AE498, 255, (uint64_t (*)(uint64_t))sub_1BA8CA908, MEMORY[0x1E0DEAF38]);
        v46 = sub_1BB86EA88();
        swift_bridgeObjectRelease();

        swift_release();
        return v46;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BA8F296C(MEMORY[0x1E0DEE9D8]);
    }
    sub_1BA8CA9A0();
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  v48 = a1;
  v49 = a2;
  v50 = a3;
  v51 = v4;
  swift_bridgeObjectRetain();
  v12 = v9 + 8;
  while (1)
  {
    v52 = v11;
    v15 = *(v12 - 4);
    v14 = *(v12 - 3);
    v53 = *((_OWORD *)v12 - 1);
    v16 = *v12;
    v54 = *(_QWORD *)(v15 + 16);
    v55 = *(_QWORD *)(v15 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = sub_1BA6E35A8(v54, v55);
    v21 = v10[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      break;
    v24 = v19;
    if (v10[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C1D54();
    }
    else
    {
      sub_1BB4AE028(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_1BA6E35A8(v54, v55);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_24;
      v20 = v25;
    }
    if ((v24 & 1) != 0)
    {
      v13 = v10[7] + 40 * v20;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      *(_QWORD *)v13 = v15;
      *(_QWORD *)(v13 + 8) = v14;
      *(_OWORD *)(v13 + 16) = v53;
      *(_QWORD *)(v13 + 32) = v16;
    }
    else
    {
      v10[(v20 >> 6) + 8] |= 1 << v20;
      v27 = (uint64_t *)(v10[6] + 16 * v20);
      *v27 = v54;
      v27[1] = v55;
      v28 = v10[7] + 40 * v20;
      *(_QWORD *)v28 = v15;
      *(_QWORD *)(v28 + 8) = v14;
      *(_OWORD *)(v28 + 16) = v53;
      *(_QWORD *)(v28 + 32) = v16;
      v29 = v10[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_23;
      v10[2] = v31;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 += 5;
    --v11;
    if (v52 == 1)
    {
      swift_bridgeObjectRelease();
      a3 = v50;
      v4 = v51;
      a1 = v48;
      a2 = v49;
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA8ABF78(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v4 = FormatContent.requirements.getter();
  v5 = Array<A>.resources.getter(v4);
  swift_bridgeObjectRelease();
  v6 = sub_1BA89F5D4((uint64_t)v5);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
  sub_1BA7AA598();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
  v9 = *(_QWORD *)(v6 + 16);
  v10 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 32) = v9;
  v12 = *a2;
  v11 = a2[1];
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 96) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 104) = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 72) = v12;
  *(_QWORD *)(v8 + 80) = v11;
  swift_bridgeObjectRetain();
  v14 = sub_1BB87330C();
  sub_1BB86EF44("Format service will resolve %ld resources for %{public}@", 56, 2, &dword_1BA493000, v7, v14, v8);
  swift_bridgeObjectRelease();
  sub_1BA8C9EB0(0, (unint64_t *)&qword_1ED3B91E0, (uint64_t)&qword_1ED3B9760, 0x1E0D58EA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
  sub_1BB86EC14();
  v15 = (void *)sub_1BB86E854();
  sub_1BA8CB2A8(0, &qword_1ED3B91D0, (void (*)(uint64_t))type metadata accessor for FormatContentResource.Resolved);
  sub_1BB86E974();
  swift_release();

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v13, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A14((unint64_t *)&unk_1ED3B95E0, (unint64_t *)&qword_1ED3B95C0, v13);
  v16 = sub_1BB86E914();
  swift_bridgeObjectRelease();
  swift_release();
  return v16;
}

uint64_t sub_1BA8AC18C(_QWORD *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t i;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t j;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v7 = a1[13];
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1BA89F6A8(v8);
  swift_bridgeObjectRelease();
  v10 = a1[14];
  v11 = swift_bridgeObjectRetain();
  v12 = sub_1BA89F8C8(v11);
  swift_bridgeObjectRelease();
  v112 = v9;
  sub_1BB3839E4(v12);
  v111 = a1[15];
  v13 = swift_bridgeObjectRetain();
  v14 = sub_1BA89FAEC(v13);
  swift_bridgeObjectRelease();
  v112 = v9;
  sub_1BB3839E4(v14);
  v110 = a1[16];
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1BA89FD10(v15);
  swift_bridgeObjectRelease();
  v112 = v9;
  sub_1BB3839E4(v16);
  v109 = a1[17];
  v17 = swift_bridgeObjectRetain();
  v18 = sub_1BA89FF34(v17);
  swift_bridgeObjectRelease();
  v112 = v9;
  sub_1BB3839E4(v18);
  v108 = a1[18];
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1BA8A0158(v19);
  swift_bridgeObjectRelease();
  v112 = v9;
  sub_1BB3839E4(v20);
  v21 = a1[19];
  v22 = swift_bridgeObjectRetain();
  v23 = sub_1BA8A0380(v22);
  swift_bridgeObjectRelease();
  v112 = v9;
  sub_1BB3839E4(v23);
  v113 = MEMORY[0x1E0DEE9E8];
  v114 = MEMORY[0x1E0DEE9E8];
  v107 = a3;
  v24 = FormatContent.requirements.getter();
  v25 = Array<A>.scores.getter(v24);
  swift_bridgeObjectRelease();
  v106 = v9;
  v104 = a2;
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    i = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v105 = v21;
    if (i)
      goto LABEL_3;
  }
  else
  {
    i = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    v105 = v21;
    if (i)
    {
LABEL_3:
      if (i >= 1)
      {
        v27 = 0;
        while (1)
        {
          if ((v25 & 0xC000000000000001) != 0)
          {
            v30 = (_QWORD *)MEMORY[0x1BCCE4630](v27, v25);
            if (!*(_QWORD *)(v7 + 16))
              goto LABEL_6;
          }
          else
          {
            v30 = *(_QWORD **)(v25 + 8 * v27 + 32);
            swift_retain();
            if (!*(_QWORD *)(v7 + 16))
              goto LABEL_6;
          }
          v31 = v30[4];
          v32 = v30[5];
          swift_bridgeObjectRetain();
          sub_1BA6E35A8(v31, v32);
          if ((v33 & 1) != 0)
          {
            swift_release();
            goto LABEL_7;
          }
          swift_bridgeObjectRelease();
LABEL_6:
          v28 = v30[2];
          v29 = v30[3];
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC(&v112, v28, v29);
          swift_release();
LABEL_7:
          swift_bridgeObjectRelease();
          if (i == ++v27)
            goto LABEL_15;
        }
      }
      __break(1u);
      goto LABEL_112;
    }
  }
LABEL_15:
  swift_bridgeObjectRelease();
  v34 = FormatContent.requirements.getter();
  v35 = Array<A>.standings.getter(v34);
  swift_bridgeObjectRelease();
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    v36 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v3 = v106;
    if (v36)
      goto LABEL_17;
  }
  else
  {
    v36 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    v3 = v106;
    if (v36)
    {
LABEL_17:
      if (v36 < 1)
      {
LABEL_112:
        __break(1u);
        goto LABEL_113;
      }
      for (i = 0; v36 != i; ++i)
      {
        if ((v35 & 0xC000000000000001) != 0)
        {
          v39 = MEMORY[0x1BCCE4630](i, v35);
        }
        else
        {
          v39 = *(_QWORD *)(v35 + 8 * i + 32);
          swift_retain();
        }
        v37 = *(_QWORD *)(v39 + 24);
        if (*(_QWORD *)(v10 + 16))
        {
          v40 = *(_QWORD *)(v39 + 16);
          swift_bridgeObjectRetain();
          sub_1BA6E35A8(v40, v37);
          if ((v41 & 1) != 0)
          {
            swift_release();
            goto LABEL_21;
          }
          swift_bridgeObjectRelease();
          v37 = *(_QWORD *)(v39 + 24);
        }
        v38 = *(_QWORD *)(v39 + 16);
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(&v112, v38, v37);
        swift_release();
LABEL_21:
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  v42 = FormatContent.requirements.getter();
  v43 = Array<A>.brackets.getter(v42);
  swift_bridgeObjectRelease();
  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    v44 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v45 = v105;
    if (v44)
      goto LABEL_31;
  }
  else
  {
    v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
    v45 = v105;
    if (v44)
    {
LABEL_31:
      if (v44 < 1)
      {
LABEL_113:
        __break(1u);
        goto LABEL_114;
      }
      for (i = 0; v44 != i; ++i)
      {
        if ((v43 & 0xC000000000000001) != 0)
        {
          v48 = MEMORY[0x1BCCE4630](i, v43);
        }
        else
        {
          v48 = *(_QWORD *)(v43 + 8 * i + 32);
          swift_retain();
        }
        v46 = *(_QWORD *)(v48 + 24);
        if (*(_QWORD *)(v111 + 16))
        {
          v49 = *(_QWORD *)(v48 + 16);
          swift_bridgeObjectRetain();
          sub_1BA6E35A8(v49, v46);
          if ((v50 & 1) != 0)
          {
            swift_release();
            goto LABEL_35;
          }
          swift_bridgeObjectRelease();
          v46 = *(_QWORD *)(v48 + 24);
        }
        v47 = *(_QWORD *)(v48 + 16);
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(&v112, v47, v46);
        swift_release();
LABEL_35:
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  v51 = FormatContent.requirements.getter();
  v52 = Array<A>.boxScores.getter(v51);
  swift_bridgeObjectRelease();
  if (v52 >> 62)
  {
    swift_bridgeObjectRetain();
    v53 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v53)
      goto LABEL_45;
  }
  else
  {
    v53 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v53)
    {
LABEL_45:
      if (v53 < 1)
      {
LABEL_114:
        __break(1u);
        goto LABEL_115;
      }
      for (i = 0; v53 != i; ++i)
      {
        if ((v52 & 0xC000000000000001) != 0)
        {
          v56 = MEMORY[0x1BCCE4630](i, v52);
        }
        else
        {
          v56 = *(_QWORD *)(v52 + 8 * i + 32);
          swift_retain();
        }
        v54 = *(_QWORD *)(v56 + 24);
        if (*(_QWORD *)(v110 + 16))
        {
          v57 = *(_QWORD *)(v56 + 16);
          swift_bridgeObjectRetain();
          sub_1BA6E35A8(v57, v54);
          if ((v58 & 1) != 0)
          {
            swift_release();
            goto LABEL_49;
          }
          swift_bridgeObjectRelease();
          v54 = *(_QWORD *)(v56 + 24);
        }
        v55 = *(_QWORD *)(v56 + 16);
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(&v112, v55, v54);
        swift_release();
LABEL_49:
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  v59 = FormatContent.requirements.getter();
  v60 = Array<A>.lineScores.getter(v59);
  swift_bridgeObjectRelease();
  if (v60 >> 62)
  {
    swift_bridgeObjectRetain();
    v61 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v61)
      goto LABEL_59;
  }
  else
  {
    v61 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v61)
    {
LABEL_59:
      if (v61 < 1)
      {
LABEL_115:
        __break(1u);
        goto LABEL_116;
      }
      for (i = 0; v61 != i; ++i)
      {
        if ((v60 & 0xC000000000000001) != 0)
        {
          v64 = MEMORY[0x1BCCE4630](i, v60);
        }
        else
        {
          v64 = *(_QWORD *)(v60 + 8 * i + 32);
          swift_retain();
        }
        v62 = *(_QWORD *)(v64 + 24);
        if (*(_QWORD *)(v109 + 16))
        {
          v65 = *(_QWORD *)(v64 + 16);
          swift_bridgeObjectRetain();
          sub_1BA6E35A8(v65, v62);
          if ((v66 & 1) != 0)
          {
            swift_release();
            goto LABEL_63;
          }
          swift_bridgeObjectRelease();
          v62 = *(_QWORD *)(v64 + 24);
        }
        v63 = *(_QWORD *)(v64 + 16);
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(&v112, v63, v62);
        swift_release();
LABEL_63:
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  v67 = FormatContent.requirements.getter();
  v68 = Array<A>.injuryReports.getter(v67);
  swift_bridgeObjectRelease();
  if (v68 >> 62)
  {
    swift_bridgeObjectRetain();
    v69 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v69)
      goto LABEL_73;
  }
  else
  {
    v69 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v69)
    {
LABEL_73:
      if (v69 < 1)
      {
LABEL_116:
        __break(1u);
        goto LABEL_117;
      }
      for (i = 0; v69 != i; ++i)
      {
        if ((v68 & 0xC000000000000001) != 0)
        {
          v72 = MEMORY[0x1BCCE4630](i, v68);
        }
        else
        {
          v72 = *(_QWORD *)(v68 + 8 * i + 32);
          swift_retain();
        }
        v70 = *(_QWORD *)(v72 + 24);
        if (*(_QWORD *)(v108 + 16))
        {
          v73 = *(_QWORD *)(v72 + 16);
          swift_bridgeObjectRetain();
          sub_1BA6E35A8(v73, v70);
          if ((v74 & 1) != 0)
          {
            swift_release();
            goto LABEL_77;
          }
          swift_bridgeObjectRelease();
          v70 = *(_QWORD *)(v72 + 24);
        }
        v71 = *(_QWORD *)(v72 + 16);
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(&v112, v71, v70);
        swift_release();
LABEL_77:
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  v75 = FormatContent.requirements.getter();
  v76 = Array<A>.keyPlayers.getter(v75);
  swift_bridgeObjectRelease();
  if (v76 >> 62)
  {
    swift_bridgeObjectRetain();
    v77 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v77)
      goto LABEL_87;
  }
  else
  {
    v77 = *(_QWORD *)((v76 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v77)
    {
LABEL_87:
      if (v77 < 1)
      {
LABEL_117:
        __break(1u);
LABEL_118:
        sub_1BB872E44();
LABEL_101:
        sub_1BB872E8C();
        sub_1BB872DCC();
        v95 = v113;
        if (!*(_QWORD *)(v113 + 16))
          goto LABEL_108;
LABEL_105:
        sub_1BA4AD288(0, (unint64_t *)&unk_1ED3A3A80, (uint64_t)&type metadata for SportsDataVisualizationResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
        v96 = swift_allocObject();
        *(_QWORD *)(v96 + 16) = i;
        *(_QWORD *)(v96 + 24) = v95;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BB86E95C();
        MEMORY[0x1BCCE36AC]();
        if (*(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
        goto LABEL_108;
      }
      for (j = 0; v77 != j; ++j)
      {
        if ((v76 & 0xC000000000000001) != 0)
        {
          v81 = MEMORY[0x1BCCE4630](j, v76);
        }
        else
        {
          v81 = *(_QWORD *)(v76 + 8 * j + 32);
          swift_retain();
        }
        v79 = *(_QWORD *)(v81 + 24);
        if (*(_QWORD *)(v45 + 16))
        {
          v82 = *(_QWORD *)(v81 + 16);
          swift_bridgeObjectRetain();
          sub_1BA6E35A8(v82, v79);
          if ((v83 & 1) != 0)
          {
            swift_release();
            goto LABEL_91;
          }
          swift_bridgeObjectRelease();
          v79 = *(_QWORD *)(v81 + 24);
        }
        v80 = *(_QWORD *)(v81 + 16);
        swift_bridgeObjectRetain();
        sub_1BA6EE5AC(&v112, v80, v79);
        swift_release();
LABEL_91:
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_bridgeObjectRelease();
  v84 = *(_QWORD *)(v104 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
  sub_1BA7AA598();
  v85 = swift_allocObject();
  *(_OWORD *)(v85 + 16) = xmmword_1BB87FC80;
  v86 = *(_QWORD *)(v3 + 16);
  v87 = MEMORY[0x1E0DEB418];
  v88 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v85 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v85 + 64) = v88;
  *(_QWORD *)(v85 + 32) = v86;
  v89 = v114;
  v90 = *(_QWORD *)(v114 + 16);
  *(_QWORD *)(v85 + 96) = v87;
  *(_QWORD *)(v85 + 104) = v88;
  *(_QWORD *)(v85 + 72) = v90;
  v92 = *v107;
  v91 = v107[1];
  *(_QWORD *)(v85 + 136) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v85 + 144) = sub_1BA6A2D8C();
  *(_QWORD *)(v85 + 112) = v92;
  *(_QWORD *)(v85 + 120) = v91;
  swift_bridgeObjectRetain();
  v93 = sub_1BB87330C();
  sub_1BB86EF44("Format service will resolve %ld prefetched and %ld sport data visualizations fetches for %{public}@", 99, 2, &dword_1BA493000, v84, v93, v85);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v89 + 16))
  {
    v112 = MEMORY[0x1E0DEE9D8];
    sub_1BA4AD288(0, (unint64_t *)&unk_1ED3A3A80, (uint64_t)&type metadata for SportsDataVisualizationResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    v94 = swift_allocObject();
    i = v103;
    *(_QWORD *)(v94 + 16) = v103;
    *(_QWORD *)(v94 + 24) = v89;
    swift_retain();
    sub_1BB86E95C();
    MEMORY[0x1BCCE36AC]();
    if (*(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_101;
    goto LABEL_118;
  }
  v95 = v113;
  i = v103;
  if (!*(_QWORD *)(v113 + 16))
  {
    swift_bridgeObjectRelease();
    v112 = v3;
    sub_1BA8CA7FC(0, &qword_1ED3C4888, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    v101 = sub_1BB86E9E0();
    goto LABEL_109;
  }
  v112 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v95 + 16))
    goto LABEL_105;
LABEL_108:
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3A3A80, (uint64_t)&type metadata for SportsDataVisualizationResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  v97 = (void *)sub_1BB86E854();
  sub_1BA8CA738();
  sub_1BA50AD30(&qword_1ED3ABC68, 255, (uint64_t (*)(uint64_t))sub_1BA8CA738, MEMORY[0x1E0DEAF50]);
  sub_1BB86E920();
  swift_bridgeObjectRelease();

  v98 = (void *)sub_1BB86E854();
  sub_1BA4AD288(0, &qword_1ED3CF7B8, (uint64_t)&type metadata for SportsDataVisualization, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A14(&qword_1ED3ABC90, &qword_1ED3ABC88, (uint64_t)&type metadata for SportsDataVisualizationResult);
  sub_1BB86EA7C();
  swift_release();

  v99 = (void *)sub_1BB86E854();
  sub_1BA8CA7A4();
  sub_1BA6B5A14(&qword_1ED3AAF00, &qword_1ED3CF7B8, (uint64_t)&type metadata for SportsDataVisualization);
  sub_1BB86EAA0();
  swift_release();

  *(_QWORD *)(swift_allocObject() + 16) = v3;
  v100 = (void *)sub_1BB86E854();
  v101 = sub_1BB86E974();
  swift_release();
  swift_release();

LABEL_109:
  swift_bridgeObjectRelease();
  return v101;
}

uint64_t sub_1BA8AD008@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, const char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  const char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  void *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  int v54;
  uint64_t v55;
  char *v56;
  const char *v57;
  size_t v58;
  uint64_t v59;
  uint64_t v60;
  const char *v61;
  uint64_t v62;
  const char *v63;
  uint64_t v64;
  const char *v65;
  const char *v66;
  const char *v67;
  const char **v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  int *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  const char *v118;
  unint64_t v119;
  char v120;
  unint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  const char **v128;
  uint64_t v129;
  const char *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  unint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int *v140;
  char *v141;
  int *v142;
  uint64_t v143;
  _QWORD *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  const char **v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t result;
  const char *v157;
  uint64_t v158;
  _QWORD v159[2];
  uint64_t v160;
  _QWORD *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  const char *v183;
  const char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  const char *v188;
  uint64_t v189;
  uint64_t v190;
  id v191;
  void *v192;
  void *v193;
  void *v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  __int128 v198;
  int *v199;
  uint64_t *v200;
  const char **v201;
  char v202[8];
  _QWORD *v203;

  v197 = a4;
  v188 = a6;
  v189 = a8;
  v187 = a7;
  v195 = a5;
  v200 = a3;
  v178 = a2;
  v173 = a9;
  v171 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v171);
  v172 = (char *)&v162 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = type metadata accessor for FormatWebEmbed.Resolved();
  v166 = *(_QWORD *)(v167 - 8);
  MEMORY[0x1E0C80A78](v167);
  v162 = (char *)&v162 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6DB154(0);
  MEMORY[0x1E0C80A78](v14);
  v174 = (uint64_t)&v162 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FormatServiceOptions();
  MEMORY[0x1E0C80A78](v16);
  v176 = (uint64_t)&v162 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = (int *)type metadata accessor for FormatContent(0);
  MEMORY[0x1E0C80A78](v199);
  v175 = (uint64_t)&v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = type metadata accessor for FormatContentSubgroupFilterContext();
  MEMORY[0x1E0C80A78](v164);
  v163 = (uint64_t)&v162 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v165 = (uint64_t)&v162 - v21;
  sub_1BA6D940C(0);
  MEMORY[0x1E0C80A78](v22);
  v185 = (uint64_t)&v162 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = type metadata accessor for FormatContentPool();
  MEMORY[0x1E0C80A78](v182);
  v170 = (uint64_t)&v162 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v169 = (uint64_t)&v162 - v26;
  MEMORY[0x1E0C80A78](v27);
  v201 = (const char **)((char *)&v162 - v28);
  v29 = *a1;
  v30 = a1[1];
  v31 = a1[2];
  v32 = (const char *)a1[3];
  v33 = a1[4];
  v177 = a1[5];
  v35 = (const char *)a1[6];
  v34 = a1[7];
  v36 = a1[8];
  v37 = a1[9];
  v38 = a1[10];
  v39 = a1[11];
  v190 = v29;
  swift_bridgeObjectRetain();
  v186 = v30;
  swift_bridgeObjectRetain();
  v196 = v31;
  swift_bridgeObjectRetain();
  v184 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40 = v177;
  swift_bridgeObjectRetain();
  v183 = v35;
  swift_bridgeObjectRetain();
  v181 = v34;
  swift_bridgeObjectRetain();
  v180 = v36;
  v41 = (uint64_t)v200;
  swift_bridgeObjectRetain();
  v42 = v37;
  swift_bridgeObjectRetain();
  v179 = v38;
  v43 = v40;
  v44 = v199;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45 = (void *)sub_1BA8AE1E0(v41, v40);
  v193 = sub_1BA8AE270(v41, v33);
  v46 = (uint64_t *)(v41 + v44[8]);
  v47 = v46[1];
  if (v47)
  {
    v48 = *v46;
    swift_bridgeObjectRetain();
    v49 = v48;
    v50 = v198;
    v192 = sub_1BA8C38C0(v196, v49, v47);
    *(_QWORD *)&v198 = v50;
    swift_bridgeObjectRelease();
  }
  else
  {
    v192 = 0;
  }
  if (*(_QWORD *)(v41 + v44[6] + 8))
  {
    v51 = *(void **)(v197 + 16);
    v52 = (void *)sub_1BB872970();
    v191 = objc_msgSend(v51, sel_subscriptionForTagID_, v52);

    v194 = v45;
    if (!v45)
      goto LABEL_12;
  }
  else
  {
    v191 = 0;
    v194 = v45;
    if (!v45)
    {
LABEL_12:
      v54 = 3;
      goto LABEL_13;
    }
  }
  if ((objc_msgSend((id)swift_unknownObjectRetain(), sel_isPurchaseSetup) & 1) == 0
    && !objc_msgSend(v45, sel_isAuthenticationSetup))
  {
    swift_unknownObjectRelease();
    goto LABEL_12;
  }
  v53 = (void *)swift_unknownObjectRetain();
  FeedSubscriptionPaidAccess.init(paidAccessChecker:tag:)(v53, v45, (char *)&v203);
  v54 = v203;
LABEL_13:
  v168 = v54;
  v178 = sub_1BA85C914(v33);
  swift_bridgeObjectRelease();
  v55 = sub_1BA574364(v43);
  swift_bridgeObjectRelease();
  v56 = (char *)sub_1BA574364(v42);
  swift_bridgeObjectRelease();
  v57 = (const char *)sub_1BA574364(v179);
  swift_bridgeObjectRelease();
  v58 = sub_1BA85C900(v39);
  swift_bridgeObjectRelease();
  v59 = v195;
  v60 = swift_bridgeObjectRetain();
  v61 = (const char *)sub_1BA85C808(v60);
  swift_bridgeObjectRelease();
  v62 = swift_bridgeObjectRetain();
  v63 = (const char *)sub_1BA85C700(v62);
  swift_bridgeObjectRelease();
  v179 = v59 + *(int *)(v182 + 100);
  v64 = v185;
  sub_1BA4C2DD8(v179, v185, (uint64_t (*)(_QWORD))sub_1BA6D940C);
  v65 = v188;
  swift_bridgeObjectRetain();
  v66 = (const char *)v187;
  swift_bridgeObjectRetain();
  v182 = MEMORY[0x1E0DEE9D8];
  v67 = (const char *)sub_1BA8F2AF8(MEMORY[0x1E0DEE9D8]);
  v157 = v61;
  v68 = v201;
  FormatContentPool.init(headlines:headlineLists:issues:tags:tagFeeds:tagFeedFetches:puzzles:puzzleTypes:puzzleStatistics:placeholders:slotPlaceholders:webArchivePromises:resourcePromises:sportsDataVisualizations:genericDataVisualizations:sponsoredAdBanner:)(v196, v184, (unint64_t)v178, v55, v183, v67, v56, v57, v201, v58, v157, v63, v65, v66, v180, v181, v64);
  v69 = swift_bridgeObjectRetain();
  v70 = v198;
  v71 = (_QWORD *)sub_1BA8A464C(v69, v186);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v203 = v71;
  sub_1BA4B07F0(0, &qword_1ED3C43D8, type metadata accessor for FormatService.ThemePackage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC((unint64_t *)&unk_1ED3C43E0, &qword_1ED3C43D8, type metadata accessor for FormatService.ThemePackage, MEMORY[0x1E0DEAF38]);
  v72 = sub_1BB872BD4();
  swift_bridgeObjectRelease();
  v73 = sub_1BA8AE334(v72);
  swift_bridgeObjectRelease();
  v74 = (_QWORD *)sub_1BA8A0880(v73);
  swift_bridgeObjectRelease();
  v203 = v74;
  swift_bridgeObjectRetain();
  sub_1BA8C117C(&v203);
  if (v70)
  {
    result = swift_release();
    __break(1u);
    return result;
  }
  v75 = swift_bridgeObjectRelease();
  v76 = v203;
  MEMORY[0x1E0C80A78](v75);
  v77 = v200;
  v160 = a10;
  v161 = v200;
  v78 = sub_1BA8A2140((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CA4D8, (uint64_t)v159, (uint64_t)v76, (uint64_t)v202, type metadata accessor for FormatService.ThemePackage);
  v79 = swift_release();
  *(_QWORD *)&v198 = &v162;
  v80 = *(uint64_t *)((char *)v77 + v199[15]);
  MEMORY[0x1E0C80A78](v79);
  v159[0] = a10;
  v159[1] = v77;
  v160 = (uint64_t)v68;
  v161 = (_QWORD *)v197;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v81 = (_QWORD *)sub_1BA8A4B98(v80, a11, v190, (void (*)(unint64_t *__return_ptr, uint64_t, uint64_t, _QWORD))sub_1BA8CA4F4, (uint64_t)&v158);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v189 = v78;
  v82 = v175;
  sub_1BA4C2DD8((uint64_t)v77, v175, type metadata accessor for FormatContent);
  v190 = a10;
  v83 = v176;
  sub_1BA4C2DD8(a10, v176, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v84 = v163;
  sub_1BA4C2DD8(v82, v163, type metadata accessor for FormatContent);
  v85 = v164;
  sub_1BA4C2DD8(v83, v84 + *(int *)(v164 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v203 = v81;
  v196 = 0;
  sub_1BA4AD288(0, &qword_1ED3CF790, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)&v198 = v86;
  sub_1BA6B5A14((unint64_t *)&qword_1ED3CF798, &qword_1ED3CF790, (uint64_t)&type metadata for FormatContentSubgroup.ResolvedContainer);
  sub_1BA8CA510();
  v87 = v194;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v88 = sub_1BB872BBC();
  sub_1BA4A2E80(v83, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA4A2E80(v82, type metadata accessor for FormatContent);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v84 + *(int *)(v85 + 24)) = v88;
  *(_QWORD *)(v84 + *(int *)(v85 + 28)) = v87;
  v89 = v165;
  v90 = sub_1BA5193C4(v84, v165, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroupFilterContext);
  MEMORY[0x1E0C80A78](v90);
  v160 = v89;
  swift_bridgeObjectRetain();
  v91 = v196;
  v92 = sub_1BAC9C39C((uint64_t)sub_1BA8CA554, (uint64_t)v159, (uint64_t)v81);
  sub_1BA4A2E80(v89, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroupFilterContext);
  swift_bridgeObjectRelease();
  v93 = v199;
  v94 = (uint64_t *)((char *)v77 + v199[9]);
  v95 = v94[1];
  v188 = (const char *)v92;
  if (v95)
  {
    v96 = *v94;
    v97 = sub_1BA89EE58(v92);
    v98 = *(_QWORD *)(v97 + 16);
    v99 = v166;
    v196 = v91;
    if (v98)
    {
      v100 = v97 + ((*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80));
      v101 = *(_QWORD *)(v166 + 72);
      swift_bridgeObjectRetain();
      v102 = v162;
      while (1)
      {
        sub_1BA4C2DD8(v100, (uint64_t)v102, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
        v103 = *v102 == v96 && v95 == v102[1];
        if (v103 || (sub_1BB874398() & 1) != 0)
          break;
        sub_1BA4A2E80((uint64_t)v102, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
        v100 += v101;
        if (!--v98)
        {
          swift_bridgeObjectRelease();
          v77 = v200;
          goto LABEL_24;
        }
      }
      swift_bridgeObjectRelease();
      v104 = v174;
      sub_1BA5193C4((uint64_t)v102, v174, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v99 + 56))(v104, 0, 1, v167);
      swift_bridgeObjectRelease();
      v93 = v199;
      v77 = v200;
    }
    else
    {
LABEL_24:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56))(v174, 1, 1, v167);
      swift_bridgeObjectRelease();
      v93 = v199;
    }
  }
  else
  {
    v196 = v91;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v166 + 56))(v174, 1, 1, v167);
  }
  v105 = *(uint64_t *)((char *)v77 + v93[16]);
  v203 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v106 = *(_QWORD *)(v105 + 16);
  if (!v106)
  {
    v125 = *(uint64_t *)((char *)v77 + v93[17]);
    v203 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_50:
    swift_bridgeObjectRetain();
    v136 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_51;
  }
  v187 = swift_bridgeObjectRetain();
  v107 = (uint64_t *)(v187 + 48);
  v198 = xmmword_1BB87CE70;
  do
  {
    v115 = *(v107 - 2);
    v116 = *(v107 - 1);
    v117 = *v107;
    if ((~*v107 & 0xF000000000000007) != 0)
    {
      sub_1BA4B07F0(0, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v108 = type metadata accessor for FormatOption();
      v109 = *(unsigned __int8 *)(*(_QWORD *)(v108 - 8) + 80);
      v110 = (v109 + 32) & ~v109;
      v111 = swift_allocObject();
      *(_OWORD *)(v111 + 16) = v198;
      v112 = (uint64_t *)(v111 + v110);
      *v112 = v115;
      v112[1] = v116;
      v112[2] = v117;
      v112[3] = 1;
      v113 = v111 + v110 + *(int *)(v108 + 28);
      v114 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v113, 1, 1, v114);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    v118 = v201[9];
    if (*((_QWORD *)v118 + 2))
    {
      swift_bridgeObjectRetain();
      v119 = sub_1BA6E35A8(v115, v116);
      if ((v120 & 1) != 0)
      {
        v121 = *((_QWORD *)v118 + 7) + (v119 << 6);
        v197 = *(_QWORD *)(v121 + 8);
        v111 = *(_QWORD *)(v121 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
    }
    v111 = MEMORY[0x1E0DEE9D8];
LABEL_30:
    v107 += 3;
    sub_1BA5E7FF4(v117);
    sub_1BA6D3834(v111);
    --v106;
  }
  while (v106);
  v122 = v187;
  swift_bridgeObjectRelease();
  v123 = v203;
  v124 = *(_QWORD *)(v122 + 16);
  v77 = v200;
  v125 = *(uint64_t *)((char *)v200 + v199[17]);
  v203 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v182 = (uint64_t)v123;
  if (!v124)
  {
    v93 = v199;
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  v197 = v125;
  swift_bridgeObjectRetain();
  v126 = (_QWORD *)(v122 + 48);
  v127 = MEMORY[0x1E0DEE9E8];
  v128 = v201;
  do
  {
    v129 = v127;
    if ((~*v126 & 0xF000000000000007) == 0)
    {
      v130 = v128[9];
      if (*((_QWORD *)v130 + 2))
      {
        v131 = *(v126 - 2);
        v132 = *(v126 - 1);
        swift_bridgeObjectRetain();
        v133 = sub_1BA6E35A8(v131, v132);
        if ((v134 & 1) != 0)
        {
          v135 = *((_QWORD *)v130 + 7) + (v133 << 6);
          *(_QWORD *)&v198 = *(_QWORD *)(v135 + 8);
          v129 = *(_QWORD *)(v135 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v127 = MEMORY[0x1E0DEE9E8];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v77 = v200;
          swift_bridgeObjectRelease();
          v128 = v201;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v129 = v127;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v129 = v127;
      }
    }
    v126 += 3;
    sub_1BA67FB48(v129);
    --v124;
  }
  while (v124);
  swift_bridgeObjectRelease();
  v136 = v203;
  v93 = v199;
  v125 = v197;
LABEL_51:
  v137 = sub_1BA78A504((uint64_t)v136, v125);
  swift_bridgeObjectRelease();
  v139 = *v77;
  v138 = v77[1];
  v140 = v93;
  v141 = (char *)v77 + v93[5];
  v142 = (int *)v171;
  v143 = (uint64_t)v77;
  v144 = v172;
  v145 = &v172[*(int *)(v171 + 20)];
  v146 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v145, v141, v146);
  v147 = v174;
  sub_1BA4C2DD8(v174, (uint64_t)v144 + v142[14], (uint64_t (*)(_QWORD))sub_1BA6DB154);
  v148 = *(_QWORD *)(v143 + v140[12]);
  v149 = *(_QWORD *)(v143 + v140[13]);
  sub_1BA4C2DD8(v179, (uint64_t)v144 + v142[18], (uint64_t (*)(_QWORD))sub_1BA6D940C);
  *v144 = v139;
  v144[1] = v138;
  *(_QWORD *)((char *)v144 + v142[6]) = v149;
  *(_QWORD *)((char *)v144 + v142[7]) = v189;
  *(_QWORD *)((char *)v144 + v142[8]) = v188;
  *(_QWORD *)((char *)v144 + v142[9]) = v182;
  *(_QWORD *)((char *)v144 + v142[11]) = v194;
  *(_QWORD *)((char *)v144 + v142[12]) = v193;
  *(_QWORD *)((char *)v144 + v142[13]) = v192;
  *(_QWORD *)((char *)v144 + v142[15]) = v191;
  *((_BYTE *)v144 + v142[16]) = v168;
  *(_QWORD *)((char *)v144 + v142[17]) = v148;
  *(_QWORD *)((char *)v144 + v142[10]) = v137;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v147, (uint64_t (*)(_QWORD))sub_1BA6DB154);
  v150 = v176;
  sub_1BA4C2DD8(v190, v176, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v151 = v175;
  sub_1BA4C2DD8(v143, v175, type metadata accessor for FormatContent);
  v152 = v169;
  sub_1BA4C2DD8(v195, v169, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  v153 = v201;
  v154 = v170;
  sub_1BA4C2DD8((uint64_t)v201, v170, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  type metadata accessor for FormatServiceResult();
  v155 = swift_allocObject();
  sub_1BA5193C4(v150, v155 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_options, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4(v151, v155 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_content, type metadata accessor for FormatContent);
  sub_1BA5193C4(v152, v155 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_contentPool, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  sub_1BA5193C4((uint64_t)v144, v155 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedContent, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA5193C4(v154, v155 + OBJC_IVAR____TtC8NewsFeed19FormatServiceResult_resolvedPool, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  result = sub_1BA4A2E80((uint64_t)v153, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool);
  *v173 = v155;
  return result;
}

uint64_t sub_1BA8AE1E0(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 24));
  v4 = v3[1];
  if (!v4 || !*(_QWORD *)(a2 + 16))
    return 0;
  v5 = *v3;
  swift_bridgeObjectRetain();
  v6 = sub_1BA6E35A8(v5, v4);
  if ((v7 & 1) != 0)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v6);
    swift_unknownObjectRetain();
  }
  else
  {
    v8 = 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_1BA8AE270(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  void *v8;
  id v9;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for FormatContent(0) + 28));
  v4 = v3[1];
  if (!v4 || !*(_QWORD *)(a2 + 16))
    return 0;
  v5 = *v3;
  swift_bridgeObjectRetain();
  v6 = sub_1BA6E35A8(v5, v4);
  if ((v7 & 1) != 0)
  {
    v8 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v6);
    v9 = v8;
  }
  else
  {
    v8 = 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BA8AE2FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatService.ThemePackage(0) + 24));
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8AE334(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t i;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  sub_1BA8CA5EC(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatService.ThemePackage(0);
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v46 = (uint64_t)&v45 - v8;
  v9 = *(_QWORD *)(a1 + 64);
  v48 = a1 + 64;
  v54 = MEMORY[0x1E0DEE9E0];
  v10 = -1 << *(_BYTE *)(a1 + 32);
  if (-v10 < 64)
    v11 = ~(-1 << -(char)v10);
  else
    v11 = -1;
  v12 = v11 & v9;
  v45 = -1 << *(_BYTE *)(a1 + 32);
  v47 = (unint64_t)(63 - v10) >> 6;
  v50 = a1;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v12)
    goto LABEL_7;
LABEL_8:
  v16 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v16 >= v47)
      goto LABEL_45;
    v17 = *(_QWORD *)(v48 + 8 * v16);
    if (v17)
    {
LABEL_20:
      v12 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (v16 << 6);
      for (i = v16; ; v15 = v14 | (i << 6))
      {
        v19 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v15);
        v20 = *v19;
        v21 = v19[1];
        v22 = *(_QWORD *)(*(_QWORD *)(v50 + 56) + 8 * v15);
        v23 = qword_1ED3BB468;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23 != -1)
          swift_once();
        v24 = sub_1BB86EB84();
        v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED3B8FC8);
        MEMORY[0x1E0C80A78](v25);
        *(&v45 - 2) = v26;
        swift_bridgeObjectRetain();
        sub_1BAC9C5B0((uint64_t (*)(char *))sub_1BA8CA608, (uint64_t)(&v45 - 4), v22);
        sub_1BA50AD30((unint64_t *)&qword_1ED3B0910, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE0]);
        v27 = sub_1BB872DE4();
        swift_bridgeObjectRelease();
        v28 = *(_QWORD *)(v27 + 16);
        if (v28)
        {
          v29 = v52;
          sub_1BA4C2DD8(v27+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v52 + 72) * (v28 - 1), (uint64_t)v4, type metadata accessor for FormatService.ThemePackage);
          v30 = 0;
        }
        else
        {
          v30 = 1;
          v29 = v52;
        }
        v31 = v53;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v4, v30, 1, v53);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v4, 1, v31) == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA8CA5EC);
          if (!v12)
            goto LABEL_8;
        }
        else
        {
          v32 = v46;
          sub_1BA5193C4((uint64_t)v4, v46, type metadata accessor for FormatService.ThemePackage);
          sub_1BA5193C4(v32, v49, type metadata accessor for FormatService.ThemePackage);
          v33 = v54;
          v34 = *(_QWORD *)(v54 + 16);
          if (*(_QWORD *)(v54 + 24) <= v34)
          {
            sub_1BB4AE3A0(v34 + 1, 1);
            v33 = v54;
          }
          sub_1BB8745CC();
          sub_1BB872A90();
          result = sub_1BB874608();
          v35 = v33 + 64;
          v36 = -1 << *(_BYTE *)(v33 + 32);
          v37 = result & ~v36;
          v38 = v37 >> 6;
          if (((-1 << v37) & ~*(_QWORD *)(v33 + 64 + 8 * (v37 >> 6))) != 0)
          {
            v39 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v33 + 64 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v40 = 0;
            v41 = (unint64_t)(63 - v36) >> 6;
            do
            {
              if (++v38 == v41 && (v40 & 1) != 0)
              {
                __break(1u);
                goto LABEL_46;
              }
              v42 = v38 == v41;
              if (v38 == v41)
                v38 = 0;
              v40 |= v42;
              v43 = *(_QWORD *)(v35 + 8 * v38);
            }
            while (v43 == -1);
            v39 = __clz(__rbit64(~v43)) + (v38 << 6);
          }
          *(_QWORD *)(v35 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
          v44 = (_QWORD *)(*(_QWORD *)(v33 + 48) + 16 * v39);
          *v44 = v20;
          v44[1] = v21;
          sub_1BA5193C4(v49, *(_QWORD *)(v33 + 56) + *(_QWORD *)(v52 + 72) * v39, type metadata accessor for FormatService.ThemePackage);
          ++*(_QWORD *)(v33 + 16);
          result = swift_bridgeObjectRelease();
          if (!v12)
            goto LABEL_8;
        }
LABEL_7:
        v14 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
      }
    }
    v18 = i + 2;
    if (i + 2 >= v47)
      goto LABEL_45;
    v17 = *(_QWORD *)(v48 + 8 * v18);
    if (!v17)
    {
      v18 = i + 3;
      if (i + 3 >= v47)
        goto LABEL_45;
      v17 = *(_QWORD *)(v48 + 8 * v18);
      if (!v17)
      {
        v18 = i + 4;
        if (i + 4 >= v47)
          goto LABEL_45;
        v17 = *(_QWORD *)(v48 + 8 * v18);
        if (!v17)
        {
          v18 = i + 5;
          if (i + 5 < v47)
          {
            v17 = *(_QWORD *)(v48 + 8 * v18);
            if (v17)
              goto LABEL_19;
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_47;
              if (v16 >= v47)
                break;
              v17 = *(_QWORD *)(v48 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_20;
            }
          }
LABEL_45:
          sub_1BA6EBD18();
          return v54;
        }
      }
    }
LABEL_19:
    v16 = v18;
    goto LABEL_20;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1BA8AE8AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t result;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char v74;
  unint64_t v75;
  BOOL v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD v79[2];
  _QWORD *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  int64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int64_t i;
  _QWORD *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1BB86C67C();
  v99 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v85 = (char *)v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v84 = (char *)v79 - v7;
  v94 = sub_1BB86BFF8();
  v91 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v9 = (char *)v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WebArchive();
  v97 = *(_QWORD *)(v10 - 8);
  v98 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CB304(0);
  MEMORY[0x1E0C80A78](v13);
  v93 = (uint64_t)v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for FormatWebArchiveResource.Resolved();
  v104 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v90 = (uint64_t)v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v82 = (char *)v79 - v17;
  MEMORY[0x1E0C80A78](v18);
  v81 = (uint64_t)v79 - v19;
  sub_1BA8CB320(0);
  v105 = v20;
  MEMORY[0x1E0C80A78](v20);
  v80 = (_QWORD *)((char *)v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v22);
  v24 = (_QWORD *)((char *)v79 - v23);
  MEMORY[0x1E0C80A78](v25);
  v96 = (char *)v79 - v26;
  v27 = *(_QWORD *)(a1 + 64);
  v87 = a1 + 64;
  v108 = MEMORY[0x1E0DEE9E0];
  v28 = -1 << *(_BYTE *)(a1 + 32);
  if (-v28 < 64)
    v29 = ~(-1 << -(char)v28);
  else
    v29 = -1;
  v30 = v29 & v27;
  v79[0] = -1 << *(_BYTE *)(a1 + 32);
  v86 = (unint64_t)(63 - v28) >> 6;
  v100 = a1;
  result = swift_bridgeObjectRetain();
  i = 0;
  v95 = 0x80000001BB960F90;
  v103 = v4;
  v89 = v24;
  v83 = v9;
  if (v30)
    goto LABEL_7;
LABEL_8:
  v34 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v34 < v86)
    {
      v35 = *(_QWORD *)(v87 + 8 * v34);
      v36 = i + 1;
      if (v35)
        goto LABEL_23;
      v36 = i + 2;
      if (i + 2 >= v86)
        goto LABEL_42;
      v35 = *(_QWORD *)(v87 + 8 * v36);
      if (v35)
        goto LABEL_23;
      v36 = i + 3;
      if (i + 3 >= v86)
        goto LABEL_42;
      v35 = *(_QWORD *)(v87 + 8 * v36);
      if (v35)
        goto LABEL_23;
      v36 = i + 4;
      if (i + 4 >= v86)
        goto LABEL_42;
      v35 = *(_QWORD *)(v87 + 8 * v36);
      if (v35)
      {
LABEL_23:
        v32 = (uint64_t)v4;
        v107 = (v35 - 1) & v35;
        v33 = __clz(__rbit64(v35)) + (v36 << 6);
        for (i = v36; ; v33 = __clz(__rbit64(v30)) | (i << 6))
        {
          v38 = (uint64_t *)(*(_QWORD *)(v100 + 48) + 16 * v33);
          v39 = *v38;
          v40 = v38[1];
          v41 = v96;
          v42 = v105;
          sub_1BA4C2DD8(*(_QWORD *)(v100 + 56) + *(_QWORD *)(v97 + 72) * v33, (uint64_t)&v96[*(int *)(v105 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for WebArchive);
          *v41 = v39;
          v41[1] = v40;
          sub_1BA5193C4((uint64_t)v41, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA8CB320);
          v43 = (_QWORD *)((char *)v24 + *(int *)(v42 + 48));
          v45 = *v43;
          v44 = v43[1];
          v102 = v43;
          sub_1BA4C2DD8((uint64_t)v43, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebArchive);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BB86BFEC();
          sub_1BB86BFBC();
          sub_1BB86C568();
          sub_1BB86BF8C();
          swift_bridgeObjectRetain();
          sub_1BB86BFE0();
          sub_1BB86BF80();
          v46 = (uint64_t)v12;
          v47 = v99;
          v48 = v106;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v32, 1, v106) == 1)
          {
            swift_bridgeObjectRelease();
            sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for WebArchive);
            (*(void (**)(char *, uint64_t))(v91 + 8))(v9, v94);
            sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
            v49 = 1;
            v12 = (char *)v46;
            v50 = v93;
            v51 = v92;
            v4 = (char *)v32;
          }
          else
          {
            v88 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
            v52 = v84;
            v88(v84, v103, v48);
            v53 = v82;
            *(_QWORD *)v82 = v45;
            *((_QWORD *)v53 + 1) = v44;
            v54 = v92;
            (*(void (**)(char *, char *, uint64_t))(v47 + 16))(&v53[*(int *)(v92 + 20)], v52, v48);
            v55 = v85;
            sub_1BB86C5BC();
            v56 = v106;
            sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for WebArchive);
            v57 = v52;
            v58 = v94;
            v9 = v83;
            (*(void (**)(char *, uint64_t))(v47 + 8))(v57, v56);
            (*(void (**)(char *, uint64_t))(v91 + 8))(v9, v58);
            v88(&v53[*(int *)(v54 + 24)], v55, v56);
            v4 = v103;
            v59 = (uint64_t)v53;
            v24 = v89;
            v50 = v93;
            sub_1BA5193C4(v59, v93, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebArchiveResource.Resolved);
            v49 = 0;
            v12 = (char *)v46;
            v51 = v54;
          }
          v60 = v104;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v104 + 56))(v50, v49, 1, v51);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v50, 1, v51) == 1)
          {
            sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BA8CB320);
            result = sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))sub_1BA8CB304);
            v30 = v107;
            if (!v107)
              goto LABEL_8;
          }
          else
          {
            v61 = v81;
            sub_1BA5193C4(v50, v81, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebArchiveResource.Resolved);
            v62 = *(int *)(v105 + 48);
            v63 = v80;
            v64 = (uint64_t)v80 + v62;
            v65 = *v24;
            v66 = v24[1];
            *v80 = v65;
            v63[1] = v66;
            sub_1BA5193C4((uint64_t)v102, (uint64_t)v63 + v62, (uint64_t (*)(_QWORD))type metadata accessor for WebArchive);
            sub_1BA5193C4(v61, v90, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebArchiveResource.Resolved);
            v67 = v108;
            v68 = *(_QWORD *)(v108 + 16);
            if (*(_QWORD *)(v108 + 24) <= v68)
            {
              sub_1BB4AE728(v68 + 1, 1);
              v67 = v108;
            }
            sub_1BB8745CC();
            sub_1BB872A90();
            result = sub_1BB874608();
            v69 = v67 + 64;
            v70 = -1 << *(_BYTE *)(v67 + 32);
            v71 = result & ~v70;
            v72 = v71 >> 6;
            if (((-1 << v71) & ~*(_QWORD *)(v67 + 64 + 8 * (v71 >> 6))) != 0)
            {
              v73 = __clz(__rbit64((-1 << v71) & ~*(_QWORD *)(v67 + 64 + 8 * (v71 >> 6)))) | v71 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              v74 = 0;
              v75 = (unint64_t)(63 - v70) >> 6;
              do
              {
                if (++v72 == v75 && (v74 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_43;
                }
                v76 = v72 == v75;
                if (v72 == v75)
                  v72 = 0;
                v74 |= v76;
                v77 = *(_QWORD *)(v69 + 8 * v72);
              }
              while (v77 == -1);
              v73 = __clz(__rbit64(~v77)) + (v72 << 6);
            }
            *(_QWORD *)(v69 + ((v73 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v73;
            v78 = (_QWORD *)(*(_QWORD *)(v67 + 48) + 16 * v73);
            *v78 = v65;
            v78[1] = v66;
            sub_1BA5193C4(v90, *(_QWORD *)(v67 + 56) + *(_QWORD *)(v104 + 72) * v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebArchiveResource.Resolved);
            ++*(_QWORD *)(v67 + 16);
            result = sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))type metadata accessor for WebArchive);
            v4 = v103;
            v24 = v89;
            v30 = v107;
            if (!v107)
              goto LABEL_8;
          }
LABEL_7:
          v32 = (uint64_t)v4;
          v107 = (v30 - 1) & v30;
        }
      }
      v37 = i + 5;
      if (i + 5 < v86)
      {
        v35 = *(_QWORD *)(v87 + 8 * v37);
        if (v35)
        {
          v36 = i + 5;
          goto LABEL_23;
        }
        while (1)
        {
          v36 = v37 + 1;
          if (__OFADD__(v37, 1))
            goto LABEL_44;
          if (v36 >= v86)
            break;
          v35 = *(_QWORD *)(v87 + 8 * v36);
          ++v37;
          if (v35)
            goto LABEL_23;
        }
      }
    }
LABEL_42:
    sub_1BA6EBD18();
    return v108;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

void sub_1BA8AF200(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char **v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  unint64_t v52;
  BOOL v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v63 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for FormatContentResource.Resolved();
  v57 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v68 = (uint64_t)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v60 = (_QWORD *)((char *)v56 - v9);
  MEMORY[0x1E0C80A78](v10);
  v59 = (uint64_t)v56 - v11;
  MEMORY[0x1E0C80A78](v12);
  v58 = (uint64_t)v56 - v13;
  v14 = *(_QWORD *)(a1 + 64);
  v66 = a1 + 64;
  v75 = MEMORY[0x1E0DEE9E0];
  v15 = -1 << *(_BYTE *)(a1 + 32);
  if (-v15 < 64)
    v16 = ~(-1 << -(char)v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  v56[0] = -1 << *(_BYTE *)(a1 + 32);
  v65 = (unint64_t)(63 - v15) >> 6;
  v70 = a1;
  swift_bridgeObjectRetain();
  v71 = 0;
  v18 = &selRef_backgroundColor;
  v64 = v4;
  v61 = v5;
  if (v17)
    goto LABEL_7;
LABEL_8:
  v20 = v71 + 1;
  if (!__OFADD__(v71, 1))
  {
    if (v20 < v65)
    {
      v21 = *(_QWORD *)(v66 + 8 * v20);
      v22 = v71 + 1;
      if (v21)
        goto LABEL_23;
      v22 = v71 + 2;
      if (v71 + 2 >= v65)
        goto LABEL_39;
      v21 = *(_QWORD *)(v66 + 8 * v22);
      if (v21)
        goto LABEL_23;
      v22 = v71 + 3;
      if (v71 + 3 >= v65)
        goto LABEL_39;
      v21 = *(_QWORD *)(v66 + 8 * v22);
      if (v21)
        goto LABEL_23;
      v22 = v71 + 4;
      if (v71 + 4 >= v65)
        goto LABEL_39;
      v21 = *(_QWORD *)(v66 + 8 * v22);
      if (v21)
      {
LABEL_23:
        v71 = v22;
        v72 = (v21 - 1) & v21;
        for (i = __clz(__rbit64(v21)) + (v22 << 6); ; i = __clz(__rbit64(v17)) | (v71 << 6))
        {
          v24 = (uint64_t *)(*(_QWORD *)(v70 + 48) + 16 * i);
          v26 = *v24;
          v25 = v24[1];
          v27 = *(void **)(*(_QWORD *)(v70 + 56) + 8 * i);
          swift_bridgeObjectRetain();
          v28 = v27;
          v29 = objc_msgSend(v28, v18[80]);
          v30 = sub_1BB8729A0();
          v32 = v31;

          v73 = 0x7373612D7377656ELL;
          v74 = 0xEA00000000007465;
          sub_1BB872AFC((_QWORD *)0xEA00000000007465);
          sub_1BB872AFC(v33);
          sub_1BB86C634();
          swift_bridgeObjectRelease();
          v34 = v69;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v69) == 1)
          {
            swift_bridgeObjectRelease();
            sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);

            swift_bridgeObjectRelease();
            v17 = v72;
            if (!v72)
              goto LABEL_8;
          }
          else
          {
            v67 = v26;
            v35 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
            v36 = v63;
            v35(v63, v4, v34);
            v37 = (uint64_t)v60;
            *v60 = v30;
            *(_QWORD *)(v37 + 8) = v32;
            v38 = v68;
            v35((char *)(v37 + *(int *)(v62 + 20)), v36, v34);
            v39 = v59;
            sub_1BA5193C4(v37, v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentResource.Resolved);
            v40 = v39;
            v41 = v58;
            sub_1BA5193C4(v40, v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentResource.Resolved);
            sub_1BA5193C4(v41, v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentResource.Resolved);
            v42 = v75;
            v43 = *(_QWORD *)(v75 + 16);
            if (*(_QWORD *)(v75 + 24) <= v43)
            {
              sub_1BB4AE73C(v43 + 1, 1);
              v42 = v75;
            }
            sub_1BB8745CC();
            v44 = v67;
            sub_1BB872A90();
            v45 = sub_1BB874608();
            v46 = v42 + 64;
            v47 = -1 << *(_BYTE *)(v42 + 32);
            v48 = v45 & ~v47;
            v49 = v48 >> 6;
            v5 = v61;
            v18 = &selRef_backgroundColor;
            if (((-1 << v48) & ~*(_QWORD *)(v42 + 64 + 8 * (v48 >> 6))) != 0)
            {
              v50 = __clz(__rbit64((-1 << v48) & ~*(_QWORD *)(v42 + 64 + 8 * (v48 >> 6)))) | v48 & 0x7FFFFFFFFFFFFFC0;
              v4 = v64;
            }
            else
            {
              v51 = 0;
              v52 = (unint64_t)(63 - v47) >> 6;
              v4 = v64;
              do
              {
                if (++v49 == v52 && (v51 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_40;
                }
                v53 = v49 == v52;
                if (v49 == v52)
                  v49 = 0;
                v51 |= v53;
                v54 = *(_QWORD *)(v46 + 8 * v49);
              }
              while (v54 == -1);
              v50 = __clz(__rbit64(~v54)) + (v49 << 6);
            }
            *(_QWORD *)(v46 + ((v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v50;
            v55 = (_QWORD *)(*(_QWORD *)(v42 + 48) + 16 * v50);
            *v55 = v44;
            v55[1] = v25;
            sub_1BA5193C4(v68, *(_QWORD *)(v42 + 56) + *(_QWORD *)(v57 + 72) * v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentResource.Resolved);
            ++*(_QWORD *)(v42 + 16);

            v17 = v72;
            if (!v72)
              goto LABEL_8;
          }
LABEL_7:
          v72 = (v17 - 1) & v17;
        }
      }
      v23 = v71 + 5;
      if (v71 + 5 < v65)
      {
        v21 = *(_QWORD *)(v66 + 8 * v23);
        if (v21)
        {
          v22 = v71 + 5;
          goto LABEL_23;
        }
        while (1)
        {
          v22 = v23 + 1;
          if (__OFADD__(v23, 1))
            goto LABEL_41;
          if (v22 >= v65)
            break;
          v21 = *(_QWORD *)(v66 + 8 * v22);
          ++v23;
          if (v21)
            goto LABEL_23;
        }
      }
    }
LABEL_39:
    sub_1BA6EBD18();
    return;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t sub_1BA8AF7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
  sub_1BA7AA598();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87FC80;
  v9 = *a3;
  v10 = a3[1];
  v11 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v12 = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 64) = v12;
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v10;
  v13 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatService.ThemePackage(0) + 24));
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v13 + 24);
  *(_QWORD *)(v8 + 96) = v11;
  *(_QWORD *)(v8 + 104) = v12;
  *(_QWORD *)(v8 + 72) = v14;
  *(_QWORD *)(v8 + 80) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_1BA8AF900();
  *(_QWORD *)(v8 + 136) = v11;
  *(_QWORD *)(v8 + 144) = v12;
  *(_QWORD *)(v8 + 112) = v16;
  *(_QWORD *)(v8 + 120) = v17;
  v18 = sub_1BB87330C();
  sub_1BB86EF44("FormatService content %{public}@ resolved theme package %{public}@ from reference %{public}@", 92, 2, &dword_1BA493000, v7, v18, v8);
  swift_bridgeObjectRelease();
  *a4 = v13;
  return swift_retain();
}

uint64_t sub_1BA8AF900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v28;
  unint64_t v29;

  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0, (uint64_t)v13, v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)&v13[*(int *)(v15 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    return 0x6E693D657079747BLL;
  }
  else
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v18 = (uint64_t)&v13[*(int *)(v17 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    sub_1BA5193C4(v18, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v28 = 0xD000000000000013;
    v29 = 0x80000001BB960D00;
    sub_1BA4C2DD8((uint64_t)&v6[*(int *)(v4 + 28)], (uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    v19 = sub_1BB86EB84();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v3, 1, v19) == 1)
    {
      sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    }
    else
    {
      sub_1BB86EB24();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v19);
    }
    sub_1BB872AFC(v21);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v22);
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v23);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v24);
    sub_1BB86C538();
    sub_1BB872AFC(v25);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v26);
    v16 = v28;
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v16;
}

uint64_t sub_1BA8AFC8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _OWORD *v46;
  uint64_t v48;
  _OWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;

  v53 = a5;
  v54 = a7;
  v51 = a6;
  v49 = a8;
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CA590(0);
  v16 = v15;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v48 - v20;
  sub_1BA4C2DD8(a2, (uint64_t)&v48 - v20, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  *(_QWORD *)&v21[*(int *)(v16 + 48)] = a3;
  v50 = v21;
  sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  sub_1BA5193C4((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  v22 = *(int *)(type metadata accessor for FormatServiceOptions() + 52);
  v52 = a4;
  v23 = *(_QWORD *)(a4 + v22);
  sub_1BA7AA598();
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB87D7A0;
  v26 = *v53;
  v25 = v53[1];
  v27 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEA968];
  v28 = sub_1BA6A2D8C();
  *(_QWORD *)(v24 + 32) = v26;
  *(_QWORD *)(v24 + 40) = v25;
  v29 = *a1;
  v30 = a1[1];
  v53 = a1;
  *(_QWORD *)(v24 + 96) = v27;
  *(_QWORD *)(v24 + 104) = v28;
  *(_QWORD *)(v24 + 64) = v28;
  *(_QWORD *)(v24 + 72) = v29;
  *(_QWORD *)(v24 + 80) = v30;
  v31 = *(_QWORD *)(a3 + 16);
  v32 = *(_QWORD *)(a3 + 24);
  *(_QWORD *)(v24 + 136) = v27;
  *(_QWORD *)(v24 + 144) = v28;
  *(_QWORD *)(v24 + 112) = v31;
  *(_QWORD *)(v24 + 120) = v32;
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33 = sub_1BA8AF900();
  *(_QWORD *)(v24 + 176) = v27;
  *(_QWORD *)(v24 + 184) = v28;
  *(_QWORD *)(v24 + 152) = v33;
  *(_QWORD *)(v24 + 160) = v34;
  v35 = sub_1BB87330C();
  sub_1BB86EF44("FormatService content %{public}@ resolved subgroup %{public}@ with layout package %{public}@ from reference %{public}@", 118, 2, &dword_1BA493000, v23, v35, v24);
  swift_bridgeObjectRelease();
  v36 = (_BYTE *)(a3 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction);
  swift_beginAccess();
  if (*v36 == 4)
  {
    v37 = v61;
    sub_1BB2A9C38(a3, v51, v52, v54, &v55);
    swift_release();
    if (!v37)
    {
      v38 = v56;
      v39 = v60;
      v40 = v49;
      *v49 = v55;
      *((_QWORD *)v40 + 2) = v38;
      *(_OWORD *)((char *)v40 + 24) = v57;
      *(_OWORD *)((char *)v40 + 40) = v58;
      *(_OWORD *)((char *)v40 + 56) = v59;
      *((_QWORD *)v40 + 9) = v39;
    }
  }
  else
  {
    v41 = v61;
    sub_1BB2A9C38(a3, v51, v52, v54, &v55);
    swift_release();
    if (!v41)
    {
      v42 = v56;
      v43 = v57;
      v44 = v60;
      v45 = *((_QWORD *)&v57 + 1) | 0x8000000000000000;
      v46 = v49;
      *v49 = v55;
      *((_QWORD *)v46 + 2) = v42;
      *((_QWORD *)v46 + 3) = v43;
      *((_QWORD *)v46 + 4) = v45;
      *(_OWORD *)((char *)v46 + 40) = v58;
      *(_OWORD *)((char *)v46 + 56) = v59;
      *((_QWORD *)v46 + 9) = v44;
    }
  }
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  return sub_1BA4A2E80((uint64_t)v50, (uint64_t (*)(_QWORD))sub_1BA8CA590);
}

id *FormatService.deinit()
{
  id *v0;

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 20));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 25));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 30));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 35));

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 44));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 49));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 54));
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 62));
  return v0;
}

uint64_t FormatService.__deallocating_deinit()
{
  FormatService.deinit();
  return swift_deallocClassInstance();
}

uint64_t *sub_1BA8B0074(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return FormatService.resolveResult(content:pool:options:)(a1, a2, a3);
}

uint64_t sub_1BA8B0094(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  BOOL v10;

  v1 = *(_QWORD *)(a1 + 72);
  sub_1BA6D78DC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = v1 + 32;
    v5 = v3 - 1;
    do
    {
      v4 += 8;
      v6 = v2;
      sub_1BB17355C();
      v8 = v7;
      v10 = v5-- != 0;
      if ((v7 & 1) == 0)
        break;
      v2 = v6;
    }
    while (v10);
  }
  else
  {
    v8 = 1;
  }
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BA8B01F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BA8AE8AC(*a1);
  *a2 = result;
  return result;
}

void sub_1BA8B021C(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  sub_1BA8AF200(*a1);
  *a2 = v3;
}

unint64_t sub_1BA8B0244(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v7 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v30 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v30)
      goto LABEL_4;
  }
  else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    swift_bridgeObjectRetain();
    return a1;
  }
  v8 = *(_QWORD *)(a2 + 64);
  if (v8 == 1)
    goto LABEL_4;
  v33 = v3;
  v31 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
  sub_1BA7AA598();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87A390;
  v11 = *a3;
  v12 = a3[1];
  v34 = v11;
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v14 = sub_1BA6A2D8C();
  *(_QWORD *)(v10 + 64) = v14;
  v32 = v14;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v12;
  swift_bridgeObjectRetain();
  v15 = (id)FCTagFilterOptionsToNSString();
  v16 = sub_1BB8729A0();
  v18 = v17;

  *(_QWORD *)(v10 + 96) = v13;
  *(_QWORD *)(v10 + 104) = v14;
  *(_QWORD *)(v10 + 72) = v16;
  *(_QWORD *)(v10 + 80) = v18;
  v19 = sub_1BB87330C();
  sub_1BB86EF44("Format service content %{public}@ creating tag filter with options %{public}@", 77, 2, &dword_1BA493000, v31, v19, v10);
  swift_bridgeObjectRelease();
  v20 = (void *)objc_opt_self();
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3B9800);
  v21 = (void *)sub_1BB872D9C();
  v22 = objc_msgSend(v20, sel_filterTags_options_context_, v21, v8, *(_QWORD *)(v33 + 152));

  v9 = sub_1BB872DB4();
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BB87FC80;
  *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v23 + 64) = v32;
  *(_QWORD *)(v23 + 32) = v34;
  *(_QWORD *)(v23 + 40) = v12;
  if (v7)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v25 = MEMORY[0x1E0DEB418];
  v26 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v23 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v23 + 104) = v26;
  *(_QWORD *)(v23 + 72) = v24;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v23 + 136) = v25;
  *(_QWORD *)(v23 + 144) = v26;
  *(_QWORD *)(v23 + 112) = v27;
  v28 = sub_1BB87330C();
  sub_1BB86EF44("Format service content %{public}@ finished filtering tags from %ld to %ld", 73, 2, &dword_1BA493000, v31, v28, v23);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1BA8B0558(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;

  v5 = a1[15];
  v6 = a1[16];
  __swift_project_boxed_opaque_existential_1(a1 + 12, v5);
  v7 = *a2;
  v8 = *(double *)(a3 + 40);
  LODWORD(a3) = *(unsigned __int8 *)(a3 + 48);
  v9 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  if ((_DWORD)a3 == 1)
  {
    if (v8 == 0.0)
      v10 = objc_msgSend(v9, sel_defaultCachePolicy);
    else
      v10 = objc_msgSend(v9, sel_cachedOnlyCachePolicy);
  }
  else
  {
    v10 = objc_msgSend(v9, sel_cachePolicyWithSoftMaxAge_, v8);
  }
  v11 = v10;
  v12 = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v6 + 24))(v7, v11, v5, v6);
  swift_bridgeObjectRelease();

  return v12;
}

uint64_t sub_1BA8B064C(uint64_t *a1, id *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v3 = *a2;
  v4 = objc_msgSend(*a2, sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  swift_unknownObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *a1;
  *a1 = 0x8000000000000000;
  sub_1BB4BDB48((uint64_t)v3, v5, v7, isUniquelyReferenced_nonNull_native);
  *a1 = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8B070C()
{
  void *v0;
  uint64_t v1;

  sub_1BA8CB71C();
  v0 = (void *)sub_1BB86E854();
  v1 = sub_1BB86E938();

  return v1;
}

unint64_t sub_1BA8B0774(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v50[4];
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t v54;
  __int128 v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;

  v7 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v48 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v48)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRetain();
    return a1;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_3:
  v52 = *(_QWORD *)(a2 + 56);
  v8 = type metadata accessor for FormatServiceOptions();
  v58 = *(int *)(v8 + 52);
  v51 = *(_QWORD *)(a2 + v58);
  sub_1BA7AA598();
  v56 = v9;
  v10 = swift_allocObject();
  v55 = xmmword_1BB87FC80;
  *(_OWORD *)(v10 + 16) = xmmword_1BB87FC80;
  v57 = v7;
  v11 = *a3;
  v12 = a3[1];
  v13 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  v53 = a3;
  v14 = v13;
  v15 = sub_1BA6A2D8C();
  *(_QWORD *)(v10 + 64) = v15;
  v16 = v3;
  v17 = v15;
  v54 = v15;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 40) = v12;
  swift_bridgeObjectRetain();
  v18 = (id)FCFeedFilterOptionsToNSString();
  v19 = sub_1BB8729A0();
  v21 = v20;

  *(_QWORD *)(v10 + 96) = v14;
  *(_QWORD *)(v10 + 104) = v17;
  *(_QWORD *)(v10 + 72) = v19;
  *(_QWORD *)(v10 + 80) = v21;
  v22 = *(_QWORD *)(*(_QWORD *)(a2 + *(int *)(v8 + 44)) + 16);
  v23 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v10 + 136) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v10 + 144) = v23;
  *(_QWORD *)(v10 + 112) = v22;
  v24 = sub_1BB87330C();
  sub_1BB86EF44("Format service content %{public}@ creating headline filter transform with options %{public}@ and deduping against %ld headlines", 127, 2, &dword_1BA493000, v51, v24, v10);
  swift_bridgeObjectRelease();
  v25 = (void *)objc_opt_self();
  v26 = *(void **)(v16 + 152);
  v27 = objc_msgSend(objc_msgSend(v26, sel_configurationManager), sel_configuration);
  swift_unknownObjectRelease();
  v28 = swift_bridgeObjectRetain();
  sub_1BA67F4CC(v28);
  swift_bridgeObjectRelease();
  v29 = v14;
  v30 = (void *)sub_1BB872D9C();
  swift_release();
  v31 = objc_msgSend(v25, sel_transformationWithFilterOptions_configuration_context_otherArticleIDs_, v52, v27, v26, v30);
  swift_unknownObjectRelease();

  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3D4450);
  v32 = (void *)sub_1BB872D9C();
  v33 = objc_msgSend(v31, sel_transformHeadlinesWithResult_, v32);

  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B0428);
  v34 = sub_1BB872DB4();

  MEMORY[0x1E0C80A78](v35);
  v36 = v53;
  v50[2] = a2;
  v50[3] = v53;
  v37 = sub_1BB141254((void (*)(uint64_t *__return_ptr, id *))sub_1BA8CB880, (uint64_t)v50, v34);
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(a2 + v58);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v55;
  v40 = *v36;
  v41 = v36[1];
  v42 = v54;
  *(_QWORD *)(v39 + 56) = v29;
  *(_QWORD *)(v39 + 64) = v42;
  *(_QWORD *)(v39 + 32) = v40;
  *(_QWORD *)(v39 + 40) = v41;
  if (v57)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v43 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v44 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v39 + 96) = MEMORY[0x1E0DEB418];
  v45 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v39 + 104) = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v39 + 72) = v43;
  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    v46 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v39 + 136) = v44;
  *(_QWORD *)(v39 + 144) = v45;
  *(_QWORD *)(v39 + 112) = v46;
  v47 = sub_1BB87330C();
  sub_1BB86EF44("Format service content %{public}@ finished filtering headlines from %ld to %ld", 78, 2, &dword_1BA493000, v38, v47, v39);

  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_1BA8B0BC0(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  double v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v14;
  void *v15;
  uint64_t v16;

  v5 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    v7 = a3[15];
    v8 = a3[16];
    __swift_project_boxed_opaque_existential_1(a3 + 12, v7);
    v9 = *(double *)(a4 + 40);
    LODWORD(a4) = *(unsigned __int8 *)(a4 + 48);
    v10 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    if ((_DWORD)a4 == 1)
    {
      if (v9 == 0.0)
        v11 = objc_msgSend(v10, sel_defaultCachePolicy);
      else
        v11 = objc_msgSend(v10, sel_cachedOnlyCachePolicy);
    }
    else
    {
      v11 = objc_msgSend(v10, sel_cachePolicyWithSoftMaxAge_, v9);
    }
    v14 = v11;
    (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v8 + 24))(v5, v14, v7, v8);
    swift_bridgeObjectRelease();

    *(_QWORD *)(swift_allocObject() + 16) = a2;
    swift_bridgeObjectRetain();
    v15 = (void *)sub_1BB86E854();
    sub_1BA6CA500(0, (unint64_t *)&qword_1ED3B9630, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v16 = sub_1BB86E974();
    swift_release();
    swift_release();

    return v16;
  }
  else
  {
    v12 = swift_bridgeObjectRetain();
    sub_1BA574364(v12);
    swift_bridgeObjectRelease();
    sub_1BA8CB8B0();
    swift_allocObject();
    return sub_1BB86E9E0();
  }
}

uint64_t sub_1BA8B0D84@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a1;
  swift_bridgeObjectRetain();
  v6 = sub_1BA574364(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  result = sub_1BB383FF4(v5);
  *a3 = v6;
  return result;
}

void sub_1BA8B0DFC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  double v21;
  double v22;
  double v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  double v47;
  int v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatServiceOptions();
  MEMORY[0x1E0C80A78](v10);
  v58 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v52 - v13;
  v15 = *a1;
  v16 = FormatContent.requirements.getter();
  v17 = Array<A>.tagFeeds.getter(v16);
  swift_bridgeObjectRelease();
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BB873F30();
  }
  else
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v60 = a4;
  v54 = v15;
  v55 = v10;
  v56 = v14;
  v57 = a2;
  if (v18)
  {
    if (v18 >= 1)
    {
      v19 = 0;
      v20 = 1;
      v21 = 0.0;
      while (1)
      {
        if ((v17 & 0xC000000000000001) != 0)
        {
          v25 = MEMORY[0x1BCCE4630](v19++, v17);
          v23 = *(double *)(v25 + 32);
          v24 = *(_BYTE *)(v25 + 40);
          swift_unknownObjectRelease();
          if ((v20 & 1) == 0)
            goto LABEL_6;
        }
        else
        {
          v26 = *(_QWORD *)(v17 + 32 + 8 * v19++);
          v23 = *(double *)(v26 + 32);
          v24 = *(_BYTE *)(v26 + 40);
          if ((v20 & 1) == 0)
          {
LABEL_6:
            if (v21 > v23)
              v22 = v21;
            else
              v22 = v23;
            if ((v24 & 1) != 0)
              v23 = v21;
            else
              v23 = v22;
            v24 = 0;
          }
        }
        v21 = v23;
        v20 = v24;
        if (v19 == v18)
          goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_55;
  }
  v24 = 1;
  v23 = 0.0;
LABEL_20:
  swift_bridgeObjectRelease_n();
  v27 = FormatContent.requirements.getter();
  v28 = Array<A>.tagFeeds.getter(v27);
  swift_bridgeObjectRelease();
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    v29 = sub_1BB873F30();
    v53 = v4;
    if (v29)
      goto LABEL_22;
  }
  else
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v53 = v4;
    if (v29)
    {
LABEL_22:
      if (v29 < 1)
      {
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
        return;
      }
      v30 = 0;
      v31 = 0;
      v64 = v28 + 32;
      v32 = 1;
      while (1)
      {
        if ((v28 & 0xC000000000000001) != 0)
        {
          v36 = MEMORY[0x1BCCE4630](v30++, v28);
          v34 = *(_QWORD *)(v36 + 48);
          v35 = *(_BYTE *)(v36 + 56);
          swift_unknownObjectRelease();
          if ((v32 & 1) == 0)
            goto LABEL_24;
        }
        else
        {
          v37 = *(_QWORD *)(v64 + 8 * v30++);
          v34 = *(_QWORD *)(v37 + 48);
          v35 = *(_BYTE *)(v37 + 56);
          if ((v32 & 1) == 0)
          {
LABEL_24:
            if (v34 <= v31)
              v33 = v31;
            else
              v33 = v34;
            if ((v35 & 1) != 0)
              v34 = v31;
            else
              v34 = v33;
            v35 = 0;
          }
        }
        v31 = v34;
        v32 = v35;
        if (v30 == v29)
          goto LABEL_40;
      }
    }
  }
  v34 = 0;
  v35 = 1;
LABEL_40:
  swift_bridgeObjectRelease_n();
  sub_1BA4C010C((uint64_t)(v57 + 2), (uint64_t)v61);
  v38 = v63;
  v64 = v62;
  v57 = __swift_project_boxed_opaque_existential_1(v61, v62);
  v39 = v60;
  v40 = (uint64_t)v56;
  sub_1BA4C2DD8(v60, (uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  if ((v35 & 1) != 0)
    v34 = *(_QWORD *)(v40 + 80);
  sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v41 = v59;
  sub_1BB86C8A4();
  v42 = sub_1BB86C8B0();
  v43 = *(_QWORD *)(v42 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v41, 0, 1, v42);
  v44 = v58;
  sub_1BA4C2DD8(v39, v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  if ((v24 & 1) != 0)
    v23 = *(double *)(v44 + 72);
  sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1)
  {
    v45 = 0;
  }
  else
  {
    v45 = (void *)sub_1BB86C808();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v41, v42);
  }
  v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58AA0]), sel_initWithStartDate_timeInterval_, v45, v23);

  if (!v46)
    goto LABEL_56;
  v47 = *(double *)(v39 + 40);
  v48 = *(unsigned __int8 *)(v39 + 48);
  v49 = (void *)objc_opt_self();
  if (v48 == 1)
  {
    if (v47 == 0.0)
      v50 = objc_msgSend(v49, sel_defaultCachePolicy);
    else
      v50 = objc_msgSend(v49, sel_cachedOnlyCachePolicy);
  }
  else
  {
    v50 = objc_msgSend(v49, sel_cachePolicyWithSoftMaxAge_, v47);
  }
  v51 = v50;
  (*(void (**)(uint64_t, uint64_t, id, uint64_t, id, _QWORD, _QWORD, uint64_t, uint64_t))(v38 + 56))(v54, v34, v46, 1, v51, *(_QWORD *)(v60 + *(int *)(v55 + 48)), *(_QWORD *)(v60 + *(int *)(v55 + 52)), v64, v38);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
}

uint64_t sub_1BA8B12D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1BA6CA500(0, (unint64_t *)&qword_1ED3D4440, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  result = sub_1BB872790();
  *a1 = result;
  return result;
}

uint64_t sub_1BA8B1378(_QWORD *a1, unint64_t *a2, uint64_t *a3, unint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v9 = *a3;
  v10 = a3[1];
  v11 = *a4;
  v12 = sub_1BA8B0774(*a4, a6, a7);
  v20 = *(_QWORD *)(a6 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
  sub_1BA7AA598();
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87FC80;
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v13 + 32) = v9;
  *(_QWORD *)(v13 + 40) = v10;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v15 = MEMORY[0x1E0DEB418];
  v16 = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v13 + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v13 + 104) = v16;
  *(_QWORD *)(v13 + 72) = v14;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v13 + 136) = v15;
  *(_QWORD *)(v13 + 144) = v16;
  *(_QWORD *)(v13 + 112) = v17;
  v18 = sub_1BB87330C();
  sub_1BB86EF44("Format service resolved tag feed %{public}@ with %ld filtered to %ld headlines", 78, 2, &dword_1BA493000, v20, v18, v13);
  swift_bridgeObjectRelease();
  *a1 = v9;
  a1[1] = v10;
  *a2 = v12;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8B1524@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BA51FFB8(a1, a2);
}

uint64_t sub_1BA8B1538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  double v8;
  int v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  sub_1BA4C010C(a1 + 16, (uint64_t)v16);
  v4 = v17;
  v5 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BA8A0C3C(v6);
  swift_bridgeObjectRelease();
  v8 = *(double *)(a3 + 40);
  v9 = *(unsigned __int8 *)(a3 + 48);
  v10 = (void *)objc_opt_self();
  if (v9 == 1)
  {
    if (v8 == 0.0)
      v11 = objc_msgSend(v10, sel_defaultCachePolicy);
    else
      v11 = objc_msgSend(v10, sel_cachedOnlyCachePolicy);
  }
  else
  {
    v11 = objc_msgSend(v10, sel_cachePolicyWithSoftMaxAge_, v8);
  }
  v12 = v11;
  v13 = type metadata accessor for FormatServiceOptions();
  v14 = HeadlineServiceType.headlines(for:failIfAnyMissing:cachePolicy:purpose:)(v7, 1, (uint64_t)v12, *(_QWORD *)(a3 + *(int *)(v13 + 48)), v4, v5);
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v14;
}

uint64_t sub_1BA8B1668@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X6>, unint64_t *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v38 = a3;
  v8 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain_n();
    v9 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v39 = a4;
  if (v9)
  {
    v45 = v8 & 0xC000000000000001;
    v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    a4 = 4;
    v44 = v8;
    while (1)
    {
      v12 = a4 - 4;
      if (v45)
      {
        v13 = (void *)MEMORY[0x1BCCE4630](a4 - 4, v8);
        v14 = a4 - 3;
        if (__OFADD__(v12, 1))
          goto LABEL_25;
      }
      else
      {
        v13 = (void *)swift_unknownObjectRetain();
        v14 = a4 - 3;
        if (__OFADD__(v12, 1))
        {
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          goto LABEL_28;
        }
      }
      v46 = v14;
      v15 = v9;
      v16 = v13;
      v17 = objc_msgSend(v13, sel_identifier, v38);
      v8 = sub_1BB8729A0();
      v19 = v18;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v22 = sub_1BA6E35A8(v8, v19);
      v23 = v10[2];
      v24 = (v21 & 1) == 0;
      v25 = v23 + v24;
      if (__OFADD__(v23, v24))
        goto LABEL_26;
      v26 = v21;
      if (v10[3] >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v21 & 1) != 0)
            goto LABEL_5;
        }
        else
        {
          sub_1BB4C1F60();
          if ((v26 & 1) != 0)
            goto LABEL_5;
        }
      }
      else
      {
        sub_1BB4AE394(v25, isUniquelyReferenced_nonNull_native);
        v27 = sub_1BA6E35A8(v8, v19);
        if ((v26 & 1) != (v28 & 1))
        {
          result = sub_1BB874560();
          __break(1u);
          return result;
        }
        v22 = v27;
        if ((v26 & 1) != 0)
        {
LABEL_5:
          v11 = v10[7];
          swift_unknownObjectRelease();
          *(_QWORD *)(v11 + 8 * v22) = v16;
          goto LABEL_6;
        }
      }
      v10[(v22 >> 6) + 8] |= 1 << v22;
      v29 = (uint64_t *)(v10[6] + 16 * v22);
      *v29 = v8;
      v29[1] = v19;
      *(_QWORD *)(v10[7] + 8 * v22) = v16;
      v30 = v10[2];
      v31 = __OFADD__(v30, 1);
      v32 = v30 + 1;
      if (v31)
        goto LABEL_27;
      v10[2] = v32;
      swift_bridgeObjectRetain();
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++a4;
      v9 = v15;
      v8 = v44;
      if (v46 == v15)
        goto LABEL_24;
    }
  }
  v10 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_24:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v33 = swift_bridgeObjectRetain();
  v34 = sub_1BA8C3BAC(v33, (uint64_t)v10, a2, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_release();
  v35 = swift_bridgeObjectRetain();
  sub_1BA66293C(v35);
  v36 = sub_1BA8B0774(v34, a5, a6);
  result = swift_bridgeObjectRelease();
  *a7 = v36;
  return result;
}

void sub_1BA8B19B8(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t ObjectType;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;

  v73 = a4;
  v76 = a3;
  v77 = a5;
  v8 = sub_1BB86C67C();
  v75 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v68 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v10);
  v74 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v60 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v60 - v16;
  MEMORY[0x1E0C80A78](v18);
  v71 = (uint64_t)&v60 - v19;
  MEMORY[0x1E0C80A78](v20);
  v72 = (char *)&v60 - v21;
  sub_1BA4CDF6C(0, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v60 - v23;
  v25 = type metadata accessor for FormatArticleOverrides();
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  if (!*(_QWORD *)(a2 + 16))
  {
    v49 = 0;
    v50 = v77;
LABEL_18:
    *v50 = v49;
    return;
  }
  v69 = (uint64_t)&v60 - v29;
  v70 = v5;
  v30 = *a1;
  v31 = *(_QWORD *)(*a1 + 16);
  v32 = *(_QWORD *)(*a1 + 24);
  swift_bridgeObjectRetain();
  v33 = sub_1BA6E35A8(v31, v32);
  if ((v34 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    v49 = 0;
    v50 = v77;
    goto LABEL_18;
  }
  v65 = v8;
  v66 = v14;
  v35 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v33);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  v36 = v30 + OBJC_IVAR____TtC8NewsFeed13FormatArticle__overrides;
  swift_beginAccess();
  sub_1BA8CAF1C(v36, (uint64_t)v24, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  sub_1BA5193C4((uint64_t)v24, v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
  v37 = v76;
  v38 = *(void **)(v76 + 152);
  swift_unknownObjectRetain();
  v39 = objc_msgSend(objc_msgSend(v38, sel_configurationManager), sel_configuration);
  swift_unknownObjectRelease();
  v67 = (uint64_t)v39;
  if (v39)
  {
    ObjectType = swift_getObjectType();
    v62 = *(void **)(v37 + 136);
    v63 = ObjectType;
    v41 = *(_QWORD *)(v73 + 72);
    v61 = *(_QWORD *)(v73 + 64);
    sub_1BA8CAF1C(v36, (uint64_t)v24, &qword_1ED3C81E8, (uint64_t (*)(void))sub_1BA8200A8, (uint64_t)&type metadata for FormatCodingArticleOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    sub_1BA5193C4((uint64_t)v24, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    sub_1BA4C2DD8((uint64_t)&v27[*(int *)(v25 + 36)], (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v76 = v41;
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    v42 = v75;
    v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
    v44 = v65;
    v45 = v43(v17, 1, v65) == 1;
    v46 = (uint64_t)v66;
    v64 = v35;
    if (v45)
    {
      v47 = objc_msgSend(v35, sel_routeURL);
      v53 = (uint64_t)v72;
      if (v47)
      {
        v48 = v47;
        sub_1BB86C5EC();

        v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
        v52(v46, 0, 1, v44);
      }
      else
      {
        v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
        v52(v46, 1, 1, v44);
      }
      v54 = v46;
      v55 = v71;
      sub_1BA5193C4(v54, v71, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v51 = v55;
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    else
    {
      v51 = v71;
      (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v71, v17, v44);
      v52 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
      v52(v51, 0, 1, v44);
      v53 = (uint64_t)v72;
    }
    v56 = v74;
    if (v76)
    {
      sub_1BA4C2DD8(v51, v74, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      if (v43((char *)v56, 1, v44) != 1)
      {
        v58 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v68, v56, v44);
        sub_1BA7EDAF0(v58, v61, v76, v53);
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v58, v44);
        v57 = 0;
        goto LABEL_17;
      }
      sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    v57 = 1;
LABEL_17:
    v50 = v77;
    v52(v53, v57, 1, v44);
    sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    swift_bridgeObjectRelease();
    v59 = v69;
    v49 = FCHeadlineProviding.overridden(by:configuration:assetManager:routeURL:)(v69, v67, v62, v53);
    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease();
    sub_1BA4A2E80(v53, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatArticleOverrides);
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_1BA8B1F68(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  sub_1BA4C010C(a1 + 16, (uint64_t)v26);
  v5 = v27;
  v6 = v28;
  __swift_project_boxed_opaque_existential_1(v26, v27);
  v7 = *a2;
  if (!((unint64_t)*a2 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v24 = v6;
    if (v8)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    v20 = type metadata accessor for FormatServiceOptions();
    v21 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v24 + 16))(v11, *(_QWORD *)(a3 + *(int *)(v20 + 48)), v5);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return v21;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1BB873F30();
  v24 = v6;
  if (!v8)
    goto LABEL_13;
LABEL_3:
  v29 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA7447E8(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v25 = v8;
    v22 = v5;
    v23 = a3;
    v10 = 0;
    v11 = v29;
    v12 = v7 & 0xC000000000000001;
    v13 = v7;
    do
    {
      if (v12)
      {
        v14 = MEMORY[0x1BCCE4630](v10, v7);
      }
      else
      {
        v14 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      v16 = *(_QWORD *)(v14 + 16);
      v15 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      v29 = v11;
      v18 = *(_QWORD *)(v11 + 16);
      v17 = *(_QWORD *)(v11 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BA7447E8(v17 > 1, v18 + 1, 1);
        v11 = v29;
      }
      ++v10;
      *(_QWORD *)(v11 + 16) = v18 + 1;
      v19 = v11 + 16 * v18;
      *(_QWORD *)(v19 + 32) = v16;
      *(_QWORD *)(v19 + 40) = v15;
      v7 = v13;
    }
    while (v25 != v10);
    swift_bridgeObjectRelease();
    a3 = v23;
    v5 = v22;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8B2168@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t i;
  unint64_t v12;
  BOOL v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v42;
  int64_t v43;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  _QWORD *v50;

  v6 = *a1;
  v7 = (_QWORD *)(a2 + 16);
  v42 = v6 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v6 + 64);
  v43 = (unint64_t)(v8 + 63) >> 6;
  v47 = v6;
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v49)
  {
    if (v10)
    {
      v48 = (v10 - 1) & v10;
      v49 = i;
      v12 = __clz(__rbit64(v10)) | (i << 6);
    }
    else
    {
      v13 = __OFADD__(i, 1);
      v14 = i + 1;
      if (v13)
        goto LABEL_36;
      if (v14 >= v43)
      {
LABEL_34:
        swift_release();
        swift_beginAccess();
        *a6 = *v7;
        return swift_bridgeObjectRetain();
      }
      v15 = *(_QWORD *)(v42 + 8 * v14);
      if (!v15)
      {
        v16 = v14 + 1;
        if (v14 + 1 >= v43)
          goto LABEL_34;
        v15 = *(_QWORD *)(v42 + 8 * v16);
        if (!v15)
        {
          v16 = v14 + 2;
          if (v14 + 2 >= v43)
            goto LABEL_34;
          v15 = *(_QWORD *)(v42 + 8 * v16);
          if (!v15)
          {
            v16 = v14 + 3;
            if (v14 + 3 >= v43)
              goto LABEL_34;
            v15 = *(_QWORD *)(v42 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                v14 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_37;
                if (v14 >= v43)
                  goto LABEL_34;
                v15 = *(_QWORD *)(v42 + 8 * v14);
                ++v16;
                if (v15)
                  goto LABEL_18;
              }
            }
          }
        }
        v14 = v16;
      }
LABEL_18:
      v48 = (v15 - 1) & v15;
      v49 = v14;
      v12 = __clz(__rbit64(v15)) + (v14 << 6);
    }
    v17 = 8 * v12;
    v18 = *(_QWORD *)(*(_QWORD *)(v47 + 56) + v17);
    v19 = *(id *)(*(_QWORD *)(v47 + 48) + v17);
    swift_bridgeObjectRetain();
    v20 = objc_msgSend(v19, sel_identifier);
    if (!v20)
      goto LABEL_38;
    v21 = v20;
    v22 = sub_1BB8729A0();
    v24 = v23;

    swift_bridgeObjectRetain();
    v25 = sub_1BA8C9530(v18, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = sub_1BA8B0774(v25, a4, a5);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v7;
    v50 = (_QWORD *)*v7;
    v29 = v7;
    *v7 = 0x8000000000000000;
    v31 = sub_1BA6E35A8(v22, v24);
    v32 = *(_QWORD *)(v28 + 16);
    v33 = (v30 & 1) == 0;
    v34 = v32 + v33;
    if (__OFADD__(v32, v33))
      break;
    v35 = v30;
    if (*(_QWORD *)(v28 + 24) >= v34)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v38 = v50;
        if ((v30 & 1) == 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BB4C1CE8();
        v38 = v50;
        if ((v35 & 1) == 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BB4ADCAC(v34, isUniquelyReferenced_nonNull_native);
      v36 = sub_1BA6E35A8(v22, v24);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_39;
      v31 = v36;
      v38 = v50;
      if ((v35 & 1) == 0)
      {
LABEL_4:
        sub_1BB4C10E8(v31, v22, v24, v26, v38);
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
    v39 = v38[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v39 + 8 * v31) = v26;
LABEL_5:
    v7 = v29;
    *v29 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

    v10 = v48;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

id sub_1BA8B2504@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id result;
  uint64_t v23;

  v7 = *a1;
  if (objc_msgSend(*a1, sel_isFiltered))
  {
    v23 = *(_QWORD *)(a2 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
    sub_1BA7AA598();
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87FC80;
    v10 = *a3;
    v9 = a3[1];
    v11 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
    v12 = sub_1BA6A2D8C();
    *(_QWORD *)(v8 + 64) = v12;
    *(_QWORD *)(v8 + 32) = v10;
    *(_QWORD *)(v8 + 40) = v9;
    swift_bridgeObjectRetain();
    v13 = objc_msgSend(objc_msgSend(v7, sel_item), sel_identifier);
    swift_unknownObjectRelease();
    v14 = sub_1BB8729A0();
    v16 = v15;

    *(_QWORD *)(v8 + 96) = v11;
    *(_QWORD *)(v8 + 104) = v12;
    *(_QWORD *)(v8 + 72) = v14;
    *(_QWORD *)(v8 + 80) = v16;
    objc_msgSend(v7, sel_filteredReasons);
    v17 = (id)FCFeedFilterOptionsToNSString();
    v18 = sub_1BB8729A0();
    v20 = v19;

    *(_QWORD *)(v8 + 136) = v11;
    *(_QWORD *)(v8 + 144) = v12;
    *(_QWORD *)(v8 + 112) = v18;
    *(_QWORD *)(v8 + 120) = v20;
    v21 = sub_1BB87330C();
    sub_1BB86EF44("Format service content %{public}@ filtered out headline %{public}@ because %{public}@", 85, 2, &dword_1BA493000, v23, v21, v8);
    swift_bridgeObjectRelease();
    result = 0;
  }
  else
  {
    result = objc_msgSend(v7, sel_item);
  }
  *a4 = result;
  return result;
}

uint64_t sub_1BA8B26B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = a1[10];
  v2 = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v1);
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BA8A0C3C(v3);
  swift_bridgeObjectRelease();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8))(v4, v1, v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BA8B2754@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v32 = a2;
  v3 = (unint64_t)*a1;
  if ((unint64_t)*a1 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain_n();
    v4 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      v35 = v3 & 0xC000000000000001;
      v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v6 = 4;
      v34 = v3;
      while (1)
      {
        v8 = v6 - 4;
        if (v35)
        {
          v9 = (id)MEMORY[0x1BCCE4630](v6 - 4, v3);
          v10 = v6 - 3;
          if (__OFADD__(v8, 1))
            goto LABEL_22;
        }
        else
        {
          v9 = *(id *)(v3 + 8 * v6);
          v10 = v6 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        v36 = v10;
        v11 = v4;
        v12 = v9;
        v3 = (unint64_t)objc_msgSend(v9, sel_identifier, v32);
        v13 = sub_1BB8729A0();
        v15 = v14;

        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v18 = sub_1BA6E35A8(v13, v15);
        v19 = v5[2];
        v20 = (v17 & 1) == 0;
        v21 = v19 + v20;
        if (__OFADD__(v19, v20))
          goto LABEL_23;
        v3 = v17;
        if (v5[3] >= v21)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v17 & 1) != 0)
              goto LABEL_4;
          }
          else
          {
            sub_1BB4C1F54();
            if ((v3 & 1) != 0)
              goto LABEL_4;
          }
        }
        else
        {
          sub_1BB4AE388(v21, isUniquelyReferenced_nonNull_native);
          v22 = sub_1BA6E35A8(v13, v15);
          if ((v3 & 1) != (v23 & 1))
          {
            result = sub_1BB874560();
            __break(1u);
            return result;
          }
          v18 = v22;
          if ((v3 & 1) != 0)
          {
LABEL_4:
            v7 = v5[7];

            *(_QWORD *)(v7 + 8 * v18) = v12;
            goto LABEL_5;
          }
        }
        v5[(v18 >> 6) + 8] |= 1 << v18;
        v24 = (uint64_t *)(v5[6] + 16 * v18);
        *v24 = v13;
        v24[1] = v15;
        *(_QWORD *)(v5[7] + 8 * v18) = v12;
        v25 = v5[2];
        v26 = __OFADD__(v25, 1);
        v27 = v25 + 1;
        if (v26)
          goto LABEL_24;
        v5[2] = v27;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v6;
        v4 = v11;
        v3 = v34;
        if (v36 == v11)
          goto LABEL_27;
      }
    }
  }
  v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_27:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v28 = swift_bridgeObjectRetain();
  sub_1BA8C3D60(v28, (uint64_t)v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v29 = swift_bridgeObjectRetain();
  sub_1BB384000(v29);
  sub_1BA6CA500(0, &qword_1ED3BB4A0, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
  sub_1BA8CBE54();
  sub_1BA8CBEBC((unint64_t *)&unk_1ED3C0490, (unint64_t *)&qword_1ED3BA820, 0x1E0D58C20, (uint64_t)&protocol conformance descriptor for FCIssue);
  v30 = sub_1BB872BBC();
  result = swift_bridgeObjectRelease();
  *a3 = v30;
  return result;
}

uint64_t sub_1BA8B2AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA4B0D38;
  v7[3] = a3;
  v7[4] = a2;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA8B2B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA8B2B48()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t ObjectType;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A048(0, v2, 0);
    v3 = v24;
    result = sub_1BA580CE4(v1);
    v5 = result;
    v7 = v6;
    v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v1 + 32))
    {
      if (((*(_QWORD *)(v1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(v1 + 36) != v7)
        goto LABEL_14;
      v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v5);
      v12 = *v10;
      v11 = v10[1];
      type metadata accessor for SportsDataVisualizationAllRequest();
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v12;
      *(_QWORD *)(v13 + 24) = v11;
      *(_WORD *)(v13 + 32) = 1;
      swift_bridgeObjectRetain_n();
      v25 = sub_1BB873060();
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(&v26, v12, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v13 + 40) = v25;
      v15 = *(_QWORD *)(v24 + 16);
      v14 = *(_QWORD *)(v24 + 24);
      if (v15 >= v14 >> 1)
        sub_1BAC7A048(v14 > 1, v15 + 1, 1);
      v16 = v23[3];
      *(_QWORD *)(v24 + 16) = v15 + 1;
      v17 = v24 + 32 * v15;
      *(_QWORD *)(v17 + 40) = 0;
      *(_QWORD *)(v17 + 48) = 0;
      *(_QWORD *)(v17 + 32) = v13;
      *(_BYTE *)(v17 + 56) = 1;
      result = sub_1BA57FFE8(v5, v7, v9 & 1, v16);
      v5 = result;
      v7 = v18;
      v9 = v19 & 1;
      if (!--v2)
      {
        sub_1BA8CA884(result, v18, v19 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    v20 = *(_QWORD *)(v23[4] + 344);
    ObjectType = swift_getObjectType();
    v23[5] = SportsDataServiceType.fetchDataVisualizations(requests:)(v3, ObjectType, v20);
    swift_bridgeObjectRelease();
    v22 = (_QWORD *)swift_task_alloc();
    v23[6] = v22;
    *v22 = v23;
    v22[1] = sub_1BA8B2D9C;
    return sub_1BB86E908();
  }
  return result;
}

uint64_t sub_1BA8B2D9C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BA8B2E10()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA8B2E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1BA8195A4;
  v7[3] = a3;
  v7[4] = a2;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA8B2EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA8B2ED4()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t ObjectType;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A048(0, v2, 0);
    v3 = v25;
    result = sub_1BA580CE4(v1);
    v5 = result;
    v7 = v6;
    v9 = v8 & 1;
    v22 = v1;
    v23 = v1 + 56;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v1 + 32))
    {
      if (((*(_QWORD *)(v23 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(v1 + 36) != v7)
        goto LABEL_14;
      v10 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v5);
      v11 = *v10;
      v12 = v10[1];
      v14 = *(_QWORD *)(v25 + 16);
      v13 = *(_QWORD *)(v25 + 24);
      swift_bridgeObjectRetain();
      if (v14 >= v13 >> 1)
        sub_1BAC7A048(v13 > 1, v14 + 1, 1);
      v15 = v24[3];
      *(_QWORD *)(v25 + 16) = v14 + 1;
      v16 = v25 + 32 * v14;
      *(_QWORD *)(v16 + 32) = v11;
      *(_QWORD *)(v16 + 40) = v12;
      *(_QWORD *)(v16 + 48) = 1;
      *(_BYTE *)(v16 + 56) = 2;
      result = sub_1BA57FFE8(v5, v7, v9 & 1, v15);
      v5 = result;
      v7 = v17;
      v9 = v18 & 1;
      --v2;
      v1 = v22;
      if (!v2)
      {
        sub_1BA8CA884(result, v17, v18 & 1);
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    v19 = *(_QWORD *)(v24[4] + 344);
    ObjectType = swift_getObjectType();
    v24[5] = SportsDataServiceType.fetchDataVisualizations(requests:)(v3, ObjectType, v19);
    swift_bridgeObjectRelease();
    v21 = (_QWORD *)swift_task_alloc();
    v24[6] = v21;
    *v21 = v24;
    v21[1] = sub_1BA8B30B8;
    return sub_1BB86E908();
  }
  return result;
}

uint64_t sub_1BA8B30B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BA8B312C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8B3148@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  swift_bridgeObjectRetain();
  v3 = swift_bridgeObjectRetain();
  result = sub_1BB3839E4(v3);
  *a2 = a1;
  return result;
}

uint64_t sub_1BA8B319C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_1BB87261C();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BA8B3200()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  v4 = (_QWORD *)v0[3];
  v5 = v4[33];
  v6 = v4[34];
  __swift_project_boxed_opaque_existential_1(v4 + 30, v5);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DEF530], v3);
  v7 = sub_1BB873498();
  v0[8] = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v10 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v6 + 88) + *(_QWORD *)(v6 + 88));
  v8 = (_QWORD *)swift_task_alloc();
  v0[9] = v8;
  *v8 = v0;
  v8[1] = sub_1BA8B3300;
  return v10(v0[4], 1, v7, v5, v6);
}

uint64_t sub_1BA8B3300(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
  {

    *(_QWORD *)(v4 + 88) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1BA8B337C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 88);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA8B33BC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA8B33F8(_QWORD *a1, void **a2, uint64_t a3)
{
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[9];
  _QWORD v35[20];

  v5 = *a2;
  swift_getObjectType();
  v6 = objc_msgSend(v5, sel_identifier);
  v7 = sub_1BB8729A0();
  v9 = v8;

  v10 = objc_msgSend(v5, sel_identifier);
  v11 = sub_1BB8729A0();
  v13 = v12;

  if (*(_QWORD *)(a3 + 16) && (v14 = sub_1BA6E35A8(v11, v13), (v15 & 1) != 0))
  {
    v16 = *(_OWORD **)(*(_QWORD *)(a3 + 56) + 8 * v14);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v17 = v16[8];
    v30 = v16[7];
    v31 = v17;
    v18 = v16[10];
    v32 = v16[9];
    v33 = v18;
    v19 = v16[3];
    v20 = v16[5];
    v21 = v16[6];
    v27 = v16[4];
    v28 = v20;
    v29 = v21;
    v25 = v16[2];
    v26 = v19;
    sub_1BA8CB1AC((uint64_t)&v25);
    swift_release();
    v34[6] = v31;
    v34[7] = v32;
    v34[8] = v33;
    v34[2] = v27;
    v34[3] = v28;
    v34[4] = v29;
    v34[5] = v30;
    v34[0] = v25;
    v34[1] = v26;
    nullsub_1(v34);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1BA8CB0E8(v34);
  }
  sub_1BA6A09F0((uint64_t)v34, (uint64_t)v35, &qword_1ED3A2980, (uint64_t)&type metadata for FormatPuzzle.Overrides);
  sub_1BA6A09F0((uint64_t)v35, (uint64_t)v34, &qword_1ED3A2980, (uint64_t)&type metadata for FormatPuzzle.Overrides);
  v22 = FCPuzzleProviding.overridden(by:)((uint64_t)v34);
  sub_1BA8CF278(v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA8CB10C);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v34[0] = *a1;
  *a1 = 0x8000000000000000;
  sub_1BB4BDB54((uint64_t)v22, v7, v9, isUniquelyReferenced_nonNull_native);
  *a1 = *(_QWORD *)&v34[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8B3618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  char isUniquelyReferenced_nonNull_native;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int64_t v53;
  int64_t v54;
  _QWORD *v55;
  unint64_t v56;
  unint64_t i;
  int64_t v58;
  unint64_t v59;
  int64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  _QWORD *v79;

  v74 = a3;
  sub_1BA4CDF6C(0, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v5);
  v71 = (uint64_t)&v71 - v6;
  sub_1BA8CAF00(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)sub_1BA8F293C(MEMORY[0x1E0DEE9D8]);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(v11 + 64);
  v72 = v11 + 64;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v73 = (unint64_t)(v13 + 63) >> 6;
  v75 = v11;
  swift_bridgeObjectRetain();
  v16 = 0;
  v78 = a2;
  while (1)
  {
    if (v15)
    {
      v76 = (v15 - 1) & v15;
      v77 = v16;
      v18 = __clz(__rbit64(v15)) | (v16 << 6);
      goto LABEL_22;
    }
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_71;
    if (v19 >= v73)
      break;
    v20 = *(_QWORD *)(v72 + 8 * v19);
    v21 = v16 + 1;
    if (!v20)
    {
      v21 = v16 + 2;
      if (v16 + 2 >= v73)
        break;
      v20 = *(_QWORD *)(v72 + 8 * v21);
      if (!v20)
      {
        v21 = v16 + 3;
        if (v16 + 3 >= v73)
          break;
        v20 = *(_QWORD *)(v72 + 8 * v21);
        if (!v20)
        {
          v22 = v16 + 4;
          if (v16 + 4 >= v73)
            break;
          v20 = *(_QWORD *)(v72 + 8 * v22);
          if (!v20)
          {
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_72;
              if (v21 >= v73)
                goto LABEL_35;
              v20 = *(_QWORD *)(v72 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_21;
            }
          }
          v21 = v16 + 4;
        }
      }
    }
LABEL_21:
    v76 = (v20 - 1) & v20;
    v77 = v21;
    v18 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    v23 = (uint64_t *)(*(_QWORD *)(v75 + 48) + 16 * v18);
    v24 = *v23;
    v25 = v23[1];
    v26 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (v26 && (v27 = sub_1BA6E35A8(v24, v25), (v28 & 1) != 0))
    {
      v29 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v27) + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
      swift_beginAccess();
      v30 = v29;
      v31 = v71;
      sub_1BA8CAF1C(v30, v71, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      sub_1BA5193C4(v31, (uint64_t)v9, type metadata accessor for FormatPuzzleType.Overrides);
      v32 = type metadata accessor for FormatPuzzleType.Overrides(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v9, 0, 1, v32);
    }
    else
    {
      v33 = type metadata accessor for FormatPuzzleType.Overrides(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v9, 1, 1, v33);
    }
    swift_getObjectType();
    v34 = FCPuzzleTypeProviding.overridden(by:assetManager:)((uint64_t)v9, *(void **)(v74 + 136));
    v35 = v9;
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA8CAF00);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v79 = v10;
    v38 = sub_1BA6E35A8(v24, v25);
    v39 = v10[2];
    v40 = (v37 & 1) == 0;
    v41 = v39 + v40;
    if (__OFADD__(v39, v40))
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    v42 = v37;
    if (v10[3] >= v41)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C1D18();
    }
    else
    {
      sub_1BB4ADFEC(v41, isUniquelyReferenced_nonNull_native);
      v43 = sub_1BA6E35A8(v24, v25);
      if ((v42 & 1) != (v44 & 1))
        goto LABEL_74;
      v38 = v43;
    }
    a2 = v78;
    v10 = v79;
    if ((v42 & 1) != 0)
    {
      v17 = v79[7];
      swift_unknownObjectRelease();
      *(_QWORD *)(v17 + 8 * v38) = v34;
    }
    else
    {
      v79[(v38 >> 6) + 8] |= 1 << v38;
      v45 = (uint64_t *)(v10[6] + 16 * v38);
      *v45 = v24;
      v45[1] = v25;
      *(_QWORD *)(v10[7] + 8 * v38) = v34;
      v46 = v10[2];
      v47 = __OFADD__(v46, 1);
      v48 = v46 + 1;
      if (v47)
        goto LABEL_69;
      v10[2] = v48;
      swift_bridgeObjectRetain();
    }
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v35;
    v15 = v76;
    v16 = v77;
  }
LABEL_35:
  swift_release();
  v49 = a2 + 64;
  v50 = 1 << *(_BYTE *)(a2 + 32);
  v51 = -1;
  if (v50 < 64)
    v51 = ~(-1 << v50);
  v52 = v51 & *(_QWORD *)(a2 + 64);
  v53 = (unint64_t)(v50 + 63) >> 6;
  swift_bridgeObjectRetain();
  v54 = 0;
  v55 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v52)
    goto LABEL_40;
LABEL_41:
  v58 = v54 + 1;
  if (__OFADD__(v54, 1))
    goto LABEL_70;
  if (v58 >= v53)
    goto LABEL_67;
  v59 = *(_QWORD *)(v49 + 8 * v58);
  ++v54;
  if (v59)
  {
LABEL_58:
    v52 = (v59 - 1) & v59;
    for (i = __clz(__rbit64(v59)) + (v54 << 6); ; i = v56 | (v54 << 6))
    {
      v61 = (uint64_t *)(*(_QWORD *)(a2 + 48) + 16 * i);
      v63 = *v61;
      v62 = v61[1];
      v64 = v10[2];
      swift_bridgeObjectRetain();
      if (v64
        && (swift_bridgeObjectRetain(), sub_1BA6E35A8(v63, v62), v66 = v65, swift_bridgeObjectRelease(), (v66 & 1) != 0))
      {
        swift_bridgeObjectRelease();
        a2 = v78;
        if (!v52)
          goto LABEL_41;
      }
      else
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v55 = sub_1BA6EA0D0(0, v55[2] + 1, 1, v55);
        v68 = v55[2];
        v67 = v55[3];
        if (v68 >= v67 >> 1)
          v55 = sub_1BA6EA0D0((_QWORD *)(v67 > 1), v68 + 1, 1, v55);
        v55[2] = v68 + 1;
        v69 = &v55[2 * v68];
        v69[4] = v63;
        v69[5] = v62;
        a2 = v78;
        if (!v52)
          goto LABEL_41;
      }
LABEL_40:
      v56 = __clz(__rbit64(v52));
      v52 &= v52 - 1;
    }
  }
  v54 = v58 + 1;
  if (v58 + 1 >= v53)
  {
LABEL_67:
    swift_release();
    return (uint64_t)v10;
  }
  v59 = *(_QWORD *)(v49 + 8 * v54);
  if (v59)
    goto LABEL_58;
  v54 = v58 + 2;
  if (v58 + 2 >= v53)
    goto LABEL_67;
  v59 = *(_QWORD *)(v49 + 8 * v54);
  if (v59)
    goto LABEL_58;
  v54 = v58 + 3;
  if (v58 + 3 >= v53)
    goto LABEL_67;
  v59 = *(_QWORD *)(v49 + 8 * v54);
  if (v59)
    goto LABEL_58;
  v54 = v58 + 4;
  if (v58 + 4 >= v53)
    goto LABEL_67;
  v59 = *(_QWORD *)(v49 + 8 * v54);
  if (v59)
    goto LABEL_58;
  v60 = v58 + 5;
  if (v60 >= v53)
    goto LABEL_67;
  v59 = *(_QWORD *)(v49 + 8 * v60);
  if (v59)
  {
    v54 = v60;
    goto LABEL_58;
  }
  while (1)
  {
    v54 = v60 + 1;
    if (__OFADD__(v60, 1))
      break;
    if (v54 >= v53)
      goto LABEL_67;
    v59 = *(_QWORD *)(v49 + 8 * v54);
    ++v60;
    if (v59)
      goto LABEL_58;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA8B3C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BA8B3CA4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = v0[5];
  v2 = (_QWORD *)v0[3];
  v3 = v2[33];
  v4 = v2[34];
  __swift_project_boxed_opaque_existential_1(v2 + 30, v3);
  v7 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 128) + *(_QWORD *)(v4 + 128));
  v5 = (_QWORD *)swift_task_alloc();
  v0[6] = v5;
  *v5 = v0;
  v5[1] = sub_1BA8B3D3C;
  return v7(v0[4], v1, 25, v3, v4);
}

uint64_t sub_1BA8B3D3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA8B3DB8()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA8B3DD0(uint64_t *a1, void **a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v30[2];
  uint64_t v31;
  void *v32;
  uint64_t v33;

  v32 = a4;
  sub_1BA4CDF6C(0, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v30 - v8;
  sub_1BA8CAF00(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v30[1] = swift_getObjectType();
  v14 = objc_msgSend(v13, sel_identifier);
  v31 = sub_1BB8729A0();
  v16 = v15;

  v17 = objc_msgSend(v13, sel_identifier);
  v18 = sub_1BB8729A0();
  v20 = v19;

  if (*(_QWORD *)(a3 + 16) && (v21 = sub_1BA6E35A8(v18, v20), (v22 & 1) != 0))
  {
    v23 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v21);
    swift_retain();
    swift_bridgeObjectRelease();
    v24 = v23 + OBJC_IVAR____TtC8NewsFeed16FormatPuzzleType__overrides;
    swift_beginAccess();
    sub_1BA8CAF1C(v24, (uint64_t)v9, &qword_1ED3AD618, (uint64_t (*)(void))sub_1BA8CAEBC, (uint64_t)&type metadata for FormatCodingPuzzleTypeOverridesStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    sub_1BA5193C4((uint64_t)v9, (uint64_t)v12, type metadata accessor for FormatPuzzleType.Overrides);
    swift_release();
    v25 = type metadata accessor for FormatPuzzleType.Overrides(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 0, 1, v25);
  }
  else
  {
    swift_bridgeObjectRelease();
    v26 = type metadata accessor for FormatPuzzleType.Overrides(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 1, 1, v26);
  }
  v27 = FCPuzzleTypeProviding.overridden(by:assetManager:)((uint64_t)v12, v32);
  sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA8CAF00);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33 = *a1;
  *a1 = 0x8000000000000000;
  sub_1BB4BDCD4((uint64_t)v27, v31, v16, isUniquelyReferenced_nonNull_native);
  *a1 = v33;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8B4064(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t result;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  int64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int64_t v93;
  uint64_t v94;
  _QWORD *v95;

  v91 = a2;
  sub_1BA8CAA04(0);
  MEMORY[0x1E0C80A78](v3);
  v88 = (uint64_t)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for PuzzleStatistic();
  v94 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v6 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AE428, (uint64_t (*)(uint64_t))sub_1BA8CAC20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v84 - v11);
  v13 = (_QWORD *)sub_1BA8F296C(MEMORY[0x1E0DEE9D8]);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(v14 + 64);
  v87 = v14 + 64;
  v16 = 1 << *(_BYTE *)(v14 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v89 = (unint64_t)(v16 + 63) >> 6;
  v90 = v14;
  v86 = (_QWORD *)(v89 - 1);
  swift_bridgeObjectRetain();
  v93 = 0;
  while (1)
  {
    if (v18)
    {
      v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v20 = v19 | (v93 << 6);
LABEL_8:
      v21 = *(_QWORD *)(v90 + 56);
      v22 = (_QWORD *)(*(_QWORD *)(v90 + 48) + 16 * v20);
      v23 = v22[1];
      *v9 = *v22;
      v9[1] = v23;
      v24 = v21 + *(_QWORD *)(v94 + 72) * v20;
      sub_1BA8CAC20(0);
      v26 = v25;
      sub_1BA4C2DD8(v24, (uint64_t)v9 + *(int *)(v25 + 48), (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 0, 1, v26);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    v27 = v93 + 1;
    if (__OFADD__(v93, 1))
      goto LABEL_75;
    if (v27 < v89)
    {
      v28 = *(_QWORD *)(v87 + 8 * v27);
      if (v28)
        goto LABEL_12;
      v29 = v93 + 2;
      ++v93;
      if (v27 + 1 < v89)
      {
        v28 = *(_QWORD *)(v87 + 8 * v29);
        if (v28)
          goto LABEL_15;
        v93 = v27 + 1;
        if (v27 + 2 < v89)
        {
          v28 = *(_QWORD *)(v87 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          v29 = v27 + 3;
          v93 = v27 + 2;
          if (v27 + 3 < v89)
          {
            v28 = *(_QWORD *)(v87 + 8 * v29);
            if (v28)
            {
LABEL_15:
              v27 = v29;
LABEL_12:
              v18 = (v28 - 1) & v28;
              v20 = __clz(__rbit64(v28)) + (v27 << 6);
              v93 = v27;
              goto LABEL_8;
            }
            while (1)
            {
              v27 = v29 + 1;
              if (__OFADD__(v29, 1))
                goto LABEL_77;
              if (v27 >= v89)
                break;
              v28 = *(_QWORD *)(v87 + 8 * v27);
              ++v29;
              if (v28)
                goto LABEL_12;
            }
            v93 = (int64_t)v86;
          }
        }
      }
    }
    sub_1BA8CAC20(0);
    v26 = v30;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 1, v30);
    v18 = 0;
LABEL_27:
    sub_1BA8CAC44((uint64_t)v9, (uint64_t)v12);
    sub_1BA8CAC20(0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v12, 1, v26) == 1)
      break;
    v31 = *v12;
    v32 = v12[1];
    sub_1BA5193C4((uint64_t)v12 + *(int *)(v26 + 48), (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v95 = v13;
    v35 = sub_1BA6E35A8(v31, v32);
    v36 = v13[2];
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    v39 = v34;
    if (v13[3] >= v38)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v13 = v95;
        if ((v34 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BB4C1D30();
        v13 = v95;
        if ((v39 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BB4AE004(v38, isUniquelyReferenced_nonNull_native);
      v40 = sub_1BA6E35A8(v31, v32);
      if ((v39 & 1) != (v41 & 1))
        goto LABEL_78;
      v35 = v40;
      v13 = v95;
      if ((v39 & 1) != 0)
      {
LABEL_4:
        sub_1BA8CACA0((uint64_t)v6, v13[7] + *(_QWORD *)(v94 + 72) * v35);
        goto LABEL_5;
      }
    }
    v13[(v35 >> 6) + 8] |= 1 << v35;
    v42 = (uint64_t *)(v13[6] + 16 * v35);
    *v42 = v31;
    v42[1] = v32;
    sub_1BA5193C4((uint64_t)v6, v13[7] + *(_QWORD *)(v94 + 72) * v35, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
    v43 = v13[2];
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
      goto LABEL_74;
    v13[2] = v45;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  v46 = *(_QWORD *)(v91 + 64);
  v87 = v91 + 64;
  v47 = 1 << *(_BYTE *)(v91 + 32);
  v48 = -1;
  if (v47 < 64)
    v48 = ~(-1 << v47);
  v49 = v48 & v46;
  v89 = (unint64_t)(v47 + 63) >> 6;
  swift_bridgeObjectRetain();
  v50 = 0;
  v86 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v51 = v88;
  v52 = v92;
  if (!v49)
    goto LABEL_47;
  while (2)
  {
    v53 = __clz(__rbit64(v49));
    v49 &= v49 - 1;
    v93 = v50;
    v54 = v53 | (v50 << 6);
LABEL_61:
    v60 = (uint64_t *)(*(_QWORD *)(v91 + 48) + 16 * v54);
    v61 = v60[1];
    v62 = (uint64_t *)(*(_QWORD *)(v91 + 56) + 40 * v54);
    v64 = *v62;
    v63 = v62[1];
    v65 = v62[2];
    v66 = v13[2];
    v90 = v63;
    if (v66)
    {
      v67 = *v60;
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68 = sub_1BA6E35A8(v67, v61);
      v55 = v94;
      if ((v69 & 1) != 0)
      {
        v51 = v88;
        sub_1BA4C2DD8(v13[7] + *(_QWORD *)(v94 + 72) * v68, v88, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
        v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
        v71 = v51;
        v72 = 0;
      }
      else
      {
        v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
        v51 = v88;
        v71 = v88;
        v72 = 1;
      }
      v52 = v92;
      v70(v71, v72, 1, v92);
      swift_bridgeObjectRelease();
    }
    else
    {
      v55 = v94;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v51, 1, 1, v52);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v51, 1, v52) == 1)
    {
      sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))sub_1BA8CAA04);
      v73 = *(_QWORD *)(v64 + 24);
      v84 = *(_QWORD *)(v64 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v74 = v86;
      v75 = swift_isUniquelyReferenced_nonNull_native();
      v85 = v73;
      if ((v75 & 1) == 0)
        v74 = sub_1BB38D0C0(0, v74[2] + 1, 1, v74);
      v76 = v90;
      v78 = v74[2];
      v77 = v74[3];
      v79 = (_QWORD *)(v78 + 1);
      if (v78 >= v77 >> 1)
      {
        v86 = (_QWORD *)(v78 + 1);
        v82 = sub_1BB38D0C0((_QWORD *)(v77 > 1), v78 + 1, 1, v74);
        v79 = v86;
        v74 = v82;
      }
      v74[2] = v79;
      v86 = v74;
      v80 = &v74[4 * v78];
      v81 = v85;
      v80[4] = v84;
      v80[5] = v81;
      v80[6] = v76;
      v80[7] = v65;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v51 = v88;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))sub_1BA8CAA04);
    }
    v50 = v93;
    v52 = v92;
    if (v49)
      continue;
    break;
  }
LABEL_47:
  v56 = v50 + 1;
  if (__OFADD__(v50, 1))
    goto LABEL_73;
  if (v56 >= v89)
  {
LABEL_71:
    swift_release();
    return (uint64_t)v13;
  }
  v57 = *(_QWORD *)(v87 + 8 * v56);
  v58 = v50 + 1;
  if (v57)
    goto LABEL_60;
  v58 = v50 + 2;
  if (v50 + 2 >= v89)
    goto LABEL_71;
  v57 = *(_QWORD *)(v87 + 8 * v58);
  if (v57)
    goto LABEL_60;
  v58 = v50 + 3;
  if (v50 + 3 >= v89)
    goto LABEL_71;
  v57 = *(_QWORD *)(v87 + 8 * v58);
  if (v57)
  {
LABEL_60:
    v49 = (v57 - 1) & v57;
    v93 = v58;
    v54 = __clz(__rbit64(v57)) + (v58 << 6);
    goto LABEL_61;
  }
  v59 = v50 + 4;
  if (v50 + 4 >= v89)
    goto LABEL_71;
  v57 = *(_QWORD *)(v87 + 8 * v59);
  if (v57)
  {
    v58 = v50 + 4;
    goto LABEL_60;
  }
  while (1)
  {
    v58 = v59 + 1;
    if (__OFADD__(v59, 1))
      break;
    if (v58 >= v89)
      goto LABEL_71;
    v57 = *(_QWORD *)(v87 + 8 * v58);
    ++v59;
    if (v57)
      goto LABEL_60;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA8B48CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1BA8B48E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  type metadata accessor for PuzzleStatistic();
  sub_1BA8CA908(0);
  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_1BA8B4994;
  return sub_1BB873FF0();
}

uint64_t sub_1BA8B4994()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BA8B4A08()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA8B4A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = type metadata accessor for PuzzleStatistic();
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  sub_1BA81D6FC(0);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  sub_1BA8CAA04(0);
  v4[19] = swift_task_alloc();
  sub_1BA8CAA8C();
  v4[20] = v6;
  v4[21] = *(_QWORD *)(v6 - 8);
  v4[22] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BA8B4B18()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  Swift::String v7;
  int v8;
  uint64_t *v9;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)(v0 + 96);
  v2 = v1[2];
  *(_QWORD *)(v0 + 184) = v2;
  if (v2)
  {
    *(_QWORD *)(v0 + 200) = 0;
    v4 = v1[4];
    v3 = v1[5];
    v6 = v1[6];
    v5 = (void *)v1[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v7._countAndFlagsBits = v6;
    v7._object = v5;
    PuzzleStatisticType.init(rawValue:)(v7);
    v8 = *(unsigned __int8 *)(v0 + 256);
    *(_BYTE *)(v0 + 257) = v8;
    if (v8 == 9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA8CAB08();
      swift_allocError();
      *v9 = v6;
      v9[1] = (uint64_t)v5;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      v12 = *(_QWORD **)(v0 + 104);
      v13 = v12[33];
      v14 = v12[34];
      __swift_project_boxed_opaque_existential_1(v12 + 30, v13);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v15 = swift_allocObject();
      *(_QWORD *)(v0 + 208) = v15;
      *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 32) = v4;
      *(_QWORD *)(v15 + 40) = v3;
      v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v14 + 104) + *(_QWORD *)(v14 + 104));
      v16 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v16;
      *v16 = v0;
      v16[1] = sub_1BA8B4DF8;
      return v17(v15, v13, v14);
    }
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB872FAC();
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v11;
    *v11 = v0;
    v11[1] = sub_1BA8B4D80;
    return sub_1BB872FB8();
  }
}

uint64_t sub_1BA8B4D80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 232) = MEMORY[0x1E0DEE9D8];
  return swift_task_switch();
}

uint64_t sub_1BA8B4DF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 224) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_1BA8B4ECC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  Swift::String v25;
  int v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void (*v33)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 224);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v17)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_15;
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = MEMORY[0x1BCCE4630](0, *(_QWORD *)(v0 + 224));
  }
  else
  {
    if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v2 = *(_QWORD *)(*(_QWORD *)(v0 + 224) + 32);
    swift_unknownObjectRetain();
  }
  v3 = *(_BYTE *)(v0 + 257);
  v4 = *(_QWORD *)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRelease();
  v6 = sub_1BB872F94();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = v8;
  *(_BYTE *)(v9 + 40) = v3;
  *(_QWORD *)(v9 + 48) = v2;
  sub_1BA4C2DD8(v5, v4, (uint64_t (*)(_QWORD))sub_1BA81D6FC);
  LODWORD(v5) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  swift_unknownObjectRetain();
  v10 = *(_QWORD *)(v0 + 136);
  if ((_DWORD)v5 == 1)
  {
    sub_1BA4A2E80(*(_QWORD *)(v0 + 136), (uint64_t (*)(_QWORD))sub_1BA81D6FC);
    v11 = 0;
    v12 = 0;
  }
  else
  {
    sub_1BB872F88();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    if (*(_QWORD *)(v9 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1BB872F28();
      v12 = v13;
      swift_unknownObjectRelease();
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v14 = **(_QWORD **)(v0 + 88);
  v15 = v12 | v11;
  if (v12 | v11)
  {
    v15 = v0 + 16;
    *(_QWORD *)(v0 + 16) = 0;
    *(_QWORD *)(v0 + 24) = 0;
    *(_QWORD *)(v0 + 32) = v11;
    *(_QWORD *)(v0 + 40) = v12;
  }
  v16 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 48) = 1;
  *(_QWORD *)(v0 + 56) = v15;
  *(_QWORD *)(v0 + 64) = v14;
  swift_task_create();
  swift_unknownObjectRelease();
  swift_release();
  sub_1BA4A2E80(v16, (uint64_t (*)(_QWORD))sub_1BA81D6FC);
LABEL_16:
  v18 = *(_QWORD *)(v0 + 200) + 1;
  if (v18 == *(_QWORD *)(v0 + 184))
  {
    swift_bridgeObjectRelease();
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB872FAC();
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v19;
    *v19 = v0;
    v19[1] = sub_1BA8B4D80;
    sub_1BB872FB8();
  }
  else
  {
    *(_QWORD *)(v0 + 200) = v18;
    v20 = (_QWORD *)(*(_QWORD *)(v0 + 96) + 32 * v18);
    v22 = v20[4];
    v21 = v20[5];
    v24 = v20[6];
    v23 = (void *)v20[7];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v25._countAndFlagsBits = v24;
    v25._object = v23;
    PuzzleStatisticType.init(rawValue:)(v25);
    v26 = *(unsigned __int8 *)(v0 + 256);
    *(_BYTE *)(v0 + 257) = v26;
    if (v26 == 9)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA8CAB08();
      swift_allocError();
      *v27 = v24;
      v27[1] = (uint64_t)v23;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      v28 = *(_QWORD **)(v0 + 104);
      v29 = v28[33];
      v30 = v28[34];
      __swift_project_boxed_opaque_existential_1(v28 + 30, v29);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v31 = swift_allocObject();
      *(_QWORD *)(v0 + 208) = v31;
      *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v31 + 32) = v22;
      *(_QWORD *)(v31 + 40) = v21;
      v33 = (void (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v30 + 104) + *(_QWORD *)(v30 + 104));
      v32 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v32;
      *v32 = v0;
      v32[1] = sub_1BA8B4DF8;
      v33(v31, v29, v30);
    }
  }
}

uint64_t sub_1BA8B53B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 48))(v1, 1, *(_QWORD *)(v0 + 112));
  v3 = *(_QWORD *)(v0 + 232);
  if (v2 == 1)
  {
    v4 = *(_QWORD **)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    *v4 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_1BA5193C4(v1, *(_QWORD *)(v0 + 128), (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v7 = *(_QWORD *)(v0 + 232);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v7 = sub_1BB38D310(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
    v9 = *(_QWORD *)(v7 + 16);
    v8 = *(_QWORD *)(v7 + 24);
    if (v9 >= v8 >> 1)
      v7 = sub_1BB38D310(v8 > 1, v9 + 1, 1, v7);
    *(_QWORD *)(v0 + 240) = v7;
    v11 = *(_QWORD *)(v0 + 120);
    v10 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v7 + 16) = v9 + 1;
    sub_1BA5193C4(v10, v7+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v9, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v12;
    *v12 = v0;
    v12[1] = sub_1BA8B5560;
    return sub_1BB872FB8();
  }
}

uint64_t sub_1BA8B5560()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 232) = *(_QWORD *)(v2 + 240);
  return swift_task_switch();
}

uint64_t sub_1BA8B55D0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA8B564C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 56) = a6;
  *(_BYTE *)(v6 + 89) = a5;
  *(_QWORD *)(v6 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA8B566C()
{
  uint64_t v0;
  _QWORD *Strong;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t);

  swift_beginAccess();
  Strong = (_QWORD *)swift_weakLoadStrong();
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
  {
    v2 = *(_BYTE *)(v0 + 89);
    v3 = Strong[38];
    v4 = Strong[39];
    __swift_project_boxed_opaque_existential_1(Strong + 35, v3);
    *(_BYTE *)(v0 + 88) = v2;
    v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, uint64_t, uint64_t))(**(int **)(v4 + 16) + *(_QWORD *)(v4 + 16));
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v5;
    *v5 = v0;
    v5[1] = sub_1BA8B57B0;
    return v7(*(_QWORD *)(v0 + 40), v0 + 88, *(_QWORD *)(v0 + 56), v3, v4);
  }
  else
  {
    type metadata accessor for FormatServiceError();
    sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1BA8B57B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BA8B5814()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA8B5848()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BA8B587C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  sub_1BA8CAA04(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  PuzzleStatistic.identifier.getter();
  v7 = v6;
  v9 = v8;
  sub_1BA4C2DD8(a2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  v10 = type metadata accessor for PuzzleStatistic();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
  return sub_1BB4A9DB8((uint64_t)v5, v7, v9);
}

uint64_t sub_1BA8B5944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v33 = a2;
  v34 = a3;
  v36 = *v3;
  v5 = type metadata accessor for FormatServiceOptions();
  v35 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v35 + 64);
  MEMORY[0x1E0C80A78](v5);
  sub_1BA6EF3B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCBF8(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3CC218 != -1)
    swift_once();
  v15 = sub_1BAB51798(a1);
  if (v15)
  {
    v38 = v15;
    sub_1BA4F5FBC(0);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    v29 = (uint64_t)&v29;
    MEMORY[0x1E0C80A78](0);
    *(&v29 - 4) = v37;
    *(&v29 - 3) = a1;
    v31 = v8;
    v32 = a1;
    v30 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    v18 = v33;
    v17 = v34;
    *(&v29 - 2) = v33;
    *(&v29 - 1) = v17;
    sub_1BA8CC824(v19);
    sub_1BB86EC14();
    sub_1BA4C2DD8(a1, (uint64_t)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA4C2DD8(v18, (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v20 = v30;
    sub_1BA4C2DD8(v17, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
    v21 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v22 = (v21 + v13 + *(unsigned __int8 *)(v31 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v23 = (v9 + *(unsigned __int8 *)(v35 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v24 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v14, v24 + v21, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA5193C4((uint64_t)v10, v24 + v22, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    sub_1BA5193C4(v20, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
    v25 = (void *)sub_1BB86E854();
    sub_1BA8CCEE8();
    sub_1BB86E980();
    swift_release();
    swift_release();

    sub_1BA4C2DD8(v32, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    v26 = swift_allocObject();
    sub_1BA5193C4((uint64_t)v14, v26 + v21, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    v27 = (void *)sub_1BB86E854();
    type metadata accessor for FormatPackageInventory();
    v16 = sub_1BB86E974();
    swift_release();
    swift_release();

  }
  return v16;
}

uint64_t sub_1BA8B5C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v57 = a3;
  v53 = a2;
  v58 = a1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v51 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v49 - v6;
  MEMORY[0x1E0C80A78](v7);
  v54 = (uint64_t)&v49 - v8;
  sub_1BA8CC824(0);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v49 - v20;
  v22 = sub_1BB86C67C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v50 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v55 = (char *)&v49 - v26;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v49 - v28;
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&v49 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v58, (uint64_t)v32, v33);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v38 = (uint64_t)&v32[*(int *)(v37 + 48)];
    v39 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v39(v29, v32, v22);
    sub_1BA5193C4(v38, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BB86C5F8();
    v41 = v40;
    swift_bridgeObjectRelease();
    if (!v41)
    {
      v42 = v54;
      sub_1BA4C2DD8(v53, v54, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
      if (v43(v42, 1, v22) != 1)
      {
        v44 = v50;
        v39(v50, (char *)v42, v22);
        v58 = sub_1BB86C544();
        v45 = (uint64_t)v51;
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v51, v44, v22);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v45, 0, 1, v22);
        v42 = (uint64_t)v52;
        sub_1BB86C628();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        (*(void (**)(char *, uint64_t))(v23 + 8))(v44, v22);
        if (v43(v42, 1, v22) != 1)
        {
          v46 = (uint64_t)v55;
          v39(v55, (char *)v42, v22);
          goto LABEL_8;
        }
      }
      sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    v46 = (uint64_t)v55;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v55, v29, v22);
LABEL_8:
    v36 = sub_1BA8BB2E8(v46, v56, v57, (uint64_t)v21, sub_1BA8BBABC, (uint64_t)&unk_1E7275C50, sub_1BA8CC824, (uint64_t)sub_1BA8CF6CC);
    v47 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v47(v46, v22);
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v47((uint64_t)v29, v22);
    return v36;
  }
  sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v35 = (uint64_t)&v32[*(int *)(v34 + 48)];
  sub_1BA5193C4((uint64_t)v32, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BA5193C4(v35, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BA4C2DD8((uint64_t)v18, (uint64_t)&v12[*(int *)(v10 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA8CD6F0(0);
  swift_allocObject();
  v36 = sub_1BB86E9E0();
  sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  return v36;
}

uint64_t sub_1BA8B6188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v63 = a3;
  v56 = a2;
  v64 = a1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v54 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v55 = (char *)&v53 - v6;
  MEMORY[0x1E0C80A78](v7);
  v57 = (uint64_t)&v53 - v8;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v60 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char **)((char *)&v53 - v10);
  v12 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v12);
  v58 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v59 = (uint64_t)&v53 - v15;
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v53 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v61 = (char *)&v53 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v53 - v22;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v24);
  v26 = (uint64_t *)((char *)&v53 - v25);
  sub_1BA8CAF1C(v64, (uint64_t)&v53 - v25, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v39 = (uint64_t)v26 + *(int *)(v38 + 48);
    v40 = *(void (**)(char *, uint64_t *, uint64_t))(v17 + 32);
    v40(v23, v26, v16);
    v41 = v59;
    sub_1BA5193C4(v39, v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BB86C5F8();
    v43 = v42;
    swift_bridgeObjectRelease();
    if (!v43)
    {
      v44 = v23;
      v45 = v57;
      v46 = v16;
      sub_1BA4C2DD8(v56, v57, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (v47(v45, 1, v16) != 1)
      {
        v48 = v53;
        v40(v53, (uint64_t *)v45, v16);
        v64 = sub_1BB86C544();
        v49 = (uint64_t)v54;
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v54, v48, v46);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v49, 0, 1, v46);
        v45 = (uint64_t)v55;
        sub_1BB86C628();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v48, v46);
        if (v47(v45, 1, v46) != 1)
        {
          v50 = (uint64_t)v61;
          v40(v61, (uint64_t *)v45, v46);
          v23 = v44;
          v16 = v46;
          goto LABEL_8;
        }
      }
      sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v23 = v44;
      v16 = v46;
    }
    v50 = (uint64_t)v61;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v61, v23, v16);
LABEL_8:
    v37 = sub_1BA8BA5B4(v50, v62, v63, v41);
    v51 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v51(v50, v16);
    sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v51((uint64_t)v23, v16);
    return v37;
  }
  sub_1BA8CF138(0, &qword_1ED3B55A8);
  v28 = (uint64_t)v26 + *(int *)(v27 + 48);
  v29 = *v26;
  v30 = v26[1];
  v31 = v26[2];
  v32 = v26[3];
  v34 = v26[4];
  v33 = v26[5];
  v35 = v26[6];
  v36 = v58;
  sub_1BA5193C4(v28, v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4C2DD8(v36, (uint64_t)v11 + *(int *)(v60 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *v11 = v29;
  v11[1] = v30;
  v11[2] = v31;
  v11[3] = v32;
  v11[4] = v34;
  v11[5] = v33;
  v11[6] = v35;
  sub_1BA8CE1AC();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = sub_1BB86E9E0();
  sub_1BA4A2E80(v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_1BA8B66C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(uint64_t, uint64_t, uint64_t);

  v72 = a1;
  v69 = a3;
  v65 = a2;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v63 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v64 = (char *)&v60 - v6;
  MEMORY[0x1E0C80A78](v7);
  v66 = (uint64_t)&v60 - v8;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v68 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v60 - v10;
  v12 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v12);
  v73 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v67 = (uint64_t)&v60 - v15;
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v62 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v70 = (char *)&v60 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v60 - v22;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v60 - v25;
  sub_1BA8CAF1C(v72, (uint64_t)&v60 - v25, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v44 = v69;
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v46 = (uint64_t)&v26[*(int *)(v45 + 48)];
    v47 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v47(v23, v26, v16);
    v48 = v67;
    sub_1BA5193C4(v46, v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BB86C5F8();
    v50 = v49;
    swift_bridgeObjectRelease();
    v51 = v16;
    if (!v50)
    {
      v52 = v66;
      sub_1BA4C2DD8(v65, v66, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (v53(v52, 1, v16) != 1)
      {
        v54 = v62;
        v47(v62, (char *)v52, v16);
        v72 = sub_1BB86C544();
        v73 = v53;
        v55 = (uint64_t)v63;
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v63, v54, v51);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v55, 0, 1, v51);
        v52 = (uint64_t)v64;
        sub_1BB86C628();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v54, v51);
        if (v73(v52, 1, v51) != 1)
        {
          v56 = (uint64_t)v70;
          v47(v70, (char *)v52, v51);
          v57 = v44;
          goto LABEL_8;
        }
      }
      sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    v56 = (uint64_t)v70;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v70, v23, v51);
    v57 = v44;
LABEL_8:
    v43 = sub_1BA8BA858(v56, v71, v57, v48);
    v58 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v58(v56, v51);
    sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v58((uint64_t)v23, v51);
    return v43;
  }
  sub_1BA8CF138(0, &qword_1ED3B4850);
  v28 = (uint64_t)&v26[*(int *)(v27 + 48)];
  v29 = *(_QWORD *)v26;
  v30 = *((_QWORD *)v26 + 1);
  v31 = (char *)*((_QWORD *)v26 + 3);
  v65 = *((_QWORD *)v26 + 2);
  v66 = v29;
  v70 = v31;
  v32 = (char *)*((_QWORD *)v26 + 4);
  v33 = *((_QWORD *)v26 + 5);
  v34 = *((_QWORD *)v26 + 6);
  v35 = *((_QWORD *)v26 + 7);
  v60 = v30;
  v61 = v34;
  v63 = (char *)*((_QWORD *)v26 + 8);
  v64 = v32;
  LODWORD(v62) = v26[72];
  v36 = *((_QWORD *)v26 + 11);
  v72 = *((_QWORD *)v26 + 10);
  v37 = v26[106];
  v38 = *((unsigned __int16 *)v26 + 52);
  LODWORD(v71) = v38 | (v37 << 16);
  v39 = *((_QWORD *)v26 + 12);
  v40 = v73;
  sub_1BA5193C4(v28, (uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4C2DD8((uint64_t)v40, (uint64_t)&v11[*(int *)(v68 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v41 = v60;
  *(_QWORD *)v11 = v66;
  *((_QWORD *)v11 + 1) = v41;
  *((_QWORD *)v11 + 2) = v65;
  *((_QWORD *)v11 + 3) = v31;
  *((_QWORD *)v11 + 4) = v64;
  *((_QWORD *)v11 + 5) = v33;
  *((_QWORD *)v11 + 6) = v61;
  *((_QWORD *)v11 + 7) = v35;
  v69 = v35;
  *((_QWORD *)v11 + 8) = v63;
  v11[72] = (char)v62;
  *((_QWORD *)v11 + 10) = v72;
  *((_QWORD *)v11 + 11) = v36;
  v67 = v36;
  *((_QWORD *)v11 + 12) = v39;
  v11[106] = v37;
  *((_WORD *)v11 + 52) = v38;
  sub_1BA8CE11C();
  v68 = swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v42 = v71;
  sub_1BA771834(v39, v71);
  v43 = sub_1BB86E9E0();
  sub_1BA4A2E80((uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA771864(v39, v42);
  return v43;
}

uint64_t sub_1BA8B6CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  char *v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v67 = a3;
  v61 = a2;
  v68 = a1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v59 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v60 = (char *)&v58 - v6;
  MEMORY[0x1E0C80A78](v7);
  v62 = (uint64_t)&v58 - v8;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v58 - v10;
  v12 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v12);
  v69 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v63 = (uint64_t)&v58 - v15;
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v58 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v65 = (char *)&v58 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v58 - v22;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v58 - v25;
  sub_1BA8CAF1C(v68, (uint64_t)&v58 - v25, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v43 = (uint64_t)&v26[*(int *)(v42 + 48)];
    v44 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v44(v23, v26, v16);
    v45 = v63;
    sub_1BA5193C4(v43, v63, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BB86C5F8();
    v47 = v46;
    swift_bridgeObjectRelease();
    v48 = v23;
    v49 = v16;
    if (!v47)
    {
      v50 = v62;
      sub_1BA4C2DD8(v61, v62, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (v51(v50, 1, v16) != 1)
      {
        v52 = v58;
        v44(v58, (char *)v50, v16);
        v69 = sub_1BB86C544();
        v53 = (void (*)(char *, uint64_t, uint64_t))v44;
        v54 = (uint64_t)v59;
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v59, v52, v49);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v54, 0, 1, v49);
        v50 = (uint64_t)v60;
        sub_1BB86C628();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v54, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v52, v49);
        if (v51(v50, 1, v49) != 1)
        {
          v55 = (uint64_t)v65;
          v53(v65, v50, v49);
          goto LABEL_8;
        }
      }
      sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    v55 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v65, v48, v49);
LABEL_8:
    v41 = sub_1BA8BAAFC(v55, v66, v67, v45);
    v56 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v56(v55, v49);
    sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v56((uint64_t)v48, v49);
    return v41;
  }
  sub_1BA8CF138(0, &qword_1ED3B3168);
  v28 = (uint64_t)&v26[*(int *)(v27 + 48)];
  v29 = *((_QWORD *)v26 + 1);
  v65 = *(char **)v26;
  v30 = *((_QWORD *)v26 + 2);
  v31 = *((_QWORD *)v26 + 3);
  v32 = *((_QWORD *)v26 + 4);
  v67 = v29;
  v68 = v31;
  v33 = *((_QWORD *)v26 + 5);
  v34 = *((_QWORD *)v26 + 6);
  v35 = *((_QWORD *)v26 + 7);
  v62 = *((_QWORD *)v26 + 8);
  v63 = v30;
  v36 = *((_QWORD *)v26 + 9);
  v37 = v26[80];
  v38 = v69;
  sub_1BA5193C4(v28, v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4C2DD8(v38, (uint64_t)&v11[*(int *)(v64 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *(_QWORD *)v11 = v65;
  *((_QWORD *)v11 + 1) = v29;
  v39 = v62;
  v40 = v68;
  *((_QWORD *)v11 + 2) = v63;
  *((_QWORD *)v11 + 3) = v40;
  *((_QWORD *)v11 + 4) = v32;
  *((_QWORD *)v11 + 5) = v33;
  *((_QWORD *)v11 + 6) = v34;
  *((_QWORD *)v11 + 7) = v35;
  *((_QWORD *)v11 + 8) = v39;
  *((_QWORD *)v11 + 9) = v36;
  v11[80] = v37;
  LODWORD(v66) = v37;
  sub_1BA8CE08C();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA709DE8(v32, v33, v34, v35, v39, v36, v37);
  v41 = sub_1BB86E9E0();
  sub_1BA4A2E80(v69, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6C0C20(v32, v33, v34, v35, v39, v36, v66);
  return v41;
}

uint64_t sub_1BA8B7264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(uint64_t, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t);
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v65 = a3;
  v59 = a2;
  v66 = a1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v57 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)&v56 - v6;
  MEMORY[0x1E0C80A78](v7);
  v60 = (uint64_t)&v56 - v8;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v62 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v56 - v10;
  v12 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v12);
  v67 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v61 = (uint64_t)&v56 - v15;
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v56 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v63 = (char *)&v56 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v56 - v22;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v56 - v25;
  sub_1BA8CAF1C(v66, (uint64_t)&v56 - v25, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v44 = (uint64_t)&v26[*(int *)(v43 + 48)];
    v45 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v45(v23, v26, v16);
    v46 = v61;
    sub_1BA5193C4(v44, v61, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BB86C5F8();
    v48 = v47;
    swift_bridgeObjectRelease();
    if (!v48)
    {
      v49 = v60;
      sub_1BA4C2DD8(v59, v60, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (v50(v49, 1, v16) != 1)
      {
        v51 = v56;
        v45(v56, (char *)v49, v16);
        v67 = sub_1BB86C544();
        v52 = (uint64_t)v57;
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v57, v51, v16);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v52, 0, 1, v16);
        v49 = (uint64_t)v58;
        sub_1BB86C628();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v51, v16);
        if (v50(v49, 1, v16) != 1)
        {
          v53 = (uint64_t)v63;
          v45(v63, (char *)v49, v16);
          goto LABEL_8;
        }
      }
      sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    v53 = (uint64_t)v63;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v63, v23, v16);
LABEL_8:
    v42 = sub_1BA8BADA0(v53, v64, v65, v46);
    v54 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v54(v53, v16);
    sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v54((uint64_t)v23, v16);
    return v42;
  }
  sub_1BA8CF138(0, &qword_1ED3B5F60);
  v28 = (uint64_t)&v26[*(int *)(v27 + 48)];
  v63 = *(char **)v26;
  v29 = (char *)*((_QWORD *)v26 + 1);
  v30 = *((_QWORD *)v26 + 2);
  v31 = *((_QWORD *)v26 + 3);
  v32 = *((_QWORD *)v26 + 5);
  v60 = *((_QWORD *)v26 + 4);
  v61 = v30;
  v34 = *((_QWORD *)v26 + 7);
  v65 = *((_QWORD *)v26 + 6);
  v33 = v65;
  v36 = *((_QWORD *)v26 + 8);
  v35 = (char *)*((_QWORD *)v26 + 9);
  v56 = v29;
  v57 = v35;
  LODWORD(v59) = v26[80];
  v37 = *((_QWORD *)v26 + 11);
  v38 = *((_QWORD *)v26 + 12);
  LODWORD(v58) = v26[104];
  v39 = v67;
  sub_1BA5193C4(v28, v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4C2DD8(v39, (uint64_t)&v11[*(int *)(v62 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v41 = v56;
  v40 = v57;
  *(_QWORD *)v11 = v63;
  *((_QWORD *)v11 + 1) = v41;
  *((_QWORD *)v11 + 2) = v61;
  *((_QWORD *)v11 + 3) = v31;
  *((_QWORD *)v11 + 4) = v60;
  *((_QWORD *)v11 + 5) = v32;
  *((_QWORD *)v11 + 6) = v33;
  *((_QWORD *)v11 + 7) = v34;
  v66 = v34;
  v64 = v36;
  *((_QWORD *)v11 + 8) = v36;
  *((_QWORD *)v11 + 9) = v40;
  v11[80] = v59;
  *((_QWORD *)v11 + 11) = v37;
  *((_QWORD *)v11 + 12) = v38;
  v11[104] = (char)v58;
  sub_1BA8CDFFC();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v42 = sub_1BB86E9E0();
  sub_1BA4A2E80(v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_1BA8B7838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v62 = a3;
  v56 = a2;
  v64 = a1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v54 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v55 = (char *)&v53 - v6;
  MEMORY[0x1E0C80A78](v7);
  v57 = (uint64_t)&v53 - v8;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v59 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char **)((char *)&v53 - v10);
  v12 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v12);
  v63 = (uint64_t)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v58 = (uint64_t)&v53 - v15;
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v53 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v60 = (char *)&v53 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v53 - v22;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v24);
  v26 = (uint64_t *)((char *)&v53 - v25);
  sub_1BA8CAF1C(v64, (uint64_t)&v53 - v25, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v39 = (uint64_t)v26 + *(int *)(v38 + 48);
    v40 = *(void (**)(char *, uint64_t *, uint64_t))(v17 + 32);
    v40(v23, v26, v16);
    v41 = v58;
    sub_1BA5193C4(v39, v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BB86C5F8();
    v43 = v42;
    swift_bridgeObjectRelease();
    if (!v43)
    {
      v44 = v23;
      v45 = v57;
      v46 = v16;
      sub_1BA4C2DD8(v56, v57, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (v47(v45, 1, v16) != 1)
      {
        v48 = v53;
        v40(v53, (uint64_t *)v45, v16);
        v64 = sub_1BB86C544();
        v49 = (uint64_t)v54;
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v54, v48, v46);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v49, 0, 1, v46);
        v45 = (uint64_t)v55;
        sub_1BB86C628();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v49, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v48, v46);
        if (v47(v45, 1, v46) != 1)
        {
          v50 = (uint64_t)v60;
          v40(v60, (uint64_t *)v45, v46);
          v23 = v44;
          v16 = v46;
          goto LABEL_8;
        }
      }
      sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v23 = v44;
      v16 = v46;
    }
    v50 = (uint64_t)v60;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v60, v23, v16);
LABEL_8:
    v37 = sub_1BA8BB044(v50, v61, v62, v41);
    v51 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v51(v50, v16);
    sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v51((uint64_t)v23, v16);
    return v37;
  }
  sub_1BA8CF138(0, &qword_1ED3B3338);
  v28 = (uint64_t)v26 + *(int *)(v27 + 48);
  v29 = v26[1];
  v64 = *v26;
  v31 = v26[2];
  v30 = v26[3];
  v32 = v26[5];
  v62 = v26[4];
  v33 = v26[6];
  v34 = v26[7];
  v35 = v26[8];
  v36 = v63;
  sub_1BA5193C4(v28, v63, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4C2DD8(v36, (uint64_t)v11 + *(int *)(v59 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *v11 = v64;
  v11[1] = v29;
  v11[2] = v31;
  v11[3] = v30;
  v11[4] = v62;
  v11[5] = v32;
  v11[6] = v33;
  v11[7] = v34;
  v11[8] = v35;
  sub_1BA8CDF6C();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = sub_1BB86E9E0();
  sub_1BA4A2E80(v63, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_1BA8B7DB4(unsigned int (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);

  v53 = a3;
  v50 = a2;
  v54 = a1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v48 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v47 - v6;
  MEMORY[0x1E0C80A78](v7);
  v51 = (uint64_t)&v47 - v8;
  sub_1BA709CA4(0);
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char **)((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v47 - v17;
  v19 = sub_1BB86C67C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v47 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v47 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v47 - v26;
  sub_1BA8CED28(0);
  MEMORY[0x1E0C80A78](v28);
  v30 = (uint64_t *)((char *)&v47 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4C2DD8((uint64_t)v54, (uint64_t)v30, v31);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v36 = (uint64_t)v30 + *(int *)(v35 + 48);
    v37 = *(void (**)(char *, uint64_t *, uint64_t))(v20 + 32);
    v37(v27, v30, v19);
    sub_1BA5193C4(v36, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BB86C5F8();
    v39 = v38;
    swift_bridgeObjectRelease();
    if (!v39)
    {
      v40 = v51;
      sub_1BA4C2DD8(v50, v51, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
      if (v41(v40, 1, v19) != 1)
      {
        v42 = v47;
        v37(v47, (uint64_t *)v40, v19);
        v51 = sub_1BB86C544();
        v43 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
        v54 = v41;
        v44 = (uint64_t)v48;
        v43(v48, v42, v19);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v44, 0, 1, v19);
        v40 = (uint64_t)v49;
        sub_1BB86C628();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v42, v19);
        if (v54(v40, 1, v19) != 1)
        {
          v37(v24, (uint64_t *)v40, v19);
          goto LABEL_8;
        }
      }
      sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v24, v27, v19);
LABEL_8:
    v34 = sub_1BA8BB2E8((uint64_t)v24, v52, v53, (uint64_t)v18, sub_1BA8BD340, (uint64_t)&unk_1E7275B60, sub_1BA709CA4, (uint64_t)sub_1BA8CED50);
    v45 = *(void (**)(char *, uint64_t))(v20 + 8);
    v45(v24, v19);
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v45(v27, v19);
    return v34;
  }
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3BCE70, (void (*)(uint64_t))type metadata accessor for FormatSnippet, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v33 = *v30;
  sub_1BA5193C4((uint64_t)v30 + *(int *)(v32 + 48), (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v12 + *(int *)(v10 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *v12 = v33;
  sub_1BA8CDF34(0);
  swift_allocObject();
  swift_retain();
  v34 = sub_1BB86E9E0();
  sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_release();
  return v34;
}

uint64_t sub_1BA8B824C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, __int128 *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _OWORD v70[3];

  v62 = a3;
  v55 = a2;
  v63 = a1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v53 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v54 = (char *)&v52 - v6;
  MEMORY[0x1E0C80A78](v7);
  v56 = (uint64_t)&v52 - v8;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v59 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (_OWORD *)((char *)&v52 - v10);
  v12 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v12);
  v57 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v58 = (uint64_t)&v52 - v15;
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v52 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v60 = (char *)&v52 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v52 - v22;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v24);
  v26 = (__int128 *)((char *)&v52 - v25);
  sub_1BA8CAF1C(v63, (uint64_t)&v52 - v25, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v38 = (uint64_t)v26 + *(int *)(v37 + 48);
    v39 = *(void (**)(char *, __int128 *, uint64_t))(v17 + 32);
    v39(v23, v26, v16);
    v40 = v58;
    sub_1BA5193C4(v38, v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BB86C5F8();
    v42 = v41;
    swift_bridgeObjectRelease();
    if (!v42)
    {
      v43 = v23;
      v44 = v16;
      v45 = v56;
      sub_1BA4C2DD8(v55, v56, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (v46(v45, 1, v16) != 1)
      {
        v47 = v52;
        v39(v52, (__int128 *)v45, v16);
        v63 = sub_1BB86C544();
        v48 = (uint64_t)v53;
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v53, v47, v44);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v48, 0, 1, v44);
        v45 = (uint64_t)v54;
        sub_1BB86C628();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v47, v44);
        if (v46(v45, 1, v44) != 1)
        {
          v49 = (uint64_t)v60;
          v39(v60, (__int128 *)v45, v44);
          v23 = v43;
          v16 = v44;
          goto LABEL_8;
        }
      }
      sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v23 = v43;
      v16 = v44;
    }
    v49 = (uint64_t)v60;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v60, v23, v16);
LABEL_8:
    v36 = sub_1BA8BB574(v49, v61, v62, v40);
    v50 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v50(v49, v16);
    sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v50((uint64_t)v23, v16);
    return v36;
  }
  sub_1BA8CF138(0, &qword_1ED3B3108);
  v28 = (uint64_t)v26 + *(int *)(v27 + 48);
  v29 = v26[5];
  v68 = v26[4];
  v69 = v29;
  v70[0] = v26[6];
  *(_OWORD *)((char *)v70 + 9) = *(__int128 *)((char *)v26 + 105);
  v30 = v26[1];
  v64 = *v26;
  v65 = v30;
  v31 = v26[3];
  v66 = v26[2];
  v67 = v31;
  v32 = v57;
  sub_1BA5193C4(v28, v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4C2DD8(v32, (uint64_t)v11 + *(int *)(v59 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v33 = v69;
  v11[4] = v68;
  v11[5] = v33;
  v11[6] = v70[0];
  *(_OWORD *)((char *)v11 + 105) = *(_OWORD *)((char *)v70 + 9);
  v34 = v65;
  *v11 = v64;
  v11[1] = v34;
  v35 = v67;
  v11[2] = v66;
  v11[3] = v35;
  sub_1BA8CDEA4();
  swift_allocObject();
  sub_1BA8CED9C((uint64_t)&v64);
  v36 = sub_1BB86E9E0();
  sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA8CEE60((uint64_t)&v64);
  return v36;
}

uint64_t sub_1BA8B87C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, __int128 *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;

  v64 = a3;
  v57 = a2;
  v65 = a1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v56 = (char *)&v54 - v6;
  MEMORY[0x1E0C80A78](v7);
  v58 = (uint64_t)&v54 - v8;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v61 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (_OWORD *)((char *)&v54 - v10);
  v12 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v12);
  v59 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v60 = (uint64_t)&v54 - v15;
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v54 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v62 = (char *)&v54 - v20;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v54 - v22;
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v24);
  v26 = (__int128 *)((char *)&v54 - v25);
  sub_1BA8CAF1C(v65, (uint64_t)&v54 - v25, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v40 = (uint64_t)v26 + *(int *)(v39 + 48);
    v41 = *(void (**)(char *, __int128 *, uint64_t))(v17 + 32);
    v41(v23, v26, v16);
    v42 = v60;
    sub_1BA5193C4(v40, v60, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BB86C5F8();
    v44 = v43;
    swift_bridgeObjectRelease();
    if (!v44)
    {
      v45 = v23;
      v46 = v16;
      v47 = v58;
      sub_1BA4C2DD8(v57, v58, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (v48(v47, 1, v16) != 1)
      {
        v49 = v54;
        v41(v54, (__int128 *)v47, v16);
        v65 = sub_1BB86C544();
        v50 = (uint64_t)v55;
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v55, v49, v46);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v50, 0, 1, v46);
        v47 = (uint64_t)v56;
        sub_1BB86C628();
        swift_bridgeObjectRelease();
        sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v49, v46);
        if (v48(v47, 1, v46) != 1)
        {
          v51 = (uint64_t)v62;
          v41(v62, (__int128 *)v47, v46);
          v23 = v45;
          v16 = v46;
          goto LABEL_8;
        }
      }
      sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
      v23 = v45;
      v16 = v46;
    }
    v51 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v62, v23, v16);
LABEL_8:
    v38 = sub_1BA8BB818(v51, v63, v64, v42);
    v52 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v52(v51, v16);
    sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v52((uint64_t)v23, v16);
    return v38;
  }
  sub_1BA8CF138(0, qword_1ED3B3268);
  v28 = (uint64_t)v26 + *(int *)(v27 + 48);
  v29 = v26[7];
  v72 = v26[6];
  v73 = v29;
  v74 = v26[8];
  v30 = v26[5];
  v70 = v26[4];
  v71 = v30;
  v31 = v26[3];
  v68 = v26[2];
  v69 = v31;
  v32 = v26[1];
  v66 = *v26;
  v67 = v32;
  v33 = v59;
  sub_1BA5193C4(v28, v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4C2DD8(v33, (uint64_t)v11 + *(int *)(v61 + 36), (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v34 = v73;
  v11[6] = v72;
  v11[7] = v34;
  v11[8] = v74;
  v35 = v69;
  v11[2] = v68;
  v11[3] = v35;
  v36 = v71;
  v11[4] = v70;
  v11[5] = v36;
  v37 = v67;
  *v11 = v66;
  v11[1] = v37;
  sub_1BA8CDE14();
  swift_allocObject();
  sub_1BA8C88FC((uint64_t)&v66);
  v38 = sub_1BB86E9E0();
  sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA8C89E4((uint64_t)&v66);
  return v38;
}

uint64_t sub_1BA8B8D60(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)();
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  char v131[8];
  char v132[8];
  char v133[8];
  char v134[8];
  char v135[8];
  char v136[8];
  char v137[8];
  char v138[8];
  uint64_t v139;
  char v140[8];

  v128 = a5;
  v129 = a2;
  v130 = a1;
  sub_1BA8CC824(0);
  v121 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v122 = v8;
  v123 = (uint64_t)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatServiceOptions();
  v124 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v125 = v10;
  v126 = (uint64_t)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCBF8(0);
  v116 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v119 = (uint64_t)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v113 - v14;
  sub_1BA6EF3B0();
  v115 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v117 = (uint64_t)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v113 - v19;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v113 - v22;
  v113 = v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v113 - v26;
  v120 = a3;
  sub_1BA4C2DD8(a3, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = type metadata accessor for FormatPackage;
    sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v30 = (uint64_t)&v15[*(int *)(v29 + 48)];
    v31 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v23, 1, 1, v31);
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v32 = (uint64_t)v15;
  }
  else
  {
    v28 = type metadata accessor for FormatMetadata;
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v34 = &v15[*(int *)(v33 + 48)];
    v31 = sub_1BB86C67C();
    v35 = *(_QWORD *)(v31 - 8);
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v23, v15, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v23, 0, 1, v31);
    v32 = (uint64_t)v34;
  }
  sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))v28);
  sub_1BA4C2DD8(a4, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BB86C67C();
  v36 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v23, 1, v31) == 1)
  {
    sub_1BA5193C4((uint64_t)v20, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v27, v23, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v27, 0, 1, v31);
  }
  v37 = v130[7];
  sub_1BA8CD6F0(0);
  MEMORY[0x1E0C80A78](v38);
  v39 = v128;
  *(&v113 - 4) = v129;
  *(&v113 - 3) = (uint64_t)v27;
  v112 = v39;
  swift_bridgeObjectRetain();
  v40 = v114;
  v41 = sub_1BA8A2140((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CD70C, (uint64_t)(&v113 - 6), v37, (uint64_t)v140, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  v42 = (uint64_t)v27;
  v127 = v27;
  v114 = v40;
  v139 = v41;
  v43 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3B92F0, (uint64_t (*)(uint64_t))sub_1BA8CD6F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC(&qword_1ED3B92F8, &qword_1ED3B92F0, (uint64_t (*)(uint64_t))sub_1BA8CD6F0, MEMORY[0x1E0DEAF50]);
  sub_1BB86E920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v44 = v119;
  sub_1BA4C2DD8(v120, v119, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  v45 = v117;
  sub_1BA4C2DD8(v42, v117, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v46 = v126;
  sub_1BA4C2DD8(v39, v126, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v47 = (*(unsigned __int8 *)(v116 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
  v48 = (v118 + *(unsigned __int8 *)(v115 + 80) + v47) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
  v49 = (v113 + *(unsigned __int8 *)(v124 + 80) + v48) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
  v50 = swift_allocObject();
  v51 = v129;
  *(_QWORD *)(v50 + 16) = v129;
  sub_1BA5193C4(v44, v50 + v47, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  sub_1BA5193C4(v45, v50 + v48, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  sub_1BA5193C4(v46, v50 + v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v52 = v51;
  swift_retain();
  v53 = (void *)sub_1BB86E854();
  v54 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1BA4B07F0(0, &qword_1ED3B9540, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v120 = sub_1BB86E968();
  swift_release();
  swift_release();

  v55 = v130;
  v56 = v130[8];
  sub_1BA8CDE14();
  v125 = v57;
  MEMORY[0x1E0C80A78](v57);
  v58 = (uint64_t)v127;
  *(&v113 - 4) = v52;
  *(&v113 - 3) = v58;
  v59 = v128;
  v112 = v128;
  swift_bridgeObjectRetain();
  v60 = v114;
  v61 = sub_1BA8A0DB4((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CDE88, (uint64_t)(&v113 - 6), v56, (uint64_t)v138, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
  v126 = v60;
  v139 = v61;
  v62 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3B92C8, (uint64_t (*)(uint64_t))sub_1BA8CDE14, v54);
  sub_1BA5472EC((unint64_t *)&unk_1ED3B92D0, &qword_1ED3B92C8, (uint64_t (*)(uint64_t))sub_1BA8CDE14, MEMORY[0x1E0DEAF50]);
  v119 = sub_1BB86E920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v63 = v55[9];
  sub_1BA8CDEA4();
  MEMORY[0x1E0C80A78](v64);
  *(&v113 - 4) = v129;
  *(&v113 - 3) = v58;
  v65 = v59;
  v112 = v59;
  swift_bridgeObjectRetain();
  v66 = v126;
  v67 = sub_1BA8A0DB4((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CDF18, (uint64_t)(&v113 - 6), v63, (uint64_t)v137, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
  v126 = v66;
  v139 = v67;
  v68 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3B92A0, (uint64_t (*)(uint64_t))sub_1BA8CDEA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC(&qword_1ED3B92A8, &qword_1ED3B92A0, (uint64_t (*)(uint64_t))sub_1BA8CDEA4, MEMORY[0x1E0DEAF50]);
  v118 = sub_1BB86E920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v69 = v130[11];
  sub_1BA8CDF34(0);
  MEMORY[0x1E0C80A78](v70);
  v71 = v129;
  v72 = (uint64_t)v127;
  *(&v113 - 4) = v129;
  *(&v113 - 3) = v72;
  v112 = v65;
  swift_bridgeObjectRetain();
  v73 = v126;
  v74 = sub_1BA8A2140((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CDF50, (uint64_t)(&v113 - 6), v69, (uint64_t)v136, (uint64_t (*)(_QWORD))sub_1BA8CED28);
  v126 = v73;
  v139 = v74;
  v75 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3C02F8, (uint64_t (*)(uint64_t))sub_1BA8CDF34, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC(&qword_1ED3C0300, &qword_1ED3C02F8, (uint64_t (*)(uint64_t))sub_1BA8CDF34, MEMORY[0x1E0DEAF50]);
  v117 = sub_1BB86E920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v76 = v130;
  v77 = v130[10];
  sub_1BA8CDF6C();
  v124 = v78;
  MEMORY[0x1E0C80A78](v78);
  *(&v113 - 4) = v71;
  *(&v113 - 3) = v72;
  v79 = v72;
  v80 = v128;
  v112 = v128;
  swift_bridgeObjectRetain();
  v81 = v126;
  v82 = sub_1BA8A0DB4((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CDFE0, (uint64_t)(&v113 - 6), v77, (uint64_t)v135, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
  v125 = v81;
  v139 = v82;
  v83 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3B92E0, (uint64_t (*)(uint64_t))sub_1BA8CDF6C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC(&qword_1ED3B92E8, &qword_1ED3B92E0, (uint64_t (*)(uint64_t))sub_1BA8CDF6C, MEMORY[0x1E0DEAF50]);
  v126 = sub_1BB86E920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v84 = v76[12];
  sub_1BA8CDFFC();
  MEMORY[0x1E0C80A78](v85);
  *(&v113 - 4) = v129;
  *(&v113 - 3) = v79;
  v112 = v80;
  swift_bridgeObjectRetain();
  v86 = v125;
  v139 = sub_1BA8A0DB4((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CE070, (uint64_t)(&v113 - 6), v84, (uint64_t)v134, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
  v87 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3B9288, (uint64_t (*)(uint64_t))sub_1BA8CDFFC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC((unint64_t *)&unk_1ED3B9290, &qword_1ED3B9288, (uint64_t (*)(uint64_t))sub_1BA8CDFFC, MEMORY[0x1E0DEAF50]);
  v125 = sub_1BB86E920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v88 = v76[13];
  sub_1BA8CE08C();
  v124 = v89;
  MEMORY[0x1E0C80A78](v89);
  v90 = v128;
  v91 = v129;
  v92 = (uint64_t)v127;
  *(&v113 - 4) = v129;
  *(&v113 - 3) = v92;
  v112 = v90;
  swift_bridgeObjectRetain();
  v93 = sub_1BA8A0DB4((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CE100, (uint64_t)(&v113 - 6), v88, (uint64_t)v133, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
  v116 = v86;
  v139 = v93;
  v94 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3B92B0, (uint64_t (*)(uint64_t))sub_1BA8CE08C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC((unint64_t *)&unk_1ED3B92B8, &qword_1ED3B92B0, (uint64_t (*)(uint64_t))sub_1BA8CE08C, MEMORY[0x1E0DEAF50]);
  v124 = sub_1BB86E920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v95 = v130[14];
  sub_1BA8CE11C();
  MEMORY[0x1E0C80A78](v96);
  *(&v113 - 4) = v91;
  *(&v113 - 3) = v92;
  v112 = v90;
  swift_bridgeObjectRetain();
  v97 = v116;
  v98 = sub_1BA8A0DB4((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CE190, (uint64_t)(&v113 - 6), v95, (uint64_t)v132, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
  v116 = v97;
  v139 = v98;
  v99 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3B9258, (uint64_t (*)(uint64_t))sub_1BA8CE11C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC((unint64_t *)&unk_1ED3B9260, &qword_1ED3B9258, (uint64_t (*)(uint64_t))sub_1BA8CE11C, MEMORY[0x1E0DEAF50]);
  v115 = sub_1BB86E920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v100 = v130[19];
  sub_1BA8CE1AC();
  MEMORY[0x1E0C80A78](v101);
  *(&v113 - 4) = v129;
  *(&v113 - 3) = v92;
  v112 = v128;
  swift_bridgeObjectRetain();
  v102 = v116;
  v103 = sub_1BA8A0DB4((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CE220, (uint64_t)(&v113 - 6), v100, (uint64_t)v131, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
  v129 = v102;
  v139 = v103;
  v104 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3B9270, (uint64_t (*)(uint64_t))sub_1BA8CE1AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC((unint64_t *)&unk_1ED3B9278, &qword_1ED3B9270, (uint64_t (*)(uint64_t))sub_1BA8CE1AC, MEMORY[0x1E0DEAF50]);
  v105 = sub_1BB86E920();
  v128 = v105;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v112 = v105;
  sub_1BB86EBD8();
  v106 = v123;
  sub_1BA4C2DD8((uint64_t)v130, v123, (uint64_t (*)(_QWORD))sub_1BA8CC824);
  v107 = (*(unsigned __int8 *)(v121 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
  v108 = swift_allocObject();
  sub_1BA5193C4(v106, v108 + v107, (uint64_t (*)(_QWORD))sub_1BA8CC824);
  v109 = (void *)sub_1BB86E854();
  sub_1BA8CCEE8();
  v110 = sub_1BB86E974();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_1BA4A2E80((uint64_t)v127, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  return v110;
}

uint64_t sub_1BA8B9D10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v13[7];
  _BYTE v14[8];

  v9 = *a1;
  sub_1BA4F5FBC(0);
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  v13[6] = sub_1BA8A2140((void (*)(uint64_t *__return_ptr, uint64_t))sub_1BA8CF3A8, (uint64_t)v13, v9, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8CC824);
  v10 = (void *)sub_1BB86E854();
  sub_1BA4B07F0(0, &qword_1ED3B9300, (uint64_t (*)(uint64_t))sub_1BA4F5FBC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA5472EC(&qword_1ED3B9308, &qword_1ED3B9300, (uint64_t (*)(uint64_t))sub_1BA4F5FBC, MEMORY[0x1E0DEAF50]);
  v11 = sub_1BB86E920();
  swift_bridgeObjectRelease();

  return v11;
}

uint64_t sub_1BA8B9E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t *v23;

  v21[1] = a2;
  v22 = a5;
  v21[0] = a4;
  v23 = a6;
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v21 - v12;
  sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v15 = v14;
  v16 = (uint64_t)&v13[*(int *)(v14 + 48)];
  sub_1BA4C2DD8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  sub_1BA4C2DD8(a3, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA5193C4((uint64_t)&v10[*(int *)(v15 + 48)], v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    sub_1BA5193C4((uint64_t)&v10[*(int *)(v17 + 48)], v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v18 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v10, v18);
  }
  swift_storeEnumTagMultiPayload();
  v19 = sub_1BA8B5944(v13, v21[0], v22);
  result = sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  *v23 = v19;
  return result;
}

uint64_t sub_1BA8B9FFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v7 = a1[3];
  v9 = a1[4];
  v17 = a1[5];
  v19 = a1[6];
  v21 = a1[7];
  v23 = a1[8];
  sub_1BA8CCEE8();
  v11 = v10[12];
  v12 = v10[16];
  v14 = v10[20];
  v15 = v10[24];
  v16 = v10[28];
  v18 = v10[32];
  v20 = v10[36];
  v22 = v10[40];
  v24 = v10[44];
  sub_1BA4C2DD8(a2, a3, (uint64_t (*)(_QWORD))sub_1BA8CC824);
  swift_bridgeObjectRetain();
  *(_QWORD *)(a3 + v11) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + v12) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + v14) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + v15) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + v16) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + v18) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + v20) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + v22) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + v24) = v23;
  return result;
}

uint64_t sub_1BA8BA38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a2;
  v34 = a3;
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v4);
  v37 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CCEE8();
  MEMORY[0x1E0C80A78](v6);
  v38 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v8[12];
  v10 = v8[16];
  v11 = v8[20];
  v12 = v8[24];
  v13 = v8[28];
  v14 = v8[32];
  v15 = v8[36];
  v16 = v8[40];
  v35 = v8[44];
  sub_1BA4C2DD8(a1, v38, (uint64_t (*)(_QWORD))sub_1BA8CC824);
  v17 = *(_QWORD *)(a1 + v9);
  v18 = *(_QWORD *)(a1 + v10);
  v19 = *(_QWORD *)(a1 + v11);
  v20 = *(_QWORD *)(a1 + v12);
  v21 = *(_QWORD *)(a1 + v13);
  v36 = *(_QWORD *)(a1 + v14);
  v22 = *(_QWORD *)(a1 + v15);
  v23 = *(_QWORD *)(a1 + v16);
  v24 = *(_QWORD *)(a1 + v35);
  v25 = v37;
  sub_1BA4C2DD8(v40, v37, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v21;
  swift_bridgeObjectRetain();
  v27 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v26;
  v29 = v39;
  result = (uint64_t)sub_1BB40123C(v38, v17, v18, v19, v20, v28, v27, v22, v23, v24, v25);
  if (!v29)
  {
    v31 = result;
    v32 = v34;
    if (qword_1ED3CC218 != -1)
      swift_once();
    v33 = sub_1BAB51BC0(v40, v31);
    swift_retain();
    result = swift_release();
    *v32 = v33;
  }
  return result;
}

uint64_t sub_1BA8BA5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v32 = a4;
  v7 = type metadata accessor for FormatMetadata();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v7);
  v30 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatServiceOptions();
  v29 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v29 + 64);
  MEMORY[0x1E0C80A78](v10);
  v28 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(a2 + 136);
  v17 = (void *)sub_1BB86C58C();
  v18 = objc_msgSend(v16, sel_assetHandleForURL_lifetimeHint_, v17, 1);
  v35 = v18;

  v31 = sub_1BA8BBF54(v18, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v19 = v28;
  sub_1BA4C2DD8(a3, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v20 = v30;
  sub_1BA4C2DD8(v32, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (v14 + *(unsigned __int8 *)(v29 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v23 = (v11 + *(unsigned __int8 *)(v33 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v24 + v21, v15, v12);
  sub_1BA5193C4(v19, v24 + v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4(v20, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_retain();
  v25 = (void *)sub_1BB86E854();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v26 = sub_1BB86E968();

  swift_release();
  swift_release();

  return v26;
}

uint64_t sub_1BA8BA858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v32 = a4;
  v7 = type metadata accessor for FormatMetadata();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v7);
  v30 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatServiceOptions();
  v29 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v29 + 64);
  MEMORY[0x1E0C80A78](v10);
  v28 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(a2 + 136);
  v17 = (void *)sub_1BB86C58C();
  v18 = objc_msgSend(v16, sel_assetHandleForURL_lifetimeHint_, v17, 1);
  v35 = v18;

  v31 = sub_1BA8BC318(v18, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v19 = v28;
  sub_1BA4C2DD8(a3, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v20 = v30;
  sub_1BA4C2DD8(v32, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (v14 + *(unsigned __int8 *)(v29 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v23 = (v11 + *(unsigned __int8 *)(v33 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v24 + v21, v15, v12);
  sub_1BA5193C4(v19, v24 + v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4(v20, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_retain();
  v25 = (void *)sub_1BB86E854();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v26 = sub_1BB86E968();

  swift_release();
  swift_release();

  return v26;
}

uint64_t sub_1BA8BAAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v32 = a4;
  v7 = type metadata accessor for FormatMetadata();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v7);
  v30 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatServiceOptions();
  v29 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v29 + 64);
  MEMORY[0x1E0C80A78](v10);
  v28 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(a2 + 136);
  v17 = (void *)sub_1BB86C58C();
  v18 = objc_msgSend(v16, sel_assetHandleForURL_lifetimeHint_, v17, 1);
  v35 = v18;

  v31 = sub_1BA8BC758(v18, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v19 = v28;
  sub_1BA4C2DD8(a3, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v20 = v30;
  sub_1BA4C2DD8(v32, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (v14 + *(unsigned __int8 *)(v29 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v23 = (v11 + *(unsigned __int8 *)(v33 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v24 + v21, v15, v12);
  sub_1BA5193C4(v19, v24 + v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4(v20, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_retain();
  v25 = (void *)sub_1BB86E854();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v26 = sub_1BB86E968();

  swift_release();
  swift_release();

  return v26;
}

uint64_t sub_1BA8BADA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v32 = a4;
  v7 = type metadata accessor for FormatMetadata();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v7);
  v30 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatServiceOptions();
  v29 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v29 + 64);
  MEMORY[0x1E0C80A78](v10);
  v28 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(a2 + 136);
  v17 = (void *)sub_1BB86C58C();
  v18 = objc_msgSend(v16, sel_assetHandleForURL_lifetimeHint_, v17, 1);
  v35 = v18;

  v31 = sub_1BA8BCB40(v18, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v19 = v28;
  sub_1BA4C2DD8(a3, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v20 = v30;
  sub_1BA4C2DD8(v32, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (v14 + *(unsigned __int8 *)(v29 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v23 = (v11 + *(unsigned __int8 *)(v33 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v24 + v21, v15, v12);
  sub_1BA5193C4(v19, v24 + v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4(v20, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_retain();
  v25 = (void *)sub_1BB86E854();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v26 = sub_1BB86E968();

  swift_release();
  swift_release();

  return v26;
}

uint64_t sub_1BA8BB044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v32 = a4;
  v7 = type metadata accessor for FormatMetadata();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v7);
  v30 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatServiceOptions();
  v29 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v29 + 64);
  MEMORY[0x1E0C80A78](v10);
  v28 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(a2 + 136);
  v17 = (void *)sub_1BB86C58C();
  v18 = objc_msgSend(v16, sel_assetHandleForURL_lifetimeHint_, v17, 1);
  v35 = v18;

  v31 = sub_1BA8BCF68(v18, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v19 = v28;
  sub_1BA4C2DD8(a3, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v20 = v30;
  sub_1BA4C2DD8(v32, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (v14 + *(unsigned __int8 *)(v29 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v23 = (v11 + *(unsigned __int8 *)(v33 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v24 + v21, v15, v12);
  sub_1BA5193C4(v19, v24 + v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4(v20, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_retain();
  v25 = (void *)sub_1BB86E854();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v26 = sub_1BB86E968();

  swift_release();
  swift_release();

  return v26;
}

uint64_t sub_1BA8BB2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(id, uint64_t), uint64_t a6, void (*a7)(_QWORD), uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(id, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD);
  uint64_t v43;

  v42 = a7;
  v43 = a8;
  v41 = a6;
  v36 = a5;
  v38 = a4;
  v11 = type metadata accessor for FormatMetadata();
  v12 = *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64);
  v39 = *(_QWORD *)(v11 - 8);
  v40 = v12;
  MEMORY[0x1E0C80A78](v11);
  v35 = (uint64_t)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatServiceOptions();
  v34 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v34 + 64);
  MEMORY[0x1E0C80A78](v14);
  v33 = (uint64_t)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void **)(a2 + 136);
  v21 = (void *)sub_1BB86C58C();
  v22 = objc_msgSend(v20, sel_assetHandleForURL_lifetimeHint_, v21, 1);
  v37 = v22;

  v36 = (uint64_t (*)(id, uint64_t))v36(v22, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  v23 = v33;
  sub_1BA4C2DD8(a3, v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v24 = v35;
  sub_1BA4C2DD8(v38, v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v25 = (*(unsigned __int8 *)(v17 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v26 = (v18 + *(unsigned __int8 *)(v34 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v27 = (v15 + *(unsigned __int8 *)(v39 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v28 + v25, v19, v16);
  sub_1BA5193C4(v23, v28 + v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4(v24, v28 + v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_retain();
  v29 = (void *)sub_1BB86E854();
  v42(0);
  v30 = sub_1BB86E968();

  swift_release();
  swift_release();

  return v30;
}

uint64_t sub_1BA8BB574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v32 = a4;
  v7 = type metadata accessor for FormatMetadata();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v7);
  v30 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatServiceOptions();
  v29 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v29 + 64);
  MEMORY[0x1E0C80A78](v10);
  v28 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(a2 + 136);
  v17 = (void *)sub_1BB86C58C();
  v18 = objc_msgSend(v16, sel_assetHandleForURL_lifetimeHint_, v17, 1);
  v35 = v18;

  v31 = sub_1BA8BD6E8(v18, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v19 = v28;
  sub_1BA4C2DD8(a3, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v20 = v30;
  sub_1BA4C2DD8(v32, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (v14 + *(unsigned __int8 *)(v29 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v23 = (v11 + *(unsigned __int8 *)(v33 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v24 + v21, v15, v12);
  sub_1BA5193C4(v19, v24 + v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4(v20, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_retain();
  v25 = (void *)sub_1BB86E854();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v26 = sub_1BB86E968();

  swift_release();
  swift_release();

  return v26;
}

uint64_t sub_1BA8BB818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;

  v32 = a4;
  v7 = type metadata accessor for FormatMetadata();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v7);
  v30 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatServiceOptions();
  v29 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v29 + 64);
  MEMORY[0x1E0C80A78](v10);
  v28 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)(a2 + 136);
  v17 = (void *)sub_1BB86C58C();
  v18 = objc_msgSend(v16, sel_assetHandleForURL_lifetimeHint_, v17, 1);
  v35 = v18;

  v31 = sub_1BA8BDB50(v18, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v19 = v28;
  sub_1BA4C2DD8(a3, v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  v20 = v30;
  sub_1BA4C2DD8(v32, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v21 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v22 = (v14 + *(unsigned __int8 *)(v29 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v23 = (v11 + *(unsigned __int8 *)(v33 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v24 + v21, v15, v12);
  sub_1BA5193C4(v19, v24 + v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions);
  sub_1BA5193C4(v20, v24 + v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_retain();
  v25 = (void *)sub_1BB86E854();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v26 = sub_1BB86E968();

  swift_release();
  swift_release();

  return v26;
}

uint64_t sub_1BA8BBABC(void *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a1;
  v3 = *v2;
  v46 = a2;
  v47 = v3;
  sub_1BA8CF770(0);
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for FormatPackage();
  v43 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v42 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v41 = (uint64_t)&v41 - v8;
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FormatService.CacheFormatFile(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v44 = (uint64_t)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BB8726B8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (uint64_t *)((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v22 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E0DEF738], v19);
  v23 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) != 0)
  {
    v26 = v48;
    v25 = v49;
    v27 = objc_msgSend(v48, sel_remoteURL);
    sub_1BB86C5EC();

    sub_1BB86E7D0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
    {
      v28 = sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
    }
    else
    {
      v30 = v44;
      sub_1BA5193C4((uint64_t)v11, v44, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BB369DC4();
      v31 = (uint64_t)v45;
      v32 = v50;
      v33 = swift_dynamicCast();
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
      if ((v33 & 1) != 0)
      {
        v34(v31, 0, 1, v32);
        v35 = v41;
        sub_1BA5193C4(v31, v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
        sub_1BA4C2DD8(v35, v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
        sub_1BA4B07F0(0, &qword_1ED3B08A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        v36 = sub_1BB86E9E0();
        sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
        sub_1BA4A2E80(v30, type metadata accessor for FormatService.CacheFormatFile);
        return v36;
      }
      v34(v31, 1, 1, v32);
      sub_1BA4A2E80(v30, type metadata accessor for FormatService.CacheFormatFile);
      v28 = sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA8CF770);
    }
    v37 = sub_1BA8A56B8(v28, v29);
    if ((v37 & 1) != 0)
      v37 = (uint64_t)objc_msgSend(*(id *)(v25 + 136), sel_d_resetAssetHandle_, v26);
    MEMORY[0x1E0C80A78](v37);
    v38 = v46;
    *(&v41 - 2) = (uint64_t)v26;
    *(&v41 - 1) = v38;
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = v26;
    v39 = v26;
    v40 = (void *)sub_1BB86E854();
    v36 = sub_1BB86E98C();
    swift_release();
    swift_release();

    return v36;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8BBF54(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  uint64_t result;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v3 = v2;
  v35 = a1;
  v4 = *v2;
  v32 = a2;
  v33 = v4;
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatService.CacheFormatFile(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v31 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB8726B8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v17 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF738], v14);
  v18 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v20 = v35;
    v21 = objc_msgSend(v35, sel_remoteURL);
    sub_1BB86C5EC();

    sub_1BB86E7D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v34);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
    {
      v22 = sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
    }
    else
    {
      v24 = v31;
      sub_1BA5193C4((uint64_t)v7, v31, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BB369DC4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2A9848, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        v25 = sub_1BB86E9E0();
        sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
        return v25;
      }
      v39 = 0;
      v37 = 0u;
      v38 = 0u;
      v36 = 0u;
      sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
      v22 = sub_1BA8CE710(v36, *((uint64_t *)&v36 + 1));
    }
    v26 = sub_1BA8A56B8(v22, v23);
    if ((v26 & 1) != 0)
      v26 = (uint64_t)objc_msgSend((id)v3[17], sel_d_resetAssetHandle_, v20);
    MEMORY[0x1E0C80A78](v26);
    v27 = v32;
    *(&v30 - 2) = (uint64_t)v20;
    *(&v30 - 1) = v27;
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = v20;
    v28 = v20;
    v29 = (void *)sub_1BB86E854();
    v25 = sub_1BB86E98C();
    swift_release();
    swift_release();

    return v25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8BC318(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  uint64_t result;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];

  v3 = v2;
  v30 = a2;
  v33 = a1;
  v31 = *v2;
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatService.CacheFormatFile(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v29 = (uint64_t)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB8726B8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v16 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF738], v13);
  v17 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v19 = v33;
    v20 = objc_msgSend(v33, sel_remoteURL);
    sub_1BB86C5EC();

    sub_1BB86E7D0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v32);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
    {
      v21 = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
    }
    else
    {
      v23 = v29;
      sub_1BA5193C4((uint64_t)v6, v29, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BB369DC4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        BYTE8(v38) &= 1u;
        sub_1BA4AD288(0, &qword_1EF2A9858, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        v24 = sub_1BB86E9E0();
        sub_1BA4A2E80(v23, type metadata accessor for FormatService.CacheFormatFile);
        return v24;
      }
      v38 = 0u;
      memset(v39, 0, 27);
      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
      sub_1BA4A2E80(v23, type metadata accessor for FormatService.CacheFormatFile);
      v21 = sub_1BA8CE8D0(v34, *((uint64_t *)&v34 + 1), v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), *(uint64_t *)&v39[0], *((uint64_t *)&v39[0] + 1), *(uint64_t *)&v39[1], WORD4(v39[1]) | (BYTE10(v39[1]) << 16));
    }
    v25 = sub_1BA8A56B8(v21, v22);
    if ((v25 & 1) != 0)
      v25 = (uint64_t)objc_msgSend((id)v3[17], sel_d_resetAssetHandle_, v19);
    MEMORY[0x1E0C80A78](v25);
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = v19;
    v26 = v19;
    v27 = (void *)sub_1BB86E854();
    v24 = sub_1BB86E98C();
    swift_release();
    swift_release();

    return v24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8BC758(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  uint64_t result;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  unsigned __int8 v40;

  v3 = v2;
  v34 = a1;
  v4 = *v2;
  v31 = a2;
  v32 = v4;
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatService.CacheFormatFile(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v30 = (uint64_t)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB8726B8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v17 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF738], v14);
  v18 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v20 = v34;
    v21 = objc_msgSend(v34, sel_remoteURL);
    sub_1BB86C5EC();

    sub_1BB86E7D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v33);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
    {
      v22 = sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
    }
    else
    {
      v24 = v30;
      sub_1BA5193C4((uint64_t)v7, v30, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BB369DC4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1BA4AD288(0, &qword_1EF2A9860, (uint64_t)&type metadata for FormatType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        v25 = sub_1BB86E9E0();
        sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
        return v25;
      }
      v40 = 0;
      v38 = 0u;
      v39 = 0u;
      v36 = 0u;
      v37 = 0u;
      v35 = 0u;
      sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
      v22 = sub_1BA8CEA24(v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37, *((uint64_t *)&v37 + 1), v38, *((uint64_t *)&v38 + 1), v39, *((uint64_t *)&v39 + 1), v40);
    }
    v26 = sub_1BA8A56B8(v22, v23);
    if ((v26 & 1) != 0)
      v26 = (uint64_t)objc_msgSend((id)v3[17], sel_d_resetAssetHandle_, v20);
    MEMORY[0x1E0C80A78](v26);
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = v20;
    v27 = v20;
    v28 = (void *)sub_1BB86E854();
    v25 = sub_1BB86E98C();
    swift_release();
    swift_release();

    return v25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8BCB40(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  uint64_t result;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];

  v3 = v2;
  v30 = a2;
  v33 = a1;
  v31 = *v2;
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatService.CacheFormatFile(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v29 = (uint64_t)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB8726B8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v16 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF738], v13);
  v17 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v19 = v33;
    v20 = objc_msgSend(v33, sel_remoteURL);
    sub_1BB86C5EC();

    sub_1BB86E7D0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v32);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
    {
      v21 = sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
    }
    else
    {
      v23 = v29;
      sub_1BA5193C4((uint64_t)v6, v29, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BB369DC4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        LOBYTE(v39[0]) &= 1u;
        sub_1BA4AD288(0, &qword_1EF2A9868, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        v24 = sub_1BB86E9E0();
        sub_1BA4A2E80(v23, type metadata accessor for FormatService.CacheFormatFile);
        return v24;
      }
      v38 = 0u;
      memset(v39, 0, 25);
      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
      sub_1BA4A2E80(v23, type metadata accessor for FormatService.CacheFormatFile);
      v21 = sub_1BA8CEB64(v34, *((uint64_t *)&v34 + 1));
    }
    v25 = sub_1BA8A56B8(v21, v22);
    if ((v25 & 1) != 0)
      v25 = (uint64_t)objc_msgSend((id)v3[17], sel_d_resetAssetHandle_, v19);
    MEMORY[0x1E0C80A78](v25);
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = v19;
    v26 = v19;
    v27 = (void *)sub_1BB86E854();
    v24 = sub_1BB86E98C();
    swift_release();
    swift_release();

    return v24;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8BCF68(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  uint64_t result;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v3 = v2;
  v34 = a1;
  v4 = *v2;
  v31 = a2;
  v32 = v4;
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatService.CacheFormatFile(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v30 = (uint64_t)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB8726B8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v17 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF738], v14);
  v18 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v20 = v34;
    v21 = objc_msgSend(v34, sel_remoteURL);
    sub_1BB86C5EC();

    sub_1BB86E7D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v33);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
    {
      v22 = sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
    }
    else
    {
      v24 = v30;
      sub_1BA5193C4((uint64_t)v7, v30, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BB369DC4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1BA4AD288(0, &qword_1EF2A9870, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        v25 = sub_1BB86E9E0();
        sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
        return v25;
      }
      v39 = 0;
      v37 = 0u;
      v38 = 0u;
      v35 = 0u;
      v36 = 0u;
      sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
      v22 = sub_1BA8CECB8(v35, *((uint64_t *)&v35 + 1));
    }
    v26 = sub_1BA8A56B8(v22, v23);
    if ((v26 & 1) != 0)
      v26 = (uint64_t)objc_msgSend((id)v3[17], sel_d_resetAssetHandle_, v20);
    MEMORY[0x1E0C80A78](v26);
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = v20;
    v27 = v20;
    v28 = (void *)sub_1BB86E854();
    v25 = sub_1BB86E98C();
    swift_release();
    swift_release();

    return v25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8BD340(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  uint64_t result;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v34 = a1;
  v4 = *v2;
  v31 = a2;
  v32 = v4;
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatService.CacheFormatFile(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v30 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB8726B8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v17 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF738], v14);
  v18 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v20 = v34;
    v21 = objc_msgSend(v34, sel_remoteURL);
    sub_1BB86C5EC();

    sub_1BB86E7D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v33);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
    {
      v22 = sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
    }
    else
    {
      v24 = v30;
      sub_1BA5193C4((uint64_t)v7, v30, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BB369DC4();
      type metadata accessor for FormatSnippet();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v36 = v35;
        sub_1BA4B07F0(0, &qword_1EF2A9878, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        v25 = sub_1BB86E9E0();
        sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
        return v25;
      }
      v35 = 0;
      sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
      v22 = swift_release();
    }
    v26 = sub_1BA8A56B8(v22, v23);
    if ((v26 & 1) != 0)
      v26 = (uint64_t)objc_msgSend((id)v3[17], sel_d_resetAssetHandle_, v20);
    MEMORY[0x1E0C80A78](v26);
    v27 = v31;
    *(&v30 - 2) = (uint64_t)v20;
    *(&v30 - 1) = v27;
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = v20;
    v28 = v20;
    v29 = (void *)sub_1BB86E854();
    type metadata accessor for FormatSnippet();
    v25 = sub_1BB86E98C();
    swift_release();
    swift_release();

    return v25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8BD6E8(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  uint64_t result;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD v42[2];
  _OWORD v43[8];
  _OWORD v44[6];
  _OWORD v45[2];
  _BYTE v46[128];

  v3 = v2;
  v35 = a1;
  v4 = *v2;
  v31 = a2;
  v32 = v4;
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C67C();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatService.CacheFormatFile(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v30 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB8726B8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v17 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF738], v14);
  v18 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v20 = v35;
    v21 = objc_msgSend(v35, sel_remoteURL);
    sub_1BB86C5EC();

    sub_1BB86E7D0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
    {
      v22 = sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
    }
    else
    {
      v24 = v30;
      sub_1BA5193C4((uint64_t)v7, v30, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BB369DC4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        nullsub_1(v46);
        sub_1BA6A09F0((uint64_t)v46, (uint64_t)v43, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem);
        sub_1BA6A09F0((uint64_t)v43, (uint64_t)v44, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem);
        v40 = v44[4];
        v41 = v44[5];
        v42[0] = v45[0];
        *(_OWORD *)((char *)v42 + 9) = *(_OWORD *)((char *)v45 + 9);
        v36 = v44[0];
        v37 = v44[1];
        v38 = v44[2];
        v39 = v44[3];
        sub_1BA4AD288(0, &qword_1EF2A9888, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        v25 = sub_1BB86E9E0();
        sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
        return v25;
      }
      sub_1BA8CEFE0(v43);
      sub_1BA6A09F0((uint64_t)v43, (uint64_t)v46, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem);
      sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BA6A09F0((uint64_t)v46, (uint64_t)v44, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem);
      v22 = sub_1BA8CEFFC((uint64_t)v44);
    }
    v26 = sub_1BA8A56B8(v22, v23);
    if ((v26 & 1) != 0)
      v26 = (uint64_t)objc_msgSend((id)v3[17], sel_d_resetAssetHandle_, v20);
    MEMORY[0x1E0C80A78](v26);
    v27 = v31;
    *(&v30 - 2) = (uint64_t)v20;
    *(&v30 - 1) = v27;
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = v20;
    v28 = v20;
    v29 = (void *)sub_1BB86E854();
    v25 = sub_1BB86E98C();
    swift_release();
    swift_release();

    return v25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8BDB50(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char v18;
  uint64_t result;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _OWORD v45[9];
  _OWORD v46[9];
  _BYTE v47[144];

  v3 = v2;
  v35 = a1;
  v4 = *v2;
  v31 = a2;
  v32 = v4;
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C67C();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatService.CacheFormatFile(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v30 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB8726B8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v17 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF738], v14);
  v18 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v20 = v35;
    v21 = objc_msgSend(v35, sel_remoteURL);
    sub_1BB86C5EC();

    sub_1BB86E7D0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) == 1)
    {
      v22 = sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
    }
    else
    {
      v24 = v30;
      sub_1BA5193C4((uint64_t)v7, v30, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BB369DC4();
      if ((swift_dynamicCast() & 1) != 0)
      {
        nullsub_1(v47);
        sub_1BA6A09F0((uint64_t)v47, (uint64_t)v45, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup);
        sub_1BA6A09F0((uint64_t)v45, (uint64_t)v46, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup);
        v42 = v46[6];
        v43 = v46[7];
        v44 = v46[8];
        v38 = v46[2];
        v39 = v46[3];
        v40 = v46[4];
        v41 = v46[5];
        v36 = v46[0];
        v37 = v46[1];
        sub_1BA4AD288(0, &qword_1EF2A9898, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
        swift_allocObject();
        v25 = sub_1BB86E9E0();
        sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
        return v25;
      }
      sub_1BA8CF25C(v45);
      sub_1BA6A09F0((uint64_t)v45, (uint64_t)v47, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup);
      sub_1BA4A2E80(v24, type metadata accessor for FormatService.CacheFormatFile);
      sub_1BA6A09F0((uint64_t)v47, (uint64_t)v46, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup);
      v22 = (uint64_t)sub_1BA8CF278(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA8CF2D4);
    }
    v26 = sub_1BA8A56B8(v22, v23);
    if ((v26 & 1) != 0)
      v26 = (uint64_t)objc_msgSend((id)v3[17], sel_d_resetAssetHandle_, v20);
    MEMORY[0x1E0C80A78](v26);
    v27 = v31;
    *(&v30 - 2) = (uint64_t)v20;
    *(&v30 - 1) = v27;
    sub_1BB86EC14();
    *(_QWORD *)(swift_allocObject() + 16) = v20;
    v28 = v20;
    v29 = (void *)sub_1BB86E854();
    v25 = sub_1BB86E98C();
    swift_release();
    swift_release();

    return v25;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8BDFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v44 = a4;
  sub_1BA8CC824(0);
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - v13;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v15);
  v45 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB86C67C();
  v46 = *(_QWORD *)(v17 - 8);
  v47 = v17;
  MEMORY[0x1E0C80A78](v17);
  v43 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BA4C2DD8(a1, (uint64_t)v21, v22);
  v52 = a2;
  if ((sub_1BA8A5760(v23, v24) & 1) == 0
    || (v50 = sub_1BB86C538(),
        v51 = v25,
        v48 = 0x786F62706F72642FLL,
        v49 = 0xE90000000000002FLL,
        sub_1BA7114A0(),
        v26 = sub_1BB873B40(),
        swift_bridgeObjectRelease(),
        (v26 & 1) != 0))
  {
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    sub_1BA4C2DD8(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    sub_1BA4C2DD8(a5, (uint64_t)&v14[*(int *)(v9 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA8CC824);
    sub_1BA8CD6F0(0);
    swift_allocObject();
    v27 = sub_1BB86E9E0();
    v28 = (uint64_t)v14;
    v29 = (uint64_t (*)(_QWORD))sub_1BA8CC824;
LABEL_10:
    sub_1BA4A2E80(v28, v29);
    return v27;
  }
  if (qword_1EF2A6D60 != -1)
    swift_once();
  type metadata accessor for FormatService();
  sub_1BA50AD30(&qword_1ED3B3C00, v30, (uint64_t (*)(uint64_t))type metadata accessor for FormatService, (uint64_t)&protocol conformance descriptor for FormatService);
  v31 = v52;
  sub_1BB86D210();
  if (qword_1EF2A6D68 != -1)
    swift_once();
  sub_1BB86D210();
  v50 = 0;
  v51 = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v50 = 0x2F2F3A70747468;
  v51 = 0xE700000000000000;
  sub_1BB872AFC((_QWORD *)0x2F2F3A70747468);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v32);
  sub_1BB872AFC(v33);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v34);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v35);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v36);
  v37 = v45;
  sub_1BB86C634();
  swift_bridgeObjectRelease();
  v39 = v46;
  v38 = v47;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48))(v37, 1, v47);
  if ((_DWORD)result != 1)
  {
    v41 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v43, v37, v38);
    v27 = sub_1BA8BB2E8(v41, v31, v44, a5, sub_1BA8BBABC, (uint64_t)&unk_1E7275C50, sub_1BA8CC824, (uint64_t)sub_1BA8CF6CC);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
    v29 = (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage;
    v28 = (uint64_t)v21;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BA8BE464(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;

  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3CF960);
  sub_1BB86EC14();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v2 = a1;
  v3 = (void *)sub_1BB86E854();
  v4 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v4;
}

uint64_t sub_1BA8BE540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v38[0] = a4;
  v43 = a1;
  v44 = a2;
  v41 = a5;
  v6 = sub_1BB86C67C();
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x1E0C80A78](v6);
  v42 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CF770(0);
  MEMORY[0x1E0C80A78](v8);
  v45 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v13);
  v40 = (uint64_t)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v38 - v16;
  v18 = type metadata accessor for FormatService.CacheFormatFile(0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
  v22 = *(_QWORD *)(v48 + 480);
  v48 = a3;
  v38[1] = v22;
  sub_1BB86E7D0();
  v39 = v19;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1BA50AD30(&qword_1ED3B3030, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v23 = v49;
    sub_1BB86DC78();
    if (v23)
    {
      swift_release();
      sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
      v24 = v23;
      goto LABEL_9;
    }
    sub_1BA5193C4((uint64_t)v12, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v25 = (void *)v38[0];
    *(_QWORD *)&v21[*(int *)(v18 + 20)] = v38[0];
    v26 = v25;
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v17, (uint64_t)v21, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1BB369DC4();
  v27 = type metadata accessor for FormatPackage();
  v28 = (uint64_t)v45;
  v29 = swift_dynamicCast();
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  if ((v29 & 1) != 0)
  {
    v30(v28, 0, 1, v27);
    sub_1BA5193C4(v28, v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v42, v48, v47);
    v31 = v40;
    sub_1BA4C2DD8((uint64_t)v21, v40, type metadata accessor for FormatService.CacheFormatFile);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v31, 0, 1, v18);
    sub_1BB86E7DC();
    swift_release();
    return sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FormatService.CacheFormatFile);
  }
  v30(v28, 1, 1, v27);
  sub_1BA4A2E80(v28, (uint64_t (*)(_QWORD))sub_1BA8CF770);
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  v24 = swift_allocError();
  strcpy(v33, "FormatPackage");
  *((_WORD *)v33 + 7) = -4864;
  *((_QWORD *)v33 + 2) = 1635017028;
  *((_QWORD *)v33 + 3) = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FormatService.CacheFormatFile);
LABEL_9:
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  swift_allocError();
  v35 = v34;
  sub_1BA8CE760();
  v37 = *(int *)(v36 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 16))(v35, v48, v47);
  *(_QWORD *)(v35 + v37) = v24;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BA8BEA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;

  v43 = a2;
  v38[0] = a4;
  v42 = a1;
  v40 = a5;
  v6 = sub_1BB86C67C();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v11);
  v39 = (uint64_t)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v38 - v14;
  v16 = type metadata accessor for FormatService.CacheFormatFile(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
  v20 = *(_QWORD *)(v52 + 480);
  v52 = a3;
  v38[1] = v20;
  sub_1BB86E7D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BA50AD30(&qword_1ED3B3030, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v21 = v44;
    sub_1BB86DC78();
    if (v21)
    {
      swift_release();
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
      v22 = v21;
      goto LABEL_10;
    }
    sub_1BA5193C4((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v23 = (void *)v38[0];
    *(_QWORD *)&v19[*(int *)(v16 + 20)] = v38[0];
    v24 = v23;
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v15, (uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1BB369DC4();
  if (swift_dynamicCast())
  {
    v25 = v48;
    if (v48)
    {
      v26 = v51;
      v27 = v46;
      v28 = v40;
      v29 = v41;
      *v40 = v47;
      v28[1] = v25;
      v30 = v50;
      *((_OWORD *)v28 + 1) = v49;
      *((_OWORD *)v28 + 2) = v30;
      v28[6] = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v29, v52, v27);
      v31 = v39;
      sub_1BA4C2DD8((uint64_t)v19, v39, type metadata accessor for FormatService.CacheFormatFile);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v31, 0, 1, v16);
      sub_1BB86E7DC();
      swift_release();
      return sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
    }
  }
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  v22 = swift_allocError();
  *v33 = 0xD000000000000012;
  v33[1] = 0x80000001BB961480;
  v33[2] = 1635017028;
  v33[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
LABEL_10:
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  swift_allocError();
  v35 = v34;
  sub_1BA8CE760();
  v37 = *(int *)(v36 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v35, v52, v46);
  *(_QWORD *)(v35 + v37) = v22;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BA8BEE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  __int16 v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  _QWORD *v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  int v61;
  __int128 v62;
  uint64_t v63;
  __int16 v64;
  char v65;
  uint64_t v66;

  v43 = a4;
  v51 = a2;
  v50 = a1;
  v47 = a5;
  v6 = sub_1BB86C67C();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v11);
  v46 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v42 - v14;
  v16 = type metadata accessor for FormatService.CacheFormatFile(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
  v20 = *(_QWORD *)(v66 + 480);
  v66 = a3;
  v44 = v20;
  sub_1BB86E7D0();
  v45 = v17;
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v49 = v16;
  if (v21(v15, 1, v16) == 1)
  {
    sub_1BA50AD30(&qword_1ED3B3030, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v22 = v52;
    sub_1BB86DC78();
    if (v22)
    {
      swift_release();
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
      v23 = v22;
      goto LABEL_10;
    }
    sub_1BA5193C4((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v24 = v43;
    *(_QWORD *)&v19[*(int *)(v49 + 20)] = v43;
    v25 = v24;
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v15, (uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1BB369DC4();
  if (swift_dynamicCast())
  {
    v26 = v56;
    if (v56)
    {
      v27 = v64;
      v28 = v65;
      v29 = v63;
      v30 = v61;
      v31 = v60;
      v32 = v59;
      v33 = v47;
      *v47 = v55;
      v33[1] = v26;
      v34 = v58;
      *((_OWORD *)v33 + 1) = v57;
      *((_OWORD *)v33 + 2) = v34;
      *((_OWORD *)v33 + 3) = v32;
      v33[8] = v31;
      *((_BYTE *)v33 + 72) = v30 & 1;
      *((_OWORD *)v33 + 5) = v62;
      v33[12] = v29;
      *((_BYTE *)v33 + 106) = v28;
      *((_WORD *)v33 + 52) = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v48, v66, v54);
      v35 = v46;
      sub_1BA4C2DD8((uint64_t)v19, v46, type metadata accessor for FormatService.CacheFormatFile);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v35, 0, 1, v49);
      sub_1BB86E7DC();
      swift_release();
      return sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
    }
  }
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  v23 = swift_allocError();
  *v37 = 0xD000000000000010;
  v37[1] = 0x80000001BB9614A0;
  v37[2] = 1635017028;
  v37[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
LABEL_10:
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  swift_allocError();
  v39 = v38;
  sub_1BA8CE760();
  v41 = *(int *)(v40 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v39, v66, v54);
  *(_QWORD *)(v39 + v41) = v23;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BA8BF388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  char v53;
  uint64_t v54;

  v38[0] = a4;
  v42 = a1;
  v43 = a2;
  v40 = a5;
  v6 = sub_1BB86C67C();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v11);
  v39 = (uint64_t)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v38 - v14;
  v16 = type metadata accessor for FormatService.CacheFormatFile(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
  v20 = *(_QWORD *)(v54 + 480);
  v54 = a3;
  v38[1] = v20;
  sub_1BB86E7D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BA50AD30(&qword_1ED3B3030, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v21 = v44;
    sub_1BB86DC78();
    if (v21)
    {
      swift_release();
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
      v22 = v21;
      goto LABEL_10;
    }
    sub_1BA5193C4((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v23 = (void *)v38[0];
    *(_QWORD *)&v19[*(int *)(v16 + 20)] = v38[0];
    v24 = v23;
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v15, (uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1BB369DC4();
  if (swift_dynamicCast())
  {
    v25 = v48;
    if (v48)
    {
      v26 = v53;
      v27 = v46;
      v28 = v40;
      *v40 = v47;
      v28[1] = v25;
      v29 = v50;
      *((_OWORD *)v28 + 1) = v49;
      *((_OWORD *)v28 + 2) = v29;
      v30 = v52;
      *((_OWORD *)v28 + 3) = v51;
      *((_OWORD *)v28 + 4) = v30;
      *((_BYTE *)v28 + 80) = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v41, v54, v27);
      v31 = v39;
      sub_1BA4C2DD8((uint64_t)v19, v39, type metadata accessor for FormatService.CacheFormatFile);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v31, 0, 1, v16);
      sub_1BB86E7DC();
      swift_release();
      return sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
    }
  }
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  v22 = swift_allocError();
  *v33 = 0x795474616D726F46;
  v33[1] = 0xEA00000000006570;
  v33[2] = 1635017028;
  v33[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
LABEL_10:
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  swift_allocError();
  v35 = v34;
  sub_1BA8CE760();
  v37 = *(int *)(v36 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v35, v54, v46);
  *(_QWORD *)(v35 + v37) = v22;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BA8BF814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31;
  uint64_t v32;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  char v56;
  __int128 v57;
  char v58;
  uint64_t v59;

  v39[0] = a4;
  v45 = a2;
  v44 = a1;
  v42 = a5;
  v6 = sub_1BB86C67C();
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x1E0C80A78](v6);
  v43 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v11);
  v41 = (uint64_t)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v39 - v14;
  v16 = type metadata accessor for FormatService.CacheFormatFile(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
  v20 = *(_QWORD *)(v59 + 480);
  v59 = a3;
  v39[1] = v20;
  sub_1BB86E7D0();
  v40 = v17;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BA50AD30(&qword_1ED3B3030, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v21 = v46;
    sub_1BB86DC78();
    if (v21)
    {
      swift_release();
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
      v22 = v21;
      goto LABEL_10;
    }
    sub_1BA5193C4((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v23 = (void *)v39[0];
    *(_QWORD *)&v19[*(int *)(v16 + 20)] = v39[0];
    v24 = v23;
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v15, (uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1BB369DC4();
  if (swift_dynamicCast())
  {
    v25 = v50;
    if (v50)
    {
      v26 = v58;
      v27 = v56;
      v29 = v53;
      v28 = v54;
      v30 = v42;
      *v42 = v49;
      v30[1] = v25;
      v31 = v52;
      *((_OWORD *)v30 + 1) = v51;
      *((_OWORD *)v30 + 2) = v31;
      v30[6] = v29;
      v30[7] = v28;
      *((_OWORD *)v30 + 4) = v55;
      *((_BYTE *)v30 + 80) = v27 & 1;
      *(_OWORD *)(v30 + 11) = v57;
      *((_BYTE *)v30 + 104) = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v43, v59, v48);
      v32 = v41;
      sub_1BA4C2DD8((uint64_t)v19, v41, type metadata accessor for FormatService.CacheFormatFile);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v32, 0, 1, v16);
      sub_1BB86E7DC();
      swift_release();
      return sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
    }
  }
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  v22 = swift_allocError();
  *v34 = 0xD000000000000013;
  v34[1] = 0x80000001BB9614C0;
  v34[2] = 1635017028;
  v34[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
LABEL_10:
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  swift_allocError();
  v36 = v35;
  sub_1BA8CE760();
  v38 = *(int *)(v37 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v36, v59, v48);
  *(_QWORD *)(v36 + v38) = v22;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BA8BFCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;

  v38[0] = a4;
  v42 = a1;
  v43 = a2;
  v40 = a5;
  v6 = sub_1BB86C67C();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v11);
  v39 = (uint64_t)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v38 - v14;
  v16 = type metadata accessor for FormatService.CacheFormatFile(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
  v20 = *(_QWORD *)(v53 + 480);
  v53 = a3;
  v38[1] = v20;
  sub_1BB86E7D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BA50AD30(&qword_1ED3B3030, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v21 = v44;
    sub_1BB86DC78();
    if (v21)
    {
      swift_release();
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
      v22 = v21;
      goto LABEL_10;
    }
    sub_1BA5193C4((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v23 = (void *)v38[0];
    *(_QWORD *)&v19[*(int *)(v16 + 20)] = v38[0];
    v24 = v23;
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v15, (uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1BB369DC4();
  if (swift_dynamicCast())
  {
    v25 = v48;
    if (v48)
    {
      v26 = v52;
      v27 = v46;
      v28 = v40;
      v29 = v41;
      *v40 = v47;
      v28[1] = v25;
      v30 = v50;
      *((_OWORD *)v28 + 1) = v49;
      *((_OWORD *)v28 + 2) = v30;
      *((_OWORD *)v28 + 3) = v51;
      v28[8] = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v29, v53, v27);
      v31 = v39;
      sub_1BA4C2DD8((uint64_t)v19, v39, type metadata accessor for FormatService.CacheFormatFile);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v31, 0, 1, v16);
      sub_1BB86E7DC();
      swift_release();
      return sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
    }
  }
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  v22 = swift_allocError();
  *v33 = 0x745374616D726F46;
  v33[1] = 0xEB00000000656C79;
  v33[2] = 1635017028;
  v33[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
LABEL_10:
  type metadata accessor for FormatServiceError();
  sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
  swift_allocError();
  v35 = v34;
  sub_1BA8CE760();
  v37 = *(int *)(v36 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v35, v53, v46);
  *(_QWORD *)(v35 + v37) = v22;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BA8C016C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a2;
  v31[0] = a4;
  v34 = a1;
  v5 = sub_1BB86C67C();
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v10);
  v32 = (uint64_t)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v31 - v13;
  v15 = type metadata accessor for FormatService.CacheFormatFile(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
  v19 = *(_QWORD *)(v39 + 480);
  v39 = a3;
  v31[1] = v19;
  sub_1BB86E7D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1BA50AD30(&qword_1ED3B3030, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v20 = v36;
    sub_1BB86DC78();
    if (v20)
    {
      swift_release();
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
      v21 = v20;
LABEL_10:
      type metadata accessor for FormatServiceError();
      sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
      swift_allocError();
      v24 = v27;
      sub_1BA8CE760();
      v29 = *(int *)(v28 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v24, v39, v38);
      *(_QWORD *)(v24 + v29) = v21;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return v24;
    }
    sub_1BA5193C4((uint64_t)v9, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v22 = (void *)v31[0];
    *(_QWORD *)&v18[*(int *)(v15 + 20)] = v31[0];
    v23 = v22;
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v14, (uint64_t)v18, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1BB369DC4();
  type metadata accessor for FormatSnippet();
  if (!swift_dynamicCast() || (v24 = v40) == 0)
  {
    type metadata accessor for FormatServiceError();
    sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
    v21 = swift_allocError();
    strcpy(v26, "FormatSnippet");
    *((_WORD *)v26 + 7) = -4864;
    *((_QWORD *)v26 + 2) = 1635017028;
    *((_QWORD *)v26 + 3) = 0xE400000000000000;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatService.CacheFormatFile);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v33, v39, v38);
  v25 = v32;
  sub_1BA4C2DD8((uint64_t)v18, v32, type metadata accessor for FormatService.CacheFormatFile);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
  sub_1BB86E7DC();
  swift_release();
  sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatService.CacheFormatFile);
  return v24;
}

uint64_t sub_1BA8C05C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  _OWORD *v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD v53[6];
  _OWORD v54[2];
  _BYTE v55[128];
  _BYTE v56[128];
  _BYTE v57[128];
  uint64_t v58;

  v41[0] = a4;
  v48 = a1;
  v49 = a2;
  v44 = a5;
  v6 = sub_1BB86C67C();
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v8);
  v47 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v10);
  v43 = (uint64_t)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v41 - v13;
  v15 = type metadata accessor for FormatService.CacheFormatFile(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
  v19 = *(_QWORD *)(v58 + 480);
  v58 = a3;
  v41[1] = v19;
  sub_1BB86E7D0();
  v42 = v16;
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v46 = v15;
  if (v20(v14, 1, v15) == 1)
  {
    sub_1BA50AD30(&qword_1ED3B3030, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v21 = (uint64_t)v47;
    v22 = v50;
    sub_1BB86DC78();
    v23 = v22;
    if (v22)
    {
      swift_release();
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
      v24 = v58;
      v26 = v51;
      v25 = v52;
LABEL_9:
      type metadata accessor for FormatServiceError();
      sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
      swift_allocError();
      v31 = v30;
      sub_1BA8CE760();
      v33 = *(int *)(v32 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v31, v24, v25);
      *(_QWORD *)(v31 + v33) = v23;
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    v50 = 0;
    sub_1BA5193C4(v21, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v27 = (void *)v41[0];
    *(_QWORD *)&v18[*(int *)(v46 + 20)] = v41[0];
    v28 = v27;
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v14, (uint64_t)v18, type metadata accessor for FormatService.CacheFormatFile);
  }
  v24 = v58;
  v26 = v51;
  v25 = v52;
  sub_1BB369DC4();
  if (!swift_dynamicCast()
    || (nullsub_1(v57),
        sub_1BA6A09F0((uint64_t)v57, (uint64_t)v55, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem),
        sub_1BA6A09F0((uint64_t)v55, (uint64_t)v56, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem),
        sub_1BA8CF120((uint64_t)v56) == 1))
  {
    type metadata accessor for FormatServiceError();
    sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
    v23 = swift_allocError();
    *v29 = 0x744974616D726F46;
    v29[1] = 0xEA00000000006D65;
    v29[2] = 1635017028;
    v29[3] = 0xE400000000000000;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatService.CacheFormatFile);
    goto LABEL_9;
  }
  sub_1BA6A09F0((uint64_t)v55, (uint64_t)v53, &qword_1EF2A9880, (uint64_t)&type metadata for FormatItem);
  v35 = v53[5];
  v36 = v44;
  v37 = v45;
  v44[4] = v53[4];
  v36[5] = v35;
  v36[6] = v54[0];
  *(_OWORD *)((char *)v36 + 105) = *(_OWORD *)((char *)v54 + 9);
  v38 = v53[1];
  *v36 = v53[0];
  v36[1] = v38;
  v39 = v53[3];
  v36[2] = v53[2];
  v36[3] = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v37, v24, v25);
  v40 = v43;
  sub_1BA4C2DD8((uint64_t)v18, v43, type metadata accessor for FormatService.CacheFormatFile);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v40, 0, 1, v46);
  sub_1BB86E7DC();
  swift_release();
  return sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatService.CacheFormatFile);
}

uint64_t sub_1BA8C0AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v35;
  _OWORD *v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD v54[9];
  _BYTE v55[144];
  _BYTE v56[144];
  _BYTE v57[144];
  uint64_t v58;

  v42[0] = a4;
  v49 = a1;
  v50 = a2;
  v45 = a5;
  v6 = sub_1BB86C67C();
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatFile();
  MEMORY[0x1E0C80A78](v8);
  v48 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CE6A0(0);
  MEMORY[0x1E0C80A78](v10);
  v44 = (uint64_t)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v42 - v13;
  v15 = type metadata accessor for FormatService.CacheFormatFile(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
  v19 = *(_QWORD *)(v58 + 480);
  v58 = a3;
  v42[1] = v19;
  sub_1BB86E7D0();
  v43 = v16;
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v47 = v15;
  if (v20(v14, 1, v15) == 1)
  {
    sub_1BA50AD30(&qword_1ED3B3030, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatFile, (uint64_t)&protocol conformance descriptor for FormatFile);
    v21 = (uint64_t)v48;
    v22 = v51;
    sub_1BB86DC78();
    v23 = v22;
    if (v22)
    {
      swift_release();
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
      v24 = v58;
      v26 = v52;
      v25 = v53;
LABEL_9:
      type metadata accessor for FormatServiceError();
      sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
      swift_allocError();
      v31 = v30;
      sub_1BA8CE760();
      v33 = *(int *)(v32 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v31, v24, v25);
      *(_QWORD *)(v31 + v33) = v23;
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
    v51 = 0;
    sub_1BA5193C4(v21, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v27 = (void *)v42[0];
    *(_QWORD *)&v18[*(int *)(v47 + 20)] = v42[0];
    v28 = v27;
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8CE6A0);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v14, (uint64_t)v18, type metadata accessor for FormatService.CacheFormatFile);
  }
  v24 = v58;
  v26 = v52;
  v25 = v53;
  sub_1BB369DC4();
  if (!swift_dynamicCast()
    || (nullsub_1(v57),
        sub_1BA6A09F0((uint64_t)v57, (uint64_t)v55, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup),
        sub_1BA6A09F0((uint64_t)v55, (uint64_t)v56, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup),
        sub_1BA8CF120((uint64_t)v56) == 1))
  {
    type metadata accessor for FormatServiceError();
    sub_1BA50AD30(&qword_1ED39FD80, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatServiceError, (uint64_t)&protocol conformance descriptor for FormatServiceError);
    v23 = swift_allocError();
    *v29 = 0x724774616D726F46;
    v29[1] = 0xEB0000000070756FLL;
    v29[2] = 1635017028;
    v29[3] = 0xE400000000000000;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatService.CacheFormatFile);
    goto LABEL_9;
  }
  sub_1BA6A09F0((uint64_t)v55, (uint64_t)v54, &qword_1EF2A9890, (uint64_t)&type metadata for FormatGroup);
  v35 = v54[7];
  v36 = v45;
  v37 = v46;
  v45[6] = v54[6];
  v36[7] = v35;
  v36[8] = v54[8];
  v38 = v54[3];
  v36[2] = v54[2];
  v36[3] = v38;
  v39 = v54[5];
  v36[4] = v54[4];
  v36[5] = v39;
  v40 = v54[1];
  *v36 = v54[0];
  v36[1] = v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v37, v24, v25);
  v41 = v44;
  sub_1BA4C2DD8((uint64_t)v18, v44, type metadata accessor for FormatService.CacheFormatFile);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v43 + 56))(v41, 0, 1, v47);
  sub_1BB86E7DC();
  swift_release();
  return sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatService.CacheFormatFile);
}

uint64_t sub_1BA8C0FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v2 + *(int *)(a1 + 20), (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    sub_1BA5193C4((uint64_t)&v7[*(int *)(v11 + 48)], (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    sub_1BA5193C4((uint64_t)&v7[*(int *)(v12 + 48)], (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v13 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v7, v13);
  }
  sub_1BA4C2DD8((uint64_t)&v10[*(int *)(v8 + 28)], a2, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
}

void sub_1BA8C117C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for FormatService.ThemePackage(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1BACAB7E4(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1BA8C11FC(v5);
  *a1 = v3;
}

void sub_1BA8C11FC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  uint64_t *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  char v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v2 = v1;
  v133 = type metadata accessor for FormatService.ThemePackage(0);
  v4 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v6 = (char *)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v139 = (uint64_t)&v123 - v8;
  MEMORY[0x1E0C80A78](v9);
  v136 = (uint64_t *)((char *)&v123 - v10);
  MEMORY[0x1E0C80A78](v11);
  v135 = (uint64_t *)((char *)&v123 - v12);
  v13 = a1[1];
  v14 = sub_1BB8741F4();
  if (v14 >= v13)
  {
    if (v13 < 0)
      goto LABEL_139;
    if (v13)
      sub_1BA8C1BE8(0, v13, 1, a1);
    return;
  }
  if (v13 >= 0)
    v15 = v13;
  else
    v15 = v13 + 1;
  if (v13 < -1)
    goto LABEL_147;
  v125 = v14;
  if (v13 < 2)
  {
    v19 = (char *)MEMORY[0x1E0DEE9D8];
    v131 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v124 = MEMORY[0x1E0DEE9D8];
    if (v13 != 1)
    {
      v22 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_105:
      if (v22 >= 2)
      {
        v117 = *a1;
        do
        {
          v118 = v22 - 2;
          if (v22 < 2)
            goto LABEL_134;
          if (!v117)
            goto LABEL_146;
          v119 = *(_QWORD *)&v19[16 * v118 + 32];
          v120 = *(_QWORD *)&v19[16 * v22 + 24];
          sub_1BA8C1E28(v117 + *(_QWORD *)(v4 + 72) * v119, v117 + *(_QWORD *)(v4 + 72) * *(_QWORD *)&v19[16 * v22 + 16], v117 + *(_QWORD *)(v4 + 72) * v120, v131);
          if (v2)
            break;
          if (v120 < v119)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v19 = sub_1BACAB464((uint64_t)v19);
          if (v118 >= *((_QWORD *)v19 + 2))
            goto LABEL_136;
          v121 = &v19[16 * v118 + 32];
          *(_QWORD *)v121 = v119;
          *((_QWORD *)v121 + 1) = v120;
          v122 = *((_QWORD *)v19 + 2);
          if (v22 > v122)
            goto LABEL_137;
          memmove(&v19[16 * v22 + 16], &v19[16 * v22 + 32], 16 * (v122 - v22));
          *((_QWORD *)v19 + 2) = v122 - 1;
          v22 = v122 - 1;
        }
        while (v122 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v124 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v129 = v6;
  }
  else
  {
    v129 = v6;
    v16 = v15 >> 1;
    v17 = sub_1BB872E74();
    *(_QWORD *)(v17 + 16) = v16;
    v18 = *(unsigned __int8 *)(v4 + 80);
    v124 = v17;
    v131 = v17 + ((v18 + 32) & ~v18);
  }
  v20 = 0;
  v19 = (char *)MEMORY[0x1E0DEE9D8];
  v138 = a1;
  v21 = v13;
  v132 = v4;
  while (1)
  {
    v127 = v19;
    v23 = v20;
    v24 = v20 + 1;
    v130 = v20;
    v140 = v21;
    if (v20 + 1 >= v21)
    {
      v31 = v20 + 1;
      v19 = v127;
    }
    else
    {
      v25 = v21;
      v26 = *a1;
      v27 = *(_QWORD *)(v4 + 72);
      v28 = v135;
      sub_1BA4C2DD8(*a1 + v27 * v24, (uint64_t)v135, type metadata accessor for FormatService.ThemePackage);
      v29 = v136;
      sub_1BA4C2DD8(v26 + v27 * v23, (uint64_t)v136, type metadata accessor for FormatService.ThemePackage);
      v137 = *v28;
      v134 = *v29;
      sub_1BA4A2E80((uint64_t)v29, type metadata accessor for FormatService.ThemePackage);
      sub_1BA4A2E80((uint64_t)v28, type metadata accessor for FormatService.ThemePackage);
      v30 = v26;
      v31 = v23 + 2;
      v128 = v30;
      v141 = v27;
      if (v23 + 2 >= v25)
      {
        v4 = v132;
      }
      else
      {
        v126 = v2;
        v32 = v27 * v24;
        v33 = v30;
        v34 = v27 * v31;
        while (1)
        {
          v35 = v31;
          v36 = v135;
          v37 = v137 < v134;
          sub_1BA4C2DD8(v33 + v34, (uint64_t)v135, type metadata accessor for FormatService.ThemePackage);
          v38 = v136;
          sub_1BA4C2DD8(v33 + v32, (uint64_t)v136, type metadata accessor for FormatService.ThemePackage);
          v39 = *v36 >= *v38;
          sub_1BA4A2E80((uint64_t)v38, type metadata accessor for FormatService.ThemePackage);
          sub_1BA4A2E80((uint64_t)v36, type metadata accessor for FormatService.ThemePackage);
          if (v37 == v39)
            break;
          ++v31;
          v33 += v141;
          if (v140 == v35 + 1)
          {
            v31 = v140;
            v4 = v132;
            a1 = v138;
            goto LABEL_25;
          }
        }
        v4 = v132;
        a1 = v138;
LABEL_25:
        v2 = v126;
        v23 = v130;
      }
      v19 = v127;
      if (v137 < v134)
      {
        if (v31 < v23)
          goto LABEL_140;
        if (v23 < v31)
        {
          v126 = v2;
          v40 = 0;
          v41 = v141;
          v42 = v141 * (v31 - 1);
          v43 = v23;
          v44 = v31 * v141;
          v45 = v43;
          v46 = v43 * v141;
          do
          {
            if (v45 != v31 + v40 - 1)
            {
              v47 = v128;
              if (!v128)
                goto LABEL_145;
              v48 = v128 + v46;
              v49 = v128 + v42;
              sub_1BA5193C4(v128 + v46, (uint64_t)v129, type metadata accessor for FormatService.ThemePackage);
              if (v46 < v42 || v48 >= v47 + v44)
              {
                swift_arrayInitWithTakeFrontToBack();
                v41 = v141;
              }
              else
              {
                v41 = v141;
                if (v46 != v42)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_1BA5193C4((uint64_t)v129, v49, type metadata accessor for FormatService.ThemePackage);
            }
            ++v45;
            --v40;
            v42 -= v41;
            v44 -= v41;
            v46 += v41;
          }
          while (v45 < v31 + v40);
          v2 = v126;
          v19 = v127;
          a1 = v138;
          v4 = v132;
          v23 = v130;
        }
      }
    }
    if (v31 < v140)
    {
      if (__OFSUB__(v31, v23))
        goto LABEL_138;
      if (v31 - v23 < v125)
        break;
    }
LABEL_57:
    if (v31 < v23)
      goto LABEL_133;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v137 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v19 = sub_1BACAA368(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
    v67 = *((_QWORD *)v19 + 2);
    v66 = *((_QWORD *)v19 + 3);
    v22 = v67 + 1;
    if (v67 >= v66 >> 1)
      v19 = sub_1BACAA368((char *)(v66 > 1), v67 + 1, 1, v19);
    *((_QWORD *)v19 + 2) = v22;
    v68 = v19 + 32;
    v69 = &v19[16 * v67 + 32];
    v70 = v137;
    *(_QWORD *)v69 = v130;
    *((_QWORD *)v69 + 1) = v70;
    if (v67)
    {
      while (1)
      {
        v71 = v22 - 1;
        if (v22 >= 4)
        {
          v76 = &v68[16 * v22];
          v77 = *((_QWORD *)v76 - 8);
          v78 = *((_QWORD *)v76 - 7);
          v82 = __OFSUB__(v78, v77);
          v79 = v78 - v77;
          if (v82)
            goto LABEL_122;
          v81 = *((_QWORD *)v76 - 6);
          v80 = *((_QWORD *)v76 - 5);
          v82 = __OFSUB__(v80, v81);
          v74 = v80 - v81;
          v75 = v82;
          if (v82)
            goto LABEL_123;
          v83 = v22 - 2;
          v84 = &v68[16 * v22 - 32];
          v86 = *(_QWORD *)v84;
          v85 = *((_QWORD *)v84 + 1);
          v82 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          if (v82)
            goto LABEL_125;
          v82 = __OFADD__(v74, v87);
          v88 = v74 + v87;
          if (v82)
            goto LABEL_128;
          if (v88 >= v79)
          {
            v106 = &v68[16 * v71];
            v108 = *(_QWORD *)v106;
            v107 = *((_QWORD *)v106 + 1);
            v82 = __OFSUB__(v107, v108);
            v109 = v107 - v108;
            if (v82)
              goto LABEL_132;
            v99 = v74 < v109;
            goto LABEL_94;
          }
        }
        else
        {
          if (v22 != 3)
          {
            v100 = *((_QWORD *)v19 + 4);
            v101 = *((_QWORD *)v19 + 5);
            v82 = __OFSUB__(v101, v100);
            v93 = v101 - v100;
            v94 = v82;
            goto LABEL_88;
          }
          v73 = *((_QWORD *)v19 + 4);
          v72 = *((_QWORD *)v19 + 5);
          v82 = __OFSUB__(v72, v73);
          v74 = v72 - v73;
          v75 = v82;
        }
        if ((v75 & 1) != 0)
          goto LABEL_124;
        v83 = v22 - 2;
        v89 = &v68[16 * v22 - 32];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v92 = __OFSUB__(v90, v91);
        v93 = v90 - v91;
        v94 = v92;
        if (v92)
          goto LABEL_127;
        v95 = &v68[16 * v71];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v82 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v82)
          goto LABEL_130;
        if (__OFADD__(v93, v98))
          goto LABEL_131;
        if (v93 + v98 >= v74)
        {
          v99 = v74 < v98;
LABEL_94:
          if (v99)
            v71 = v83;
          goto LABEL_96;
        }
LABEL_88:
        if ((v94 & 1) != 0)
          goto LABEL_126;
        v102 = &v68[16 * v71];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v82 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v82)
          goto LABEL_129;
        if (v105 < v93)
          goto LABEL_15;
LABEL_96:
        v110 = v71 - 1;
        if (v71 - 1 >= v22)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        v111 = *a1;
        if (!*a1)
          goto LABEL_144;
        v112 = &v68[16 * v110];
        v113 = *(_QWORD *)v112;
        v114 = &v68[16 * v71];
        v115 = *((_QWORD *)v114 + 1);
        sub_1BA8C1E28(v111 + *(_QWORD *)(v132 + 72) * *(_QWORD *)v112, v111 + *(_QWORD *)(v132 + 72) * *(_QWORD *)v114, v111 + *(_QWORD *)(v132 + 72) * v115, v131);
        if (v2)
          goto LABEL_116;
        if (v115 < v113)
          goto LABEL_119;
        if (v71 > *((_QWORD *)v19 + 2))
          goto LABEL_120;
        *(_QWORD *)v112 = v113;
        *(_QWORD *)&v68[16 * v110 + 8] = v115;
        v116 = *((_QWORD *)v19 + 2);
        if (v71 >= v116)
          goto LABEL_121;
        v22 = v116 - 1;
        memmove(&v68[16 * v71], v114 + 16, 16 * (v116 - 1 - v71));
        *((_QWORD *)v19 + 2) = v116 - 1;
        a1 = v138;
        if (v116 <= 2)
          goto LABEL_15;
      }
    }
    v22 = 1;
LABEL_15:
    v21 = a1[1];
    v20 = v137;
    v4 = v132;
    if (v137 >= v21)
      goto LABEL_105;
  }
  if (__OFADD__(v23, v125))
    goto LABEL_141;
  v50 = v140;
  if (v23 + v125 < v140)
    v50 = v23 + v125;
  if (v50 >= v23)
  {
    if (v31 != v50)
    {
      v126 = v2;
      v51 = *(_QWORD *)(v4 + 72);
      v141 = v51 * (v31 - 1);
      v134 = v51;
      v52 = v31 * v51;
      v128 = v50;
      do
      {
        v54 = 0;
        v55 = v130;
        v137 = v31;
        while (1)
        {
          v56 = v138;
          v57 = *v138;
          v58 = v52;
          v59 = v52 + v54 + *v138;
          v60 = v135;
          sub_1BA4C2DD8(v59, (uint64_t)v135, type metadata accessor for FormatService.ThemePackage);
          v61 = v136;
          sub_1BA4C2DD8(v141 + v54 + v57, (uint64_t)v136, type metadata accessor for FormatService.ThemePackage);
          v140 = *v60;
          v62 = *v61;
          sub_1BA4A2E80((uint64_t)v61, type metadata accessor for FormatService.ThemePackage);
          sub_1BA4A2E80((uint64_t)v60, type metadata accessor for FormatService.ThemePackage);
          if (v140 >= v62)
            break;
          v63 = *v56;
          if (!*v56)
            goto LABEL_143;
          v52 = v58;
          v64 = v63 + v141 + v54;
          sub_1BA5193C4(v63 + v58 + v54, v139, type metadata accessor for FormatService.ThemePackage);
          swift_arrayInitWithTakeFrontToBack();
          sub_1BA5193C4(v139, v64, type metadata accessor for FormatService.ThemePackage);
          v54 -= v134;
          ++v55;
          v53 = v137;
          if (v137 == v55)
            goto LABEL_50;
        }
        v53 = v137;
        v52 = v58;
LABEL_50:
        v31 = v53 + 1;
        v141 += v134;
        v52 += v134;
      }
      while (v31 != v128);
      v31 = v128;
      v2 = v126;
      v19 = v127;
      a1 = v138;
      v23 = v130;
    }
    goto LABEL_57;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  sub_1BB873EA0();
  __break(1u);
}

void sub_1BA8C1BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;

  v35 = a1;
  v36 = type metadata accessor for FormatService.ThemePackage(0);
  MEMORY[0x1E0C80A78](v36);
  v42 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v38 = (uint64_t *)((char *)&v33 - v9);
  MEMORY[0x1E0C80A78](v10);
  v37 = (uint64_t *)((char *)&v33 - v12);
  v41 = a3;
  v34 = a2;
  if (a3 != a2)
  {
    v13 = *(_QWORD *)(v11 + 72);
    v14 = v13 * (v41 - 1);
    v39 = v13;
    v15 = v13 * v41;
    v16 = type metadata accessor for FormatService.ThemePackage;
    v44 = a4;
LABEL_5:
    v17 = 0;
    v18 = v35;
    v40 = v15;
    while (1)
    {
      v20 = *v44;
      v21 = v15 + v17 + *v44;
      v22 = v37;
      sub_1BA4C2DD8(v21, (uint64_t)v37, v16);
      v23 = v14 + v17 + v20;
      v24 = v14;
      v25 = v38;
      sub_1BA4C2DD8(v23, (uint64_t)v38, v16);
      v43 = *v22;
      v26 = v16;
      v27 = *v25;
      v28 = (uint64_t)v25;
      v14 = v24;
      sub_1BA4A2E80(v28, v26);
      v29 = (uint64_t)v22;
      v15 = v40;
      sub_1BA4A2E80(v29, v26);
      v30 = v43 < v27;
      v16 = v26;
      if (!v30)
      {
LABEL_4:
        v14 = v24 + v39;
        v15 += v39;
        if (++v41 == v34)
          return;
        goto LABEL_5;
      }
      v31 = *v44;
      if (!*v44)
        break;
      v32 = v31 + v24 + v17;
      sub_1BA5193C4(v31 + v15 + v17, v42, v26);
      swift_arrayInitWithTakeFrontToBack();
      v19 = v32;
      v16 = v26;
      sub_1BA5193C4(v42, v19, v26);
      v17 -= v39;
      if (v41 == ++v18)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BA8C1E28(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v27;
  unint64_t v29;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t result;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;

  v48 = type metadata accessor for FormatService.ThemePackage(0);
  MEMORY[0x1E0C80A78](v48);
  v50 = (uint64_t *)((char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v45 - v10);
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_70;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_71;
  v15 = (uint64_t)(a2 - a1) / v13;
  v53 = a1;
  v52 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v29 = a4 + v18;
      v51 = a4 + v18;
      v53 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v31 = -v13;
        v46 = a1;
        v47 = a4;
        do
        {
          v49 = a3 + v31;
          sub_1BA4C2DD8(v29 + v31, (uint64_t)v11, type metadata accessor for FormatService.ThemePackage);
          v32 = a2 + v31;
          v33 = a3;
          v34 = v11;
          v35 = v50;
          sub_1BA4C2DD8(a2 + v31, (uint64_t)v50, type metadata accessor for FormatService.ThemePackage);
          v36 = *v34;
          v37 = *v35;
          v38 = (uint64_t)v35;
          v11 = v34;
          sub_1BA4A2E80(v38, type metadata accessor for FormatService.ThemePackage);
          sub_1BA4A2E80((uint64_t)v34, type metadata accessor for FormatService.ThemePackage);
          if (v36 >= v37)
          {
            v42 = v51;
            v51 += v31;
            a3 = v49;
            if (v33 < v42 || v49 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v33 != v42)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v32 = a2;
            v41 = v46;
            v40 = v47;
          }
          else
          {
            a3 = v49;
            if (v33 < a2 || v49 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v41 = v46;
              v40 = v47;
            }
            else
            {
              v39 = v33 == a2;
              v41 = v46;
              v40 = v47;
              if (!v39)
                swift_arrayInitWithTakeBackToFront();
            }
            v53 += v31;
          }
          v29 = v51;
          if (v51 <= v40)
            break;
          a2 = v32;
        }
        while (v32 > v41);
      }
      goto LABEL_68;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v49 = a4 + v17;
    v51 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_1BA4C2DD8(a2, (uint64_t)v11, type metadata accessor for FormatService.ThemePackage);
        v20 = a4;
        v21 = v50;
        sub_1BA4C2DD8(v20, (uint64_t)v50, type metadata accessor for FormatService.ThemePackage);
        v22 = *v11;
        v23 = *v21;
        sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FormatService.ThemePackage);
        sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatService.ThemePackage);
        v24 = v53;
        if (v22 >= v23)
        {
          v27 = v52 + v13;
          if (v53 < v52 || v53 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v53 != v52)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v52 = v27;
          v25 = a2;
        }
        else
        {
          v25 = a2 + v13;
          if (v53 < a2 || v53 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v53 == a2)
          {
            v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v53 = v24 + v13;
        a4 = v52;
        if (v52 >= v49)
          break;
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_68:
    sub_1BACAA714(&v53, &v52, (uint64_t *)&v51);
    return 1;
  }
LABEL_72:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA8C22B4@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = objc_msgSend(a2, sel_remoteURL, v8);
  sub_1BB86C5EC();

  sub_1BA8BE540(v12, v11, (uint64_t)v10, (uint64_t)a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1BA8C23A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a5;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v22 - v10);
  v13 = *a1;
  v12 = a1[1];
  v15 = a1[2];
  v14 = a1[3];
  v17 = a1[4];
  v16 = a1[5];
  v18 = a1[6];
  sub_1BA4C2DD8(v23, (uint64_t)&v22 + *(int *)(v19 + 36) - v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *v11 = v13;
  v11[1] = v12;
  v11[2] = v15;
  v11[3] = v14;
  v11[4] = v17;
  v11[5] = v16;
  v11[6] = v18;
  sub_1BA8CAF1C((uint64_t)v11, (uint64_t)v8, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BA8CE1AC();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_1BB86E9E0();
  sub_1BA8CE65C((uint64_t)v11, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
  return v20;
}

uint64_t sub_1BA8C2530@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = objc_msgSend(a2, sel_remoteURL, v8);
  sub_1BB86C5EC();

  sub_1BA8BEA28(v12, v11, (uint64_t)v10, (uint64_t)a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1BA8C261C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;

  v37 = a5;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v6);
  v36 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  v11 = *a1;
  v38 = a1[1];
  v12 = v38;
  v13 = a1[3];
  v33 = a1[2];
  v34 = v11;
  v14 = a1[4];
  v15 = a1[5];
  v40 = v13;
  v41 = v15;
  v17 = a1[6];
  v35 = a1[7];
  v16 = v35;
  v31 = a1[8];
  v32 = v14;
  v30 = *((unsigned __int8 *)a1 + 72);
  v18 = a1[11];
  v28 = a1[10];
  v29 = v18;
  v19 = *((unsigned __int8 *)a1 + 106);
  v20 = *((unsigned __int16 *)a1 + 52);
  v42 = v20 | (v19 << 16);
  v22 = (char *)&v27 + *(int *)(v21 + 36) - v9;
  v23 = a1[12];
  v39 = v23;
  sub_1BA4C2DD8(v37, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *(_QWORD *)v10 = v34;
  *((_QWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 2) = v33;
  *((_QWORD *)v10 + 3) = v13;
  *((_QWORD *)v10 + 4) = v32;
  *((_QWORD *)v10 + 5) = v15;
  *((_QWORD *)v10 + 6) = v17;
  *((_QWORD *)v10 + 7) = v16;
  *((_QWORD *)v10 + 8) = v31;
  v10[72] = v30;
  v24 = v29;
  *((_QWORD *)v10 + 10) = v28;
  *((_QWORD *)v10 + 11) = v24;
  *((_QWORD *)v10 + 12) = v23;
  v10[106] = v19;
  *((_WORD *)v10 + 52) = v20;
  sub_1BA8CAF1C((uint64_t)v10, v36, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BA8CE11C();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA771834(v39, v42);
  v25 = sub_1BB86E9E0();
  sub_1BA8CE65C((uint64_t)v10, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
  return v25;
}

uint64_t sub_1BA8C2850@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = objc_msgSend(a2, sel_remoteURL, v8);
  sub_1BB86C5EC();

  sub_1BA8BEE88(v12, v11, (uint64_t)v10, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1BA8C293C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a5;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v6);
  v30 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - v9;
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[3];
  v25 = a1[2];
  v26 = v11;
  v27 = v13;
  v28 = v12;
  v14 = a1[4];
  v15 = a1[5];
  v16 = a1[6];
  v17 = a1[7];
  v18 = a1[9];
  v29 = a1[8];
  v19 = v29;
  v24 = v18;
  LOBYTE(a1) = *((_BYTE *)a1 + 80);
  sub_1BA4C2DD8(v31, (uint64_t)&v24 + *(int *)(v20 + 36) - v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *(_QWORD *)v10 = v26;
  *((_QWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 2) = v25;
  *((_QWORD *)v10 + 3) = v13;
  *((_QWORD *)v10 + 4) = v14;
  *((_QWORD *)v10 + 5) = v15;
  *((_QWORD *)v10 + 6) = v16;
  *((_QWORD *)v10 + 7) = v17;
  *((_QWORD *)v10 + 8) = v19;
  v21 = v24;
  *((_QWORD *)v10 + 9) = v24;
  v10[80] = (char)a1;
  sub_1BA8CAF1C((uint64_t)v10, v30, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BA8CE08C();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA709DE8(v14, v15, v16, v17, v29, v21, a1);
  v22 = sub_1BB86E9E0();
  sub_1BA8CE65C((uint64_t)v10, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
  return v22;
}

uint64_t sub_1BA8C2B10@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = objc_msgSend(a2, sel_remoteURL, v8);
  sub_1BB86C5EC();

  sub_1BA8BF388(v12, v11, (uint64_t)v10, (uint64_t)a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1BA8C2BFC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a5;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v6);
  v31 = (uint64_t)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - v9;
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[3];
  v29 = a1[2];
  v30 = v11;
  v33 = v13;
  v34 = v12;
  v14 = a1[5];
  v28 = a1[4];
  v16 = a1[6];
  v15 = a1[7];
  v35 = v14;
  v36 = v16;
  v17 = a1[9];
  v25 = a1[8];
  v26 = v15;
  v27 = *((unsigned __int8 *)a1 + 80);
  v18 = a1[11];
  v19 = a1[12];
  LOBYTE(a1) = *((_BYTE *)a1 + 104);
  sub_1BA4C2DD8(v32, (uint64_t)&v25 + *(int *)(v20 + 36) - v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *(_QWORD *)v10 = v30;
  *((_QWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 2) = v29;
  *((_QWORD *)v10 + 3) = v13;
  *((_QWORD *)v10 + 4) = v28;
  *((_QWORD *)v10 + 5) = v14;
  v21 = v25;
  v22 = v26;
  *((_QWORD *)v10 + 6) = v16;
  *((_QWORD *)v10 + 7) = v22;
  *((_QWORD *)v10 + 8) = v21;
  *((_QWORD *)v10 + 9) = v17;
  v10[80] = v27;
  *((_QWORD *)v10 + 11) = v18;
  *((_QWORD *)v10 + 12) = v19;
  v10[104] = (char)a1;
  sub_1BA8CAF1C((uint64_t)v10, v31, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BA8CDFFC();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_1BB86E9E0();
  sub_1BA8CE65C((uint64_t)v10, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
  return v23;
}

uint64_t sub_1BA8C2E0C@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = objc_msgSend(a2, sel_remoteURL, v8);
  sub_1BB86C5EC();

  sub_1BA8BF814(v12, v11, (uint64_t)v10, (uint64_t)a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1BA8C2EF8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a5;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v6);
  v24 = (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v22 - v9);
  v11 = a1[1];
  v23 = *a1;
  v13 = a1[2];
  v26 = a1[3];
  v12 = v26;
  v27 = v11;
  v15 = a1[4];
  v14 = a1[5];
  v16 = a1[6];
  v17 = a1[7];
  v18 = a1[8];
  sub_1BA4C2DD8(v25, (uint64_t)&v22 + *(int *)(v19 + 36) - v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *v10 = v23;
  v10[1] = v11;
  v10[2] = v13;
  v10[3] = v12;
  v10[4] = v15;
  v10[5] = v14;
  v10[6] = v16;
  v10[7] = v17;
  v10[8] = v18;
  sub_1BA8CAF1C((uint64_t)v10, v24, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BA8CDF6C();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_1BB86E9E0();
  sub_1BA8CE65C((uint64_t)v10, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
  return v20;
}

uint64_t sub_1BA8C30B8@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = objc_msgSend(a2, sel_remoteURL, v8);
  sub_1BB86C5EC();

  sub_1BA8BFCF0(v12, v11, (uint64_t)v10, (uint64_t)a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1BA8C31A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_1BA709CA4(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v17 - v11);
  v13 = *a1;
  sub_1BA4C2DD8(a5, (uint64_t)&v17 + *(int *)(v14 + 36) - v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *v12 = v13;
  sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA709CA4);
  sub_1BA8CDF34(0);
  swift_allocObject();
  swift_retain();
  v15 = sub_1BB86E9E0();
  sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA709CA4);
  return v15;
}

uint64_t sub_1BA8C32A4@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  v18 = a3;
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = objc_msgSend(a2, sel_remoteURL, v8);
  sub_1BB86C5EC();

  v14 = sub_1BA8C016C(v12, v11, (uint64_t)v10, (uint64_t)a2);
  if (v3)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v16 = v14;
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  *v18 = v16;
  return result;
}

uint64_t sub_1BA8C33B0(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[2];

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (__int128 *)((char *)&v22 - v11);
  v13 = a1[5];
  v26 = a1[4];
  v27 = v13;
  v28[0] = a1[6];
  *(_OWORD *)((char *)v28 + 9) = *(__int128 *)((char *)a1 + 105);
  v14 = a1[3];
  v24 = a1[2];
  v25 = v14;
  v15 = a1[1];
  v22 = *a1;
  v23 = v15;
  sub_1BA4C2DD8(a5, (uint64_t)&v22 + *(int *)(v16 + 36) - v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v17 = v27;
  v12[4] = v26;
  v12[5] = v17;
  v12[6] = v28[0];
  *(_OWORD *)((char *)v12 + 105) = *(_OWORD *)((char *)v28 + 9);
  v18 = v23;
  *v12 = v22;
  v12[1] = v18;
  v19 = v25;
  v12[2] = v24;
  v12[3] = v19;
  sub_1BA8CAF1C((uint64_t)v12, (uint64_t)v9, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BA8CDEA4();
  swift_allocObject();
  sub_1BA8CED9C((uint64_t)&v22);
  v20 = sub_1BB86E9E0();
  sub_1BA8CE65C((uint64_t)v12, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
  return v20;
}

uint64_t sub_1BA8C354C@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = objc_msgSend(a2, sel_remoteURL, v8);
  sub_1BB86C5EC();

  sub_1BA8C05C0(v12, v11, (uint64_t)v10, (uint64_t)a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1BA8C3638(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (__int128 *)((char *)&v24 - v11);
  v13 = a1[7];
  v30 = a1[6];
  v31 = v13;
  v32 = a1[8];
  v14 = a1[3];
  v26 = a1[2];
  v27 = v14;
  v15 = a1[5];
  v28 = a1[4];
  v29 = v15;
  v16 = a1[1];
  v24 = *a1;
  v25 = v16;
  sub_1BA4C2DD8(a5, (uint64_t)&v24 + *(int *)(v17 + 36) - v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v18 = v31;
  v12[6] = v30;
  v12[7] = v18;
  v12[8] = v32;
  v19 = v27;
  v12[2] = v26;
  v12[3] = v19;
  v20 = v29;
  v12[4] = v28;
  v12[5] = v20;
  v21 = v25;
  *v12 = v24;
  v12[1] = v21;
  sub_1BA8CAF1C((uint64_t)v12, (uint64_t)v9, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  sub_1BA8CDE14();
  swift_allocObject();
  sub_1BA8C88FC((uint64_t)&v24);
  v22 = sub_1BB86E9E0();
  sub_1BA8CE65C((uint64_t)v12, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
  return v22;
}

uint64_t sub_1BA8C37D4@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = objc_msgSend(a2, sel_remoteURL, v8);
  sub_1BB86C5EC();

  sub_1BA8C0AC8(v12, v11, (uint64_t)v10, (uint64_t)a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void *sub_1BA8C38C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v4 = v3;
  v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    v8 = sub_1BB873F30();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      v22 = v4;
      v23 = v7;
      v24 = v7 & 0xC000000000000001;
      v4 = 4;
      do
      {
        v9 = v4 - 4;
        if (v24)
        {
          v10 = (void *)MEMORY[0x1BCCE4630](v4 - 4, v7);
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
            goto LABEL_19;
        }
        else
        {
          v10 = (void *)swift_unknownObjectRetain();
          v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        v12 = v8;
        v13 = v10;
        v14 = a3;
        v15 = objc_msgSend(v10, sel_identifier, v22);
        v16 = sub_1BB8729A0();
        v18 = v17;

        a3 = v14;
        v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        v20 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_18;
        swift_unknownObjectRelease();
        ++v4;
        v8 = v12;
        v19 = v11 == v12;
        v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1BA8C3A68(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  void *v13;
  void *v14;

  v6 = a1;
  v14 = a1;
  if (a2 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      for (i = 4; ; ++i)
      {
        v9 = i - 4;
        if ((a2 & 0xC000000000000001) != 0)
        {
          v6 = (void *)MEMORY[0x1BCCE4630](i - 4, a2);
          v10 = __OFADD__(v9, 1);
          v11 = i - 3;
          if (v10)
            goto LABEL_13;
        }
        else
        {
          v6 = *(void **)(a2 + 8 * i);
          swift_unknownObjectRetain();
          v10 = __OFADD__(v9, 1);
          v11 = i - 3;
          if (v10)
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        v13 = v6;
        sub_1BA8B33F8(&v14, &v13, a3);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          return v6;
        }
        swift_unknownObjectRelease();
        if (v11 == v7)
        {
          swift_bridgeObjectRelease();
          return v14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BA8C3BAC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      for (i = 4; ; ++i)
      {
        v8 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v9 = MEMORY[0x1BCCE4630](i - 4, a1);
          v10 = i - 3;
          if (__OFADD__(v8, 1))
            goto LABEL_17;
        }
        else
        {
          v9 = *(_QWORD *)(a1 + 8 * i);
          swift_retain();
          v10 = i - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        v17 = v9;
        sub_1BA8B19B8(&v17, a2, a3, a4, &v16);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        v11 = swift_release();
        if (v16)
        {
          MEMORY[0x1BCCE36AC](v11);
          if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
        if (v10 == v6)
        {
          swift_bridgeObjectRelease();
          return v18;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA8C3D60(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;

  v3 = v2;
  v5 = a1;
  v29 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    v6 = sub_1BB873F30();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v23 = v3;
      v24 = a2;
      v7 = v5 & 0xC000000000000001;
      v8 = 4;
      v25 = v5;
      v26 = v5 & 0xC000000000000001;
      v27 = v6;
      while (1)
      {
        v3 = v8 - 4;
        if (v7)
        {
          v9 = (_QWORD *)MEMORY[0x1BCCE4630](v8 - 4, v5);
          v10 = v8 - 3;
          if (__OFADD__(v3, 1))
            goto LABEL_26;
        }
        else
        {
          v9 = *(_QWORD **)(v5 + 8 * v8);
          swift_retain();
          v10 = v8 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        if (*(_QWORD *)(a2 + 16))
        {
          v12 = v9[2];
          v11 = v9[3];
          swift_bridgeObjectRetain();
          v13 = sub_1BA6E35A8(v12, v11);
          if ((v14 & 1) != 0)
          {
            v15 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v13);
            swift_bridgeObjectRelease();
            v16 = v9[7];
            if (v9[5])
            {
              v28 = objc_allocWithZone(MEMORY[0x1E0D58C38]);
              swift_bridgeObjectRetain_n();
              v17 = v15;
              swift_bridgeObjectRetain_n();
              v18 = (void *)sub_1BB872970();
              swift_bridgeObjectRelease();
              if (!v16)
              {
                v19 = 0;
                goto LABEL_20;
              }
LABEL_19:
              v19 = (void *)sub_1BB872970();
              swift_bridgeObjectRelease();
LABEL_20:
              v21 = objc_msgSend(v28, sel_initWithTitle_issueDescription_, v18, v19, v23);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58C20]), sel_initWithIssue_overrides_, v15, v21);
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              a2 = v24;
              v5 = v25;
            }
            else
            {
              if (v16)
              {
                v28 = objc_allocWithZone(MEMORY[0x1E0D58C38]);
                swift_bridgeObjectRetain_n();
                v20 = v15;
                v18 = 0;
                goto LABEL_19;
              }
              swift_release();
            }
            MEMORY[0x1BCCE36AC]();
            v7 = v26;
            if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
            v6 = v27;
            goto LABEL_5;
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
LABEL_5:
        ++v8;
        if (v10 == v6)
        {
          swift_bridgeObjectRelease();
          return v29;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BA8C406C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = type metadata accessor for FormatContentSubgroup();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v21 = (uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - v9;
  v11 = MEMORY[0x1E0DEE9D8];
  v22 = MEMORY[0x1E0DEE9D8];
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v12 = 0;
    v18 = a2;
    v19 = a1;
    while (v12 < *(_QWORD *)(a1 + 16))
    {
      v13 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v14 = *(_QWORD *)(v6 + 72);
      sub_1BA4C2DD8(a1 + v13 + v14 * v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
      v15 = sub_1BA8A5DF4((uint64_t)v10, a2);
      if (v2)
      {
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v15)
      {
        sub_1BA5193C4((uint64_t)v10, v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BAC79FF0(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v22;
        v17 = *(_QWORD *)(v22 + 16);
        v16 = *(_QWORD *)(v22 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1BAC79FF0(v16 > 1, v17 + 1, 1);
          v11 = v22;
        }
        *(_QWORD *)(v11 + 16) = v17 + 1;
        sub_1BA5193C4(v21, v11 + v13 + v17 * v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
        a2 = v18;
        a1 = v19;
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
      }
      if (v20 == ++v12)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA8C426C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = (int *)type metadata accessor for FormatServiceOptions();
  v3 = *((_QWORD *)v2 - 1);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = type metadata accessor for FormatContent(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v4 + v5 + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = type metadata accessor for FormatContentPool();
  v12 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
  v33 = v11;
  swift_release();
  v34 = v1;
  v13 = v1 + v4;
  if (*(_QWORD *)(v13 + 24))
    __swift_destroy_boxed_opaque_existential_1(v13);
  v14 = v9 & ~v8;
  v15 = v10 + v12;
  v16 = v13 + v2[10];
  if (*(_QWORD *)v16)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v16 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v16 + 80);
  }
  v17 = v14 + v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v16 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v19 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
  {
    v20 = v18 + *(int *)(v19 + 24);
    v21 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
    {
      swift_bridgeObjectRelease();
      v32 = v20 + *(int *)(v21 + 24);
      v22 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v32, v22);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v18 + *(int *)(v19 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  v23 = v34 + v14;
  swift_bridgeObjectRelease();
  v24 = v23 + *(int *)(v6 + 20);
  v25 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v23 + *(int *)(v6 + 40);
  v27 = sub_1BB871E24();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (!v29(v26, 1, v27))
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v34 + (v17 & ~v12) + *(int *)(v33 + 100);
  if (!v29(v30, 1, v27))
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v27);
  return swift_deallocObject();
}

uint64_t sub_1BA8C46A4(uint64_t a1)
{
  return sub_1BA8CDD5C(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions, type metadata accessor for FormatContent, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentPool, (uint64_t (*)(uint64_t, _QWORD, unint64_t, unint64_t, unint64_t))sub_1BA8A6C08);
}

uint64_t sub_1BA8C46D8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for FormatContent.Resolved();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + v1[5];
  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v5 = v2 + v1[14];
  v6 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v7 = v5 + v6[5];
    swift_bridgeObjectRelease();
    v8 = type metadata accessor for FormatWebEmbed();
    v9 = v7 + *(int *)(v8 + 20);
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    v24 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v24(v9, v10);
    v12 = v7 + *(int *)(v8 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10))
      v24(v12, v10);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v13 = v5 + v6[8];
    v14 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v15 = type metadata accessor for GenericDataVisualization();
        v24(v13 + *(int *)(v15 + 20), v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v16 = v5 + v6[9];
    sub_1BA6C5A68();
    v18 = v17;
    v19 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  }

  swift_bridgeObjectRelease();
  v20 = v2 + v1[18];
  v21 = sub_1BB871E24();
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  return swift_deallocObject();
}

uint64_t sub_1BA8C4A14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8C4A38(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t dispatch thunk of FormatServiceType.resolveResult(content:pool:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for FormatService()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA8C4A8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for FormatFile();
    v5 = (char *)&loc_1BA8C4AF8 + 4 * word_1BB87FCAA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void sub_1BA8C582C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for FormatContent(0);
      v5 = a1 + *(int *)(v4 + 20);
      v6 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = a1 + *(int *)(v4 + 40);
      v8 = sub_1BB871E24();
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      goto LABEL_31;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(a1 + 106) != 255)
      {
        v10 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
        sub_1BA77A170(*(_QWORD *)(a1 + 96), v10, SBYTE2(v10), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 72) >= 3uLL)
        swift_bridgeObjectRelease();
      goto LABEL_31;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 168) >= 3uLL)
        swift_bridgeObjectRelease();
      v11 = (int *)type metadata accessor for FormatPackage();
      v12 = a1 + v11[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for FormatCompilerOptions(0);
      v14 = v12 + *(int *)(v13 + 24);
      if (*(_QWORD *)(v14 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v15 = v14 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v16 = sub_1BB86E710();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (!v18(v15, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      v19 = v12 + *(int *)(v13 + 28);
      if (!v18(v19, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v16);
      swift_bridgeObjectRelease();
      v20 = a1 + v11[24];
      v21 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
      v22 = a1 + v11[25];
      if (!v18(v22, 1, v16))
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
      break;
    case 6u:
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 7u:
      swift_release();
      break;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C0C20(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = a1 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      v24 = type metadata accessor for FormatContent(0);
      v25 = v23 + *(int *)(v24 + 20);
      v26 = sub_1BB86C8B0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = v23 + *(int *)(v24 + 40);
      v28 = sub_1BB871E24();
      v29 = *(_QWORD *)(v28 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_32:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

}

void sub_1BA8C5EC0()
{
  char *v0;

  type metadata accessor for FormatFile();
  v0 = (char *)sub_1BA8C5F20 + 4 * word_1BB87FCDA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BA8C5F20(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__dst, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  char *v67;
  char *v68;
  uint64_t v69;

  v69 = v34;
  v35 = v33[1];
  *v32 = *v33;
  v32[1] = v35;
  v36 = (int *)type metadata accessor for FormatContent(0);
  v37 = v36[5];
  v38 = (char *)v32 + v37;
  v39 = (char *)v33 + v37;
  v40 = sub_1BB86C8B0();
  v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
  swift_bridgeObjectRetain();
  v41(v38, v39, v40);
  v42 = v36[6];
  v43 = (_QWORD *)((char *)v32 + v42);
  v44 = (_QWORD *)((char *)v33 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = v36[7];
  v47 = (_QWORD *)((char *)v32 + v46);
  v48 = (_QWORD *)((char *)v33 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v50 = v36[8];
  v51 = (_QWORD *)((char *)v32 + v50);
  v52 = (_QWORD *)((char *)v33 + v50);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  v54 = v36[9];
  v55 = (_QWORD *)((char *)v32 + v54);
  v56 = (_QWORD *)((char *)v33 + v54);
  v57 = v56[1];
  *v55 = *v56;
  v55[1] = v57;
  v58 = v36[10];
  v67 = (char *)v33 + v58;
  v68 = (char *)v32 + v58;
  v59 = sub_1BB871E24();
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v61(v67, 1, v59))
  {
    sub_1BA6D940C(0);
    memcpy(v68, v67, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v68, v67, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v68, 0, 1, v59);
  }
  *(_QWORD *)((char *)v32 + v36[11]) = *(_QWORD *)((char *)v33 + v36[11]);
  *(_QWORD *)((char *)v32 + v36[12]) = *(_QWORD *)((char *)v33 + v36[12]);
  *(_QWORD *)((char *)v32 + v36[13]) = *(_QWORD *)((char *)v33 + v36[13]);
  *(_QWORD *)((char *)v32 + v36[14]) = *(_QWORD *)((char *)v33 + v36[14]);
  *(_QWORD *)((char *)v32 + v36[15]) = *(_QWORD *)((char *)v33 + v36[15]);
  *(_QWORD *)((char *)v32 + v36[16]) = *(_QWORD *)((char *)v33 + v36[16]);
  *(_QWORD *)((char *)v32 + v36[17]) = *(_QWORD *)((char *)v33 + v36[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v63 = *(int *)(v69 + 20);
  v64 = *(void **)((char *)v33 + v63);
  *(_QWORD *)((char *)v32 + v63) = v64;
  v65 = v64;
  return v32;
}

uint64_t sub_1BA8C6C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    type metadata accessor for FormatFile();
    v4 = (char *)&loc_1BA8C6C88 + 4 * word_1BB87FCF2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v5 = *(int *)(a3 + 20);
  v6 = *(void **)(a2 + v5);
  v7 = *(void **)(a1 + v5);
  *(_QWORD *)(a1 + v5) = v6;
  v8 = v6;

  return a1;
}

_OWORD *sub_1BA8C7B74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  int *v63;
  uint64_t v64;

  v6 = type metadata accessor for FormatFile();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 11:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      a1[2] = a2[2];
      v20 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
      v23 = (int *)type metadata accessor for FormatContent(0);
      v24 = v23[5];
      v25 = &v21[v24];
      v26 = &v22[v24];
      v27 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      *(_OWORD *)&v21[v23[6]] = *(_OWORD *)&v22[v23[6]];
      *(_OWORD *)&v21[v23[7]] = *(_OWORD *)&v22[v23[7]];
      *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
      *(_OWORD *)&v21[v23[9]] = *(_OWORD *)&v22[v23[9]];
      v28 = v23[10];
      v29 = &v21[v28];
      v30 = &v22[v28];
      v31 = sub_1BB871E24();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        sub_1BA6D940C(0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      *(_QWORD *)&v21[v23[11]] = *(_QWORD *)&v22[v23[11]];
      *(_QWORD *)&v21[v23[12]] = *(_QWORD *)&v22[v23[12]];
      *(_QWORD *)&v21[v23[13]] = *(_QWORD *)&v22[v23[13]];
      *(_QWORD *)&v21[v23[14]] = *(_QWORD *)&v22[v23[14]];
      *(_QWORD *)&v21[v23[15]] = *(_QWORD *)&v22[v23[15]];
      *(_QWORD *)&v21[v23[16]] = *(_QWORD *)&v22[v23[16]];
      *(_QWORD *)&v21[v23[17]] = *(_QWORD *)&v22[v23[17]];
      goto LABEL_23;
    case 5:
      v64 = a3;
      v34 = a2[1];
      *a1 = *a2;
      a1[1] = v34;
      a1[2] = a2[2];
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
      *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
      *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
      a1[10] = a2[10];
      v63 = (int *)type metadata accessor for FormatPackage();
      v35 = v63[23];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      *(_OWORD *)((char *)a1 + v35) = *(_OWORD *)((char *)a2 + v35);
      v38 = (int *)type metadata accessor for FormatCompilerOptions(0);
      v39 = v38[6];
      v40 = &v36[v39];
      v41 = &v37[v39];
      v42 = *(_OWORD *)&v37[v39 + 16];
      *(_OWORD *)v40 = *(_OWORD *)&v37[v39];
      *((_OWORD *)v40 + 1) = v42;
      *((_OWORD *)v40 + 2) = *(_OWORD *)&v37[v39 + 32];
      v43 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v44 = &v40[v43];
      v45 = &v41[v43];
      v46 = sub_1BB86E710();
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
      if (v48(v45, 1, v46))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      v50 = v38[7];
      v51 = &v36[v50];
      v52 = &v37[v50];
      if (v48(&v37[v50], 1, v46))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v51, v52, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v51, 0, 1, v46);
      }
      *(_QWORD *)&v36[v38[8]] = *(_QWORD *)&v37[v38[8]];
      v54 = v63[24];
      v55 = (char *)a1 + v54;
      v56 = (char *)a2 + v54;
      v57 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
      v58 = v63[25];
      v59 = (char *)a1 + v58;
      v60 = (char *)a2 + v58;
      if (v48((char *)a2 + v58, 1, v46))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v59, v60, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v59, 0, 1, v46);
      }
      a3 = v64;
      goto LABEL_23;
    case 0:
      *a1 = *a2;
      v8 = (int *)type metadata accessor for FormatContent(0);
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      *(_OWORD *)((char *)a1 + v8[6]) = *(_OWORD *)((char *)a2 + v8[6]);
      *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
      *(_OWORD *)((char *)a1 + v8[8]) = *(_OWORD *)((char *)a2 + v8[8]);
      *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
      v13 = v8[10];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1BB871E24();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_1BA6D940C(0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      *(_QWORD *)((char *)a1 + v8[11]) = *(_QWORD *)((char *)a2 + v8[11]);
      *(_QWORD *)((char *)a1 + v8[12]) = *(_QWORD *)((char *)a2 + v8[12]);
      *(_QWORD *)((char *)a1 + v8[13]) = *(_QWORD *)((char *)a2 + v8[13]);
      *(_QWORD *)((char *)a1 + v8[14]) = *(_QWORD *)((char *)a2 + v8[14]);
      *(_QWORD *)((char *)a1 + v8[15]) = *(_QWORD *)((char *)a2 + v8[15]);
      *(_QWORD *)((char *)a1 + v8[16]) = *(_QWORD *)((char *)a2 + v8[16]);
      *(_QWORD *)((char *)a1 + v8[17]) = *(_QWORD *)((char *)a2 + v8[17]);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_24:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *sub_1BA8C817C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  int *v65;
  uint64_t v66;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
    v6 = type metadata accessor for FormatFile();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 11:
        v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        a1[2] = a2[2];
        v20 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
        v23 = (int *)type metadata accessor for FormatContent(0);
        v24 = v23[5];
        v25 = &v21[v24];
        v26 = &v22[v24];
        v27 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        *(_OWORD *)&v21[v23[6]] = *(_OWORD *)&v22[v23[6]];
        *(_OWORD *)&v21[v23[7]] = *(_OWORD *)&v22[v23[7]];
        *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
        *(_OWORD *)&v21[v23[9]] = *(_OWORD *)&v22[v23[9]];
        v28 = v23[10];
        v29 = &v21[v28];
        v30 = &v22[v28];
        v31 = sub_1BB871E24();
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          sub_1BA6D940C(0);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        *(_QWORD *)&v21[v23[11]] = *(_QWORD *)&v22[v23[11]];
        *(_QWORD *)&v21[v23[12]] = *(_QWORD *)&v22[v23[12]];
        *(_QWORD *)&v21[v23[13]] = *(_QWORD *)&v22[v23[13]];
        *(_QWORD *)&v21[v23[14]] = *(_QWORD *)&v22[v23[14]];
        *(_QWORD *)&v21[v23[15]] = *(_QWORD *)&v22[v23[15]];
        *(_QWORD *)&v21[v23[16]] = *(_QWORD *)&v22[v23[16]];
        *(_QWORD *)&v21[v23[17]] = *(_QWORD *)&v22[v23[17]];
        goto LABEL_24;
      case 5:
        v66 = a3;
        v34 = a2[1];
        *a1 = *a2;
        a1[1] = v34;
        a1[2] = a2[2];
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
        *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        a1[10] = a2[10];
        v65 = (int *)type metadata accessor for FormatPackage();
        v35 = v65[23];
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        *(_OWORD *)((char *)a1 + v35) = *(_OWORD *)((char *)a2 + v35);
        v38 = (int *)type metadata accessor for FormatCompilerOptions(0);
        v39 = v38[6];
        v40 = &v36[v39];
        v41 = &v37[v39];
        v42 = *(_OWORD *)&v37[v39 + 16];
        *(_OWORD *)v40 = *(_OWORD *)&v37[v39];
        *((_OWORD *)v40 + 1) = v42;
        *((_OWORD *)v40 + 2) = *(_OWORD *)&v37[v39 + 32];
        v43 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v44 = &v40[v43];
        v45 = &v41[v43];
        v46 = sub_1BB86E710();
        v47 = *(_QWORD *)(v46 - 8);
        v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
        if (v48(v45, 1, v46))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        v50 = v38[7];
        v51 = &v36[v50];
        v52 = &v37[v50];
        if (v48(&v37[v50], 1, v46))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v51, v52, v46);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v51, 0, 1, v46);
        }
        *(_QWORD *)&v36[v38[8]] = *(_QWORD *)&v37[v38[8]];
        v54 = v65[24];
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
        v58 = v65[25];
        v59 = (char *)a1 + v58;
        v60 = (char *)a2 + v58;
        if (v48((char *)a2 + v58, 1, v46))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v59, v60, v46);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v59, 0, 1, v46);
        }
        a3 = v66;
        goto LABEL_24;
      case 0:
        *a1 = *a2;
        v8 = (int *)type metadata accessor for FormatContent(0);
        v9 = v8[5];
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        *(_OWORD *)((char *)a1 + v8[6]) = *(_OWORD *)((char *)a2 + v8[6]);
        *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
        *(_OWORD *)((char *)a1 + v8[8]) = *(_OWORD *)((char *)a2 + v8[8]);
        *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
        v13 = v8[10];
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = sub_1BB871E24();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        {
          sub_1BA6D940C(0);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
        }
        *(_QWORD *)((char *)a1 + v8[11]) = *(_QWORD *)((char *)a2 + v8[11]);
        *(_QWORD *)((char *)a1 + v8[12]) = *(_QWORD *)((char *)a2 + v8[12]);
        *(_QWORD *)((char *)a1 + v8[13]) = *(_QWORD *)((char *)a2 + v8[13]);
        *(_QWORD *)((char *)a1 + v8[14]) = *(_QWORD *)((char *)a2 + v8[14]);
        *(_QWORD *)((char *)a1 + v8[15]) = *(_QWORD *)((char *)a2 + v8[15]);
        *(_QWORD *)((char *)a1 + v8[16]) = *(_QWORD *)((char *)a2 + v8[16]);
        *(_QWORD *)((char *)a1 + v8[17]) = *(_QWORD *)((char *)a2 + v8[17]);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        goto LABEL_25;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
LABEL_25:
  v62 = *(int *)(a3 + 20);
  v63 = *(void **)((char *)a1 + v62);
  *(_QWORD *)((char *)a1 + v62) = *(_QWORD *)((char *)a2 + v62);

  return a1;
}

uint64_t sub_1BA8C87A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA8C87B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FormatFile();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BA8C882C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA8C8838(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatFile();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BA8C88B0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 0x80) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BA8C88BC(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 0x80) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1BA8C88C8(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2A9750, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA8C88E4(uint64_t a1, uint64_t a2)
{
  return sub_1BA5193C4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
}

uint64_t sub_1BA8C88F0(uint64_t a1, uint64_t a2)
{
  return sub_1BA5193C4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
}

uint64_t sub_1BA8C88FC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6BAD2C(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA8C89D0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BA8C89E4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA79DDC8(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA8C8ABC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v25)(uint64_t, uint64_t);

  v1 = (int *)type metadata accessor for FormatContent.Resolved();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  sub_1BA7F4208();
  v3 = v0 + ((v2 + 96) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + v1[5];
  v5 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v6 = v3 + v1[14];
  v7 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    v8 = v6 + v7[5];
    swift_bridgeObjectRelease();
    v9 = type metadata accessor for FormatWebEmbed();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = sub_1BB86C67C();
    v12 = *(_QWORD *)(v11 - 8);
    v25 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v25(v10, v11);
    v13 = v8 + *(int *)(v9 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11))
      v25(v13, v11);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v14 = v6 + v7[8];
    v15 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for GenericDataVisualization();
        v25(v14 + *(int *)(v16 + 20), v11);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v17 = v6 + v7[9];
    sub_1BA6C5A68();
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  }

  swift_bridgeObjectRelease();
  v21 = v3 + v1[18];
  v22 = sub_1BB871E24();
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  return swift_deallocObject();
}

_QWORD *sub_1BA8C8E10(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);
  return a1;
}

uint64_t sub_1BA8C8E5C()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = (int *)type metadata accessor for FormatServiceOptions();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + v2;
  if (*(_QWORD *)(v0 + v2 + 24))
    __swift_destroy_boxed_opaque_existential_1(v0 + v2);
  v4 = v3 + v1[10];
  if (*(_QWORD *)v4)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v4 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v4 + 80);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v6 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = v5 + *(int *)(v6 + 24);
    v8 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
    {
      swift_bridgeObjectRelease();
      v11 = v7 + *(int *)(v8 + 24);
      v9 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v11, v9);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v5 + *(int *)(v6 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8C9054(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t result;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;

  v2 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6BCBF8(0);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - v9;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v47 - v13;
  v55 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
  {
LABEL_31:
    v45 = sub_1BA8A402C(a1, (uint64_t *)&v55);
LABEL_32:
    swift_bridgeObjectRelease();
    return v45;
  }
  v51 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = a1 + v51;
  v53 = *(_QWORD *)(v12 + 72);
  v47 = a1;
  swift_bridgeObjectRetain();
  v48 = v14;
  v49 = v10;
  v50 = v4;
  while (1)
  {
    sub_1BA4C2DD8(v16, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      sub_1BA5193C4((uint64_t)&v10[*(int *)(v18 + 48)], (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    }
    else
    {
      sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      sub_1BA5193C4((uint64_t)&v10[*(int *)(v19 + 48)], (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v20 = sub_1BB86C67C();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v10, v20);
    }
    v21 = *v4;
    v22 = v4[1];
    swift_bridgeObjectRetain();
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    if (!v22)
    {
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
      v45 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      goto LABEL_32;
    }
    v23 = (uint64_t)v55;
    if (v55[2])
    {
      swift_bridgeObjectRetain();
      v24 = sub_1BA6E35A8(v21, v22);
      v25 = MEMORY[0x1E0DEE9D8];
      if ((v26 & 1) != 0)
      {
        v25 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v25 = MEMORY[0x1E0DEE9D8];
    }
    sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_1BA6BAD3C(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
    v28 = *(_QWORD *)(v25 + 16);
    v27 = *(_QWORD *)(v25 + 24);
    if (v28 >= v27 >> 1)
      v25 = sub_1BA6BAD3C(v27 > 1, v28 + 1, 1, v25);
    *(_QWORD *)(v25 + 16) = v28 + 1;
    v29 = v7;
    sub_1BA5193C4((uint64_t)v7, v25 + v51 + v28 * v53, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    v30 = (uint64_t)v55;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v54 = (_QWORD *)v30;
    v33 = sub_1BA6E35A8(v21, v22);
    v34 = *(_QWORD *)(v30 + 16);
    v35 = (v32 & 1) == 0;
    v36 = v34 + v35;
    if (__OFADD__(v34, v35))
      break;
    v37 = v32;
    if (*(_QWORD *)(v30 + 24) >= v36)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v40 = v54;
        if ((v32 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BB4C1CDC();
        v40 = v54;
        if ((v37 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BB4ADCA0(v36, isUniquelyReferenced_nonNull_native);
      v38 = sub_1BA6E35A8(v21, v22);
      if ((v37 & 1) != (v39 & 1))
        goto LABEL_35;
      v33 = v38;
      v40 = v54;
      if ((v37 & 1) != 0)
      {
LABEL_3:
        v17 = v40[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v33) = v25;
        goto LABEL_4;
      }
    }
    v40[(v33 >> 6) + 8] |= 1 << v33;
    v41 = (uint64_t *)(v40[6] + 16 * v33);
    *v41 = v21;
    v41[1] = v22;
    *(_QWORD *)(v40[7] + 8 * v33) = v25;
    v42 = v40[2];
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (v43)
      goto LABEL_34;
    v40[2] = v44;
    swift_bridgeObjectRetain();
LABEL_4:
    v55 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v48;
    sub_1BA4A2E80((uint64_t)v48, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    v16 += v53;
    --v15;
    v10 = v49;
    v4 = v50;
    v7 = v29;
    if (!v15)
    {
      a1 = v47;
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA8C9530(unint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  uint64_t v16;

  v2 = a1;
  v16 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_16:
    v3 = sub_1BB873F30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      v4 = 0;
      v14 = v2 & 0xC000000000000001;
      v5 = v2 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        if (v14)
        {
          v6 = (void *)MEMORY[0x1BCCE4630](v4, v2);
          v7 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
LABEL_13:
            __break(1u);
            return v16;
          }
        }
        else
        {
          if (v4 >= *(_QWORD *)(v5 + 16))
          {
            __break(1u);
            goto LABEL_16;
          }
          v6 = *(void **)(v2 + 8 * v4 + 32);
          swift_unknownObjectRetain();
          v7 = v4 + 1;
          if (__OFADD__(v4, 1))
            goto LABEL_13;
        }
        v8 = v2;
        v9 = objc_msgSend(v6, sel_identifier);
        v10 = sub_1BB8729A0();
        v12 = v11;

        LOBYTE(v9) = sub_1BA761FE4(v10, v12, a2);
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
        }
        v2 = v8;
        ++v4;
        if (v7 == v3)
          return v16;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BA8C96C8()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = (int *)type metadata accessor for FormatServiceOptions();
  v3 = *((_QWORD *)v2 - 1);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = type metadata accessor for FormatContent(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = v4 + v5 + v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = type metadata accessor for FormatContentPool();
  v12 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
  v33 = v11;
  v34 = v1;
  v13 = v1 + v4;
  if (*(_QWORD *)(v13 + 24))
    __swift_destroy_boxed_opaque_existential_1(v13);
  v14 = v9 & ~v8;
  v15 = v10 + v12;
  v16 = v13 + v2[10];
  if (*(_QWORD *)v16)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v16 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v16 + 80);
  }
  v17 = v14 + v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v16 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v19 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
  {
    v20 = v18 + *(int *)(v19 + 24);
    v21 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
    {
      swift_bridgeObjectRelease();
      v32 = v20 + *(int *)(v21 + 24);
      v22 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v32, v22);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v18 + *(int *)(v19 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  v23 = v34 + v14;
  swift_bridgeObjectRelease();
  v24 = v23 + *(int *)(v6 + 20);
  v25 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v23 + *(int *)(v6 + 40);
  v27 = sub_1BB871E24();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (!v29(v26, 1, v27))
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v34 + (v17 & ~v12) + *(int *)(v33 + 100);
  if (!v29(v30, 1, v27))
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v27);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8C9B14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v5 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(type metadata accessor for FormatContent(0) - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(type metadata accessor for FormatContentPool() - 8);
  v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_1BA8A6E68(a1, v2 + v6, v2 + v9, v2 + v12, *(_QWORD *)(v2 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_1BA8C9BD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA8C9BE4(a1, a2);
}

uint64_t sub_1BA8C9BE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BA8B5944(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t sub_1BA8C9C24()
{
  return sub_1BB86EBCC();
}

void sub_1BA8C9C70()
{
  uint64_t (*v0)(void);
  unint64_t TupleTypeMetadata;
  uint64_t v2;

  if (!qword_1ED3C43F0)
  {
    v0 = MEMORY[0x1E0DEAEC8];
    sub_1BA4B07F0(255, &qword_1ED3B9540, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6CA500(255, (unint64_t *)&qword_1ED3D4440, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    sub_1BA8C9E2C();
    sub_1BA8C9EB0(255, &qword_1ED3C02B8, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    sub_1BA8C9EB0(255, (unint64_t *)&qword_1ED3B91F0, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    sub_1BA81E3D0();
    sub_1BA4AD288(255, &qword_1ED3CF7B8, (uint64_t)&type metadata for SportsDataVisualization, (uint64_t (*)(_QWORD, uint64_t))v0);
    sub_1BA8C9EB0(255, (unint64_t *)&unk_1ED3CF690, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    sub_1BA8C9EB0(255, &qword_1ED3CF6A0, (uint64_t)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    sub_1BA8CB2A8(255, &qword_1ED3C43C0, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1ED3C43F0);
  }
}

void sub_1BA8C9E2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CF680)
  {
    sub_1BA6CA500(255, (unint64_t *)&qword_1ED3D4440, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CF680);
  }
}

void sub_1BA8C9EB0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1BB872814();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BA8C9F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  int *v31;

  v1 = type metadata accessor for FormatContent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = type metadata accessor for FormatContentPool();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v30 = v5;
  v8 = (((((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = type metadata accessor for FormatServiceOptions();
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v11 = v10 + v8 + 8;
  v31 = (int *)v9;
  v12 = v0 + v3;
  swift_bridgeObjectRelease();
  v13 = v12 + *(int *)(v1 + 20);
  v14 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v12 + *(int *)(v1 + 40);
  v16 = sub_1BB871E24();
  v29 = *(_QWORD *)(v16 - 8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (!v17(v15, 1, v16))
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v15, v16);
  v18 = v11 & ~v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v0 + v7 + *(int *)(v30 + 100);
  if (!v17(v19, 1, v16))
    (*(void (**)(unint64_t, uint64_t))(v29 + 8))(v19, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v0 + v18;
  if (*(_QWORD *)(v0 + v18 + 24))
    __swift_destroy_boxed_opaque_existential_1(v0 + v18);
  v21 = v20 + v31[10];
  if (*(_QWORD *)v21)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v21 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v21 + 80);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = v21 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v23 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v22, 1, v23))
  {
    v24 = v22 + *(int *)(v23 + 24);
    v25 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
    {
      swift_bridgeObjectRelease();
      v26 = v24 + *(int *)(v25 + 24);
      v27 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v22 + *(int *)(v23 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8CA3BC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = *(_QWORD *)(type metadata accessor for FormatContent(0) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_QWORD *)(type metadata accessor for FormatContentPool() - 8);
  v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v15 = (*(unsigned __int8 *)(v14 + 80) + v13 + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  return sub_1BA8AD008(a1, a2, (uint64_t *)(v3 + v7), *(_QWORD *)(v3 + v8), v3 + v10, *(const char **)(v3 + v11), *(_QWORD *)(v3 + v12), *(_QWORD *)(v3 + v13), a3, v3 + v15, *(_QWORD *)(v3 + ((*(_QWORD *)(v14 + 64) + v15 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t type metadata accessor for FormatService.ThemePackage(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3C4150);
}

uint64_t sub_1BA8CA4D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8AF7DC(a1, *(_QWORD *)(v2 + 16), *(uint64_t **)(v2 + 24), a2);
}

uint64_t sub_1BA8CA4F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v4;

  return sub_1BA8AFC8C(a1, a2, a3, *(_QWORD *)(v4 + 16), *(uint64_t **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a4);
}

unint64_t sub_1BA8CA510()
{
  unint64_t result;

  result = qword_1ED3C9720;
  if (!qword_1ED3C9720)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroup.ResolvedContainer, &type metadata for FormatContentSubgroup.ResolvedContainer);
    atomic_store(result, (unint64_t *)&qword_1ED3C9720);
  }
  return result;
}

uint64_t sub_1BA8CA554(uint64_t a1)
{
  return sub_1BA8B0094(a1) & 1;
}

uint64_t sub_1BA8CA570()
{
  return sub_1BA50AD30((unint64_t *)&unk_1ED3C69B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
}

void sub_1BA8CA590(uint64_t a1)
{
  sub_1BA6BC5C0(a1, &qword_1ED3B00B0, sub_1BA6BCBF8, (void (*)(uint64_t))type metadata accessor for FormatPackageInventory);
}

void sub_1BA8CA5AC(uint64_t a1)
{
  sub_1BA6BC5C0(a1, &qword_1ED3B0108, (void (*)(uint64_t))type metadata accessor for FormatContentSubgroup, sub_1BA8CA590);
}

void sub_1BA8CA5C8(uint64_t a1)
{
  sub_1BA6AA0A4(a1, &qword_1ED3C43C8, (void (*)(uint64_t))type metadata accessor for FormatService.ThemePackage);
}

void sub_1BA8CA5EC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C4160, type metadata accessor for FormatService.ThemePackage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA8CA608(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2ABE28(a1, *(_QWORD *)(v1 + 16)) & 1;
}

void sub_1BA8CA624(uint64_t a1)
{
  sub_1BA6AA0A4(a1, &qword_1ED3CF8A0, sub_1BA8CA590);
}

uint64_t sub_1BA8CA648()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BA8CA65C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1BA8195A4;
  return sub_1BA8B2AB8(a1, v5, v4);
}

uint64_t sub_1BA8CA6C0()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BA8CA6D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1BA8195A4;
  return sub_1BA8B2E44(a1, v5, v4);
}

void sub_1BA8CA738()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3ABC60)
  {
    sub_1BA4AD288(255, (unint64_t *)&unk_1ED3A3A80, (uint64_t)&type metadata for SportsDataVisualizationResult, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3ABC60);
  }
}

unint64_t sub_1BA8CA7A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3ABCB0;
  if (!qword_1ED3ABCB0)
  {
    sub_1BA8CA7FC(255, &qword_1ED3ABCA8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3ABCB0);
  }
  return result;
}

void sub_1BA8CA7FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BA4AD288(255, &qword_1ED3CF7B8, (uint64_t)&type metadata for SportsDataVisualization, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA8CA86C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BA8B3148(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1BA8CA884(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA8CA890()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8CA8B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v1[23];
  v4 = v1[24];
  __swift_project_boxed_opaque_existential_1(v1 + 20, v3);
  return ResourceServiceType.fetchResources(identifiers:)(v2, v3, v4);
}

void sub_1BA8CA908(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AE490, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BA8CA924()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BA8CA938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;

  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_1BA8195A4;
  *(_OWORD *)(v4 + 24) = v5;
  *(_QWORD *)(v4 + 16) = a1;
  return swift_task_switch();
}

void sub_1BA8CA9A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4020)
  {
    sub_1BA8CB2A8(255, &qword_1ED3C43C0, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4020);
  }
}

void sub_1BA8CAA04(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C4198, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA8CAA20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v7 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_1BA8195A4;
  return sub_1BA8B4A3C(a1, a2, v7, v6);
}

void sub_1BA8CAA8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE508)
  {
    type metadata accessor for PuzzleStatistic();
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3BA030);
    v0 = sub_1BB872FC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE508);
  }
}

unint64_t sub_1BA8CAB08()
{
  unint64_t result;

  result = qword_1EF2A97E8;
  if (!qword_1EF2A97E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB891408, &type metadata for PuzzleStatsServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2A97E8);
  }
  return result;
}

uint64_t sub_1BA8CAB4C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA8CAB70()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8CABA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_BYTE *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_1BA8195A4;
  *(_QWORD *)(v7 + 48) = v4;
  *(_QWORD *)(v7 + 56) = v6;
  *(_BYTE *)(v7 + 89) = v5;
  *(_QWORD *)(v7 + 40) = a1;
  return swift_task_switch();
}

void sub_1BA8CAC20(uint64_t a1)
{
  sub_1BA6AA0A4(a1, &qword_1ED3AE420, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
}

uint64_t sub_1BA8CAC44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AE428, (uint64_t (*)(uint64_t))sub_1BA8CAC20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA8CACA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PuzzleStatistic();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BA8CACE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9808)
  {
    sub_1BA6CA500(255, &qword_1ED3AB100, (uint64_t)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9808);
  }
}

uint64_t sub_1BA8CAD58()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BA8CAD8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1BA8195A4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1BA8CAE04()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BA8CAE30(uint64_t *a1, void **a2)
{
  uint64_t v2;

  return sub_1BA8B3DD0(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1BA8CAE48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4880)
  {
    sub_1BA8C9EB0(255, &qword_1ED3CF6A0, (uint64_t)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4880);
  }
}

unint64_t sub_1BA8CAEBC()
{
  unint64_t result;

  result = qword_1ED3AE3D0;
  if (!qword_1ED3AE3D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingPuzzleTypeOverridesStrategy, &type metadata for FormatCodingPuzzleTypeOverridesStrategy);
    atomic_store(result, (unint64_t *)&qword_1ED3AE3D0);
  }
  return result;
}

void sub_1BA8CAF00(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3A5A60, type metadata accessor for FormatPuzzleType.Overrides, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA8CAF1C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  sub_1BA4CDF6C(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_1BA8CAF70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3AB0)
  {
    sub_1BA6CA500(255, (unint64_t *)&unk_1ED3AB0B0, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3AB0);
  }
}

uint64_t sub_1BA8CAFE4()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BA8CAFF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1BA4B0D38;
  return sub_1BA8B319C(a1, v5, v4);
}

uint64_t sub_1BA8CB05C(_QWORD *a1, void **a2)
{
  uint64_t v2;

  return sub_1BA8B33F8(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1BA8CB074()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C4878)
  {
    sub_1BA8C9EB0(255, (unint64_t *)&unk_1ED3CF690, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C4878);
  }
}

double sub_1BA8CB0E8(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BB87FC90;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  return result;
}

uint64_t sub_1BA8CB10C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA8CB1AC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA8CB254()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v1[28];
  v4 = v1[29];
  __swift_project_boxed_opaque_existential_1(v1 + 25, v3);
  return WebArchiveServiceType.resolve(webArchives:)(v2, v3, v4);
}

void sub_1BA8CB2A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BB872814();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BA8CB304(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B7A40, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebArchiveResource.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA8CB320(uint64_t a1)
{
  sub_1BA6AA0A4(a1, &qword_1ED3B91F8, (void (*)(uint64_t))type metadata accessor for WebArchive);
}

uint64_t sub_1BA8CB344()
{
  uint64_t v0;

  return sub_1BA8B0BC0(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BA8CB360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v1 = type metadata accessor for FormatContent(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for FormatServiceOptions();
  v6 = (v3 + v4 + *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  v7 = v0 + v3;
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 20);
  v9 = sub_1BB86C8B0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v7 + *(int *)(v1 + 40);
  v11 = sub_1BB871E24();
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v0 + v6;
  if (*(_QWORD *)(v0 + v6 + 24))
    __swift_destroy_boxed_opaque_existential_1(v0 + v6);
  v14 = v13 + v5[10];
  if (*(_QWORD *)v14)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v14 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v14 + 80);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v14 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v16 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v17 = v15 + *(int *)(v16 + 24);
    v18 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
    {
      swift_bridgeObjectRelease();
      v21 = v17 + *(int *)(v18 + 24);
      v19 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v21, v19);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v15 + *(int *)(v16 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1BA8CB678(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for FormatContent(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  sub_1BA8B0DFC(a1, a2, v2 + v6, v2 + ((v6 + v7 + v8) & ~v8));
}

uint64_t sub_1BA8CB700@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA8CB7C8(a1);
}

void sub_1BA8CB71C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D2EA0)
  {
    sub_1BA6CA500(255, (unint64_t *)&qword_1ED3D4440, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D2EA0);
  }
}

uint64_t sub_1BA8CB790()
{
  return sub_1BA8B070C();
}

uint64_t sub_1BA8CB7AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA8CB7C8(a1);
}

uint64_t sub_1BA8CB7C8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FormatServiceOptions();
  type metadata accessor for FormatContent(0);
  return sub_1BA8B12D8(a1);
}

uint64_t sub_1BA8CB864(_QWORD *a1, unint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v4;

  return sub_1BA8B1378(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(uint64_t **)(v4 + 32));
}

id sub_1BA8CB880@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8B2504(a1, *(_QWORD *)(v2 + 16), *(uint64_t **)(v2 + 24), a2);
}

uint64_t sub_1BA8CB898@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8B0D84(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1BA8CB8B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B08C0)
  {
    sub_1BA6CA500(255, (unint64_t *)&qword_1ED3B9630, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B08C0);
  }
}

uint64_t sub_1BA8CB924()
{
  uint64_t v0;

  return sub_1BA8B0558(*(_QWORD **)(v0 + 16), *(uint64_t **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t objectdestroy_89Tm()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = (int *)type metadata accessor for FormatServiceOptions();
  v3 = *((_QWORD *)v2 - 1);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = type metadata accessor for FormatContent(0);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v5 + v7;
  v9 = v1 + v4;
  if (*(_QWORD *)(v1 + v4 + 24))
    __swift_destroy_boxed_opaque_existential_1(v1 + v4);
  v10 = v4 + v8;
  v11 = v9 + v2[10];
  if (*(_QWORD *)v11)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v11 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v11 + 80);
  }
  v12 = v10 & ~v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v11 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v14 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v25 = v1;
    v15 = v13 + *(int *)(v14 + 24);
    v16 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
    {
      swift_bridgeObjectRelease();
      v24 = v15 + *(int *)(v16 + 24);
      v17 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v24, v17);
      swift_bridgeObjectRelease();
    }
    v1 = v25;
    if (*(_QWORD *)(v13 + *(int *)(v14 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  v18 = v1 + v12 + *(int *)(v6 + 20);
  v19 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v1 + v12 + *(int *)(v6 + 40);
  v21 = sub_1BB871E24();
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1BA8CBC60@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;

  v5 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatContent(0) - 8) + 80);
  result = sub_1BA8B0244(*a1, v2 + v6, (uint64_t *)(v2 + ((v6 + v7 + v8) & ~v8)));
  *a2 = result;
  return result;
}

uint64_t sub_1BA8CBCF4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BA6CA500(255, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA8CBD3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B08B8)
  {
    sub_1BA8C9EB0(255, (unint64_t *)&qword_1ED3B91F0, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B08B8);
  }
}

uint64_t sub_1BA8CBDB0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8CBDD4()
{
  uint64_t v0;

  return sub_1BA8B26B0(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1BA8CBDEC()
{
  return objectdestroy_21Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_21Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 24));
  return swift_deallocObject();
}

uint64_t sub_1BA8CBE3C@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8B2754(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1BA8CBE54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C03F0;
  if (!qword_1ED3C03F0)
  {
    sub_1BA6CA500(255, &qword_1ED3BB4A0, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C03F0);
  }
  return result;
}

uint64_t sub_1BA8CBEBC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1BA49A224(255, a2);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA8CBEFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBEF8)
  {
    sub_1BA8C9EB0(255, &qword_1ED3C02B8, (uint64_t)&qword_1ED3BA820, 0x1E0D58C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA49A224);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBEF8);
  }
}

uint64_t sub_1BA8CBF70()
{
  uint64_t v0;

  return sub_1BA8B1F68(*(_QWORD *)(v0 + 16), *(uint64_t **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1BA8CBF8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39ED20)
  {
    sub_1BA49A224(255, &qword_1ED39ECF0);
    sub_1BA6CA500(255, (unint64_t *)&qword_1ED3D4440, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
    sub_1BA8CBEBC((unint64_t *)&qword_1ED39ED30, &qword_1ED39ECF0, 0x1E0D58958, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39ED20);
  }
}

uint64_t sub_1BA8CC05C()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = (int *)type metadata accessor for FormatServiceOptions();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for FormatContent(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v4 + v6;
  swift_release();
  swift_bridgeObjectRelease();
  v8 = v0 + v3;
  if (*(_QWORD *)(v0 + v3 + 24))
    __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  v9 = v3 + v7;
  v10 = v8 + v1[10];
  if (*(_QWORD *)v10)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v10 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v10 + 80);
  }
  v11 = v9 & ~v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v10 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v13 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = v12 + *(int *)(v13 + 24);
    v15 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      swift_bridgeObjectRelease();
      v23 = v14 + *(int *)(v15 + 24);
      v16 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v23, v16);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v12 + *(int *)(v13 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  v17 = v0 + v11 + *(int *)(v5 + 20);
  v18 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v0 + v11 + *(int *)(v5 + 40);
  v20 = sub_1BB871E24();
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8CC384@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatContent(0) - 8) + 80);
  return sub_1BA8B2168(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v6, (uint64_t *)(v2 + ((v6 + v7 + v8) & ~v8)), a2);
}

uint64_t sub_1BA8CC414()
{
  uint64_t *v0;

  return sub_1BA8B1538(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BA8CC430()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v1 = (int *)type metadata accessor for FormatServiceOptions();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for FormatContent(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v4 + v6;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v8 = v0 + v3;
  if (*(_QWORD *)(v0 + v3 + 24))
    __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  v9 = v3 + v7;
  v10 = v8 + v1[10];
  if (*(_QWORD *)v10)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v10 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v10 + 80);
  }
  v11 = v9 & ~v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v10 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v13 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = v12 + *(int *)(v13 + 24);
    v15 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      swift_bridgeObjectRelease();
      v23 = v14 + *(int *)(v15 + 24);
      v16 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v23, v16);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v12 + *(int *)(v13 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  v17 = v0 + v11 + *(int *)(v5 + 20);
  v18 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v0 + v11 + *(int *)(v5 + 40);
  v20 = sub_1BB871E24();
  v21 = *(_QWORD *)(v20 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8CC760@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatContent(0) - 8) + 80);
  return sub_1BA8B1668(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + v8, (uint64_t *)(v3 + ((v8 + v9 + v10) & ~v10)), a3);
}

uint64_t sub_1BA8CC7F4()
{
  uint64_t *v0;

  return sub_1BA8B5C9C(v0[3], v0[4], v0[5]);
}

void sub_1BA8CC824(uint64_t a1)
{
  sub_1BA5AA2AC(a1, &qword_1ED3B37D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, sub_1BA8CA570, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
}

uint64_t sub_1BA8CC848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;

  v1 = v0;
  sub_1BA6BCBF8(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  sub_1BA6EF3B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = (int *)type metadata accessor for FormatServiceOptions();
  v11 = *((_QWORD *)v10 - 1);
  v54 = v8 + v9 + *(unsigned __int8 *)(v11 + 80);
  v55 = v8;
  v12 = v1 + v4;
  v56 = *(unsigned __int8 *)(v11 + 80);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 168) >= 3uLL)
      swift_bridgeObjectRelease();
    v53 = v1;
    v13 = (int *)type metadata accessor for FormatPackage();
    v14 = v12 + v13[23];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = type metadata accessor for FormatCompilerOptions(0);
    v16 = v14 + *(int *)(v15 + 24);
    if (*(_QWORD *)(v16 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v17 = v16 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    v18 = sub_1BB86E710();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (!v20(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    v21 = v14 + *(int *)(v15 + 28);
    if (!v20(v21, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v18);
    swift_bridgeObjectRelease();
    v22 = v12 + v13[24];
    v23 = sub_1BB86EB84();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v25(v22, v23);
    v26 = v12 + v13[25];
    if (!v20(v26, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v26, v18);
    sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v28 = v12 + *(int *)(v27 + 48);
    swift_bridgeObjectRelease();
    v29 = (int *)type metadata accessor for FormatMetadata();
    v25(v28 + v29[5], v23);
    v25(v28 + v29[6], v23);
    v30 = v28 + v29[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v30, 1, v23))
      v25(v30, v23);
    v1 = v53;
  }
  else
  {
    v31 = sub_1BB86C67C();
    v32 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v1 + v4, v31);
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, v32, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v34 = v12 + *(int *)(v33 + 48);
    swift_bridgeObjectRelease();
    v35 = (int *)type metadata accessor for FormatMetadata();
    v36 = v34 + v35[5];
    v37 = sub_1BB86EB84();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v39(v36, v37);
    v39(v34 + v35[6], v37);
    v40 = v34 + v35[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v40, 1, v37))
      v39(v40, v37);
  }
  v41 = v54 & ~v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = sub_1BB86C67C();
  v43 = *(_QWORD *)(v42 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v43 + 48))(v1 + v55, 1, v42))
    (*(void (**)(unint64_t, uint64_t))(v43 + 8))(v1 + v55, v42);
  v44 = v1 + v41;
  if (*(_QWORD *)(v1 + v41 + 24))
    __swift_destroy_boxed_opaque_existential_1(v1 + v41);
  v45 = v44 + v10[10];
  if (*(_QWORD *)v45)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v45 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v45 + 80);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v46 = v45 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v47 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47))
  {
    v48 = v46 + *(int *)(v47 + 24);
    v49 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v48, 1, v49))
    {
      swift_bridgeObjectRelease();
      v50 = v48 + *(int *)(v49 + 24);
      v51 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v46 + *(int *)(v47 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8CCE40(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BA6BCBF8(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  sub_1BA6EF3B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = (v7 + v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  return sub_1BA8B8D60(a1, a2, v2 + v7, v2 + v11, v2 + ((v11 + v12 + v13) & ~v13));
}

void sub_1BA8CCEE8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  unint64_t TupleTypeMetadata;
  uint64_t v2;

  if (!qword_1ED3BCCB0)
  {
    MEMORY[0x1E0C80A78](0);
    sub_1BA8CC824(255);
    v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
    sub_1BA4B07F0(255, &qword_1ED3B9540, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA8CD0D8();
    sub_1BA8CD14C();
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3C0378, (uint64_t (*)(uint64_t))sub_1BA709CA4, v0);
    sub_1BA543EBC();
    sub_1BA8CD1E0();
    sub_1BA8CD254();
    sub_1BA4E59C4();
    sub_1BA6010C8();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1ED3BCCB0);
  }
}

void sub_1BA8CD0D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9420)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9420);
  }
}

void sub_1BA8CD14C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9400)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9400);
  }
}

uint64_t sub_1BA8CD1C0()
{
  return sub_1BA50AD30(&qword_1ED3D0280, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, (uint64_t)&protocol conformance descriptor for FormatSnippet);
}

void sub_1BA8CD1E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B93F8)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B93F8);
  }
}

void sub_1BA8CD254()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9410)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9410);
  }
}

uint64_t sub_1BA8CD2C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;

  sub_1BA6BCBF8(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + v2;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v3 + 168) >= 3uLL)
      swift_bridgeObjectRelease();
    v4 = (int *)type metadata accessor for FormatPackage();
    v5 = v3 + v4[23];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = type metadata accessor for FormatCompilerOptions(0);
    v7 = v5 + *(int *)(v6 + 24);
    if (*(_QWORD *)(v7 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v8 = v7 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    v9 = sub_1BB86E710();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v12 = v5 + *(int *)(v6 + 28);
    if (!v11(v12, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    swift_bridgeObjectRelease();
    v13 = v3 + v4[24];
    v14 = sub_1BB86EB84();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v16(v13, v14);
    v17 = v3 + v4[25];
    if (!v11(v17, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v17, v9);
    sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v19 = v3 + *(int *)(v18 + 48);
    swift_bridgeObjectRelease();
    v20 = (int *)type metadata accessor for FormatMetadata();
    v16(v19 + v20[5], v14);
    v16(v19 + v20[6], v14);
    v21 = v19 + v20[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v21, 1, v14))
      v16(v21, v14);
  }
  else
  {
    v22 = sub_1BB86C67C();
    v23 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v0 + v2, v22);
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, v23, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v25 = v3 + *(int *)(v24 + 48);
    swift_bridgeObjectRelease();
    v26 = (int *)type metadata accessor for FormatMetadata();
    v27 = v25 + v26[5];
    v28 = sub_1BB86EB84();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v30(v27, v28);
    v30(v25 + v26[6], v28);
    v31 = v25 + v26[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v28))
      v30(v31, v28);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8CD698@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_1BA6BCBF8(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_1BA8BA38C(a1, v2 + ((v6 + 16) & ~v6), a2);
}

void sub_1BA8CD6F0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B0898, (uint64_t (*)(uint64_t))sub_1BA8CC824, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
}

uint64_t sub_1BA8CD70C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA8CE23C(a1, sub_1BA8B5C9C, a2);
}

uint64_t sub_1BA8CD728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;

  v1 = v0;
  sub_1BA6BCBF8(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  sub_1BA6EF3B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = (int *)type metadata accessor for FormatServiceOptions();
  v11 = *(unsigned __int8 *)(*((_QWORD *)v10 - 1) + 80);
  v54 = v8 + v9 + v11;
  v55 = v8;
  swift_release();
  v12 = v1 + v4;
  v56 = v11;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v12 + 168) >= 3uLL)
      swift_bridgeObjectRelease();
    v53 = v1;
    v13 = (int *)type metadata accessor for FormatPackage();
    v14 = v12 + v13[23];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = type metadata accessor for FormatCompilerOptions(0);
    v16 = v14 + *(int *)(v15 + 24);
    if (*(_QWORD *)(v16 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v17 = v16 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    v18 = sub_1BB86E710();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    if (!v20(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    v21 = v14 + *(int *)(v15 + 28);
    if (!v20(v21, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v18);
    swift_bridgeObjectRelease();
    v22 = v12 + v13[24];
    v23 = sub_1BB86EB84();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v25(v22, v23);
    v26 = v12 + v13[25];
    if (!v20(v26, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v26, v18);
    sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v28 = v12 + *(int *)(v27 + 48);
    swift_bridgeObjectRelease();
    v29 = (int *)type metadata accessor for FormatMetadata();
    v25(v28 + v29[5], v23);
    v25(v28 + v29[6], v23);
    v30 = v28 + v29[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v30, 1, v23))
      v25(v30, v23);
    v1 = v53;
  }
  else
  {
    v31 = sub_1BB86C67C();
    v32 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v1 + v4, v31);
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, v32, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v34 = v12 + *(int *)(v33 + 48);
    swift_bridgeObjectRelease();
    v35 = (int *)type metadata accessor for FormatMetadata();
    v36 = v34 + v35[5];
    v37 = sub_1BB86EB84();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v39(v36, v37);
    v39(v34 + v35[6], v37);
    v40 = v34 + v35[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v40, 1, v37))
      v39(v40, v37);
  }
  v41 = v54 & ~v56;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42 = sub_1BB86C67C();
  v43 = *(_QWORD *)(v42 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v43 + 48))(v1 + v55, 1, v42))
    (*(void (**)(unint64_t, uint64_t))(v43 + 8))(v1 + v55, v42);
  v44 = v1 + v41;
  if (*(_QWORD *)(v1 + v41 + 24))
    __swift_destroy_boxed_opaque_existential_1(v1 + v41);
  v45 = v44 + v10[10];
  if (*(_QWORD *)v45)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v45 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v45 + 80);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v46 = v45 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v47 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47))
  {
    v48 = v46 + *(int *)(v47 + 24);
    v49 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v48, 1, v49))
    {
      swift_bridgeObjectRelease();
      v50 = v48 + *(int *)(v49 + 24);
      v51 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v46 + *(int *)(v47 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8CDD28(uint64_t a1)
{
  return sub_1BA8CDD5C(a1, (uint64_t (*)(_QWORD))sub_1BA6BCBF8, (uint64_t (*)(_QWORD))sub_1BA6EF3B0, (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions, (uint64_t (*)(uint64_t, _QWORD, unint64_t, unint64_t, unint64_t))sub_1BA8B9D10);
}

uint64_t sub_1BA8CDD5C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t, _QWORD, unint64_t, unint64_t, unint64_t))
{
  uint64_t v5;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v10 = *(_QWORD *)(a2(0) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(_QWORD *)(a3(0) - 8);
  v14 = (v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(unsigned __int8 *)(*(_QWORD *)(a4(0) - 8) + 80);
  return a5(a1, *(_QWORD *)(v5 + 16), v5 + v11, v5 + v14, v5 + ((v14 + v15 + v16) & ~v16));
}

void sub_1BA8CDE14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0880)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0880);
  }
}

uint64_t sub_1BA8CDE88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA8CE23C(a1, sub_1BA8B87C8, a2);
}

void sub_1BA8CDEA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0868)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0868);
  }
}

uint64_t sub_1BA8CDF18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA8CE23C(a1, sub_1BA8B824C, a2);
}

void sub_1BA8CDF34(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3BBEF0, (uint64_t (*)(uint64_t))sub_1BA709CA4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
}

uint64_t sub_1BA8CDF50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA8CE23C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))sub_1BA8B7DB4, a2);
}

void sub_1BA8CDF6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0888)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0888);
  }
}

uint64_t sub_1BA8CDFE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA8CE23C(a1, sub_1BA8B7838, a2);
}

void sub_1BA8CDFFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0860)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0860);
  }
}

uint64_t sub_1BA8CE070@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA8CE23C(a1, sub_1BA8B7264, a2);
}

void sub_1BA8CE08C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0878)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0878);
  }
}

uint64_t sub_1BA8CE100@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA8CE23C(a1, sub_1BA8B6CD8, a2);
}

void sub_1BA8CE11C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0850)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0850);
  }
}

uint64_t sub_1BA8CE190@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA8CE23C(a1, sub_1BA8B66C0, a2);
}

void sub_1BA8CE1AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0858)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0858);
  }
}

uint64_t sub_1BA8CE220@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BA8CE23C(a1, sub_1BA8B6188, a2);
}

uint64_t sub_1BA8CE23C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = a2(a1, *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
  *a3 = result;
  return result;
}

uint64_t sub_1BA8CE280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;

  sub_1BA8CC824(0);
  v2 = v1;
  v3 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v3 + 168) >= 3uLL)
    swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for FormatPackage();
  v5 = v3 + v4[23];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for FormatCompilerOptions(0);
  v7 = v5 + *(int *)(v6 + 24);
  if (*(_QWORD *)(v7 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v8 = v7 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v12 = v5 + *(int *)(v6 + 28);
  if (!v11(v12, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  swift_bridgeObjectRelease();
  v13 = v3 + v4[24];
  v14 = sub_1BB86EB84();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v16(v13, v14);
  v17 = v3 + v4[25];
  if (!v11(v17, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v17, v9);
  v18 = v3 + *(int *)(v2 + 36);
  swift_bridgeObjectRelease();
  v19 = (int *)type metadata accessor for FormatMetadata();
  v16(v18 + v19[5], v14);
  v16(v18 + v19[6], v14);
  v20 = v18 + v19[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14))
    v16(v20, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8CE55C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_1BA8CC824(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_1BA8B9FFC(a1, v2 + ((v6 + 16) & ~v6), a2);
}

uint64_t sub_1BA8CE5B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatMetadata() - 8) + 80);
  return sub_1BA8C23A0(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + v7, v1 + ((v7 + v8 + v9) & ~v9));
}

uint64_t sub_1BA8CE65C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v5;

  sub_1BA4CDF6C(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1BA8CE6A0(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3BCD20, type metadata accessor for FormatService.CacheFormatFile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA8CE6BC()
{
  uint64_t v0;

  return sub_1BA8BE464(*(void **)(v0 + 16));
}

uint64_t sub_1BA8CE6D4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BA8CE6F8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8C2530(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BA8CE710(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BA8CE760()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2CCD00)
  {
    sub_1BB86C67C();
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3BA030);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2CCD00);
  }
}

uint64_t sub_1BA8CE7DC()
{
  uint64_t v0;

  return sub_1BA98EFF0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
}

void sub_1BA8CE7F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1BA98F0C8(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BA8CE814(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatMetadata() - 8) + 80);
  return sub_1BA8C261C(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + v7, v1 + ((v7 + v8 + v9) & ~v9));
}

uint64_t sub_1BA8CE8B8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8C2850(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BA8CE8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1BA771864(a13, a14);
  }
  return result;
}

uint64_t sub_1BA8CE968(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatMetadata() - 8) + 80);
  return sub_1BA8C293C(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + v7, v1 + ((v7 + v8 + v9) & ~v9));
}

uint64_t sub_1BA8CEA0C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8C2B10(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BA8CEA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1BA6C0C20(a5, a6, a7, a8, a9, a10, a11);
  }
  return result;
}

uint64_t sub_1BA8CEAA8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatMetadata() - 8) + 80);
  return sub_1BA8C2BFC(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + v7, v1 + ((v7 + v8 + v9) & ~v9));
}

uint64_t sub_1BA8CEB4C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8C2E0C(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BA8CEB64(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA8CEBFC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatMetadata() - 8) + 80);
  return sub_1BA8C2EF8(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + v7, v1 + ((v7 + v8 + v9) & ~v9));
}

uint64_t sub_1BA8CECA0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8C30B8(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BA8CECB8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BA8CED28(uint64_t a1)
{
  sub_1BA5AA2AC(a1, &qword_1ED3BE5D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, sub_1BA8CD1C0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
}

uint64_t sub_1BA8CED50(uint64_t a1)
{
  return sub_1BA8CDD5C(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD))type metadata accessor for FormatServiceOptions, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, _QWORD, unint64_t, unint64_t, unint64_t))sub_1BA8C31A4);
}

uint64_t sub_1BA8CED84@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8C32A4(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BA8CED9C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA682148(v2, v3);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA8CEE60(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA766C18(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_1BA8CEF24(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatMetadata() - 8) + 80);
  return sub_1BA8C33B0(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + v7, v1 + ((v7 + v8 + v9) & ~v9));
}

uint64_t sub_1BA8CEFC8@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8C354C(a1, *(void **)(v2 + 16), a2);
}

double sub_1BA8CEFE0(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 105) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1BA8CEFFC(uint64_t a1)
{
  sub_1BA8CF05C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
  return a1;
}

uint64_t sub_1BA8CF05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA766C18(a7, a8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA8CF120(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

void sub_1BA8CF138(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BA8CF1A0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatMetadata() - 8) + 80);
  return sub_1BA8C3638(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + v7, v1 + ((v7 + v8 + v9) & ~v9));
}

uint64_t sub_1BA8CF244@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8C37D4(a1, *(void **)(v2 + 16), a2);
}

double sub_1BA8CF25C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

_QWORD *sub_1BA8CF278(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17]);
  return a1;
}

uint64_t sub_1BA8CF2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA79DDC8(a9, a10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA8CF3A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BA8B9E24(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t objectdestroy_131Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v27;

  v1 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = (int *)type metadata accessor for FormatServiceOptions();
  v6 = *((_QWORD *)v5 - 1);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (int *)type metadata accessor for FormatMetadata();
  v10 = *(unsigned __int8 *)(*((_QWORD *)v9 - 1) + 80);
  v11 = v8 + v10;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v12 = v0 + v7;
  if (*(_QWORD *)(v0 + v7 + 24))
    __swift_destroy_boxed_opaque_existential_1(v0 + v7);
  v13 = v7 + v11;
  v14 = v12 + v5[10];
  if (*(_QWORD *)v14)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((unint64_t)(*(_QWORD *)(v14 + 40) - 1) >= 3)
      swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v14 + 80);
  }
  v15 = v13 & ~v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = v14 + *(int *)(type metadata accessor for FormatTransformData() + 40);
  v17 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = v16 + *(int *)(v17 + 24);
    v19 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
    {
      swift_bridgeObjectRelease();
      v27 = v18 + *(int *)(v19 + 24);
      v20 = sub_1BB86D078();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v27, v20);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v16 + *(int *)(v17 + 40) + 32) != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  v21 = v0 + v15 + v9[5];
  v22 = sub_1BB86EB84();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  v24(v21, v22);
  v24(v0 + v15 + v9[6], v22);
  v25 = v0 + v15 + v9[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v25, 1, v22))
    v24(v25, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8CF6CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for FormatServiceOptions() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatMetadata() - 8) + 80);
  return sub_1BA8BDFC8(a1, *(_QWORD *)(v1 + 16), v1 + v4, v1 + v7, v1 + ((v7 + v8 + v9) & ~v9));
}

void sub_1BA8CF770(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B3B98, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BA8CF78C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8C22B4(a1, *(void **)(v2 + 16), a2);
}

void sub_1BA8CF7A4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C60B0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3C60B0);
  }
}

_QWORD *sub_1BA8CF804(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  _OWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t);
  _QWORD *v98;
  uint64_t v99;
  _QWORD *v100;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1BA6BCBF8(0);
    v98 = a1;
    v100 = a2;
    v99 = a3;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v20 = sub_1BB86C67C();
      v21 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v9, v20);
      sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, v21, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      v23 = *(int *)(v22 + 48);
      v24 = &v8[v23];
      v25 = &v9[v23];
      v26 = *(_QWORD *)&v9[v23 + 8];
      *(_QWORD *)v24 = *(_QWORD *)&v9[v23];
      *((_QWORD *)v24 + 1) = v26;
      v27 = (int *)type metadata accessor for FormatMetadata();
      v28 = v27[5];
      v29 = &v24[v28];
      v30 = &v25[v28];
      v31 = sub_1BB86EB84();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      swift_bridgeObjectRetain();
      v33(v29, v30, v31);
      v33(&v24[v27[6]], &v25[v27[6]], v31);
      v34 = v27[7];
      v35 = &v24[v34];
      v36 = &v25[v34];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v25[v34], 1, v31))
      {
        sub_1BA6BF9E8(0);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
      }
      v19 = v98;
      v38 = v99;
      *(_QWORD *)&v24[v27[8]] = *(_QWORD *)&v25[v27[8]];
      *(_QWORD *)&v24[v27[9]] = *(_QWORD *)&v25[v27[9]];
      *(_QWORD *)&v24[v27[10]] = *(_QWORD *)&v25[v27[10]];
      *(_QWORD *)&v24[v27[11]] = *(_QWORD *)&v25[v27[11]];
      v39 = v100;
      goto LABEL_30;
    }
    v10 = *((_QWORD *)v9 + 1);
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *((_QWORD *)v8 + 1) = v10;
    v11 = *((_QWORD *)v9 + 3);
    *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
    *((_QWORD *)v8 + 3) = v11;
    v12 = *((_QWORD *)v9 + 5);
    *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
    *((_QWORD *)v8 + 5) = v12;
    *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
    v13 = *((_QWORD *)v9 + 8);
    *((_QWORD *)v8 + 7) = *((_QWORD *)v9 + 7);
    *((_QWORD *)v8 + 8) = v13;
    v14 = *((_QWORD *)v9 + 10);
    *((_QWORD *)v8 + 9) = *((_QWORD *)v9 + 9);
    *((_QWORD *)v8 + 10) = v14;
    v15 = *((_QWORD *)v9 + 12);
    *((_QWORD *)v8 + 11) = *((_QWORD *)v9 + 11);
    *((_QWORD *)v8 + 12) = v15;
    v89 = *((_QWORD *)v9 + 14);
    *((_QWORD *)v8 + 13) = *((_QWORD *)v9 + 13);
    *((_QWORD *)v8 + 14) = v89;
    v90 = *((_QWORD *)v9 + 16);
    *((_QWORD *)v8 + 15) = *((_QWORD *)v9 + 15);
    *((_QWORD *)v8 + 16) = v90;
    v92 = *((_QWORD *)v9 + 18);
    *((_QWORD *)v8 + 17) = *((_QWORD *)v9 + 17);
    *((_QWORD *)v8 + 18) = v92;
    *((_QWORD *)v8 + 19) = *((_QWORD *)v9 + 19);
    v88 = v9 + 160;
    v94 = *((_QWORD *)v9 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v94 >= 2)
    {
      v17 = v8 + 160;
      if (v94 != 2)
      {
        v8[160] = *v88;
        *((_QWORD *)v8 + 21) = v94;
        swift_bridgeObjectRetain();
LABEL_14:
        v95 = type metadata accessor for FormatPackage();
        v40 = *(int *)(v95 + 92);
        v41 = &v8[v40];
        v42 = &v9[v40];
        v43 = *(_QWORD *)&v9[v40 + 8];
        *(_QWORD *)v41 = *(_QWORD *)&v9[v40];
        *((_QWORD *)v41 + 1) = v43;
        v44 = (int *)type metadata accessor for FormatCompilerOptions(0);
        v45 = v44[6];
        v46 = &v41[v45];
        v47 = &v42[v45];
        v48 = *(_QWORD *)&v42[v45 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v48 == 1)
        {
          v49 = *((_OWORD *)v47 + 1);
          *(_OWORD *)v46 = *(_OWORD *)v47;
          *((_OWORD *)v46 + 1) = v49;
          *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
        }
        else
        {
          *(_QWORD *)v46 = *(_QWORD *)v47;
          *((_QWORD *)v46 + 1) = v48;
          v50 = *((_QWORD *)v47 + 3);
          *((_QWORD *)v46 + 2) = *((_QWORD *)v47 + 2);
          *((_QWORD *)v46 + 3) = v50;
          v51 = *((_QWORD *)v47 + 5);
          *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
          *((_QWORD *)v46 + 5) = v51;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v52 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v53 = &v46[v52];
        v54 = &v47[v52];
        v55 = sub_1BB86E710();
        v56 = *(_QWORD *)(v55 - 8);
        v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
        if (v57(v54, 1, v55))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
        }
        v59 = v44[7];
        v60 = &v41[v59];
        v61 = &v42[v59];
        v91 = v56;
        v97 = v57;
        if (v57(&v42[v59], 1, v55))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v60, v61, v55);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v60, 0, 1, v55);
        }
        v63 = v95;
        *(_QWORD *)&v41[v44[8]] = *(_QWORD *)&v42[v44[8]];
        v64 = *(int *)(v95 + 96);
        v65 = &v8[v64];
        v66 = &v9[v64];
        v67 = sub_1BB86EB84();
        v96 = *(_QWORD *)(v67 - 8);
        v68 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
        swift_bridgeObjectRetain();
        v69 = v68;
        v68(v65, v66, v67);
        v70 = *(int *)(v63 + 100);
        v71 = &v8[v70];
        v72 = &v9[v70];
        v93 = v69;
        if (v97(&v9[v70], 1, v55))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v71, v72, v55);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v71, 0, 1, v55);
        }
        sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
        v75 = *(int *)(v74 + 48);
        v76 = &v8[v75];
        v77 = &v9[v75];
        v78 = *(_QWORD *)&v9[v75 + 8];
        *(_QWORD *)v76 = *(_QWORD *)&v9[v75];
        *((_QWORD *)v76 + 1) = v78;
        v79 = (int *)type metadata accessor for FormatMetadata();
        v80 = v79[5];
        v81 = &v76[v80];
        v82 = &v77[v80];
        swift_bridgeObjectRetain();
        v93(v81, v82, v67);
        v93(&v76[v79[6]], &v77[v79[6]], v67);
        v83 = v79[7];
        v84 = &v76[v83];
        v85 = &v77[v83];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(&v77[v83], 1, v67))
        {
          sub_1BA6BF9E8(0);
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          v93(v84, v85, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v84, 0, 1, v67);
        }
        v39 = v100;
        *(_QWORD *)&v76[v79[8]] = *(_QWORD *)&v77[v79[8]];
        *(_QWORD *)&v76[v79[9]] = *(_QWORD *)&v77[v79[9]];
        *(_QWORD *)&v76[v79[10]] = *(_QWORD *)&v77[v79[10]];
        *(_QWORD *)&v76[v79[11]] = *(_QWORD *)&v77[v79[11]];
        v38 = v99;
        v19 = v98;
LABEL_30:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        *(_QWORD *)((char *)v19 + *(int *)(v38 + 24)) = *(_QWORD *)((char *)v39 + *(int *)(v38 + 24));
        goto LABEL_31;
      }
      v16 = *(_OWORD *)v88;
    }
    else
    {
      v16 = *(_OWORD *)v88;
      v17 = v8 + 160;
    }
    *v17 = v16;
    goto LABEL_14;
  }
  v18 = *a2;
  *a1 = *a2;
  v19 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
LABEL_31:
  swift_retain();
  return v19;
}

uint64_t sub_1BA8CFF60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;

  v2 = a1 + *(int *)(a2 + 20);
  sub_1BA6BCBF8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v2 + 168) >= 3uLL)
      swift_bridgeObjectRelease();
    v3 = (int *)type metadata accessor for FormatPackage();
    v4 = v2 + v3[23];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = type metadata accessor for FormatCompilerOptions(0);
    v6 = v4 + *(int *)(v5 + 24);
    if (*(_QWORD *)(v6 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v7 = v6 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    v8 = sub_1BB86E710();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v11 = v4 + *(int *)(v5 + 28);
    if (!v10(v11, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    swift_bridgeObjectRelease();
    v12 = v2 + v3[24];
    v13 = sub_1BB86EB84();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v15(v12, v13);
    v16 = v2 + v3[25];
    if (!v10(v16, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
    sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v18 = v2 + *(int *)(v17 + 48);
    swift_bridgeObjectRelease();
    v19 = (int *)type metadata accessor for FormatMetadata();
    v15(v18 + v19[5], v13);
    v15(v18 + v19[6], v13);
    v20 = v18 + v19[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v20, 1, v13))
      v15(v20, v13);
  }
  else
  {
    v21 = sub_1BB86C67C();
    v22 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v2, v21);
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, v22, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v24 = v2 + *(int *)(v23 + 48);
    swift_bridgeObjectRelease();
    v25 = (int *)type metadata accessor for FormatMetadata();
    v26 = v24 + v25[5];
    v27 = sub_1BB86EB84();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v29(v26, v27);
    v29(v24 + v25[6], v27);
    v30 = v24 + v25[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v27))
      v29(v30, v27);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *sub_1BA8D0314(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _OWORD *v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  int *v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  sub_1BA6BCBF8(0);
  v92 = a1;
  v94 = a2;
  v93 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *((_QWORD *)v8 + 1);
    *(_QWORD *)v7 = *(_QWORD *)v8;
    *((_QWORD *)v7 + 1) = v9;
    v10 = *((_QWORD *)v8 + 3);
    *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
    *((_QWORD *)v7 + 3) = v10;
    v11 = *((_QWORD *)v8 + 5);
    *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
    *((_QWORD *)v7 + 5) = v11;
    *((_WORD *)v7 + 24) = *((_WORD *)v8 + 24);
    v12 = *((_QWORD *)v8 + 8);
    *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
    *((_QWORD *)v7 + 8) = v12;
    v13 = *((_QWORD *)v8 + 10);
    *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
    *((_QWORD *)v7 + 10) = v13;
    v14 = *((_QWORD *)v8 + 12);
    *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
    *((_QWORD *)v7 + 12) = v14;
    v85 = *((_QWORD *)v8 + 14);
    *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
    *((_QWORD *)v7 + 14) = v85;
    v86 = *((_QWORD *)v8 + 16);
    *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
    *((_QWORD *)v7 + 16) = v86;
    v87 = *((_QWORD *)v8 + 18);
    *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
    *((_QWORD *)v7 + 18) = v87;
    *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
    v84 = v8 + 160;
    v89 = *((_QWORD *)v8 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v89 >= 2)
    {
      v16 = v7 + 160;
      if (v89 != 2)
      {
        v7[160] = *v84;
        *((_QWORD *)v7 + 21) = v89;
        swift_bridgeObjectRetain();
LABEL_12:
        v91 = (int *)type metadata accessor for FormatPackage();
        v38 = v91[23];
        v39 = &v7[v38];
        v40 = &v8[v38];
        v41 = *(_QWORD *)&v8[v38 + 8];
        *(_QWORD *)v39 = *(_QWORD *)&v8[v38];
        *((_QWORD *)v39 + 1) = v41;
        v42 = (int *)type metadata accessor for FormatCompilerOptions(0);
        v43 = v42[6];
        v44 = &v39[v43];
        v45 = &v40[v43];
        v46 = *(_QWORD *)&v40[v43 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v46 == 1)
        {
          v47 = *((_OWORD *)v45 + 1);
          *(_OWORD *)v44 = *(_OWORD *)v45;
          *((_OWORD *)v44 + 1) = v47;
          *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
        }
        else
        {
          *(_QWORD *)v44 = *(_QWORD *)v45;
          *((_QWORD *)v44 + 1) = v46;
          v48 = *((_QWORD *)v45 + 3);
          *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
          *((_QWORD *)v44 + 3) = v48;
          v49 = *((_QWORD *)v45 + 5);
          *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
          *((_QWORD *)v44 + 5) = v49;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v50 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v51 = &v44[v50];
        v52 = &v45[v50];
        v53 = sub_1BB86E710();
        v54 = *(_QWORD *)(v53 - 8);
        v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
        if (v55(v52, 1, v53))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
        }
        v57 = v42[7];
        v58 = &v39[v57];
        v59 = &v40[v57];
        v90 = v55;
        if (v55(&v40[v57], 1, v53))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v58, v59, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v58, 0, 1, v53);
        }
        *(_QWORD *)&v39[v42[8]] = *(_QWORD *)&v40[v42[8]];
        v61 = v91[24];
        v62 = &v7[v61];
        v63 = &v8[v61];
        v64 = sub_1BB86EB84();
        v88 = *(_QWORD *)(v64 - 8);
        v65 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
        swift_bridgeObjectRetain();
        v65(v62, v63, v64);
        v66 = v91[25];
        v67 = &v7[v66];
        v68 = &v8[v66];
        if (v90(&v8[v66], 1, v53))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v67, v68, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v67, 0, 1, v53);
        }
        sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
        v71 = *(int *)(v70 + 48);
        v72 = &v7[v71];
        v73 = &v8[v71];
        v74 = *(_QWORD *)&v8[v71 + 8];
        *(_QWORD *)v72 = *(_QWORD *)&v8[v71];
        *((_QWORD *)v72 + 1) = v74;
        v75 = (int *)type metadata accessor for FormatMetadata();
        v76 = v75[5];
        v77 = &v72[v76];
        v78 = &v73[v76];
        swift_bridgeObjectRetain();
        v65(v77, v78, v64);
        v65(&v72[v75[6]], &v73[v75[6]], v64);
        v79 = v75[7];
        v80 = &v72[v79];
        v81 = &v73[v79];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(&v73[v79], 1, v64))
        {
          sub_1BA6BF9E8(0);
          memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
        }
        else
        {
          v65(v80, v81, v64);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v80, 0, 1, v64);
        }
        v37 = v94;
        *(_QWORD *)&v72[v75[8]] = *(_QWORD *)&v73[v75[8]];
        *(_QWORD *)&v72[v75[9]] = *(_QWORD *)&v73[v75[9]];
        *(_QWORD *)&v72[v75[10]] = *(_QWORD *)&v73[v75[10]];
        *(_QWORD *)&v72[v75[11]] = *(_QWORD *)&v73[v75[11]];
        v36 = v93;
        v35 = v92;
        goto LABEL_28;
      }
      v15 = *(_OWORD *)v84;
    }
    else
    {
      v15 = *(_OWORD *)v84;
      v16 = v7 + 160;
    }
    *v16 = v15;
    goto LABEL_12;
  }
  v17 = sub_1BB86C67C();
  v18 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v7, v8, v17);
  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, v18, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v20 = *(int *)(v19 + 48);
  v21 = &v7[v20];
  v22 = &v8[v20];
  v23 = *(_QWORD *)&v8[v20 + 8];
  *(_QWORD *)v21 = *(_QWORD *)&v8[v20];
  *((_QWORD *)v21 + 1) = v23;
  v24 = (int *)type metadata accessor for FormatMetadata();
  v25 = v24[5];
  v26 = &v21[v25];
  v27 = &v22[v25];
  v28 = sub_1BB86EB84();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  swift_bridgeObjectRetain();
  v30(v26, v27, v28);
  v30(&v21[v24[6]], &v22[v24[6]], v28);
  v31 = v24[7];
  v32 = &v21[v31];
  v33 = &v22[v31];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(&v22[v31], 1, v28))
  {
    sub_1BA6BF9E8(0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v30(v32, v33, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v32, 0, 1, v28);
  }
  v35 = v92;
  v36 = v93;
  *(_QWORD *)&v21[v24[8]] = *(_QWORD *)&v22[v24[8]];
  *(_QWORD *)&v21[v24[9]] = *(_QWORD *)&v22[v24[9]];
  *(_QWORD *)&v21[v24[10]] = *(_QWORD *)&v22[v24[10]];
  *(_QWORD *)&v21[v24[11]] = *(_QWORD *)&v22[v24[11]];
  v37 = v94;
LABEL_28:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)v35 + *(int *)(v36 + 24)) = *(_QWORD *)((char *)v37 + *(int *)(v36 + 24));
  swift_retain();
  return v35;
}

_QWORD *sub_1BA8D0A3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __int128 v9;
  _OWORD *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  __int128 *v74;
  uint64_t v75;
  int *v76;
  void (*v77)(char *, char *, uint64_t);
  unint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BA4A2E80((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA6BCBF8(0);
    v80 = v5;
    v82 = v4;
    v81 = v3;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v11 = sub_1BB86C67C();
      v12 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
      sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, v12, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      v14 = *(int *)(v13 + 48);
      v15 = &v7[v14];
      v16 = &v8[v14];
      *(_QWORD *)v15 = *(_QWORD *)&v8[v14];
      *((_QWORD *)v15 + 1) = *(_QWORD *)&v8[v14 + 8];
      v17 = (int *)type metadata accessor for FormatMetadata();
      v18 = v17[5];
      v19 = &v15[v18];
      v20 = &v16[v18];
      v21 = sub_1BB86EB84();
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      swift_bridgeObjectRetain();
      v23(v19, v20, v21);
      v23(&v15[v17[6]], &v16[v17[6]], v21);
      v24 = v17[7];
      v25 = &v15[v24];
      v26 = &v16[v24];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(&v16[v24], 1, v21))
      {
        sub_1BA6BF9E8(0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v23(v25, v26, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
      }
      v5 = v80;
      *(_QWORD *)&v15[v17[8]] = *(_QWORD *)&v16[v17[8]];
      *(_QWORD *)&v15[v17[9]] = *(_QWORD *)&v16[v17[9]];
      *(_QWORD *)&v15[v17[10]] = *(_QWORD *)&v16[v17[10]];
      *(_QWORD *)&v15[v17[11]] = *(_QWORD *)&v16[v17[11]];
      v4 = v82;
      v3 = v81;
      goto LABEL_29;
    }
    *(_QWORD *)v7 = *(_QWORD *)v8;
    *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
    *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
    *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
    *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
    *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
    v7[48] = v8[48];
    v7[49] = v8[49];
    *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
    *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
    *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
    *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
    *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
    *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
    *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
    *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
    *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
    *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
    *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
    *((_QWORD *)v7 + 18) = *((_QWORD *)v8 + 18);
    *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
    v74 = (__int128 *)(v8 + 160);
    v78 = *((_QWORD *)v8 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v78 >= 2)
    {
      v10 = v7 + 160;
      if (v78 != 2)
      {
        v7[160] = v8[160];
        *((_QWORD *)v7 + 21) = *((_QWORD *)v8 + 21);
        swift_bridgeObjectRetain();
LABEL_13:
        v76 = (int *)type metadata accessor for FormatPackage();
        v28 = v76[23];
        v29 = &v7[v28];
        v30 = &v8[v28];
        *(_QWORD *)v29 = *(_QWORD *)&v8[v28];
        *((_QWORD *)v29 + 1) = *(_QWORD *)&v8[v28 + 8];
        v31 = (int *)type metadata accessor for FormatCompilerOptions(0);
        v32 = v31[6];
        v33 = &v29[v32];
        v34 = &v30[v32];
        v35 = *(_QWORD *)&v30[v32 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v35 == 1)
        {
          v36 = *(_OWORD *)v34;
          v37 = *((_OWORD *)v34 + 2);
          *((_OWORD *)v33 + 1) = *((_OWORD *)v34 + 1);
          *((_OWORD *)v33 + 2) = v37;
          *(_OWORD *)v33 = v36;
        }
        else
        {
          *(_QWORD *)v33 = *(_QWORD *)v34;
          *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
          *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
          *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
          *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
          *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v38 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v39 = &v33[v38];
        v40 = &v34[v38];
        v41 = sub_1BB86E710();
        v42 = *(_QWORD *)(v41 - 8);
        v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
        if (v43(v40, 1, v41))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        v45 = v31[7];
        v46 = &v29[v45];
        v47 = &v30[v45];
        v75 = v42;
        v79 = v43;
        if (v43(&v30[v45], 1, v41))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v46, v47, v41);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v46, 0, 1, v41);
        }
        *(_QWORD *)&v29[v31[8]] = *(_QWORD *)&v30[v31[8]];
        v49 = v76[24];
        v50 = &v7[v49];
        v51 = &v8[v49];
        v52 = sub_1BB86EB84();
        v53 = *(_QWORD *)(v52 - 8);
        v54 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
        swift_bridgeObjectRetain();
        v55 = v54;
        v54(v50, v51, v52);
        v56 = v76[25];
        v57 = &v7[v56];
        v58 = &v8[v56];
        v77 = v55;
        if (v79(&v8[v56], 1, v41))
        {
          sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v57, v58, v41);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v57, 0, 1, v41);
        }
        v60 = v53;
        sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
        v62 = *(int *)(v61 + 48);
        v63 = &v7[v62];
        v64 = &v8[v62];
        *(_QWORD *)v63 = *(_QWORD *)&v8[v62];
        *((_QWORD *)v63 + 1) = *(_QWORD *)&v8[v62 + 8];
        v65 = (int *)type metadata accessor for FormatMetadata();
        v66 = v65[5];
        v67 = &v63[v66];
        v68 = &v64[v66];
        swift_bridgeObjectRetain();
        v55(v67, v68, v52);
        v55(&v63[v65[6]], &v64[v65[6]], v52);
        v69 = v65[7];
        v70 = &v63[v69];
        v71 = &v64[v69];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(&v64[v69], 1, v52))
        {
          sub_1BA6BF9E8(0);
          memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          v77(v70, v71, v52);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v70, 0, 1, v52);
        }
        v4 = v82;
        v3 = v81;
        *(_QWORD *)&v63[v65[8]] = *(_QWORD *)&v64[v65[8]];
        *(_QWORD *)&v63[v65[9]] = *(_QWORD *)&v64[v65[9]];
        *(_QWORD *)&v63[v65[10]] = *(_QWORD *)&v64[v65[10]];
        *(_QWORD *)&v63[v65[11]] = *(_QWORD *)&v64[v65[11]];
        v5 = v80;
LABEL_29:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
      }
      v9 = *v74;
    }
    else
    {
      v9 = *v74;
      v10 = v7 + 160;
    }
    *v10 = v9;
    goto LABEL_13;
  }
LABEL_30:
  *(_QWORD *)((char *)v5 + *(int *)(v3 + 24)) = *(_QWORD *)((char *)v4 + *(int *)(v3 + 24));
  swift_retain();
  swift_release();
  return v5;
}

_QWORD *sub_1BA8D1220(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  int *v69;
  _QWORD *v70;

  v3 = a1;
  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  sub_1BA6BCBF8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v70 = v3;
    v7 = *((_OWORD *)v6 + 1);
    *(_OWORD *)v5 = *(_OWORD *)v6;
    *((_OWORD *)v5 + 1) = v7;
    *((_OWORD *)v5 + 2) = *((_OWORD *)v6 + 2);
    *((_WORD *)v5 + 24) = *((_WORD *)v6 + 24);
    *(_OWORD *)(v5 + 56) = *(_OWORD *)(v6 + 56);
    *(_OWORD *)(v5 + 72) = *(_OWORD *)(v6 + 72);
    *(_OWORD *)(v5 + 88) = *(_OWORD *)(v6 + 88);
    *(_OWORD *)(v5 + 104) = *(_OWORD *)(v6 + 104);
    *(_OWORD *)(v5 + 120) = *(_OWORD *)(v6 + 120);
    *(_OWORD *)(v5 + 136) = *(_OWORD *)(v6 + 136);
    *((_QWORD *)v5 + 19) = *((_QWORD *)v6 + 19);
    *((_OWORD *)v5 + 10) = *((_OWORD *)v6 + 10);
    v69 = (int *)type metadata accessor for FormatPackage();
    v8 = v69[23];
    v9 = &v5[v8];
    v10 = &v6[v8];
    *(_OWORD *)&v5[v8] = *(_OWORD *)&v6[v8];
    v11 = (int *)type metadata accessor for FormatCompilerOptions(0);
    v12 = v11[6];
    v13 = &v9[v12];
    v14 = &v10[v12];
    v15 = *(_OWORD *)&v10[v12 + 16];
    *(_OWORD *)v13 = *(_OWORD *)&v10[v12];
    *((_OWORD *)v13 + 1) = v15;
    *((_OWORD *)v13 + 2) = *(_OWORD *)&v10[v12 + 32];
    v16 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    v17 = &v13[v16];
    v18 = &v14[v16];
    v19 = sub_1BB86E710();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    v68 = v20;
    if (v21(v18, 1, v19))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v40 = v11[7];
    v41 = &v9[v40];
    v42 = &v10[v40];
    if (v21(&v10[v40], 1, v19))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v41, v42, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v41, 0, 1, v19);
    }
    *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
    v47 = v69[24];
    v48 = &v5[v47];
    v49 = &v6[v47];
    v50 = sub_1BB86EB84();
    v51 = *(_QWORD *)(v50 - 8);
    v52 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
    v52(v48, v49, v50);
    v53 = v69[25];
    v54 = &v5[v53];
    v55 = &v6[v53];
    if (v21(&v6[v53], 1, v19))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v54, v55, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v54, 0, 1, v19);
    }
    v3 = v70;
    sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v58 = *(int *)(v57 + 48);
    v59 = &v5[v58];
    v60 = &v6[v58];
    *(_OWORD *)&v5[v58] = *(_OWORD *)&v6[v58];
    v61 = (int *)type metadata accessor for FormatMetadata();
    v52(&v59[v61[5]], &v60[v61[5]], v50);
    v52(&v59[v61[6]], &v60[v61[6]], v50);
    v62 = v61[7];
    v63 = &v59[v62];
    v64 = &v60[v62];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(&v60[v62], 1, v50))
    {
      sub_1BA6BF9E8(0);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      v52(v63, v64, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v63, 0, 1, v50);
    }
    *(_QWORD *)&v59[v61[8]] = *(_QWORD *)&v60[v61[8]];
    *(_QWORD *)&v59[v61[9]] = *(_QWORD *)&v60[v61[9]];
    *(_QWORD *)&v59[v61[10]] = *(_QWORD *)&v60[v61[10]];
    v66 = v61[11];
    v45 = &v59[v66];
    v46 = &v60[v66];
  }
  else
  {
    v23 = sub_1BB86C67C();
    v24 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v5, v6, v23);
    sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, v24, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    v26 = *(int *)(v25 + 48);
    v27 = &v5[v26];
    v28 = &v6[v26];
    *(_OWORD *)&v5[v26] = *(_OWORD *)&v6[v26];
    v29 = (int *)type metadata accessor for FormatMetadata();
    v30 = v29[5];
    v31 = &v27[v30];
    v32 = &v28[v30];
    v33 = sub_1BB86EB84();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    v35(v31, v32, v33);
    v35(&v27[v29[6]], &v28[v29[6]], v33);
    v36 = v29[7];
    v37 = &v27[v36];
    v38 = &v28[v36];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(&v28[v36], 1, v33))
    {
      sub_1BA6BF9E8(0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v35(v37, v38, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v37, 0, 1, v33);
    }
    *(_QWORD *)&v27[v29[8]] = *(_QWORD *)&v28[v29[8]];
    *(_QWORD *)&v27[v29[9]] = *(_QWORD *)&v28[v29[9]];
    *(_QWORD *)&v27[v29[10]] = *(_QWORD *)&v28[v29[10]];
    v44 = v29[11];
    v45 = &v27[v44];
    v46 = &v28[v44];
  }
  *(_QWORD *)v45 = *(_QWORD *)v46;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)v3 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return v3;
}

_QWORD *sub_1BA8D17B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  int *v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  _QWORD *v70;

  *a1 = *a2;
  if (a1 != a2)
  {
    v69 = a3;
    v70 = a2;
    v4 = *(int *)(a3 + 20);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    sub_1BA4A2E80((uint64_t)a1 + v4, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA6BCBF8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = *((_OWORD *)v6 + 1);
      *(_OWORD *)v5 = *(_OWORD *)v6;
      *((_OWORD *)v5 + 1) = v7;
      *((_OWORD *)v5 + 2) = *((_OWORD *)v6 + 2);
      *((_WORD *)v5 + 24) = *((_WORD *)v6 + 24);
      *(_OWORD *)(v5 + 56) = *(_OWORD *)(v6 + 56);
      *(_OWORD *)(v5 + 72) = *(_OWORD *)(v6 + 72);
      *(_OWORD *)(v5 + 88) = *(_OWORD *)(v6 + 88);
      *(_OWORD *)(v5 + 104) = *(_OWORD *)(v6 + 104);
      *(_OWORD *)(v5 + 120) = *(_OWORD *)(v6 + 120);
      *(_OWORD *)(v5 + 136) = *(_OWORD *)(v6 + 136);
      *((_QWORD *)v5 + 19) = *((_QWORD *)v6 + 19);
      *((_OWORD *)v5 + 10) = *((_OWORD *)v6 + 10);
      v67 = (int *)type metadata accessor for FormatPackage();
      v8 = v67[23];
      v9 = &v5[v8];
      v10 = &v6[v8];
      *(_OWORD *)&v5[v8] = *(_OWORD *)&v6[v8];
      v11 = (int *)type metadata accessor for FormatCompilerOptions(0);
      v12 = v11[6];
      v13 = &v9[v12];
      v14 = &v10[v12];
      v15 = *(_OWORD *)&v10[v12 + 16];
      *(_OWORD *)v13 = *(_OWORD *)&v10[v12];
      *((_OWORD *)v13 + 1) = v15;
      *((_OWORD *)v13 + 2) = *(_OWORD *)&v10[v12 + 32];
      v16 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v17 = &v13[v16];
      v18 = &v14[v16];
      v19 = sub_1BB86E710();
      v20 = *(_QWORD *)(v19 - 8);
      v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      if (v68(v18, 1, v19))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v39 = v11[7];
      v40 = &v9[v39];
      v41 = &v10[v39];
      if (v68(&v10[v39], 1, v19))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v40, v41, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v40, 0, 1, v19);
      }
      *(_QWORD *)&v9[v11[8]] = *(_QWORD *)&v10[v11[8]];
      v46 = v67[24];
      v47 = &v5[v46];
      v48 = &v6[v46];
      v49 = sub_1BB86EB84();
      v66 = *(_QWORD *)(v49 - 8);
      v50 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
      v50(v47, v48, v49);
      v51 = v67[25];
      v52 = &v5[v51];
      v53 = &v6[v51];
      if (v68(&v6[v51], 1, v19))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v52, v53, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v52, 0, 1, v19);
      }
      sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      v56 = *(int *)(v55 + 48);
      v57 = &v5[v56];
      v58 = &v6[v56];
      *(_OWORD *)&v5[v56] = *(_OWORD *)&v6[v56];
      v59 = (int *)type metadata accessor for FormatMetadata();
      v50(&v57[v59[5]], &v58[v59[5]], v49);
      v50(&v57[v59[6]], &v58[v59[6]], v49);
      v60 = v59[7];
      v61 = &v57[v60];
      v62 = &v58[v60];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(&v58[v60], 1, v49))
      {
        sub_1BA6BF9E8(0);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        v50(v61, v62, v49);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v61, 0, 1, v49);
      }
      *(_QWORD *)&v57[v59[8]] = *(_QWORD *)&v58[v59[8]];
      *(_QWORD *)&v57[v59[9]] = *(_QWORD *)&v58[v59[9]];
      *(_QWORD *)&v57[v59[10]] = *(_QWORD *)&v58[v59[10]];
      v64 = v59[11];
      v44 = &v57[v64];
      v45 = &v58[v64];
    }
    else
    {
      v22 = sub_1BB86C67C();
      v23 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v5, v6, v22);
      sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3B0500, v23, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      v25 = *(int *)(v24 + 48);
      v26 = &v5[v25];
      v27 = &v6[v25];
      *(_OWORD *)&v5[v25] = *(_OWORD *)&v6[v25];
      v28 = (int *)type metadata accessor for FormatMetadata();
      v29 = v28[5];
      v30 = &v26[v29];
      v31 = &v27[v29];
      v32 = sub_1BB86EB84();
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
      v34(v30, v31, v32);
      v34(&v26[v28[6]], &v27[v28[6]], v32);
      v35 = v28[7];
      v36 = &v26[v35];
      v37 = &v27[v35];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(&v27[v35], 1, v32))
      {
        sub_1BA6BF9E8(0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v34(v36, v37, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
      }
      *(_QWORD *)&v26[v28[8]] = *(_QWORD *)&v27[v28[8]];
      *(_QWORD *)&v26[v28[9]] = *(_QWORD *)&v27[v28[9]];
      *(_QWORD *)&v26[v28[10]] = *(_QWORD *)&v27[v28[10]];
      v43 = v28[11];
      v44 = &v26[v43];
      v45 = &v27[v43];
    }
    *(_QWORD *)v44 = *(_QWORD *)v45;
    swift_storeEnumTagMultiPayload();
    a3 = v69;
    a2 = v70;
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_1BA8D1D70()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA8D1D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1BA6BCBF8(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BA8D1DFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BA8D1E08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1BA6BCBF8(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
}

void sub_1BA8D1E84()
{
  unint64_t v0;

  sub_1BA6BCBF8(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BA8D1F08(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  id v9;
  id v10;
  uint64_t v12;

  v2 = *(void **)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(void **)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 120);
  v9 = *(id *)a1;
  swift_bridgeObjectRetain();
  v10 = v2;
  sub_1BA8D1FA8(v3, v4, v5, v6, v7);
  sub_1BA75A650(v12, v8);
  return a1;
}

uint64_t sub_1BA8D1FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v5;
  uint64_t result;

  if (a2 != 1)
  {
    v5 = a5;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA8D1FE4(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(void **)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 128);
  v10 = *(_QWORD *)(a1 + 120);

  swift_bridgeObjectRelease();
  sub_1BA7B9D78(v3, v4, v5, v6, v7);
  sub_1BA6E0CBC(v10, v8);
  return a1;
}

uint64_t sub_1BA8D20C0()
{
  return sub_1BA8CE6BC();
}

uint64_t sub_1BA8D20D4(_QWORD *a1, unint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  return sub_1BA8CB864(a1, a2, a3, a4);
}

uint64_t storeEnumTagSinglePayload for DebugFormatTestSubject(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA8D2134 + 4 * byte_1BB87FE95[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA8D2168 + 4 * byte_1BB87FE90[v4]))();
}

uint64_t sub_1BA8D2168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8D2170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8D2178);
  return result;
}

uint64_t sub_1BA8D2184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8D218CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA8D2190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8D2198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestSubject()
{
  return &type metadata for DebugFormatTestSubject;
}

unint64_t sub_1BA8D21B8()
{
  unint64_t result;

  result = qword_1EF2A98A0;
  if (!qword_1EF2A98A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88004C, &type metadata for DebugFormatTestSubject);
    atomic_store(result, (unint64_t *)&qword_1EF2A98A0);
  }
  return result;
}

void sub_1BA8D21FC(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D2254()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D22F0(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D233C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8D23A4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8D244C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D24F4(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D253C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D25C8(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D2624()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D26E0(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D2734()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8D27C8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D284C(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D289C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D2954(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D29A8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D2A34(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D2A90()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D2B18(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D2B6C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D2BEC(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D2C48()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D2CEC(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D2D34()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D2DB8(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D2E08()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D2EAC(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D2EF8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D2F94(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D2FE4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3078(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D30CC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3170(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D31BC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3270(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D32C4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D333C(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D3394()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3430(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D348C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8D3534()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D35B8(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D3600()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D369C(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D36F0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3764(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D37B8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8D3848()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8D38C4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3948(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D39A4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3A28(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D3A78()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3B24(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D3B7C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8D3C04()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3CB0(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D3D04()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8D3D94()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3E38(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D3E94()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D3F3C(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D3F94()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D4020(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D406C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D410C(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D4160()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D420C(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D4264()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D42FC(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D4348()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D43DC(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D4430()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D44E8(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D4530()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8D45B8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D4664(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D46B4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA8D4760(char a1)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BA8D47AC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

unint64_t sub_1BA8D4854(char a1)
{
  unint64_t result;

  result = 0xD000000000000017;
  if (a1)
  {
    if (a1 == 1)
      return 0xD00000000000001ALL;
    else
      return 0xD000000000000021;
  }
  return result;
}

uint64_t sub_1BA8D48B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F8428(*a1, *a2);
}

uint64_t sub_1BA8D48C0()
{
  return sub_1BA8D23A4();
}

uint64_t sub_1BA8D48C8()
{
  return sub_1BA9D2898();
}

uint64_t sub_1BA8D48D0()
{
  return sub_1BAB091C4();
}

uint64_t sub_1BA8D48D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA8D4A5C();
  *a1 = result;
  return result;
}

unint64_t sub_1BA8D4904@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_1BA8D4854(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BA8D492C()
{
  sub_1BA8D4AA4();
  return sub_1BB872CDC();
}

uint64_t sub_1BA8D496C()
{
  sub_1BA8D4AA4();
  return sub_1BB872CD0();
}

uint64_t sub_1BA8D49B4()
{
  sub_1BA8D4AA4();
  return sub_1BB872CC4();
}

unint64_t sub_1BA8D49F4(char a1)
{
  unint64_t result;

  result = 0xD000000000000015;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000018;
    else
      return 0xD000000000000024;
  }
  return result;
}

unint64_t sub_1BA8D4A54()
{
  char *v0;

  return sub_1BA8D49F4(*v0);
}

uint64_t sub_1BA8D4A5C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1BA8D4AA4()
{
  unint64_t result;

  result = qword_1EF2BCF90;
  if (!qword_1EF2BCF90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87FFD4, &type metadata for DebugFormatTestSubject);
    atomic_store(result, (unint64_t *)&qword_1EF2BCF90);
  }
  return result;
}

uint64_t LayeredMediaRenderedViewModel.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t LayeredMediaRenderedViewModel.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LayeredMediaRenderedViewModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for LayeredMediaRenderedViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA8D4B64(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v35)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return a1;
  }
  v8 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v8;
  v9 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v9;
  v10 = a2[5];
  v11 = a2[6];
  v12 = *((_BYTE *)a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA8D4E00(v10, v11, v12);
  *(_QWORD *)(a1 + 40) = v10;
  *(_QWORD *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 56) = v12;
  v13 = *(int *)(a3 + 28);
  v14 = (char *)(a1 + v13);
  v15 = (char *)a2 + v13;
  sub_1BA8D4E18();
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16))
  {
    v20 = type metadata accessor for FormatVersionRequirement(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v20))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_14:
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v27 = sub_1BB86EB84();
      v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      v35(v14, v15, v27);
      sub_1BA6F3F88();
      v29 = v28;
      v35(&v14[*(int *)(v28 + 48)], &v15[*(int *)(v28 + 48)], v27);
      v26 = *(int *)(v29 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v33 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v14, v15, v33);
        goto LABEL_13;
      }
      v24 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v14, v15, v24);
      sub_1BA8D4E7C();
      v26 = *(int *)(v25 + 48);
    }
    v30 = &v14[v26];
    v31 = &v15[v26];
    v32 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v32;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v14, 0, 1, v20);
    goto LABEL_14;
  }
  v19 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  return a1;
}

uint64_t sub_1BA8D4E00(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

void sub_1BA8D4E18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A98A8)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A98A8);
  }
}

void sub_1BA8D4E7C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2A98B0)
  {
    sub_1BB86EB84();
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2A98B0);
  }
}

uint64_t type metadata accessor for FormatDerivedDataOptionReferenceResolution(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1EF2A99C0);
}

uint64_t sub_1BA8D4F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA8D5088(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  v4 = a1 + *(int *)(a2 + 28);
  sub_1BA8D4E18();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = type metadata accessor for FormatVersionRequirement(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7);
    if (!(_DWORD)result)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      result = swift_getEnumCaseMultiPayload();
      switch((_DWORD)result)
      {
        case 2:
          v9 = sub_1BB86EB84();
          v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
          v10(v4, v9);
          sub_1BA6F3F88();
          v10(v4 + *(int *)(v11 + 48), v9);
          break;
        case 1:
          v12 = sub_1BB86EB84();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v4, v12);
          sub_1BA8D4E7C();
          break;
        case 0:
          v8 = sub_1BB86EB84();
          return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v4, v8);
        default:
          return result;
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BA8D5088(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BA8D50A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v33)(char *, char *, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA8D4E00(v8, v9, v10);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  v11 = *(int *)(a3 + 28);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  sub_1BA8D4E18();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14))
  {
    v18 = type metadata accessor for FormatVersionRequirement(0);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_12:
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v25 = sub_1BB86EB84();
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      v33(v12, v13, v25);
      sub_1BA6F3F88();
      v27 = v26;
      v33(&v12[*(int *)(v26 + 48)], &v13[*(int *)(v26 + 48)], v25);
      v24 = *(int *)(v27 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v31 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v12, v13, v31);
        goto LABEL_11;
      }
      v22 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v12, v13, v22);
      sub_1BA8D4E7C();
      v24 = *(int *)(v23 + 48);
    }
    v28 = &v12[v24];
    v29 = &v13[v24];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v18);
    goto LABEL_12;
  }
  v17 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  return a1;
}

uint64_t sub_1BA8D5318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  sub_1BA8D4E00(v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  v11 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v8;
  sub_1BA8D5088(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  sub_1BA8D4E18();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v13, 1, v15);
  v20 = v18(v14, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      v21 = type metadata accessor for FormatVersionRequirement(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_24:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v38 = sub_1BB86EB84();
        v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        v66(v13, v14, v38);
        sub_1BA6F3F88();
        v40 = v39;
        v66(&v13[*(int *)(v39 + 48)], &v14[*(int *)(v39 + 48)], v38);
        v33 = *(int *)(v40 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v43 = sub_1BB86EB84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v13, v14, v43);
          goto LABEL_23;
        }
        v31 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v13, v14, v31);
        sub_1BA8D4E7C();
        v33 = *(int *)(v32 + 48);
      }
      v41 = &v13[v33];
      v42 = &v14[v33];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
      swift_bridgeObjectRetain();
LABEL_23:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v13, 0, 1, v21);
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v20)
  {
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA8D4E18);
LABEL_7:
    v24 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
LABEL_8:
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  v25 = type metadata accessor for FormatVersionRequirement(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v13, 1, v25);
  v29 = v27(v14, 1, v25);
  if (v28)
  {
    if (v29)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      goto LABEL_8;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    v34 = swift_getEnumCaseMultiPayload();
    if (v34 == 2)
    {
      v51 = sub_1BB86EB84();
      v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
      v52(v13, v14, v51);
      sub_1BA6F3F88();
      v54 = v53;
      v52(&v13[*(int *)(v53 + 48)], &v14[*(int *)(v53 + 48)], v51);
      v37 = *(int *)(v54 + 64);
    }
    else
    {
      if (v34 != 1)
      {
        v57 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v13, v14, v57);
        goto LABEL_34;
      }
      v35 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v13, v14, v35);
      sub_1BA8D4E7C();
      v37 = *(int *)(v36 + 48);
    }
    v55 = &v13[v37];
    v56 = &v14[v37];
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
    swift_bridgeObjectRetain();
LABEL_34:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v13, 0, 1, v25);
    return a1;
  }
  if (v29)
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v45 = swift_getEnumCaseMultiPayload();
    if (v45 == 2)
    {
      v58 = sub_1BB86EB84();
      v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
      v59(v13, v14, v58);
      sub_1BA6F3F88();
      v61 = v60;
      v59(&v13[*(int *)(v60 + 48)], &v14[*(int *)(v60 + 48)], v58);
      v62 = *(int *)(v61 + 64);
      v63 = &v13[v62];
      v64 = &v14[v62];
      *(_QWORD *)v63 = *(_QWORD *)v64;
      *((_QWORD *)v63 + 1) = *((_QWORD *)v64 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v45 == 1)
      {
        v46 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v13, v14, v46);
        sub_1BA8D4E7C();
        v48 = *(int *)(v47 + 48);
        v49 = &v13[v48];
        v50 = &v14[v48];
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        v65 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v13, v14, v65);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BA8D58DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v23)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = *(int *)(a3 + 28);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  sub_1BA8D4E18();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7))
  {
    v11 = type metadata accessor for FormatVersionRequirement(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_12:
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = sub_1BB86EB84();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
      v23(v5, v6, v18);
      sub_1BA6F3F88();
      v20 = v19;
      v23(&v5[*(int *)(v19 + 48)], &v6[*(int *)(v19 + 48)], v18);
      v17 = *(int *)(v20 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v21 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v5, v6, v21);
        goto LABEL_11;
      }
      v15 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v5, v6, v15);
      sub_1BA8D4E7C();
      v17 = *(int *)(v16 + 48);
    }
    *(_OWORD *)&v5[v17] = *(_OWORD *)&v6[v17];
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
    goto LABEL_12;
  }
  v10 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  return a1;
}

uint64_t sub_1BA8D5B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_BYTE *)(a2 + 56);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v7;
  v11 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v8;
  sub_1BA8D5088(v9, v10, v11);
  v12 = *(int *)(a3 + 28);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  sub_1BA8D4E18();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v13, 1, v15);
  v20 = v18(v14, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      v21 = type metadata accessor for FormatVersionRequirement(0);
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_24:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v38 = sub_1BB86EB84();
        v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32);
        v56(v13, v14, v38);
        sub_1BA6F3F88();
        v40 = v39;
        v56(&v13[*(int *)(v39 + 48)], &v14[*(int *)(v39 + 48)], v38);
        v33 = *(int *)(v40 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v41 = sub_1BB86EB84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v13, v14, v41);
          goto LABEL_23;
        }
        v31 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v13, v14, v31);
        sub_1BA8D4E7C();
        v33 = *(int *)(v32 + 48);
      }
      *(_OWORD *)&v13[v33] = *(_OWORD *)&v14[v33];
LABEL_23:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v13, 0, 1, v21);
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v20)
  {
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA8D4E18);
LABEL_7:
    v24 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
LABEL_8:
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  v25 = type metadata accessor for FormatVersionRequirement(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v13, 1, v25);
  v29 = v27(v14, 1, v25);
  if (v28)
  {
    if (v29)
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      goto LABEL_8;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    v34 = swift_getEnumCaseMultiPayload();
    if (v34 == 2)
    {
      v46 = sub_1BB86EB84();
      v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32);
      v47(v13, v14, v46);
      sub_1BA6F3F88();
      v49 = v48;
      v47(&v13[*(int *)(v48 + 48)], &v14[*(int *)(v48 + 48)], v46);
      v37 = *(int *)(v49 + 64);
    }
    else
    {
      if (v34 != 1)
      {
        v50 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v13, v14, v50);
        goto LABEL_34;
      }
      v35 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v13, v14, v35);
      sub_1BA8D4E7C();
      v37 = *(int *)(v36 + 48);
    }
    *(_OWORD *)&v13[v37] = *(_OWORD *)&v14[v37];
LABEL_34:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v13, 0, 1, v25);
    return a1;
  }
  if (v29)
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 2)
    {
      v51 = sub_1BB86EB84();
      v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32);
      v52(v13, v14, v51);
      sub_1BA6F3F88();
      v54 = v53;
      v52(&v13[*(int *)(v53 + 48)], &v14[*(int *)(v53 + 48)], v51);
      *(_OWORD *)&v13[*(int *)(v54 + 64)] = *(_OWORD *)&v14[*(int *)(v54 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v43 == 1)
      {
        v44 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v13, v14, v44);
        sub_1BA8D4E7C();
        *(_OWORD *)&v13[*(int *)(v45 + 48)] = *(_OWORD *)&v14[*(int *)(v45 + 48)];
      }
      else
      {
        v55 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v13, v14, v55);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BA8D6060()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA8D606C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1BA8D60E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BA8D60F4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataResultOptionReference(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1EF2A9910);
}

uint64_t sub_1BA8D617C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatDerivedDataOptionReferenceResolution(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BA8D6208(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  sub_1BA8D4E18();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
  {
    v11 = type metadata accessor for FormatVersionRequirement(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
LABEL_14:
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = sub_1BB86EB84();
      v19 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v19(a1, a2, v18);
      sub_1BA6F3F88();
      v21 = v20;
      v19((uint64_t *)((char *)a1 + *(int *)(v20 + 48)), (uint64_t *)((char *)a2 + *(int *)(v20 + 48)), v18);
      v17 = *(int *)(v21 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v25 = sub_1BB86EB84();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
        goto LABEL_13;
      }
      v15 = sub_1BB86EB84();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      sub_1BA8D4E7C();
      v17 = *(int *)(v16 + 48);
    }
    v22 = (uint64_t *)((char *)a1 + v17);
    v23 = (uint64_t *)((char *)a2 + v17);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    goto LABEL_14;
  }
  memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  return a1;
}

uint64_t sub_1BA8D6440(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  sub_1BA8D4E18();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for FormatVersionRequirement(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
    if (!(_DWORD)result)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      result = swift_getEnumCaseMultiPayload();
      switch((_DWORD)result)
      {
        case 2:
          v6 = sub_1BB86EB84();
          v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
          v7(a1, v6);
          sub_1BA6F3F88();
          v7(a1 + *(int *)(v8 + 48), v6);
          break;
        case 1:
          v9 = sub_1BB86EB84();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
          sub_1BA8D4E7C();
          break;
        case 0:
          v5 = sub_1BB86EB84();
          return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        default:
          return result;
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

char *sub_1BA8D6580(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  sub_1BA8D4E18();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    v9 = type metadata accessor for FormatVersionRequirement(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_12:
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v16 = sub_1BB86EB84();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(a1, a2, v16);
      sub_1BA6F3F88();
      v19 = v18;
      v17(&a1[*(int *)(v18 + 48)], &a2[*(int *)(v18 + 48)], v16);
      v15 = *(int *)(v19 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v23 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        goto LABEL_11;
      }
      v13 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      sub_1BA8D4E7C();
      v15 = *(int *)(v14 + 48);
    }
    v20 = &a1[v15];
    v21 = &a2[v15];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1BA8D6794(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);

  sub_1BA8D4E18();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (v10)
  {
    if (!v11)
    {
      v12 = type metadata accessor for FormatVersionRequirement(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_25:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v31 = sub_1BB86EB84();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
        v59(a1, a2, v31);
        sub_1BA6F3F88();
        v33 = v32;
        v59(&a1[*(int *)(v32 + 48)], &a2[*(int *)(v32 + 48)], v31);
        v25 = *(int *)(v33 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v36 = sub_1BB86EB84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
          goto LABEL_24;
        }
        v23 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        sub_1BA8D4E7C();
        v25 = *(int *)(v24 + 48);
      }
      v34 = &a1[v25];
      v35 = &a2[v25];
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
      swift_bridgeObjectRetain();
LABEL_24:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      goto LABEL_25;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1BA8D4E18);
LABEL_7:
    v15 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v15 + 64));
    return a1;
  }
  v16 = type metadata accessor for FormatVersionRequirement(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(a1, 1, v16);
  v20 = v18(a2, 1, v16);
  if (v19)
  {
    if (v20)
    {
      v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_17:
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, v21);
      v15 = *(_QWORD *)(v26 - 8);
      goto LABEL_8;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    v27 = swift_getEnumCaseMultiPayload();
    if (v27 == 2)
    {
      v44 = sub_1BB86EB84();
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      v45(a1, a2, v44);
      sub_1BA6F3F88();
      v47 = v46;
      v45(&a1[*(int *)(v46 + 48)], &a2[*(int *)(v46 + 48)], v44);
      v30 = *(int *)(v47 + 64);
    }
    else
    {
      if (v27 != 1)
      {
        v50 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(a1, a2, v50);
        goto LABEL_35;
      }
      v28 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
      sub_1BA8D4E7C();
      v30 = *(int *)(v29 + 48);
    }
    v48 = &a1[v30];
    v49 = &a2[v30];
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
    swift_bridgeObjectRetain();
LABEL_35:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
    return a1;
  }
  if (v20)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatVersionRequirement);
    v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_17;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v38 = swift_getEnumCaseMultiPayload();
    if (v38 == 2)
    {
      v51 = sub_1BB86EB84();
      v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
      v52(a1, a2, v51);
      sub_1BA6F3F88();
      v54 = v53;
      v52(&a1[*(int *)(v53 + 48)], &a2[*(int *)(v53 + 48)], v51);
      v55 = *(int *)(v54 + 64);
      v56 = &a1[v55];
      v57 = &a2[v55];
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v38 == 1)
      {
        v39 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
        sub_1BA8D4E7C();
        v41 = *(int *)(v40 + 48);
        v42 = &a1[v41];
        v43 = &a2[v41];
        *(_QWORD *)v42 = *(_QWORD *)v43;
        *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        v58 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(a1, a2, v58);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *sub_1BA8D6CBC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, char *, uint64_t);

  sub_1BA8D4E18();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    v9 = type metadata accessor for FormatVersionRequirement(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_12:
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v16 = sub_1BB86EB84();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v21(a1, a2, v16);
      sub_1BA6F3F88();
      v18 = v17;
      v21(&a1[*(int *)(v17 + 48)], &a2[*(int *)(v17 + 48)], v16);
      v15 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v19 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        goto LABEL_11;
      }
      v13 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      sub_1BA8D4E7C();
      v15 = *(int *)(v14 + 48);
    }
    *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_1BA8D6EC4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);

  sub_1BA8D4E18();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 1, v6);
  v11 = v9(a2, 1, v7);
  if (v10)
  {
    if (!v11)
    {
      v12 = type metadata accessor for FormatVersionRequirement(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_25:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v31 = sub_1BB86EB84();
        v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32);
        v49(a1, a2, v31);
        sub_1BA6F3F88();
        v33 = v32;
        v49(&a1[*(int *)(v32 + 48)], &a2[*(int *)(v32 + 48)], v31);
        v25 = *(int *)(v33 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v34 = sub_1BB86EB84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(a1, a2, v34);
          goto LABEL_24;
        }
        v23 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
        sub_1BA8D4E7C();
        v25 = *(int *)(v24 + 48);
      }
      *(_OWORD *)&a1[v25] = *(_OWORD *)&a2[v25];
LABEL_24:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      goto LABEL_25;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))sub_1BA8D4E18);
LABEL_7:
    v15 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v15 + 64));
    return a1;
  }
  v16 = type metadata accessor for FormatVersionRequirement(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(a1, 1, v16);
  v20 = v18(a2, 1, v16);
  if (v19)
  {
    if (v20)
    {
      v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_17:
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, v21);
      v15 = *(_QWORD *)(v26 - 8);
      goto LABEL_8;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    v27 = swift_getEnumCaseMultiPayload();
    if (v27 == 2)
    {
      v39 = sub_1BB86EB84();
      v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32);
      v40(a1, a2, v39);
      sub_1BA6F3F88();
      v42 = v41;
      v40(&a1[*(int *)(v41 + 48)], &a2[*(int *)(v41 + 48)], v39);
      v30 = *(int *)(v42 + 64);
    }
    else
    {
      if (v27 != 1)
      {
        v43 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(a1, a2, v43);
        goto LABEL_35;
      }
      v28 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(a1, a2, v28);
      sub_1BA8D4E7C();
      v30 = *(int *)(v29 + 48);
    }
    *(_OWORD *)&a1[v30] = *(_OWORD *)&a2[v30];
LABEL_35:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
    return a1;
  }
  if (v20)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatVersionRequirement);
    v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    goto LABEL_17;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v36 = swift_getEnumCaseMultiPayload();
    if (v36 == 2)
    {
      v44 = sub_1BB86EB84();
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32);
      v45(a1, a2, v44);
      sub_1BA6F3F88();
      v47 = v46;
      v45(&a1[*(int *)(v46 + 48)], &a2[*(int *)(v46 + 48)], v44);
      *(_OWORD *)&a1[*(int *)(v47 + 64)] = *(_OWORD *)&a2[*(int *)(v47 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v36 == 1)
      {
        v37 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(a1, a2, v37);
        sub_1BA8D4E7C();
        *(_OWORD *)&a1[*(int *)(v38 + 48)] = *(_OWORD *)&a2[*(int *)(v38 + 48)];
      }
      else
      {
        v48 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(a1, a2, v48);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BA8D739C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA8D73A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  sub_1BA8D4E18();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1BA8D73F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA8D7400(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  sub_1BA8D4E18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1BA8D7450(uint64_t a1)
{
  uint64_t v2;

  sub_1BA8D4E18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1BA8D7488(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA8D4E18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

void sub_1BA8D74C8()
{
  unint64_t v0;

  sub_1BA4B07F0(319, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

uint64_t sub_1BA8D7534()
{
  return sub_1BA4A2870(&qword_1EF2A99D0, type metadata accessor for FormatDerivedDataOptionReferenceResolution, (uint64_t)&unk_1BB8801BC);
}

uint64_t sub_1BA8D7560(__int128 *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v3 = v2;
  v38 = a2;
  sub_1BA4B07F0(0, &qword_1EF2A99E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v36 - v6;
  v37 = type metadata accessor for FormatDerivedDataOption();
  v8 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v45 = a1[2];
  v46 = v18;
  v19 = a1[1];
  v43 = *a1;
  v44 = v19;
  v20 = *(_QWORD *)(*((_QWORD *)&v19 + 1) + 16);
  sub_1BA4C2DD8((uint64_t)v3, (uint64_t)v17, v21);
  if (v20)
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatDerivedDataResultOptionReference);
  }
  else
  {
    v22 = (uint64_t)&v17[*(int *)(v14 + 28)];
    sub_1BA8D4E18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 1, 1, v23);
    LOBYTE(v22) = sub_1BA8D8274(v22, (uint64_t)v13);
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatDerivedDataResultOptionReference);
    if ((v22 & 1) == 0)
    {
      sub_1BA4B07F0(0, &qword_1EF2A99F0, type metadata accessor for FormatDerivedDataResultOptionReference, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v33 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1BB87CE70;
      sub_1BA4C2DD8((uint64_t)v3, v34 + v33, type metadata accessor for FormatDerivedDataResultOptionReference);
      return v34;
    }
  }
  sub_1BA4AD288(0, &qword_1EF2C24F0, (uint64_t)&type metadata for FormatDerivedDataOptionReference, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v25 = v3[1];
  v26 = v3[2];
  v28 = v3[3];
  v27 = v3[4];
  *(_QWORD *)(inited + 32) = v25;
  *(_QWORD *)(inited + 40) = v26;
  *(_QWORD *)(inited + 48) = v28;
  *(_QWORD *)(inited + 56) = v27;
  v47 = inited;
  v39 = v43;
  v40 = v44;
  v41 = v45;
  v42 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = v26;
  v30 = v38;
  sub_1BB27E0B8(v25, v29, v38, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v37) == 1)
  {
    v31 = sub_1BA5C699C((uint64_t)v7, &qword_1EF2A99E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  }
  else
  {
    sub_1BA5193C4((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    if (*(_QWORD *)(*((_QWORD *)v10 + 6) + 16))
    {
      v32 = swift_bridgeObjectRetain();
      sub_1BB384370(v32);
      v31 = sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      inited = v47;
    }
    else
    {
      v31 = sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    }
  }
  MEMORY[0x1E0C80A78](v31);
  *(&v36 - 4) = (uint64_t)&v43;
  *(&v36 - 3) = (uint64_t)v3;
  *(&v36 - 2) = v30;
  v34 = sub_1BA8A0EDC((void (*)(_QWORD *, uint64_t *))sub_1BA8D8824, (uint64_t)(&v36 - 6), inited);
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1BA8D7944@<X0>(uint64_t *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v49 = a5;
  v50 = a4;
  v10 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v47 - v14;
  v16 = *a1;
  v17 = a1[1];
  v18 = a1[2];
  v54 = a1[3];
  v55 = v16;
  v56 = sub_1BA8D7BEC(*((_QWORD *)a2 + 3), *(_QWORD *)a3);
  v19 = *(_QWORD *)(a3 + 40);
  v53 = *(_QWORD *)(a3 + 48);
  v52 = *(unsigned __int8 *)(a3 + 56);
  v20 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  v21 = a3 + *(int *)(v20 + 28);
  sub_1BA4C2DD8(v21, (uint64_t)v12, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  sub_1BA8D4E18();
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v12, 1, v22);
  v51 = v15;
  if (v23 == 1)
  {
    v47 = v20;
    v24 = a2[1];
    v57 = *a2;
    v58 = v24;
    v25 = a2[3];
    v59 = a2[2];
    v60 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = (uint64_t)v15;
    v27 = v18;
    v48 = v18;
    v28 = v53;
    v29 = v52;
    sub_1BA8D4E00(v19, v53, v52);
    v30 = v55;
    v31 = v27;
    v32 = v54;
    v33 = v61;
    sub_1BB27E330(v55, v17, v31, v50, v26);
    v34 = v30;
    v35 = v29;
    v36 = v28;
    v37 = v19;
    v38 = v48;
    v39 = (uint64_t)v51;
    if (v33)
    {
      sub_1BA8D5088(v19, v36, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      *v49 = v33;
      return result;
    }
    v46 = v32;
    v20 = v47;
  }
  else
  {
    sub_1BA4C2DD8(v21, (uint64_t)v15, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
    v41 = v18;
    v42 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37 = v19;
    v43 = v19;
    v44 = v53;
    v45 = v52;
    sub_1BA8D4E00(v43, v53, v52);
    sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
    v46 = v54;
    v34 = v55;
    v35 = v45;
    v36 = v44;
    v17 = v42;
    v38 = v41;
    v39 = (uint64_t)v51;
  }
  *(_QWORD *)a6 = v56;
  *(_QWORD *)(a6 + 8) = v34;
  *(_QWORD *)(a6 + 16) = v17;
  *(_QWORD *)(a6 + 24) = v38;
  *(_QWORD *)(a6 + 32) = v46;
  *(_QWORD *)(a6 + 40) = v37;
  *(_QWORD *)(a6 + 48) = v36;
  *(_BYTE *)(a6 + 56) = v35;
  return sub_1BA5193C4(v39, a6 + *(int *)(v20 + 28), type metadata accessor for FormatDerivedDataOptionReferenceResolution);
}

uint64_t sub_1BA8D7BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (!*(_QWORD *)(a1 + 16) || !*(_QWORD *)(a2 + 16))
    return swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2 = swift_bridgeObjectRetain();
  sub_1BB3844C0(v2);
  return a1;
}

uint64_t sub_1BA8D7C4C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v23 = type metadata accessor for FormatVersionRequirement(0);
  v4 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v22 = (uint64_t)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  v13 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v2;
  swift_bridgeObjectRetain();
  sub_1BB0DE1E0(a1, v16);
  swift_bridgeObjectRelease();
  v17 = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  sub_1BB7EAF90(a1, v17);
  sub_1BB8745D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB8745D8();
  sub_1BB872A90();
  v18 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  sub_1BA4C2DD8((uint64_t)v2 + *(int *)(v18 + 28), (uint64_t)v15, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  sub_1BA8D4E18();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v15, 1, v19) == 1)
    return sub_1BB8745E4();
  sub_1BA8D81BC((uint64_t)v15, (uint64_t)v12);
  sub_1BB8745E4();
  sub_1BA8D8218((uint64_t)v12, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v23) == 1)
  {
    sub_1BB8745E4();
  }
  else
  {
    v21 = v22;
    sub_1BA5193C4((uint64_t)v9, v22, type metadata accessor for FormatVersionRequirement);
    sub_1BB8745E4();
    sub_1BA9F7E54();
    sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA5C699C((uint64_t)v12, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA8D7EE4(uint64_t a1, uint64_t a2)
{
  return sub_1BA8D8104(a1, a2, (void (*)(_BYTE *))sub_1BA8D7C4C);
}

uint64_t sub_1BA8D7EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA8D8154(a1, a2, a3, (void (*)(_BYTE *))sub_1BA8D7C4C);
}

uint64_t sub_1BA8D7F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v18;

  v1 = type metadata accessor for FormatVersionRequirement(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - v10;
  v12 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0, (uint64_t)v14, v15);
  sub_1BA8D4E18();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16) == 1)
    return sub_1BB8745E4();
  sub_1BA8D81BC((uint64_t)v14, (uint64_t)v11);
  sub_1BB8745E4();
  sub_1BA8D8218((uint64_t)v11, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
  {
    sub_1BB8745E4();
  }
  else
  {
    sub_1BA5193C4((uint64_t)v8, (uint64_t)v4, type metadata accessor for FormatVersionRequirement);
    sub_1BB8745E4();
    sub_1BA9F7E54();
    sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA5C699C((uint64_t)v11, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1BA8D80F8(uint64_t a1, uint64_t a2)
{
  return sub_1BA8D8104(a1, a2, (void (*)(_BYTE *))sub_1BA8D7F04);
}

uint64_t sub_1BA8D8104(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_1BB8745CC();
  a3(v5);
  return sub_1BB874608();
}

uint64_t sub_1BA8D8148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA8D8154(a1, a2, a3, (void (*)(_BYTE *))sub_1BA8D7F04);
}

uint64_t sub_1BA8D8154(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_1BB8745CC();
  a4(v6);
  return sub_1BB874608();
}

uint64_t sub_1BA8D8190()
{
  return sub_1BA4A2870(&qword_1EF2A99D8, type metadata accessor for FormatDerivedDataResultOptionReference, (uint64_t)&unk_1BB8801E4);
}

uint64_t sub_1BA8D81BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA8D8218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA8D8274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = type metadata accessor for FormatVersionRequirement(0);
  v4 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v36 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8D874C();
  v7 = v6;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v37 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  v15 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8D87C4();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)&v20[*(int *)(v21 + 48)];
  sub_1BA4C2DD8(a1, (uint64_t)v20, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  sub_1BA4C2DD8(a2, v22, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  sub_1BA8D4E18();
  v24 = v23;
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
  if (v25((uint64_t)v20, 1, v23) != 1)
  {
    sub_1BA4C2DD8((uint64_t)v20, (uint64_t)v17, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
    if (v25(v22, 1, v24) == 1)
    {
      sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
      goto LABEL_6;
    }
    sub_1BA8D81BC(v22, (uint64_t)v14);
    v28 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_1BA8D81BC((uint64_t)v17, (uint64_t)v9);
    sub_1BA8D8218((uint64_t)v14, v28);
    v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    v30 = v38;
    if (v29((uint64_t)v9, 1, v38) == 1)
    {
      sub_1BA5C699C((uint64_t)v14, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
      if (v29(v28, 1, v30) == 1)
      {
        sub_1BA5C699C((uint64_t)v9, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
LABEL_14:
        v26 = 1;
LABEL_16:
        v27 = type metadata accessor for FormatDerivedDataOptionReferenceResolution;
        goto LABEL_17;
      }
    }
    else
    {
      v31 = v37;
      sub_1BA8D8218((uint64_t)v9, v37);
      if (v29(v28, 1, v30) != 1)
      {
        v32 = v36;
        sub_1BA5193C4(v28, v36, type metadata accessor for FormatVersionRequirement);
        v33 = sub_1BA9FD2E0(v31, v32);
        sub_1BA4A2E80(v32, type metadata accessor for FormatVersionRequirement);
        sub_1BA5C699C((uint64_t)v14, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
        sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
        sub_1BA5C699C((uint64_t)v9, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
        if ((v33 & 1) != 0)
          goto LABEL_14;
LABEL_15:
        v26 = 0;
        goto LABEL_16;
      }
      sub_1BA5C699C((uint64_t)v14, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
      sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
    }
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA8D874C);
    goto LABEL_15;
  }
  v26 = 1;
  if (v25(v22, 1, v24) == 1)
    goto LABEL_16;
LABEL_6:
  v26 = 0;
  v27 = (uint64_t (*)(_QWORD))sub_1BA8D87C4;
LABEL_17:
  sub_1BA4A2E80((uint64_t)v20, v27);
  return v26;
}

uint64_t sub_1BA8D8664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  char v10;
  uint64_t v11;
  __int128 v13;
  char v14;
  __int128 v15;
  char v16;

  if ((sub_1BA880C28(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
  if (!v8 && (sub_1BB874398() & 1) == 0)
    return 0;
  if ((sub_1BA857260(v4, v6) & 1) == 0)
    return 0;
  if (v5 != v7)
    return 0;
  v9 = *(_BYTE *)(a1 + 56);
  v15 = *(_OWORD *)(a1 + 40);
  v16 = v9;
  v10 = *(_BYTE *)(a2 + 56);
  v13 = *(_OWORD *)(a2 + 40);
  v14 = v10;
  if ((_s8NewsFeed27FormatDerivedDataContextKeyO2eeoiySbAC_ACtFZ_0((uint64_t)&v15, (uint64_t)&v13) & 1) == 0)
    return 0;
  v11 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  return sub_1BA8D8274(a1 + *(int *)(v11 + 28), a2 + *(int *)(v11 + 28));
}

void sub_1BA8D874C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2A96D0)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2A96D0);
  }
}

void sub_1BA8D87C4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2A99E0)
  {
    type metadata accessor for FormatDerivedDataOptionReferenceResolution(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2A99E0);
  }
}

uint64_t sub_1BA8D8824@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BA8D7944(a1, *(__int128 **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), a2, a3);
}

uint64_t FormatAndExpression.lhsExpression.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatAndExpression.rhsExpression.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1BA8D8864(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if ((a3() & 1) != 0)
    return a5(a1) & 1;
  else
    return 0;
}

uint64_t sub_1BA8D88B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, double), uint64_t a4, uint64_t (*a5)(uint64_t, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  uint64_t v18;

  sub_1BA75C00C();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a3(a1, a2, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  if ((v15 & 1) != 0)
    v16 = a5(a1, v14);
  else
    v16 = 0;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v16 & 1;
}

uint64_t _s8NewsFeed19FormatAndExpressionV2eeoiySbAC_ACtFZ_0(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v5;

  v1 = a1[1];
  v5 = *a1;
  static FormatExpression.== infix(_:_:)((uint64_t)&v5);
  if ((v2 & 1) != 0)
  {
    v5 = v1;
    static FormatExpression.== infix(_:_:)((uint64_t)&v5);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_1BA8D89F8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8D8A1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA8D8A1C()
{
  unint64_t result;

  result = qword_1EF2A99F8;
  if (!qword_1EF2A99F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAndExpression, &type metadata for FormatAndExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2A99F8);
  }
  return result;
}

unint64_t sub_1BA8D8A60(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6751A0();
  a1[2] = sub_1BA652690();
  result = sub_1BA8D8A94();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA8D8A94()
{
  unint64_t result;

  result = qword_1EF2A9A00;
  if (!qword_1EF2A9A00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAndExpression, &type metadata for FormatAndExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A00);
  }
  return result;
}

uint64_t destroy for FormatSymbolImageFill()
{
  swift_release();
  return swift_release();
}

_QWORD *_s8NewsFeed21FormatSymbolImageFillVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FormatSymbolImageFill(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FormatSymbolImageFill(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatAndExpression()
{
  return &type metadata for FormatAndExpression;
}

uint64_t IssueCoverViewLayoutAttributes.bounds.getter()
{
  return sub_1BB873594();
}

double IssueCoverViewLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double IssueCoverViewLayoutAttributes.shadowRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double IssueCoverViewLayoutAttributes.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

uint64_t IssueCoverViewLayoutAttributes.uiRectCorner.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

double IssueCoverViewLayoutAttributes.borderWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

uint64_t sub_1BA8D8C48()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA8D8C74
                                                            + 4 * asc_1BB880340[*v0]))(0x656D617266, 0xE500000000000000);
}

uint64_t sub_1BA8D8C74()
{
  return 0x6152776F64616873;
}

uint64_t sub_1BA8D8CA4()
{
  return 0x6F43746365526975;
}

uint64_t sub_1BA8D8CC4()
{
  return 0x6957726564726F62;
}

uint64_t sub_1BA8D8CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA8D96AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA8D8D08()
{
  sub_1BA8D9318();
  return sub_1BB874710();
}

uint64_t sub_1BA8D8D30()
{
  sub_1BA8D9318();
  return sub_1BB87471C();
}

uint64_t IssueCoverViewLayoutAttributes.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BA8D935C(0, &qword_1EF2A9A08, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - v7;
  v16 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v10 = *((_QWORD *)v1 + 3);
  v12 = *((_QWORD *)v1 + 4);
  v11 = *((_QWORD *)v1 + 5);
  v13 = *((_QWORD *)v1 + 6);
  v14 = *((_QWORD *)v1 + 7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA8D9318();
  sub_1BB8746C8();
  v18 = v16;
  v19 = v9;
  v20 = v10;
  v17 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v18 = v12;
    v17 = 1;
    sub_1BA5ED248();
    sub_1BB8741AC();
    *(_QWORD *)&v18 = v11;
    v17 = 2;
    sub_1BB8741AC();
    *(_QWORD *)&v18 = v13;
    v17 = 3;
    type metadata accessor for UIRectCorner(0);
    sub_1BA4A2870(&qword_1EF2A9A20, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, MEMORY[0x1E0DB64F8]);
    sub_1BB8741AC();
    *(_QWORD *)&v18 = v14;
    v17 = 4;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IssueCoverViewLayoutAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD v19[4];
  char v20;

  sub_1BA8D935C(0, &qword_1EF2A9A28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA8D9318();
  sub_1BB87468C();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    v20 = 0;
    sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    sub_1BB8740D4();
    v10 = v19[0];
    v11 = v19[1];
    v12 = v19[2];
    v13 = v19[3];
    v20 = 1;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v14 = v19[0];
    v20 = 2;
    sub_1BB8740D4();
    v15 = v19[0];
    type metadata accessor for UIRectCorner(0);
    v20 = 3;
    sub_1BA4A2870(&qword_1ED3B9780, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, MEMORY[0x1E0DB6500]);
    sub_1BB8740D4();
    v16 = v19[0];
    v20 = 4;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = v19[0];
    *a2 = v10;
    a2[1] = v11;
    a2[2] = v12;
    a2[3] = v13;
    a2[4] = v14;
    a2[5] = v15;
    a2[6] = v16;
    a2[7] = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

double sub_1BA8D9274()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t sub_1BA8D9280@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return IssueCoverViewLayoutAttributes.init(from:)(a1, a2);
}

uint64_t sub_1BA8D9294(_QWORD *a1)
{
  return IssueCoverViewLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BA8D92A8()
{
  sub_1BA8D991C();
  return sub_1BB86D96C();
}

double sub_1BA8D9310(uint64_t a1)
{
  return (double)a1;
}

unint64_t sub_1BA8D9318()
{
  unint64_t result;

  result = qword_1EF2A9A10;
  if (!qword_1EF2A9A10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB880534, &type metadata for IssueCoverViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A10);
  }
  return result;
}

void sub_1BA8D935C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA8D9318();
    v7 = a3(a1, &type metadata for IssueCoverViewLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA8D93BC()
{
  unint64_t result;

  result = qword_1ED39D468;
  if (!qword_1ED39D468)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueCoverViewLayoutAttributes, &type metadata for IssueCoverViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D468);
  }
  return result;
}

unint64_t sub_1BA8D9404()
{
  unint64_t result;

  result = qword_1ED39D480;
  if (!qword_1ED39D480)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueCoverViewLayoutAttributes, &type metadata for IssueCoverViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D480);
  }
  return result;
}

unint64_t sub_1BA8D944C()
{
  unint64_t result;

  result = qword_1ED39D478;
  if (!qword_1ED39D478)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueCoverViewLayoutAttributes, &type metadata for IssueCoverViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D478);
  }
  return result;
}

unint64_t sub_1BA8D9494()
{
  unint64_t result;

  result = qword_1ED39D460;
  if (!qword_1ED39D460)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueCoverViewLayoutAttributes, &type metadata for IssueCoverViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D460);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IssueCoverViewLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

ValueMetadata *type metadata accessor for IssueCoverViewLayoutAttributes()
{
  return &type metadata for IssueCoverViewLayoutAttributes;
}

uint64_t storeEnumTagSinglePayload for IssueCoverViewLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BA8D9554 + 4 * byte_1BB88034A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BA8D9588 + 4 * byte_1BB880345[v4]))();
}

uint64_t sub_1BA8D9588(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8D9590(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8D9598);
  return result;
}

uint64_t sub_1BA8D95A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8D95ACLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BA8D95B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8D95B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueCoverViewLayoutAttributes.CodingKeys()
{
  return &type metadata for IssueCoverViewLayoutAttributes.CodingKeys;
}

unint64_t sub_1BA8D95D8()
{
  unint64_t result;

  result = qword_1EF2A9A30;
  if (!qword_1EF2A9A30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88050C, &type metadata for IssueCoverViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A30);
  }
  return result;
}

unint64_t sub_1BA8D9620()
{
  unint64_t result;

  result = qword_1EF2A9A38;
  if (!qword_1EF2A9A38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88047C, &type metadata for IssueCoverViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A38);
  }
  return result;
}

unint64_t sub_1BA8D9668()
{
  unint64_t result;

  result = qword_1EF2A9A40;
  if (!qword_1EF2A9A40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8804A4, &type metadata for IssueCoverViewLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A40);
  }
  return result;
}

uint64_t sub_1BA8D96AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6152776F64616873 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F43746365526975 && a2 == 0xEC00000072656E72 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6957726564726F62 && a2 == 0xEB00000000687464)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_1BA8D991C()
{
  unint64_t result;

  result = qword_1ED39D470;
  if (!qword_1ED39D470)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueCoverViewLayoutAttributes, &type metadata for IssueCoverViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D470);
  }
  return result;
}

double FeedListeningProgress.progress.getter()
{
  uint64_t v0;
  double result;

  result = *(double *)v0;
  if (*(_BYTE *)(v0 + 8))
    return 0.0;
  return result;
}

uint64_t FeedListeningProgress.isCompleted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FeedListeningProgress.rawState.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = 0;
  if ((v1[1] & 1) == 0)
    v3 = *v1;
  *a1 = v3;
  v4 = *MEMORY[0x1E0DB7730];
  v5 = sub_1BB86FB08();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t static FeedListeningProgress.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_1BA8D9A08(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_1BA8D9A3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = 0;
  if ((v1[1] & 1) == 0)
    v3 = *v1;
  *a1 = v3;
  v4 = *MEMORY[0x1E0DB7730];
  v5 = sub_1BB86FB08();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a1, v4, v5);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FeedLayoutDirection(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BA8D9ACC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

BOOL static FormatGroupBinding.Float.== infix(_:_:)(char *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *a1;
  v3 = *a2;
  v5 = (v3 & 0x80u) != 0 && v2 == v3;
  v6 = ((v3 ^ v2) & 1) == 0;
  if ((v3 & 0x80) != 0)
    v6 = 0;
  if (*a1 >= 0)
    return v6;
  else
    return v5;
}

unint64_t sub_1BA8D9B24(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8D9B48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA8D9B48()
{
  unint64_t result;

  result = qword_1EF2A9A48;
  if (!qword_1EF2A9A48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Float, &type metadata for FormatGroupBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A48);
  }
  return result;
}

unint64_t sub_1BA8D9B8C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8D9BC0();
  a1[2] = sub_1BA8D9C04();
  result = sub_1BA8D9C48();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA8D9BC0()
{
  unint64_t result;

  result = qword_1EF2A9A50;
  if (!qword_1EF2A9A50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Float, &type metadata for FormatGroupBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A50);
  }
  return result;
}

unint64_t sub_1BA8D9C04()
{
  unint64_t result;

  result = qword_1EF2A9A58;
  if (!qword_1EF2A9A58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Float, &type metadata for FormatGroupBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A58);
  }
  return result;
}

unint64_t sub_1BA8D9C48()
{
  unint64_t result;

  result = qword_1EF2A9A60;
  if (!qword_1EF2A9A60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Float, &type metadata for FormatGroupBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A60);
  }
  return result;
}

uint64_t sub_1BA8D9C8C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatGroupBinding.Float.init(from:)(a1, a2);
}

uint64_t sub_1BA8D9CA0(_QWORD *a1)
{
  return FormatGroupBinding.Float.encode(to:)(a1);
}

BOOL sub_1BA8D9CB4(char *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *a1;
  v3 = *a2;
  v5 = (v3 & 0x80u) != 0 && v2 == v3;
  v6 = ((v3 ^ v2) & 1) == 0;
  if ((v3 & 0x80) != 0)
    v6 = 0;
  if (*a1 >= 0)
    return v6;
  else
    return v5;
}

uint64_t _s5FloatOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x1F)
    goto LABEL_17;
  if (a2 + 225 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 225) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 225;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 225;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 225;
  }
LABEL_17:
  v6 = ((*a1 >> 2) & 0x1E | (*a1 >> 7)) ^ 0x1F;
  if (v6 >= 0x1E)
    v6 = -1;
  return v6 + 1;
}

uint64_t _s5FloatOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 225 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 225) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x1F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x1E)
    return ((uint64_t (*)(void))((char *)&loc_1BA8D9DDC + 4 * byte_1BB880645[v4]))();
  *a1 = a2 - 31;
  return ((uint64_t (*)(void))((char *)sub_1BA8D9E10 + 4 * byte_1BB880640[v4]))();
}

uint64_t sub_1BA8D9E10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8D9E18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8D9E20);
  return result;
}

uint64_t sub_1BA8D9E38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8D9E40);
  *(_BYTE *)result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1BA8D9E44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8D9E4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8D9E58(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_1BA8D9E64(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

_BYTE *sub_1BA8D9E74(_BYTE *result, char a2)
{
  *result = *result & 7 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Float()
{
  return &type metadata for FormatGroupBinding.Float;
}

void sub_1BA8D9E98(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __int128 *v2;
  __int16 v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;

  v4 = *((_WORD *)v2 + 8);
  v18 = *v2;
  if (*((_BYTE *)v2 + 18))
  {
    if (*((_BYTE *)v2 + 18) == 1)
    {
      v5 = objc_msgSend(a1, sel_theme);
      v6 = v5;
      if (v5)
      {
        v7 = objc_msgSend(v5, sel_defaultHeadlineTemplate);
        swift_unknownObjectRelease();
        v6 = objc_msgSend(v7, sel_headlineExcerptTextInfo);

        v8 = swift_allocObject();
        if (v6)
        {
          v9 = objc_msgSend(v6, sel_font);
          v10 = v9;
          if (v9)
            goto LABEL_14;
LABEL_18:
          v17 = 0xE000000000000000;
          goto LABEL_19;
        }
        goto LABEL_17;
      }
    }
    else
    {
      v13 = objc_msgSend(a1, sel_theme);
      v6 = v13;
      if (v13)
      {
        v14 = objc_msgSend(v13, sel_defaultHeadlineTemplate);
        swift_unknownObjectRelease();
        v6 = objc_msgSend(v14, sel_headlineBylineTextInfo);

        v8 = swift_allocObject();
        if (v6)
        {
          v9 = objc_msgSend(v6, sel_font);
          v10 = v9;
          if (v9)
            goto LABEL_14;
          goto LABEL_18;
        }
LABEL_17:
        v10 = 0;
        goto LABEL_18;
      }
    }
LABEL_16:
    v8 = swift_allocObject();
    goto LABEL_17;
  }
  v11 = objc_msgSend(a1, sel_theme);
  v6 = v11;
  if (!v11)
    goto LABEL_16;
  v12 = objc_msgSend(v11, sel_defaultHeadlineTemplate);
  swift_unknownObjectRelease();
  v6 = objc_msgSend(v12, sel_headlineTitleTextInfo);

  v8 = swift_allocObject();
  if (!v6)
    goto LABEL_17;
  v9 = objc_msgSend(v6, sel_font);
  v10 = v9;
  if (!v9)
    goto LABEL_18;
LABEL_14:
  v15 = objc_msgSend(v9, sel_fontName);

  if (!v15)
    goto LABEL_17;
  v10 = (void *)sub_1BB8729A0();
  v17 = v16;

LABEL_19:
  *(_QWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 24) = v17;
  *(_OWORD *)(v8 + 32) = v18;
  *(_WORD *)(v8 + 48) = v4;

  *a2 = v8 | 0x2000000000000000;
}

uint64_t sub_1BA8DA16C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F9410(*a1, *a2);
}

uint64_t sub_1BA8DA178()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8DA218()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8DA294()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8DA330@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA8DACA8();
  *a1 = result;
  return result;
}

void sub_1BA8DA35C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xEC00000074707265;
  v5 = 0x63784574726F6873;
  if (v2 != 1)
  {
    v5 = 0x656E694C7962;
    v4 = 0xE600000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x656C746974;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BA8DA3BC()
{
  sub_1BA8DAC64();
  return sub_1BB872D60();
}

uint64_t sub_1BA8DA418()
{
  sub_1BA8DAC64();
  return sub_1BB872D0C();
}

void sub_1BA8DA464(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724D530;
}

uint64_t sub_1BA8DA47C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTagBinding.Font.init(from:)(a1, a2);
}

uint64_t sub_1BA8DA490(_QWORD *a1)
{
  return FormatTagBinding.Font.encode(to:)(a1);
}

uint64_t sub_1BA8DA4A4@<X0>(_BYTE *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  int v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int16 v14;
  char v15;
  uint64_t v16;

  v7 = *a1;
  if (*a1)
  {
    v13 = xmmword_1BB880720;
    v14 = 3072;
    if (v7 == 1)
    {
      v15 = 1;
      swift_unknownObjectRetain();
      sub_1BA8DACF0(a3);
      sub_1BA8D9E98(a2, &v16);
      sub_1BB469498(&v16, (uint64_t)&v13);
      v8 = a4;
      v9 = 0x78452074726F6853;
      v10 = 0xED00007470726563;
    }
    else
    {
      v15 = 2;
      swift_unknownObjectRetain();
      sub_1BA8DACF0(a3);
      sub_1BA8D9E98(a2, &v16);
      sub_1BB469498(&v16, (uint64_t)&v13);
      v8 = a4;
      v9 = 0x656E694C207942;
      v10 = 0xE700000000000000;
    }
  }
  else
  {
    v13 = xmmword_1BB880720;
    v14 = 3072;
    v15 = 0;
    swift_unknownObjectRetain();
    sub_1BA8DACF0(a3);
    sub_1BA8D9E98(a2, &v16);
    sub_1BB469498(&v16, (uint64_t)&v13);
    v8 = a4;
    v9 = 0x656C746954;
    v10 = 0xE500000000000000;
  }
  sub_1BAAF40BC(v9, v10, (uint64_t)&v13, v8);
  sub_1BA8DAD20(a3);
  swift_unknownObjectRelease();
  v11 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a4, 0, 1, v11);
}

uint64_t _s8NewsFeed16FormatTagBindingV4FontO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  __int16 v4;
  double v5;
  double v6;
  __int16 v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(double *)a1;
  v2 = *(double *)(a1 + 8);
  v4 = *(_WORD *)(a1 + 16);
  v6 = *(double *)a2;
  v5 = *(double *)(a2 + 8);
  v7 = *(_WORD *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 18);
  if (!*(_BYTE *)(a1 + 18))
  {
    if (*(_BYTE *)(a2 + 18) || v3 != v6)
      return 0;
    if ((v4 & 0xFF00) == 0xC00)
      return (v7 & 0xFF00) == 0xC00;
    if ((v7 & 0xFF00) == 0xC00)
      return 0;
    if ((v4 & 1) != 0)
    {
      if ((v7 & 1) == 0)
        return 0;
    }
    else if ((v7 & 1) != 0 || v2 != v5)
    {
      return 0;
    }
    goto LABEL_34;
  }
  if (*(_BYTE *)(a1 + 18) != 1)
  {
    if (v8 != 2 || v3 != v6)
      return 0;
    if ((v4 & 0xFF00) == 0xC00)
      return (v7 & 0xFF00) == 0xC00;
    if ((v7 & 0xFF00) == 0xC00)
      return 0;
    if ((v4 & 1) != 0)
    {
      if ((v7 & 1) == 0)
        return 0;
    }
    else if ((v7 & 1) != 0 || v2 != v5)
    {
      return 0;
    }
LABEL_34:
    v10 = FormatFontScalingStyle.rawValue.getter();
    v12 = v11;
    if (v10 == FormatFontScalingStyle.rawValue.getter() && v12 == v13)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    v14 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v14 & 1) != 0;
  }
  if (v8 != 1 || v3 != v6)
    return 0;
  if ((v4 & 0xFF00) != 0xC00)
  {
    if ((v7 & 0xFF00) == 0xC00)
      return 0;
    if ((v4 & 1) != 0)
    {
      if ((v7 & 1) == 0)
        return 0;
    }
    else if ((v7 & 1) != 0 || v2 != v5)
    {
      return 0;
    }
    goto LABEL_34;
  }
  return (v7 & 0xFF00) == 0xC00;
}

unint64_t sub_1BA8DA884(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8DA8A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA8DA8A8()
{
  unint64_t result;

  result = qword_1EF2A9A68;
  if (!qword_1EF2A9A68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Font, &type metadata for FormatTagBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A68);
  }
  return result;
}

unint64_t sub_1BA8DA8EC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8DA920();
  a1[2] = sub_1BA8DA964();
  result = sub_1BA8DA9A8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA8DA920()
{
  unint64_t result;

  result = qword_1ED39CC48;
  if (!qword_1ED39CC48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Font, &type metadata for FormatTagBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1ED39CC48);
  }
  return result;
}

unint64_t sub_1BA8DA964()
{
  unint64_t result;

  result = qword_1ED3A29F8;
  if (!qword_1ED3A29F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Font, &type metadata for FormatTagBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1ED3A29F8);
  }
  return result;
}

unint64_t sub_1BA8DA9A8()
{
  unint64_t result;

  result = qword_1EF2A9A70;
  if (!qword_1EF2A9A70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Font, &type metadata for FormatTagBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A70);
  }
  return result;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s14descr1E733A881C4FontOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 19))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 18);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s14descr1E733A881C4FontOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 19) = 0;
    if (a2)
      *(_BYTE *)(result + 18) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BA8DAA90(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 18);
}

uint64_t sub_1BA8DAA98(uint64_t result, char a2)
{
  *(_BYTE *)(result + 18) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatTagBinding.Font()
{
  return &type metadata for FormatTagBinding.Font;
}

uint64_t _s14descr1E7276531V4FontO10CodingTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA8DAAFC + 4 * byte_1BB880735[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA8DAB30 + 4 * byte_1BB880730[v4]))();
}

uint64_t sub_1BA8DAB30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8DAB38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8DAB40);
  return result;
}

uint64_t sub_1BA8DAB4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8DAB54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA8DAB58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8DAB60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E7276531V4FontO10CodingTypeOMa()
{
  return &_s14descr1E7276531V4FontO10CodingTypeON;
}

unint64_t sub_1BA8DAB80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2A9A78;
  if (!qword_1EF2A9A78)
  {
    sub_1BA8DABC8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A78);
  }
  return result;
}

void sub_1BA8DABC8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9A80)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9A80);
  }
}

unint64_t sub_1BA8DAC20()
{
  unint64_t result;

  result = qword_1EF2A9A88;
  if (!qword_1EF2A9A88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8808F4, &_s14descr1E7276531V4FontO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A88);
  }
  return result;
}

unint64_t sub_1BA8DAC64()
{
  unint64_t result;

  result = qword_1ED3A5B08;
  if (!qword_1ED3A5B08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88087C, &_s14descr1E7276531V4FontO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B08);
  }
  return result;
}

uint64_t sub_1BA8DACA8()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BA8DACF0(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 56);
  swift_bridgeObjectRetain();
  v3 = v2;
  return a1;
}

uint64_t sub_1BA8DAD20(uint64_t a1)
{

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA8DAD54()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8DAD78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a2 + 32);
  sub_1BA7AA598();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87A390;
  v4 = sub_1BA4F5ADC();
  v6 = v5;
  v7 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  v8 = sub_1BA6A2D8C();
  *(_QWORD *)(v3 + 64) = v8;
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v6;
  v9 = sub_1BA4D7950();
  *(_QWORD *)(v3 + 96) = v7;
  *(_QWORD *)(v3 + 104) = v8;
  *(_QWORD *)(v3 + 72) = v9;
  *(_QWORD *)(v3 + 80) = v10;
  v11 = sub_1BB87330C();
  sub_1BB86EF44("Emit task finished deferring will start %{public}@ emitter, identifier=%{public}@", 81, 2, &dword_1BA493000, v2, v11, v3);
  swift_bridgeObjectRelease();
  return sub_1BA4A3CD4();
}

uint64_t sub_1BA8DAE58(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1BB87261C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1BB872688();
  v10 = *(_QWORD *)(v28 - 8);
  v11 = MEMORY[0x1E0C80A78](v28);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - v14;
  v26 = a1;
  v27 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitterOutput(255, AssociatedTypeWitness, AssociatedConformanceWitness, v18);
  sub_1BB86EAAC();
  sub_1BB87267C();
  MEMORY[0x1BCCE2FE0](v13, a3);
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20 = v28;
  v19(v13, v28);
  sub_1BA657D64();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF530], v6);
  v21 = (void *)sub_1BB873498();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for FeedGroupEmitTask.Result(0, v26, v27, v22);
  v23 = sub_1BB86EA40();

  v19(v15, v20);
  return v23;
}

uint64_t sub_1BA8DB098@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  _OWORD v77[2];
  void *v78;

  v68 = (__int128 *)a4;
  v69 = a3;
  v73 = a5;
  v10 = *(_QWORD *)(*a2 + 80);
  v11 = *(_QWORD *)(*a2 + 88);
  v12 = type metadata accessor for FeedGroupEmitTask.State(0, v10, v11, a4);
  v74 = *(_QWORD *)(v12 - 8);
  v75 = v12;
  MEMORY[0x1E0C80A78](v12);
  v72 = (char *)&v62 - v13;
  swift_getAssociatedTypeWitness();
  v70 = v11;
  v71 = v10;
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v17 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v16);
  v66 = *(_QWORD *)(v17 - 8);
  v67 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v62 - v18);
  sub_1BA4B07F0(0, &qword_1ED39C320, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v62 - v21;
  *(_QWORD *)&v76 = a1;
  v23 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v24 = sub_1BB86DF00();
  v25 = swift_dynamicCast();
  v26 = *(_QWORD *)(v24 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  if (!v25)
  {
    v64 = a1;
    v65 = v6;
    v27(v22, 1, 1, v24);
    sub_1BA6ED6EC((uint64_t)v22, (uint64_t)&qword_1ED39C320, (uint64_t)MEMORY[0x1E0DB35A0], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
LABEL_6:
    v63 = a2[4];
    sub_1BA7AA598();
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1BB87FC80;
    v42 = sub_1BA4F5ADC();
    v44 = v43;
    v45 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v41 + 56) = MEMORY[0x1E0DEA968];
    v46 = sub_1BA6A2D8C();
    *(_QWORD *)(v41 + 64) = v46;
    *(_QWORD *)(v41 + 32) = v42;
    *(_QWORD *)(v41 + 40) = v44;
    v47 = sub_1BA4D7950();
    *(_QWORD *)(v41 + 96) = v45;
    *(_QWORD *)(v41 + 104) = v46;
    *(_QWORD *)(v41 + 72) = v47;
    *(_QWORD *)(v41 + 80) = v48;
    *(_QWORD *)&v76 = 0;
    *((_QWORD *)&v76 + 1) = 0xE000000000000000;
    v49 = v64;
    v78 = v64;
    sub_1BB873E34();
    v50 = v76;
    *(_QWORD *)(v41 + 136) = v45;
    *(_QWORD *)(v41 + 144) = v46;
    *(_OWORD *)(v41 + 112) = v50;
    v51 = sub_1BB87330C();
    sub_1BB86EF44("Emit task received error from %{public}@ emitter, identifier=%{public}@, error=%{public}@", 89, 2, &dword_1BA493000, v63, v51, v41);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v76 = 0;
    *((_QWORD *)&v76 + 1) = 0xE000000000000000;
    sub_1BB873CB4();
    sub_1BB872AFC("ublic}@, error=%{public}@");
    v78 = v49;
    sub_1BB873E34();
    v52 = *((_QWORD *)&v76 + 1);
    *v19 = v76;
    v19[1] = v52;
    v53 = v67;
    swift_storeEnumTagMultiPayload();
    v54 = v68[1];
    v76 = *v68;
    v77[0] = v54;
    *(_OWORD *)((char *)v77 + 10) = *(__int128 *)((char *)v68 + 26);
    v39 = v73;
    sub_1BA66D3D8((uint64_t)v19, v69, (uint64_t)&v76, v73, a6);
    (*(void (**)(_QWORD *, uint64_t))(v66 + 8))(v19, v53);
    goto LABEL_7;
  }
  v27(v22, 0, 1, v24);
  if ((*(unsigned int (**)(char *, uint64_t))(v26 + 88))(v22, v24) != *MEMORY[0x1E0DB3588])
  {
    v64 = a1;
    v65 = v6;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v24);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t))(v26 + 96))(v22, v24);
  swift_bridgeObjectRelease();
  v65 = a2[4];
  sub_1BA7AA598();
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1BB87A390;
  v29 = sub_1BA4F5ADC();
  v31 = v30;
  v32 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v28 + 56) = MEMORY[0x1E0DEA968];
  v33 = sub_1BA6A2D8C();
  *(_QWORD *)(v28 + 64) = v33;
  *(_QWORD *)(v28 + 32) = v29;
  *(_QWORD *)(v28 + 40) = v31;
  v34 = sub_1BA4D7950();
  *(_QWORD *)(v28 + 96) = v32;
  *(_QWORD *)(v28 + 104) = v33;
  *(_QWORD *)(v28 + 72) = v34;
  *(_QWORD *)(v28 + 80) = v35;
  v36 = sub_1BB87330C();
  sub_1BB86EF44("Emit task timed out for %{public}@ emitter, identifier=%{public}@", 65, 2, &dword_1BA493000, v65, v36, v28);
  swift_bridgeObjectRelease();
  *v19 = 0xD000000000000011;
  v19[1] = 0x80000001BB9618F0;
  v37 = v67;
  swift_storeEnumTagMultiPayload();
  v38 = v68[1];
  v76 = *v68;
  v77[0] = v38;
  *(_OWORD *)((char *)v77 + 10) = *(__int128 *)((char *)v68 + 26);
  v39 = v73;
  sub_1BA66D3D8((uint64_t)v19, v69, (uint64_t)&v76, v73, a6);
  (*(void (**)(_QWORD *, uint64_t))(v66 + 8))(v19, v37);
LABEL_7:
  v55 = type metadata accessor for FeedGroupEmitTask.Result(0, v71, v70, v40);
  v56 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v72, v39, v55);
  v57 = v75;
  swift_storeEnumTagMultiPayload();
  sub_1BA5F0CF8(v56, v58, v59, v60);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v56, v57);
}

uint64_t sub_1BA8DB660(double a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a4;
  v35[1] = *a3;
  v6 = sub_1BB87261C();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB872688();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v35 - v13;
  v35[0] = a3[4];
  sub_1BA7AA598();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87FC80;
  v16 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v15 + 64) = v16;
  *(double *)(v15 + 32) = a1;
  v17 = sub_1BA4F5ADC();
  v19 = v18;
  v20 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 96) = MEMORY[0x1E0DEA968];
  v21 = sub_1BA6A2D8C();
  *(_QWORD *)(v15 + 104) = v21;
  *(_QWORD *)(v15 + 72) = v17;
  *(_QWORD *)(v15 + 80) = v19;
  v22 = sub_1BA4D7950();
  *(_QWORD *)(v15 + 136) = v20;
  *(_QWORD *)(v15 + 144) = v21;
  *(_QWORD *)(v15 + 112) = v22;
  *(_QWORD *)(v15 + 120) = v23;
  v24 = sub_1BB87330C();
  sub_1BB86EF44("Emit task will timeout in %g seconds if unfulfilled for %{public}@ emitter, identifier=%{public}@", 97, 2, &dword_1BA493000, v35[0], v24, v15);
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitterOutput(255, AssociatedTypeWitness, AssociatedConformanceWitness, v27);
  sub_1BB86EAAC();
  sub_1BB87267C();
  MEMORY[0x1BCCE2FE0](v12, a1);
  v28 = v37;
  v29 = *(void (**)(char *, uint64_t))(v36 + 8);
  v29(v12, v37);
  sub_1BA657D64();
  v31 = v38;
  v30 = v39;
  (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v8, *MEMORY[0x1E0DEF530], v39);
  v32 = (void *)sub_1BB873498();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v30);
  v33 = sub_1BB86EA4C();

  v29(v14, v28);
  return v33;
}

uint64_t sub_1BA8DB96C(_DWORD *a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v2 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v2 <= 0x10)
    v2 = 16;
  if ((v2 & 0xFFFFFFFFFFFFFFF8) + 48 > v2)
    v2 = (v2 & 0xFFFFFFFFFFFFFFF8) + 48;
  v3 = (((((((v2 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (!v3)
    v3 = 8;
  result = *((unsigned __int8 *)a1 + v3);
  if (result >= 2 && (v3 & 0xFFFFFFF8) != 0)
    return (*a1 + 2);
  return result;
}

void sub_1BA8DBA7C(unsigned int *a1, unsigned int a2)
{
  unint64_t v4;
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 <= 0x10)
    v4 = 16;
  if ((v4 & 0xFFFFFFFFFFFFFFF8) + 48 > v4)
    v4 = (v4 & 0xFFFFFFFFFFFFFFF8) + 48;
  v5 = (((((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (v5)
    v6 = v5;
  else
    v6 = 8;
  if (a2 > 1)
  {
    if ((_DWORD)v6)
      v7 = 2;
    else
      v7 = a2;
    if ((_DWORD)v6)
      v8 = a2 - 2;
    else
      v8 = 0;
    *((_BYTE *)a1 + v6) = v7;
    bzero(a1, v6);
    *a1 = v8;
  }
  else
  {
    *((_BYTE *)a1 + v6) = a2;
  }
}

_QWORD *sub_1BA8DBBA8(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = AssociatedTypeWitness;
  if (a1 != a2)
  {
    v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8)
      v8 = *(_QWORD *)(v6 + 64);
    if (v8 <= 0x10)
      v9 = 16;
    else
      v9 = v8;
    if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v9)
      v10 = v9;
    else
      v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
    v12 = v9 + 1;
    switch(*((_BYTE *)a1 + v10))
    {
      case 0:
      case 1:
        (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
        v13 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v13 + 24) < 0xFFFFFFFFuLL)
          goto LABEL_37;
        goto LABEL_31;
      case 2:
        (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_37;
      case 3:
      case 4:
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_37;
      case 6:
        v14 = *((unsigned __int8 *)a1 + v9);
        if (v14 >= 3)
        {
          if (v9 <= 3)
            v15 = v9;
          else
            v15 = 4;
          __asm { BR              X12 }
        }
        if (v14 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v14 == 1)
        {
          (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          v16 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v16 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v16);
        }
        v13 = ((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
LABEL_31:
        __swift_destroy_boxed_opaque_existential_1(v13);
LABEL_37:
        switch(*((_BYTE *)a2 + v10))
        {
          case 0:
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
            v18 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
            v19 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
            v20 = *(_QWORD *)(v19 + 24);
            if (v20 < 0xFFFFFFFF)
            {
              v28 = *(_OWORD *)(v19 + 16);
              *(_OWORD *)v18 = *(_OWORD *)v19;
              *(_OWORD *)(v18 + 16) = v28;
            }
            else
            {
              *(_QWORD *)(v18 + 24) = v20;
              (**(void (***)(void))(v20 - 8))();
            }
            *((_BYTE *)a1 + v10) = 0;
            goto LABEL_66;
          case 1:
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
            v21 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
            v22 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
            v23 = *(_QWORD *)(v22 + 24);
            if (v23 < 0xFFFFFFFF)
            {
              v29 = *(_OWORD *)(v22 + 16);
              *(_OWORD *)v21 = *(_OWORD *)v22;
              *(_OWORD *)(v21 + 16) = v29;
            }
            else
            {
              *(_QWORD *)(v21 + 24) = v23;
              (**(void (***)(void))(v23 - 8))();
            }
            v24 = 1;
            goto LABEL_65;
          case 2:
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
            v24 = 2;
            goto LABEL_65;
          case 3:
            *a1 = *a2;
            a1[1] = a2[1];
            v25 = 3;
            goto LABEL_48;
          case 4:
            *a1 = *a2;
            a1[1] = a2[1];
            v25 = 4;
            goto LABEL_48;
          case 5:
            *a1 = *a2;
            a1[1] = a2[1];
            v25 = 5;
LABEL_48:
            *((_BYTE *)a1 + v10) = v25;
            swift_bridgeObjectRetain();
            break;
          case 6:
            v26 = *((unsigned __int8 *)a2 + v9);
            if (v26 >= 3)
            {
              if (v9 <= 3)
                v27 = v9;
              else
                v27 = 4;
              __asm { BR              X12 }
            }
            if (v26 == 2)
            {
              *a1 = *a2;
              a1[1] = a2[1];
              *((_BYTE *)a1 + v9) = 2;
              swift_bridgeObjectRetain();
            }
            else if (v26 == 1)
            {
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
              *((_BYTE *)a1 + v9) = 1;
            }
            else
            {
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
              v30 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
              v31 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
              v32 = *(_QWORD *)(v31 + 24);
              if (v32 < 0xFFFFFFFF)
              {
                v33 = *(_OWORD *)(v31 + 16);
                *(_OWORD *)v30 = *(_OWORD *)v31;
                *(_OWORD *)(v30 + 16) = v33;
              }
              else
              {
                *(_QWORD *)(v30 + 24) = v32;
                (**(void (***)(void))(v32 - 8))();
              }
              *((_BYTE *)a1 + v9) = 0;
            }
            v34 = ((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
            v35 = ((unint64_t)a2 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
            v36 = *(_QWORD *)(v35 + 24);
            *(_QWORD *)(v34 + 24) = v36;
            *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
            (**(void (***)(void))(v36 - 8))();
            v24 = 6;
LABEL_65:
            *((_BYTE *)a1 + v10) = v24;
            break;
          default:
            if (v10 <= 3)
              v17 = v10;
            else
              v17 = 4;
            __asm { BR              X12 }
            return result;
        }
        return result;
      default:
        if (v10 <= 3)
          v11 = v10;
        else
          v11 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
LABEL_66:
  v37 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  if (v37 <= ((v37 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v37 = ((v37 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v37 <= 0x10)
    v37 = 16;
  if ((v37 & 0xFFFFFFFFFFFFFFF8) + 48 > v37)
    v37 = (v37 & 0xFFFFFFFFFFFFFFF8) + 48;
  v38 = v37 + 8;
  v39 = (_QWORD *)(((unint64_t)a1 + v38) & 0xFFFFFFFFFFFFFFF8);
  v40 = (unint64_t)a2 + v38;
  v41 = (v40 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v39 = *(_QWORD *)(v40 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v42 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 &= 0xFFFFFFFFFFFFF8uLL;
  v43 = *(_QWORD *)v41;
  v41 += 15;
  *v42 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = ((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8;
  v45 = *(_QWORD *)(v41 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v44 + 8) = *(_BYTE *)((v41 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v44 = v45;
  v46 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_BYTE *)(v44 + 24) = *(_BYTE *)((v41 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)(v44 + 16) = v46;
  v47 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_BYTE *)(v44 + 40) = *(_BYTE *)((v41 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(_QWORD *)(v44 + 32) = v47;
  *(_BYTE *)(v44 + 41) = *(_BYTE *)((v41 & 0xFFFFFFFFFFFFFFF8) + 41);
  *(_QWORD *)((v44 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v41 & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_1BA8DC27C(_OWORD *a1, _OWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _OWORD *v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  _OWORD *v18;
  unsigned int v19;
  uint64_t v20;
  char v21;
  _OWORD *v22;
  __int128 v23;
  _OWORD *v24;
  unint64_t v25;
  unint64_t v26;
  __int128 v27;
  __int128 v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _OWORD *v33;
  __int128 *v34;
  __int128 v35;
  __int128 v36;
  _OWORD *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7)
    v7 = *(_QWORD *)(v5 + 64);
  if (v7 <= 0x10)
    v8 = 16;
  else
    v8 = v7;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8)
    v9 = v8;
  else
    v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  v11 = v8 + 1;
  switch(*((_BYTE *)a2 + v9))
  {
    case 0:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      v12 = 0;
      v13 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      v14 = v13[1];
      v15 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v15 = *v13;
      v15[1] = v14;
      break;
    case 1:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      v16 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      v17 = v16[1];
      v18 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v18 = *v16;
      v18[1] = v17;
      v12 = 1;
      break;
    case 2:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      v12 = 2;
      break;
    case 3:
      *a1 = *a2;
      v12 = 3;
      break;
    case 4:
      *a1 = *a2;
      v12 = 4;
      break;
    case 5:
      *a1 = *a2;
      v12 = 5;
      break;
    case 6:
      v19 = *((unsigned __int8 *)a2 + v8);
      if (v19 >= 3)
      {
        if (v8 <= 3)
          v20 = v8;
        else
          v20 = 4;
        __asm { BR              X13 }
      }
      if (v19 == 2)
      {
        *a1 = *a2;
        v21 = 2;
      }
      else if (v19 == 1)
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        v21 = 1;
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        v21 = 0;
        v22 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        v23 = v22[1];
        v24 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        *v24 = *v22;
        v24[1] = v23;
      }
      *((_BYTE *)a1 + v8) = v21;
      v25 = ((unint64_t)a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
      v26 = ((unint64_t)a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
      v27 = *(_OWORD *)v26;
      v28 = *(_OWORD *)(v26 + 16);
      *(_QWORD *)(v25 + 32) = *(_QWORD *)(v26 + 32);
      *(_OWORD *)v25 = v27;
      *(_OWORD *)(v25 + 16) = v28;
      v12 = 6;
      break;
    default:
      if (v9 <= 3)
        v10 = v9;
      else
        v10 = 4;
      __asm { BR              X13 }
      return result;
  }
  *((_BYTE *)a1 + v9) = v12;
  v29 = (_QWORD *)(((unint64_t)a2 + v9 + 8) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)a1 + v9 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v30 = *v29;
  v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v32 = *v31;
  v33 = (_OWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  v34 = (__int128 *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  v35 = *v34;
  v36 = v34[1];
  *(_OWORD *)((char *)v33 + 26) = *(__int128 *)((char *)v34 + 26);
  *v33 = v35;
  v33[1] = v36;
  *(_QWORD *)(((unint64_t)v33 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v34 + 49) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_1BA8DC624(_OWORD *a1, _OWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  _OWORD *v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  _OWORD *v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  _OWORD *v28;
  __int128 v29;
  _OWORD *v30;
  unint64_t v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = AssociatedTypeWitness;
  if (a1 != a2)
  {
    v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8)
      v8 = *(_QWORD *)(v6 + 64);
    if (v8 <= 0x10)
      v9 = 16;
    else
      v9 = v8;
    if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v9)
      v10 = v9;
    else
      v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
    v12 = v9 + 1;
    switch(*((_BYTE *)a1 + v10))
    {
      case 0:
      case 1:
        (*(void (**)(_OWORD *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
        v13 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v13 + 24) < 0xFFFFFFFFuLL)
          goto LABEL_38;
        goto LABEL_32;
      case 2:
        (*(void (**)(_OWORD *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_38;
      case 3:
      case 4:
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_38;
      case 6:
        v14 = *((unsigned __int8 *)a1 + v9);
        if (v14 >= 3)
        {
          if (v9 <= 3)
            v15 = v9;
          else
            v15 = 4;
          __asm { BR              X12 }
        }
        if (v14 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v14 == 1)
        {
          (*(void (**)(_OWORD *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(_OWORD *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          v16 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v16 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v16);
        }
        v13 = ((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
LABEL_32:
        __swift_destroy_boxed_opaque_existential_1(v13);
LABEL_38:
        switch(*((_BYTE *)a2 + v10))
        {
          case 0:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
            v18 = 0;
            v19 = (_OWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
            v20 = v19[1];
            v21 = (_OWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
            *v21 = *v19;
            v21[1] = v20;
            break;
          case 1:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
            v22 = (_OWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
            v23 = v22[1];
            v24 = (_OWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
            *v24 = *v22;
            v24[1] = v23;
            v18 = 1;
            break;
          case 2:
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
            v18 = 2;
            break;
          case 3:
            *a1 = *a2;
            v18 = 3;
            break;
          case 4:
            *a1 = *a2;
            v18 = 4;
            break;
          case 5:
            *a1 = *a2;
            v18 = 5;
            break;
          case 6:
            v25 = *((unsigned __int8 *)a2 + v9);
            if (v25 >= 3)
            {
              if (v9 <= 3)
                v26 = v9;
              else
                v26 = 4;
              __asm { BR              X12 }
            }
            if (v25 == 2)
            {
              *a1 = *a2;
              v27 = 2;
            }
            else if (v25 == 1)
            {
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
              v27 = 1;
            }
            else
            {
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
              v27 = 0;
              v28 = (_OWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
              v29 = v28[1];
              v30 = (_OWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
              *v30 = *v28;
              v30[1] = v29;
            }
            *((_BYTE *)a1 + v9) = v27;
            v31 = ((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
            v32 = ((unint64_t)a2 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
            v33 = *(_OWORD *)v32;
            v34 = *(_OWORD *)(v32 + 16);
            *(_QWORD *)(v31 + 32) = *(_QWORD *)(v32 + 32);
            *(_OWORD *)v31 = v33;
            *(_OWORD *)(v31 + 16) = v34;
            v18 = 6;
            break;
          default:
            if (v10 <= 3)
              v17 = v10;
            else
              v17 = 4;
            __asm { BR              X12 }
            return result;
        }
        *((_BYTE *)a1 + v10) = v18;
        break;
      default:
        if (v10 <= 3)
          v11 = v10;
        else
          v11 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
  v35 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  if (v35 <= ((v35 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v35 = ((v35 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v35 <= 0x10)
    v35 = 16;
  if ((v35 & 0xFFFFFFFFFFFFFFF8) + 48 > v35)
    v35 = (v35 & 0xFFFFFFFFFFFFFFF8) + 48;
  v36 = v35 + 8;
  v37 = (_QWORD *)(((unint64_t)a1 + v36) & 0xFFFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((unint64_t)a2 + v36) & 0xFFFFFFFFFFFFFFF8);
  *v37 = *v38;
  swift_release();
  v39 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFF8;
  v41 = *(_QWORD *)v40;
  v40 += 15;
  *v39 = v41;
  swift_bridgeObjectRelease();
  v42 = ((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  v43 = *(_QWORD *)(v40 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v42 + 8) = *(_BYTE *)((v40 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v42 = v43;
  v44 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_BYTE *)(v42 + 24) = *(_BYTE *)((v40 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)(v42 + 16) = v44;
  v45 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_BYTE *)(v42 + 40) = *(_BYTE *)((v40 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(_QWORD *)(v42 + 32) = v45;
  *(_BYTE *)(v42 + 41) = *(_BYTE *)((v40 & 0xFFFFFFFFFFFFFFF8) + 41);
  *(_QWORD *)((v42 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v40 & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BA8DCC38()
{
  return sub_1BA579404();
}

uint64_t sub_1BA8DCC5C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB880BA8, a1);
  return sub_1BB86E308();
}

uint64_t sub_1BA8DCC90(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t result;
  _BYTE v42[40];
  __int128 v43;
  unsigned __int8 v44;
  _BYTE v45[40];
  __int128 v46;
  unsigned __int8 v47;
  char *v48;
  char *v49;
  char *v50;

  v4 = __dst;
  v6 = a2;
  v8 = a2 - __src;
  v9 = a2 - __src + 63;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 6;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 63;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 6;
  v50 = __src;
  v49 = __dst;
  if (v10 >= v13)
  {
    if (v11 < -63)
      goto LABEL_73;
    v27 = v13 << 6;
    if (__dst != a2 || &a2[v27] <= __dst)
      memmove(__dst, a2, v13 << 6);
    v28 = &v4[v27];
    v48 = &v4[v27];
    v50 = v6;
    if (__src >= v6 || (unint64_t)(v11 - 64) > 0xFFFFFFFFFFFFFF80)
    {
LABEL_72:
      sub_1BACAA9AC((void **)&v50, (const void **)&v49, &v48);
      return 1;
    }
    v29 = (char *)(a3 - 64);
    while (1)
    {
      sub_1BA5F1E28((uint64_t)(v28 - 64), (uint64_t)v45);
      v33 = v6 - 64;
      sub_1BA5F1E28((uint64_t)(v6 - 64), (uint64_t)v42);
      v34 = v47;
      if (!v47)
        goto LABEL_52;
      if (v47 == 1)
        break;
      if (v46 == 0)
        v34 = 3;
      else
        v34 = 1;
      v35 = v44;
      if (v44)
        goto LABEL_58;
LABEL_63:
      v36 = v29 + 64;
      sub_1BA5F1DB4((uint64_t)v42);
      sub_1BA5F1DB4((uint64_t)v45);
      if (v34 >= v35)
      {
        v37 = (unint64_t)v48;
        v28 = v48 - 64;
        v48 -= 64;
        if ((unint64_t)v36 < v37 || (unint64_t)v29 >= v37 || v36 != (char *)v37)
        {
          v38 = *(_OWORD *)v28;
          v39 = *(_OWORD *)(v37 - 48);
          v40 = *(_OWORD *)(v37 - 16);
          *((_OWORD *)v29 + 2) = *(_OWORD *)(v37 - 32);
          *((_OWORD *)v29 + 3) = v40;
          *(_OWORD *)v29 = v38;
          *((_OWORD *)v29 + 1) = v39;
        }
        v33 = v6;
        if (v28 <= v4)
          goto LABEL_72;
      }
      else
      {
        if (v36 != v6 || v29 >= v6)
        {
          v30 = *(_OWORD *)v33;
          v31 = *((_OWORD *)v6 - 3);
          v32 = *((_OWORD *)v6 - 1);
          *((_OWORD *)v29 + 2) = *((_OWORD *)v6 - 2);
          *((_OWORD *)v29 + 3) = v32;
          *(_OWORD *)v29 = v30;
          *((_OWORD *)v29 + 1) = v31;
        }
        v50 -= 64;
        v28 = v48;
        if (v48 <= v4)
          goto LABEL_72;
      }
      v29 -= 64;
      v6 = v33;
      if (v33 <= __src)
        goto LABEL_72;
    }
    v34 = 2;
LABEL_52:
    v35 = v44;
    if (!v44)
      goto LABEL_63;
LABEL_58:
    if ((_DWORD)v35 == 1)
    {
      v35 = 2;
    }
    else if (v43 == 0)
    {
      v35 = 3;
    }
    else
    {
      v35 = 1;
    }
    goto LABEL_63;
  }
  if (v8 >= -63)
  {
    v14 = v10 << 6;
    if (__dst != __src || &__src[v14] <= __dst)
      memmove(__dst, __src, v14);
    v15 = (unint64_t)&v4[v14];
    v48 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 64) <= 0xFFFFFFFFFFFFFF80)
    {
      while (1)
      {
        sub_1BA5F1E28((uint64_t)v6, (uint64_t)v45);
        sub_1BA5F1E28((uint64_t)v4, (uint64_t)v42);
        v16 = v47;
        if (v47)
        {
          if (v47 != 1)
          {
            if (v46 == 0)
              v16 = 3;
            else
              v16 = 1;
            v17 = v44;
            if (!v44)
              goto LABEL_26;
LABEL_21:
            if ((_DWORD)v17 == 1)
            {
              v17 = 2;
            }
            else if (v43 == 0)
            {
              v17 = 3;
            }
            else
            {
              v17 = 1;
            }
            goto LABEL_26;
          }
          v16 = 2;
        }
        v17 = v44;
        if (v44)
          goto LABEL_21;
LABEL_26:
        sub_1BA5F1DB4((uint64_t)v42);
        sub_1BA5F1DB4((uint64_t)v45);
        v18 = v50;
        if (v16 >= v17)
        {
          v23 = v49 + 64;
          if (v50 != v49 || v50 >= v23)
          {
            v24 = *(_OWORD *)v49;
            v25 = *((_OWORD *)v49 + 1);
            v26 = *((_OWORD *)v49 + 3);
            *((_OWORD *)v50 + 2) = *((_OWORD *)v49 + 2);
            *((_OWORD *)v18 + 3) = v26;
            *(_OWORD *)v18 = v24;
            *((_OWORD *)v18 + 1) = v25;
          }
          v49 = v23;
          v19 = (unint64_t)v6;
        }
        else
        {
          v19 = (unint64_t)(v6 + 64);
          if (v50 >= v6 && (unint64_t)v50 < v19 && v50 == v6)
          {
            v18 = v6;
          }
          else
          {
            v20 = *(_OWORD *)v6;
            v21 = *((_OWORD *)v6 + 1);
            v22 = *((_OWORD *)v6 + 3);
            *((_OWORD *)v50 + 2) = *((_OWORD *)v6 + 2);
            *((_OWORD *)v18 + 3) = v22;
            *(_OWORD *)v18 = v20;
            *((_OWORD *)v18 + 1) = v21;
          }
        }
        v50 = v18 + 64;
        v4 = v49;
        if ((unint64_t)v49 < v15)
        {
          v6 = (char *)v19;
          if (v19 < a3)
            continue;
        }
        goto LABEL_72;
      }
    }
    goto LABEL_72;
  }
LABEL_73:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BA8DD05C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8DD080()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8DD0A4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1BA8DB660(*(double *)(v2 + 16), a1, a2, *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BA8DD0C0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8DD0E4@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BA8DB098(a1, a2, *(_QWORD *)(v3 + 16), v3 + 24, a3, *(double *)(v3 + 72));
}

uint64_t sub_1BA8DD104()
{
  return swift_deallocObject();
}

uint64_t sub_1BA8DD114()
{
  uint64_t v0;

  return sub_1BA8DAE58(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1BA8DD120()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8DD144()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1BA8DD16C(uint64_t a1, uint64_t a2)
{
  return sub_1BA8DAD78(a1, a2);
}

char *sub_1BA8DD180(char *a1, char **a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  char *v27;
  char v28;
  char *v29;
  char *v30;
  unsigned int v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __int128 v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _OWORD *v47;
  __int128 *v48;
  __int128 v49;
  __int128 v50;
  char *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7)
    v7 = *(_QWORD *)(v5 + 64);
  if (v7 <= 0x10)
    v8 = 16;
  else
    v8 = v7;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8)
    v9 = v8;
  else
    v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  if ((((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8)
    v10 = 8;
  else
    v10 = (((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  v11 = *(_DWORD *)(v5 + 80);
  if ((v11 & 0x1000F8) != 0 || (v10 | 1) > 0x18)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v15[(unsigned __int16)((v11 & 0xF8) + 23) & (unsigned __int16)~(v11 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v12 = *((unsigned __int8 *)a2 + v10);
    if ((v10 & 0xFFFFFFF8) != 0 && v12 >= 2)
      v12 = *(_DWORD *)a2 + 2;
    if (v12 == 1)
    {
      v16 = *a2;
      v17 = v16;
      *(_QWORD *)a1 = v16;
      a1[v10] = 1;
    }
    else if (v12)
    {
      memcpy(a1, a2, v10 | 1);
    }
    else
    {
      v18 = v8 + 1;
      v19 = v9 + 1;
      switch(*((_BYTE *)a2 + v9))
      {
        case 0:
          (*(void (**)(char *, char **, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          v20 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          v21 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          v22 = *(_QWORD *)(v21 + 24);
          if (v22 < 0xFFFFFFFF)
          {
            v33 = *(_OWORD *)(v21 + 16);
            *(_OWORD *)v20 = *(_OWORD *)v21;
            *(_OWORD *)(v20 + 16) = v33;
          }
          else
          {
            *(_QWORD *)(v20 + 24) = v22;
            (**(void (***)(void))(v22 - 8))();
          }
          a1[v9] = 0;
          break;
        case 1:
          (*(void (**)(char *, char **, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          v23 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          v24 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          v25 = *(_QWORD *)(v24 + 24);
          if (v25 < 0xFFFFFFFF)
          {
            v34 = *(_OWORD *)(v24 + 16);
            *(_OWORD *)v23 = *(_OWORD *)v24;
            *(_OWORD *)(v23 + 16) = v34;
          }
          else
          {
            *(_QWORD *)(v23 + 24) = v25;
            (**(void (***)(void))(v25 - 8))();
          }
          v26 = 1;
          goto LABEL_58;
        case 2:
          (*(void (**)(char *, char **, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          v26 = 2;
          goto LABEL_58;
        case 3:
          v27 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v27;
          v28 = 3;
          goto LABEL_41;
        case 4:
          v29 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v29;
          v28 = 4;
          goto LABEL_41;
        case 5:
          v30 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v30;
          v28 = 5;
LABEL_41:
          a1[v9] = v28;
          swift_bridgeObjectRetain();
          break;
        case 6:
          v31 = *((unsigned __int8 *)a2 + v8);
          if (v31 >= 3)
          {
            if (v8 <= 3)
              v32 = v8;
            else
              v32 = 4;
            __asm { BR              X14 }
          }
          if (v31 == 2)
          {
            v35 = a2[1];
            *(_QWORD *)a1 = *a2;
            *((_QWORD *)a1 + 1) = v35;
            a1[v8] = 2;
            swift_bridgeObjectRetain();
          }
          else if (v31 == 1)
          {
            (*(void (**)(char *, char **, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
            a1[v8] = 1;
          }
          else
          {
            (*(void (**)(char *, char **, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
            v36 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
            v37 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
            v38 = *(_QWORD *)(v37 + 24);
            if (v38 < 0xFFFFFFFF)
            {
              v39 = *(_OWORD *)(v37 + 16);
              *(_OWORD *)v36 = *(_OWORD *)v37;
              *(_OWORD *)(v36 + 16) = v39;
            }
            else
            {
              *(_QWORD *)(v36 + 24) = v38;
              (**(void (***)(void))(v38 - 8))();
            }
            a1[v8] = 0;
          }
          v40 = (unint64_t)&a1[v18 + 7] & 0xFFFFFFFFFFFFFFF8;
          v41 = ((unint64_t)a2 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
          v42 = *(_QWORD *)(v41 + 24);
          *(_QWORD *)(v40 + 24) = v42;
          *(_QWORD *)(v40 + 32) = *(_QWORD *)(v41 + 32);
          (**(void (***)(void))(v42 - 8))();
          v26 = 6;
LABEL_58:
          a1[v9] = v26;
          break;
        default:
          if (v9 <= 3)
            v14 = v9;
          else
            v14 = 4;
          __asm { BR              X14 }
          return result;
      }
      v43 = (_QWORD *)((unint64_t)&a1[v19 + 7] & 0xFFFFFFFFFFFFFFF8);
      v44 = (_QWORD *)(((unint64_t)a2 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v43 = *v44;
      v45 = (_QWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFF8);
      v46 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v45 = *v46;
      v47 = (_OWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
      v48 = (__int128 *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
      v49 = *v48;
      v50 = v48[1];
      *(_OWORD *)((char *)v47 + 26) = *(__int128 *)((char *)v48 + 26);
      *v47 = v49;
      v47[1] = v50;
      *(_QWORD *)(((unint64_t)v47 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v48 + 49) & 0xFFFFFFFFFFFFF8);
      a1[v10] = 0;
      swift_retain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

_QWORD *sub_1BA8DD698(_QWORD *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  _OWORD *v17;
  __int128 v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  _OWORD *v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  _OWORD *v26;
  __int128 v27;
  _OWORD *v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  _OWORD *v37;
  __int128 *v38;
  __int128 v39;
  __int128 v40;
  _QWORD *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7)
    v7 = *(_QWORD *)(v5 + 64);
  if (v7 <= 0x10)
    v8 = 16;
  else
    v8 = v7;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8)
    v9 = v8;
  else
    v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  if ((((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8)
    v10 = 8;
  else
    v10 = (((((((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  v11 = *((unsigned __int8 *)a2 + v10);
  if (v11 >= 2 && (v10 & 0xFFFFFFF8) != 0)
    v11 = *a2 + 2;
  if (v11 == 1)
  {
    *a1 = *(_QWORD *)a2;
    *((_BYTE *)a1 + v10) = 1;
  }
  else if (v11)
  {
    memcpy(a1, a2, v10 | 1);
  }
  else
  {
    v14 = v8 + 1;
    v15 = v9 + 1;
    switch(*((_BYTE *)a2 + v9))
    {
      case 0:
        (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        v16 = 0;
        v17 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        v18 = v17[1];
        v19 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        *v19 = *v17;
        v19[1] = v18;
        break;
      case 1:
        (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        v20 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        v21 = v20[1];
        v22 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        *v22 = *v20;
        v22[1] = v21;
        v16 = 1;
        break;
      case 2:
        (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        v16 = 2;
        break;
      case 3:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v16 = 3;
        break;
      case 4:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v16 = 4;
        break;
      case 5:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v16 = 5;
        break;
      case 6:
        v23 = *((unsigned __int8 *)a2 + v8);
        if (v23 >= 3)
        {
          if (v8 <= 3)
            v24 = v8;
          else
            v24 = 4;
          __asm { BR              X13 }
        }
        if (v23 == 2)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v25 = 2;
        }
        else if (v23 == 1)
        {
          (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
          v25 = 1;
        }
        else
        {
          (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
          v25 = 0;
          v26 = (_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
          v27 = v26[1];
          v28 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
          *v28 = *v26;
          v28[1] = v27;
        }
        *((_BYTE *)a1 + v8) = v25;
        v29 = ((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
        v30 = ((unint64_t)a2 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
        v31 = *(_OWORD *)v30;
        v32 = *(_OWORD *)(v30 + 16);
        *(_QWORD *)(v29 + 32) = *(_QWORD *)(v30 + 32);
        *(_OWORD *)v29 = v31;
        *(_OWORD *)(v29 + 16) = v32;
        v16 = 6;
        break;
      default:
        if (v9 <= 3)
          v13 = v9;
        else
          v13 = 4;
        __asm { BR              X13 }
        return result;
    }
    *((_BYTE *)a1 + v9) = v16;
    v33 = (_QWORD *)(((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
    v34 = (_QWORD *)(((unint64_t)a2 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v33 = *v34;
    v35 = (_QWORD *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFF8);
    v36 = (_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v35 = *v36;
    v37 = (_OWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
    v38 = (__int128 *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
    v39 = *v38;
    v40 = v38[1];
    *(_OWORD *)((char *)v37 + 26) = *(__int128 *)((char *)v38 + 26);
    *v37 = v39;
    v37[1] = v40;
    *(_QWORD *)(((unint64_t)v37 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v38 + 49) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)a1 + v10) = 0;
  }
  return a1;
}

id *sub_1BA8DDACC(id *a1, id *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(id *, uint64_t);
  unint64_t v18;
  void (*v19)(id *, uint64_t);
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v25;
  char v26;
  _OWORD *v27;
  __int128 v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  _OWORD *v32;
  unsigned int v33;
  uint64_t v34;
  char v35;
  _OWORD *v36;
  __int128 v37;
  _OWORD *v38;
  unint64_t v39;
  unint64_t v40;
  __int128 v41;
  __int128 v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _OWORD *v47;
  __int128 *v48;
  __int128 v49;
  __int128 v50;
  id *result;
  uint64_t v52;
  unint64_t v53;

  if (a1 != a2)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = AssociatedTypeWitness;
    v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
    if (v7 > v8)
      v8 = *(_QWORD *)(v6 + 64);
    if (v8 <= 0x10)
      v9 = 16;
    else
      v9 = v8;
    if ((v9 & 0xFFFFFFFFFFFFFFF8) + 48 <= v9)
      v10 = v9;
    else
      v10 = (v9 & 0xFFFFFFFFFFFFFFF8) + 48;
    if ((((((((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8) == 0xFFFFFFFFFFFFFFF8)
      v11 = 8;
    else
      v11 = (((((((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
          + 8;
    v12 = *((unsigned __int8 *)a1 + v11);
    if (v12 >= 2 && (v11 & 0xFFFFFFF8) != 0)
      v12 = *(_DWORD *)a1 + 2;
    v53 = v9 + 1;
    v14 = v10 + 1;
    if (v12 == 1)
    {

    }
    else if (!v12)
    {
      v52 = *(_QWORD *)(AssociatedTypeWitness - 8);
      switch(*((_BYTE *)a1 + v10))
      {
        case 0:
        case 1:
          v17 = *(void (**)(id *, uint64_t))(v6 + 8);
          v16 = AssociatedTypeWitness;
          v17(a1, AssociatedTypeWitness);
          v18 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v18 + 24) < 0xFFFFFFFFuLL)
            goto LABEL_44;
          goto LABEL_43;
        case 2:
          v19 = *(void (**)(id *, uint64_t))(v6 + 8);
          v16 = AssociatedTypeWitness;
          v19(a1, AssociatedTypeWitness);
          goto LABEL_44;
        case 3:
        case 4:
        case 5:
          v16 = AssociatedTypeWitness;
          swift_bridgeObjectRelease();
          goto LABEL_44;
        case 6:
          v20 = *((unsigned __int8 *)a1 + v9);
          if (v20 >= 3)
          {
            if (v9 <= 3)
              v21 = v9;
            else
              v21 = 4;
            __asm { BR              X12 }
          }
          if (v20 == 2)
          {
            swift_bridgeObjectRelease();
          }
          else if (v20 == 1)
          {
            (*(void (**)(id *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
          }
          else
          {
            (*(void (**)(id *, uint64_t))(v6 + 8))(a1, AssociatedTypeWitness);
            v22 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
            if (*(_QWORD *)(v22 + 24) >= 0xFFFFFFFFuLL)
              __swift_destroy_boxed_opaque_existential_1(v22);
          }
          v16 = v5;
          v18 = ((unint64_t)a1 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
LABEL_43:
          __swift_destroy_boxed_opaque_existential_1(v18);
LABEL_44:
          swift_release();
          v14 = v10 + 1;
          swift_bridgeObjectRelease();
          v5 = v16;
          v6 = v52;
          break;
        default:
          if (v10 <= 3)
            v15 = v10;
          else
            v15 = 4;
          __asm { BR              X12 }
          return result;
      }
    }
    v23 = *((unsigned __int8 *)a2 + v11);
    if ((v11 & 0xFFFFFFF8) != 0 && v23 >= 2)
      v23 = *(_DWORD *)a2 + 2;
    if (v23 == 1)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v11) = 1;
    }
    else if (v23)
    {
      memcpy(a1, a2, v11 | 1);
    }
    else
    {
      switch(*((_BYTE *)a2 + v10))
      {
        case 0:
          (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
          v26 = 0;
          v27 = (_OWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
          v28 = v27[1];
          v29 = (_OWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
          *v29 = *v27;
          v29[1] = v28;
          break;
        case 1:
          (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
          v30 = (_OWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
          v31 = v30[1];
          v32 = (_OWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
          *v32 = *v30;
          v32[1] = v31;
          v26 = 1;
          break;
        case 2:
          (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
          v26 = 2;
          break;
        case 3:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v26 = 3;
          break;
        case 4:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v26 = 4;
          break;
        case 5:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v26 = 5;
          break;
        case 6:
          v33 = *((unsigned __int8 *)a2 + v9);
          if (v33 >= 3)
          {
            if (v9 <= 3)
              v34 = v9;
            else
              v34 = 4;
            __asm { BR              X12 }
          }
          if (v33 == 2)
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            v35 = 2;
          }
          else if (v33 == 1)
          {
            (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
            v35 = 1;
          }
          else
          {
            (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
            v35 = 0;
            v36 = (_OWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
            v37 = v36[1];
            v38 = (_OWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
            *v38 = *v36;
            v38[1] = v37;
          }
          *((_BYTE *)a1 + v9) = v35;
          v39 = ((unint64_t)a1 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
          v40 = ((unint64_t)a2 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
          v41 = *(_OWORD *)v40;
          v42 = *(_OWORD *)(v40 + 16);
          *(_QWORD *)(v39 + 32) = *(_QWORD *)(v40 + 32);
          *(_OWORD *)v39 = v41;
          *(_OWORD *)(v39 + 16) = v42;
          v26 = 6;
          break;
        default:
          if (v10 <= 3)
            v25 = v10;
          else
            v25 = 4;
          __asm { BR              X12 }
          return result;
      }
      *((_BYTE *)a1 + v10) = v26;
      v43 = (_QWORD *)(((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
      v44 = (_QWORD *)(((unint64_t)a2 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v43 = *v44;
      v45 = (_QWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFF8);
      v46 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v45 = *v46;
      v47 = (_OWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
      v48 = (__int128 *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
      v49 = *v48;
      v50 = v48[1];
      *(_OWORD *)((char *)v47 + 26) = *(__int128 *)((char *)v48 + 26);
      *v47 = v49;
      v47[1] = v50;
      *(_QWORD *)(((unint64_t)v47 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v48 + 49) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)a1 + v11) = 0;
    }
  }
  return a1;
}

uint64_t sub_1BA8DE184(unsigned __int8 *a1, unsigned int a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  char v10;
  unsigned int v11;
  int v12;
  int v14;
  int v15;
  unsigned int v16;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 <= 0x10)
    v4 = 16;
  if ((v4 & 0xFFFFFFFFFFFFFFF8) + 48 > v4)
    v4 = (v4 & 0xFFFFFFFFFFFFFFF8) + 48;
  v5 = (((((((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  v6 = 8;
  if (v5)
    v6 = v5;
  if ((v6 & 0xFFFFFFF8) != 0)
    v7 = -253;
  else
    v7 = -251;
  if ((v6 & 0xFFFFFFF8) != 0)
    v8 = 253;
  else
    v8 = 251;
  if (!a2)
    return 0;
  if (v8 >= a2)
    goto LABEL_32;
  v9 = v6 | 1;
  v10 = 8 * (v6 | 1);
  if ((v6 | 1) <= 3)
  {
    v11 = (v7 + a2 + ~(-1 << v10)) >> v10;
    if (v11 > 0xFFFE)
    {
      v12 = *(_DWORD *)&a1[v9];
      if (!v12)
        goto LABEL_32;
      goto LABEL_25;
    }
    if (v11 > 0xFE)
    {
      v12 = *(unsigned __int16 *)&a1[v9];
      if (!*(_WORD *)&a1[v9])
        goto LABEL_32;
      goto LABEL_25;
    }
    if (!v11)
      goto LABEL_32;
  }
  v12 = a1[v9];
  if (!a1[v9])
  {
LABEL_32:
    v16 = a1[v6] ^ 0xFF;
    if (v8 > v16)
      return v16 + 1;
    else
      return 0;
  }
LABEL_25:
  v14 = (v12 - 1) << v10;
  if (v9 >= 4)
    v14 = 0;
  if ((_DWORD)v9 == 1)
    v15 = *a1;
  else
    v15 = *(_DWORD *)a1;
  return v8 + (v15 | v14) + 1;
}

void sub_1BA8DE34C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6;
  unint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v6 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 <= 0x10)
    v6 = 16;
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 48 > v6)
    v6 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  v7 = (((((((v6 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (!v7)
    v7 = 8;
  if ((v7 & 0xFFFFFFF8) != 0)
    v8 = -253;
  else
    v8 = -251;
  if ((v7 & 0xFFFFFFF8) != 0)
    v9 = 253;
  else
    v9 = 251;
  v10 = v7 | 1;
  if (v9 >= a3)
  {
    v11 = 0u;
  }
  else if (v10 <= 3)
  {
    v13 = (v8 + a3 + ~(-1 << (8 * v10))) >> (8 * v10);
    if (v13 > 0xFFFE)
    {
      v11 = 4u;
    }
    else if (v13 >= 0xFF)
    {
      v11 = 2;
    }
    else
    {
      v11 = v13 != 0;
    }
  }
  else
  {
    v11 = 1u;
  }
  if (v9 >= a2)
    __asm { BR              X11 }
  v12 = ~v9 + a2;
  if (v10 < 4)
  {
    v12 &= ~(-1 << (8 * v10));
    bzero(a1, v10);
    if ((_DWORD)v10 == 1)
    {
      *a1 = v12;
      goto LABEL_30;
    }
  }
  else
  {
    bzero(a1, v10);
  }
  *(_DWORD *)a1 = v12;
LABEL_30:
  __asm { BR              X10 }
}

uint64_t FormatBoxScoreDataVisualization.eventIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBoxScoreDataVisualization.tagIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBoxScoreDataVisualization.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8DE640(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 48) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatBoxScoreDataVisualization.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBoxScoreDataVisualization.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatBoxScoreDataVisualization.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8DE750(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatBoxScoreDataVisualization.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBoxScoreDataVisualization.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *FormatBoxScoreDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

_QWORD *FormatBoxScoreDataVisualization.init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1BA8DE938()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA8DE974 + 4 * byte_1BB880C80[*v0]))(0x656449746E657665, 0xEF7265696669746ELL);
}

uint64_t sub_1BA8DE974()
{
  return 0x746E656449676174;
}

uint64_t sub_1BA8DE998()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BA8DE9B4()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BA8DE9D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA8DF5DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA8DE9F4()
{
  sub_1BA8DED54();
  return sub_1BB874710();
}

uint64_t sub_1BA8DEA1C()
{
  sub_1BA8DED54();
  return sub_1BB87471C();
}

uint64_t FormatBoxScoreDataVisualization.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatBoxScoreDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatBoxScoreDataVisualization.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v14[4];
  _QWORD *v15;
  char v16;
  char v17;

  v3 = v1;
  sub_1BA8DF280(0, &qword_1EF2A9A90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA8DED54();
  sub_1BB8746C8();
  v16 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v16 = 1;
    sub_1BB87417C();
    swift_beginAccess();
    v11 = *(_QWORD *)(v3 + 48);
    if (*(_QWORD *)(v11 + 16))
    {
      v17 = 2;
      swift_bridgeObjectRetain_n();
      v12 = sub_1BA67F4CC(v11);
      swift_bridgeObjectRelease();
      v15 = v12;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v15);
      swift_release();
      v14[1] = v15;
      sub_1BA8DF228();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v13 = *(_QWORD *)(v3 + 56);
    if (*(_QWORD *)(v13 + 16))
    {
      v17 = 3;
      v15 = (_QWORD *)v13;
      sub_1BA8DF228();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA89BC1C();
      sub_1BB874464();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BA8DED54()
{
  unint64_t result;

  result = qword_1EF2A9A98;
  if (!qword_1EF2A9A98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB880E44, &type metadata for FormatBoxScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9A98);
  }
  return result;
}

uint64_t FormatBoxScoreDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatBoxScoreDataVisualization.init(from:)(a1);
  return v2;
}

_QWORD *FormatBoxScoreDataVisualization.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;

  v38 = *v1;
  sub_1BA89B794();
  v34 = v3;
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v36 = v5;
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8DF280(0, &qword_1EF2A9AA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v29 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA8DED54();
  v13 = v37;
  v14 = v1;
  sub_1BB87468C();
  if (v13)
  {
    swift_deallocPartialClassInstance();
    v18 = (uint64_t)a1;
  }
  else
  {
    v15 = v7;
    v16 = v36;
    v37 = a1;
    v44 = 0;
    v1[2] = sub_1BB874098();
    v1[3] = v17;
    v43 = 1;
    v1[4] = sub_1BB874098();
    v1[5] = v20;
    v30 = v1;
    v42 = 2;
    v21 = sub_1BB8740F8();
    v31 = v12;
    if ((v21 & 1) != 0)
    {
      v39 = 2;
      sub_1BA50AD30(&qword_1ED3BBE20, 255, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
      sub_1BB8740D4();
      v22 = v9;
      v23 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v16);
    }
    else
    {
      v22 = v9;
      v23 = MEMORY[0x1E0DEE9E8];
    }
    v14 = v30;
    v30[6] = v23;
    v41 = 3;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v40 = 3;
      sub_1BA50AD30(&qword_1ED39EDD8, 255, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
      v24 = v34;
      v25 = v35;
      sub_1BB8740D4();
      v26 = v22;
      v27 = sub_1BB86DD08();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v25, v24);
    }
    else
    {
      v27 = MEMORY[0x1E0DEE9D8];
      v26 = v22;
    }
    v28 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v26);
    v14[7] = v27;
    v18 = v28;
  }
  __swift_destroy_boxed_opaque_existential_1(v18);
  return v14;
}

_QWORD *sub_1BA8DF1A8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatBoxScoreDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BA8DF1FC(_QWORD *a1)
{
  return FormatBoxScoreDataVisualization.encode(to:)(a1);
}

uint64_t sub_1BA8DF21C(_QWORD **a1, _QWORD **a2)
{
  return static FormatBoxScoreDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1BA8DF228()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2A9AA0;
  if (!qword_1EF2A9AA0)
  {
    sub_1BA8DF280(255, &qword_1EF2A9A90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9AA0);
  }
  return result;
}

void sub_1BA8DF280(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA8DED54();
    v7 = a3(a1, &type metadata for FormatBoxScoreDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BA8DF2DC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30((unint64_t *)&unk_1EF2B1C30, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatBoxScoreDataVisualization, (uint64_t)&protocol conformance descriptor for FormatBoxScoreDataVisualization);
  a1[2] = sub_1BA50AD30((unint64_t *)&unk_1EF2B1C70, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatBoxScoreDataVisualization, (uint64_t)&protocol conformance descriptor for FormatBoxScoreDataVisualization);
  result = sub_1BA50AD30(&qword_1EF2A9AB0, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatBoxScoreDataVisualization, (uint64_t)&protocol conformance descriptor for FormatBoxScoreDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatBoxScoreDataVisualization()
{
  return objc_opt_self();
}

uint64_t sub_1BA8DF374@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8DF3C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatBoxScoreDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatBoxScoreDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatBoxScoreDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t storeEnumTagSinglePayload for FormatBoxScoreDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BA8DF484 + 4 * byte_1BB880C89[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BA8DF4B8 + 4 * byte_1BB880C84[v4]))();
}

uint64_t sub_1BA8DF4B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8DF4C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8DF4C8);
  return result;
}

uint64_t sub_1BA8DF4D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8DF4DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BA8DF4E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8DF4E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatBoxScoreDataVisualization.CodingKeys()
{
  return &type metadata for FormatBoxScoreDataVisualization.CodingKeys;
}

unint64_t sub_1BA8DF508()
{
  unint64_t result;

  result = qword_1EF2A9B78;
  if (!qword_1EF2A9B78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB880E1C, &type metadata for FormatBoxScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9B78);
  }
  return result;
}

unint64_t sub_1BA8DF550()
{
  unint64_t result;

  result = qword_1EF2A9B80;
  if (!qword_1EF2A9B80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB880D8C, &type metadata for FormatBoxScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9B80);
  }
  return result;
}

unint64_t sub_1BA8DF598()
{
  unint64_t result;

  result = qword_1EF2A9B88;
  if (!qword_1EF2A9B88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB880DB4, &type metadata for FormatBoxScoreDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9B88);
  }
  return result;
}

uint64_t sub_1BA8DF5DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656449746E657665 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E656449676174 && a2 == 0xED00007265696669 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

id sub_1BA8DF7F4(double a1, double a2, double a3, double a4)
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, a1, a2, a3, a4);
}

id WebEmbedErrorView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

char *WebEmbedErrorView.init(frame:)(double a1, double a2, double a3, double a4)
{
  void *v4;
  id v9;
  char *v10;
  id v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t ObjCClassFromMetadata;
  void *v16;
  char *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  char *v47;
  id v48;
  _QWORD aBlock[6];
  objc_super v51;

  v9 = objc_allocWithZone(MEMORY[0x1E0DC3990]);
  v10 = v4;
  v11 = objc_msgSend(v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed17WebEmbedErrorView_label] = v11;

  v51.receiver = v10;
  v51.super_class = (Class)type metadata accessor for WebEmbedErrorView();
  v12 = (char *)objc_msgSendSuper2(&v51, sel_initWithFrame_, a1, a2, a3, a4);
  v13 = OBJC_IVAR____TtC8NewsFeed17WebEmbedErrorView_label;
  v14 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed17WebEmbedErrorView_label];
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v16 = (void *)objc_opt_self();
  v17 = v12;
  v18 = v14;
  v19 = objc_msgSend(v16, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v20 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setText_, v20, 0x80000001BB961A80);

  v21 = *(void **)&v12[v13];
  v22 = *MEMORY[0x1E0DC4A88];
  v23 = objc_allocWithZone(MEMORY[0x1E0DC37F8]);
  v24 = v21;
  v25 = objc_msgSend(v23, sel_initForTextStyle_, v22);
  v26 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 16.0);
  v27 = objc_msgSend(v25, sel_scaledFontForFont_, v26);

  objc_msgSend(v24, sel_setFont_, v27);
  v28 = *(void **)&v12[v13];
  objc_msgSend(v28, sel_setTextAlignment_, 1);
  v29 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v30 = v28;
  v31 = objc_msgSend(v29, sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 1.0);
  objc_msgSend(v30, sel_setTextColor_, v31);

  v32 = *(void **)&v12[v13];
  objc_msgSend(v32, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v32, sel_setNumberOfLines_, 2);
  objc_msgSend(v17, sel_addSubview_, v32);
  v33 = objc_msgSend(v32, sel_leadingAnchor);
  v34 = objc_msgSend(v17, sel_leadingAnchor);
  v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  objc_msgSend(v35, sel_setActive_, 1);
  v36 = objc_msgSend(*(id *)&v12[v13], sel_trailingAnchor);
  v37 = objc_msgSend(v17, sel_trailingAnchor);
  v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  objc_msgSend(v38, sel_setActive_, 1);
  v39 = objc_msgSend(*(id *)&v12[v13], sel_topAnchor);
  v40 = objc_msgSend(v17, sel_topAnchor);
  v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

  objc_msgSend(v41, sel_setActive_, 1);
  v42 = objc_msgSend(*(id *)&v12[v13], sel_bottomAnchor);
  v43 = objc_msgSend(v17, sel_bottomAnchor);
  v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  objc_msgSend(v44, sel_setActive_, 1);
  v45 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  aBlock[4] = sub_1BA8DFE10;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA61387C;
  aBlock[3] = &block_descriptor_1;
  v46 = _Block_copy(aBlock);
  v47 = v17;
  v48 = objc_msgSend(v45, sel_initWithDynamicProvider_, v46);
  _Block_release(v46);
  swift_release();
  objc_msgSend(v47, sel_setBackgroundColor_, v48);

  return v47;
}

id sub_1BA8DFE10(void *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.949019608, 0.949019608, 0.968627451, 1.0);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.109803922, 0.109803922, 0.117647059, 1.0);
  v4 = objc_msgSend(a1, sel_userInterfaceStyle);
  if (v4 == (id)2)
    v5 = v2;
  else
    v5 = v3;
  if (v4 == (id)2)
    v6 = v3;
  else
    v6 = v2;

  return v6;
}

void sub_1BA8DFEE0()
{
  char *v0;
  void *v1;
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  objc_super v5;
  CGRect v6;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for WebEmbedErrorView();
  objc_msgSendSuper2(&v5, sel_layoutSubviews);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v6);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed17WebEmbedErrorView_label];
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v4 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setText_, v4, 0x80000001BB961A80);

}

id WebEmbedErrorView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WebEmbedErrorView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for WebEmbedErrorView()
{
  return objc_opt_self();
}

uint64_t method lookup function for WebEmbedErrorView()
{
  return swift_lookUpClassMethod();
}

uint64_t FormatButtonNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BA8E0198(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatButtonNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatButtonNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v3;
  return sub_1BA71CA6C(v3);
}

unint64_t sub_1BA8E02C4(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v3 + 32) = v2;
  sub_1BA71CA6C(v2);
  return sub_1BA719718(v4);
}

unint64_t FormatButtonNode.size.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = v2;
  return sub_1BA719718(v3);
}

uint64_t (*FormatButtonNode.size.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatButtonNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatButtonNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 56);
}

uint64_t FormatButtonNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatButtonNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t FormatButtonNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 64);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

unint64_t sub_1BA8E054C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  *(_QWORD *)(v3 + 64) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatButtonNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v1 + 64) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatButtonNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t FormatButtonNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 72) = a1;
  return result;
}

uint64_t (*FormatButtonNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatButtonNode.children.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.stateMasks.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatButtonNode.stateMasks.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.stateMasks.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.action.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatButtonNode.actionName.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 104);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatButtonNode.longPressAction.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 112);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatButtonNode.longPressActionName.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

void FormatButtonNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 136);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 128);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatButtonNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatButtonNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8E08BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 152) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatButtonNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 152) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatButtonNode.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.behaviors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8E0AA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 176) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatButtonNode.behaviors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 176) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.behaviors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.sourceItems.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8E0BB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 184) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatButtonNode.sourceItems.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 184) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.sourceItems.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.__allocating_init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:children:stateMasks:action:actionName:longPressAction:longPressActionName:accessibilityRole:animation:selectors:name:behaviors:sourceItems:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, char a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14, uint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v29;

  v29 = swift_allocObject();
  FormatButtonNode.init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:children:stateMasks:action:actionName:longPressAction:longPressActionName:accessibilityRole:animation:selectors:name:behaviors:sourceItems:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21);
  return v29;
}

uint64_t FormatButtonNode.init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:children:stateMasks:action:actionName:longPressAction:longPressActionName:accessibilityRole:animation:selectors:name:behaviors:sourceItems:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, char a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14, uint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v26 = *a3;
  v27 = *a4;
  v28 = *a7;
  v34 = *a12;
  v35 = *a11;
  v32 = *a14;
  v33 = *a13;
  v31 = *a15;
  v30 = *((_BYTE *)a15 + 8);
  *(_QWORD *)(v21 + 168) = 0;
  *(_QWORD *)(v21 + 160) = 0;
  swift_beginAccess();
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  swift_beginAccess();
  *(_QWORD *)(v21 + 32) = v26;
  *(_QWORD *)(v21 + 40) = v27;
  swift_beginAccess();
  *(_QWORD *)(v21 + 48) = a5;
  swift_beginAccess();
  *(_QWORD *)(v21 + 56) = a6;
  swift_beginAccess();
  *(_QWORD *)(v21 + 64) = v28;
  swift_beginAccess();
  *(_BYTE *)(v21 + 72) = a8;
  swift_beginAccess();
  *(_QWORD *)(v21 + 80) = a9;
  swift_beginAccess();
  *(_QWORD *)(v21 + 88) = a10;
  *(_QWORD *)(v21 + 96) = v35;
  *(_QWORD *)(v21 + 104) = v34;
  *(_QWORD *)(v21 + 112) = v33;
  *(_QWORD *)(v21 + 120) = v32;
  *(_QWORD *)(v21 + 128) = v31;
  *(_BYTE *)(v21 + 136) = v30;
  *(_QWORD *)(v21 + 144) = a16;
  swift_beginAccess();
  *(_QWORD *)(v21 + 152) = a17;
  swift_beginAccess();
  *(_QWORD *)(v21 + 160) = a18;
  *(_QWORD *)(v21 + 168) = a19;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v21 + 176) = a20;
  swift_beginAccess();
  *(_QWORD *)(v21 + 184) = a21;
  return v21;
}

uint64_t FormatButtonNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA5E800C(*(_QWORD *)(v0 + 104));
  sub_1BA5E800C(*(_QWORD *)(v0 + 112));
  sub_1BA5E800C(*(_QWORD *)(v0 + 120));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatButtonNode.__deallocating_deinit()
{
  FormatButtonNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA8E1094(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2A9B98, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNode, (uint64_t)&protocol conformance descriptor for FormatButtonNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA8E10D0(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3BD978, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNode, (uint64_t)&protocol conformance descriptor for FormatButtonNode);
  a1[2] = sub_1BA50AD30(&qword_1ED39FB98, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNode, (uint64_t)&protocol conformance descriptor for FormatButtonNode);
  result = sub_1BA50AD30(&qword_1EF2A9BA0, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNode, (uint64_t)&protocol conformance descriptor for FormatButtonNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BA8E1148(_QWORD *a1, _QWORD *a2)
{
  return static FormatButtonNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BA8E1154(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2A9BA8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNode, (uint64_t)&protocol conformance descriptor for FormatButtonNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA8E1190(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75[4];
  uint64_t v76;

  v73 = a6;
  v62 = a8;
  v72 = a7;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C41E8, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  MEMORY[0x1E0C80A78](v13);
  v70 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v65 = (char *)&v55 - v16;
  v63 = type metadata accessor for FormatNodeStateData.Data();
  v60 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v64 = (uint64_t)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FormatButtonNodeData();
  MEMORY[0x1E0C80A78](v18);
  v66 = (uint64_t)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3CB700, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  MEMORY[0x1E0C80A78](v20);
  v71 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v61 = (uint64_t)&v55 - v23;
  MEMORY[0x1E0C80A78](v24);
  v69 = (char *)&v55 - v25;
  v26 = type metadata accessor for FormatButtonNodeDataAction();
  v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 - 8);
  v68 = v26;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v55 - v30;
  swift_unownedRetainStrong();
  swift_unownedRetainStrong();
  v32 = a3[12];
  swift_retain();
  swift_release();
  v75[0] = v32;
  swift_unownedRetainStrong();
  v33 = a3[13];
  sub_1BA5E7FF4(v33);
  swift_release();
  v76 = v33;
  v34 = v74;
  sub_1BA7B41D8(a4, a2, v75, &v76, v72, (uint64_t)v31);
  v74 = v34;
  if (v34)
  {
    swift_release();
    sub_1BA5E800C(v33);
    return swift_release();
  }
  v57 = v28;
  v55 = a2;
  v56 = a4;
  v58 = a5;
  v59 = v31;
  swift_release();
  sub_1BA5E800C(v33);
  swift_release();
  v36 = v68;
  v37 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v67 + 7);
  v38 = (uint64_t)v69;
  v37(v69, 1, 1, v68);
  swift_unownedRetainStrong();
  v39 = a3[14];
  sub_1BA5E7FF4(v39);
  swift_release();
  if ((~v39 & 0xF000000000000007) != 0)
  {
    v67 = v37;
    swift_unownedRetainStrong();
    v75[0] = v39;
    swift_unownedRetainStrong();
    v44 = a3[15];
    sub_1BA5E7FF4(v44);
    swift_release();
    v76 = v44;
    v45 = v61;
    v46 = v74;
    sub_1BA7B41D8(v56, v55, v75, &v76, a9, v61);
    v43 = v46;
    swift_release();
    sub_1BA5E800C(v44);
    sub_1BA502AD0(v38, &qword_1ED3CB700, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
    v41 = (uint64_t)v70;
    v40 = (uint64_t)v71;
    if (v46)
    {
      sub_1BA4A2E80((uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
      return sub_1BA5E800C(v39);
    }
    sub_1BA5E800C(v39);
    v67((char *)v45, 0, 1, v36);
    sub_1BA8E236C(v45, v38);
    v42 = (uint64_t)v59;
  }
  else
  {
    v41 = (uint64_t)v70;
    v40 = (uint64_t)v71;
    v42 = (uint64_t)v59;
    v43 = v74;
  }
  v47 = (uint64_t)v57;
  sub_1BA4C2DD8(v42, (uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
  sub_1BA57B488(v38, v40, &qword_1ED3CB700, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  v48 = v66;
  v49 = v43;
  sub_1BA7B3334(v47, v40, v66);
  v51 = v72;
  v50 = v73;
  v52 = v64;
  v53 = (uint64_t)v65;
  v54 = v63;
  v74 = v49;
  if (!v49)
  {
    sub_1BA4C2DD8(v48, v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeData);
    swift_storeEnumTagMultiPayload();
    sub_1BA4C2DD8(v52, v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v53, 0, 1, v54);
    sub_1BA57B488(v53, v41, (unint64_t *)&qword_1ED3C41E8, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BA722740(v41, v50, v51);
    swift_endAccess();
    sub_1BA502AD0(v53, (unint64_t *)&qword_1ED3C41E8, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80(v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
    sub_1BA4A2E80(v66, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeData);
  }
  sub_1BA502AD0(v38, &qword_1ED3CB700, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  return sub_1BA4A2E80((uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
}

uint64_t sub_1BA8E1720@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v9 = *a1;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a2 + 88) + 16))
  {
    *(_QWORD *)(a4 + 16) = v9;
    swift_retain();
    result = swift_release();
    *a5 = 0xA000000000000004;
  }
  else
  {
    swift_retain();
    v22 = sub_1BA5A0938(MEMORY[0x1E0DEE9D8]);
    v11 = *(_QWORD *)(a2 + 40);
    if (v11)
    {
      v18 = *(_QWORD *)(v11 + 16);
      swift_retain();
    }
    else
    {
      v18 = 0;
    }
    v21 = swift_allocObject();
    swift_beginAccess();
    v20 = *(_QWORD *)(a2 + 56);
    swift_beginAccess();
    v24 = *(_QWORD *)(a2 + 64);
    sub_1BA67D3F4(v24);
    sub_1BA67C978(a3, &v25);
    sub_1BA6EEDB4(v24);
    v19 = v25;
    swift_beginAccess();
    v12 = *(_BYTE *)(a2 + 72);
    sub_1BB86DD80();
    v13 = *(_QWORD *)(a2 + 128);
    v14 = *(_BYTE *)(a2 + 136);
    swift_beginAccess();
    v16 = *(_QWORD *)(a2 + 160);
    v15 = *(_QWORD *)(a2 + 168);
    type metadata accessor for FormatButtonNodeLayoutAttributes();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v9;
    *(_QWORD *)(v17 + 24) = v22;
    *(_QWORD *)(v17 + 32) = v18;
    *(_QWORD *)(v17 + 40) = v20;
    *(_QWORD *)(v17 + 48) = v19;
    *(_BYTE *)(v17 + 56) = v12;
    *(_QWORD *)(v17 + 64) = v23;
    *(_QWORD *)(v17 + 72) = v13;
    *(_BYTE *)(v17 + 80) = v14;
    *(_QWORD *)(v17 + 88) = v16;
    *(_QWORD *)(v17 + 96) = v15;
    *(_QWORD *)(v21 + 16) = v17;
    *a5 = v21 | 0x3000000000000004;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA8E1920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, _QWORD *);
  uint64_t v31;
  char *v32;
  _QWORD v33[5];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;

  v36 = a7;
  v37 = a8;
  v38 = a6;
  sub_1BA71C89C();
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a1;
  KeyPath = swift_getKeyPath();
  swift_beginAccess();
  v40 = a4;
  v22 = *(_QWORD *)(a4 + 32);
  v42 = v22;
  sub_1BA71CA6C(v22);
  v39 = a5;
  v23 = v41;
  sub_1BA717E88();
  sub_1BA719718(v22);
  if (v23)
    return swift_release();
  v33[4] = KeyPath;
  v34 = v20;
  v33[2] = a2;
  v33[3] = a3;
  v35 = v18;
  v41 = v17;
  v25 = v40;
  swift_beginAccess();
  v26 = v39;
  swift_retain();
  v27 = swift_bridgeObjectRetain();
  sub_1BB67D4D4(v27, v26);
  v33[1] = 0;
  swift_bridgeObjectRelease();
  swift_release();
  v28 = (_QWORD *)swift_allocObject();
  v29 = v37;
  v28[2] = v36;
  v28[3] = v29;
  v28[4] = a9;
  v28[5] = a10;
  v28[6] = a11;
  v28[7] = v25;
  v30 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA735194(0, &qword_1ED3C4558, MEMORY[0x1E0DB5A10]);
  v39 = v31;
  sub_1BA735154(&qword_1ED3C4550, &qword_1ED3C4558, v30, MEMORY[0x1E0DB5A18]);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v32 = v34;
  sub_1BB86D51C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v32, v41);
}

uint64_t sub_1BA8E1BDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v13;
  uint64_t *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v13 = *a1;
  v14 = (uint64_t *)(a3 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86DD80();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v35 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(a3 + 16) = 0x8000000000000000;
  sub_1BA5A0A7C(v13, v36, a4, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a3 + 16) = v35;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  result = swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a7 + 88) + 16) - 1 == a6)
  {
    v30 = a8;
    v17 = *(_QWORD *)(a2 + 16);
    if (v17)
    {
      swift_beginAccess();
      v18 = *v14;
      v19 = *(_QWORD *)(a7 + 40);
      if (v19)
      {
        v33 = *(_QWORD *)(v19 + 16);
        swift_retain();
      }
      else
      {
        v33 = 0;
      }
      v29 = swift_allocObject();
      swift_beginAccess();
      v28 = *(_QWORD *)(a7 + 56);
      swift_beginAccess();
      v20 = *(_QWORD *)(a7 + 64);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BA67D3F4(v20);
      sub_1BA67C978(a5, &v37);
      sub_1BA6EEDB4(v20);
      v21 = v37;
      swift_beginAccess();
      v22 = *(_BYTE *)(a7 + 72);
      sub_1BB86DD80();
      v23 = *(_QWORD *)(a7 + 128);
      v24 = *(_BYTE *)(a7 + 136);
      swift_beginAccess();
      v26 = *(_QWORD *)(a7 + 160);
      v25 = *(_QWORD *)(a7 + 168);
      type metadata accessor for FormatButtonNodeLayoutAttributes();
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = v17;
      *(_QWORD *)(v27 + 24) = v18;
      *(_QWORD *)(v27 + 32) = v33;
      *(_QWORD *)(v27 + 40) = v28;
      *(_QWORD *)(v27 + 48) = v21;
      *(_BYTE *)(v27 + 56) = v22;
      *(_QWORD *)(v27 + 64) = v34;
      *(_QWORD *)(v27 + 72) = v23;
      *(_BYTE *)(v27 + 80) = v24;
      *(_QWORD *)(v27 + 88) = v26;
      *(_QWORD *)(v27 + 96) = v25;
      *(_QWORD *)(v29 + 16) = v27;
      *v30 = v29 | 0x3000000000000004;
      return swift_bridgeObjectRetain();
    }
    else
    {
      *v30 = 0xA000000000000004;
    }
  }
  else
  {
    *a8 = 0xA000000000000004;
  }
  return result;
}

uint64_t sub_1BA8E1E98@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BA8E1EE4@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  *a2 = v4;
  return sub_1BA71CA6C(v4);
}

uint64_t sub_1BA8E1F30@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8E1F7C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return result;
}

uint64_t sub_1BA8E1FC0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 56) = v2;
  return result;
}

unint64_t sub_1BA8E2000@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 64);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BA8E204C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 72);
  return result;
}

uint64_t sub_1BA8E2090(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 72) = v2;
  return result;
}

uint64_t sub_1BA8E20D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8E211C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8E2168@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8E21B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 176);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8E2200@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 184);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatButtonNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatButtonNode.__allocating_init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:children:stateMasks:action:actionName:longPressAction:longPressActionName:accessibilityRole:animation:selectors:name:behaviors:sourceItems:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t sub_1BA8E22A0()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatButtonBuildCaptureState()
{
  return objc_opt_self();
}

uint64_t sub_1BA8E22E4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8E2328@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BA8E1BDC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), a2);
}

uint64_t sub_1BA8E2348()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8E236C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3CB700, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t storeEnumTagSinglePayload for FormatVisibilityState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA8E240C + 4 * byte_1BB881175[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA8E2440 + 4 * byte_1BB881170[v4]))();
}

uint64_t sub_1BA8E2440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8E2448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8E2450);
  return result;
}

uint64_t sub_1BA8E245C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8E2464);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA8E2468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8E2470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatVisibilityState()
{
  return &type metadata for FormatVisibilityState;
}

unint64_t sub_1BA8E2490()
{
  unint64_t result;

  result = qword_1EF2A9BB0;
  if (!qword_1EF2A9BB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8811D8, &type metadata for FormatVisibilityState);
    atomic_store(result, (unint64_t *)&qword_1EF2A9BB0);
  }
  return result;
}

id SharingArticleURLActivityItemSource.__allocating_init(headline:articleURL:mailShareLinkTextProvider:linkPresentationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(a3 + 32);
  v11 = __swift_mutable_project_boxed_opaque_existential_1(a3, v9);
  v12 = sub_1BA8E3B74(a1, a2, v11, a4, v4, v9, v10);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v12;
}

id SharingArticleURLActivityItemSource.init(headline:articleURL:mailShareLinkTextProvider:linkPresentationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v9 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(a3 + 32);
  v11 = __swift_mutable_project_boxed_opaque_existential_1(a3, v9);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v15 + 16))(v14, v12);
  v16 = sub_1BA8E3A14(a1, a2, (uint64_t)v14, a4, v4, v9, v10);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v16;
}

id SharingArticleURLActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingArticleURLActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingArticleURLActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_OWORD *SharingArticleURLActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *result;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10[3];
  uint64_t v11;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v10 - v4;
  sub_1BA7E8428(v1 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL, (uint64_t)v10 - v4);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    result = (_OWORD *)sub_1BA502AD0((uint64_t)v5, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEA968];
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  }
  else
  {
    v11 = v6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_0, v5, v6);
    return sub_1BA76EAE0(v10, (_OWORD *)a1);
  }
  return result;
}

void SharingArticleURLActivityItemSource.activityViewController(_:itemForActivityType:)(id a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v44;
  uint64_t *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t);
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t *v68;
  id v69;
  char *v70;
  uint64_t v71;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v69 - v9;
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v69 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v69 - v16;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v69 - v20;
  if (!a1)
  {
    sub_1BA7E8428(v2 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL, (uint64_t)v7);
    v35 = sub_1BB86C67C();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v7, 1, v35) != 1)
    {
      *(_QWORD *)(a2 + 24) = v35;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
      (*(void (**)(uint64_t *, char *, uint64_t))(v36 + 32))(boxed_opaque_existential_0, v7, v35);
      return;
    }
    v37 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v38 = (uint64_t)v7;
    goto LABEL_19;
  }
  v71 = v19;
  v22 = sub_1BB8729A0();
  v24 = v23;
  if (v22 == sub_1BB8729A0() && v24 == v25)
  {
    v27 = v2;
    v39 = a1;
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  v70 = v14;
  v27 = v2;
  v28 = sub_1BB874398();
  v29 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v28 & 1) != 0)
  {
LABEL_13:
    v40 = objc_msgSend(*(id *)(v27 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline), sel_contentURL);
    if (v40)
    {
      v41 = v40;
      sub_1BB86C5EC();

      v42 = sub_1BB86C67C();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v17, 0, 1, v42);
    }
    else
    {
      v42 = sub_1BB86C67C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v17, 1, 1, v42);
    }
    sub_1BA7F0AD4((uint64_t)v17, (uint64_t)v21);
    sub_1BB86C67C();
    v44 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v21, 1, v42) != 1)
    {
      *(_QWORD *)(a2 + 24) = v42;
      v45 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
      (*(void (**)(uint64_t *, char *, uint64_t))(v44 + 32))(v45, v21, v42);
      goto LABEL_21;
    }

    v37 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v38 = (uint64_t)v21;
LABEL_19:
    sub_1BA502AD0(v38, (unint64_t *)&qword_1ED3D2E70, v37);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  v69 = v29;
  v30 = sub_1BB8729A0();
  v32 = v31;
  v34 = a2;
  if (v30 == sub_1BB8729A0() && v32 == v33)
  {
    swift_bridgeObjectRelease_n();
LABEL_23:
    type metadata accessor for SharingHTMLBuilder();
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = 0;
    *(_QWORD *)(v47 + 24) = 0xE000000000000000;
    swift_beginAccess();
    *(_QWORD *)(v47 + 16) = 0;
    *(_QWORD *)(v47 + 24) = 0xE000000000000000;
    swift_bridgeObjectRelease();
    v48 = sub_1BA8E3108(v47, v27);
    v50 = v49;
    swift_release();
    if (v50)
    {
      *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

      *(_QWORD *)a2 = v48;
      *(_QWORD *)(a2 + 8) = v50;
      return;
    }

    goto LABEL_36;
  }
  v46 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v46 & 1) != 0)
    goto LABEL_23;
  v51 = sub_1BB8729A0();
  v53 = v71;
  if (v51 == 0xD000000000000024 && v52 == 0x80000001BB961D20)
    goto LABEL_28;
  v54 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v54 & 1) == 0)
  {
    if (sub_1BB8729A0() == 0xD00000000000002ELL && v63 == 0x80000001BB961D50)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    v64 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v64 & 1) == 0)
    {
      sub_1BA7E8428(v27 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL, (uint64_t)v10);
      v65 = sub_1BB86C67C();
      v66 = *(_QWORD *)(v65 - 8);
      v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48))(v10, 1, v65);
      a1 = v69;
      if (v67 == 1)
      {

        v60 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
        v61 = (uint64_t)v10;
        goto LABEL_35;
      }
      *(_QWORD *)(v34 + 24) = v65;
      v68 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v34);
      (*(void (**)(uint64_t *, char *, uint64_t))(v66 + 32))(v68, v10, v65);
LABEL_21:

      return;
    }
  }
LABEL_30:
  v55 = objc_msgSend(*(id *)(v27 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline), sel_contentURL);
  if (v55)
  {
    v56 = v55;
    sub_1BB86C5EC();

    v57 = sub_1BB86C67C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v53, 0, 1, v57);
  }
  else
  {
    v57 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v53, 1, 1, v57);
  }
  v58 = (uint64_t)v70;
  sub_1BA7F0AD4(v53, (uint64_t)v70);
  sub_1BB86C67C();
  v59 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v58, 1, v57) == 1)
  {

    v60 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    v61 = v58;
LABEL_35:
    sub_1BA502AD0(v61, (unint64_t *)&qword_1ED3D2E70, v60);
LABEL_36:
    *(_OWORD *)v34 = 0u;
    *(_OWORD *)(v34 + 16) = 0u;
    return;
  }
  *(_QWORD *)(v34 + 24) = v57;
  v62 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v59 + 32))(v62, v58, v57);

}

LPLinkMetadata_optional __swiftcall SharingArticleURLActivityItemSource.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  uint64_t v1;
  objc_class *v2;
  Swift::Bool v3;
  objc_class *v4;
  id v5;
  LPLinkMetadata_optional result;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_linkPresentationSource))
  {
    sub_1BB86E71C();
    v2 = (objc_class *)objc_msgSend(v5, sel_linkMetadata);
    swift_unknownObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

uint64_t sub_1BA8E3108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  uint64_t DynamicType;
  _UNKNOWN **v36;
  void (*v37)(uint64_t, _UNKNOWN **);
  uint64_t v38;
  _UNKNOWN **v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _UNKNOWN **v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  _UNKNOWN **v58;
  void (*v59)(uint64_t, _UNKNOWN **);
  uint64_t v60;
  _UNKNOWN **v61;
  uint64_t v62;
  _UNKNOWN **v63;
  uint64_t ObjCClassFromMetadata;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _UNKNOWN **v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _UNKNOWN **v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _UNKNOWN **v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[40];
  __int128 v106[2];
  __int128 v107;
  uint64_t v108;
  _UNKNOWN **v109;
  _QWORD v110[3];
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[3];
  uint64_t v114;
  _UNKNOWN **v115;

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v100 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, v7);
  MEMORY[0x1E0C80A78](v8);
  v102 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v97 - v11;
  v13 = type metadata accessor for SharingHTMLBuilder();
  v114 = v13;
  v115 = &off_1E7301510;
  v113[0] = a1;
  __swift_project_boxed_opaque_existential_1(v113, v13);
  swift_retain();
  sub_1BB335544(v13, (uint64_t)&off_1E7301510, v110);
  v14 = a2;
  v15 = OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline;
  v16 = objc_msgSend(*(id *)(v14 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline), sel_title);
  if (v16)
  {
    v17 = v16;
    v18 = sub_1BB8729A0();
    v20 = v19;

    v21 = v111;
    v22 = v112;
    __swift_project_boxed_opaque_existential_1(v110, v111);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 24))(&v107, v18, v20, v21, v22);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    sub_1BA4CECCC(&v107, (uint64_t)v110);
    v23 = v111;
    v24 = v112;
    __swift_project_boxed_opaque_existential_1(v110, v111);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v24 + 16))(&v107, v23, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    sub_1BA4CECCC(&v107, (uint64_t)v110);
  }
  v25 = objc_msgSend(*(id *)(v14 + v15), sel_shortExcerpt);
  if (v25)
  {
    v26 = v25;
    v27 = sub_1BB8729A0();
    v29 = v28;

    v30 = v111;
    v31 = v112;
    __swift_project_boxed_opaque_existential_1(v110, v111);
    (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(&v107, v27, v29, v30, v31);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    sub_1BA4CECCC(&v107, (uint64_t)v110);
  }
  sub_1BA7E8428(v14 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL, (uint64_t)v12);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v33 = v32(v12, 1, v4);
  v103 = v4;
  v101 = v5;
  if (v33 == 1)
  {
    sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    v98 = sub_1BB86C538();
    v99 = v34;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v4);
    __swift_project_boxed_opaque_existential_1(v113, v114);
    DynamicType = swift_getDynamicType();
    v36 = v115;
    v104 = v14;
    v37 = (void (*)(uint64_t, _UNKNOWN **))v115[1];
    v108 = DynamicType;
    v109 = v115;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v107);
    v37(DynamicType, v36);
    v38 = v108;
    v39 = v109;
    __swift_project_boxed_opaque_existential_1(&v107, v108);
    v40 = *(_QWORD *)(v104
                    + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider
                    + 24);
    v41 = *(_QWORD *)(v104
                    + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider
                    + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v104 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider), v40);
    v42 = v15;
    v43 = v32;
    v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 8);
    v45 = swift_unknownObjectRetain();
    v46 = v44(v45, v40, v41);
    v32 = v43;
    v15 = v42;
    v47 = v46;
    v49 = v48;
    swift_unknownObjectRelease();
    ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v39[7])(v106, v47, v49, v38, v39);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
    sub_1BA4CECCC(v106, (uint64_t)&v107);
    v50 = v108;
    v51 = v109;
    __swift_project_boxed_opaque_existential_1(&v107, v108);
    ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v51[6])(v106, v98, v99, v98, v99, v50, v51);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
    sub_1BA4CECCC(v106, (uint64_t)&v107);
    v52 = v111;
    v53 = v112;
    __swift_project_boxed_opaque_existential_1(v110, v111);
    sub_1BA4C010C((uint64_t)&v107, (uint64_t)v105);
    v54 = v52;
    v14 = v104;
    (*(void (**)(__int128 *__return_ptr, _BYTE *, uint64_t, uint64_t))(v53 + 32))(v106, v105, v54, v53);
    sub_1BA502AD0((uint64_t)v105, (unint64_t *)&qword_1EF2A9C18, (void (*)(uint64_t))sub_1BA8E3D30);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    sub_1BA4CECCC(v106, (uint64_t)v110);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
  }
  v55 = objc_msgSend(*(id *)(v14 + v15), sel_articleID);
  if (v55)
  {

    if (*(_BYTE *)(v14 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_sourceChannelPublic) == 1)
    {
      v56 = v14;
      __swift_project_boxed_opaque_existential_1(v113, v114);
      v57 = swift_getDynamicType();
      v58 = v115;
      v59 = (void (*)(uint64_t, _UNKNOWN **))v115[1];
      v108 = v57;
      v109 = v115;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v107);
      v59(v57, v58);
      v60 = v108;
      v61 = v109;
      __swift_project_boxed_opaque_existential_1(&v107, v108);
      ((void (*)(__int128 *__return_ptr, uint64_t, _UNKNOWN **))v61[2])(v106, v60, v61);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
      sub_1BA4CECCC(v106, (uint64_t)&v107);
      v62 = v108;
      v63 = v109;
      __swift_project_boxed_opaque_existential_1(&v107, v108);
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v65 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v66 = sub_1BB86C340();
      v68 = v67;

      ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v63[7])(v106, v66, v68, v62, v63);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
      sub_1BA4CECCC(v106, (uint64_t)&v107);
      v69 = v108;
      v70 = v109;
      __swift_project_boxed_opaque_existential_1(&v107, v108);
      ((void (*)(__int128 *__return_ptr, uint64_t, unint64_t, uint64_t, _UNKNOWN **))v70[7])(v106, 32, 0xE100000000000000, v69, v70);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
      sub_1BA4CECCC(v106, (uint64_t)&v107);
      v71 = (_QWORD *)(v56 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider);
      v72 = v71[3];
      v73 = v71[4];
      __swift_project_boxed_opaque_existential_1(v71, v72);
      v74 = (uint64_t)v102;
      (*(void (**)(uint64_t, uint64_t))(v73 + 24))(v72, v73);
      v75 = v103;
      if (v32((char *)v74, 1, v103) == 1)
      {
        sub_1BA502AD0(v74, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v76 = v109;
        __swift_project_boxed_opaque_existential_1(&v107, v108);
        v77 = v71[3];
        v78 = v71[4];
        __swift_project_boxed_opaque_existential_1(v71, v77);
        v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 16))(v77, v78);
        ((void (*)(__int128 *__return_ptr, uint64_t))v76[7])(v106, v79);
        swift_bridgeObjectRelease();
      }
      else
      {
        v80 = v101;
        v81 = v100;
        (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v100, v74, v75);
        v82 = v108;
        v83 = v109;
        __swift_project_boxed_opaque_existential_1(&v107, v108);
        v84 = v71[3];
        v85 = v71[4];
        __swift_project_boxed_opaque_existential_1(v71, v84);
        v86 = (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 16))(v84, v85);
        v88 = v87;
        v89 = sub_1BB86C538();
        ((void (*)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **))v83[6])(v106, v86, v88, v89, v90, v82, v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v75);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
      sub_1BA4CECCC(v106, (uint64_t)&v107);
      v91 = v111;
      v92 = v112;
      __swift_project_boxed_opaque_existential_1(v110, v111);
      sub_1BA4C010C((uint64_t)&v107, (uint64_t)v105);
      (*(void (**)(__int128 *__return_ptr, _BYTE *, uint64_t, uint64_t))(v92 + 32))(v106, v105, v91, v92);
      sub_1BA502AD0((uint64_t)v105, (unint64_t *)&qword_1EF2A9C18, (void (*)(uint64_t))sub_1BA8E3D30);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
      sub_1BA4CECCC(v106, (uint64_t)v110);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
    }
  }
  v93 = v111;
  v94 = v112;
  __swift_project_boxed_opaque_existential_1(v110, v111);
  v95 = (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 64))(v93, v94);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
  return v95;
}

id sub_1BA8E3A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  objc_class *ObjectType;
  uint64_t *boxed_opaque_existential_0;
  char *v16;
  id v17;
  unsigned __int8 v18;
  id v19;
  objc_super v21;
  uint64_t v22[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v22[3] = a6;
  v22[4] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(boxed_opaque_existential_0, a3, a6);
  *(_QWORD *)&a5[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline] = a1;
  v16 = a5;
  v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_sourceChannel);
  if (v17)
  {
    v18 = objc_msgSend(v17, sel_isPublic);
    swift_unknownObjectRelease();
  }
  else
  {
    v18 = 0;
  }
  sub_1BA7E8428(a2, (uint64_t)&v16[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL]);
  sub_1BA4C010C((uint64_t)v22, (uint64_t)&v16[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider]);
  v16[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_sourceChannelPublic] = v18;
  *(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_linkPresentationSource] = a4;
  swift_retain();

  v21.receiver = v16;
  v21.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v21, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  sub_1BA502AD0(a2, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  return v19;
}

id sub_1BA8E3B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Class v16;
  char *v17;
  uint64_t v19;

  v13 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (char *)objc_allocWithZone(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, a6);
  return sub_1BA8E3A14(a1, a2, (uint64_t)v15, a4, v17, a6, a7);
}

uint64_t sub_1BA8E3C34()
{
  return type metadata accessor for SharingArticleURLActivityItemSource();
}

uint64_t type metadata accessor for SharingArticleURLActivityItemSource()
{
  uint64_t result;

  result = qword_1EF2A9C08;
  if (!qword_1EF2A9C08)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BA8E3C78()
{
  unint64_t v0;

  sub_1BA4A3FB4(319, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SharingArticleURLActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingArticleURLActivityItemSource.__allocating_init(headline:articleURL:mailShareLinkTextProvider:linkPresentationSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

unint64_t sub_1BA8E3D30()
{
  unint64_t result;

  result = qword_1EF2A9C20;
  if (!qword_1EF2A9C20)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2A9C20);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatSourceItemTipSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB8717AC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86F718();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for FormatSourceItemTipSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1BB8717AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1BB86F718();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for FormatSourceItemTipSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1BB8717AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86F718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for FormatSourceItemTipSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1BB8717AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86F718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for FormatSourceItemTipSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1BB8717AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86F718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatSourceItemTipSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1BB8717AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86F718();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSourceItemTipSource()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA8E4084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1BB8717AC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1BB86F718();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FormatSourceItemTipSource()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA8E4104(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1BB8717AC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1BB86F718();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for FormatSourceItemTipSource()
{
  uint64_t result;

  result = qword_1ED3D24B8;
  if (!qword_1ED3D24B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA8E41BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB8717AC();
  if (v1 <= 0x3F)
  {
    result = sub_1BB86F718();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t FormatVariableNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVariableNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVariableNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatVariableNode.statements.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8E4348(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatVariableNode.statements.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVariableNode.statements.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *FormatVariableNode.__allocating_init(identifier:statements:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)swift_allocObject();
  swift_beginAccess();
  v6[2] = a1;
  v6[3] = a2;
  swift_beginAccess();
  v6[4] = a3;
  return v6;
}

_QWORD *FormatVariableNode.init(identifier:statements:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  swift_beginAccess();
  v3[2] = a1;
  v3[3] = a2;
  swift_beginAccess();
  v3[4] = a3;
  return v3;
}

uint64_t FormatVariableNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatVariableNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *sub_1BA8E4558@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BAE71AC0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BA8E4580(_QWORD *a1)
{
  return FormatVariableNode.encode(to:)(a1);
}

uint64_t sub_1BA8E45A0(_QWORD **a1, _QWORD **a2)
{
  return _s8NewsFeed18FormatVariableNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BA8E45AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v23 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v23);
  v8 = (_QWORD *)((char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for FormatOptionsNodeStatement();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  swift_beginAccess();
  v13 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v21[1] = v13;
    v21[2] = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options;
    v15 = v13 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v22 = *(_QWORD *)(v10 + 72);
    while (1)
    {
      sub_1BA4C2DD8(v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      sub_1BA75BF9C();
      v17 = (char *)v8 + *(int *)(v16 + 48);
      *v8 = a4;
      sub_1BA75C00C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, v24, v18);
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v19 = sub_1BB2CEF34((uint64_t)v8);
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
      if (v4)
        break;
      if (*(_QWORD *)(v19 + 16))
      {
        swift_retain();
        sub_1BA8FFD98(v19);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
        swift_bridgeObjectRelease();
      }
      v15 += v22;
      if (!--v14)
        return swift_bridgeObjectRelease();
    }
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8E47E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char v51;
  uint64_t (*v52)(_QWORD);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  unsigned __int8 v82;

  v74 = a1;
  v73 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v73);
  v64 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v63 = (uint64_t)&v59 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v59 - v8;
  MEMORY[0x1E0C80A78](v10);
  v72 = (uint64_t)&v59 - v11;
  v71 = type metadata accessor for FormatOptionsNodeStatement();
  v12 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v14 = (unint64_t *)((char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v59 - v16;
  swift_beginAccess();
  result = *(_QWORD *)(a2 + 32);
  v67 = *(_QWORD *)(result + 16);
  if (!v67)
    return result;
  v61 = (uint64_t *)(a2 + 32);
  v60 = v17;
  v62 = v2;
  v59 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v69 = result + v59;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v20 = MEMORY[0x1E0DEE9D8];
  v70 = result;
  v66 = v12;
  while (1)
  {
    if (v19 >= *(_QWORD *)(result + 16))
    {
      __break(1u);
      return result;
    }
    v65 = *(_QWORD *)(v12 + 72);
    sub_1BA4C2DD8(v69 + v65 * v19, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    v21 = v14[1];
    *(_QWORD *)v9 = *v14;
    *((_QWORD *)v9 + 1) = v21;
    *((_QWORD *)v9 + 6) = v20;
    v22 = &v9[*(int *)(v73 + 28)];
    v23 = type metadata accessor for FormatVersionRequirement(0);
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v68 = (uint64_t)v22;
    v24(v22, 1, 1, v23);
    v25 = v71;
    swift_bridgeObjectRetain();
    sub_1BB46EA9C();
    v26 = v78;
    v27 = *(_QWORD *)((char *)v14 + *(int *)(v25 + 24));
    if ((v80 & 1) != 0)
    {
      v28 = v79;
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
      v29 = 1;
      goto LABEL_23;
    }
    v26 = v78;
    v30 = *(_QWORD *)(v27 + 16);
    if (v30)
      break;
    swift_bridgeObjectRetain();
LABEL_22:
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    swift_bridgeObjectRelease();
    v28 = 0;
    v27 = 0;
    v29 = 0;
LABEL_23:
    *((_QWORD *)v9 + 2) = v26;
    *((_QWORD *)v9 + 3) = v28;
    *((_QWORD *)v9 + 4) = v27;
    v9[40] = v29;
    v38 = v72;
    sub_1BA8E5414((uint64_t)v9, v72);
    v39 = swift_allocBox();
    v41 = v40;
    sub_1BA4C2DD8(v38, v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    v42 = *(_QWORD **)(v74 + 48);
    v43 = v42[2];
    if (!v43 || v42[v43 + 3] >> 60 != 1)
      goto LABEL_28;
    v44 = swift_projectBox();
    v45 = v63;
    sub_1BA4C2DD8(v44, v63, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    v46 = v64;
    sub_1BA4C2DD8(v41, v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    swift_retain();
    swift_retain();
    v47 = sub_1BB188A5C(v45, v46);
    sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    swift_release();
    swift_release();
    if (!v47)
    {
      v42 = *(_QWORD **)(v74 + 48);
      v20 = MEMORY[0x1E0DEE9D8];
LABEL_28:
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = sub_1BB38ED0C(0, v42[2] + 1, 1, v42);
      v49 = v42[2];
      v48 = v42[3];
      if (v49 >= v48 >> 1)
        v42 = sub_1BB38ED0C((_QWORD *)(v48 > 1), v49 + 1, 1, v42);
      v42[2] = v49 + 1;
      v42[v49 + 4] = v39 | 0x1000000000000000;
      swift_release();
      *(_QWORD *)(v74 + 48) = v42;
      goto LABEL_33;
    }
    swift_release();
    v20 = MEMORY[0x1E0DEE9D8];
LABEL_33:
    ++v19;
    sub_1BA4A2E80(v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
    v12 = v66;
    result = v70;
    if (v19 == v67)
    {
      swift_bridgeObjectRelease();
      result = *v61;
      v54 = *(_QWORD *)(*v61 + 16);
      if (v54)
      {
        v55 = result + v59;
        v70 = *v61;
        swift_bridgeObjectRetain();
        v56 = v62;
        v57 = (uint64_t)v60;
        v58 = v65;
        while (1)
        {
          sub_1BA4C2DD8(v55, v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
          sub_1BAC4A7C0(v74);
          if (v56)
            break;
          sub_1BA4A2E80(v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
          v55 += v58;
          if (!--v54)
            return swift_bridgeObjectRelease();
        }
        v52 = (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement;
        v53 = v57;
        goto LABEL_39;
      }
      return result;
    }
  }
  swift_bridgeObjectRetain_n();
  v31 = 0;
  while (1)
  {
    v33 = *(unsigned __int8 *)(v27 + v31 + 32);
    if (!(v33 >> 6))
    {
      if (v26 != 3)
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1BA50AD30((unint64_t *)&qword_1EF2A9668, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
        swift_allocError();
        v51 = 3;
        goto LABEL_38;
      }
      v81 = *(_BYTE *)(v27 + v31 + 32);
      v75 = 0x3FF0000000000000;
      v76 = v20;
      sub_1BB40787C();
      v32 = v77;
      goto LABEL_9;
    }
    if (v33 >> 6 != 1)
      break;
    if (v26 != 5)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1BA50AD30((unint64_t *)&qword_1EF2A9668, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
      swift_allocError();
      v51 = 5;
      goto LABEL_38;
    }
    if ((v33 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = swift_allocObject();
      *(_BYTE *)(v32 + 16) = 1;
      *(_QWORD *)(v32 + 24) = v20;
    }
    else
    {
      v34 = swift_allocObject();
      v35 = sub_1BB872AB4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v34 + 16) = v35;
      *(_QWORD *)(v34 + 24) = v20;
      v32 = v34 | 0x4000000000000000;
    }
LABEL_9:
    v75 = v32;
    FormatOptionValue.type.getter();
LABEL_10:
    swift_release();
    ++v31;
    v26 = v82;
    if (v30 == v31)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  if (v26 == 4)
  {
    v36 = swift_allocObject();
    v75 = 1;
    sub_1BA6F0168();
    *(_QWORD *)(v36 + 16) = sub_1BB873B58();
    *(_QWORD *)(v36 + 24) = v37;
    *(_QWORD *)(v36 + 32) = v20;
    v75 = v36 | 0x5000000000000000;
    FormatOptionValue.type.getter();
    goto LABEL_10;
  }
  type metadata accessor for FormatDerivedDataError();
  sub_1BA50AD30((unint64_t *)&qword_1EF2A9668, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataError, (uint64_t)&unk_1BB909F9C);
  swift_allocError();
  v51 = 4;
LABEL_38:
  *v50 = v51;
  v50[1] = v26;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52 = (uint64_t (*)(_QWORD))sub_1BA8E5458;
  v53 = v68;
LABEL_39:
  sub_1BA4A2E80(v53, v52);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8E4FC8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  int v8;
  __int16 v9;

  v3 = *v1;
  v5 = 1;
  v6 = 0u;
  v7 = 0u;
  v8 = 0;
  v9 = -16384;
  swift_retain();
  sub_1BB3D9C34((uint64_t)&v5, a1, v3);
  return swift_release();
}

uint64_t FormatVariableNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t (*v16)();
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a1;
  v22 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1E0C80A78](v22);
  v6 = (_QWORD *)((char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for FormatOptionsNodeStatement();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = *(_QWORD *)(v2 + 32);
  v12 = *(_QWORD *)(result + 16);
  if (v12)
  {
    v13 = result + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v14 = *(_QWORD *)(v8 + 72);
    v19[2] = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    v20 = v14;
    v19[1] = result;
    swift_bridgeObjectRetain();
    v15 = type metadata accessor for FormatOptionsNodeStatement;
    while (1)
    {
      v16 = v15;
      sub_1BA4C2DD8(v13, (uint64_t)v10, (uint64_t (*)(_QWORD))v15);
      v17 = v21;
      *v6 = a2;
      v6[1] = v17;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      swift_retain();
      v18 = sub_1BB2CEF34((uint64_t)v6);
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementContext);
      if (v3)
        break;
      if (*(_QWORD *)(v18 + 16))
      {
        swift_retain();
        sub_1BA8FFD98(v18);
        swift_bridgeObjectRelease();
        swift_release();
        v15 = v16;
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))v16);
      }
      else
      {
        v15 = v16;
        sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))v16);
        swift_bridgeObjectRelease();
      }
      v13 += v20;
      if (!--v12)
        return swift_bridgeObjectRelease();
    }
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatement);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BA8E5238(uint64_t a1, uint64_t a2)
{
  return FormatVariableNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BA8E5258(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2A9C30, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVariableNode, (uint64_t)&protocol conformance descriptor for FormatVariableNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatVariableNode()
{
  return objc_opt_self();
}

uint64_t sub_1BA8E52B4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3A6318, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVariableNode, (uint64_t)&protocol conformance descriptor for FormatVariableNode);
  a1[2] = sub_1BA50AD30(&qword_1ED3A6310, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatVariableNode, (uint64_t)&protocol conformance descriptor for FormatVariableNode);
  result = sub_1BA50AD30(&qword_1EF2A9C38, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatVariableNode, (uint64_t)&protocol conformance descriptor for FormatVariableNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BA8E532C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BA50AD30(&qword_1EF2A9C40, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatVariableNode, (uint64_t)&protocol conformance descriptor for FormatVariableNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA8E5368@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8E53B4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatVariableNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatVariableNode.__allocating_init(identifier:statements:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BA8E5414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDerivedDataOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA8E5458()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D0B48)
  {
    type metadata accessor for FormatVersionRequirement(255);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D0B48);
  }
}

uint64_t sub_1BA8E54AC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8E54D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double FormatDataLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t FormatDataLayoutAttributes.identifier.getter()
{
  uint64_t v0;

  v0 = sub_1BA8E9414();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FormatDataLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDataLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDataLayoutAttributes.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDataLayoutAttributes.dataLayoutValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDataLayoutAttributes.dataAccessibilityValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDataLayoutAttributes.data.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
}

void FormatDataLayoutAttributes.accessibilityRole.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152));
}

uint64_t *FormatDataLayoutAttributes.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 144));
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FormatDataLayoutAttributes.__deallocating_deinit()
{
  FormatDataLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA8E56B8()
{
  uint64_t v0;

  v0 = sub_1BA8E9414();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FormatDataLayoutAttributes.formatImageRequests(options:inventory:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;

  result = MEMORY[0x1E0DEE9D8];
  v5 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v2; ++i)
    {
      swift_retain();
      FormatDataLayoutValue.formatImageRequests(options:inventory:)();
      if (v4)
        sub_1BA65D3A4(v4);
      swift_release();
    }
    swift_bridgeObjectRelease();
    result = v5;
  }
  if (!*(_QWORD *)(result + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t FormatDataLayoutAttributes.issueCoverImageRequests(options:inventory:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112);
  if (sub_1BA79B898(v1))
  {
    swift_bridgeObjectRetain();
    if (*(_QWORD *)(v1 + 16))
      __asm { BR              X10 }
    __break(1u);
    JUMPOUT(0x1BA8E8D54);
  }
  v2 = MEMORY[0x1E0DEE9D8];
  if (sub_1BA79B890(MEMORY[0x1E0DEE9D8]))
    return v2;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t FormatDataLayoutAttributes.isResizing.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_1BA8E914C()
{
  return FormatDataLayoutAttributes.isResizing.getter() & 1;
}

uint64_t sub_1BA8E9174(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8)
{
  char v16;
  uint64_t inited;
  id v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD v29[5];

  v16 = a4 & 1;
  v29[3] = sub_1BA749984();
  v29[4] = sub_1BA4A2870((unint64_t *)&qword_1ED3CF8C0, (uint64_t (*)(uint64_t))sub_1BA749984, (uint64_t)&protocol conformance descriptor for FCAssetHandle);
  v29[0] = a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FB8, (uint64_t (*)(uint64_t))sub_1BA81E240, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0x616D497265766F63;
  *(_QWORD *)(inited + 40) = 0xEA00000000006567;
  sub_1BA4C010C((uint64_t)v29, inited + 48);
  *(_QWORD *)(a5 + 80) = sub_1BA739C1C(inited);
  sub_1BA4C010C((uint64_t)v29, a5 + 88);
  *(double *)(a5 + 32) = a6;
  *(double *)(a5 + 40) = a7;
  *(double *)(a5 + 48) = a8;
  *(_QWORD *)(a5 + 56) = a2;
  *(_QWORD *)(a5 + 64) = a3;
  *(_BYTE *)(a5 + 72) = v16;
  v18 = objc_msgSend(a1, sel_uniqueKey);
  sub_1BB8729A0();

  sub_1BB872AFC(v19);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v20);
  type metadata accessor for CGSize(0);
  sub_1BB873E34();
  sub_1BB872AFC(v21);
  sub_1BB872FDC();
  sub_1BB872AFC(v22);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v23);
  if ((a4 & 1) == 0)
  {
    sub_1BB872FDC();
    sub_1BB872AFC(v25);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v26);
    sub_1BB87420C();
    sub_1BB872AFC(v27);
    swift_bridgeObjectRelease();
  }
  sub_1BB872AFC(v24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + 16) = 0;
  *(_QWORD *)(a5 + 24) = 0xE000000000000000;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return a5;
}

uint64_t sub_1BA8E9414()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

void sub_1BA8E941C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A2A80)
  {
    type metadata accessor for FormatItemNodeData();
    type metadata accessor for FormatItemNodeDataLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A2A80);
  }
}

uint64_t sub_1BA8E9488(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA8E94B8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t method lookup function for FormatDataLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t FormatWeatherBinding.Image.image(from:context:imageContext:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t result;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v24;
  char v25;

  v3 = *(_QWORD *)v1;
  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 17);
  type metadata accessor for FeedWeather(0);
  sub_1BA740408(v3, v2, v4, v5);
  sub_1BB872700();
  sub_1BA748DB8();
  v6 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPaletteColors_, v6);

  sub_1BA740474();
  if (v24)
  {

    v9 = v3;
    v10 = v2;
    v11 = v4;
    v12 = v5;
  }
  else
  {
    v13 = v8;
    v25 = v5;
    v14 = objc_msgSend(v7, sel_configurationByApplyingConfiguration_, v8);

    sub_1BB8726F4();
    v15 = v14;
    v16 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v17 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v16, v15);

    if (v17)
    {
      v18 = objc_msgSend(v17, sel_imageWithRenderingMode_, 2);

      if (v18)
      {

        sub_1BA740434(v3, v2, v4, v25);
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = v18;
        *a1 = result;
        return result;
      }
    }
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    v21 = v20;
    *v20 = sub_1BB8726F4();
    v21[1] = v22;
    v21[2] = (uint64_t)v14;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v9 = v3;
    v10 = v2;
    v11 = v4;
    v12 = v25;
  }
  return sub_1BA740434(v9, v10, v11, v12);
}

uint64_t sub_1BA8E9774()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t static FormatWeatherBinding.Image.== infix(_:_:)(__int128 *a1)
{
  __int16 v1;
  char v2;
  __int128 v4;
  __int16 v5;

  v1 = *((_WORD *)a1 + 8);
  v4 = *a1;
  v5 = v1;
  _s8NewsFeed18FormatSymbolConfigO2eeoiySbAC_ACtFZ_0((uint64_t)&v4);
  return v2 & 1;
}

uint64_t sub_1BA8E97E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWeatherBinding.Image.init(from:)(a1, a2);
}

uint64_t sub_1BA8E97F4(_QWORD *a1)
{
  return FormatWeatherBinding.Image.encode(to:)(a1);
}

uint64_t sub_1BA8E9808(__int128 *a1)
{
  __int16 v1;
  char v2;
  __int128 v4;
  __int16 v5;

  v1 = *((_WORD *)a1 + 8);
  v4 = *a1;
  v5 = v1;
  _s8NewsFeed18FormatSymbolConfigO2eeoiySbAC_ACtFZ_0((uint64_t)&v4);
  return v2 & 1;
}

unint64_t sub_1BA8E9850(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8E9874();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA8E9874()
{
  unint64_t result;

  result = qword_1EF2A9C48;
  if (!qword_1EF2A9C48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Image, &type metadata for FormatWeatherBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2A9C48);
  }
  return result;
}

unint64_t sub_1BA8E98B8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8E98EC();
  a1[2] = sub_1BA8E9930();
  result = sub_1BA8E9974();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA8E98EC()
{
  unint64_t result;

  result = qword_1ED3A69D8;
  if (!qword_1ED3A69D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Image, &type metadata for FormatWeatherBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED3A69D8);
  }
  return result;
}

unint64_t sub_1BA8E9930()
{
  unint64_t result;

  result = qword_1ED3A69D0;
  if (!qword_1ED3A69D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Image, &type metadata for FormatWeatherBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED3A69D0);
  }
  return result;
}

unint64_t sub_1BA8E9974()
{
  unint64_t result;

  result = qword_1EF2A9C50;
  if (!qword_1EF2A9C50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Image, &type metadata for FormatWeatherBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2A9C50);
  }
  return result;
}

uint64_t destroy for FormatSymbolConfig(uint64_t a1)
{
  return sub_1BA740434(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_BYTE *)(a1 + 17));
}

uint64_t _s8NewsFeed18FormatSymbolConfigOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 17);
  v6 = *(unsigned __int8 *)(a2 + 16);
  sub_1BA740408(*(_QWORD *)a2, v4, v6, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatSymbolConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 17);
  v6 = *(unsigned __int8 *)(a2 + 16);
  sub_1BA740408(*(_QWORD *)a2, v4, v6, v5);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v9 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  v10 = *(_BYTE *)(a1 + 17);
  *(_BYTE *)(a1 + 17) = v5;
  sub_1BA740434(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FormatSymbolConfig(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 17);
  v7 = *(unsigned __int8 *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v3;
  sub_1BA740434(v4, v5, v7, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatWeatherBinding.Image()
{
  return &type metadata for FormatWeatherBinding.Image;
}

uint64_t *sub_1BA8E9B04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1BA8E9BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BA8E9C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BA8E9C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BA8E9CC8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1BA8E9D38 + 4 * byte_1BB881680[v8]))();
}

void sub_1BA8E9D90(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0u;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1BA8E9E78()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1BA8E9E80(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BA8E9E88);
}

void sub_1BA8E9EA4()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1BA8E9EAC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1BA8E9EB4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x1BA8E9EBCLL);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t _s8NewsFeed24FormatSelectorExpressionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BB874398();
}

unint64_t sub_1BA8E9F10(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8E9F34();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA8E9F34()
{
  unint64_t result;

  result = qword_1EF2A9C58;
  if (!qword_1EF2A9C58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorExpression, &type metadata for FormatSelectorExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2A9C58);
  }
  return result;
}

uint64_t sub_1BA8E9F78(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA675228, (uint64_t (*)(void))sub_1BA652B98, (uint64_t (*)(void))sub_1BA8E9F94);
}

unint64_t sub_1BA8E9F94()
{
  unint64_t result;

  result = qword_1EF2A9C60;
  if (!qword_1EF2A9C60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorExpression, &type metadata for FormatSelectorExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2A9C60);
  }
  return result;
}

unint64_t sub_1BA8E9FD8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8E9FFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA8E9FFC()
{
  unint64_t result;

  result = qword_1EF2A9C68;
  if (!qword_1EF2A9C68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorsExpression, &type metadata for FormatSelectorsExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2A9C68);
  }
  return result;
}

uint64_t sub_1BA8EA040(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA6752F4, (uint64_t (*)(void))sub_1BA652D40, (uint64_t (*)(void))sub_1BA8EA05C);
}

unint64_t sub_1BA8EA05C()
{
  unint64_t result;

  result = qword_1EF2A9C70;
  if (!qword_1EF2A9C70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorsExpression, &type metadata for FormatSelectorsExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2A9C70);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSelectorExpression()
{
  return &type metadata for FormatSelectorExpression;
}

ValueMetadata *type metadata accessor for FormatSelectorsExpression()
{
  return &type metadata for FormatSelectorsExpression;
}

void sub_1BA8EA0CC(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unsigned int v4;
  id v5;
  char *v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  char v13;
  char v14;
  char v15;

  v2 = *(void **)(a1 + 16);
  v3 = *(_QWORD *)v1;
  v4 = *(unsigned __int8 *)(v1 + 8);
  if (!(v4 >> 6))
  {
    v13 = v3;
    swift_getObjectType();
    sub_1BB4065C8((uint64_t)v2, &v13);
    return;
  }
  if (v4 >> 6 == 1)
  {
    v14 = v3;
    v5 = objc_msgSend(v2, sel_eventLeagueTag);
    swift_getObjectType();
    v6 = &v14;
LABEL_13:
    sub_1BB4065C8((uint64_t)v5, v6);
    swift_unknownObjectRelease();
    return;
  }
  v7 = objc_msgSend(*(id *)(a1 + 16), sel_eventCompetitorTags);
  if (v7)
  {
    v8 = v7;
    sub_1BA8EB1C8();
    v9 = sub_1BB872DB4();

    if (!(v9 >> 62))
      goto LABEL_7;
LABEL_15:
    swift_bridgeObjectRetain();
    v10 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v3 < v10)
      goto LABEL_8;
LABEL_16:
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    v12 = v11;
    swift_bridgeObjectRelease();
    *v12 = v10;
    v12[1] = v3;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return;
  }
  v9 = MEMORY[0x1E0DEE9D8];
  if (MEMORY[0x1E0DEE9D8] >> 62)
    goto LABEL_15;
LABEL_7:
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v3 >= v10)
    goto LABEL_16;
LABEL_8:
  v15 = v4 & 0x3F;
  if ((v9 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x1BCCE4630](v3, v9);
    goto LABEL_12;
  }
  if (v3 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v3 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(id *)(v9 + 8 * v3 + 32);
    swift_unknownObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    swift_getObjectType();
    v6 = &v15;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1BA8EA2F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F4EB0(*a1, *a2);
}

uint64_t sub_1BA8EA300()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8EA39C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8EA414()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA8EA4AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA8EB180();
  *a1 = result;
  return result;
}

void sub_1BA8EA4D8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x65756761656CLL;
  if (v2 != 1)
  {
    v5 = 0x74697465706D6F63;
    v4 = 0xEA0000000000726FLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x746E657665;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BA8EA534()
{
  sub_1BA8EB13C();
  return sub_1BB872D60();
}

uint64_t sub_1BA8EA590()
{
  sub_1BA8EB13C();
  return sub_1BB872D0C();
}

void sub_1BA8EA5DC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724E068;
}

uint64_t sub_1BA8EA5F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSportsEventBinding.Bool.init(from:)(a1, a2);
}

uint64_t sub_1BA8EA604(_QWORD *a1)
{
  return FormatSportsEventBinding.Bool.encode(to:)(a1);
}

uint64_t sub_1BA8EA61C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t inited;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t result;
  id v34;
  void *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[4];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _QWORD *v46;

  if (!*a1)
  {
    sub_1BA6DC310(0, (unint64_t *)&unk_1EF2A9CC0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    v23 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
    v24 = (v23 + 32) & ~v23;
    v8 = swift_allocObject();
    v42 = xmmword_1BB87CE70;
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    v46 = (_QWORD *)(v8 + v24);
    v25 = *(void **)(a2 + 16);
    swift_getObjectType();
    v26 = objc_msgSend(v25, sel_displayName);
    v11 = sub_1BB8729A0();
    v13 = v27;

    sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v42;
    sub_1BB40679C((uint64_t)v25, (uint64_t)&v43);
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(inited + 64) = &off_1E72D2F60;
    v29 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v29;
    *(_QWORD *)(v29 + 48) = v45;
    v30 = v44;
    *(_OWORD *)(v29 + 16) = v43;
    *(_OWORD *)(v29 + 32) = v30;
    v31 = sub_1BA9747FC(inited);
    swift_setDeallocating();
    sub_1BA89EA20();
    swift_arrayDestroy();
    v19 = sub_1BB6DF010(v31);
    swift_bridgeObjectRelease();
    v20 = v46;
    v21 = 0x746E657645;
    v22 = 0xE500000000000000;
    goto LABEL_5;
  }
  if (*a1 != 1)
  {
    v34 = objc_msgSend(*(id *)(a2 + 16), sel_eventCompetitorTags);
    if (v34)
    {
      v35 = v34;
      sub_1BA8EB1C8();
      v36 = sub_1BB872DB4();

      if (v36 >> 62)
      {
        swift_bridgeObjectRetain();
        v38 = sub_1BB873F30();
        v37 = swift_bridgeObjectRelease();
        if (v38)
          goto LABEL_9;
      }
      else if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_9:
        MEMORY[0x1E0C80A78](v37);
        v41[2] = a3;
        v8 = sub_1BAFBC290(v36, (void (*)(unint64_t, uint64_t))sub_1BA8EB21C, (uint64_t)v41);
        result = swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    sub_1BA6DC310(0, (unint64_t *)&unk_1EF2A9CC0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    v39 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
    v40 = (v39 + 32) & ~v39;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    v43 = 0u;
    v44 = 0u;
    result = sub_1BAAF422C(0x74697465706D6F43, 0xEA0000000000726FLL, (uint64_t)&v43, (uint64_t *)(v8 + v40));
    goto LABEL_13;
  }
  sub_1BA6DC310(0, (unint64_t *)&unk_1EF2A9CC0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject();
  v42 = xmmword_1BB87CE70;
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  v46 = (_QWORD *)(v8 + v7);
  v9 = *(void **)(a2 + 16);
  v10 = objc_msgSend(objc_msgSend(v9, sel_eventLeagueTag), sel_displayName);
  swift_unknownObjectRelease();
  v11 = sub_1BB8729A0();
  v13 = v12;

  sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = v42;
  v15 = objc_msgSend(v9, sel_eventLeagueTag);
  swift_getObjectType();
  sub_1BB40679C((uint64_t)v15, (uint64_t)&v43);
  swift_unknownObjectRelease();
  *(_QWORD *)(v14 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v14 + 64) = &off_1E72D2F60;
  v16 = swift_allocObject();
  *(_QWORD *)(v14 + 32) = v16;
  *(_QWORD *)(v16 + 48) = v45;
  v17 = v44;
  *(_OWORD *)(v16 + 16) = v43;
  *(_OWORD *)(v16 + 32) = v17;
  v18 = sub_1BA9747FC(v14);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v19 = sub_1BB6DF010(v18);
  swift_bridgeObjectRelease();
  v20 = v46;
  v21 = 0x65756761654CLL;
  v22 = 0xE600000000000000;
LABEL_5:
  result = sub_1BAAF3C48(v21, v22, (uint64_t)v19, v11, v13, v20);
LABEL_13:
  *a4 = v8;
  return result;
}

uint64_t sub_1BA8EAB30@<X0>(void *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  __int128 v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD v17[2];
  uint64_t v18;

  strcpy((char *)v17, "Competitor [");
  BYTE13(v17[0]) = 0;
  HIWORD(v17[0]) = -5120;
  sub_1BB87420C();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v5);
  v6 = v17[0];
  swift_getObjectType();
  v7 = objc_msgSend(a1, sel_displayName);
  v8 = sub_1BB8729A0();
  v10 = v9;

  sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BB40679C((uint64_t)a1, (uint64_t)v17);
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v12 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(v12 + 48) = v18;
  v13 = v17[1];
  *(_OWORD *)(v12 + 16) = v17[0];
  *(_OWORD *)(v12 + 32) = v13;
  v14 = sub_1BA9747FC(inited);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v15 = sub_1BB6DF010(v14);
  swift_bridgeObjectRelease();
  return sub_1BAAF3C48(v6, *((uint64_t *)&v6 + 1), (uint64_t)v15, v8, v10, a2);
}

BOOL _s8NewsFeed24FormatSportsEventBindingV4BoolO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  _BOOL4 v7;
  _BOOL4 v8;
  _BOOL4 v10;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 8);
  v4 = *a2;
  v5 = *((unsigned __int8 *)a2 + 8);
  v6 = v3 >> 6;
  v7 = *a2 == *a1;
  if (v5 >= 0x40)
    v7 = 0;
  v8 = v4 == v2;
  if ((v5 & 0xC0) != 0x40)
    v8 = 0;
  v10 = ((v5 ^ v3) & 0x3F) == 0 && v2 == v4;
  if ((v5 & 0xC0) != 0x80)
    v10 = 0;
  if (v6 == 1)
    v10 = v8;
  if (v6)
    return v10;
  else
    return v7;
}

unint64_t sub_1BA8EAD58(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8EAD7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA8EAD7C()
{
  unint64_t result;

  result = qword_1EF2A9C80;
  if (!qword_1EF2A9C80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Bool, &type metadata for FormatSportsEventBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2A9C80);
  }
  return result;
}

unint64_t sub_1BA8EADC0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8EADF4();
  a1[2] = sub_1BA8EAE38();
  result = sub_1BA8EAE7C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA8EADF4()
{
  unint64_t result;

  result = qword_1EF2A9C88;
  if (!qword_1EF2A9C88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Bool, &type metadata for FormatSportsEventBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2A9C88);
  }
  return result;
}

unint64_t sub_1BA8EAE38()
{
  unint64_t result;

  result = qword_1EF2A9C90;
  if (!qword_1EF2A9C90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Bool, &type metadata for FormatSportsEventBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2A9C90);
  }
  return result;
}

unint64_t sub_1BA8EAE7C()
{
  unint64_t result;

  result = qword_1EF2A9C98;
  if (!qword_1EF2A9C98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Bool, &type metadata for FormatSportsEventBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2A9C98);
  }
  return result;
}

uint64_t _s4TextOwet_2(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 6 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 6);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 3) & 4 | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 7;
  if (v3 >= 5)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s4TextOwst_2(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 5)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 6;
    if (a3 >= 6)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 6)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 32 * (((-a2 & 4) != 0) - 2 * a2);
    }
  }
  return result;
}

uint64_t sub_1BA8EAF68(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 6;
}

uint64_t sub_1BA8EAF74(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_1BA8EAF84(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 0x1F | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.Bool()
{
  return &type metadata for FormatSportsEventBinding.Bool;
}

uint64_t _s4BoolO10CodingTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BA8EAFF4 + 4 * byte_1BB8818A1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BA8EB028 + 4 * asc_1BB88189C[v4]))();
}

uint64_t sub_1BA8EB028(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8EB030(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8EB038);
  return result;
}

uint64_t sub_1BA8EB044(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8EB04CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BA8EB050(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8EB058(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4BoolO10CodingTypeOMa()
{
  return &_s4BoolO10CodingTypeON;
}

uint64_t sub_1BA8EB074()
{
  return sub_1BA4A2870(&qword_1EF2A9CA0, (uint64_t (*)(uint64_t))sub_1BA8EB0A0, MEMORY[0x1E0DEAF50]);
}

void sub_1BA8EB0A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9CA8)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9CA8);
  }
}

unint64_t sub_1BA8EB0F8()
{
  unint64_t result;

  result = qword_1EF2A9CB0;
  if (!qword_1EF2A9CB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881A60, &_s4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2A9CB0);
  }
  return result;
}

unint64_t sub_1BA8EB13C()
{
  unint64_t result;

  result = qword_1EF2A9CB8;
  if (!qword_1EF2A9CB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8819E8, &_s4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2A9CB8);
  }
  return result;
}

uint64_t sub_1BA8EB180()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1BA8EB1C8()
{
  unint64_t result;

  result = qword_1ED3AB1E0;
  if (!qword_1ED3AB1E0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3AB1E0);
  }
  return result;
}

uint64_t sub_1BA8EB21C@<X0>(void *a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_1BA8EAB30(a1, a2);
}

uint64_t sub_1BA8EB224()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void destroy for DebugFormatFileSource(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96))
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t initializeWithCopy for DebugFormatFileSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  __int128 v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v7;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    v8 = *(void **)(a2 + 120);
    swift_bridgeObjectRetain();
    v9 = v8;
    *(_QWORD *)(a1 + 120) = v8;
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v10;
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  }
  return a1;
}

uint64_t assignWithCopy for DebugFormatFileSource(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 88);
  v5 = (_OWORD *)(a2 + 88);
  v6 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      v7 = *(void **)(a2 + 120);
      v8 = v7;
      v9 = *(void **)(a1 + 120);
      *(_QWORD *)(a1 + 120) = v7;

    }
    else
    {
      sub_1BA8EB518(a1 + 88);
      v12 = *(_QWORD *)(a2 + 120);
      v13 = *(_OWORD *)(a2 + 104);
      *v4 = *v5;
      *(_OWORD *)(a1 + 104) = v13;
      *(_QWORD *)(a1 + 120) = v12;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    v10 = *(void **)(a2 + 120);
    swift_bridgeObjectRetain();
    v11 = v10;
    *(_QWORD *)(a1 + 120) = v10;
  }
  else
  {
    v14 = *v5;
    v15 = *(_OWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *v4 = v14;
    *(_OWORD *)(a1 + 104) = v15;
  }
  return a1;
}

uint64_t sub_1BA8EB518(uint64_t a1)
{
  destroy for DebugFormatFileSourceError(a1);
  return a1;
}

uint64_t assignWithTake for DebugFormatFileSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 96))
    goto LABEL_5;
  v7 = *(_QWORD *)(a2 + 96);
  if (!v7)
  {
    sub_1BA8EB518(a1 + 88);
LABEL_5:
    v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    return a1;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v8 = *(void **)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);

  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatFileSource(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatFileSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatFileSource()
{
  return &type metadata for DebugFormatFileSource;
}

uint64_t sub_1BA8EB6E0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  _OWORD v62[4];

  v44 = a1;
  v45 = a4;
  sub_1BA4A3FB4(0, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  MEMORY[0x1E0C80A78](v6);
  v40 = (_OWORD *)((char *)&v35 - v7);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1EF2A9CE0, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v35 - v9;
  v11 = type metadata accessor for DebugFormatCacheFile();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = *a2;
  v46 = a2[1];
  v42 = a2[2];
  v41 = a2[3];
  v16 = *a3;
  v15 = a3[1];
  v17 = a3[2];
  v18 = a3[3];
  v19 = (void *)a3[4];
  v20 = v44;
  sub_1BA57B488(v44, (uint64_t)v10, (unint64_t *)&qword_1EF2A9CE0, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1BA502AD0(v20, (unint64_t *)&qword_1EF2A9CE0, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
    sub_1BA8EBAE8(v16, v15, v17, v18, v19);
    swift_bridgeObjectRelease();
    sub_1BA502AD0((uint64_t)v10, (unint64_t *)&qword_1EF2A9CE0, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
    sub_1BA8EBB18(&v47);
    v21 = v45;
  }
  else
  {
    v36 = v16;
    v37 = v15;
    v38 = v17;
    v39 = v18;
    v22 = v20;
    v23 = v45;
    sub_1BA5193C4((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    v25 = *(_QWORD *)v14;
    v24 = *((_QWORD *)v14 + 1);
    v26 = *((_QWORD *)v14 + 2);
    v27 = v14[24];
    v28 = *((_QWORD *)v14 + 5);
    v35 = *((_QWORD *)v14 + 4);
    v29 = v40;
    sub_1BA57B488((uint64_t)&v14[*(int *)(v11 + 24)], (uint64_t)v40, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    v30 = type metadata accessor for FormatDerivedDataFile();
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30) == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA502AD0((uint64_t)v29, &qword_1EF2A9CD8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
      v31 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      v32 = v29[5];
      v62[0] = v29[4];
      v62[1] = v32;
      v33 = v29[7];
      v62[2] = v29[6];
      v62[3] = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA8EBB84((uint64_t)v62);
      sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
      v31 = sub_1BB3D7EA0();
      sub_1BA8EBC0C((uint64_t)v62);
    }
    sub_1BA502AD0(v22, (unint64_t *)&qword_1EF2A9CE0, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
    *(_QWORD *)&v47 = v25;
    *((_QWORD *)&v47 + 1) = v24;
    v48 = v26;
    v49 = v27;
    v50 = v35;
    v51 = v28;
    v52 = v43;
    v53 = v46;
    v54 = v42;
    v55 = v41;
    v56 = v31;
    v57 = v36;
    v58 = v37;
    v59 = v38;
    v60 = v39;
    v61 = v19;
    nullsub_1();
    v21 = v23;
  }
  return sub_1BA5193C4((uint64_t)&v47, v21, (uint64_t (*)(_QWORD))sub_1BA8EBB30);
}

void sub_1BA8EBAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

double sub_1BA8EBB18(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void sub_1BA8EBB30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B86A0)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B86A0);
  }
}

uint64_t sub_1BA8EBB84(uint64_t a1)
{
  sub_1BA8EBBDC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA8EBBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (((a6 >> 41) & 0x7F) != 0x7F)
    return sub_1BA8EBBF0(a1, a2, a3, a4, a5, a6);
  return a1;
}

uint64_t sub_1BA8EBBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t result;

  v6 = (a6 >> 45) & 7;
  if (v6 <= 5)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BA8EBC0C(uint64_t a1)
{
  sub_1BA8EBC64(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40) | ((unint64_t)*(unsigned __int16 *)(a1 + 44) << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA8EBC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (((a6 >> 41) & 0x7F) != 0x7F)
    return sub_1BA8EBC78(a1, a2, a3, a4, a5, a6);
  return a1;
}

uint64_t sub_1BA8EBC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t result;

  v6 = (a6 >> 45) & 7;
  if (v6 <= 5)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_1BA8EBC94(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;

  v8 = *a3;
  v9 = a3[1];
  v11 = a3[2];
  v10 = a3[3];
  v35 = a4;
  v12 = a4;
  sub_1BA8EBDF8();
  if (swift_dynamicCast())
  {
    v14 = v30;
    v13 = v31;
    v15 = v32;
    v16 = v33;
    v17 = v34;
    if (v34 >> 60 == 12)
    {
      v29 = a2;
      v30 = v8;
      v25 = (void *)(v34 & 0xFFFFFFFFFFFFFFFLL);
      v31 = v9;
      v32 = v11;
      v33 = v10;
      v26 = v16;
      v27 = v15;
      v28 = (id)(v34 & 0xFFFFFFFFFFFFFFFLL);
      sub_1BA8EBC94(a1, v29, &v30, v34 & 0xFFFFFFFFFFFFFFFLL);

      v21 = v14;
      v22 = v13;
      v23 = v27;
      v24 = v26;
      goto LABEL_6;
    }
    if (v34 >> 60 == 13)
    {
      v30 = v8;
      v31 = v9;
      v32 = v11;
      v33 = v10;
      v18 = v15;
      v19 = a5;
      v20 = v16;
      sub_1BA8EBEF8(a1, a2, &v30, v14, v13, v19);
      v21 = v14;
      v22 = v13;
      v23 = v18;
      v24 = v20;
LABEL_6:
      sub_1BA8EBE4C(v21, v22, v23, v24, v17);
      return;
    }
    sub_1BA8EBE4C(v30, v31, v32, v33, v34);
  }
  *a5 = v8;
  a5[1] = v9;
  a5[2] = v11;
  a5[3] = v10;
  swift_bridgeObjectRetain();
}

unint64_t sub_1BA8EBDF8()
{
  unint64_t result;

  result = qword_1ED3BA030;
  if (!qword_1ED3BA030)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3BA030);
  }
  return result;
}

void sub_1BA8EBE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  void *v5;

  switch(a5 >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 6uLL:
    case 0xBuLL:
    case 0xEuLL:
      goto LABEL_3;
    case 2uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xDuLL:
      swift_bridgeObjectRelease();
LABEL_3:
      swift_bridgeObjectRelease();
      break;
    case 0xCuLL:
      v5 = (void *)(a5 & 0xFFFFFFFFFFFFFFFLL);
      swift_bridgeObjectRelease();

      break;
    default:
      return;
  }
}

uint64_t sub_1BA8EBEF8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v49 = a4;
  v50 = a5;
  v10 = sub_1BB86BE54();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a3;
  v14 = a3[1];
  v16 = a3[2];
  v42 = a3[3];
  v53 = a1;
  v54 = a2;
  sub_1BB86BE30();
  v47 = sub_1BA7114A0();
  v17 = sub_1BB873AA4();
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v48 = v10;
  v46 = v18;
  result = ((uint64_t (*)(char *, uint64_t))v18)(v13, v10);
  v20 = v16 - 1;
  if (__OFSUB__(v16, 1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v41 = v16;
  v21 = *(_QWORD *)(v17 + 16);
  if (v21 < v20)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v20 == v21)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a6 = v15;
    a6[1] = v14;
    v22 = v42;
    a6[2] = v41;
    a6[3] = v22;
    return swift_bridgeObjectRetain();
  }
  v38 = v15;
  v39 = a6;
  v40 = v14;
  v44 = v17 + 32;
  v45 = v17;
  v23 = v20;
  v43 = v20;
  while (1)
  {
    if ((uint64_t)v23 >= v21)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (v20 < 0)
      goto LABEL_26;
    if (v23 >= *(_QWORD *)(v17 + 16))
      goto LABEL_27;
    v24 = (uint64_t *)(v44 + 16 * v23);
    v25 = *v24;
    v26 = v24[1];
    ++v23;
    v53 = *v24;
    v54 = v26;
    swift_bridgeObjectRetain();
    sub_1BB86BDA0();
    v27 = sub_1BB873AEC();
    v29 = v28;
    v46(v13, v48);
    v53 = v27;
    v54 = v29;
    v51 = v49;
    v52 = v50;
    sub_1BA8EC684();
    sub_1BA8EC6C8();
    LOBYTE(v27) = sub_1BB8728C8();
    swift_bridgeObjectRelease();
    if ((v27 & 1) != 0)
    {
      v30 = HIBYTE(v26) & 0xF;
      if ((v26 & 0x2000000000000000) == 0)
        v30 = v25 & 0xFFFFFFFFFFFFLL;
      if (v30)
        break;
    }
LABEL_7:
    result = swift_bridgeObjectRelease();
    v17 = v45;
    v20 = v43;
    if (v23 == v21)
    {
      swift_bridgeObjectRelease();
      a6 = v39;
      v14 = v40;
      v15 = v38;
      goto LABEL_5;
    }
  }
  v31 = 4 * v30;
  while (1)
  {
    if (sub_1BB872B74() == 32 && v33 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    v32 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
      break;
LABEL_17:
    if (v31 == (unint64_t)sub_1BB872AC0() >> 14)
      goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  v34 = v40;
  swift_bridgeObjectRetain();
  v35 = sub_1BB872B44();
  result = swift_bridgeObjectRelease();
  if (__OFADD__(v35, 1))
  {
LABEL_30:
    __break(1u);
    return result;
  }
  v36 = v39;
  *v39 = v38;
  v36[1] = v34;
  v36[2] = v23;
  v36[3] = v35 + 1;
  return result;
}

uint64_t sub_1BA8EC210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  char v25;
  uint64_t v26;
  uint64_t v28;
  _QWORD v29[2];
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a3;
  v7 = sub_1BB86BE54();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a1;
  v33 = a2;
  sub_1BB86BE30();
  sub_1BA7114A0();
  v11 = sub_1BB873AA4();
  v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  v12(v10, v7);
  v13 = *(_QWORD *)(v11 + 16);
  if (v13)
  {
    v29[1] = v11;
    v30 = a4;
    v14 = 0;
    v15 = (uint64_t *)(v11 + 40);
    do
    {
      v16 = *v15;
      v32 = *(v15 - 1);
      v33 = v16;
      swift_bridgeObjectRetain();
      sub_1BB86BDA0();
      v17 = sub_1BB873AEC();
      v19 = v18;
      v12(v10, v7);
      swift_bridgeObjectRelease();
      v20 = HIBYTE(v19) & 0xF;
      if ((v19 & 0x2000000000000000) == 0)
        v20 = v17 & 0xFFFFFFFFFFFFLL;
      if (!v20
        || ((v21 = sub_1BB872B74(), v23 = v22, swift_bridgeObjectRelease(), v21 == 35)
          ? (v24 = v23 == 0xE100000000000000)
          : (v24 = 0),
            v24))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          v28 = v14 + 1;
          a4 = v30;
          goto LABEL_17;
        }
      }
      ++v14;
      v15 += 2;
    }
    while (v13 != v14);
    a4 = v30;
  }
  v28 = 1;
LABEL_17:
  swift_bridgeObjectRelease();
  v26 = v31[1];
  *a4 = *v31;
  a4[1] = v26;
  a4[2] = v28;
  a4[3] = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8EC400@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t *a4@<X3>, int64x2_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64x2_t *v29;
  _QWORD *v30;
  int64x2_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v31 = a5;
  v9 = sub_1BB86BE54();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a1;
  v39 = a2;
  sub_1BB86BE30();
  sub_1BA7114A0();
  v13 = sub_1BB873AA4();
  result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v32 = *(_QWORD *)(v13 + 16);
  if (!v32)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    v28 = a3[1];
    v29 = v31;
    v31->i64[0] = *a3;
    v29->i64[1] = v28;
    v29[1] = vdupq_n_s64(1uLL);
    return swift_bridgeObjectRetain();
  }
  v30 = a3;
  v15 = 0;
  v16 = *a4;
  v34 = a4[1];
  v35 = v16;
  v33 = v13 + 32;
  while (1)
  {
    if (v15 >= *(_QWORD *)(v13 + 16))
    {
      __break(1u);
      goto LABEL_22;
    }
    v17 = (uint64_t *)(v33 + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    ++v15;
    v38 = *v17;
    v39 = v18;
    v36 = v35;
    v37 = v34;
    swift_bridgeObjectRetain();
    if ((sub_1BB873B40() & 1) != 0)
    {
      v20 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0)
        v20 = v19 & 0xFFFFFFFFFFFFLL;
      if (v20)
        break;
    }
LABEL_3:
    result = swift_bridgeObjectRelease();
    if (v15 == v32)
    {
      swift_bridgeObjectRelease();
      a3 = v30;
      goto LABEL_19;
    }
  }
  v21 = 4 * v20;
  while (1)
  {
    if (sub_1BB872B74() == 32 && v23 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    v22 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
      break;
LABEL_11:
    if (v21 == (unint64_t)sub_1BB872AC0() >> 14)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v25 = *v30;
  v24 = v30[1];
  swift_bridgeObjectRetain();
  v26 = sub_1BB872B44();
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v26, 1))
  {
    v27 = (uint64_t *)v31;
    v31->i64[0] = v25;
    v27[1] = v24;
    v27[2] = v15;
    v27[3] = v26 + 1;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_1BA8EC684()
{
  unint64_t result;

  result = qword_1ED3A2E00;
  if (!qword_1ED3A2E00)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED3A2E00);
  }
  return result;
}

unint64_t sub_1BA8EC6C8()
{
  unint64_t result;

  result = qword_1EF2C8DF0;
  if (!qword_1EF2C8DF0)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEFF48], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EF2C8DF0);
  }
  return result;
}

uint64_t static FormatActivityItemsData.headline(_:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5;

  v5 = sub_1BA79E0CC(12, a2);
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = v5 & 1;
  return swift_unknownObjectRetain();
}

id static FormatActivityItemsData.issue(_:options:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4;

  v4 = sub_1BA79E0CC(12, a2);
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = v4 & 1 | 0x10;
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatActivityItemsData(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA727178(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for FormatActivityItemsData(uint64_t a1)
{
  sub_1BA726DA4(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for FormatActivityItemsData(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA727178(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA726DA4(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatActivityItemsData(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BA726DA4(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatActivityItemsData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x77 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 119);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 4) & 0xFFFFFF8F | (16 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 7))) ^ 0x7F;
  if (v3 >= 0x76)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatActivityItemsData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x76)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 119;
    if (a3 >= 0x77)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x77)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 4) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1BA8EC910(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 4;
}

uint64_t sub_1BA8EC91C(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0xFu;
  return result;
}

uint64_t sub_1BA8EC92C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | (16 * a2);
  return result;
}

ValueMetadata *type metadata accessor for FormatActivityItemsData()
{
  return &type metadata for FormatActivityItemsData;
}

_QWORD *sub_1BA8EC950(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _QWORD *v16;
  _OWORD v18[2];
  uint64_t v19;

  v2 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v3);
  MEMORY[0x1E0C80A78](v5);
  v6 = *(unsigned __int8 *)(a1 + 8);
  if (v6 <= 0xFD)
    __asm { BR              X10 }
  sub_1BA8EDAAC();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
  v12 = (_QWORD *)(v11 + v10);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v12);
  v13 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
  sub_1BAF89090(0x7974697669746341, 0xEE00736D65744920, 0, 0, v11, v18);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v7 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v7 + 64) = &off_1E72D2F60;
  v14 = swift_allocObject();
  *(_QWORD *)(v7 + 32) = v14;
  v15 = v18[1];
  *(_OWORD *)(v14 + 16) = v18[0];
  *(_OWORD *)(v14 + 32) = v15;
  *(_QWORD *)(v14 + 48) = v19;
  v16 = sub_1BB6DF010(v7);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v16;
}

void sub_1BA8ECC58()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;
  uint64_t v3;
  _WORD *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;

  *(_DWORD *)(v0 + 28) = v2 & 1;
  sub_1BA8EDAAC();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  *(_QWORD *)(v0 + 32) = v9;
  v10 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v10 + 72);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v0 + 8) = v12 + v11;
  v13 = sub_1BB871B24();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 200) = 0;
  *(_BYTE *)(v0 + 208) = 1;
  *(_BYTE *)(v7 - 144) = 0;
  v14 = (char *)v4 + v5[6];
  v15 = type metadata accessor for SharedItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *v4 = 258;
  *((_BYTE *)v4 + v5[7]) = 1;
  *((_BYTE *)v4 + v5[8]) = 0;
  *((_BYTE *)v4 + v5[9]) = 0;
  *((_BYTE *)v4 + v5[10]) = 0;
  sub_1BA727178(v1, v2);
  FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v1, 0, (char *)(v7 - 144), v6, (uint64_t)v4, (void **)(v0 + 48), v3, v0 + 200);
  v16 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v3, 0, 1, v16);
  v17 = *(char **)(v0 + 8);
  sub_1BAAF6720(0x656E696C64616548, 0xE800000000000000, v3, v17);
  v18 = type metadata accessor for FormatInspectionItem(0);
  v19 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v19(v17, 0, 1, v18);
  v20 = &v17[*(_QWORD *)(v0 + 16)];
  v21 = &v20[*(int *)(v18 + 24)];
  *v21 = *(_DWORD *)(v0 + 28);
  v22 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
  *(_OWORD *)v20 = xmmword_1BB881B70;
  *((_QWORD *)v20 + 2) = 0;
  *((_QWORD *)v20 + 3) = 0;
  v23 = &v20[*(int *)(v18 + 28)];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = -1;
  v19(v20, 0, 1, v18);
  sub_1BAF89090(0x7974697669746341, 0xEE00736D65744920, 0, 0, v12, (_QWORD *)(v0 + 200));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v8 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v8 + 64) = &off_1E72D2F60;
  v24 = swift_allocObject();
  *(_QWORD *)(v8 + 32) = v24;
  v25 = *(_OWORD *)(v0 + 216);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)(v0 + 200);
  *(_OWORD *)(v24 + 32) = v25;
  *(_QWORD *)(v24 + 48) = *(_QWORD *)(v0 + 232);
  sub_1BB6DF010(v8);
  swift_setDeallocating();
  sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  JUMPOUT(0x1BA8ECC18);
}

void sub_1BA8ED580()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA8EDAAC();
  v1 = swift_allocObject();
  *(_OWORD *)(v0 + 32) = xmmword_1BB87CE70;
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)(v0 + 32);
  JUMPOUT(0x1BA8ECAF8);
}

void sub_1BA8ED630()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA8EDAAC();
  v1 = swift_allocObject();
  *(_OWORD *)(v0 + 32) = xmmword_1BB87CE70;
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)(v0 + 32);
  JUMPOUT(0x1BA8ECAF8);
}

void sub_1BA8ED6E4()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA8EDAAC();
  v1 = swift_allocObject();
  *(_OWORD *)(v0 + 32) = xmmword_1BB87CE70;
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)(v0 + 32);
  JUMPOUT(0x1BA8ECAF8);
}

void sub_1BA8ED798()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA8EDAAC();
  v1 = swift_allocObject();
  *(_OWORD *)(v0 + 32) = xmmword_1BB87CE70;
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)(v0 + 32);
  JUMPOUT(0x1BA8ECAF8);
}

void sub_1BA8ED850()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA8EDAAC();
  v1 = swift_allocObject();
  *(_OWORD *)(v0 + 32) = xmmword_1BB87CE70;
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)(v0 + 32);
  JUMPOUT(0x1BA8ECAF8);
}

void sub_1BA8ED908()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA8EDAAC();
  v1 = swift_allocObject();
  *(_OWORD *)(v0 + 32) = xmmword_1BB87CE70;
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)(v0 + 32);
  JUMPOUT(0x1BA8ECAF8);
}

void sub_1BA8ED9C8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA8EDAAC();
  v1 = swift_allocObject();
  *(_OWORD *)(v0 + 32) = xmmword_1BB87CE70;
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)(v0 + 32);
  JUMPOUT(0x1BA8ECAF8);
}

void sub_1BA8EDAAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9CF0)
  {
    sub_1BA65DC00(255, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9CF0);
  }
}

uint64_t sub_1BA8EDB18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA8EDB4C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v6;

  sub_1BA65DC00(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BA8EDB9C(void *a1, unsigned __int8 a2)
{
  if (a2 <= 0xFDu)
    sub_1BA726DA4(a1, a2);
}

uint64_t sub_1BA8EDBB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA8EDBF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BA8EDBF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C23B0)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C23B0);
  }
}

uint64_t GroupLayoutInventory.resizingProvider.getter()
{
  return swift_retain();
}

unint64_t sub_1BA8EDC54()
{
  unint64_t result;

  result = qword_1ED39EC38;
  if (!qword_1ED39EC38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94AC0C, &_s10EngagementVN);
    atomic_store(result, (unint64_t *)&qword_1ED39EC38);
  }
  return result;
}

unint64_t sub_1BA8EDC98()
{
  unint64_t result;

  result = qword_1EF2A9CF8;
  if (!qword_1EF2A9CF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB913260, &type metadata for M18_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9CF8);
  }
  return result;
}

unint64_t sub_1BA8EDCDC()
{
  unint64_t result;

  result = qword_1ED3ABC50;
  if (!qword_1ED3ABC50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB914500, &type metadata for M12_V1);
    atomic_store(result, (unint64_t *)&qword_1ED3ABC50);
  }
  return result;
}

unint64_t sub_1BA8EDD20()
{
  unint64_t result;

  result = qword_1ED39E1F8;
  if (!qword_1ED39E1F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB915880, &type metadata for M6_V1);
    atomic_store(result, (unint64_t *)&qword_1ED39E1F8);
  }
  return result;
}

unint64_t sub_1BA8EDD64()
{
  unint64_t result;

  result = qword_1ED3AD800;
  if (!qword_1ED3AD800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902324, &type metadata for PluginGroupLayoutFactory);
    atomic_store(result, (unint64_t *)&qword_1ED3AD800);
  }
  return result;
}

unint64_t sub_1BA8EDDA8()
{
  unint64_t result;

  result = qword_1EF2A9D00;
  if (!qword_1EF2A9D00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB908F3C, &type metadata for J18_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D00);
  }
  return result;
}

unint64_t sub_1BA8EDDEC()
{
  unint64_t result;

  result = qword_1EF2A9D08;
  if (!qword_1EF2A9D08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB93D724, &type metadata for J12_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D08);
  }
  return result;
}

unint64_t sub_1BA8EDE30()
{
  unint64_t result;

  result = qword_1ED39D8D8;
  if (!qword_1ED39D8D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8844E4, &type metadata for J6_V1);
    atomic_store(result, (unint64_t *)&qword_1ED39D8D8);
  }
  return result;
}

unint64_t sub_1BA8EDE74()
{
  unint64_t result;

  result = qword_1EF2A9D10;
  if (!qword_1EF2A9D10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB944F84, &type metadata for H18_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D10);
  }
  return result;
}

unint64_t sub_1BA8EDEB8()
{
  unint64_t result;

  result = qword_1EF2A9D18;
  if (!qword_1EF2A9D18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB922B44, &type metadata for H12_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D18);
  }
  return result;
}

unint64_t sub_1BA8EDEFC()
{
  unint64_t result;

  result = qword_1EF2A9D20;
  if (!qword_1EF2A9D20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91853C, &type metadata for H6_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D20);
  }
  return result;
}

unint64_t sub_1BA8EDF40()
{
  unint64_t result;

  result = qword_1EF2A9D28;
  if (!qword_1EF2A9D28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902848, &type metadata for G_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D28);
  }
  return result;
}

unint64_t sub_1BA8EDF84()
{
  unint64_t result;

  result = qword_1EF2A9D30;
  if (!qword_1EF2A9D30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E4E20, &type metadata for G_V2);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D30);
  }
  return result;
}

unint64_t sub_1BA8EDFC8()
{
  unint64_t result;

  result = qword_1EF2A9D38;
  if (!qword_1EF2A9D38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ABB7C, &type metadata for A18_V17);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D38);
  }
  return result;
}

unint64_t sub_1BA8EE00C()
{
  unint64_t result;

  result = qword_1EF2A9D40;
  if (!qword_1EF2A9D40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88FCBC, &type metadata for A18_V15);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D40);
  }
  return result;
}

unint64_t sub_1BA8EE050()
{
  unint64_t result;

  result = qword_1EF2A9D48;
  if (!qword_1EF2A9D48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E0B44, &type metadata for A18_V2);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D48);
  }
  return result;
}

unint64_t sub_1BA8EE094()
{
  unint64_t result;

  result = qword_1EF2A9D50;
  if (!qword_1EF2A9D50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF84C, &type metadata for A18_V3);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D50);
  }
  return result;
}

unint64_t sub_1BA8EE0D8()
{
  unint64_t result;

  result = qword_1EF2A9D58;
  if (!qword_1EF2A9D58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EC594, &type metadata for A18_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D58);
  }
  return result;
}

unint64_t sub_1BA8EE11C()
{
  unint64_t result;

  result = qword_1EF2A9D60;
  if (!qword_1EF2A9D60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94CA0C, &type metadata for A18_V4);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D60);
  }
  return result;
}

unint64_t sub_1BA8EE160()
{
  unint64_t result;

  result = qword_1EF2A9D68;
  if (!qword_1EF2A9D68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB958324, &type metadata for A18_V6);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D68);
  }
  return result;
}

unint64_t sub_1BA8EE1A4()
{
  unint64_t result;

  result = qword_1EF2A9D70;
  if (!qword_1EF2A9D70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB884C2C, &type metadata for A18_V8);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D70);
  }
  return result;
}

unint64_t sub_1BA8EE1E8()
{
  unint64_t result;

  result = qword_1EF2A9D78;
  if (!qword_1EF2A9D78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902C34, &type metadata for A18_V10);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D78);
  }
  return result;
}

unint64_t sub_1BA8EE22C()
{
  unint64_t result;

  result = qword_1EF2A9D80;
  if (!qword_1EF2A9D80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9335DC, &type metadata for A18_V11);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D80);
  }
  return result;
}

unint64_t sub_1BA8EE270()
{
  unint64_t result;

  result = qword_1EF2A9D88;
  if (!qword_1EF2A9D88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB936D44, &type metadata for A18_V12);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D88);
  }
  return result;
}

unint64_t sub_1BA8EE2B4()
{
  unint64_t result;

  result = qword_1EF2A9D90;
  if (!qword_1EF2A9D90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882D64, &type metadata for A18_V16);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D90);
  }
  return result;
}

unint64_t sub_1BA8EE2F8()
{
  unint64_t result;

  result = qword_1EF2A9D98;
  if (!qword_1EF2A9D98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D968C, &type metadata for A12_V25);
    atomic_store(result, (unint64_t *)&qword_1EF2A9D98);
  }
  return result;
}

unint64_t sub_1BA8EE33C()
{
  unint64_t result;

  result = qword_1EF2A9DA0;
  if (!qword_1EF2A9DA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881C6C, &type metadata for A12_V24);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DA0);
  }
  return result;
}

unint64_t sub_1BA8EE380()
{
  unint64_t result;

  result = qword_1EF2A9DA8;
  if (!qword_1EF2A9DA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DB204, &type metadata for A12_V23);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DA8);
  }
  return result;
}

unint64_t sub_1BA8EE3C4()
{
  unint64_t result;

  result = qword_1EF2A9DB0;
  if (!qword_1EF2A9DB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9235AC, &type metadata for A12_V7);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DB0);
  }
  return result;
}

unint64_t sub_1BA8EE408()
{
  unint64_t result;

  result = qword_1EF2A9DB8;
  if (!qword_1EF2A9DB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882064, &type metadata for A12_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DB8);
  }
  return result;
}

unint64_t sub_1BA8EE44C()
{
  unint64_t result;

  result = qword_1EF2A9DC0;
  if (!qword_1EF2A9DC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B064, &type metadata for A12_V2);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DC0);
  }
  return result;
}

unint64_t sub_1BA8EE490()
{
  unint64_t result;

  result = qword_1EF2A9DC8;
  if (!qword_1EF2A9DC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90FD0C, &type metadata for A12_V19);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DC8);
  }
  return result;
}

unint64_t sub_1BA8EE4D4()
{
  unint64_t result;

  result = qword_1EF2A9DD0;
  if (!qword_1EF2A9DD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A024C, &type metadata for A12_V8);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DD0);
  }
  return result;
}

unint64_t sub_1BA8EE518()
{
  unint64_t result;

  result = qword_1EF2A9DD8;
  if (!qword_1EF2A9DD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB939C44, &type metadata for A12_V3);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DD8);
  }
  return result;
}

unint64_t sub_1BA8EE55C()
{
  unint64_t result;

  result = qword_1EF2A9DE0;
  if (!qword_1EF2A9DE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB956244, &type metadata for A12_V4);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DE0);
  }
  return result;
}

unint64_t sub_1BA8EE5A0()
{
  unint64_t result;

  result = qword_1EF2A9DE8;
  if (!qword_1EF2A9DE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB899724, &type metadata for A12_V5);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DE8);
  }
  return result;
}

unint64_t sub_1BA8EE5E4()
{
  unint64_t result;

  result = qword_1EF2A9DF0;
  if (!qword_1EF2A9DF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E97FC, &type metadata for A12_V6);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DF0);
  }
  return result;
}

unint64_t sub_1BA8EE628()
{
  unint64_t result;

  result = qword_1EF2A9DF8;
  if (!qword_1EF2A9DF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB947FEC, &type metadata for A12_V9);
    atomic_store(result, (unint64_t *)&qword_1EF2A9DF8);
  }
  return result;
}

unint64_t sub_1BA8EE66C()
{
  unint64_t result;

  result = qword_1EF2A9E00;
  if (!qword_1EF2A9E00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8EF844, &type metadata for A12_V10);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E00);
  }
  return result;
}

unint64_t sub_1BA8EE6B0()
{
  unint64_t result;

  result = qword_1EF2A9E08;
  if (!qword_1EF2A9E08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92ED54, &type metadata for A12_V11);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E08);
  }
  return result;
}

unint64_t sub_1BA8EE6F4()
{
  unint64_t result;

  result = qword_1EF2A9E10;
  if (!qword_1EF2A9E10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DC4F4, &type metadata for A12_V12);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E10);
  }
  return result;
}

unint64_t sub_1BA8EE738()
{
  unint64_t result;

  result = qword_1EF2A9E18;
  if (!qword_1EF2A9E18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDD64, &type metadata for A12_V13);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E18);
  }
  return result;
}

unint64_t sub_1BA8EE77C()
{
  unint64_t result;

  result = qword_1EF2A9E20;
  if (!qword_1EF2A9E20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8964AC, &type metadata for A12_V17);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E20);
  }
  return result;
}

unint64_t sub_1BA8EE7C0()
{
  unint64_t result;

  result = qword_1EF2A9E28;
  if (!qword_1EF2A9E28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92FF3C, &type metadata for A12_V14);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E28);
  }
  return result;
}

unint64_t sub_1BA8EE804()
{
  unint64_t result;

  result = qword_1EF2A9E30;
  if (!qword_1EF2A9E30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904B74, &type metadata for A12_V15);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E30);
  }
  return result;
}

unint64_t sub_1BA8EE848()
{
  unint64_t result;

  result = qword_1EF2A9E38;
  if (!qword_1EF2A9E38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB950284, &type metadata for A12_V16);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E38);
  }
  return result;
}

unint64_t sub_1BA8EE88C()
{
  unint64_t result;

  result = qword_1EF2A9E40;
  if (!qword_1EF2A9E40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92616C, &type metadata for A12_V20);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E40);
  }
  return result;
}

uint64_t dispatch thunk of GroupLayoutInventoryType.layouts(column:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of GroupLayoutInventoryType.resizingProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

_QWORD *assignWithCopy for GroupLayoutInventory(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for GroupLayoutInventory(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

_QWORD *sub_1BA8EE9A4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  return sub_1BA8EE9C0(a1, a2, a3, (uint64_t (*)(_QWORD, double))type metadata accessor for DebugFormatLogger, (uint64_t)&off_1E727E580, sub_1BA7AD740);
}

_QWORD *sub_1BA8EE9C0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(_QWORD, double), uint64_t a5, _QWORD *a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char isUniquelyReferenced_nonNull_native;
  char v57;
  unint64_t v58;
  uint64_t v59;
  _BOOL8 v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  _QWORD *v70;
  char v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  _BOOL8 v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  char v86;
  char v87;
  unint64_t v88;
  uint64_t v89;
  _BOOL8 v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  char v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  char v101;
  char v102;
  unint64_t v103;
  uint64_t v104;
  _BOOL8 v105;
  uint64_t v106;
  char v107;
  unint64_t v108;
  char v109;
  _QWORD *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  _QWORD *result;
  _QWORD v118[2];
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  unint64_t v137;
  _QWORD *v138;
  unint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD v143[5];

  v125 = a6;
  sub_1BA4B07F0(0, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v118 - v15;
  MEMORY[0x1E0C80A78](v17);
  v127 = (char *)v118 - v18;
  v126 = type metadata accessor for FormatCompilerSlotDefinition(0);
  v19 = *(_QWORD *)(v126 - 8);
  v20 = MEMORY[0x1E0C80A78](v126);
  v128 = (uint64_t)v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143[3] = a4(0, v20);
  v143[4] = a5;
  v143[0] = a2;
  a3[2] = a1;
  sub_1BA4C010C((uint64_t)v143, (uint64_t)(a3 + 3));
  v22 = a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  v142 = *(_QWORD **)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
  sub_1BA4B07F0(0, &qword_1ED3B9538, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v24 = v23;
  v25 = sub_1BA7AD188();
  v26 = sub_1BA4A2870(&qword_1ED3C9DD0, type metadata accessor for FormatCompilerProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerProperty);
  swift_retain();
  v132 = v26;
  v133 = v25;
  v27 = sub_1BB872BB0();
  v119 = a3;
  a3[8] = v27;
  v28 = *(_QWORD *)(v22 + 8);
  v122 = *(_QWORD *)(v28 + 16);
  if (!v122)
  {
    swift_bridgeObjectRetain();
    swift_release();
    v114 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v115 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v116 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v34 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_66:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v143);
    swift_bridgeObjectRelease();
    result = v119;
    v119[9] = v34;
    result[10] = v114;
    result[11] = v115;
    result[12] = v116;
    return result;
  }
  v118[1] = a1;
  v123 = v28 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
  swift_bridgeObjectRetain();
  v29 = 0;
  v30 = 0;
  v31 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v32 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v33 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v34 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v35 = v128;
  v129 = v13;
  v130 = v24;
  v124 = v16;
  v121 = v19;
  v120 = v28;
  while (1)
  {
    if (v29 >= *(_QWORD *)(v28 + 16))
      goto LABEL_75;
    v134 = v30;
    v135 = v33;
    v138 = v32;
    v140 = v31;
    v36 = *(_QWORD *)(v19 + 72);
    v131 = v29;
    sub_1BA8EF490(v123 + v36 * v29, v35);
    v142 = *(_QWORD **)(v35 + 48);
    v141 = sub_1BB872BB0();
    v37 = v35 + *(int *)(v126 + 40);
    v38 = v127;
    sub_1BA7AD26C(v37, (uint64_t)v127);
    v39 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
    v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48);
    if (v40(v38, 1, v39) == 1)
    {
      sub_1BA7AD2C8((uint64_t)v38);
      v139 = sub_1BA7AD1F4(MEMORY[0x1E0DEE9D8]);
    }
    else
    {
      v41 = *(_QWORD **)v38;
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      v142 = v41;
      v13 = v129;
      v139 = sub_1BB872BB0();
      swift_bridgeObjectRelease();
    }
    v42 = (uint64_t)v124;
    sub_1BA7AD26C(v37, (uint64_t)v124);
    if (v40((char *)v42, 1, v39) == 1)
    {
      sub_1BA7AD2C8(v42);
    }
    else
    {
      v43 = *(_QWORD *)(v42 + 8);
      sub_1BA8EF4D4(v43);
      sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      if (v43)
      {
        v44 = swift_bridgeObjectRetain();
        sub_1BA5DCC4C(v44);
        v142 = (_QWORD *)v43;
        v137 = sub_1BB872BB0();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    v137 = sub_1BA7AD1F4(MEMORY[0x1E0DEE9D8]);
LABEL_13:
    sub_1BA7AD26C(v37, (uint64_t)v13);
    if (v40(v13, 1, v39) == 1)
    {
      sub_1BA7AD2C8((uint64_t)v13);
    }
    else
    {
      v45 = *((_QWORD *)v13 + 1);
      v46 = (_QWORD *)*((_QWORD *)v13 + 2);
      sub_1BA8EF4D4(v45);
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      if (v45)
      {
        swift_bridgeObjectRetain();
        sub_1BA5DCC4C(v45);
        if (v46)
        {
          v142 = v46;
          v136 = sub_1BB872BB0();
          v47 = swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
    }
    v47 = sub_1BA7AD1F4(MEMORY[0x1E0DEE9D8]);
    v136 = v47;
LABEL_19:
    v48 = v134;
    if ((*(_QWORD *)(v35 + 64) & 0x8000000000000000) != 0)
      goto LABEL_76;
    MEMORY[0x1E0C80A78](v47);
    v118[-2] = v35;
    v50 = sub_1BA8A135C(v125, (uint64_t)&v118[-4], 0, v49);
    v134 = v48;
    v51 = v50[2];
    if (v51)
      break;
LABEL_3:
    v29 = v131 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = v128;
    sub_1BA4A2E80(v128, type metadata accessor for FormatCompilerSlotDefinition);
    v13 = v129;
    v19 = v121;
    v28 = v120;
    v31 = v140;
    v32 = v138;
    v30 = v134;
    v33 = v135;
    if (v29 == v122)
    {
      v114 = v140;
      v115 = v138;
      v116 = v135;
      swift_release();
      goto LABEL_66;
    }
  }
  v52 = v50 + 5;
  while (1)
  {
    v54 = *(v52 - 1);
    v55 = *v52;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v142 = v34;
    v58 = sub_1BA6E35A8(v54, v55);
    v59 = v34[2];
    v60 = (v57 & 1) == 0;
    v61 = v59 + v60;
    if (__OFADD__(v59, v60))
      break;
    v62 = v57;
    if (v34[3] >= v61)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v34 = v142;
        if ((v57 & 1) != 0)
          goto LABEL_31;
      }
      else
      {
        sub_1BB4C36D0();
        v34 = v142;
        if ((v62 & 1) != 0)
          goto LABEL_31;
      }
    }
    else
    {
      sub_1BA7AD1E8(v61, isUniquelyReferenced_nonNull_native);
      v63 = sub_1BA6E35A8(v54, v55);
      if ((v62 & 1) != (v64 & 1))
        goto LABEL_77;
      v58 = v63;
      v34 = v142;
      if ((v62 & 1) != 0)
      {
LABEL_31:
        v65 = v34[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v65 + 8 * v58) = v141;
        goto LABEL_35;
      }
    }
    v34[(v58 >> 6) + 8] |= 1 << v58;
    v66 = (uint64_t *)(v34[6] + 16 * v58);
    *v66 = v54;
    v66[1] = v55;
    *(_QWORD *)(v34[7] + 8 * v58) = v141;
    v67 = v34[2];
    v68 = __OFADD__(v67, 1);
    v69 = v67 + 1;
    if (v68)
      goto LABEL_71;
    v34[2] = v69;
    swift_bridgeObjectRetain();
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70 = v140;
    v71 = swift_isUniquelyReferenced_nonNull_native();
    v142 = v70;
    v73 = sub_1BA6E35A8(v54, v55);
    v74 = v70[2];
    v75 = (v72 & 1) == 0;
    v76 = v74 + v75;
    if (__OFADD__(v74, v75))
      goto LABEL_68;
    v77 = v72;
    if (v70[3] >= v76)
    {
      if ((v71 & 1) == 0)
        sub_1BB4C36D0();
    }
    else
    {
      sub_1BA7AD1E8(v76, v71);
      v78 = sub_1BA6E35A8(v54, v55);
      if ((v77 & 1) != (v79 & 1))
        goto LABEL_77;
      v73 = v78;
    }
    v80 = v142;
    v140 = v142;
    if ((v77 & 1) != 0)
    {
      v81 = v142[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v81 + 8 * v73) = v139;
    }
    else
    {
      v142[(v73 >> 6) + 8] |= 1 << v73;
      v82 = (uint64_t *)(v80[6] + 16 * v73);
      *v82 = v54;
      v82[1] = v55;
      *(_QWORD *)(v80[7] + 8 * v73) = v139;
      v83 = v80[2];
      v68 = __OFADD__(v83, 1);
      v84 = v83 + 1;
      if (v68)
        goto LABEL_72;
      v80[2] = v84;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v85 = v138;
    v86 = swift_isUniquelyReferenced_nonNull_native();
    v142 = v85;
    v88 = sub_1BA6E35A8(v54, v55);
    v89 = v85[2];
    v90 = (v87 & 1) == 0;
    v91 = v89 + v90;
    if (__OFADD__(v89, v90))
      goto LABEL_69;
    v92 = v87;
    if (v85[3] >= v91)
    {
      if ((v86 & 1) == 0)
        sub_1BB4C36D0();
    }
    else
    {
      sub_1BA7AD1E8(v91, v86);
      v93 = sub_1BA6E35A8(v54, v55);
      if ((v92 & 1) != (v94 & 1))
        goto LABEL_77;
      v88 = v93;
    }
    v95 = v142;
    v138 = v142;
    if ((v92 & 1) != 0)
    {
      v96 = v142[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 8 * v88) = v137;
    }
    else
    {
      v142[(v88 >> 6) + 8] |= 1 << v88;
      v97 = (uint64_t *)(v95[6] + 16 * v88);
      *v97 = v54;
      v97[1] = v55;
      *(_QWORD *)(v95[7] + 8 * v88) = v137;
      v98 = v95[2];
      v68 = __OFADD__(v98, 1);
      v99 = v98 + 1;
      if (v68)
        goto LABEL_73;
      v95[2] = v99;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v100 = v135;
    v101 = swift_isUniquelyReferenced_nonNull_native();
    v142 = v100;
    v103 = sub_1BA6E35A8(v54, v55);
    v104 = v100[2];
    v105 = (v102 & 1) == 0;
    v106 = v104 + v105;
    if (__OFADD__(v104, v105))
      goto LABEL_70;
    v107 = v102;
    if (v100[3] >= v106)
    {
      if ((v101 & 1) == 0)
        sub_1BB4C36D0();
    }
    else
    {
      sub_1BA7AD1E8(v106, v101);
      v108 = sub_1BA6E35A8(v54, v55);
      if ((v107 & 1) != (v109 & 1))
        goto LABEL_77;
      v103 = v108;
    }
    v110 = v142;
    v135 = v142;
    if ((v107 & 1) != 0)
    {
      v53 = v142[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v53 + 8 * v103) = v136;
    }
    else
    {
      v142[(v103 >> 6) + 8] |= 1 << v103;
      v111 = (uint64_t *)(v110[6] + 16 * v103);
      *v111 = v54;
      v111[1] = v55;
      *(_QWORD *)(v110[7] + 8 * v103) = v136;
      v112 = v110[2];
      v68 = __OFADD__(v112, 1);
      v113 = v112 + 1;
      if (v68)
        goto LABEL_74;
      v110[2] = v113;
      swift_bridgeObjectRetain();
    }
    v52 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v51)
      goto LABEL_3;
  }
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  result = (_QWORD *)sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BA8EF490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatCompilerSlotDefinition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA8EF4D4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BA8EF504()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t assignWithCopy for A12_V24(uint64_t a1, uint64_t a2)
{
  void *v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  sub_1BA7C26A0(v3, v4);
  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1BA7C2538(v5, v6);
  return a1;
}

uint64_t assignWithTake for A12_V24(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA7C2538(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for A12_V24(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && a1[17])
    return (*(_DWORD *)a1 + 253);
  v3 = *a1;
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for A12_V24(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V24()
{
  return &type metadata for A12_V24;
}

uint64_t sub_1BA8EF6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  unsigned __int8 v57;
  ValueMetadata *v58;
  unint64_t v59;
  uint64_t v60;

  v48 = a3;
  v60 = a2;
  v5 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v46 = *(_QWORD *)(v9 - 8);
  v47 = v9;
  MEMORY[0x1E0C80A78](v9);
  v43 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for GroupLayoutBindingContext();
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  v56[0] = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)v56))
  {
    sub_1BA7E415C();
    swift_allocError();
    *(_OWORD *)v16 = 0u;
    *(_OWORD *)(v16 + 16) = 0u;
    *(_QWORD *)(v16 + 32) = 0;
    *(_BYTE *)(v16 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    v42 = a1;
    v18 = a1;
    v19 = (uint64_t)v13;
    sub_1BA4C2DD8(v18, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    v20 = v43;
    sub_1BA4C2DD8(v60, v43, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v21 = v14;
    v22 = v14;
    v23 = v15;
    sub_1BA7C26A0(v22, v15);
    sub_1BB86C8D4();
    v24 = sub_1BB86C8C8();
    v40 = v25;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v58 = &type metadata for A12_V24;
    v41 = sub_1BA8EE33C();
    v59 = v41;
    LOBYTE(v56[0]) = v49;
    v56[1] = v21;
    v57 = v23;
    type metadata accessor for GroupLayoutKey();
    v26 = swift_allocObject();
    sub_1BA7C26A0(v21, v23);
    v54 = sub_1BB874734();
    v55 = v27;
    v52 = 95;
    v53 = 0xE100000000000000;
    v50 = 45;
    v51 = 0xE100000000000000;
    sub_1BA7114A0();
    v28 = sub_1BB873B04();
    v30 = v29;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v26 + 16) = v28;
    *(_QWORD *)(v26 + 24) = v30;
    v31 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v32 = v40;
    *v31 = v24;
    v31[1] = v32;
    sub_1BA4C010C((uint64_t)v56, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    v33 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BA5193C4(v19, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v33, 0, 1, v45);
    v34 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BA5193C4(v20, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v34, 0, 1, v47);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    sub_1BA7C2538(v21, v23);
    v35 = type metadata accessor for A12_V24.Bound();
    v36 = v48;
    v48[3] = v35;
    v36[4] = sub_1BA4A2870(&qword_1EF2A9E58, (uint64_t (*)(uint64_t))type metadata accessor for A12_V24.Bound, (uint64_t)&unk_1BB881CD0);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    v38 = v41;
    boxed_opaque_existential_0[4] = (uint64_t)&type metadata for A12_V24;
    boxed_opaque_existential_0[5] = v38;
    *((_BYTE *)boxed_opaque_existential_0 + 8) = v49;
    boxed_opaque_existential_0[2] = (uint64_t)v21;
    *((_BYTE *)boxed_opaque_existential_0 + 24) = v23;
    sub_1BA4C2DD8(v60, (uint64_t)boxed_opaque_existential_0 + *(int *)(v35 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA7C26A0(v21, v23);
    result = sub_1BB3E0058(0, 0, 0, 0, 0);
    *boxed_opaque_existential_0 = v26;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v35 + 28)) = result;
  }
  return result;
}

uint64_t sub_1BA8EFB08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _QWORD v28[2];
  __int128 v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];
  uint64_t v34;
  char v35[105];
  __int128 v36[2];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[6];

  v2 = v1;
  v30 = a1;
  *(_QWORD *)&v29 = sub_1BB86DA38();
  v3 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A12_V24.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + *(int *)(v8 + 40)) + 16);
  v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BA4C010C(v9 + 16, (uint64_t)&v37);
  sub_1BA4C010C(v9 + 56, (uint64_t)v36);
  v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(&v37, inited + 16);
  sub_1BA4CECCC(v36, inited + 56);
  *(double *)(inited + 96) = v11;
  v35[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v35, v41);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  v13 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v33[2] = v2;
  v33[3] = v41;
  swift_bridgeObjectRetain();
  v14 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BA7F373C, (uint64_t)v33, v13, (uint64_t)&v34);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v37 = v14;
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v16 = v15;
  sub_1BA8F1DA0(&qword_1EF2A9F08, MEMORY[0x1E0DEAF50]);
  v28[1] = v16;
  v17 = sub_1BB8730F0();
  v18 = *MEMORY[0x1E0DB5D88];
  v19 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v5, v18, v19);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0DB6200], v29);
  v31 = v17;
  v32 = v2;
  sub_1BA8F1E50(0, &qword_1EF2A9F10, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v20 = sub_1BB86DB40();
  v29 = v37;
  v21 = v38;
  v22 = v39;
  *(_QWORD *)&v37 = v14;
  *(_QWORD *)&v36[0] = v40;
  MEMORY[0x1E0C80A78](v20);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA8F1DA0((unint64_t *)&qword_1ED3B94C0, MEMORY[0x1E0DEAF38]);
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v23 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v37 = v23;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v24 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v25 = v30;
  *v30 = 0;
  *(_OWORD *)(v25 + 8) = v29;
  *((_QWORD *)v25 + 3) = v21;
  *((_QWORD *)v25 + 4) = v22;
  v26 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v25 + 5) = v24;
  *((_QWORD *)v25 + 6) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

uint64_t sub_1BA8EFF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2A9F28, (uint64_t (*)(void))sub_1BA8F1D10, (uint64_t)&type metadata for A12_V24.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 12;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BA8F1E50(0, &qword_1EF2A9F30, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA8F1E10(&qword_1EF2A9F38, &qword_1EF2A9F30, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1BA8F008C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v16)(uint64_t, _QWORD *);
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a3;
  sub_1BA4CDF6C(0, &qword_1EF2A9F28, (uint64_t (*)(void))sub_1BA8F1D10, (uint64_t)&type metadata for A12_V24.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (uint64_t *)((char *)&v26 - v8);
  v35 = a2;
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v31 = sub_1BB86D438();
    v30 = *MEMORY[0x1E0DB5A38];
    v29 = *MEMORY[0x1E0DB6318];
    v28 = *MEMORY[0x1E0DB6410];
    v27 = *MEMORY[0x1E0DB5C80];
    swift_bridgeObjectRetain();
    v11 = 0;
    v26 = xmmword_1BB87CE70;
    v32 = v10;
    v33 = v7;
    do
    {
      v37 = *(_QWORD *)(v35 + 8 * v11++ + 32);
      v39 = a1;
      v12 = v31;
      v13 = swift_allocBox();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, v30, v12);
      *v9 = v13;
      v15 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104);
      v15(v9, v29, v6);
      v16 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BA8F1E50(0, &qword_1EF2A9F40, MEMORY[0x1E0DB5A10]);
      v38 = v17;
      v36 = sub_1BA8F1E10(&qword_1EF2A9F48, &qword_1EF2A9F40, v16, MEMORY[0x1E0DB5A18]);
      swift_bridgeObjectRetain();
      sub_1BB86D4EC();
      v18 = *(void (**)(uint64_t *, uint64_t))(v7 + 8);
      v18(v9, v6);
      v39 = a1;
      v15(v9, v28, v6);
      sub_1BA8F1ECC();
      sub_1BA4CDF6C(0, &qword_1EF2A9F58, (uint64_t (*)(void))sub_1BA8F1D10, (uint64_t)&type metadata for A12_V24.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
      v20 = v19;
      v21 = *(_QWORD *)(v19 - 8);
      v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v26;
      v24 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v21 + 104))(v23 + v22, v27, v20);
      MEMORY[0x1E0C80A78](v24);
      sub_1BB86D498();
      v7 = v33;
      swift_bridgeObjectRelease();
      v25 = v32;
      v18(v9, v6);
      swift_bridgeObjectRelease();
    }
    while (v25 != v11);
    swift_bridgeObjectRelease();
  }
}

void sub_1BA8F03A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, _QWORD *);
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  sub_1BA4CDF6C(0, &qword_1EF2A9F28, (uint64_t (*)(void))sub_1BA8F1D10, (uint64_t)&type metadata for A12_V24.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v15 - v7);
  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v18 = *(_QWORD *)(v10 + 72);
    v17 = *MEMORY[0x1E0DB63F8];
    v15 = a2;
    swift_bridgeObjectRetain();
    v16 = v5;
    do
    {
      v20 = a1;
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = 6;
      *v8 = v12;
      v13 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, v17, v5);
      v19 = &v15;
      MEMORY[0x1E0C80A78](v13);
      v14 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BA8F1E50(0, &qword_1EF2A9F40, MEMORY[0x1E0DB5A10]);
      sub_1BA8F1E10(&qword_1EF2A9F48, &qword_1EF2A9F40, v14, MEMORY[0x1E0DB5A18]);
      v5 = v16;
      sub_1BB86D4BC();
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
      v11 += v18;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA8F05B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, _QWORD *);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v44 = a2;
  v45 = sub_1BB86DA38();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v48 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1BB86D93C();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2A9F28, (uint64_t (*)(void))sub_1BA8F1D10, (uint64_t)&type metadata for A12_V24.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v43 - v14);
  v52 = a1;
  KeyPath = swift_getKeyPath();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0x4060200000000000;
  *v15 = v16;
  v17 = *MEMORY[0x1E0DB6330];
  v50 = v13;
  v51 = v12;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 104))(v15, v17, v12);
  sub_1BA8F1ECC();
  sub_1BA4CDF6C(0, &qword_1EF2A9F58, (uint64_t (*)(void))sub_1BA8F1D10, (uint64_t)&type metadata for A12_V24.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v21 + v20) = 0x4058C00000000000;
  (*(void (**)(void))(v19 + 104))();
  v22 = a3 + *(int *)(type metadata accessor for A12_V24.Bound() + 24);
  v23 = *(unsigned __int8 *)(v22 + *(int *)(type metadata accessor for GroupLayoutContext() + 24) + 17) | 2;
  v24 = (char *)v10 + v8[5];
  v25 = *MEMORY[0x1E0DB61C8];
  v26 = sub_1BB86DA20();
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v24, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  v28 = (void **)MEMORY[0x1E0DC4918];
  *v10 = v23;
  *(uint64_t *)((char *)v10 + v8[6]) = 3;
  v29 = *v28;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v29;
  v30 = *MEMORY[0x1E0DC49E8];
  v31 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 8);
  v32 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 16);
  v33 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 24);
  v34 = qword_1ED3BC390;
  v35 = v29;
  if (v34 != -1)
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v36 = swift_release();
  v37 = MEMORY[0x1E0C80A78](v36);
  *(&v43 - 8) = v30;
  *(&v43 - 7) = v31;
  *(&v43 - 6) = v32;
  *(&v43 - 5) = v33;
  v39 = v44;
  v38 = v45;
  *(&v43 - 4) = (uint64_t)v7;
  *(&v43 - 3) = v39;
  v42 = (unint64_t)v10;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v43 + 104))(v48, *MEMORY[0x1E0DB6208], v38, v37);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v49);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  v40 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA8F1E50(0, &qword_1EF2A9F40, MEMORY[0x1E0DB5A10]);
  sub_1BA8F1E10(&qword_1EF2A9F48, &qword_1EF2A9F40, v40, MEMORY[0x1E0DB5A18]);
  v42 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v50 + 8))(v15, v51);
}

uint64_t sub_1BA8F0A68@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V24.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BA8F0B48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2A9F90, (uint64_t (*)(void))sub_1BA8F25CC, (uint64_t)&type metadata for A12_V24.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA8F25CC();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BA8F0CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA8F22D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA8F0D20()
{
  sub_1BA8F25CC();
  return sub_1BB874710();
}

uint64_t sub_1BA8F0D48()
{
  sub_1BA8F25CC();
  return sub_1BB87471C();
}

double sub_1BA8F0D70@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BA8F23B8(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BA8F0DB4(_QWORD *a1)
{
  return sub_1BA8F0B48(a1);
}

uint64_t sub_1BA8F0DC8()
{
  sub_1BA8F1D54();
  return sub_1BB86D96C();
}

uint64_t sub_1BA8F0E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA8EF6FC(a1, a2, a3);
}

uint64_t sub_1BA8F0E44()
{
  return sub_1BB690A10();
}

unint64_t sub_1BA8F0E54(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA8F0E80();
  result = sub_1BA8F0EC4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA8F0E80()
{
  unint64_t result;

  result = qword_1EF2A9E48;
  if (!qword_1EF2A9E48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881C1C, &type metadata for A12_V24);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E48);
  }
  return result;
}

unint64_t sub_1BA8F0EC4()
{
  unint64_t result;

  result = qword_1EF2A9E50;
  if (!qword_1EF2A9E50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881C44, &type metadata for A12_V24);
    atomic_store(result, (unint64_t *)&qword_1EF2A9E50);
  }
  return result;
}

uint64_t type metadata accessor for A12_V24.Bound()
{
  uint64_t result;

  result = qword_1EF2A9EC0;
  if (!qword_1EF2A9EC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA8F0F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *__dst;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  v32 = a3;
  v33 = a2;
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = (int *)type metadata accessor for GroupLayoutContext();
  v15 = v14[5];
  v16 = v11 + v15;
  v17 = v12 + v15;
  v18 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = v14[6];
  v20 = v11 + v19;
  v21 = v12 + v19;
  *(_OWORD *)v20 = *(_OWORD *)(v12 + v19);
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(_BYTE *)(v20 + 19) = *(_BYTE *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  v22 = *(_QWORD *)(v12 + v19 + 24);
  if (v22 >= 2)
    v22 = swift_bridgeObjectRetain();
  *(_QWORD *)(v20 + 24) = v22;
  v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  v25 = (const void *)(v21 + v24);
  v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(_QWORD *)(v20 + *(int *)(v23 + 40)) = *(_QWORD *)(v21 + *(int *)(v23 + 40));
  *(_QWORD *)(v11 + v14[7]) = *(_QWORD *)(v12 + v14[7]);
  *(_QWORD *)(v11 + v14[8]) = *(_QWORD *)(v12 + v14[8]);
  *(_BYTE *)(v11 + v14[9]) = *(_BYTE *)(v12 + v14[9]);
  *(_QWORD *)(v11 + v14[10]) = *(_QWORD *)(v12 + v14[10]);
  *(_BYTE *)(v11 + v14[11]) = *(_BYTE *)(v12 + v14[11]);
  *(_QWORD *)(v11 + v14[12]) = *(_QWORD *)(v12 + v14[12]);
  *(_QWORD *)(a1 + *(int *)(v32 + 28)) = *(_QWORD *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1BA8F11B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  size_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;

  v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  v38 = a3;
  v39 = a2;
  v7 = *(int *)(a3 + 24);
  v40 = a1;
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = (int *)type metadata accessor for GroupLayoutContext();
  v12 = v11[5];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = v11[6];
  v17 = &v8[v16];
  v18 = &v9[v16];
  v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)v17 = v19;
  v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  v20 = (unint64_t *)&v8[v16 + 24];
  v21 = *(_QWORD *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v17 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v20 = *((_QWORD *)v18 + 3);
    }
  }
  else
  {
    *v20 = v21;
    if (v21 >= 2)
      swift_bridgeObjectRetain();
  }
  v37 = type metadata accessor for FeedLayoutSolverOptions(0);
  v22 = *(int *)(v37 + 36);
  v23 = (uint64_t)&v17[v22];
  v24 = &v18[v22];
  v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v36 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  v28 = v27((uint64_t)v24, 1, v25);
  if ((_DWORD)v23)
  {
    if (!v28)
    {
      v33 = sub_1BB8705C4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v36, v24, v33);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v36, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v30 = *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64);
    v31 = (void *)v36;
  }
  else
  {
    if (!v28)
    {
      v34 = sub_1BB8705C4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v36, v24, v34);
      goto LABEL_16;
    }
    sub_1BA4A2E80(v36, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v30 = *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64);
    v31 = (void *)v36;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(_QWORD *)&v17[*(int *)(v37 + 40)] = *(_QWORD *)&v18[*(int *)(v37 + 40)];
  *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
  *(_QWORD *)&v8[v11[8]] = *(_QWORD *)&v9[v11[8]];
  v8[v11[9]] = v9[v11[9]];
  *(_QWORD *)&v8[v11[10]] = *(_QWORD *)&v9[v11[10]];
  swift_retain();
  swift_release();
  v8[v11[11]] = v9[v11[11]];
  *(_QWORD *)&v8[v11[12]] = *(_QWORD *)&v9[v11[12]];
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v40 + *(int *)(v38 + 28)) = *(_QWORD *)((char *)v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v40;
}

void sub_1BA8F1528()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9E60)
  {
    sub_1BA8F1574();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9E60);
  }
}

void sub_1BA8F1574()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B96E0)
  {
    v0 = sub_1BB87309C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B96E0);
  }
}

uint64_t sub_1BA8F15D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  void *__dst;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = (int *)type metadata accessor for GroupLayoutContext();
  v10 = v9[5];
  v11 = v6 + v10;
  v12 = v7 + v10;
  v13 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = v9[6];
  v15 = v6 + v14;
  v16 = v7 + v14;
  *(_OWORD *)v15 = *(_OWORD *)(v7 + v14);
  *(_BYTE *)(v15 + 16) = *(_BYTE *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(_BYTE *)(v15 + 19) = *(_BYTE *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v7 + v14 + 24);
  v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  v18 = (const void *)(v16 + v17);
  v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(_QWORD *)(v15 + *(int *)(v24 + 40)) = *(_QWORD *)(v16 + *(int *)(v24 + 40));
  *(_QWORD *)(v6 + v9[7]) = *(_QWORD *)(v7 + v9[7]);
  *(_QWORD *)(v6 + v9[8]) = *(_QWORD *)(v7 + v9[8]);
  *(_BYTE *)(v6 + v9[9]) = *(_BYTE *)(v7 + v9[9]);
  *(_QWORD *)(v6 + v9[10]) = *(_QWORD *)(v7 + v9[10]);
  *(_BYTE *)(v6 + v9[11]) = *(_BYTE *)(v7 + v9[11]);
  *(_QWORD *)(v6 + v9[12]) = *(_QWORD *)(v7 + v9[12]);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1BA8F17FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  size_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v36 = a3;
  v37 = a2;
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for GroupLayoutContext();
  v11 = v10[5];
  v12 = v7 + v11;
  v13 = v8 + v11;
  v14 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = v10[6];
  v16 = v7 + v15;
  v17 = v8 + v15;
  *(_OWORD *)v16 = *(_OWORD *)(v8 + v15);
  *(_BYTE *)(v16 + 16) = *(_BYTE *)(v8 + v15 + 16);
  *(_BYTE *)(v16 + 17) = *(_BYTE *)(v8 + v15 + 17);
  *(_BYTE *)(v16 + 18) = *(_BYTE *)(v8 + v15 + 18);
  *(_BYTE *)(v16 + 19) = *(_BYTE *)(v8 + v15 + 19);
  *(_BYTE *)(v16 + 20) = *(_BYTE *)(v8 + v15 + 20);
  *(_BYTE *)(v16 + 21) = *(_BYTE *)(v8 + v15 + 21);
  *(_BYTE *)(v16 + 22) = *(_BYTE *)(v8 + v15 + 22);
  *(_BYTE *)(v16 + 23) = *(_BYTE *)(v8 + v15 + 23);
  v18 = (unint64_t *)(v7 + v15 + 24);
  v19 = *(_QWORD *)(v8 + v15 + 24);
  if (*v18 < 2)
    goto LABEL_4;
  if (v19 < 2)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v19 = *(_QWORD *)(v17 + 24);
LABEL_4:
    *v18 = v19;
    goto LABEL_6;
  }
  *v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  v35 = type metadata accessor for FeedLayoutSolverOptions(0);
  v20 = *(int *)(v35 + 36);
  v21 = v16 + v20;
  v22 = (const void *)(v17 + v20);
  v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v33 = *(_QWORD *)(v23 - 8);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v34 = v21;
  LODWORD(v21) = v24(v21, 1, v23);
  v25 = v24((uint64_t)v22, 1, v23);
  if ((_DWORD)v21)
  {
    if (!v25)
    {
      v30 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v34, v22, v30);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v34, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v27 = *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64);
    v28 = (void *)v34;
  }
  else
  {
    if (!v25)
    {
      v31 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v34, v22, v31);
      goto LABEL_14;
    }
    sub_1BA4A2E80(v34, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v27 = *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64);
    v28 = (void *)v34;
  }
  memcpy(v28, v22, v27);
LABEL_14:
  *(_QWORD *)(v16 + *(int *)(v35 + 40)) = *(_QWORD *)(v17 + *(int *)(v35 + 40));
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  *(_QWORD *)(v7 + v10[8]) = *(_QWORD *)(v8 + v10[8]);
  *(_BYTE *)(v7 + v10[9]) = *(_BYTE *)(v8 + v10[9]);
  *(_QWORD *)(v7 + v10[10]) = *(_QWORD *)(v8 + v10[10]);
  swift_release();
  *(_BYTE *)(v7 + v10[11]) = *(_BYTE *)(v8 + v10[11]);
  *(_QWORD *)(v7 + v10[12]) = *(_QWORD *)(v8 + v10[12]);
  swift_release();
  *(_QWORD *)(a1 + *(int *)(v36 + 28)) = *(_QWORD *)(v37 + *(int *)(v36 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BA8F1B38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA8F1B44(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BA8F1BC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BA8F1BCC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BA8F1C40()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA8F1CCC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2A9F00, (uint64_t (*)(uint64_t))type metadata accessor for A12_V24.Bound, (uint64_t)&unk_1BB881CA8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA8F1D08(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8EFF30(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BA8F1D10()
{
  unint64_t result;

  result = qword_1EF2A9F18;
  if (!qword_1EF2A9F18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881E00, &type metadata for A12_V24.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2A9F18);
  }
  return result;
}

unint64_t sub_1BA8F1D54()
{
  unint64_t result;

  result = qword_1EF2A9F20;
  if (!qword_1EF2A9F20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881DD0, &type metadata for A12_V24.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2A9F20);
  }
  return result;
}

uint64_t sub_1BA8F1D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BA8F0A68(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BA8F1DA0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA8F1DF8()
{
  return swift_deallocObject();
}

void sub_1BA8F1E08(uint64_t a1)
{
  uint64_t v1;

  sub_1BA8F008C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA8F1E10(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA8F1E50(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA8F1E50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V24.Layout;
    v8[1] = &type metadata for A12_V24.Layout.Attributes;
    v8[2] = sub_1BA8F1D10();
    v8[3] = sub_1BA8F1D54();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BA8F1ECC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9F50)
  {
    sub_1BA4CDF6C(255, &qword_1EF2A9F58, (uint64_t (*)(void))sub_1BA8F1D10, (uint64_t)&type metadata for A12_V24.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9F50);
  }
}

void sub_1BA8F1F40(uint64_t a1)
{
  uint64_t v1;

  sub_1BA8F03A8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA8F1F48(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F05B0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA8F1F50(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB622938(a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

void sub_1BA8F1F64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B06F8)
  {
    sub_1BA657B44();
    sub_1BA6592A0();
    v0 = sub_1BB86DB58();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B06F8);
  }
}

_QWORD *assignWithCopy for A12_V24.Layout.Attributes(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for A12_V24.Layout.Attributes(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for A12_V24.Layout.Attributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for A12_V24.Layout.Attributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V24.Layout.Attributes()
{
  return &type metadata for A12_V24.Layout.Attributes;
}

_QWORD *assignWithCopy for FormatButtonNodeStateMaskLayoutAttributes(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FormatButtonNodeStateMaskLayoutAttributes(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for A12_V24.Layout()
{
  return &type metadata for A12_V24.Layout;
}

unint64_t sub_1BA8F21B8()
{
  unint64_t result;

  result = qword_1EF2A9F60;
  if (!qword_1EF2A9F60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881D70, &type metadata for A12_V24.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2A9F60);
  }
  return result;
}

unint64_t sub_1BA8F2200()
{
  unint64_t result;

  result = qword_1EF2A9F68;
  if (!qword_1EF2A9F68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881D48, &type metadata for A12_V24.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2A9F68);
  }
  return result;
}

unint64_t sub_1BA8F2248()
{
  unint64_t result;

  result = qword_1EF2A9F70;
  if (!qword_1EF2A9F70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881D20, &type metadata for A12_V24.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2A9F70);
  }
  return result;
}

unint64_t sub_1BA8F2290()
{
  unint64_t result;

  result = qword_1EF2A9F78;
  if (!qword_1EF2A9F78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881D98, &type metadata for A12_V24.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2A9F78);
  }
  return result;
}

uint64_t sub_1BA8F22D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB9620D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BA8F23B8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2A9F80, (uint64_t (*)(void))sub_1BA8F25CC, (uint64_t)&type metadata for A12_V24.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA8F25CC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BA8F25CC()
{
  unint64_t result;

  result = qword_1EF2A9F88;
  if (!qword_1EF2A9F88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881EF4, &type metadata for A12_V24.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9F88);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V24.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA8F265C + 4 * byte_1BB881C0D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA8F2690 + 4 * asc_1BB881C08[v4]))();
}

uint64_t sub_1BA8F2690(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8F2698(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8F26A0);
  return result;
}

uint64_t sub_1BA8F26AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8F26B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA8F26B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8F26C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V24.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V24.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BA8F26E0()
{
  unint64_t result;

  result = qword_1EF2A9FA0;
  if (!qword_1EF2A9FA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881ECC, &type metadata for A12_V24.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9FA0);
  }
  return result;
}

unint64_t sub_1BA8F2728()
{
  unint64_t result;

  result = qword_1EF2A9FA8;
  if (!qword_1EF2A9FA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881E3C, &type metadata for A12_V24.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9FA8);
  }
  return result;
}

unint64_t sub_1BA8F2770()
{
  unint64_t result;

  result = qword_1EF2A9FB0;
  if (!qword_1EF2A9FB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB881E64, &type metadata for A12_V24.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2A9FB0);
  }
  return result;
}

unint64_t sub_1BA8F27B4(uint64_t a1)
{
  return sub_1BA6A41B0(a1, (void (*)(_QWORD))sub_1BA76BB6C, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F27C8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F6BFC();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F28DC(uint64_t a1)
{
  return sub_1BA6A41B0(a1, (void (*)(_QWORD))sub_1BA8F5FE8, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F28F0(uint64_t a1)
{
  return sub_1BA8F3E74(a1, (unint64_t *)&qword_1ED3B9B48, (uint64_t)&qword_1ED3B9800, (uint64_t)&protocolRef_FCTagProviding);
}

unint64_t sub_1BA8F290C(uint64_t a1)
{
  return sub_1BA79E1C4(a1, (void (*)(_QWORD))sub_1BA8F6B98, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F2920(uint64_t a1)
{
  return sub_1BA8F3E74(a1, (unint64_t *)&qword_1ED3A1710, (uint64_t)&qword_1ED3CF910, (uint64_t)&protocolRef_FCPuzzleProviding);
}

unint64_t sub_1BA8F293C(uint64_t a1)
{
  return sub_1BA8F3E74(a1, (unint64_t *)&qword_1EF2AA0F8, (uint64_t)&qword_1ED3CF990, (uint64_t)&protocolRef_FCPuzzleTypeProviding);
}

unint64_t sub_1BA8F2958(uint64_t a1)
{
  return sub_1BA79E1C4(a1, (void (*)(_QWORD))sub_1BA8F6B34, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F296C(uint64_t a1)
{
  return sub_1BA8F3B3C(a1, &qword_1ED3C43D0, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic, (void (*)(_QWORD, double))sub_1BA8F6A20);
}

unint64_t sub_1BA8F2988(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F6AD0();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = a1 + 40;
  while (1)
  {
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(_QWORD *)v4;
    v7 = *(_QWORD *)(v4 + 8);
    v8 = *(_QWORD *)(v4 + 16);
    v17 = *(_OWORD *)(v4 + 24);
    v9 = *(_QWORD *)(v4 + 40);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v5, v6);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v2[6] + 16 * result);
    *v12 = v5;
    v12[1] = v6;
    v13 = v2[7] + 40 * result;
    *(_QWORD *)v13 = v7;
    *(_QWORD *)(v13 + 8) = v8;
    *(_OWORD *)(v13 + 16) = v17;
    *(_QWORD *)(v13 + 32) = v9;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v2[2] = v16;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F2AEC(uint64_t a1)
{
  return sub_1BA8F2C88(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F2AF8(uint64_t a1)
{
  return sub_1BA79E1C4(a1, (void (*)(_QWORD))sub_1BA8F6554, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F2B0C(uint64_t a1)
{
  return sub_1BA662964(a1, (unint64_t *)&qword_1ED3B9B40, (uint64_t)&qword_1ED3B9760, 0x1E0D58EA0);
}

unint64_t sub_1BA8F2B28(uint64_t a1)
{
  return sub_1BA8F3450(a1, (unint64_t *)&qword_1ED3AF7C8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0], (void (*)(_QWORD, double))sub_1BA8F5BFC);
}

unint64_t sub_1BA8F2B44(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F68C4();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F2C60(uint64_t a1)
{
  return sub_1BA79E1C4(a1, (void (*)(_QWORD))sub_1BA8F64D8, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F2C74(uint64_t a1)
{
  return sub_1BA79E1C4(a1, (void (*)(_QWORD))sub_1BA8F6440, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F2C88(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F59F0();
  v4 = (_QWORD *)sub_1BB873F6C();
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  v6 = (_OWORD *)(a1 + 56);
  while (1)
  {
    v7 = *((_QWORD *)v6 - 3);
    v8 = *((_QWORD *)v6 - 2);
    v9 = *((_QWORD *)v6 - 1);
    v17 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = a2(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (_QWORD *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    v13 = v4[7] + 24 * result;
    *(_QWORD *)v13 = v9;
    *(_OWORD *)(v13 + 8) = v17;
    v14 = v4[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v6 = (_OWORD *)((char *)v6 + 40);
    v4[2] = v16;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F2DD8(uint64_t a1)
{
  return sub_1BA8F3E74(a1, (unint64_t *)&qword_1ED3B9B50, (uint64_t)&qword_1ED3D4450, (uint64_t)&protocolRef_FCHeadlineProviding);
}

unint64_t sub_1BA8F2DF4(uint64_t a1)
{
  return sub_1BA6A41B0(a1, (void (*)(_QWORD))sub_1BA8F5B1C, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F2E08(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F62B0(0, (unint64_t *)&qword_1ED3B9AC0, (uint64_t)&qword_1ED3B17D0, (uint64_t)&protocol descriptor for FeedGroupItemType, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4D9CE8);
  v2 = sub_1BB873F6C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA739DDC(v6, (uint64_t)&v15, (unint64_t *)&unk_1EF2AA0D0, (unint64_t *)&qword_1ED3B17D0);
    v7 = v15;
    v8 = v16;
    result = sub_1BA6E35A8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_1BA4CECCC(&v17, v3[7] + 40 * result);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F2F74(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F5D28();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    v18 = *(_OWORD *)(v4 + 1);
    v9 = v4[3];
    v8 = v4[4];
    v10 = v4[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v5, v6);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v2[6] + 16 * result);
    *v13 = v5;
    v13[1] = v6;
    v14 = v2[7] + 48 * result;
    *(_QWORD *)v14 = v7;
    *(_OWORD *)(v14 + 8) = v18;
    *(_QWORD *)(v14 + 24) = v9;
    *(_QWORD *)(v14 + 32) = v8;
    *(_QWORD *)(v14 + 40) = v10;
    v15 = v2[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v2[2] = v17;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F30E0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _OWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA5D2CEC();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = a1 + 40;
  while (1)
  {
    v5 = *(_QWORD *)(v4 - 8);
    v6 = *(_QWORD *)v4;
    v15 = *(_OWORD *)(v4 + 24);
    v16 = *(_OWORD *)(v4 + 8);
    v14 = *(_OWORD *)(v4 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    v10 = (_OWORD *)(v2[7] + 48 * result);
    *v10 = v16;
    v10[1] = v15;
    v10[2] = v14;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 64;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F3264(uint64_t a1)
{
  return sub_1BA8F3450(a1, &qword_1ED3AE438, (void (*)(uint64_t))MEMORY[0x1E0CB0870], (void (*)(_QWORD, double))sub_1BA8F57F8);
}

unint64_t sub_1BA8F3280(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  sub_1BA76EB4C(0, (unint64_t *)&unk_1EF2AA048, (void (*)(uint64_t))MEMORY[0x1E0DEC990]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v23 - v5;
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F5E50();
  v7 = sub_1BB873F6C();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = &v6[*(int *)(v3 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BA6AA01C(v13, (uint64_t)v6, (uint64_t)&unk_1EF2AA048, (uint64_t)MEMORY[0x1E0DEC990], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA76EB4C);
    result = sub_1BA6EDA24((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_1BB873E58();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    result = (unint64_t)sub_1BA76EAE0(v10, (_OWORD *)(v8[7] + 32 * v17));
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F3434(uint64_t a1)
{
  return sub_1BA8F3450(a1, (unint64_t *)&qword_1ED39E218, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8], (void (*)(_QWORD, double))sub_1BA8F671C);
}

unint64_t sub_1BA8F3450(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(_QWORD, double))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t result;
  char v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD v31[2];
  char *v32;
  unint64_t *v33;

  v33 = a2;
  sub_1BA7AD210(0, a2, a3);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (_QWORD *)((char *)v31 - v11);
  if (!*(_QWORD *)(a1 + 16))
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a4(0, v10);
  v13 = sub_1BB873F6C();
  v14 = (_QWORD *)v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v14;
  }
  v16 = (char *)v12 + *(int *)(v8 + 48);
  v31[1] = a1;
  v32 = v16;
  v17 = v13 + 64;
  v18 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v19 = *(_QWORD *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_1BA8F6A84(v18, (uint64_t)v12, v33, a3);
    v20 = *v12;
    v21 = v12[1];
    result = sub_1BA6E35A8(*v12, v21);
    if ((v23 & 1) != 0)
      break;
    v24 = result;
    *(_QWORD *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v25 = (uint64_t *)(v14[6] + 16 * result);
    *v25 = v20;
    v25[1] = v21;
    v26 = v14[7];
    v27 = ((uint64_t (*)(_QWORD))a3)(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v24, v32, v27);
    v28 = v14[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_11;
    v14[2] = v30;
    v18 += v19;
    if (!--v15)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F35EC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F67E4(0, (unint64_t *)&unk_1EF2A9FC8, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, &qword_1EF2A8A60, (uint64_t)&unk_1BB87C700);
  v2 = sub_1BB873F6C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA6AA01C(v6, (uint64_t)&v13, (uint64_t)&unk_1EF2A9FD8, (uint64_t)type metadata accessor for OpenExternalURLOptionsKey, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA76EB4C);
    v7 = v13;
    result = sub_1BA76E68C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1BA76EAE0(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F3754(uint64_t a1)
{
  return sub_1BA6A41B0(a1, (void (*)(_QWORD))sub_1BA8F5924, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F3768(uint64_t a1)
{
  return sub_1BA6A41B0(a1, (void (*)(_QWORD))sub_1BA8F585C, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F377C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F5988();
  v2 = sub_1BB873F6C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  v7 = MEMORY[0x1E0DEC198];
  while (1)
  {
    sub_1BA6AA01C(v6, (uint64_t)v16, (uint64_t)&qword_1EF2A9FE8, v7, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA76EAF0);
    result = sub_1BB4AB200((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v3[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_1BA76EAE0(&v18, (_OWORD *)(v3[7] + 32 * result));
    v13 = v3[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v3[2] = v15;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F38D8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F5F84();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_1BA6E35A8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F39EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  void *v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F5F1C();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 1);
    v6 = *v4;
    swift_bridgeObjectRetain();
    v7 = v6;
    result = sub_1BA5A0BD8(v5);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v5;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F3AF0(uint64_t a1)
{
  return sub_1BA6A41B0(a1, (void (*)(_QWORD))sub_1BA8F6698, (uint64_t (*)(uint64_t, uint64_t))sub_1BA6E35A8);
}

unint64_t sub_1BA8F3B04(uint64_t a1)
{
  return sub_1BA8F3B3C(a1, (unint64_t *)&qword_1ED3A1008, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions, (void (*)(_QWORD, double))sub_1BA8F6634);
}

unint64_t sub_1BA8F3B20(uint64_t a1)
{
  return sub_1BA8F3B3C(a1, &qword_1EF2A9FF8, (void (*)(uint64_t))type metadata accessor for DebugFormatCompilingPackage, (void (*)(_QWORD, double))sub_1BA8F5A54);
}

unint64_t sub_1BA8F3B3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(_QWORD, double))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t result;
  char v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  unint64_t *v33;

  v33 = a2;
  sub_1BA7AD210(0, a2, a3);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (_QWORD *)((char *)v31 - v11);
  if (!*(_QWORD *)(a1 + 16))
  {
    v14 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  a4(0, v10);
  v13 = sub_1BB873F6C();
  v14 = (_QWORD *)v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v14;
  }
  v16 = (uint64_t)v12 + *(int *)(v8 + 48);
  v31[1] = a1;
  v32 = v16;
  v17 = v13 + 64;
  v18 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  v19 = *(_QWORD *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_1BA8F6A84(v18, (uint64_t)v12, v33, a3);
    v20 = *v12;
    v21 = v12[1];
    result = sub_1BA6E35A8(*v12, v21);
    if ((v23 & 1) != 0)
      break;
    v24 = result;
    *(_QWORD *)(v17 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v25 = (uint64_t *)(v14[6] + 16 * result);
    *v25 = v20;
    v25[1] = v21;
    v26 = v14[7];
    v27 = ((uint64_t (*)(_QWORD))a3)(0);
    result = sub_1BA5193C4(v32, v26 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v24, (uint64_t (*)(_QWORD))a3);
    v28 = v14[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_11;
    v14[2] = v30;
    v18 += v19;
    if (!--v15)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F3CD4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F67E4(0, (unint64_t *)&unk_1EF2AA058, (uint64_t (*)(uint64_t))type metadata accessor for OptionKey, &qword_1EF2A8A30, (uint64_t)&unk_1BB87C6C0);
  v2 = sub_1BB873F6C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BA6AA01C(v6, (uint64_t)&v13, (uint64_t)&unk_1EF2AA068, (uint64_t)type metadata accessor for OptionKey, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_1BA76EB4C);
    v7 = v13;
    result = sub_1BA76E68C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1BA76EAE0(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F3E3C(uint64_t a1)
{
  return sub_1BA8F3B3C(a1, (unint64_t *)&unk_1ED3AAD18, (void (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed, (void (*)(_QWORD, double))sub_1BA8F5AB8);
}

unint64_t sub_1BA8F3E58(uint64_t a1)
{
  return sub_1BA8F3E74(a1, &qword_1EF2AA078, (uint64_t)&qword_1ED3CF9B0, (uint64_t)&protocolRef_FCSportsEventProviding);
}

unint64_t sub_1BA8F3E74(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F62B0(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA4EFE00);
  v5 = (_QWORD *)sub_1BB873F6C();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v8 = *(v7 - 2);
    v9 = *(v7 - 1);
    v10 = *v7;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_1BA6E35A8(v8, v9);
    if ((v12 & 1) != 0)
      break;
    *(_QWORD *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v13 = (uint64_t *)(v5[6] + 16 * result);
    *v13 = v8;
    v13[1] = v9;
    *(_QWORD *)(v5[7] + 8 * result) = v10;
    v14 = v5[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F3F90(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F63DC();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F409C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F624C();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1BA6E35A8(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BA8F41B4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BA8F604C();
  v2 = (_QWORD *)sub_1BB873F6C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_1BB4AB8CC((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t FormatMicaNodeRenderer.render<A>(context:layoutAttributes:view:micaData:token:traitCollection:)(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char **v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  id v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;

  v9 = v8;
  v53 = a6;
  v49 = a5;
  v50 = a1;
  v15 = type metadata accessor for FormatMicaData();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v15);
  v48 = (uint64_t)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB8736F0();
  objc_msgSend(a3, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a2 + 128));
  v18 = *(_QWORD *)(a2 + 96);
  if (v18)
    v19 = *(_BYTE *)(v18 + 177) & 1;
  else
    v19 = 0;
  v51 = a7;
  v52 = a8;
  objc_msgSend(a3, sel_setAccessibilityIgnoresInvertColors_, v19);
  v20 = *(_QWORD *)(a2 + 144);
  v21 = *(unsigned __int8 *)(a2 + 152);
  objc_msgSend(a3, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a3, sel_setAccessibilityElementsHidden_, 0);
  if (v21 > 0xFD)
    goto LABEL_10;
  if ((v21 & 0x80) != 0)
  {
    if (!(v20 | v21 ^ 0x80))
      goto LABEL_10;
    v22 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    v22 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(a3, *v22, 1);
LABEL_10:
  objc_msgSend(a3, sel_setClipsToBounds_, 1);
  v47 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v9 + 16), *(_QWORD *)(v9 + 40));
  v54 = *a4;
  v23 = swift_allocObject();
  swift_weakInit();
  v24 = v48;
  sub_1BA4C2DD8((uint64_t)a4, v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaData);
  v25 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v26 = (v17 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v23;
  sub_1BA5193C4(v24, v27 + v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaData);
  *(_QWORD *)(v27 + v26) = a2;
  v28 = v49;
  *(_QWORD *)(v27 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8)) = v49;
  swift_retain();
  swift_retain();
  swift_retain();
  v29 = v28;
  sub_1BB185704(v50, (uint64_t)a3, &v54, (uint64_t)v29, v53, (uint64_t)sub_1BA8F4C9C, v27, v51, v52);
  swift_release();
  swift_release();
  swift_release();
  if (v18)
  {
    v30 = *(_QWORD *)(v18 + 72);
    v31 = *(_QWORD *)(v18 + 80);
    v32 = *(_BYTE *)(v18 + 88);
    sub_1BA6E6C54(v30, v31, v32);
  }
  else
  {
    v30 = 0;
    v31 = 0;
    v32 = -2;
  }
  v33 = objc_msgSend(a3, sel_layer);
  objc_msgSend(a3, sel_bounds);
  v54 = v30;
  v55 = v31;
  v56 = v32;
  sub_1BA6787C4(v33, (uint64_t)&v54, v34, v35, v36, v37);

  sub_1BA6E6CC4(v30, v31, v32);
  v38 = *(_QWORD *)(a2 + 136);
  if (v18)
  {
    v40 = *(_QWORD *)(v18 + 64);
    v39 = *(_QWORD *)(v18 + 72);
    v41 = *(_QWORD *)(v18 + 80);
    v42 = *(_BYTE *)(v18 + 88);
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v39, v41, v42);
  }
  else
  {
    v39 = 0;
    v41 = 0;
    v40 = 0;
    v42 = -2;
  }
  v43 = objc_msgSend(a3, sel_layer);
  v54 = v39;
  v55 = v41;
  v56 = v42;
  sub_1BA67832C(v38, v43, (uint64_t)v53, v40, &v54);

  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v39, v41, v42);
  if (v18)
  {
    v44 = *(_QWORD *)(v18 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    v44 = 0;
  }
  v54 = v44;
  sub_1BA67604C(MEMORY[0x1E0DEE9D8]);
  sub_1BA6786EC(v38, a3, &v54, v45);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8F46B4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA8F46D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v7 = type metadata accessor for FormatMicaData();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v29 = a3;
    v30 = result;
    v11 = a3 + *(int *)(v7 + 24);
    v12 = *(_DWORD *)v11;
    if (*(unsigned __int8 *)(v11 + 4) > 1u)
    {
      if (v12)
      {
        if (v12 != 1)
        {
          sub_1BB87153C();
          return swift_release();
        }
        v18 = *(_QWORD *)(v30 + 56);
        v20 = *(_QWORD *)(a4 + 16);
        v19 = *(_QWORD *)(a4 + 24);
        swift_beginAccess();
        v21 = *(_QWORD *)(v18 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        v22 = sub_1BA761FE4(v20, v19, v21);
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0)
        {
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC(&v31, v20, v19);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_1BB87153C();
        }
      }
      else
      {
        v23 = *(_QWORD *)(v30 + 56);
        v25 = *(_QWORD *)(a4 + 16);
        v24 = *(_QWORD *)(a4 + 24);
        swift_beginAccess();
        v26 = *(_QWORD *)(v23 + 16);
        swift_retain();
        swift_bridgeObjectRetain();
        v27 = sub_1BA761FE4(v25, v24, v26);
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
        {
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC(&v31, v25, v24);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_1BB87153C();
        }
      }
      swift_release();
    }
    else
    {
      v13 = swift_allocObject();
      v28 = a1;
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      v14 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1BA4C2DD8(v29, (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaData);
      v16 = (*(unsigned __int8 *)(v8 + 80) + 52) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v15;
      *(_QWORD *)(v17 + 24) = v14;
      *(_QWORD *)(v17 + 32) = v13;
      *(_QWORD *)(v17 + 40) = a4;
      *(_DWORD *)(v17 + 48) = v12;
      sub_1BA5193C4((uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaData);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1BB871518();
      swift_release();
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BA8F4BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for FormatMicaData();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_release();
  v5 = v0 + v3 + *(int *)(v1 + 20);
  v6 = sub_1BB86FBD4();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BA8F4C9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FormatMicaData() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BA8F46D8(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_1BA8F4CFC(uint64_t a1, uint64_t a2, double a3, float a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v10 = a1 + 16;
  swift_beginAccess();
  v11 = (void *)MEMORY[0x1BCCE5D40](v10);

  if (v11)
  {
    swift_beginAccess();
    v12 = MEMORY[0x1BCCE5D40](a2 + 16);
    if (v12)
    {
      v13 = (void *)v12;
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v16 = *(_QWORD *)(a6 + 16);
        v15 = *(_QWORD *)(a6 + 24);
        v17 = (uint64_t *)(*(_QWORD *)(Strong + 56) + 24);
        swift_beginAccess();
        v18 = *v17;
        swift_bridgeObjectRetain();
        v19 = sub_1BA761FE4(v16, v15, v18);
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0 && a4 <= a3)
        {
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC(&v20, v16, v15);
          swift_endAccess();
          swift_bridgeObjectRelease();
          type metadata accessor for FormatMicaData();
          sub_1BB87153C();
          sub_1BB871518();
        }

        swift_release();
      }
      else
      {

      }
    }
  }
}

void sub_1BA8F4EA0(uint64_t a1, uint64_t a2, double a3, float a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v10 = a1 + 16;
  swift_beginAccess();
  v11 = (void *)MEMORY[0x1BCCE5D40](v10);

  if (v11)
  {
    swift_beginAccess();
    v12 = MEMORY[0x1BCCE5D40](a2 + 16);
    if (v12)
    {
      v13 = (void *)v12;
      swift_beginAccess();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v16 = *(_QWORD *)(a6 + 16);
        v15 = *(_QWORD *)(a6 + 24);
        v17 = (uint64_t *)(*(_QWORD *)(Strong + 56) + 32);
        swift_beginAccess();
        v18 = *v17;
        swift_bridgeObjectRetain();
        v19 = sub_1BA761FE4(v16, v15, v18);
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0 && a4 <= a3)
        {
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC(&v20, v16, v15);
          swift_endAccess();
          swift_bridgeObjectRelease();
          type metadata accessor for FormatMicaData();
          sub_1BB87153C();
          sub_1BB871518();
        }

        swift_release();
      }
      else
      {

      }
    }
  }
}

uint64_t FormatMicaNodeRenderer.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t FormatMicaNodeRenderer.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA8F5094(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  return FormatMicaNodeRenderer.render<A>(context:layoutAttributes:view:micaData:token:traitCollection:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

unint64_t sub_1BA8F50B4(_QWORD *a1)
{
  return sub_1BA8F51D8(a1, (void (*)(_QWORD))sub_1BA8F6378, (uint64_t (*)(uint64_t))sub_1BA4A42A0);
}

unint64_t sub_1BA8F50C8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  sub_1BA8F5D8C();
  v3 = (_QWORD *)sub_1BB873F6C();
  LOBYTE(v4) = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1BA7C25B0(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v3[6] + result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((unsigned __int8 *)v8 - 8);
    v13 = *v8;
    swift_bridgeObjectRetain();
    result = sub_1BA7C25B0(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BA8F51C4(_QWORD *a1)
{
  return sub_1BA8F51D8(a1, (void (*)(_QWORD))sub_1BA8F5794, (uint64_t (*)(uint64_t))sub_1BB4CF560);
}

unint64_t sub_1BA8F51D8(_QWORD *a1, void (*a2)(_QWORD), uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char v18;

  v3 = a1[2];
  if (!v3)
    return MEMORY[0x1E0DEE9E0];
  a2(0);
  v6 = (_QWORD *)sub_1BB873F6C();
  v8 = a1[4];
  v7 = a1[5];
  result = a3(v8);
  if ((v10 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v6;
  }
  v11 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = 8 * result;
    *(_QWORD *)(v6[6] + v12) = v8;
    *(_QWORD *)(v6[7] + v12) = v7;
    v13 = v6[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      break;
    v6[2] = v15;
    if (!--v3)
      goto LABEL_8;
    v16 = v11 + 2;
    v8 = *(v11 - 1);
    v17 = *v11;
    swift_bridgeObjectRetain();
    result = a3(v8);
    v11 = v16;
    v7 = v17;
    if ((v18 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BA8F52DC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1BA8F5730();
    v3 = (_QWORD *)sub_1BB873F6C();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1BB4CF560(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1BA8F53AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1BA8F56CC();
    v3 = (_QWORD *)sub_1BB873F6C();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_1BB4CF560(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1BA8F5480(double *a1)
{
  uint64_t v1;
  _QWORD *v3;
  double v4;
  void *v5;
  unint64_t result;
  char v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  double *v13;
  void *v14;
  id v15;
  char v16;
  id v17;

  v1 = *((_QWORD *)a1 + 2);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  sub_1BA81BE84();
  v3 = (_QWORD *)sub_1BB873F6C();
  v4 = a1[4];
  v5 = (void *)*((_QWORD *)a1 + 5);
  result = sub_1BA67BEE0(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = v5;
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(double *)(v3[6] + v9) = v4;
    *(_QWORD *)(v3[7] + v9) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v4 = *(v8 - 1);
    v14 = *(void **)v8;
    v15 = v5;
    result = sub_1BA67BEE0(v4);
    v8 = v13;
    v5 = v14;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of FormatMicaNodeRendererType.render<A>(context:layoutAttributes:view:micaData:token:traitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 8))();
}

uint64_t method lookup function for FormatMicaNodeRenderer()
{
  return swift_lookUpClassMethod();
}

void sub_1BA8F559C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3D2468)
  {
    type metadata accessor for WebEmbedDatastoreCacheKey();
    sub_1BA4B07F0(255, &qword_1ED3CF860, (uint64_t (*)(uint64_t))type metadata accessor for WeakWebEmbedDataSourceManagerObserver, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3D2468);
  }
}

void sub_1BA8F5620()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB2B0)
  {
    type metadata accessor for WebEmbedDatastoreCacheKey();
    sub_1BA4B07F0(255, &qword_1ED3CF860, (uint64_t (*)(uint64_t))type metadata accessor for WeakWebEmbedDataSourceManagerObserver, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA4A2870(&qword_1ED3CB660, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDatastoreCacheKey, (uint64_t)&unk_1BB915F8C);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB2B0);
  }
}

void sub_1BA8F56CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4F60)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4F60);
  }
}

void sub_1BA8F5730()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9FC0)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9FC0);
  }
}

void sub_1BA8F5794()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C4F70)
  {
    sub_1BA6BCC84();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C4F70);
  }
}

void sub_1BA8F57F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39EA80)
  {
    sub_1BB86C8B0();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39EA80);
  }
}

void sub_1BA8F585C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB340)
  {
    sub_1BA8F58C0();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB340);
  }
}

void sub_1BA8F58C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AAC90)
  {
    sub_1BA78647C();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AAC90);
  }
}

void sub_1BA8F5924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB350)
  {
    sub_1BA78647C();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB350);
  }
}

void sub_1BA8F5988()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9FE0)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9FE0);
  }
}

void sub_1BA8F59F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2A9FF0)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2A9FF0);
  }
}

void sub_1BA8F5A54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA000)
  {
    type metadata accessor for DebugFormatCompilingPackage();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA000);
  }
}

void sub_1BA8F5AB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB330)
  {
    type metadata accessor for SportsEventStatusResponseEmbed();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB330);
  }
}

void sub_1BA8F5B1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39ED00)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39ED00);
  }
}

void sub_1BA8F5B98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA010)
  {
    type metadata accessor for CGSize(255);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA010);
  }
}

void sub_1BA8F5BFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF7E0)
  {
    sub_1BB86E710();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF7E0);
  }
}

void sub_1BA8F5C60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9B10)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9B10);
  }
}

void sub_1BA8F5CC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA020)
  {
    type metadata accessor for FormatCompilerProperty(255);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA020);
  }
}

void sub_1BA8F5D28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A1068)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A1068);
  }
}

void sub_1BA8F5D8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA030)
  {
    sub_1BA4B07F0(255, &qword_1EF2AA038, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA8F5E0C();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA030);
  }
}

unint64_t sub_1BA8F5E0C()
{
  unint64_t result;

  result = qword_1EF2AA040;
  if (!qword_1EF2AA040)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F0A2C, &type metadata for DebugFormatUploadDiffVersionsViewController.Section);
    atomic_store(result, (unint64_t *)&qword_1EF2AA040);
  }
  return result;
}

void sub_1BA8F5E50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9BB0)
  {
    sub_1BB873E58();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9BB0);
  }
}

void sub_1BA8F5EB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C04F8)
  {
    sub_1BA81CE70();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C04F8);
  }
}

void sub_1BA8F5F1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9A48)
  {
    type metadata accessor for FormatLayoutView();
    sub_1BA8262E8();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9A48);
  }
}

void sub_1BA8F5F84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9AF0)
  {
    type metadata accessor for FormatLayoutView();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9AF0);
  }
}

void sub_1BA8F5FE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE548)
  {
    sub_1BA573E74();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE548);
  }
}

void sub_1BA8F604C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A0960)
  {
    sub_1BA49A224(255, &qword_1ED39ECF0);
    sub_1BA573E74();
    sub_1BA8F60D4();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A0960);
  }
}

unint64_t sub_1BA8F60D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39ED30;
  if (!qword_1ED39ED30)
  {
    v1 = sub_1BA49A224(255, &qword_1ED39ECF0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39ED30);
  }
  return result;
}

void sub_1BA8F612C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA7BCBF0(255, a3, a4, a5);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BA8F6194(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA7BCBF0(255, a3, a4, a5);
    v6 = sub_1BB873F78();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BA8F61FC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v7;

  sub_1BA7BCBF0(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BA8F624C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB2E0)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB2E0);
  }
}

void sub_1BA8F62B0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1BB873F78();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BA8F6314()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3060)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3060);
  }
}

void sub_1BA8F6378()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39DB30)
  {
    sub_1BA8CD0D8();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39DB30);
  }
}

void sub_1BA8F63DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39DB18)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39DB18);
  }
}

void sub_1BA8F6440()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA080)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1EF2AA088, (uint64_t (*)(uint64_t))sub_1BA8F64BC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA080);
  }
}

void sub_1BA8F64BC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED39D0A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentResource.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BA8F64D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA098)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1EF2AA0A0, (uint64_t (*)(uint64_t))sub_1BA8CB304, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA098);
  }
}

void sub_1BA8F6554()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA0B0)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3D2EA0, (uint64_t (*)(uint64_t))sub_1BA573E74, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA0B0);
  }
}

void sub_1BA8F65D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C5220)
  {
    sub_1BA709CA4(255);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C5220);
  }
}

void sub_1BA8F6634()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA0C0)
  {
    type metadata accessor for FeedClusteringOptions(255);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA0C0);
  }
}

void sub_1BA8F6698()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA0C8)
  {
    sub_1BA81D86C(255, (unint64_t *)&qword_1ED3A2FB0, &qword_1ED3A2FD0, 0x1E0D58E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA0C8);
  }
}

void sub_1BA8F671C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA0E0)
  {
    sub_1BB86C67C();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA0E0);
  }
}

void sub_1BA8F6780()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA0F0)
  {
    type metadata accessor for FormatSlotDefinition();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA0F0);
  }
}

void sub_1BA8F67E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BA4A2870(a4, a3, a5);
    v9 = sub_1BB873F78();
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BA8F6870(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v8;

  sub_1BA8F612C(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

void sub_1BA8F68C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9A80)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9A80);
  }
}

void sub_1BA8F6924(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BB873F78();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BA8F6984()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BA8F69AC(double a1)
{
  return sub_1BA8F69C8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, double, float))sub_1BA8F4EA0, a1);
}

uint64_t sub_1BA8F69BC(double a1)
{
  return sub_1BA8F69C8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, double, float))sub_1BA8F4CFC, a1);
}

uint64_t sub_1BA8F69C8(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t, double, float), double a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatMicaData() - 8) + 80);
  return a1(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), v2 + ((v4 + 52) & ~v4), a2, *(float *)(v2 + 48));
}

void sub_1BA8F6A20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE538)
  {
    type metadata accessor for PuzzleStatistic();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE538);
  }
}

uint64_t sub_1BA8F6A84(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BA7AD210(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BA8F6AD0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE540)
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE540);
  }
}

void sub_1BA8F6B34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA108)
  {
    type metadata accessor for FormatPuzzleType(255);
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA108);
  }
}

void sub_1BA8F6B98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A1700)
  {
    type metadata accessor for FormatPuzzle();
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A1700);
  }
}

void sub_1BA8F6BFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB300[0])
  {
    v0 = sub_1BB873F78();
    if (!v1)
      atomic_store(v0, qword_1ED3AB300);
  }
}

void sub_1BA8F6C64()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t aBlock;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  if (!objc_msgSend(v2, sel_areAnimationsEnabled))
  {
    v3 = v0 + 24;
    v4 = (void *)MEMORY[0x1BCCE5D40](v0 + 24);
    if (v4)
    {
      v5 = v4;
      v6 = objc_msgSend(v4, sel_view);

      if (!v6)
      {
        __break(1u);
        goto LABEL_13;
      }
      objc_msgSend(v6, sel_setNeedsLayout);

    }
    v7 = (void *)MEMORY[0x1BCCE5D40](v3);
    if (!v7)
      return;
    v8 = v7;
    v12 = objc_msgSend(v7, sel_view);

    if (v12)
    {
      objc_msgSend(v12, sel_layoutIfNeeded);

      return;
    }
LABEL_13:
    __break(1u);
    return;
  }
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if ((aBlock & 1) != 0)
  {
    *(_BYTE *)(v0 + 32) = 1;
  }
  else
  {
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    v17 = sub_1BA8F7024;
    v18 = v0;
    v9 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v14 = 1107296256;
    v15 = sub_1BA4F1DD8;
    v16 = &block_descriptor_2;
    v10 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v17 = sub_1BA8F702C;
    v18 = v1;
    aBlock = v9;
    v14 = 1107296256;
    v15 = sub_1BB2D2738;
    v16 = &block_descriptor_3;
    v11 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v2, sel_animateWithDuration_animations_completion_, v10, v11, 0.2);
    _Block_release(v11);
    _Block_release(v10);
  }
}

void sub_1BA8F6EA0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v1 = a1 + 24;
  v2 = (void *)MEMORY[0x1BCCE5D40](a1 + 24);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_view);

    if (!v4)
    {
      __break(1u);
LABEL_9:
      __break(1u);
      return;
    }
    objc_msgSend(v4, sel_setNeedsLayout);

  }
  v5 = (void *)MEMORY[0x1BCCE5D40](v1);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_view);

    if (v7)
    {
      objc_msgSend(v7, sel_layoutIfNeeded);

      return;
    }
    goto LABEL_9;
  }
}

uint64_t sub_1BA8F6F70(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  swift_retain();
  sub_1BB86E4A0();
  result = swift_release();
  if (*(_BYTE *)(a2 + 32) == 1)
  {
    *(_BYTE *)(a2 + 32) = 0;
    return sub_1BA8F6C64(result);
  }
  return result;
}

uint64_t sub_1BA8F6FD8()
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatConsoleAnimator()
{
  return objc_opt_self();
}

void sub_1BA8F7024()
{
  uint64_t v0;

  sub_1BA8F6EA0(v0);
}

uint64_t sub_1BA8F702C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F6F70(a1, v1);
}

ValueMetadata *type metadata accessor for A12_V1()
{
  return &type metadata for A12_V1;
}

uint64_t sub_1BA8F704C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AA2F8, (uint64_t (*)(void))sub_1BA8FA5BC, (uint64_t)&type metadata for A12_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA8FA5BC();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BA8F7200()
{
  sub_1BA8FA5BC();
  return sub_1BB874710();
}

uint64_t sub_1BA8F7228()
{
  sub_1BA8FA5BC();
  return sub_1BB87471C();
}

double sub_1BA8F7250@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BA8FA3A8(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BA8F7294(_QWORD *a1)
{
  return sub_1BA8F704C(a1);
}

uint64_t sub_1BA8F72A8()
{
  sub_1BA8FA04C();
  return sub_1BB86D96C();
}

uint64_t sub_1BA8F7310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  __int128 v64;
  unsigned __int8 v65;
  ValueMetadata *v66;
  unint64_t v67;
  uint64_t v68;

  v53 = a2;
  v46 = a3;
  v47 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  MEMORY[0x1E0C80A78](v9);
  v56 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v45 - v12;
  v52 = type metadata accessor for GroupLayoutBindingContext();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v50 = (uint64_t)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v57 = a1;
  sub_1BA4C2DD8(a1, v50, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v49 = sub_1BB86C8C8();
  v48 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v47);
  v66 = &type metadata for A12_V1;
  v20 = sub_1BA8EE408();
  v67 = v20;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v58 = sub_1BB874734();
  v59 = v22;
  v62 = 95;
  v63 = 0xE100000000000000;
  v60 = 45;
  v61 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v48;
  *v26 = v49;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v64, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v54 + 56))(v29, 0, 1, v55);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  sub_1BA7C2538(v16, v17);
  v66 = &type metadata for A12_V1;
  v67 = v20;
  v30 = v56;
  LOBYTE(v64) = v15;
  *((_QWORD *)&v64 + 1) = v16;
  v65 = v17;
  sub_1BA4C2DD8(v53, v56, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v31 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v31 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v31 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v68;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E724E3E0, 0, 0, v31, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
  }
  else
  {
    v41 = v39;
    swift_release();
    v42 = type metadata accessor for A12_V1.Bound();
    v43 = v46;
    v46[3] = v42;
    v43[4] = sub_1BA4A2870(qword_1EF2AA1D0, (uint64_t (*)(uint64_t))type metadata accessor for A12_V1.Bound, (uint64_t)&unk_1BB8820C8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v64, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v30, (uint64_t)boxed_opaque_existential_0 + *(int *)(v42 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v42 + 28)) = v41;
  }
  return result;
}

double sub_1BA8F7828@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  double result;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _QWORD v38[6];
  char v39[105];
  __int128 v40[9];
  __int128 v41[2];
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v36 = a1;
  v35 = sub_1BB86DA38();
  *(_QWORD *)&v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v5 = type metadata accessor for A12_V1.Bound();
  v6 = v1 + *(int *)(v5 + 24);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = *(int *)(v7 + 40);
  v9 = v6;
  v33[1] = v6;
  v10 = *(_QWORD *)(v6 + v8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BA4C010C(v11 + 16, (uint64_t)&v42);
  sub_1BA4C010C(v11 + 56, (uint64_t)v41);
  v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v42, v14 + 16);
  sub_1BA4CECCC(v41, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v40[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v40, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v10 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v41);
  sub_1BA4C010C(v15 + 56, (uint64_t)v40);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v41, v17 + 16);
  sub_1BA4CECCC(v40, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v39[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v39, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  v18 = v33[0];
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v19 = sub_1BA6B5B08((uint64_t)&v42, *(_QWORD *)(*(_QWORD *)(v18 + *(int *)(v5 + 28)) + 16) - 1);
  *(_QWORD *)&v42 = inited;
  sub_1BA6B5BE8(v19);
  v20 = v42;
  v38[2] = v18;
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1BACB8FF0(v21, v20, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = *MEMORY[0x1E0DB5D88];
  v24 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v3, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v3, *MEMORY[0x1E0DB6200], v35);
  v37 = v22;
  sub_1BA8FA0F0(0, &qword_1EF2AA278, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v35 = sub_1BB86DB34();
  v25 = sub_1BB86DB40();
  v34 = v42;
  v26 = v43;
  v27 = v44;
  *(_QWORD *)&v42 = v22;
  *(_QWORD *)&v41[0] = v45;
  MEMORY[0x1E0C80A78](v25);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v28 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v42 = v28;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v29 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v36;
  *v36 = 0;
  result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((_QWORD *)v30 + 3) = v26;
  *((_QWORD *)v30 + 4) = v27;
  v32 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1BA8F7D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2AA290, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 12;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BA8FA0F0(0, &qword_1EF2AA298, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA8FA0B0(&qword_1EF2AA2A0, &qword_1EF2AA298, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BA8F7E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v13)(uint64_t, _QWORD *);
  void (*v14)(uint64_t *, uint64_t);
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;

  sub_1BA4CDF6C(0, &qword_1EF2AA290, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v18 = a1;
  v9 = sub_1BB86D438();
  v10 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x1E0DB5A38], v9);
  *v8 = v10;
  v12 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104);
  v12(v8, *MEMORY[0x1E0DB6318], v5);
  v13 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA8FA0F0(0, &qword_1EF2AA2A8, MEMORY[0x1E0DB5A10]);
  sub_1BA8FA0B0(&qword_1EF2AA2B0, &qword_1EF2AA2A8, v13, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v14 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v14(v8, v5);
  v18 = a1;
  v12(v8, *MEMORY[0x1E0DB63C0], v5);
  v17 = a2;
  sub_1BB86D498();
  return ((uint64_t (*)(uint64_t *, uint64_t))v14)(v8, v5);
}

uint64_t sub_1BA8F8024(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, _QWORD *);
  void (*v22)(uint64_t *, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v26 = a2;
  v28 = a1;
  sub_1BA4CDF6C(0, &qword_1EF2AA290, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v25 - v6);
  v31 = a1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 6;
  *v7 = v8;
  v9 = *MEMORY[0x1E0DB63F8];
  v27 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 104);
  v27(v7, v9, v4);
  sub_1BA8FA174();
  sub_1BA4CDF6C(0, &qword_1EF2AA2C0, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  v15 = v14 + v13;
  sub_1BA7FDE2C();
  v17 = (_QWORD *)(v15 + *(int *)(v16 + 48));
  v18 = *MEMORY[0x1E0DB6000];
  v19 = sub_1BB86D8B8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v15, v18, v19);
  *v17 = 0x6C6F437468676972;
  v17[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E0DB5BF8], v11);
  v20 = v26;
  v30 = v26;
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA8FA0F0(0, &qword_1EF2AA2A8, MEMORY[0x1E0DB5A10]);
  sub_1BA8FA0B0(&qword_1EF2AA2B0, &qword_1EF2AA2A8, v21, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  v22 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v22(v7, v4);
  v31 = v28;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = 6;
  *v7 = v23;
  v27(v7, v9, v4);
  v29 = v20;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v22)(v7, v4);
}

uint64_t sub_1BA8F8320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AA290, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 1;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA8FA0F0(0, &qword_1EF2AA2A8, MEMORY[0x1E0DB5A10]);
  sub_1BA8FA0B0(&qword_1EF2AA2B0, &qword_1EF2AA2A8, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BA8F8720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, _QWORD *);
  void (*v19)(uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD, uint64_t);
  uint64_t v24;
  _BYTE v26[12];
  unsigned int v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, double);
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v29 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AA290, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (uint64_t *)&v26[-v8];
  v38 = a1;
  v35 = *MEMORY[0x1E0DB6410];
  v34 = *(void (**)(_BYTE *, double))(v6 + 104);
  v34(&v26[-v8], v7);
  sub_1BA8FA174();
  v33 = v10;
  sub_1BA4CDF6C(0, &qword_1EF2AA2C0, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = *(unsigned __int8 *)(v13 + 80);
  v16 = (v15 + 32) & ~v15;
  v31 = v15 | 7;
  v32 = v16 + v14;
  v17 = swift_allocObject();
  v30 = xmmword_1BB87CE70;
  *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
  v27 = *MEMORY[0x1E0DB5C80];
  v28 = *(void (**)(uint64_t))(v13 + 104);
  v28(v17 + v16);
  v37 = a2;
  v18 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA8FA0F0(0, &qword_1EF2AA2A8, MEMORY[0x1E0DB5A10]);
  sub_1BA8FA0B0(&qword_1EF2AA2B0, &qword_1EF2AA2A8, v18, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  v19 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v19(v9, v5);
  v38 = a1;
  v20 = sub_1BB86D438();
  v21 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DB5A38], v20);
  *v9 = v21;
  v23 = (void (*)(uint64_t *, _QWORD, uint64_t))v34;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v34)(v9, *MEMORY[0x1E0DB6318], v5);
  sub_1BB86D4EC();
  v19(v9, v5);
  v38 = a1;
  v23(v9, v35, v5);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v30;
  ((void (*)(uint64_t, _QWORD, uint64_t))v28)(v24 + v16, v27, v12);
  v36 = v29;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v19)(v9, v5);
}

uint64_t sub_1BA8F8A24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AA290, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA8FA0F0(0, &qword_1EF2AA2A8, MEMORY[0x1E0DB5A10]);
  sub_1BA8FA0B0(&qword_1EF2AA2B0, &qword_1EF2AA2A8, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BA8F8E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AA290, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA8FA0F0(0, &qword_1EF2AA2A8, MEMORY[0x1E0DB5A10]);
  sub_1BA8FA0B0(&qword_1EF2AA2B0, &qword_1EF2AA2A8, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BA8F923C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v14)(uint64_t, _QWORD *);
  void (*v15)(uint64_t *, uint64_t);
  uint64_t v16;
  _QWORD v18[9];
  uint64_t v19;

  v18[0] = a3;
  v18[1] = a4;
  sub_1BA4CDF6C(0, &qword_1EF2AA290, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (_QWORD *)((char *)v18 - v9);
  v19 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 3;
  *v10 = v11;
  v12 = *MEMORY[0x1E0DB63F8];
  v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 104);
  v13(v10, v12, v7);
  v18[8] = a2;
  v14 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA8FA0F0(0, &qword_1EF2AA2A8, MEMORY[0x1E0DB5A10]);
  sub_1BA8FA0B0(&qword_1EF2AA2B0, &qword_1EF2AA2A8, v14, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v15 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v15(v10, v7);
  v19 = a1;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 3;
  *v10 = v16;
  v13(v10, v12, v7);
  v18[4] = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v15)(v10, v7);
}

uint64_t sub_1BA8F9420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AA290, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 4uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 3 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA8FA0F0(0, &qword_1EF2AA2A8, MEMORY[0x1E0DB5A10]);
  sub_1BA8FA0B0(&qword_1EF2AA2B0, &qword_1EF2AA2A8, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BA8F9830(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2AA290, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 5uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 4 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA8FA0F0(0, &qword_1EF2AA2A8, MEMORY[0x1E0DB5A10]);
  sub_1BA8FA0B0(&qword_1EF2AA2B0, &qword_1EF2AA2A8, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BA8F9C3C@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V1.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BA8F9D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA8F7310(a1, a2, a3);
}

uint64_t sub_1BA8F9D30()
{
  return sub_1BB690B90();
}

unint64_t sub_1BA8F9D40(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA8F9D6C();
  result = sub_1BA8F9DB0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA8F9D6C()
{
  unint64_t result;

  result = qword_1EF2AA1C0;
  if (!qword_1EF2AA1C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882014, &type metadata for A12_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2AA1C0);
  }
  return result;
}

unint64_t sub_1BA8F9DB0()
{
  unint64_t result;

  result = qword_1EF2AA1C8;
  if (!qword_1EF2AA1C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88203C, &type metadata for A12_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2AA1C8);
  }
  return result;
}

uint64_t type metadata accessor for A12_V1.Bound()
{
  uint64_t result;

  result = qword_1EF2AA230;
  if (!qword_1EF2AA230)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA8F9E30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA8F9E3C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BA8F9EB8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BA8F9EC4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BA8F9F38()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA8F9FC4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2AA270, (uint64_t (*)(uint64_t))type metadata accessor for A12_V1.Bound, (uint64_t)&unk_1BB8820A0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA8FA000(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F7D08(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BA8FA008()
{
  unint64_t result;

  result = qword_1EF2AA280;
  if (!qword_1EF2AA280)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8821F8, &type metadata for A12_V1.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2AA280);
  }
  return result;
}

unint64_t sub_1BA8FA04C()
{
  unint64_t result;

  result = qword_1EF2AA288;
  if (!qword_1EF2AA288)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8821C8, &type metadata for A12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA288);
  }
  return result;
}

uint64_t sub_1BA8FA090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BA8F9C3C(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BA8FA098()
{
  return swift_deallocObject();
}

uint64_t sub_1BA8FA0A8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F7E60(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA8FA0B0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA8FA0F0(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA8FA0F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V1.Layout;
    v8[1] = &type metadata for A12_V1.Layout.Attributes;
    v8[2] = sub_1BA8FA008();
    v8[3] = sub_1BA8FA04C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BA8FA16C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F8024(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BA8FA174()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA2B8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2AA2C0, (uint64_t (*)(void))sub_1BA8FA008, (uint64_t)&type metadata for A12_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA2B8);
  }
}

uint64_t sub_1BA8FA1E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F8320(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA8FA1F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F8720(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA8FA1F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F923C(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1BA8FA258, (uint64_t)sub_1BA8FA260);
}

uint64_t sub_1BA8FA220(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F923C(a1, *(_QWORD *)(v1 + 16), (uint64_t)sub_1BA8FA248, (uint64_t)sub_1BA8FA250);
}

uint64_t sub_1BA8FA248(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F9420(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA8FA250(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F9830(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA8FA258(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F8A24(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA8FA260(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA8F8E30(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V1.Layout.Attributes()
{
  return &type metadata for A12_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V1.Layout()
{
  return &type metadata for A12_V1.Layout;
}

unint64_t sub_1BA8FA28C()
{
  unint64_t result;

  result = qword_1EF2AA2C8;
  if (!qword_1EF2AA2C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882168, &type metadata for A12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA2C8);
  }
  return result;
}

unint64_t sub_1BA8FA2D4()
{
  unint64_t result;

  result = qword_1EF2AA2D0;
  if (!qword_1EF2AA2D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882140, &type metadata for A12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA2D0);
  }
  return result;
}

unint64_t sub_1BA8FA31C()
{
  unint64_t result;

  result = qword_1EF2AA2D8;
  if (!qword_1EF2AA2D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882118, &type metadata for A12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA2D8);
  }
  return result;
}

unint64_t sub_1BA8FA364()
{
  unint64_t result;

  result = qword_1EF2AA2E0;
  if (!qword_1EF2AA2E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882190, &type metadata for A12_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA2E0);
  }
  return result;
}

uint64_t sub_1BA8FA3A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AA2E8, (uint64_t (*)(void))sub_1BA8FA5BC, (uint64_t)&type metadata for A12_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA8FA5BC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BA8FA5BC()
{
  unint64_t result;

  result = qword_1EF2AA2F0;
  if (!qword_1EF2AA2F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8822EC, &type metadata for A12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA2F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V1.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA8FA64C + 4 * byte_1BB882005[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA8FA680 + 4 * asc_1BB882000[v4]))();
}

uint64_t sub_1BA8FA680(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8FA688(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8FA690);
  return result;
}

uint64_t sub_1BA8FA69C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8FA6A4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA8FA6A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8FA6B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BA8FA6D0()
{
  unint64_t result;

  result = qword_1EF2AA300;
  if (!qword_1EF2AA300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8822C4, &type metadata for A12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA300);
  }
  return result;
}

unint64_t sub_1BA8FA718()
{
  unint64_t result;

  result = qword_1EF2AA308;
  if (!qword_1EF2AA308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882234, &type metadata for A12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA308);
  }
  return result;
}

unint64_t sub_1BA8FA760()
{
  unint64_t result;

  result = qword_1EF2AA310;
  if (!qword_1EF2AA310)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB88225C, &type metadata for A12_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA310);
  }
  return result;
}

double EngagementBannerViewLayoutOptions.boundingSize.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double EngagementBannerViewLayoutOptions.screenScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double EngagementBannerViewLayoutOptions.layoutMargins.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double EngagementBannerViewLayoutOptions.padding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void EngagementBannerViewLayoutOptions.init(boundingSize:screenScale:layoutMargins:padding:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = a7;
  a1[6] = a8;
  a1[7] = a9;
}

ValueMetadata *type metadata accessor for EngagementBannerViewLayoutOptions()
{
  return &type metadata for EngagementBannerViewLayoutOptions;
}

ValueMetadata *type metadata accessor for EngagementBannerViewLayoutOptions.Embedded()
{
  return &type metadata for EngagementBannerViewLayoutOptions.Embedded;
}

BOOL static ConcernType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ConcernType.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t ConcernType.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BA8FA888()
{
  unint64_t result;

  result = qword_1EF2AA318;
  if (!qword_1EF2AA318)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ConcernType, &type metadata for ConcernType);
    atomic_store(result, (unint64_t *)&qword_1EF2AA318);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ConcernType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BA8FA918 + 4 * byte_1BB882381[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BA8FA94C + 4 * asc_1BB88237C[v4]))();
}

uint64_t sub_1BA8FA94C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8FA954(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA8FA95CLL);
  return result;
}

uint64_t sub_1BA8FA968(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA8FA970);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BA8FA974(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA8FA97C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConcernType()
{
  return &type metadata for ConcernType;
}

void sub_1BA8FA998(_BYTE *a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  v4 = &a1[qword_1ED3C2480];
  *v4 = 0;
  v4[1] = 0xE000000000000000;
  a1[qword_1ED3C6EF8] = 0;
  v5 = a3;

  sub_1BB873EAC();
  __break(1u);
}

id sub_1BA8FAA20(uint64_t a1, CGFloat a2, CGFloat a3)
{
  void *v3;
  id v6;
  objc_super v9;
  CGPoint v10;
  CGRect v11;
  CGRect v12;

  if (*((_BYTE *)v3 + qword_1ED3C6EF8) == 1)
  {
    objc_msgSend(v3, sel_bounds);
    v12 = CGRectInset(v11, -20.0, -20.0);
    v10.x = a2;
    v10.y = a3;
    if (CGRectContainsPoint(v12, v10))
      v6 = v3;
    else
      return 0;
  }
  else
  {
    v9.receiver = v3;
    v9.super_class = (Class)swift_getObjectType();
    return objc_msgSendSuper2(&v9, sel_hitTest_withEvent_, a1, a2, a3);
  }
  return v3;
}

id sub_1BA8FAADC(void *a1, CGFloat a2, CGFloat a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  id v11;

  v9 = a5;
  v10 = a1;
  v11 = sub_1BA8FAA20((uint64_t)a5, a2, a3);

  return v11;
}

uint64_t sub_1BA8FAB44()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8FAB58()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8FAB6C()
{
  return type metadata accessor for FormatImageView();
}

uint64_t sub_1BA8FAB74()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + qword_1ED3C6EF8);
}

uint64_t sub_1BA8FAB88()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + qword_1ED3C2480);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *LayeredMediaViewModelFactory.viewModel<A>(for:filters:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD v21[3];
  uint64_t v22;
  unint64_t v23;

  v3 = (_QWORD *)sub_1BB8726B8();
  v4 = *(v3 - 1);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  *v6 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, _QWORD *))(v4 + 104))(v6, *MEMORY[0x1E0DEF738], v3);
  v7 = sub_1BB8726D0();
  (*(void (**)(uint64_t *, _QWORD *))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    v14 = sub_1BB86FFA0();
    swift_retain();
    v15 = sub_1BA8FAEA0(v14);
    swift_bridgeObjectRelease();
    swift_release();
    v16 = sub_1BB86FF94();
    v18 = v17;
  }
  else
  {
    __break(1u);
    swift_once();
    v8 = (id)qword_1ED4763D0;
    v9 = sub_1BB8732F4();
    sub_1BA7AA598();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
    v22 = 0;
    v23 = 0xE000000000000000;
    v21[2] = v3;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    sub_1BB873E34();
    v11 = v22;
    v12 = v23;
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v10 + 32) = v11;
    *(_QWORD *)(v10 + 40) = v12;
    sub_1BB86EF44("Failed to create a layered media view model, error=%{public}@", 61, 2, &dword_1BA493000, v8, v9, v10);

    swift_bridgeObjectRelease();
    v16 = sub_1BB86FF94();
    v18 = v13;

    v15 = MEMORY[0x1E0DEE9D8];
  }
  type metadata accessor for LayeredMediaViewModel();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v16;
  v19[3] = v18;
  v19[4] = v15;
  v19[5] = a2;
  swift_bridgeObjectRetain();
  return v19;
}

uint64_t LayeredMediaViewModelFactory.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t LayeredMediaViewModelFactory.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA8FAEA0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  __int128 *v4;
  int64_t i;
  __int128 *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Class v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  id v17;
  id v18;
  Class v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _BYTE v37[7];
  _BYTE v38[7];
  _BYTE v39[126];
  _BYTE v40[128];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[2];
  uint64_t v48;
  id v49;
  __int128 v50;
  __int128 v51;
  _BYTE v52[64];
  _BYTE v53[25];
  _BYTE v54[144];
  __int128 v55[8];
  _BYTE v56[128];
  uint64_t v57;
  __int128 *v58;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v57 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A314(0, v1, 0);
    v4 = (__int128 *)(a1 + 32);
    v2 = v57;
    for (i = v1 - 1; ; --i)
    {
      sub_1BA8FB30C(v4, (uint64_t)v55);
      sub_1BA8FB30C(v55, (uint64_t)v56);
      if (sub_1BA8FB348((uint64_t)v56) == 1)
      {
        v6 = (__int128 *)sub_1BA8FB354((uint64_t)v56);
        v7 = objc_allocWithZone(MEMORY[0x1E0D977A0]);
        sub_1BA8FB30C(v55, (uint64_t)v39);
        v8 = sub_1BA8FB354((uint64_t)v39);
        sub_1BA8FB30C(v55, (uint64_t)v40);
        v9 = sub_1BA8FB354((uint64_t)v40);
        sub_1BA8FB364(v9);
        sub_1BA8FB364(v8);
        v10 = objc_msgSend(v7, sel_init);
        sub_1BA8FB4D0(0, &qword_1ED39C3A8, (unint64_t *)&qword_1ED39DA68);
        v12 = objc_allocWithZone(v11);
        v13 = v10;
        v14 = sub_1BB86F574();
        sub_1BA8FB3B4((uint64_t)v55);
        v45 = v6[4];
        v46 = v6[5];
        v47[0] = v6[6];
        *(_OWORD *)((char *)v47 + 9) = *(__int128 *)((char *)v6 + 105);
        v41 = *v6;
        v42 = v6[1];
        v43 = v6[2];
        v44 = v6[3];
        v48 = v14;
        v49 = v13;
        *(_OWORD *)&v52[32] = v45;
        *(_OWORD *)&v52[48] = v46;
        *(_OWORD *)v53 = v47[0];
        *(_OWORD *)&v53[9] = *(_OWORD *)((char *)v47 + 9);
        v50 = v41;
        v51 = v42;
        *(_OWORD *)v52 = v43;
        *(_OWORD *)&v52[16] = v44;
        sub_1BA8FB474((uint64_t)&v48);
      }
      else
      {
        v15 = sub_1BA8FB354((uint64_t)v56);
        v29 = *(_QWORD *)(v15 + 8);
        v30 = *(_QWORD *)v15;
        v16 = *(_BYTE *)(v15 + 16);
        v31 = *(_QWORD *)(v15 + 24);
        v58 = v4;
        v34 = *(_OWORD *)(v15 + 56);
        v35 = *(_OWORD *)(v15 + 40);
        v33 = *(_OWORD *)(v15 + 72);
        v32 = *(_QWORD *)(v15 + 88);
        v27 = *(_BYTE *)(v15 + 96);
        v28 = *(_BYTE *)(v15 + 32);
        v36 = *(_QWORD *)(v15 + 104);
        v26 = *(_BYTE *)(v15 + 112);
        v17 = objc_allocWithZone(MEMORY[0x1E0D97798]);
        sub_1BA8FB30C(v55, (uint64_t)v40);
        sub_1BA8FB354((uint64_t)v40);
        sub_1BA8FB30C(v55, (uint64_t)&v41);
        sub_1BA8FB354((uint64_t)&v41);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = objc_msgSend(v17, sel_init);
        sub_1BA8FB4D0(0, &qword_1ED39C3A0, &qword_1ED39DA58);
        v20 = objc_allocWithZone(v19);
        v21 = v18;
        v22 = sub_1BB86F574();
        sub_1BA8FB3B4((uint64_t)v55);
        v48 = v22;
        v49 = v21;
        *(_QWORD *)&v50 = v30;
        *((_QWORD *)&v50 + 1) = v29;
        LOBYTE(v51) = v16;
        *(_DWORD *)((char *)&v51 + 1) = *(_DWORD *)v39;
        DWORD1(v51) = *(_DWORD *)&v39[3];
        *((_QWORD *)&v51 + 1) = v31;
        v52[0] = v28;
        v4 = v58;
        *(_DWORD *)&v52[4] = *(_DWORD *)&v38[3];
        *(_DWORD *)&v52[1] = *(_DWORD *)v38;
        *(_OWORD *)&v52[8] = v35;
        *(_OWORD *)&v52[24] = v34;
        *(_OWORD *)&v52[40] = v33;
        *(_QWORD *)&v52[56] = v32;
        v53[0] = v27;
        *(_DWORD *)&v53[4] = *(_DWORD *)&v37[3];
        *(_DWORD *)&v53[1] = *(_DWORD *)v37;
        *(_QWORD *)&v53[8] = v36;
        v53[16] = v26;
        sub_1BA8FB524((uint64_t)&v48);
      }
      sub_1BA8FB494((uint64_t)&v48, (uint64_t)v54);
      v57 = v2;
      v24 = *(_QWORD *)(v2 + 16);
      v23 = *(_QWORD *)(v2 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1BAC7A314(v23 > 1, v24 + 1, 1);
        v2 = v57;
      }
      *(_QWORD *)(v2 + 16) = v24 + 1;
      sub_1BA8FB494((uint64_t)v54, v2 + 144 * v24 + 32);
      if (!i)
        break;
      v4 += 8;
    }
  }
  return v2;
}

uint64_t method lookup function for LayeredMediaViewModelFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA8FB30C(__int128 *a1, uint64_t a2)
{
  __swift_memcpy121_8(a2, a1);
  return a2;
}

uint64_t sub_1BA8FB348(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 120) >> 7;
}

uint64_t sub_1BA8FB354(uint64_t result)
{
  *(_BYTE *)(result + 120) &= ~0x80u;
  return result;
}

uint64_t sub_1BA8FB364(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA8FB3B4(uint64_t a1)
{
  sub_1BA8FB414(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
  return a1;
}

uint64_t sub_1BA8FB414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  swift_bridgeObjectRelease();
  if (a16 < 0)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA8FB474(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 136);
  *(_QWORD *)result &= 0xFFFFFFFFFFFFFF8uLL;
  *(_BYTE *)(result + 136) = v1 & 1 | 0x80;
  return result;
}

uint64_t sub_1BA8FB494(uint64_t a1, uint64_t a2)
{
  __swift_memcpy137_8(a2, a1);
  return a2;
}

void sub_1BA8FB4D0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA49A224(255, a3);
    v4 = sub_1BB86F598();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BA8FB524(uint64_t result)
{
  char v1;

  v1 = *(_BYTE *)(result + 136) & 1;
  *(_QWORD *)result &= 0xFFFFFFFFFFFFFF8uLL;
  *(_BYTE *)(result + 136) = v1;
  return result;
}

uint64_t FeedSlot.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedSlot.feedItemIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.feedItemIdentifierSelectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.feedItemIdentifierOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.feedItemIdentifierAuxiliaries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.feedOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.feedSelectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.init(identifier:feedItemIdentifiers:feedItemIdentifierSelectors:feedItemIdentifierOptions:feedItemIdentifierAuxiliaries:feedOptions:feedSelectors:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

double sub_1BA8FB5B0@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45[3];
  uint64_t v46;

  v42 = a4;
  v37 = a3;
  v8 = type metadata accessor for FeedItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v12 = a2[1];
  *(_OWORD *)v45 = *((_OWORD *)a2 + 1);
  v14 = a2[4];
  v40 = a2[5];
  v41 = v14;
  v15 = a2[6];
  v38 = a2[7];
  v39 = v15;
  v16 = *(_QWORD *)(a1 + 16);
  v43 = v12;
  v44 = v13;
  if (v16)
  {
    v36 = a5;
    v46 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v16, 0);
    v17 = *(unsigned __int8 *)(v9 + 80);
    v35 = a1;
    v18 = a1 + ((v17 + 32) & ~v17);
    v19 = *(_QWORD *)(v9 + 72);
    v20 = v46;
    do
    {
      sub_1BA6DB2D0(v18, (uint64_t)v11);
      FeedItem.identifier.getter();
      v22 = v21;
      v24 = v23;
      sub_1BA6DB314((uint64_t)v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v20 + 16) + 1, 1);
        v20 = v46;
      }
      v26 = *(_QWORD *)(v20 + 16);
      v25 = *(_QWORD *)(v20 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1BA7447E8(v25 > 1, v26 + 1, 1);
        v20 = v46;
      }
      *(_QWORD *)(v20 + 16) = v26 + 1;
      v27 = v20 + 16 * v26;
      *(_QWORD *)(v27 + 32) = v22;
      *(_QWORD *)(v27 + 40) = v24;
      v18 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    a5 = v36;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
  }
  v36 = sub_1BA6E43EC(v20);
  v28 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v28);
  sub_1BA6BCC84();
  v35 = sub_1BB872790();
  MEMORY[0x1E0C80A78](v35);
  sub_1BA584114();
  v34 = sub_1BB872790();
  MEMORY[0x1E0C80A78](v34);
  v29 = sub_1BB872790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v43;
  swift_bridgeObjectRelease();
  *(_QWORD *)a5 = v44;
  *(_QWORD *)(a5 + 8) = v30;
  v31 = v35;
  *(_QWORD *)(a5 + 16) = v36;
  *(_QWORD *)(a5 + 24) = v31;
  *(_QWORD *)(a5 + 32) = v34;
  *(_QWORD *)(a5 + 40) = v29;
  result = v45[0];
  *(_OWORD *)(a5 + 48) = *(_OWORD *)v45;
  return result;
}

uint64_t sub_1BA8FB938(uint64_t *a1, _QWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v11 = *a3;
  v10 = a3[1];
  v12 = *a4;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v13 + 32) = a5;
  *(_QWORD *)(v13 + 40) = a6;
  *(_QWORD *)(v13 + 48) = v11;
  *(_QWORD *)(v13 + 56) = v10;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BB872904();
  v16 = v15;
  swift_bridgeObjectRelease();
  *a1 = v14;
  a1[1] = v16;
  *a2 = v12;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8FBA3C(uint64_t *a1, _QWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v10 = *a3;
  v11 = a3[1];
  v13 = *a4;
  v12 = a4[1];
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v14 + 32) = a5;
  *(_QWORD *)(v14 + 40) = a6;
  *(_QWORD *)(v14 + 48) = v10;
  *(_QWORD *)(v14 + 56) = v11;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1BB872904();
  v17 = v16;
  swift_bridgeObjectRelease();
  *a1 = v15;
  a1[1] = v17;
  *a2 = v13;
  a2[1] = v12;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

_QWORD *assignWithCopy for FeedSlot(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedSlot(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedSlot()
{
  return &type metadata for FeedSlot;
}

uint64_t sub_1BA8FBCB8(uint64_t *a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;

  return sub_1BA8FB938(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1BA8FBCD0(uint64_t *a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;

  return sub_1BA8FBA3C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1BA8FBCE8(uint64_t *a1, _QWORD *a2, uint64_t *a3, uint64_t *a4)
{
  return sub_1BA8FBCB8(a1, a2, a3, a4);
}

uint64_t FormatSpaceNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSpaceNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSpaceNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatSpaceNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v3;
  return sub_1BA71CA6C(v3);
}

unint64_t FormatSpaceNode.size.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v1 + 32) = v2;
  return sub_1BA719718(v3);
}

uint64_t (*FormatSpaceNode.size.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSpaceNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8FBEC8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSpaceNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSpaceNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *FormatSpaceNode.__allocating_init(identifier:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v8;
  uint64_t v9;

  v8 = (_QWORD *)swift_allocObject();
  v9 = *a3;
  swift_beginAccess();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v9;
  swift_beginAccess();
  v8[5] = a4;
  return v8;
}

_QWORD *FormatSpaceNode.init(identifier:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;

  v8 = *a3;
  swift_beginAccess();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = v8;
  swift_beginAccess();
  v4[5] = a4;
  return v4;
}

uint64_t FormatSpaceNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSpaceNode.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BA8FC10C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA8FC1E4(&qword_1EF2AA338, (uint64_t)&protocol conformance descriptor for FormatSpaceNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA8FC140(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA8FC1E4(&qword_1ED3BD8B8, (uint64_t)&protocol conformance descriptor for FormatSpaceNode);
  a1[2] = sub_1BA8FC1E4(&qword_1ED39FA88, (uint64_t)&protocol conformance descriptor for FormatSpaceNode);
  result = sub_1BA8FC1E4(&qword_1EF2AA340, (uint64_t)&protocol conformance descriptor for FormatSpaceNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BA8FC1A4(_QWORD *a1, _QWORD *a2)
{
  return static FormatSpaceNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BA8FC1B0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA8FC1E4(&qword_1EF2AA348, (uint64_t)&protocol conformance descriptor for FormatSpaceNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA8FC1E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatSpaceNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA8FC220@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BA8FC26C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSpaceNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatSpaceNode.__allocating_init(identifier:size:adjustments:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t PuzzleEmbedAccessoryConfigMessageHandler.delegate.getter()
{
  return sub_1BA8FC368(&OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate);
}

uint64_t PuzzleEmbedAccessoryConfigMessageHandler.delegate.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BA8FC3BC(a1, a2, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate);
}

uint64_t (*PuzzleEmbedAccessoryConfigMessageHandler.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BA8FC358;
}

uint64_t PuzzleEmbedAccessoryConfigMessageHandler.accessoryConfigDataSource.getter()
{
  return sub_1BA8FC368(&OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource);
}

uint64_t sub_1BA8FC368(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *a1;
  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v2);
}

uint64_t PuzzleEmbedAccessoryConfigMessageHandler.accessoryConfigDataSource.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BA8FC3BC(a1, a2, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource);
}

uint64_t sub_1BA8FC3BC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v5;

  v5 = v3 + *a3;
  swift_beginAccess();
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*PuzzleEmbedAccessoryConfigMessageHandler.accessoryConfigDataSource.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BA8FC358;
}

id PuzzleEmbedAccessoryConfigMessageHandler.__allocating_init(puzzleComponentsViewProvider:scriptsManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  objc_super v10;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_lastReceivedValue] = MEMORY[0x1E0DEE9E0];
  v8 = &v7[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_puzzleComponentsViewProvider];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_scriptsManager] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id PuzzleEmbedAccessoryConfigMessageHandler.init(puzzleComponentsViewProvider:scriptsManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  char *v8;
  objc_super v10;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_lastReceivedValue] = MEMORY[0x1E0DEE9E0];
  v8 = &v3[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_puzzleComponentsViewProvider];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_scriptsManager] = a3;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id PuzzleEmbedAccessoryConfigMessageHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PuzzleEmbedAccessoryConfigMessageHandler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PuzzleEmbedAccessoryConfigMessageHandler.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BA8FC720(uint64_t a1, uint64_t a2)
{
  return sub_1BA8FC7B8(a1, a2, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate);
}

uint64_t sub_1BA8FC72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA8FC80C(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate);
}

uint64_t (*sub_1BA8FC738(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BA8FC358;
}

uint64_t sub_1BA8FC7AC(uint64_t a1, uint64_t a2)
{
  return sub_1BA8FC7B8(a1, a2, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource);
}

uint64_t sub_1BA8FC7B8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + *a3;
  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v4);
}

uint64_t sub_1BA8FC800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA8FC80C(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource);
}

uint64_t sub_1BA8FC80C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v7;

  v7 = v5 + *a5;
  swift_beginAccess();
  *(_QWORD *)(v7 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1BA8FC870(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BA8FC358;
}

void sub_1BA8FC8E4(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1BA8FC95C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BA8F5988();
    v2 = sub_1BB873F6C();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1BA76EAE0(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1BA76EAE0(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1BA76EAE0(v36, v37);
    sub_1BA76EAE0(v37, &v33);
    result = sub_1BB873C30();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1BA76EAE0(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1BA6EBD18();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1BA8FCD1C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BYTE *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(char *, _UNKNOWN **, _OWORD *, uint64_t, uint64_t);
  _OWORD v14[2];
  char v15;
  __int128 v16;
  __int128 v17;
  char v18;

  v2 = *(_OWORD *)(a1 + 16);
  v16 = *(_OWORD *)a1;
  v17 = v2;
  v18 = *(_BYTE *)(a1 + 32);
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (char *)v4;
    if (v18 == 1)
    {
      v6 = objc_allocWithZone((Class)type metadata accessor for PuzzleEmbedScript());
      sub_1BA8FDB04((uint64_t)&v16);
      v7 = sub_1BA8FD9AC(&v16, v6);
      sub_1BA8FDB38((uint64_t)&v16);
      v8 = *(void **)&v5[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_scriptsManager];
      swift_unknownObjectRetain();
      v9 = v7;
      objc_msgSend(v8, sel_executeScript_completion_, v9, 0);
      swift_unknownObjectRelease();

    }
    else
    {
      v10 = v4 + OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate;
      swift_beginAccess();
      if (MEMORY[0x1BCCE5D40](v10))
      {
        v11 = *(_QWORD *)(v10 + 8);
        ObjectType = swift_getObjectType();
        v14[0] = v16;
        v14[1] = v17;
        v15 = v18;
        v13 = *(void (**)(char *, _UNKNOWN **, _OWORD *, uint64_t, uint64_t))(v11 + 16);
        v5 = v5;
        v13(v5, &protocol witness table for PuzzleEmbedAccessoryConfigMessageHandler, v14, ObjectType, v11);
        swift_unknownObjectRelease();

      }
    }

  }
}

void _s8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandlerC10didReceive_14securityOriginySo9SWMessage_p_So0m8SecurityL0_ptF_0(void *a1)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t ObjectType;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  unsigned __int8 v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t *, _QWORD *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v2 = objc_msgSend(a1, sel_body);
  v3 = sub_1BB87276C();

  v4 = sub_1BB7E7464(v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    v5 = v63 + OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource;
    swift_beginAccess();
    if (MEMORY[0x1BCCE5D40](v5)
      && (v6 = *(_QWORD *)(v5 + 8),
          v7 = swift_getObjectType(),
          LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v7, v6),
          swift_unknownObjectRelease(),
          (v6 & 1) == 0))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = swift_bridgeObjectRetain();
      PuzzleAccessoryInputConfiguration.init(with:)(v8, (uint64_t)&v66);
      v55 = v66;
      v56 = v68;
      v57 = v69;
      v60 = v67;
      v61 = v70;
      v9 = v72;
      v62 = v71;
      v10 = v73;
      v54 = v74;
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v58 = v9;
      v59 = v10;
      v11 = sub_1BB86EFEC();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED476918);
      swift_bridgeObjectRetain_n();
      v12 = sub_1BB86EFC8();
      v13 = sub_1BB87330C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v66 = v15;
        *(_DWORD *)v14 = 136315138;
        swift_bridgeObjectRetain();
        v16 = sub_1BB872778();
        v18 = v17;
        swift_bridgeObjectRelease();
        v65[0] = sub_1BA5D2E14(v16, v18, &v66);
        sub_1BB873A8C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BA493000, v12, v13, "PuzzleEmbedAccessoryConfigMessageHandler received: %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v15, -1, -1);
        MEMORY[0x1BCCE5C38](v14, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      if (!MEMORY[0x1BCCE5D40](v5)
        || (v28 = *(_QWORD *)(v5 + 8),
            ObjectType = swift_getObjectType(),
            LOBYTE(v28) = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v28 + 8))(v63, &protocol witness table for PuzzleEmbedAccessoryConfigMessageHandler, ObjectType, v28), swift_unknownObjectRelease(), (v28 & 1) != 0))
      {
        sub_1BA8FC95C(v4);
        v30 = objc_allocWithZone(MEMORY[0x1E0C99D80]);
        v31 = (void *)sub_1BB872760();
        swift_bridgeObjectRelease();
        v32 = objc_msgSend(v30, sel_initWithDictionary_, v31);

        v33 = swift_bridgeObjectRetain();
        sub_1BA8FC95C(v33);
        swift_bridgeObjectRelease();
        v34 = (void *)sub_1BB872760();
        swift_bridgeObjectRelease();
        v35 = objc_msgSend(v32, sel_isEqualToDictionary_, v34);

        if ((v35 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1BA8FD8B0(v55, v60, v56, v57, v61, v62, v58, v59);
          v20 = sub_1BB86EFC8();
          v36 = sub_1BB87330C();
          if (!os_log_type_enabled(v20, v36))
          {
LABEL_19:

            return;
          }
          v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v37 = 0;
          _os_log_impl(&dword_1BA493000, v20, v36, "No changes detected for the received accessory config. Skipping...", v37, 2u);
          v27 = v37;
LABEL_18:
          MEMORY[0x1BCCE5C38](v27, -1, -1);
          goto LABEL_19;
        }
      }
      *(_QWORD *)(v63 + OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_lastReceivedValue) = v4;
      swift_bridgeObjectRelease();
      if (MEMORY[0x1BCCE5D40](v5))
      {
        v38 = *(_QWORD *)(v5 + 8);
        v39 = swift_getObjectType();
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v38 + 24))(&v66, v39, v38);
        swift_unknownObjectRelease();
        v40 = v66;
        v41 = (void *)v67;
      }
      else
      {
        v40 = 0;
        v41 = 0;
      }
      v42 = *(_QWORD *)(v63
                      + OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_puzzleComponentsViewProvider
                      + 8);
      v52 = (void *)v40;
      v53 = swift_getObjectType();
      v66 = v55;
      v67 = v60;
      v68 = v56;
      v69 = v57;
      v70 = v61;
      v71 = v62;
      v72 = v58;
      v73 = v59;
      v74 = v54;
      v65[0] = v40;
      v65[1] = v41;
      v51 = v41;
      v43 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v44 = *(uint64_t (**)(uint64_t *, _QWORD *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v42 + 32);
      swift_retain();
      v45 = (void *)v44(&v66, v65, sub_1BA8FD8A8, v43, v53, v42);
      v47 = v46;
      swift_release_n();
      sub_1BA8FD8B0(v55, v60, v56, v57, v61, v62, v58, v59);
      v48 = v63 + OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate;
      swift_beginAccess();
      if (MEMORY[0x1BCCE5D40](v48))
      {
        v49 = *(_QWORD *)(v48 + 8);
        v50 = swift_getObjectType();
        (*(void (**)(uint64_t, _UNKNOWN **, void *, uint64_t, uint64_t, uint64_t))(v49 + 8))(v63, &protocol witness table for PuzzleEmbedAccessoryConfigMessageHandler, v45, v47, v50, v49);
        swift_unknownObjectRelease();
      }

      sub_1BA8FD980(v52, v51);
    }
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v19 = sub_1BB86EFEC();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED476918);
    swift_unknownObjectRetain_n();
    v20 = sub_1BB86EFC8();
    v21 = sub_1BB8732F4();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      v66 = v64;
      *(_DWORD *)v22 = 136315138;
      v23 = objc_msgSend(a1, sel_body);
      sub_1BB87276C();

      v24 = sub_1BB872778();
      v26 = v25;
      swift_bridgeObjectRelease();
      v75 = sub_1BA5D2E14(v24, v26, &v66);
      sub_1BB873A8C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BA493000, v20, v21, "PuzzleEmbedAccessoryConfigMessageHandler received invalid message %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v64, -1, -1);
      v27 = v22;
      goto LABEL_18;
    }

    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_1BA8FD6F4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate, a2);
}

uint64_t sub_1BA8FD700(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate);
}

uint64_t sub_1BA8FD70C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *a1 + *a2;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v4);
  v6 = *(_QWORD *)(v4 + 8);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_1BA8FD76C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource);
}

uint64_t keypath_setTm(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 8);
  v6 = *a2 + *a5;
  swift_beginAccess();
  *(_QWORD *)(v6 + 8) = v5;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.accessoryConfigDataSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.accessoryConfigDataSource.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.accessoryConfigDataSource.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerDelegate.puzzleEmbedAccessoryConfigMessageHandler(_:didUpdateAccessory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerDelegate.puzzleEmbedAccessoryConfigMessageHandler(_:didTriggerEvent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigDataSource.skipUpdatesOnUnchangedConfig(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigDataSource.shouldProcessAccessoryConfigEvent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigDataSource.puzzleColorTheme.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for PuzzleEmbedAccessoryConfigMessageHandler()
{
  return objc_opt_self();
}

uint64_t method lookup function for PuzzleEmbedAccessoryConfigMessageHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandler.__allocating_init(puzzleComponentsViewProvider:scriptsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1BA8FD860(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1BA8FD884()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BA8FD8A8(uint64_t a1)
{
  uint64_t v1;

  sub_1BA8FCD1C(a1, v1);
}

uint64_t sub_1BA8FD8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return sub_1BA8FD928(a3, a4, a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_1BA8FD928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((unint64_t)a3 >> 8 != 0xFFFFFFFF || a6 >= 4)
    return sub_1BA8FD940(a1, a2, a3, a4, a5, a6);
  return a1;
}

uint64_t sub_1BA8FD940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t result;

  if ((a6 >> 62) - 1 >= 2)
  {
    if (a6 >> 62)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_1BA8FD980(void *a1, void *a2)
{
  if (a1)
  {

  }
}

id sub_1BA8FD9AC(__int128 *a1, _BYTE *a2)
{
  objc_class *ObjectType;
  __int128 v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t inited;
  uint64_t v9;
  char *v10;
  objc_super v12;
  __int128 v13;
  __int128 v14;

  ObjectType = (objc_class *)swift_getObjectType();
  a2[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_queueable] = 0;
  v5 = a1[1];
  v14 = *a1;
  v6 = &a2[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_identifier];
  *v6 = 0xD00000000000001BLL;
  v6[1] = 0x80000001BB9623F0;
  v7 = &a2[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventName];
  *v7 = 0xD00000000000001FLL;
  v7[1] = 0x80000001BB962410;
  v13 = v5;
  sub_1BA6D24F0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  *(_QWORD *)(inited + 32) = 25705;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v9 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(inited + 48) = v14;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = 0x64695F6D657469;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  *(_QWORD *)(inited + 120) = v9;
  *(_OWORD *)(inited + 96) = v13;
  v10 = a2;
  sub_1BA739BF4((uint64_t)&v14);
  sub_1BA739BF4((uint64_t)&v13);
  *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventDetail] = sub_1BA76E994(inited);

  v12.receiver = v10;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_1BA8FDB04(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BA8FDB38(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t FeedDeferredCursor.identifier.getter()
{
  uint64_t v0;

  v0 = sub_1BA653870();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FeedDeferredCursor.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1ED476458;
  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BA8FDBE4(char *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  __int128 v53;
  __int128 v54;
  char v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  char v60;
  char v61;
  char v62;
  __int128 v63;
  __int128 v64;
  char v65;
  uint64_t v66;
  __int128 v67;
  char v68;
  uint64_t v69;
  uint64_t v70;

  v43 = a4;
  v42 = a3;
  v11 = *a3;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v34 - v16;
  v18 = *a1;
  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  v41 = v70;
  if (!v70)
  {
    __break(1u);
    goto LABEL_6;
  }
  v39 = v69;
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  v20 = sub_1BB86C8B0();
  v21 = (uint64_t)v17;
  v22 = *(uint64_t (**)(void))(*(_QWORD *)(v20 - 8) + 48);
  v40 = v21;
  result = v22();
  if ((_DWORD)result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v37 = a6;
  v38 = a5;
  sub_1BB86F064();
  sub_1BB86F22C();
  swift_release();
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)(v14, 1, v20);
  if ((_DWORD)result != 1)
  {
    v68 = v18;
    v24 = v42;
    v36 = v42[3];
    v25 = *(_QWORD *)(a2 + 112);
    v27 = *(_QWORD *)(v6 + 80);
    v26 = *(_QWORD *)(v6 + 88);
    type metadata accessor for FeedDeferredCursorGroup(0, v27, v26, v23);
    swift_retain();
    swift_bridgeObjectRetain();
    v35 = sub_1BB872E68();
    v28 = v24[2];
    v29 = *(_QWORD *)(v11 + 80);
    v30 = *(_QWORD *)(*(_QWORD *)(v11 + 96) + 8);
    swift_retain();
    FeedContextFactoryType.createFeedContext()(v29, v30);
    v48 = v58;
    v49 = v59;
    v50 = v60;
    v51 = v61;
    v52 = v62;
    v53 = v63;
    v54 = v64;
    v55 = v65;
    v56 = v66;
    v57 = v67;
    v32 = type metadata accessor for FeedDatabaseGroup(0, v27, v26, v31);
    v33 = MEMORY[0x1BCCE37B4](v25, v32);
    FeedJournal.init(entries:)(MEMORY[0x1E0DEE9D8], &v46);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    v44 = v46;
    v45 = v47;
    swift_allocObject();
    return sub_1BA8FE044(v39, v41, v40, (uint64_t)v14, &v68, v36, v25, v35, v28, &v48, 0, v33, &v44, v38, v37);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BA8FDF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, __int128 *a13, uint64_t a14, uint64_t a15)
{
  swift_allocObject();
  return sub_1BA8FE044(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1BA8FE044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t a11, uint64_t a12, __int128 *a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v41;

  v18 = *a5;
  v31 = *((_BYTE *)a10 + 9);
  v32 = *((_BYTE *)a10 + 8);
  v29 = *((_BYTE *)a10 + 11);
  v30 = *((_BYTE *)a10 + 10);
  v36 = a10[5];
  v37 = a10[4];
  v35 = *((_BYTE *)a10 + 48);
  v33 = *a10;
  v34 = a10[7];
  v41 = *((_QWORD *)a13 + 2);
  v19 = v15 + qword_1ED476458;
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  v20 = sub_1BB86C8B0();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v26 = *((_OWORD *)a10 + 1);
  v27 = *((_OWORD *)a10 + 4);
  v28 = *a13;
  v21(v19, a3, v20);
  v21(v15 + qword_1ED476440, a4, v20);
  *(_BYTE *)(v15 + qword_1ED476480) = v18;
  *(_QWORD *)(v15 + qword_1EF3D04D0) = a6;
  *(_QWORD *)(v15 + qword_1ED476468) = a7;
  *(_QWORD *)(v15 + qword_1ED476460) = a8;
  *(_QWORD *)(v15 + qword_1ED476488) = a9;
  v22 = v15 + qword_1ED476448;
  *(_QWORD *)v22 = v33;
  *(_BYTE *)(v22 + 8) = v32;
  *(_BYTE *)(v22 + 9) = v31;
  *(_BYTE *)(v22 + 10) = v30;
  *(_BYTE *)(v22 + 11) = v29;
  *(_OWORD *)(v22 + 16) = v26;
  *(_QWORD *)(v22 + 32) = v37;
  *(_QWORD *)(v22 + 40) = v36;
  *(_BYTE *)(v22 + 48) = v35;
  *(_QWORD *)(v22 + 56) = v34;
  *(_OWORD *)(v22 + 64) = v27;
  *(_QWORD *)(v15 + qword_1ED476470) = a11;
  *(_QWORD *)(v15 + qword_1ED476478) = a12;
  v23 = v15 + qword_1ED476450;
  *(_OWORD *)v23 = v28;
  *(_QWORD *)(v23 + 16) = v41;
  v24 = (_QWORD *)(v15 + qword_1ED39F5C0);
  *v24 = a14;
  v24[1] = a15;
  return v15;
}

void *sub_1BA8FE254(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(double);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void *result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[3];
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  char v75;

  v56 = a1;
  v4 = *v2;
  v5 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v51 = *a2;
  v50 = a2[1];
  v10 = a2[2];
  v52 = v2[2];
  v55 = v2[3];
  v12 = *(void (**)(double))(v11 + 16);
  v53 = (uint64_t)&v44 - v13;
  v12(v9);
  v54 = v7;
  ((void (*)(char *, char *, uint64_t))v12)(v7, (char *)v2 + qword_1ED476440, v5);
  v75 = *((_BYTE *)v2 + qword_1ED476480);
  v14 = *(_QWORD *)((char *)v2 + qword_1EF3D04D0);
  v15 = *(_QWORD *)((char *)v2 + qword_1ED476460);
  v16 = *(_QWORD *)((char *)v2 + qword_1ED476488);
  v17 = *(_QWORD *)((char *)v2 + qword_1ED476448);
  v18 = *((_BYTE *)v2 + qword_1ED476448 + 8);
  v19 = *((_BYTE *)v2 + qword_1ED476448 + 9);
  v20 = *((_BYTE *)v2 + qword_1ED476448 + 10);
  v21 = *((_BYTE *)v2 + qword_1ED476448 + 11);
  v22 = *(_QWORD *)((char *)v2 + qword_1ED476448 + 16);
  v23 = *(_QWORD *)((char *)v2 + qword_1ED476448 + 24);
  v24 = *(_QWORD *)((char *)v2 + qword_1ED476448 + 32);
  v25 = *(_QWORD *)((char *)v2 + qword_1ED476448 + 40);
  v26 = *((_BYTE *)v2 + qword_1ED476448 + 48);
  result = *(void **)((char *)v2 + qword_1ED476448 + 56);
  v28 = *(_QWORD *)((char *)v2 + qword_1ED476448 + 64);
  v29 = *(_QWORD *)((char *)v2 + qword_1ED476448 + 72);
  v62 = v17;
  v63 = v18;
  v64 = v19;
  v65 = v20;
  v66 = v21;
  v67 = v22;
  v68 = v23;
  v69 = v24;
  v70 = v25;
  v71 = v26;
  v72 = result;
  v73 = v28;
  v74 = v29;
  v30 = *(_QWORD *)((char *)v2 + qword_1ED476470);
  v31 = __OFADD__(v30, 1);
  v32 = v30 + 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    v49 = v32;
    v48 = *(_QWORD *)((char *)v2 + qword_1ED476478);
    v33 = *(_QWORD *)((char *)v2 + qword_1ED476450 + 16);
    v58 = *(_OWORD *)((char *)v2 + qword_1ED476450);
    v59 = v33;
    v57[0] = v51;
    v57[1] = v50;
    v57[2] = v10;
    v47 = v14;
    v46 = v15;
    v34 = v4;
    v35 = v16;
    v51 = v29;
    v50 = v28;
    v45 = result;
    v36 = (void *)v17;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v37 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA653B2C(v24, v25);
    v38 = *(_QWORD *)(v34 + 80);
    v39 = *(_QWORD *)(v34 + 88);
    v40 = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA66AB08(&v58, v57, v38, v39, &v60);
    v58 = v60;
    v59 = v61;
    v42 = *(_QWORD *)((char *)v2 + qword_1ED39F5C0);
    v41 = *(_QWORD *)((char *)v2 + qword_1ED39F5C0 + 8);
    swift_allocObject();
    v43 = sub_1BA8FE044(v52, v55, v53, (uint64_t)v54, &v75, v47, v56, v46, v35, &v62, v49, v48, &v58, v42, v41);
    swift_retain();
    return (void *)v43;
  }
  return result;
}

uint64_t sub_1BA8FE5FC()
{
  uint64_t v0;

  v0 = sub_1BA653870();
  swift_bridgeObjectRetain();
  return v0;
}

BOOL static FeedDeferredCursor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  BOOL v6;
  char v7;
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == v5;
  if (v6 || (v7 = sub_1BB874398(), result = 0, (v7 & 1) != 0))
  {
    v10 = *(_QWORD *)(v2 + 80);
    v9 = *(_QWORD *)(v2 + 88);
    v11 = type metadata accessor for FeedDatabaseGroup(0, v10, v9, v5);
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedDatabaseGroup<A>, v11);
    if ((sub_1BB872EEC() & 1) != 0
      && (v13 = type metadata accessor for FeedDeferredCursorGroup(0, v10, v9, v12),
          MEMORY[0x1BCCE5B24](&unk_1BB942540, v13),
          (sub_1BB872EEC() & 1) != 0))
    {
      return *(_QWORD *)(a1 + qword_1ED476470) == *(_QWORD *)(a2 + qword_1ED476470);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL sub_1BA8FE754(uint64_t *a1, uint64_t *a2)
{
  return static FeedDeferredCursor.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BA8FE760@<X0>(uint64_t *a1@<X8>)
{
  return FeedDeferredCursor.shortDescription.getter(a1);
}

uint64_t sub_1BA8FE780(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedDeferredCursor<A>, a1);
  return sub_1BB86E308();
}

void sub_1BA8FE7B4()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t method lookup function for FeedDeferredCursor()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BA8FE7D0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BA8FE810(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  void (*v72)(uint64_t, uint64_t);
  void (*v73)(uint64_t, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t AssociatedConformanceWitness;
  uint64_t AssociatedTypeWitness;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v91 = a2;
  v6 = *v3;
  v7 = sub_1BB86C8B0();
  v87 = *(_QWORD *)(v7 - 8);
  v88 = v7;
  MEMORY[0x1E0C80A78](v7);
  v74 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5266EC();
  v85 = v9;
  MEMORY[0x1E0C80A78](v9);
  v86 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v11);
  v75 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v84 = (char *)&v70 - v14;
  MEMORY[0x1E0C80A78](v15);
  v96 = (uint64_t)&v70 - v16;
  v17 = *(_QWORD *)(v6 + 80);
  v18 = *(_QWORD *)(v6 + 88);
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v79 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v81 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v77 = (char *)&v70 - v21;
  v80 = swift_checkMetadataState();
  v76 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v78 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v70 - v24;
  LODWORD(v90) = *a3;
  v26 = v3[2];
  v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v3[3];
  v28 = v3[4];
  v29 = *(_QWORD *)(*(_QWORD *)a1 + 272);
  v89 = a1;
  v30 = *(_QWORD *)(a1 + v29);
  v31 = sub_1BA86D968(v17, v18);
  v33 = sub_1BA99A5F0(v91, v30, (uint64_t)v31, v32, (uint64_t)sub_1BA86D9F0, 0, v26, v27, v28, v17, v18);
  swift_release();
  if ((v90 & 1) == 0)
  {
    type metadata accessor for FeedCursorResult(255, v17, v18, v34);
    sub_1BB86EAAC();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_retain();
    v54 = sub_1BB872E68();
    sub_1BA62EDB8(v54, &v94);
    v92 = v94;
    v93 = v95;
    v55 = sub_1BB86E9D4();
LABEL_12:
    swift_release();
    return v55;
  }
  v73 = *(void (**)(uint64_t, uint64_t))(v18 + 64);
  v73(v17, v18);
  v91 = v18;
  v35 = v33;
  v36 = AssociatedConformanceWitness;
  v72 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  v37 = v77;
  v38 = v80;
  v72(v80, AssociatedConformanceWitness);
  v76 = *(_QWORD *)(v76 + 8);
  ((void (*)(char *, uint64_t))v76)(v25, v38);
  v39 = AssociatedTypeWitness;
  v40 = swift_getAssociatedConformanceWitness();
  v71 = *(void (**)(uint64_t, uint64_t))(v40 + 40);
  v71(v39, v40);
  v41 = *(void (**)(char *, uint64_t))(v79 + 8);
  v41(v37, v39);
  v90 = v35;
  v42 = v78;
  v79 = v17;
  v73(v17, v91);
  v43 = v81;
  v72(v38, v36);
  ((void (*)(char *, uint64_t))v76)(v42, v38);
  v44 = (uint64_t)v84;
  v71(v39, v40);
  v41(v43, v39);
  v45 = v86;
  v46 = v86 + *(int *)(v85 + 48);
  v47 = v96;
  sub_1BA76D70C(v96, v86);
  sub_1BA76D70C(v44, v46);
  v49 = v87;
  v48 = v88;
  v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  if (v50(v45, 1, v88) != 1)
  {
    v56 = v44;
    v57 = v75;
    sub_1BA76D70C(v45, v75);
    v58 = v50(v46, 1, v48);
    v52 = v79;
    if (v58 != 1)
    {
      v60 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v74, v46, v48);
      sub_1BA49C0DC();
      LODWORD(v85) = sub_1BB872958();
      v61 = *(void (**)(char *, uint64_t))(v49 + 8);
      v61(v60, v48);
      sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      sub_1BA4A2E80(v96, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      v61((char *)v57, v48);
      v53 = sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))sub_1BA76D78C);
      if ((v85 & 1) != 0)
        goto LABEL_10;
      goto LABEL_11;
    }
    sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    sub_1BA4A2E80(v96, (uint64_t (*)(_QWORD))sub_1BA76D78C);
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v57, v48);
LABEL_8:
    sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))sub_1BA5266EC);
LABEL_11:
    type metadata accessor for FeedCursorResult(255, v52, v91, v59);
    sub_1BB86EAAC();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_retain();
    v68 = sub_1BB872E68();
    sub_1BA62EDB8(v68, &v94);
    v92 = v94;
    v93 = v95;
    v55 = sub_1BB86E9D4();
    goto LABEL_12;
  }
  sub_1BA4A2E80(v44, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  sub_1BA4A2E80(v47, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  v51 = v50(v46, 1, v48);
  v52 = v79;
  if (v51 != 1)
    goto LABEL_8;
  v53 = sub_1BA4A2E80(v45, (uint64_t (*)(_QWORD))sub_1BA76D78C);
LABEL_10:
  MEMORY[0x1E0C80A78](v53);
  v62 = v91;
  swift_getAssociatedTypeWitness();
  swift_getTupleTypeMetadata2();
  sub_1BB86EC14();
  v63 = swift_allocObject();
  *(_QWORD *)(v63 + 16) = v52;
  *(_QWORD *)(v63 + 24) = v62;
  v64 = (_QWORD *)swift_allocObject();
  v64[2] = v52;
  v64[3] = v62;
  v64[4] = sub_1BA8FF3B4;
  v64[5] = v63;
  v65 = (void *)sub_1BB86E854();
  sub_1BB86E968();
  swift_release();
  swift_release();

  swift_retain();
  v66 = (void *)sub_1BB86E854();
  type metadata accessor for FeedCursorResult(0, v52, v62, v67);
  v55 = sub_1BB86E968();
  swift_release();
  swift_release_n();

  return v55;
}

uint64_t sub_1BA8FF108()
{
  uint64_t v0;

  FeedCursor.unwrappedFeedPool.getter();
  FeedCursor.unwrappedFeedPool.getter();
  v0 = sub_1BB86EBF0();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1BA8FF170(uint64_t a1)
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 56);
  v4 = swift_checkMetadataState();
  return v3(a1, v4, AssociatedConformanceWitness);
}

uint64_t sub_1BA8FF210(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  if ((*a1 & 1) != 0)
  {
    type metadata accessor for FeedCursorResult(255, *(_QWORD *)(*(_QWORD *)a2 + 80), v4, a4);
    sub_1BB86EAAC();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_retain();
    v5 = sub_1BB872E68();
    sub_1BA62EDB8(v5, &v9);
    return sub_1BB86E9D4();
  }
  else
  {
    v7 = type metadata accessor for FeedServiceError(0, *(_QWORD *)(*(_QWORD *)a2 + 80), v4, a4);
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v7);
    swift_allocError();
    *(_QWORD *)v8 = 1;
    *(_QWORD *)(v8 + 8) = 0;
    *(_QWORD *)(v8 + 16) = 0;
    *(_QWORD *)(v8 + 24) = 0;
    *(_BYTE *)(v8 + 32) = 6;
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for ChronologicalFeedRefreshStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ChronologicalFeedRefreshStrategy);
}

uint64_t sub_1BA8FF38C()
{
  return sub_1BA8FF108();
}

uint64_t sub_1BA8FF3A4()
{
  return swift_deallocObject();
}

uint64_t sub_1BA8FF3B4(uint64_t a1)
{
  return sub_1BA8FF170(a1);
}

uint64_t sub_1BA8FF3BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BA8FF3E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_1BA8FF454(_BYTE *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BA8FF210(a1, v4, a3, a4);
}

void *sub_1BA8FF46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t ObjCClassFromMetadata;
  id v8;
  void *v9;
  id v10;
  id v11;
  void (*v12)(_BYTE *, _QWORD);
  void *v13;
  _BYTE v15[32];

  v0 = sub_1BB8739CC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v6 = &v15[-v5];
  sub_1BB8739C0();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v8 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BB8739B4();
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_whiteColor);
  sub_1BB87396C();
  v11 = objc_msgSend(v9, sel_systemPinkColor);
  sub_1BB873960();
  v12 = (void (*)(_BYTE *, _QWORD))sub_1BB873900();
  sub_1BB871854();
  v12(v15, 0);
  sub_1BA49A224(0, &qword_1EF2A96B0);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v13 = (void *)sub_1BB8739D8();
  objc_msgSend(v13, sel_setClipsToBounds_, 1);
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  return v13;
}

id sub_1BA8FF680()
{
  id v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  void *v3;
  id v4;
  id v5;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_init);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v3 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v3, 0x80000001BB9625B0);

  v4 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 10.0);
  objc_msgSend(v0, sel_setFont_, v4);

  v5 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
  objc_msgSend(v0, sel_setTextColor_, v5);

  objc_msgSend(v0, sel_setTextAlignment_, 1);
  return v0;
}

char *sub_1BA8FF81C(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v42;
  objc_super v43;

  v9 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitButton;
  v10 = v4;
  *(_QWORD *)&v4[v9] = sub_1BA8FF46C();
  v11 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitText;
  *(_QWORD *)&v10[v11] = sub_1BA8FF680();

  v43.receiver = v10;
  v43.super_class = (Class)type metadata accessor for DebugPersonalizationSubmitView();
  v12 = (char *)objc_msgSendSuper2(&v43, sel_initWithFrame_, a1, a2, a3, a4);
  v13 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitButton;
  v14 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitButton];
  v15 = v12;
  objc_msgSend(v15, sel_addSubview_, v14);
  v16 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitText;
  v17 = *(void **)&v15[OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitText];
  objc_msgSend(v15, sel_addSubview_, v17);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v42 = (id)objc_opt_self();
  sub_1BA65E330();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BB882990;
  v19 = objc_msgSend(v14, sel_topAnchor);
  v20 = objc_msgSend(v15, (SEL)&selRef_setContentsGravity_ + 4);
  v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, 8.0);

  *(_QWORD *)(v18 + 32) = v21;
  v22 = objc_msgSend(*(id *)&v12[v13], sel_leadingAnchor);
  v23 = objc_msgSend(v15, (SEL)&selRef_absoluteTimeInterval + 6);
  v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(_QWORD *)(v18 + 40) = v24;
  v25 = objc_msgSend(*(id *)&v12[v13], sel_trailingAnchor);
  v26 = objc_msgSend(v15, sel_trailingAnchor);
  v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  *(_QWORD *)(v18 + 48) = v27;
  v28 = objc_msgSend(*(id *)&v15[v16], sel_topAnchor);
  v29 = objc_msgSend(*(id *)&v12[v13], sel_bottomAnchor);
  v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v29, 4.0);

  *(_QWORD *)(v18 + 56) = v30;
  v31 = objc_msgSend(*(id *)&v15[v16], sel_leadingAnchor);
  v32 = objc_msgSend(v15, sel_leadingAnchor);
  v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  *(_QWORD *)(v18 + 64) = v33;
  v34 = objc_msgSend(*(id *)&v15[v16], sel_trailingAnchor);
  v35 = objc_msgSend(v15, sel_trailingAnchor);
  v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  *(_QWORD *)(v18 + 72) = v36;
  v37 = objc_msgSend(*(id *)&v15[v16], sel_bottomAnchor);
  v38 = objc_msgSend(v15, sel_bottomAnchor);
  v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v38, -8.0);

  *(_QWORD *)(v18 + 80) = v39;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2C1570);
  v40 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_activateConstraints_, v40);

  return v15;
}

id sub_1BA8FFD10()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugPersonalizationSubmitView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DebugPersonalizationSubmitView()
{
  return objc_opt_self();
}

void sub_1BA8FFD98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  char v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;

  v55 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v55);
  v4 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v56 = (_QWORD *)((char *)v52 - v7);
  v58 = *(_QWORD *)(a1 + 16);
  if (!v58)
    return;
  v8 = (_QWORD *)(v1 + 16);
  v9 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10 = *(_QWORD *)(v6 + 72);
  v52[1] = a1;
  v53 = v10;
  swift_bridgeObjectRetain();
  v54 = v8;
  while (1)
  {
    v57 = v9;
    v12 = v56;
    sub_1BA900B30(v9, (uint64_t)v56);
    v13 = *v12;
    v14 = v12[1];
    sub_1BA8569CC((uint64_t)v12, (uint64_t)v4);
    type metadata accessor for FormatOptionElement();
    v15 = (_QWORD *)swift_allocObject();
    v16 = swift_allocBox();
    sub_1BA900B30((uint64_t)v4, v17);
    v15[2] = v16 | 4;
    v18 = *((_QWORD *)v4 + 2);
    v60 = v18;
    swift_bridgeObjectRetain();
    sub_1BA6E2F38();
    v20 = v19;
    v22 = v21;
    if (v21 >= 2)
    {
      v60 = 36;
      v61 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v23);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v24);
      sub_1BB872AFC(v25);
      sub_1BA6E3730(v20, v22);
      v20 = v60;
      v22 = v61;
    }
    v15[3] = v20;
    v15[4] = v22;
    v60 = v18;
    v26 = sub_1BA6E3160();
    if (v26 == 2)
    {
      v28 = v14;
      v29 = 0;
      v30 = 0;
      v27 = v54;
    }
    else
    {
      v27 = v54;
      if (v26 != 3 && (v26 & 1) != 0)
      {
        v28 = v14;
        v60 = 36;
        v61 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_1BB872AFC(v31);
        swift_bridgeObjectRelease();
        sub_1BB872AFC(v32);
        v29 = v60;
        v30 = v61;
      }
      else
      {
        v28 = v14;
        v29 = 0;
        v30 = 1;
      }
    }
    v15[5] = v29;
    v15[6] = v30;
    v60 = 36;
    v61 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v33);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v34);
    v35 = v60;
    v36 = v61;
    sub_1BA900B74((uint64_t)v4);
    v15[7] = v35;
    v15[8] = v36;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59 = (_QWORD *)*v27;
    v38 = v59;
    *v27 = 0x8000000000000000;
    v40 = sub_1BA6E35A8(v13, v28);
    v41 = v38[2];
    v42 = (v39 & 1) == 0;
    v43 = v41 + v42;
    if (__OFADD__(v41, v42))
      break;
    v44 = v39;
    if (v38[3] >= v43)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v47 = v59;
        if ((v39 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BA6E395C();
        v47 = v59;
        if ((v44 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BA6F1AC0(v43, isUniquelyReferenced_nonNull_native);
      v45 = sub_1BA6E35A8(v13, v28);
      if ((v44 & 1) != (v46 & 1))
        goto LABEL_28;
      v40 = v45;
      v47 = v59;
      if ((v44 & 1) != 0)
      {
LABEL_3:
        v11 = v47[7];
        swift_release();
        *(_QWORD *)(v11 + 8 * v40) = v15;
        goto LABEL_4;
      }
    }
    v47[(v40 >> 6) + 8] |= 1 << v40;
    v48 = (uint64_t *)(v47[6] + 16 * v40);
    *v48 = v13;
    v48[1] = v28;
    *(_QWORD *)(v47[7] + 8 * v40) = v15;
    v49 = v47[2];
    v50 = __OFADD__(v49, 1);
    v51 = v49 + 1;
    if (v50)
      goto LABEL_27;
    v47[2] = v51;
    swift_bridgeObjectRetain();
LABEL_4:
    *v27 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v9 = v57 + v53;
    if (!--v58)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  sub_1BB874560();
  __break(1u);
}

uint64_t sub_1BA9001C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
      swift_endAccess();
      swift_retain();
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v10 + 16);
      swift_retain();
      swift_release();
      sub_1BA6E9B50(v11);
      swift_release();
      v12 = type metadata accessor for FormatOption();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 0, 1, v12);
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  v14 = type metadata accessor for FormatOption();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
}

uint64_t sub_1BA9002E0()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1BA9002F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BA90038C()
{
  sub_1BA900518();
  return sub_1BB874710();
}

uint64_t sub_1BA9003B4()
{
  sub_1BA900518();
  return sub_1BB87471C();
}

uint64_t FormatVariableCollection.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatVariableCollection.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v2 = v1;
  sub_1BA900810(0, &qword_1EF2AA3D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA900518();
  sub_1BB8746C8();
  swift_beginAccess();
  v10 = *(_QWORD *)(v2 + 16);
  sub_1BA90055C();
  sub_1BA9005C0();
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BA900518()
{
  unint64_t result;

  result = qword_1EF2AA3E0;
  if (!qword_1EF2AA3E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882B24, &type metadata for FormatVariableCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA3E0);
  }
  return result;
}

void sub_1BA90055C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA3E8)
  {
    type metadata accessor for FormatOptionElement();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA3E8);
  }
}

unint64_t sub_1BA9005C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF2AA3F0;
  if (!qword_1EF2AA3F0)
  {
    sub_1BA90055C();
    v2 = v1;
    v3 = sub_1BA9008E4(&qword_1EF2AA3F8, (uint64_t)&unk_1BB946E8C);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF2AA3F0);
  }
  return result;
}

uint64_t FormatVariableCollection.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatVariableCollection.init(from:)(a1);
  return v2;
}

uint64_t FormatVariableCollection.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];

  v3 = v1;
  sub_1BA900810(0, &qword_1EF2AA400, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v13[0] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - v7;
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  v9 = (_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA900518();
  sub_1BB87468C();
  if (v2)
  {
    swift_release();
  }
  else
  {
    sub_1BA90055C();
    sub_1BA90086C();
    v10 = v13[0];
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v10);
    v11 = v13[5];
    swift_beginAccess();
    *v9 = v11;
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void sub_1BA900810(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA900518();
    v7 = a3(a1, &type metadata for FormatVariableCollection.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA90086C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF2AA408;
  if (!qword_1EF2AA408)
  {
    sub_1BA90055C();
    v2 = v1;
    v3 = sub_1BA9008E4(&qword_1EF2AA410, (uint64_t)&unk_1BB946E64);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF2AA408);
  }
  return result;
}

uint64_t sub_1BA9008E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatOptionElement();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BA900924@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatVariableCollection.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BA900978(_QWORD *a1)
{
  return FormatVariableCollection.encode(to:)(a1);
}

uint64_t method lookup function for FormatVariableCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatVariableCollection.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t storeEnumTagSinglePayload for FormatVariableCollection.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BA9009FC + 4 * asc_1BB8829C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BA900A1C + 4 * byte_1BB8829C5[v4]))();
}

_BYTE *sub_1BA9009FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BA900A1C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA900A24(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA900A2C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BA900A34(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BA900A3C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatVariableCollection.CodingKeys()
{
  return &type metadata for FormatVariableCollection.CodingKeys;
}

unint64_t sub_1BA900A5C()
{
  unint64_t result;

  result = qword_1EF2AA418;
  if (!qword_1EF2AA418)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882AFC, &type metadata for FormatVariableCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA418);
  }
  return result;
}

unint64_t sub_1BA900AA4()
{
  unint64_t result;

  result = qword_1EF2AA420;
  if (!qword_1EF2AA420)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882A6C, &type metadata for FormatVariableCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA420);
  }
  return result;
}

unint64_t sub_1BA900AEC()
{
  unint64_t result;

  result = qword_1EF2AA428;
  if (!qword_1EF2AA428)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882A94, &type metadata for FormatVariableCollection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA428);
  }
  return result;
}

uint64_t sub_1BA900B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA900B74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatOption();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1BA900BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t inited;
  void **v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  void **v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  uint64_t v46;
  double v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  void *v52;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  char v58;

  v5 = *(_QWORD *)(a2 + 40);
  if (a5 >= 2u)
  {
    v7 = a3 ^ 1 | a4;
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    if (v7)
    {
      inited = swift_initStackObject();
      v22 = (void **)MEMORY[0x1E0DC1138];
      *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
      v23 = *v22;
      *(_QWORD *)(inited + 32) = *v22;
      v24 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v25 = v23;
      v26 = objc_msgSend(v24, sel_systemFontOfSize_, 12.0);
      v27 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
      *(_QWORD *)(inited + 40) = v26;
      v28 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(inited + 64) = v27;
      *(_QWORD *)(inited + 72) = v28;
      v29 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
      v30 = v28;
      v31 = sub_1BB873804();
      *(_QWORD *)(inited + 104) = v29;
      *(_QWORD *)(inited + 80) = v31;
      v19 = inited;
    }
    else
    {
      v8 = swift_initStackObject();
      v9 = (void **)MEMORY[0x1E0DC1138];
      *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
      v10 = *v9;
      *(_QWORD *)(v8 + 32) = *v9;
      v11 = (void *)objc_opt_self();
      swift_bridgeObjectRetain();
      v12 = v10;
      v13 = objc_msgSend(v11, sel_systemFontOfSize_, 12.0);
      v14 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
      *(_QWORD *)(v8 + 40) = v13;
      v15 = (void *)*MEMORY[0x1E0DC1140];
      *(_QWORD *)(v8 + 64) = v14;
      *(_QWORD *)(v8 + 72) = v15;
      v16 = (void *)objc_opt_self();
      v17 = v15;
      v18 = objc_msgSend(v16, sel_secondaryLabelColor);
      *(_QWORD *)(v8 + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
      *(_QWORD *)(v8 + 80) = v18;
      v19 = v8;
    }
    sub_1BA76E82C(v19);
    v32 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v33 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BA76F768();
    v34 = (id)sub_1BB872760();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v32, sel_initWithString_attributes_, v33, v34);
  }
  else
  {
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    if ((v58 & 1) != 0)
    {
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
      v6 = (id)sub_1BB873804();
    }
    else
    {
      v20 = objc_msgSend((id)objc_opt_self(), sel_systemYellowColor);
      v6 = objc_msgSend(v20, sel_colorWithAlphaComponent_, 0.1);

    }
    sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98E0);
    if (v5)
      swift_bridgeObjectRetain();
    else
      swift_bridgeObjectRelease();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v36 = swift_initStackObject();
    v37 = (void **)MEMORY[0x1E0DC1138];
    *(_OWORD *)(v36 + 16) = xmmword_1BB87A390;
    v38 = *v37;
    *(_QWORD *)(v36 + 32) = *v37;
    v57 = (id)objc_opt_self();
    v56 = v38;
    v39 = objc_msgSend(v57, sel_systemFontOfSize_, 12.0);
    v55 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    *(_QWORD *)(v36 + 40) = v39;
    v40 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(v36 + 64) = v55;
    *(_QWORD *)(v36 + 72) = v40;
    v54 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    *(_QWORD *)(v36 + 104) = v54;
    *(_QWORD *)(v36 + 80) = v6;
    v41 = v40;
    v42 = v6;
    sub_1BA76E82C(v36);
    v43 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v44 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BA76F768();
    v45 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v43, sel_initWithString_attributes_, v44, v45);

    sub_1BB872AFC((_QWORD *)0xA);
    v46 = swift_initStackObject();
    *(_OWORD *)(v46 + 16) = xmmword_1BB87A390;
    *(_QWORD *)(v46 + 32) = v56;
    v47 = *MEMORY[0x1E0DC1448];
    v48 = v56;
    *(_QWORD *)(v46 + 40) = objc_msgSend(v57, sel_systemFontOfSize_weight_, 12.0, v47);
    *(_QWORD *)(v46 + 64) = v55;
    *(_QWORD *)(v46 + 72) = v41;
    *(_QWORD *)(v46 + 104) = v54;
    *(_QWORD *)(v46 + 80) = v42;
    v34 = v42;
    v49 = v41;
    sub_1BA76E82C(v46);
    v50 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v51 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v52 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v33 = objc_msgSend(v50, sel_initWithString_attributes_, v51, v52);

    objc_msgSend(v35, sel_appendAttributedString_, v33);
  }

  return v35;
}

uint64_t sub_1BA901208(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  unint64_t *v32;
  uint64_t (*v33)(uint64_t);
  uint64_t (*v34)(void);
  uint64_t v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unsigned __int8 *v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  void *v51;
  unint64_t v52;
  unint64_t v53;
  void *v54;
  unsigned __int8 v55;
  void *v56;
  char v57;
  char v58;
  char *v59;
  void *v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void *v71;
  uint64_t v72;
  unint64_t v73;
  unsigned __int8 v74;
  void *v75;
  unsigned __int8 v76;
  _OWORD v77[3];
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;

  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v63 - v8;
  v10 = sub_1BB86D660();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v70 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0DB5E78];
  sub_1BA4B07F0(0, &qword_1EF2BC5C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E78], v6);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v63 - v15;
  v17 = sub_1BB86D7A4();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[7];
  v81 = a1[6];
  v82 = v20;
  v83 = a1[8];
  v21 = a1[3];
  v77[2] = a1[2];
  v78 = v21;
  v22 = a1[5];
  v79 = a1[4];
  v80 = v22;
  v24 = *a1;
  v23 = a1[1];
  v26 = v25;
  v77[0] = v24;
  v77[1] = v23;
  v27 = (uint64_t (*)(uint64_t))v13;
  v29 = v28;
  sub_1BA5E01A4(a2, (uint64_t)v16, &qword_1EF2BC5C0, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v16, 1, v29) == 1)
  {
    sub_1BA8C89E4((uint64_t)v77);
    sub_1BA5C699C(a3, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78]);
    v30 = MEMORY[0x1E0DB5E78];
    sub_1BA5C699C(a2, &qword_1EF2BC5C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E78]);
    v31 = (uint64_t)v16;
    v32 = &qword_1EF2BC5C0;
    v33 = (uint64_t (*)(uint64_t))v30;
LABEL_5:
    sub_1BA5C699C(v31, v32, v33);
    return 0;
  }
  v69 = a2;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v19, v16, v29);
  sub_1BA5E01A4(a3, (uint64_t)v9, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1BA8C89E4((uint64_t)v77);
    v34 = MEMORY[0x1E0DB5D78];
    sub_1BA5C699C(a3, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78]);
    sub_1BA5C699C(v69, &qword_1EF2BC5C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E78]);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v29);
    v31 = (uint64_t)v9;
    v32 = &qword_1EF2AA430;
    v33 = (uint64_t (*)(uint64_t))v34;
    goto LABEL_5;
  }
  v66 = v26;
  v67 = v29;
  v68 = a3;
  v37 = v70;
  v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v70, v9, v10);
  v39 = *((_QWORD *)&v78 + 1);
  MEMORY[0x1E0C80A78](v38);
  *(&v63 - 2) = (uint64_t)v37;
  swift_bridgeObjectRetain();
  v40 = sub_1BB47AF2C((uint64_t (*)(uint64_t *))sub_1BA901A58, (uint64_t)(&v63 - 4), v39);
  swift_bridgeObjectRelease();
  v41 = v69;
  if ((v40 & 1) != 0)
  {
    v64 = v11;
    v65 = v10;
    v42 = *((_QWORD *)&v83 + 1);
    v43 = *(_QWORD *)(*((_QWORD *)&v83 + 1) + 16);
    v44 = v19;
    if (v43)
    {
      swift_bridgeObjectRetain_n();
      v45 = (unsigned __int8 *)(v42 + 48);
      v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v48 = *((_QWORD *)v45 - 1);
        v49 = *v45;
        v72 = *((_QWORD *)v45 - 2);
        v73 = v48;
        v74 = v49;
        sub_1BA901A94(v72, v48, v49);
        sub_1BB2B14F8((uint64_t)&v72);
        v50 = v76;
        if (v76 <= 0xFDu)
        {
          v51 = v75;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v46 = sub_1BB38F224(0, v46[2] + 1, 1, v46);
          v53 = v46[2];
          v52 = v46[3];
          if (v53 >= v52 >> 1)
            v46 = sub_1BB38F224((_QWORD *)(v52 > 1), v53 + 1, 1, v46);
          v46[2] = v53 + 1;
          v47 = &v46[2 * v53];
          v47[4] = v51;
          *((_BYTE *)v47 + 40) = v50;
        }
        v45 += 24;
        --v43;
      }
      while (v43);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    sub_1BA8C89E4((uint64_t)v77);
    LOBYTE(v72) = v83;
    FormatContentSizeCategory.groupLayoutContentSizeCategory.getter();
    v54 = v75;
    v55 = v76;
    type metadata accessor for GroupLayoutFactoryValidator();
    *(_QWORD *)(swift_initStackObject() + 16) = v46;
    v72 = (uint64_t)v54;
    LOBYTE(v73) = v55;
    sub_1BA7C26A0(v54, v55);
    v56 = (void *)sub_1BB86D75C();
    sub_1BA7C17DC();
    v58 = v57;

    sub_1BA7C2538(v54, v55);
    if ((v58 & 1) != 0)
    {
      v59 = v70;
      sub_1BB3A005C();
      swift_bridgeObjectRelease();
      sub_1BA7C2538(v54, v55);
      sub_1BA5C699C(v68, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78]);
      sub_1BA5C699C(v69, &qword_1EF2BC5C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E78]);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v67);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v65);
      return 1;
    }
    else
    {
      sub_1BA7E415C();
      v60 = (void *)swift_allocError();
      v62 = v61;
      *v61 = sub_1BB86D75C();
      *((_BYTE *)v62 + 40) = 1;
      swift_willThrow();
      v72 = 0;
      v73 = 0xE000000000000000;
      v71 = v60;
      sub_1BA8EBDF8();
      sub_1BB873E34();
      swift_bridgeObjectRelease();
      sub_1BA7C2538(v54, v55);
      v35 = v72;

      sub_1BA5C699C(v68, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78]);
      sub_1BA5C699C(v69, &qword_1EF2BC5C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E78]);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v67);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v70, v65);
    }
  }
  else
  {
    sub_1BA8C89E4((uint64_t)v77);
    sub_1BA5C699C(v68, &qword_1EF2AA430, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D78]);
    sub_1BA5C699C(v41, &qword_1EF2BC5C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5E78]);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v19, v67);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v37, v10);
    return 2;
  }
  return v35;
}

BOOL sub_1BA901A58(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  return v1 == sub_1BB86D63C();
}

uint64_t sub_1BA901A94(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 - 6 < 6 || a3 == 12)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatContentSizeCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BA901B08 + 4 * byte_1BB882B85[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BA901B3C + 4 * byte_1BB882B80[v4]))();
}

uint64_t sub_1BA901B3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA901B44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA901B4CLL);
  return result;
}

uint64_t sub_1BA901B58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA901B60);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BA901B64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA901B6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatContentSizeCategory()
{
  return &type metadata for DebugFormatContentSizeCategory;
}

unint64_t sub_1BA901B8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AA438;
  if (!qword_1EF2AA438)
  {
    sub_1BA901BD4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AA438);
  }
  return result;
}

void sub_1BA901BD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA440)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA440);
  }
}

unint64_t sub_1BA901C28@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1BA901EC4(*a1);
  *a2 = result;
  return result;
}

void sub_1BA901C50(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1BA901C5C()
{
  sub_1BA901ED4();
  return sub_1BB872CDC();
}

uint64_t sub_1BA901C9C()
{
  sub_1BA901ED4();
  return sub_1BB872CD0();
}

uint64_t sub_1BA901CE4()
{
  sub_1BA901ED4();
  return sub_1BB872CC4();
}

void sub_1BA901D24(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724E818;
}

unint64_t sub_1BA901D38()
{
  unint64_t result;

  result = qword_1EF2AA448;
  if (!qword_1EF2AA448)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882C38, &type metadata for DebugFormatContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1EF2AA448);
  }
  return result;
}

uint64_t sub_1BA901D7C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BA901DB8 + 4 * byte_1BB882B8A[a1]))(0x6D53206172747845, 0xEB000000006C6C61);
}

uint64_t sub_1BA901DB8()
{
  return 0x6C6C616D53;
}

uint64_t sub_1BA901DCC()
{
  return 0x6D756964654DLL;
}

uint64_t sub_1BA901DE0()
{
  return 0x656772614CLL;
}

uint64_t sub_1BA901DF4()
{
  return 19544;
}

uint64_t sub_1BA901E00()
{
  return 5003352;
}

uint64_t sub_1BA901E10()
{
  return 1280858200;
}

unint64_t sub_1BA901E20()
{
  return 0xD000000000000014;
}

uint64_t sub_1BA901EA4()
{
  unsigned __int8 *v0;

  return sub_1BA901D7C(*v0);
}

uint64_t sub_1BA901EAC(char a1)
{
  return **((_QWORD **)&unk_1E7278728 + a1);
}

unint64_t sub_1BA901EC4(unint64_t result)
{
  if (result >= 0xC)
    return 12;
  return result;
}

unint64_t sub_1BA901ED4()
{
  unint64_t result;

  result = qword_1EF2AA450;
  if (!qword_1EF2AA450)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882C60, &type metadata for DebugFormatContentSizeCategory);
    atomic_store(result, (unint64_t *)&qword_1EF2AA450);
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V16()
{
  return &type metadata for A18_V16;
}

uint64_t sub_1BA901F28(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2AA590, (uint64_t (*)(void))sub_1BA903DAC, (uint64_t)&type metadata for A18_V16.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA903DAC();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BA9020DC()
{
  sub_1BA903DAC();
  return sub_1BB874710();
}

uint64_t sub_1BA902104()
{
  sub_1BA903DAC();
  return sub_1BB87471C();
}

double sub_1BA90212C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BA903B98(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BA902170(_QWORD *a1)
{
  return sub_1BA901F28(a1);
}

uint64_t sub_1BA902184()
{
  sub_1BA9038B4();
  return sub_1BB86D96C();
}

uint64_t sub_1BA9021EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  unsigned __int8 v57;
  ValueMetadata *v58;
  unint64_t v59;
  uint64_t v60;

  v48 = a3;
  v60 = a2;
  v5 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v46 = *(_QWORD *)(v9 - 8);
  v47 = v9;
  MEMORY[0x1E0C80A78](v9);
  v43 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for GroupLayoutBindingContext();
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  v56[0] = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)v56))
  {
    sub_1BA7E415C();
    swift_allocError();
    *(_OWORD *)v16 = 0u;
    *(_OWORD *)(v16 + 16) = 0u;
    *(_QWORD *)(v16 + 32) = 0;
    *(_BYTE *)(v16 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    v42 = a1;
    v18 = a1;
    v19 = (uint64_t)v13;
    sub_1BA4C2DD8(v18, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    v20 = v43;
    sub_1BA4C2DD8(v60, v43, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v21 = v14;
    v22 = v14;
    v23 = v15;
    sub_1BA7C26A0(v22, v15);
    sub_1BB86C8D4();
    v24 = sub_1BB86C8C8();
    v40 = v25;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v58 = &type metadata for A18_V16;
    v41 = sub_1BA8EE2B4();
    v59 = v41;
    LOBYTE(v56[0]) = v49;
    v56[1] = v21;
    v57 = v23;
    type metadata accessor for GroupLayoutKey();
    v26 = swift_allocObject();
    sub_1BA7C26A0(v21, v23);
    v54 = sub_1BB874734();
    v55 = v27;
    v52 = 95;
    v53 = 0xE100000000000000;
    v50 = 45;
    v51 = 0xE100000000000000;
    sub_1BA7114A0();
    v28 = sub_1BB873B04();
    v30 = v29;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v26 + 16) = v28;
    *(_QWORD *)(v26 + 24) = v30;
    v31 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v32 = v40;
    *v31 = v24;
    v31[1] = v32;
    sub_1BA4C010C((uint64_t)v56, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    v33 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BA5193C4(v19, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v44 + 56))(v33, 0, 1, v45);
    v34 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BA5193C4(v20, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v34, 0, 1, v47);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    sub_1BA7C2538(v21, v23);
    v35 = type metadata accessor for A18_V16.Bound();
    v36 = v48;
    v48[3] = v35;
    v36[4] = sub_1BA4A2870(&qword_1EF2AA468, (uint64_t (*)(uint64_t))type metadata accessor for A18_V16.Bound, (uint64_t)&unk_1BB882DC8);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    v38 = v41;
    boxed_opaque_existential_0[4] = (uint64_t)&type metadata for A18_V16;
    boxed_opaque_existential_0[5] = v38;
    *((_BYTE *)boxed_opaque_existential_0 + 8) = v49;
    boxed_opaque_existential_0[2] = (uint64_t)v21;
    *((_BYTE *)boxed_opaque_existential_0 + 24) = v23;
    sub_1BA4C2DD8(v60, (uint64_t)boxed_opaque_existential_0 + *(int *)(v35 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA7C26A0(v21, v23);
    result = sub_1BB3E0058(0, 0, 0, 0, 0);
    *boxed_opaque_existential_0 = v26;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v35 + 28)) = result;
  }
  return result;
}

uint64_t sub_1BA9025F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _QWORD v28[2];
  __int128 v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];
  uint64_t v34;
  char v35[105];
  __int128 v36[2];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[6];

  v2 = v1;
  v30 = a1;
  *(_QWORD *)&v29 = sub_1BB86DA38();
  v3 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for A18_V16.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + *(int *)(v8 + 40)) + 16);
  v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BA4C010C(v9 + 16, (uint64_t)&v37);
  sub_1BA4C010C(v9 + 56, (uint64_t)v36);
  v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(&v37, inited + 16);
  sub_1BA4CECCC(v36, inited + 56);
  *(double *)(inited + 96) = v11;
  v35[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v35, v41);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  v13 = *(_QWORD *)(v2 + *(int *)(v6 + 28));
  v33[2] = v2;
  v33[3] = v41;
  swift_bridgeObjectRetain();
  v14 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BA7F373C, (uint64_t)v33, v13, (uint64_t)&v34);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v37 = v14;
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v16 = v15;
  sub_1BA8F1DA0(&qword_1EF2A9F08, MEMORY[0x1E0DEAF50]);
  v28[1] = v16;
  v17 = sub_1BB8730F0();
  v18 = *MEMORY[0x1E0DB5D88];
  v19 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v5, v18, v19);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, *MEMORY[0x1E0DB6200], v29);
  v31 = v17;
  v32 = v2;
  sub_1BA903958(0, &qword_1EF2AA510, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v20 = sub_1BB86DB40();
  v29 = v37;
  v21 = v38;
  v22 = v39;
  *(_QWORD *)&v37 = v14;
  *(_QWORD *)&v36[0] = v40;
  MEMORY[0x1E0C80A78](v20);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA8F1DA0((unint64_t *)&qword_1ED3B94C0, MEMORY[0x1E0DEAF38]);
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v23 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v37 = v23;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v24 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v25 = v30;
  *v30 = 0;
  *(_OWORD *)(v25 + 8) = v29;
  *((_QWORD *)v25 + 3) = v21;
  *((_QWORD *)v25 + 4) = v22;
  v26 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v25 + 5) = v24;
  *((_QWORD *)v25 + 6) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

uint64_t sub_1BA902A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2AA528, (uint64_t (*)(void))sub_1BA903870, (uint64_t)&type metadata for A18_V16.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 18;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BA903958(0, &qword_1EF2AA530, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA903918(&qword_1EF2AA538, &qword_1EF2AA530, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1BA902B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v19)(uint64_t, _QWORD *);
  void (*v20)(uint64_t *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1BA4CDF6C(0, &qword_1EF2AA528, (uint64_t (*)(void))sub_1BA903870, (uint64_t)&type metadata for A18_V16.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v23 - v9);
  v32 = a2;
  v11 = *(_QWORD *)(a2 + 16);
  if (v11)
  {
    v31 = v8;
    v29 = sub_1BB86D438();
    v30 = a1;
    v28 = *MEMORY[0x1E0DB5A38];
    v27 = *MEMORY[0x1E0DB6318];
    v26 = *MEMORY[0x1E0DB63C0];
    swift_bridgeObjectRetain();
    v12 = 0;
    v24 = v11;
    v25 = a3;
    v13 = v30;
    do
    {
      ++v12;
      v33 = v13;
      v14 = v29;
      v15 = swift_allocBox();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, v28, v14);
      *v10 = v15;
      v17 = v31;
      v18 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v31 + 104);
      v18(v10, v27, v7);
      v19 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BA903958(0, &qword_1EF2AA540, MEMORY[0x1E0DB5A10]);
      sub_1BA903918(&qword_1EF2AA548, &qword_1EF2AA540, v19, MEMORY[0x1E0DB5A18]);
      swift_bridgeObjectRetain();
      sub_1BB86D4EC();
      v20 = *(void (**)(uint64_t *, uint64_t))(v17 + 8);
      v20(v10, v7);
      v33 = v13;
      v21 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v18)(v10, v26, v7);
      MEMORY[0x1E0C80A78](v21);
      sub_1BB86D498();
      v22 = v24;
      v20(v10, v7);
      swift_bridgeObjectRelease();
    }
    while (v22 != v12);
    swift_bridgeObjectRelease();
  }
}

void sub_1BA902DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, _QWORD *);
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  sub_1BA4CDF6C(0, &qword_1EF2AA528, (uint64_t (*)(void))sub_1BA903870, (uint64_t)&type metadata for A18_V16.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v15 - v7);
  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v18 = *(_QWORD *)(v10 + 72);
    v17 = *MEMORY[0x1E0DB63F8];
    v15 = a2;
    swift_bridgeObjectRetain();
    v16 = v5;
    do
    {
      v20 = a1;
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = 6;
      *v8 = v12;
      v13 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, v17, v5);
      v19 = &v15;
      MEMORY[0x1E0C80A78](v13);
      v14 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BA903958(0, &qword_1EF2AA540, MEMORY[0x1E0DB5A10]);
      sub_1BA903918(&qword_1EF2AA548, &qword_1EF2AA540, v14, MEMORY[0x1E0DB5A18]);
      v5 = v16;
      sub_1BB86D4BC();
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
      v11 += v18;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BA902FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, _QWORD *);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v44 = a2;
  v45 = sub_1BB86DA38();
  v43 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v48 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1BB86D93C();
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2AA528, (uint64_t (*)(void))sub_1BA903870, (uint64_t)&type metadata for A18_V16.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v43 - v14);
  v52 = a1;
  KeyPath = swift_getKeyPath();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0x4060E00000000000;
  *v15 = v16;
  v17 = *MEMORY[0x1E0DB6330];
  v50 = v13;
  v51 = v12;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 104))(v15, v17, v12);
  sub_1BA9039E4();
  sub_1BA4CDF6C(0, &qword_1EF2AA558, (uint64_t (*)(void))sub_1BA903870, (uint64_t)&type metadata for A18_V16.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v21 + v20) = 0x4058C00000000000;
  (*(void (**)(void))(v19 + 104))();
  v22 = a3 + *(int *)(type metadata accessor for A18_V16.Bound() + 24);
  v23 = *(unsigned __int8 *)(v22 + *(int *)(type metadata accessor for GroupLayoutContext() + 24) + 17) | 2;
  v24 = (char *)v10 + v8[5];
  v25 = *MEMORY[0x1E0DB61C8];
  v26 = sub_1BB86DA20();
  v27 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v24, v25, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  v28 = (void **)MEMORY[0x1E0DC4918];
  *v10 = v23;
  *(uint64_t *)((char *)v10 + v8[6]) = 3;
  v29 = *v28;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v29;
  v30 = *MEMORY[0x1E0DC49E8];
  v31 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 8);
  v32 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 16);
  v33 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 24);
  v34 = qword_1ED3BC390;
  v35 = v29;
  if (v34 != -1)
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v36 = swift_release();
  v37 = MEMORY[0x1E0C80A78](v36);
  *(&v43 - 8) = v30;
  *(&v43 - 7) = v31;
  *(&v43 - 6) = v32;
  *(&v43 - 5) = v33;
  v39 = v44;
  v38 = v45;
  *(&v43 - 4) = (uint64_t)v7;
  *(&v43 - 3) = v39;
  v42 = (unint64_t)v10;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v43 + 104))(v48, *MEMORY[0x1E0DB6208], v38, v37);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v49);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  v40 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA903958(0, &qword_1EF2AA540, MEMORY[0x1E0DB5A10]);
  sub_1BA903918(&qword_1EF2AA548, &qword_1EF2AA540, v40, MEMORY[0x1E0DB5A18]);
  v42 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v50 + 8))(v15, v51);
}

uint64_t sub_1BA9034A4@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A18_V16.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BA903584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BA9021EC(a1, a2, a3);
}

uint64_t sub_1BA903598()
{
  return sub_1BB6909C8();
}

unint64_t sub_1BA9035A8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA9035D4();
  result = sub_1BA903618();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BA9035D4()
{
  unint64_t result;

  result = qword_1EF2AA458;
  if (!qword_1EF2AA458)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882D14, &type metadata for A18_V16);
    atomic_store(result, (unint64_t *)&qword_1EF2AA458);
  }
  return result;
}

unint64_t sub_1BA903618()
{
  unint64_t result;

  result = qword_1EF2AA460;
  if (!qword_1EF2AA460)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882D3C, &type metadata for A18_V16);
    atomic_store(result, (unint64_t *)&qword_1EF2AA460);
  }
  return result;
}

uint64_t type metadata accessor for A18_V16.Bound()
{
  uint64_t result;

  result = qword_1EF2AA4C8;
  if (!qword_1EF2AA4C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BA903698()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BA9036A4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BA903720()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BA90372C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BA9037A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BA90382C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2AA508, (uint64_t (*)(uint64_t))type metadata accessor for A18_V16.Bound, (uint64_t)&unk_1BB882DA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BA903868(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA902A20(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BA903870()
{
  unint64_t result;

  result = qword_1EF2AA518;
  if (!qword_1EF2AA518)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882EF8, &type metadata for A18_V16.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2AA518);
  }
  return result;
}

unint64_t sub_1BA9038B4()
{
  unint64_t result;

  result = qword_1EF2AA520;
  if (!qword_1EF2AA520)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882EC8, &type metadata for A18_V16.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA520);
  }
  return result;
}

uint64_t sub_1BA9038F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BA9034A4(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BA903900()
{
  return swift_deallocObject();
}

void sub_1BA903910(uint64_t a1)
{
  uint64_t v1;

  sub_1BA902B7C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BA903918(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA903958(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BA903958(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A18_V16.Layout;
    v8[1] = &type metadata for A18_V16.Layout.Attributes;
    v8[2] = sub_1BA903870();
    v8[3] = sub_1BA9038B4();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BA9039D4(uint64_t a1)
{
  uint64_t v1;

  sub_1BA902DE4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BA9039DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BA902FEC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BA9039E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA550)
  {
    sub_1BA4CDF6C(255, &qword_1EF2AA558, (uint64_t (*)(void))sub_1BA903870, (uint64_t)&type metadata for A18_V16.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA550);
  }
}

ValueMetadata *type metadata accessor for A18_V16.Layout.Attributes()
{
  return &type metadata for A18_V16.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V16.Layout()
{
  return &type metadata for A18_V16.Layout;
}

unint64_t sub_1BA903A7C()
{
  unint64_t result;

  result = qword_1EF2AA560;
  if (!qword_1EF2AA560)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882E68, &type metadata for A18_V16.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA560);
  }
  return result;
}

unint64_t sub_1BA903AC4()
{
  unint64_t result;

  result = qword_1EF2AA568;
  if (!qword_1EF2AA568)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882E40, &type metadata for A18_V16.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA568);
  }
  return result;
}

unint64_t sub_1BA903B0C()
{
  unint64_t result;

  result = qword_1EF2AA570;
  if (!qword_1EF2AA570)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882E18, &type metadata for A18_V16.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA570);
  }
  return result;
}

unint64_t sub_1BA903B54()
{
  unint64_t result;

  result = qword_1EF2AA578;
  if (!qword_1EF2AA578)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882E90, &type metadata for A18_V16.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2AA578);
  }
  return result;
}

uint64_t sub_1BA903B98@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2AA580, (uint64_t (*)(void))sub_1BA903DAC, (uint64_t)&type metadata for A18_V16.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA903DAC();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BA903DAC()
{
  unint64_t result;

  result = qword_1EF2AA588;
  if (!qword_1EF2AA588)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882FEC, &type metadata for A18_V16.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA588);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A18_V16.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA903E3C + 4 * byte_1BB882D05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA903E70 + 4 * byte_1BB882D00[v4]))();
}

uint64_t sub_1BA903E70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA903E78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA903E80);
  return result;
}

uint64_t sub_1BA903E8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA903E94);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA903E98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA903EA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A18_V16.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V16.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BA903EC0()
{
  unint64_t result;

  result = qword_1EF2AA598;
  if (!qword_1EF2AA598)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882FC4, &type metadata for A18_V16.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA598);
  }
  return result;
}

unint64_t sub_1BA903F08()
{
  unint64_t result;

  result = qword_1EF2AA5A0;
  if (!qword_1EF2AA5A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882F34, &type metadata for A18_V16.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA5A0);
  }
  return result;
}

unint64_t sub_1BA903F50()
{
  unint64_t result;

  result = qword_1EF2AA5A8;
  if (!qword_1EF2AA5A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB882F5C, &type metadata for A18_V16.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA5A8);
  }
  return result;
}

uint64_t FormatWebEmbedBinding.URL.url(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  v6 = type metadata accessor for FeedWebEmbed();
  if ((v5 & 1) != 0)
    return sub_1BA4C2DD8(a1 + *(int *)(v6 + 36), a2, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  v8 = a1 + *(int *)(v6 + 32);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, v8, v9);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
}

void *static FormatWebEmbedBinding.URL.CodingType.allCases.getter()
{
  return &unk_1E724E8C0;
}

uint64_t FormatWebEmbedBinding.URL.CodingType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x52556E6F69746361;
  else
    return 7107189;
}

uint64_t sub_1BA904078(char *a1, char *a2)
{
  return sub_1BB7F89AC(*a1, *a2);
}

uint64_t sub_1BA904084()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BA904100()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BA904158()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BA9041D0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724E8E8;
}

uint64_t FormatWebEmbedBinding.URL.hash(into:)()
{
  return sub_1BB8745D8();
}

BOOL static FormatWebEmbedBinding.URL.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatWebEmbedBinding.URL.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BA904268()
{
  unint64_t result;

  result = qword_1EF2AA5B0;
  if (!qword_1EF2AA5B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.URL.CodingType, &type metadata for FormatWebEmbedBinding.URL.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2AA5B0);
  }
  return result;
}

unint64_t sub_1BA9042B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AA5B8;
  if (!qword_1EF2AA5B8)
  {
    sub_1BA9042F8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AA5B8);
  }
  return result;
}

void sub_1BA9042F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AA5C0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AA5C0);
  }
}

unint64_t sub_1BA904350()
{
  unint64_t result;

  result = qword_1EF2AA5C8;
  if (!qword_1EF2AA5C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.URL, &type metadata for FormatWebEmbedBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1EF2AA5C8);
  }
  return result;
}

unint64_t sub_1BA904394(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA9043B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA9043B8()
{
  unint64_t result;

  result = qword_1EF2AA5D0;
  if (!qword_1EF2AA5D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.URL, &type metadata for FormatWebEmbedBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1EF2AA5D0);
  }
  return result;
}

unint64_t sub_1BA9043FC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5524B8();
  a1[2] = sub_1BA53ED90();
  result = sub_1BA904350();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.URL()
{
  return &type metadata for FormatWebEmbedBinding.URL;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.URL.CodingType()
{
  return &type metadata for FormatWebEmbedBinding.URL.CodingType;
}

uint64_t sub_1BA904450@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_1BA4C2DD8(a2, (uint64_t)v11, v12);
  if ((a1 & 1) != 0)
  {
    sub_1BA4C2DD8((uint64_t)&v11[*(int *)(v9 + 36)], (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    v13 = a3;
    v14 = 0x55206E6F69746341;
    v15 = 0xEA00000000004C52;
  }
  else
  {
    v16 = &v11[*(int *)(v9 + 32)];
    v17 = sub_1BB86C67C();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v8, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v17);
    v13 = a3;
    v14 = 5001813;
    v15 = 0xE300000000000000;
  }
  sub_1BAAF770C(v14, v15, (uint64_t)v8, v13);
  sub_1BA9045E0((uint64_t)v11);
  v19 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 0, 1, v19);
}

uint64_t sub_1BA9045E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedWebEmbed();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for DebugFormatUploadItem(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA904664(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1BA904664(id result, char a2)
{
  switch(a2)
  {
    case 2:
      return result;
    case 1:
      return (id)swift_bridgeObjectRetain();
    case 0:
      return (id)swift_retain();
  }
  return result;
}

void destroy for DebugFormatUploadItem(uint64_t a1)
{
  sub_1BA90469C(*(void **)a1, *(_BYTE *)(a1 + 8));
}

void sub_1BA90469C(void *a1, char a2)
{
  switch(a2)
  {
    case 2:

      break;
    case 1:
      swift_bridgeObjectRelease();
      break;
    case 0:
      swift_release();
      break;
  }
}

uint64_t assignWithCopy for DebugFormatUploadItem(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA904664(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA90469C(v5, v6);
  return a1;
}

uint64_t assignWithTake for DebugFormatUploadItem(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BA90469C(v4, v5);
  return a1;
}

uint64_t sub_1BA904750(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1BA904758(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadItem()
{
  return &type metadata for DebugFormatUploadItem;
}

void sub_1BA904774(uint64_t a1)
{
  int64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  void *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v4 = sub_1BA6AFD6C(a1);
    v5 = 0;
    v6 = a1 + 64;
    v20 = v1;
    v22 = a1 + 64;
    v21 = v3;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(a1 + 32))
    {
      v9 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(a1 + 36) != v3)
        goto LABEL_24;
      v23 = v5;
      v10 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v4);
      swift_bridgeObjectRetain();
      sub_1BA6AFD5C(v10);
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      sub_1BB872AFC((_QWORD *)0x80000001BB962920);
      sub_1BB872AFC(v11);
      swift_bridgeObjectRelease();
      sub_1BA5E0E34(v10);
      v12 = *(_QWORD *)(v24 + 16);
      v13 = *(_QWORD *)(v24 + 24);
      if (v12 >= v13 >> 1)
        sub_1BA7447E8(v13 > 1, v12 + 1, 1);
      *(_QWORD *)(v24 + 16) = v12 + 1;
      v14 = v24 + 16 * v12;
      *(_QWORD *)(v14 + 32) = 0xD000000000000016;
      *(_QWORD *)(v14 + 40) = 0x80000001BB962920;
      v7 = 1 << *(_BYTE *)(a1 + 32);
      if (v4 >= v7)
        goto LABEL_25;
      v6 = a1 + 64;
      v15 = *(_QWORD *)(v22 + 8 * v9);
      if ((v15 & (1 << v4)) == 0)
        goto LABEL_26;
      v3 = v21;
      if (*(_DWORD *)(a1 + 36) != v21)
        goto LABEL_27;
      v16 = v15 & (-2 << (v4 & 0x3F));
      if (v16)
      {
        v7 = __clz(__rbit64(v16)) | v4 & 0xFFFFFFFFFFFFFFC0;
        v8 = v20;
      }
      else
      {
        v17 = v9 + 1;
        v18 = (unint64_t)(v7 + 63) >> 6;
        v8 = v20;
        if (v9 + 1 < v18)
        {
          v19 = *(_QWORD *)(v22 + 8 * v17);
          if (v19)
          {
LABEL_20:
            v7 = __clz(__rbit64(v19)) + (v17 << 6);
          }
          else
          {
            while (v18 - 2 != v9)
            {
              v19 = *(_QWORD *)(a1 + 80 + 8 * v9++);
              if (v19)
              {
                v17 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      v5 = v23 + 1;
      v4 = v7;
      if (v23 + 1 == v8)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t FeedHeadline.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FeedHeadline.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
}

void FeedHeadline.traits.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
}

uint64_t FeedHeadline.metadata.getter()
{
  return swift_unknownObjectRetain();
}

void FeedHeadline.premiumBadge.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

uint64_t FeedHeadline.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedHeadline(0);
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 40), a1, type metadata accessor for FeedHeadline.State);
}

uint64_t FeedHeadline.nativeAdInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FeedHeadline(0) + 44);
  return sub_1BA6DCDE8(v3, a1);
}

uint64_t FeedHeadline.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedHeadline(0) + 48));
  v4 = *v3;
  v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1BA75A650(v4, v5);
}

unint64_t FeedHeadline.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FeedHeadline(0) + 52));
  *a1 = v3;
  return sub_1BA6D44C8(v3);
}

id FeedHeadline.audioTrack.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + *(int *)(type metadata accessor for FeedHeadline(0) + 56));
  *a1 = v3;
  return v3;
}

BOOL FeedHeadline.hasAccess.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for FeedHeadline(0) + 40);
  return *(_BYTE *)(v1 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 32)) == 0;
}

BOOL FeedHeadline.hasAudio.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedHeadline(0) + 56)) != 0;
}

uint64_t FeedHeadline.copy(nativeAdInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  char v24;

  v20 = a2;
  v4 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - v8;
  v10 = *(_QWORD *)v2;
  v11 = *(_QWORD *)(v2 + 8);
  v12 = *(void **)(v2 + 40);
  v13 = *(_QWORD *)(v2 + 48);
  v24 = *(_BYTE *)(v2 + 56);
  v14 = sub_1BB871B24();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, a1, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  v16 = type metadata accessor for FeedHeadline(0);
  sub_1BA4C2DD8(v2 + *(int *)(v16 + 40), (uint64_t)v6, type metadata accessor for FeedHeadline.State);
  v23 = *(void **)(v2 + *(int *)(v16 + 56));
  v21 = *(_QWORD *)(v2 + 32);
  v22 = 0;
  v17 = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(v10, v11, v12, v13, &v24, (uint64_t)v9, (uint64_t)v6, &v23, v20, (uint64_t)&v21);
}

void sub_1BA904D78(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1BA904D8C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_identifier);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t FeedHeadline.debugIdentifier.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_identifier);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t sub_1BA904E34()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_sourceChannel);
  v2 = (uint64_t)v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_name);
    swift_unknownObjectRelease();
    v2 = sub_1BB8729A0();

  }
  return v2;
}

uint64_t FeedHeadline.debugSourceName.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_sourceChannel);
  v2 = (uint64_t)v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_name);
    swift_unknownObjectRelease();
    v2 = sub_1BB8729A0();

  }
  return v2;
}

uint64_t sub_1BA904F44()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BB8729A0();

  return v3;
}

uint64_t FeedHeadline.debugTitle.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_title);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BB8729A0();

  return v3;
}

id sub_1BA90500C()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_thumbnail);
  v2 = objc_msgSend(v1, sel_thumbnailAssetHandle);

  return v2;
}

id FeedHeadline.debugAssetHandle.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(v0 + 40), sel_thumbnail);
  v2 = objc_msgSend(v1, sel_thumbnailAssetHandle);

  return v2;
}

id sub_1BA9050B4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 40), sel_scoreProfile);
}

id FeedHeadline.debugScoreProfile.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 40), sel_scoreProfile);
}

uint64_t FeedHeadline.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA4C2DD8(v1, a1, type metadata accessor for FeedHeadline);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BA905140@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1BA4C2DD8(v1, a1, type metadata accessor for FeedHeadline);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t FeedHeadline.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v38 - v16;
  v18 = v2 + *(int *)(type metadata accessor for FeedHeadline(0) + 40);
  v19 = type metadata accessor for FeedHeadline.State(0);
  if (*(_BYTE *)(v18 + *(int *)(v19 + 32)))
    v20 = 1;
  else
    v20 = *(_BYTE *)(v18 + *(int *)(v19 + 28)) == 0;
  if (v20)
  {
    v21 = sub_1BB8714B8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a1, 1, 1, v21);
  }
  v23 = *(void **)(v2 + 40);
  v24 = objc_msgSend(v23, sel_articleID);
  v25 = v24;
  if (!v24)
  {
    sub_1BB8729A0();
    v39 = v2;
    v25 = (void *)sub_1BB872970();
    v2 = v39;
    swift_bridgeObjectRelease();
  }
  v26 = objc_msgSend(v23, sel_routeURL);
  if (v26)
  {
    v27 = v26;
    sub_1BB86C5EC();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v14, v7, v4);
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v28(v14, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
    {
      v29 = 0;
    }
    else
    {
      v29 = (void *)sub_1BB86C58C();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    }
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v28(v14, 1, 1, v4);
    v29 = 0;
  }
  v30 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForArticleID_routeURL_, v25, v29);

  if (v30)
  {
    sub_1BB86C5EC();

    v31 = 0;
  }
  else
  {
    v31 = 1;
  }
  v28(v11, v31, 1, v4);
  sub_1BA7F0AD4((uint64_t)v11, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v17, 1, v4) == 1)
  {
    sub_1BA5C699C((uint64_t)v17, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
LABEL_23:
    v36 = sub_1BB8714B8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a1, 1, 1, v36);
  }
  v32 = (void *)sub_1BB86C58C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
  sub_1BB872AA8();
  v33 = sub_1BB873564();
  swift_bridgeObjectRelease();
  if (!v33)
  {

    goto LABEL_23;
  }
  v34 = objc_msgSend(*(id *)(v2 + 40), sel_title);
  if (v34)
  {
    v35 = v34;
    sub_1BB8729A0();

  }
  sub_1BB8714AC();

  v37 = sub_1BB8714B8();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(a1, 0, 1, v37);
}

void FeedHeadline.State.likedState.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void FeedHeadline.State.savedState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

uint64_t FeedHeadline.State.sharedState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedHeadline.State(0);
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 24), a1, type metadata accessor for FeedItem.SharedState);
}

uint64_t FeedHeadline.State.offensiveState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedHeadline.State(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t FeedHeadline.State.accessLevel.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedHeadline.State(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t FeedHeadline.State.deletedState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedHeadline.State(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t FeedHeadline.State.blockedState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedHeadline.State(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t FeedHeadline.State.init(likedState:savedState:sharedState:offensiveState:accessLevel:deletedState:blockedState:)@<X0>(_BYTE *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, char *a7@<X6>, _BYTE *a8@<X8>)
{
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  int *v15;
  uint64_t result;

  v10 = *a2;
  v11 = *a4;
  v12 = *a5;
  v13 = *a6;
  v14 = *a7;
  *a8 = *a1;
  a8[1] = v10;
  v15 = (int *)type metadata accessor for FeedHeadline.State(0);
  result = sub_1BA90588C(a3, (uint64_t)&a8[v15[6]]);
  a8[v15[7]] = v11;
  a8[v15[8]] = v12;
  a8[v15[9]] = v13;
  a8[v15[10]] = v14;
  return result;
}

uint64_t FeedHeadline.State.contextIdentifier.getter()
{
  uint64_t v0;

  FeedHeadline.State.selectors.getter();
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v0 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1BA9057BC(unint64_t result)
{
  if (result >= 2)
    return swift_unknownObjectRetain();
  return result;
}

uint64_t sub_1BA9057CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA905830()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

uint64_t sub_1BA90588C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedItem.SharedState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t assignWithCopy for FeedHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  uint64_t (*v15)(_BYTE *, uint64_t, int *);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  id v57;
  char *v59;
  char *v60;
  uint64_t v61;
  int *v62;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v62 = a3;
  v7 = a3[10];
  v8 = (_BYTE *)(a1 + v7);
  v9 = a2 + v7;
  *v8 = *(_BYTE *)(a2 + v7);
  v8[1] = *(_BYTE *)(a2 + v7 + 1);
  v10 = (int *)type metadata accessor for FeedHeadline.State(0);
  v11 = v10[6];
  v12 = &v8[v11];
  v13 = (_BYTE *)(v9 + v11);
  v14 = (int *)type metadata accessor for SharedItem();
  v61 = *((_QWORD *)v14 - 1);
  v15 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v61 + 48);
  v16 = v15(v12, 1, v14);
  v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      v18 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v12, v13, v18);
      v12[v14[5]] = v13[v14[5]];
      v19 = v14[6];
      v20 = *(void **)&v13[v19];
      *(_QWORD *)&v12[v19] = v20;
      v21 = v14[7];
      v59 = &v13[v21];
      v60 = &v12[v21];
      v22 = sub_1BB86C67C();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      v24 = v20;
      v23(v60, v59, v22);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v61 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
LABEL_6:
    v25 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  v45 = sub_1BB86C8B0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v12, v13, v45);
  v12[v14[5]] = v13[v14[5]];
  v46 = v14[6];
  v47 = *(void **)&v13[v46];
  v48 = *(void **)&v12[v46];
  *(_QWORD *)&v12[v46] = v47;
  v49 = v47;

  v50 = v14[7];
  v51 = &v12[v50];
  v52 = &v13[v50];
  v53 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
LABEL_7:
  v8[v10[7]] = *(_BYTE *)(v9 + v10[7]);
  v8[v10[8]] = *(_BYTE *)(v9 + v10[8]);
  v8[v10[9]] = *(_BYTE *)(v9 + v10[9]);
  v8[v10[10]] = *(_BYTE *)(v9 + v10[10]);
  v26 = v62[11];
  v27 = (void *)(a1 + v26);
  v28 = (void *)(a2 + v26);
  v29 = sub_1BB871B24();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v30 + 8))(v27, v29);
LABEL_12:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v30 + 24))(v27, v28, v29);
LABEL_13:
  v35 = v62[12];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  v38 = *(_QWORD *)(a1 + v35 + 8);
  v39 = *(_QWORD *)(a2 + v35 + 8);
  if (v38 < 0x11)
  {
    if (v39 >= 0x11)
    {
      *v36 = *v37;
      v36[1] = v37[1];
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v39 < 0x11)
  {
    sub_1BA905D68((uint64_t)v36);
LABEL_18:
    *(_OWORD *)v36 = *(_OWORD *)v37;
    goto LABEL_20;
  }
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_20:
  v40 = v62[13];
  v41 = (_QWORD *)(a1 + v40);
  v42 = *(_QWORD *)(a1 + v40);
  v43 = *(_QWORD *)(a2 + v40);
  if (v42 == 2)
  {
    if (v43 >= 2)
    {
      if (v43 == 2)
      {
        v44 = 2;
LABEL_35:
        *v41 = v44;
        goto LABEL_36;
      }
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v43 == 2)
  {
    sub_1BA905D9C(a1 + v40);
LABEL_34:
    v44 = *(_QWORD *)(a2 + v40);
    goto LABEL_35;
  }
  if (v42 >= 2)
  {
    if (v43 >= 2)
    {
      *v41 = v43;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      goto LABEL_36;
    }
    swift_unknownObjectRelease();
    goto LABEL_34;
  }
  if (v43 >= 2)
  {
LABEL_29:
    *v41 = v43;
    swift_unknownObjectRetain();
    goto LABEL_36;
  }
LABEL_28:
  *v41 = v43;
LABEL_36:
  v54 = v62[14];
  v55 = *(void **)(a1 + v54);
  v56 = *(void **)(a2 + v54);
  *(_QWORD *)(a1 + v54) = v56;
  v57 = v56;

  return a1;
}

uint64_t sub_1BA905D68(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEA968] - 8) + 8))();
  return a1;
}

uint64_t sub_1BA905D9C(uint64_t a1)
{
  destroy for FeedItemHiddenReason();
  return a1;
}

uint64_t initializeWithTake for FeedHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = a3[10];
  v7 = (_BYTE *)(a1 + v6);
  v8 = a2 + v6;
  *v7 = *(_BYTE *)(a2 + v6);
  v7[1] = *(_BYTE *)(a2 + v6 + 1);
  v9 = (int *)type metadata accessor for FeedHeadline.State(0);
  v10 = v9[6];
  v11 = &v7[v10];
  v12 = (char *)(v8 + v10);
  v13 = (int *)type metadata accessor for SharedItem();
  v14 = *((_QWORD *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    v15 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
    v11[v13[5]] = v12[v13[5]];
    *(_QWORD *)&v11[v13[6]] = *(_QWORD *)&v12[v13[6]];
    v17 = v13[7];
    v29 = &v11[v17];
    v18 = &v12[v17];
    v19 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v29, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  v7[v9[7]] = *(_BYTE *)(v8 + v9[7]);
  v7[v9[8]] = *(_BYTE *)(v8 + v9[8]);
  v7[v9[9]] = *(_BYTE *)(v8 + v9[9]);
  v7[v9[10]] = *(_BYTE *)(v8 + v9[10]);
  v20 = a3[11];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = sub_1BB871B24();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v26 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  v27 = *(_QWORD *)(a2 + v26);
  if (v27 == 2)
    v27 = 2;
  *(_QWORD *)(a1 + v26) = v27;
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for FeedHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  int *v15;
  uint64_t (*v16)(_BYTE *, uint64_t, int *);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v52;
  int *v53;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v53 = a3;
  v8 = a3[10];
  v9 = (_BYTE *)(a1 + v8);
  v10 = a2 + v8;
  *v9 = *(_BYTE *)(a2 + v8);
  v9[1] = *(_BYTE *)(a2 + v8 + 1);
  v11 = (int *)type metadata accessor for FeedHeadline.State(0);
  v12 = v11[6];
  v13 = &v9[v12];
  v14 = (_BYTE *)(v10 + v12);
  v15 = (int *)type metadata accessor for SharedItem();
  v52 = *((_QWORD *)v15 - 1);
  v16 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v52 + 48);
  v17 = v16(v13, 1, v15);
  v18 = v16(v14, 1, v15);
  if (v17)
  {
    if (!v18)
    {
      v19 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v13, v14, v19);
      v13[v15[5]] = v14[v15[5]];
      *(_QWORD *)&v13[v15[6]] = *(_QWORD *)&v14[v15[6]];
      v20 = v15[7];
      v21 = &v13[v20];
      v22 = &v14[v20];
      v23 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v52 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
LABEL_6:
    v24 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  v42 = sub_1BB86C8B0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v13, v14, v42);
  v13[v15[5]] = v14[v15[5]];
  v43 = v15[6];
  v44 = *(void **)&v13[v43];
  *(_QWORD *)&v13[v43] = *(_QWORD *)&v14[v43];

  v45 = v15[7];
  v46 = &v13[v45];
  v47 = &v14[v45];
  v48 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 40))(v46, v47, v48);
LABEL_7:
  v9[v11[7]] = *(_BYTE *)(v10 + v11[7]);
  v9[v11[8]] = *(_BYTE *)(v10 + v11[8]);
  v9[v11[9]] = *(_BYTE *)(v10 + v11[9]);
  v9[v11[10]] = *(_BYTE *)(v10 + v11[10]);
  v25 = v53[11];
  v26 = (void *)(a1 + v25);
  v27 = (void *)(a2 + v25);
  v28 = sub_1BB871B24();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
LABEL_12:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 40))(v26, v27, v28);
LABEL_13:
  v34 = v53[12];
  v35 = a1 + v34;
  v36 = a2 + v34;
  if (*(_QWORD *)(a1 + v34 + 8) < 0x11uLL)
  {
LABEL_16:
    *(_OWORD *)v35 = *(_OWORD *)v36;
    goto LABEL_18;
  }
  v37 = *(_QWORD *)(v36 + 8);
  if (v37 < 0x11)
  {
    sub_1BA905D68(v35);
    goto LABEL_16;
  }
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_QWORD *)(v35 + 8) = v37;
  swift_bridgeObjectRelease();
LABEL_18:
  v38 = v53[13];
  v39 = (unint64_t *)(a1 + v38);
  v40 = *(_QWORD *)(a1 + v38);
  v41 = *(_QWORD *)(a2 + v38);
  if (v40 == 2)
  {
    if (v41 == 2)
      v41 = 2;
    goto LABEL_30;
  }
  if (v41 == 2)
  {
    sub_1BA905D9C(a1 + v38);
  }
  else
  {
    if (v40 < 2)
      goto LABEL_30;
    if (v41 >= 2)
    {
      *v39 = v41;
      swift_unknownObjectRelease();
      goto LABEL_31;
    }
    swift_unknownObjectRelease();
  }
  v41 = *(_QWORD *)(a2 + v38);
LABEL_30:
  *v39 = v41;
LABEL_31:
  v49 = v53[14];
  v50 = *(void **)(a1 + v49);
  *(_QWORD *)(a1 + v49) = *(_QWORD *)(a2 + v49);

  return a1;
}

uint64_t sub_1BA906454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FeedHeadline.State(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 40);
    }
    else
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BA90650C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for FeedHeadline.State(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 40);
    }
    else
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedHeadline.State(_BYTE *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    a1[1] = *((_BYTE *)a2 + 1);
    v7 = a3[6];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = (int *)type metadata accessor for SharedItem();
    v11 = *((_QWORD *)v10 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      v12 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      v8[v10[5]] = v9[v10[5]];
      v15 = v10[6];
      v16 = *(void **)&v9[v15];
      *(_QWORD *)&v8[v15] = v16;
      v17 = v10[7];
      v18 = &v8[v17];
      v25 = &v9[v17];
      v19 = sub_1BB86C67C();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v21 = v16;
      v20(v18, v25, v19);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    }
    v22 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)v4 + v22) = *((_BYTE *)a2 + v22);
    v23 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)v4 + v23) = *((_BYTE *)a2 + v23);
  }
  return v4;
}

_BYTE *assignWithCopy for FeedHeadline.State(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  id v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = (int *)type metadata accessor for SharedItem();
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v24 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v7, v8, v24);
      v7[v9[5]] = v8[v9[5]];
      v25 = v9[6];
      v26 = *(void **)&v8[v25];
      v27 = *(void **)&v7[v25];
      *(_QWORD *)&v7[v25] = v26;
      v28 = v26;

      v29 = v9[7];
      v30 = &v7[v29];
      v31 = &v8[v29];
      v32 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
      goto LABEL_7;
    }
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v22 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v14 = sub_1BB86C8B0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
  v7[v9[5]] = v8[v9[5]];
  v15 = v9[6];
  v16 = *(void **)&v8[v15];
  *(_QWORD *)&v7[v15] = v16;
  v17 = v9[7];
  v18 = &v7[v17];
  v33 = &v8[v17];
  v19 = sub_1BB86C67C();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21 = v16;
  v20(v18, v33, v19);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

_BYTE *initializeWithTake for FeedHeadline.State(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = (int *)type metadata accessor for SharedItem();
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    v7[v9[5]] = v8[v9[5]];
    *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
    v13 = v9[7];
    v14 = &v7[v13];
    v15 = &v8[v13];
    v16 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v17] = a2[v17];
  v18 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v18] = a2[v18];
  return a1;
}

_BYTE *assignWithTake for FeedHeadline.State(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, int *);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = (int *)type metadata accessor for SharedItem();
  v10 = *((_QWORD *)v9 - 1);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v23 = sub_1BB86C8B0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v7, v8, v23);
      v7[v9[5]] = v8[v9[5]];
      v24 = v9[6];
      v25 = *(void **)&v7[v24];
      *(_QWORD *)&v7[v24] = *(_QWORD *)&v8[v24];

      v26 = v9[7];
      v27 = &v7[v26];
      v28 = &v8[v26];
      v29 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v19 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v14 = sub_1BB86C8B0();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v7, v8, v14);
  v7[v9[5]] = v8[v9[5]];
  *(_QWORD *)&v7[v9[6]] = *(_QWORD *)&v8[v9[6]];
  v15 = v9[7];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v20 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v20] = a2[v20];
  v21 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v21] = a2[v21];
  return a1;
}

uint64_t sub_1BA906C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 1);
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for FeedItem.SharedState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BA906D04(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 1) = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for FeedItem.SharedState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t dispatch thunk of WebEmbedCoordinatorType.webEmbedDidSelectLink(identifier:url:headline:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of WebEmbedCoordinatorType.webEmbedDidLoad(identifier:timeInterval:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of WebEmbedCoordinatorType.webEmbedDidFailLoad(identifier:timeInterval:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t type metadata accessor for WebEmbedCoordinator()
{
  return objc_opt_self();
}

BOOL static FeedRefreshUpdateBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedRefreshUpdateBehavior.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FeedRefreshUpdateBehavior.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BA906E40()
{
  unint64_t result;

  result = qword_1EF2AA670;
  if (!qword_1EF2AA670)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedRefreshUpdateBehavior, &type metadata for FeedRefreshUpdateBehavior);
    atomic_store(result, (unint64_t *)&qword_1EF2AA670);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedRefreshUpdateBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA906ED0 + 4 * byte_1BB8835C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA906F04 + 4 * byte_1BB8835C0[v4]))();
}

uint64_t sub_1BA906F04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA906F0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA906F14);
  return result;
}

uint64_t sub_1BA906F20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA906F28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA906F2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA906F34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA906F40@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  sub_1BB86DD20();
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_newsFeedFormatConfiguration) & 1) == 0)
    goto LABEL_11;
  v6 = objc_msgSend(a1, sel_newsFeedFormatConfiguration);
  if (!v6)
    goto LABEL_11;
  v7 = v6;
  v8 = sub_1BB8729A0();
  v10 = v9;

  v11 = v3[6];
  if (v11)
  {
    v12 = v3[5] == v8 && v11 == v10;
    if (v12 || (sub_1BB874398() & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_11:
      v16 = v3[4];
      *a2 = v3[3];
      a2[1] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_1BB86DD2C();
    }
  }
  swift_bridgeObjectRetain();
  v13 = sub_1BA9F1950(v8, v10);
  v15 = v14;
  sub_1BA907248();
  sub_1BB86DC78();
  sub_1BA69D314(v13, v15);
  v3[3] = v18;
  v3[4] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3[5] = v8;
  v3[6] = v10;
  swift_bridgeObjectRelease();
  *a2 = v18;
  a2[1] = v19;
  return sub_1BB86DD2C();
}

uint64_t sub_1BA9071DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatFeedConfigManager()
{
  return objc_opt_self();
}

unint64_t sub_1BA907248()
{
  unint64_t result;

  result = qword_1EF2AA678;
  if (!qword_1EF2AA678)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFeedConfig, &type metadata for FormatFeedConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2AA678);
  }
  return result;
}

uint64_t sub_1BA90728C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v1);
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BB86DD50();
  type metadata accessor for FormatJSONDecoder();
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  swift_allocObject();
  *(_QWORD *)(v0 + 56) = sub_1BACC8234(MEMORY[0x1E0DEE9D8]);
  return v0;
}

uint64_t destroy for DebugFormatErrorModel(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s8NewsFeed21DebugFormatErrorModelVwCP_0(_QWORD *a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = v4;
  a1[1] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatErrorModel(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for DebugFormatErrorModel(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatErrorModel()
{
  return &type metadata for DebugFormatErrorModel;
}

uint64_t sub_1BA907460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9D8];
  sub_1BA7447E8(0, 0, 0);
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    v3 = 0;
    v4 = a1 + 64;
    do
    {
      sub_1BB87420C();
      sub_1BB872AFC(v5);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v6);
      sub_1BB0DA3D4();
      sub_1BB872AFC(v7);
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_1BA7447E8(v8 > 1, v9 + 1, 1);
      ++v3;
      v4 += 40;
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = 0x65736143202D2020;
      *(_QWORD *)(v10 + 40) = 0xE900000000000020;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  return v12;
}

void *sub_1BA9075EC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  void *v13;
  id v14;
  _QWORD v16[2];

  sub_1BA4A3FB4(0, &qword_1EF2AA690, (void (*)(uint64_t))MEMORY[0x1E0DB3620]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (void **)((char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v16 - v6;
  v16[1] = a1;
  v8 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v9 = sub_1BB86DF6C();
  v10 = swift_dynamicCast();
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (!v10)
  {
    v12(v7, 1, 1, v9);
LABEL_6:
    v14 = a1;
    goto LABEL_7;
  }
  v12(v7, 0, 1, v9);
  sub_1BA90A848((uint64_t)v7, (uint64_t)v4);
  if ((*(unsigned int (**)(void **, uint64_t))(v11 + 88))(v4, v9) != *MEMORY[0x1E0DB3618])
  {
    (*(void (**)(void **, uint64_t))(v11 + 8))(v4, v9);
    goto LABEL_6;
  }
  (*(void (**)(void **, uint64_t))(v11 + 96))(v4, v9);
  v13 = *v4;
  a1 = (void *)sub_1BA9075EC(v13);

LABEL_7:
  sub_1BA502AD0((uint64_t)v7, &qword_1EF2AA690, (void (*)(uint64_t))MEMORY[0x1E0DB3620]);
  return a1;
}

uint64_t sub_1BA907794(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  void (*v27)(_QWORD *, uint64_t, uint64_t, uint64_t);
  void *v28;
  uint64_t v29;
  id v30;
  int v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  id v35;
  uint64_t v36;
  int v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  id v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  unint64_t v64;
  _OWORD v65[3];
  uint64_t v66;
  char v67;
  _QWORD v68[9];

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED39B410, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  MEMORY[0x1E0C80A78](v2);
  v56 = (char *)&v51 - v3;
  v55 = type metadata accessor for FormatLayoutError();
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v52 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2AA680, (void (*)(uint64_t))type metadata accessor for FormatVersioningError);
  MEMORY[0x1E0C80A78](v5);
  v60 = (char *)&v51 - v6;
  v59 = type metadata accessor for FormatVersioningError(0);
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v53 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2AA688, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v51 - v9;
  v11 = type metadata accessor for FormatDerivedDataError();
  v61 = *(_QWORD *)(v11 - 8);
  v62 = v11;
  MEMORY[0x1E0C80A78](v11);
  v57 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED39B898, (void (*)(uint64_t))type metadata accessor for DebugFormatServiceError);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v51 - v14;
  v16 = type metadata accessor for DebugFormatServiceError();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2AA690, (void (*)(uint64_t))MEMORY[0x1E0DB3620]);
  MEMORY[0x1E0C80A78](v20);
  v22 = (uint64_t *)((char *)&v51 - v21);
  v68[0] = a1;
  v23 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v24 = sub_1BB86DF6C();
  v25 = swift_dynamicCast();
  v26 = *(_QWORD *)(v24 - 8);
  v27 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  if (v25)
  {
    v27(v22, 0, 1, v24);
    if ((*(unsigned int (**)(_QWORD *, uint64_t))(v26 + 88))(v22, v24) == *MEMORY[0x1E0DB3618])
    {
      (*(void (**)(_QWORD *, uint64_t))(v26 + 96))(v22, v24);
      v28 = (void *)*v22;
      v29 = sub_1BA907794(*v22);

      return v29;
    }
    (*(void (**)(_QWORD *, uint64_t))(v26 + 8))(v22, v24);
  }
  else
  {
    v27(v22, 1, 1, v24);
    sub_1BA502AD0((uint64_t)v22, &qword_1EF2AA690, (void (*)(uint64_t))MEMORY[0x1E0DB3620]);
  }
  v68[0] = a1;
  v30 = a1;
  v31 = swift_dynamicCast();
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v31)
  {
    v32(v15, 0, 1, v16);
    v33 = (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatServiceError;
    sub_1BA5193C4((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatServiceError);
    v34 = sub_1BA908184((uint64_t)v19);
LABEL_14:
    v29 = v34;
    sub_1BA4A2E80((uint64_t)v19, v33);
    return v29;
  }
  v32(v15, 1, 1, v16);
  sub_1BA502AD0((uint64_t)v15, &qword_1ED39B898, (void (*)(uint64_t))type metadata accessor for DebugFormatServiceError);
  v68[0] = a1;
  v35 = a1;
  v36 = v62;
  v37 = swift_dynamicCast();
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
  if (v37)
  {
    v38(v10, 0, 1, v36);
    v33 = (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataError;
    v19 = v57;
    sub_1BA5193C4((uint64_t)v10, (uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataError);
    v34 = (uint64_t)sub_1BA90862C((uint64_t)v19);
    goto LABEL_14;
  }
  v38(v10, 1, 1, v36);
  sub_1BA502AD0((uint64_t)v10, &qword_1EF2AA688, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
  v68[0] = a1;
  v39 = a1;
  v40 = (uint64_t)v60;
  v41 = v59;
  v42 = swift_dynamicCast();
  v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56);
  if (v42)
  {
    v43(v40, 0, 1, v41);
    v33 = type metadata accessor for FormatVersioningError;
    v19 = v53;
    sub_1BA5193C4(v40, (uint64_t)v53, type metadata accessor for FormatVersioningError);
    v34 = sub_1BA90885C((uint64_t)v19);
    goto LABEL_14;
  }
  v43(v40, 1, 1, v41);
  sub_1BA502AD0(v40, &qword_1EF2AA680, (void (*)(uint64_t))type metadata accessor for FormatVersioningError);
  v68[0] = a1;
  v44 = a1;
  v45 = (uint64_t)v56;
  v46 = v55;
  v47 = swift_dynamicCast();
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
  if (v47)
  {
    v48(v45, 0, 1, v46);
    v33 = (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError;
    v19 = v52;
    sub_1BA5193C4(v45, (uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
    v34 = sub_1BA908A88((uint64_t)v19);
    goto LABEL_14;
  }
  v48(v45, 1, 1, v46);
  sub_1BA502AD0(v45, (unint64_t *)&qword_1ED39B410, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  v63 = a1;
  v50 = a1;
  if (swift_dynamicCast())
  {
    sub_1BA907F18((uint64_t)v65, (uint64_t)v68);
    v63 = 0;
    v64 = 0xE000000000000000;
    sub_1BB874548();
    sub_1BA907F54((uint64_t)v65);
    v29 = (uint64_t)v63;
    sub_1BA907F54((uint64_t)v68);
  }
  else
  {
    v66 = 0;
    memset(v65, 0, sizeof(v65));
    v67 = -1;
    sub_1BA604728((uint64_t)v65, (uint64_t)&unk_1EF2AA698, (uint64_t)&type metadata for FormatBindingError, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4AD288);
    *(_QWORD *)&v65[0] = a1;
    v68[0] = 0;
    v68[1] = 0xE000000000000000;
    sub_1BB874548();

    return v68[0];
  }
  return v29;
}

uint64_t sub_1BA907F18(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8(a2, a1);
  return a2;
}

uint64_t sub_1BA907F54(uint64_t a1)
{
  destroy for FormatBindingError(a1);
  return a1;
}

uint64_t sub_1BA907F88(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v4 = a1 + 32;
    do
    {
      sub_1BA4C2DD8(v4, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA7C3924);
      sub_1BB873CB4();
      sub_1BB872AFC(0);
      __swift_project_boxed_opaque_existential_1(v12, v12[3]);
      sub_1BB874350();
      sub_1BB872AFC(v5);
      sub_1BA907794((void *)v12[5]);
      sub_1BB872AFC(v6);
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA7C3924);
      v2 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v13;
      }
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1BA7447E8(v7 > 1, v8 + 1, 1);
        v2 = v13;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      v9 = v2 + 16 * v8;
      *(_QWORD *)(v9 + 32) = 0;
      *(_QWORD *)(v9 + 40) = 0xE000000000000000;
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  v12[0] = v2;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v10 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BA908184(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  int v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  void (*v35)(uint64_t *, uint64_t, uint64_t, uint64_t);
  int v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[2];
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  unint64_t v46;

  sub_1BA4A3FB4(0, &qword_1EF2AA690, (void (*)(uint64_t))MEMORY[0x1E0DB3620]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)v40 - v3);
  sub_1BA4A3FB4(0, &qword_1EF2AA6A0, (void (*)(uint64_t))MEMORY[0x1E0DEC498]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - v6;
  v8 = sub_1BB873D68();
  v42 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DebugFormatServiceError();
  MEMORY[0x1E0C80A78](v15);
  v44 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v40 - v18;
  sub_1BA4C2DD8(a1, (uint64_t)v40 - v18, v20);
  v43 = v15;
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatServiceError);
LABEL_5:
    v30 = (uint64_t)v44;
    goto LABEL_6;
  }
  v40[1] = a1;
  v41 = v10;
  sub_1BA8CE760();
  v22 = v21;
  v23 = *(void **)&v19[*(int *)(v21 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v19, v11);
  v45 = v23;
  v24 = v23;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v25 = swift_dynamicCast();
  v26 = v42;
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  if (v25)
  {
    v27(v7, 0, 1, v8);
    v28 = (uint64_t)v41;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v41, v7, v8);
    v29 = sub_1BA90970C((uint64_t)v14, v28);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v8);
LABEL_10:
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return v29;
  }
  v27(v7, 1, 1, v8);
  sub_1BA502AD0((uint64_t)v7, &qword_1EF2AA6A0, (void (*)(uint64_t))MEMORY[0x1E0DEC498]);
  v45 = v23;
  v31 = v23;
  v32 = sub_1BB86DF6C();
  v33 = swift_dynamicCast();
  v34 = *(_QWORD *)(v32 - 8);
  v35 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v34 + 56);
  if (!v33)
  {
    v35(v4, 1, 1, v32);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1BA502AD0((uint64_t)v4, &qword_1EF2AA690, (void (*)(uint64_t))MEMORY[0x1E0DB3620]);
    goto LABEL_5;
  }
  v35(v4, 0, 1, v32);
  v36 = (*(uint64_t (**)(uint64_t *, uint64_t))(v34 + 88))(v4, v32);
  v30 = (uint64_t)v44;
  if (v36 == *MEMORY[0x1E0DB3618])
  {
    (*(void (**)(uint64_t *, uint64_t))(v34 + 96))(v4, v32);
    v37 = *v4;
    v38 = *(int *)(v22 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v30, v14, v11);
    *(_QWORD *)(v30 + v38) = v37;
    swift_storeEnumTagMultiPayload();
    v29 = sub_1BA908184(v30);

    sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatServiceError);
    goto LABEL_10;
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

  (*(void (**)(uint64_t *, uint64_t))(v34 + 8))(v4, v32);
LABEL_6:
  v45 = 0;
  v46 = 0xE000000000000000;
  sub_1BB874548();
  sub_1BA4A2E80(v30, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatServiceError);
  return (uint64_t)v45;
}

_QWORD *sub_1BA90862C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  int EnumCaseMultiPayload;
  void *v10;
  _QWORD *v11;
  const char *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v17;
  unint64_t v18;

  v2 = type metadata accessor for FormatDerivedDataError();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - v6;
  sub_1BA4C2DD8(a1, (uint64_t)&v17 - v6, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v10 = (void *)*((_QWORD *)v7 + 2);
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v11 = (_QWORD *)0xD000000000000018;
    v12 = "Failed to compile style ";
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v10 = (void *)*((_QWORD *)v7 + 2);
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v11 = (_QWORD *)0xD00000000000001DLL;
    v12 = "Failed to compile decoration ";
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      v17 = 0;
      v18 = 0xE000000000000000;
      sub_1BB874548();
      sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataError);
      v15 = v17;
      sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataError);
      return v15;
    }
    v10 = (void *)*((_QWORD *)v7 + 2);
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v11 = (_QWORD *)0xD000000000000018;
    v12 = "Failed to compile group ";
  }
  v17 = v11;
  v18 = (unint64_t)(v12 - 32) | 0x8000000000000000;
  sub_1BB872AFC(v11);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v13);
  sub_1BA907794(v10);
  sub_1BB872AFC(v14);
  swift_bridgeObjectRelease();

  return v17;
}

uint64_t sub_1BA90885C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD v10[4];

  v1 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatVersioningError(0) + 28));
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      sub_1BA4C010C(v1 + 40 * v2 - 8, (uint64_t)v10);
      __swift_project_boxed_opaque_existential_1(v10, v10[3]);
      sub_1BB8746EC();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
    v3 = swift_bridgeObjectRetain();
    sub_1BA90980C(v3);
    swift_bridgeObjectRelease();
  }
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_1BB873CB4();
  sub_1BB872AFC("Failed to compile group ");
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v5);
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("Failed versioning at ");
  sub_1BB86EB84();
  sub_1BA4A2870((unint64_t *)&unk_1ED3B0920, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DF8]);
  sub_1BB87420C();
  sub_1BB872AFC(v7);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(" was introduced in ");
  sub_1BB87420C();
  sub_1BB872AFC(v8);
  swift_bridgeObjectRelease();
  return v10[0];
}

uint64_t sub_1BA908A88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  _QWORD *v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v2 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v50 - v6);
  sub_1BA4C2DD8(a1, (uint64_t)&v50 - v6, v8);
  if (swift_getEnumCaseMultiPayload() == 10)
  {
    v9 = *v7;
    v10 = v7[2];
    v50 = v7[1];
    v51 = v10;
    v52 = v9;
    v11 = *(_QWORD *)(v9 + 32);
    if (v11 >> 62)
      goto LABEL_31;
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    while (v12)
    {
      v13 = 4;
      while (1)
      {
        v14 = v13 - 4;
        if ((v11 & 0xC000000000000001) == 0)
          break;
        v15 = MEMORY[0x1BCCE4630](v13 - 4, v11);
        v16 = __OFADD__(v14, 1);
        v17 = v13 - 3;
        if (v16)
          goto LABEL_30;
LABEL_10:
        if (*(_QWORD *)(v15 + 16) >> 60 != 3)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
          goto LABEL_29;
        }
        swift_release();
        ++v13;
        if (v17 == v12)
          goto LABEL_12;
      }
      v15 = *(_QWORD *)(v11 + 8 * v13);
      swift_retain();
      v16 = __OFADD__(v14, 1);
      v17 = v13 - 3;
      if (!v16)
        goto LABEL_10;
LABEL_30:
      __break(1u);
LABEL_31:
      swift_bridgeObjectRetain_n();
      v12 = sub_1BB873F30();
    }
LABEL_12:
    swift_bridgeObjectRelease_n();
    v54 = *(_QWORD *)(v52 + 32);
    if (v54 >> 62)
    {
      swift_bridgeObjectRetain_n();
      result = sub_1BB873F30();
      v18 = result;
      if (result)
        goto LABEL_14;
    }
    else
    {
      v18 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (v18)
      {
LABEL_14:
        if (v18 < 1)
        {
          __break(1u);
          return result;
        }
        v20 = 0;
        v21 = v54 & 0xC000000000000001;
        v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v53 = v18;
        do
        {
          if (v21)
          {
            v23 = MEMORY[0x1BCCE4630](v20, v54);
          }
          else
          {
            v23 = *(_QWORD *)(v54 + 8 * v20 + 32);
            swift_retain();
          }
          v24 = *(_QWORD *)(v23 + 16);
          if (v24 >> 60 == 3)
          {
            v25 = *(_QWORD *)(v24 + 16);
            v26 = *(_QWORD *)(v24 + 24);
            v28 = *(_QWORD *)(v24 + 32);
            v27 = *(_QWORD *)(v24 + 40);
            v29 = *(_QWORD *)(v24 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_release();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v22 = sub_1BB38F358(0, v22[2] + 1, 1, v22);
            v31 = v22[2];
            v30 = v22[3];
            if (v31 >= v30 >> 1)
              v22 = sub_1BB38F358((_QWORD *)(v30 > 1), v31 + 1, 1, v22);
            v22[2] = v31 + 1;
            v32 = &v22[5 * v31];
            v32[4] = v25;
            v32[5] = v26;
            v32[6] = v28;
            v32[7] = v27;
            v32[8] = v29;
            v18 = v53;
          }
          else
          {
            swift_release();
          }
          ++v20;
        }
        while (v18 != v20);
        goto LABEL_35;
      }
    }
    v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_35:
    swift_bridgeObjectRelease_n();
    v33 = v50;
    swift_retain();
    v34 = v51;
    swift_retain();
    v35 = sub_1BA90A1D0((uint64_t)v22, v33, v34);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
    {
      v54 = 0;
      swift_bridgeObjectRetain();
      v53 = v35;
      v37 = (char *)(v35 + 64);
      v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v40 = *v37;
        if (v40 != 255)
        {
          v41 = *((_QWORD *)v37 - 4);
          v42 = *((_QWORD *)v37 - 3);
          v44 = *((_QWORD *)v37 - 2);
          v43 = *((_QWORD *)v37 - 1);
          sub_1BA757FCC(v41, v42, v44, v43, *v37);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v38 = sub_1BB38F344(0, v38[2] + 1, 1, v38);
          v46 = v38[2];
          v45 = v38[3];
          if (v46 >= v45 >> 1)
            v38 = sub_1BB38F344((_QWORD *)(v45 > 1), v46 + 1, 1, v38);
          v38[2] = v46 + 1;
          v39 = &v38[5 * v46];
          v39[4] = v41;
          v39[5] = v42;
          v39[6] = v44;
          v39[7] = v43;
          *((_BYTE *)v39 + 64) = v40;
        }
        v37 += 40;
        --v36;
      }
      while (v36);
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    v56 = 0;
    v57 = 0xE000000000000000;
    sub_1BB873CB4();
    v58 = v56;
    v59 = v57;
    sub_1BB872AFC(" but compiling for ");
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v47);
    swift_bridgeObjectRelease();
    sub_1BB872AFC("ailed in switch with id ");
    v48 = sub_1BA907460((uint64_t)v38);
    swift_bridgeObjectRelease();
    v55 = v48;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6A0BA4();
    sub_1BB872904();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v49);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return v58;
  }
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
LABEL_29:
  v56 = 0;
  v57 = 0xE000000000000000;
  sub_1BB874548();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutError);
  return v56;
}

uint64_t sub_1BA9090BC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v15;
    v4 = *(_QWORD *)(type metadata accessor for FeedItem(0) - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1BA90920C(v14);
      v7 = v14[0];
      v8 = v14[1];
      v15 = v2;
      v10 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1BA7447E8(v9 > 1, v10 + 1, 1);
        v2 = v15;
      }
      *(_QWORD *)(v2 + 16) = v10 + 1;
      v11 = v2 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v8;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  v14[0] = v2;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v12 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BA90920C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t result;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v14 = 0;
  v15 = 0xE000000000000000;
  sub_1BB873CB4();
  sub_1BB872AFC(0);
  FeedItem.kind.getter();
  sub_1BA5ABD90(v12, v13);
  sub_1BA6E0CBC(v12, v13);
  sub_1BB872AFC(v2);
  FeedItem.debugIdentifier.getter();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  FeedItem.debugTitle.getter();
  sub_1BB872AFC((_QWORD *)0xE500000000000000);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v5);
  FeedItem.traits.getter((uint64_t)&v11);
  v12 = 91;
  v13 = 0xE100000000000000;
  v11 = sub_1BA78E0E8();
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  sub_1BB872AFC(v8);
  result = swift_bridgeObjectRelease();
  v10 = v15;
  *a1 = v14;
  a1[1] = v10;
  return result;
}

uint64_t sub_1BA909430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  int v8;
  int v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = *(_QWORD *)(a3 + 16);
  sub_1BB872AFC((_QWORD *)0x202D);
  sub_1BB872AFC(v4);
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v31 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v5, 0);
    result = sub_1BA580CE4(v3);
    v7 = result;
    v9 = v8;
    v11 = v10 & 1;
    v29 = v3;
    v30 = v3 + 56;
    while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(v3 + 32))
    {
      if (((*(_QWORD *)(v30 + (((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(v3 + 36) != v9)
        goto LABEL_17;
      sub_1BA7114A0();
      v12 = sub_1BB873B4C();
      v13 = *(_QWORD *)(v12 + 16);
      if (v13)
      {
        v14 = (uint64_t *)(v12 + 32 * v13);
        v15 = *v14;
        v16 = v14[1];
        v17 = v14[2];
        v18 = v14[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v15 = MEMORY[0x1BCCE4378](0x454D524F464C414DLL, 0xEC00000044492044);
        v16 = v19;
        v17 = v20;
        v18 = v21;
      }
      MEMORY[0x1BCCE334C](v15, v16, v17, v18);
      sub_1BB872AFC(v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(v31 + 16);
      v23 = *(_QWORD *)(v31 + 24);
      if (v24 >= v23 >> 1)
        sub_1BA7447E8(v23 > 1, v24 + 1, 1);
      *(_QWORD *)(v31 + 16) = v24 + 1;
      v25 = v31 + 16 * v24;
      *(_QWORD *)(v25 + 32) = 539631648;
      *(_QWORD *)(v25 + 40) = 0xE400000000000000;
      v3 = v29;
      result = sub_1BA57FFE8(v7, v9, v11 & 1, v29);
      v7 = result;
      v9 = v26;
      v11 = v27 & 1;
      if (!--v5)
      {
        sub_1BA8CA884(result, v26, v27 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
LABEL_14:
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6A0BA4();
    sub_1BB872904();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v28);
    swift_bridgeObjectRelease();
    return 8237;
  }
  return result;
}

uint64_t sub_1BA90970C(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v7[2];

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  strcpy((char *)v7, "File:\n    - ");
  sub_1BB86C67C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3A0CE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
  sub_1BB87420C();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v4);
  sub_1BA9099A8(a2);
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t sub_1BA90980C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  char v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v12 = 0;
  v13 = 0xE000000000000000;
  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v2 = a1 + 32;
  swift_bridgeObjectRetain();
  do
  {
    sub_1BA4C010C(v2, (uint64_t)v10);
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1BB874704();
    if ((v6 & 1) != 0)
    {
      v3 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFLL);
      if ((v13 & 0x2000000000000000) != 0)
        v3 = (_QWORD *)(HIBYTE(v13) & 0xF);
      sub_1BB872AFC(v3);
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(v10, v11);
      sub_1BB8746EC();
      sub_1BB872AFC(v4);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BB87420C();
      sub_1BB872AFC(v7);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v8);
    }
    sub_1BB872AFC(v5);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    v2 += 40;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_1BA9099A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  __int128 *v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  const char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  void (*v43)(char *, uint64_t);
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD v49[2];

  v2 = sub_1BB873D5C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - v7;
  v9 = sub_1BB873D68();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (__int128 *)((char *)&v45 - v15);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))((char *)&v45 - v15, a1, v9, v14);
  v17 = (*(uint64_t (**)(__int128 *, uint64_t))(v10 + 88))(v16, v9);
  if (v17 == *MEMORY[0x1E0DEC450])
  {
    (*(void (**)(__int128 *, uint64_t))(v10 + 96))(v16, v9);
    sub_1BA909FB4();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, (char *)v16 + *(int *)(v18 + 48), v2);
    v46 = 0;
    v47 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v19 = 0xD000000000000014;
    v20 = "Expected type to be ";
LABEL_5:
    v46 = v19;
    v47 = (unint64_t)(v20 - 32) | 0x8000000000000000;
    sub_1BB874734();
    sub_1BB872AFC(v22);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v23);
LABEL_6:
    v24 = sub_1BB873D44();
    sub_1BA90980C(v24);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v25);
    swift_bridgeObjectRelease();
    v26 = v46;
    v27 = v47;
    sub_1BA90A05C();
    v46 = v26;
    v47 = v27;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = v46;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return v29;
  }
  if (v17 == *MEMORY[0x1E0DEC460])
  {
    (*(void (**)(__int128 *, uint64_t))(v10 + 96))(v16, v9);
    sub_1BA909FB4();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, (char *)v16 + *(int *)(v21 + 48), v2);
    v46 = 0;
    v47 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v19 = 0xD000000000000018;
    v20 = "Missing value with type ";
    goto LABEL_5;
  }
  if (v17 != *MEMORY[0x1E0DEC448])
  {
    if (v17 != *MEMORY[0x1E0DEC458])
    {
      v46 = 0;
      v47 = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v46 = 0x206E776F6E6B6E55;
      v47 = 0xEF0A3A726F727265;
      v49[0] = 0;
      v49[1] = 0xE000000000000000;
      sub_1BB874548();
      v43 = *(void (**)(char *, uint64_t))(v10 + 8);
      v43(v12, v9);
      sub_1BB872AFC(v44);
      swift_bridgeObjectRelease();
      v29 = v46;
      v43((char *)v16, v9);
      return v29;
    }
    (*(void (**)(__int128 *, uint64_t))(v10 + 96))(v16, v9);
    (*(void (**)(char *, __int128 *, uint64_t))(v3 + 32))(v8, v16, v2);
    v46 = 0;
    v47 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v46 = 0xD000000000000012;
    v47 = 0x80000001BB962A40;
    goto LABEL_6;
  }
  (*(void (**)(__int128 *, uint64_t))(v10 + 96))(v16, v9);
  sub_1BA90A154();
  v32 = (char *)v16 + *(int *)(v31 + 48);
  sub_1BA4CECCC(v16, (uint64_t)&v46);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v32, v2);
  __swift_project_boxed_opaque_existential_1(&v46, v48);
  v33 = sub_1BB874704();
  if ((v34 & 1) != 0)
  {
    v49[0] = 0;
    v49[1] = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    strcpy((char *)v49, "Missing key '");
    HIWORD(v49[1]) = -4864;
    __swift_project_boxed_opaque_existential_1(&v46, v48);
    sub_1BB8746EC();
  }
  else
  {
    v35 = v33;
    v49[0] = 0;
    v49[1] = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    strcpy((char *)v49, "Missing index ");
    HIBYTE(v49[1]) = -18;
    v45 = v35;
    sub_1BB87420C();
  }
  sub_1BB872AFC(v36);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v37);
  v38 = sub_1BB873D44();
  sub_1BA90980C(v38);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v39);
  swift_bridgeObjectRelease();
  v40 = v49[0];
  v41 = v49[1];
  sub_1BA90A05C();
  v49[0] = v40;
  v49[1] = v41;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29 = v49[0];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  return v29;
}

void sub_1BA909FB4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AA6A8)
  {
    sub_1BA90A020();
    sub_1BB873D5C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AA6A8);
  }
}

unint64_t sub_1BA90A020()
{
  unint64_t result;

  result = qword_1EF2AA6B0;
  if (!qword_1EF2AA6B0)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2AA6B0);
  }
  return result;
}

uint64_t sub_1BA90A05C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BB873CB4();
  sub_1BB872AFC("Data corrupted at ");
  sub_1BB873D50();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("\nAdditional Info:\n    - ");
  sub_1BB873D2C();
  sub_1BA65DC00(0, &qword_1EF2AA6C0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB872A00();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1BA90A154()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AA6B8)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3A3258);
    sub_1BB873D5C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AA6B8);
  }
}

uint64_t sub_1BA90A1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;
  uint64_t v21;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A35C(0, v3, 0);
    v4 = v21;
    v8 = a1 + 64;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA74E95C(a2, a3, (uint64_t)&v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v18;
      v10 = v19;
      v11 = v20;
      v21 = v4;
      v13 = *(_QWORD *)(v4 + 16);
      v12 = *(_QWORD *)(v4 + 24);
      if (v13 >= v12 >> 1)
      {
        v16 = v19;
        v17 = v18;
        sub_1BAC7A35C(v12 > 1, v13 + 1, 1);
        v10 = v16;
        v9 = v17;
        v4 = v21;
      }
      *(_QWORD *)(v4 + 16) = v13 + 1;
      v14 = v4 + 40 * v13;
      *(_OWORD *)(v14 + 32) = v9;
      *(_OWORD *)(v14 + 48) = v10;
      *(_BYTE *)(v14 + 64) = v11;
      v8 += 40;
      --v3;
    }
    while (v3);
  }
  return v4;
}

void *sub_1BA90A31C(void *a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  __int128 v50[2];
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = (void *)sub_1BB86C478();
  v3 = sub_1BA907794(a1);
  v5 = v4;
  v52 = a1;
  v6 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2BE000);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BA4CECCC(v50, (uint64_t)&v53);
    sub_1BA4AD288(0, &qword_1EF2AA6C8, (uint64_t)&type metadata for DebugFormatErrorModel.Item, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
    v8 = v55;
    v9 = v56;
    __swift_project_boxed_opaque_existential_1(&v53, v55);
    *(_QWORD *)(v7 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    *(_QWORD *)(v7 + 40) = v10;
    v11 = sub_1BB38F48C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v13 = v11[2];
    v12 = v11[3];
    if (v13 >= v12 >> 1)
      v11 = sub_1BB38F48C((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
    v11[2] = v13 + 1;
    v14 = &v11[3 * v13];
    v14[4] = 0x7470697263736544;
    v14[5] = 0xEB000000006E6F69;
    v14[6] = v7;
    v15 = v55;
    v16 = v56;
    __swift_project_boxed_opaque_existential_1(&v53, v55);
    v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
    if (v18)
    {
      v19 = v17;
      v20 = v18;
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v21 + 32) = v19;
      *(_QWORD *)(v21 + 40) = v20;
      v23 = v11[2];
      v22 = v11[3];
      if (v23 >= v22 >> 1)
        v11 = sub_1BB38F48C((_QWORD *)(v22 > 1), v23 + 1, 1, v11);
      v11[2] = v23 + 1;
      v24 = &v11[3 * v23];
      v24[4] = 1953392968;
      v24[5] = 0xE400000000000000;
      v24[6] = v21;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  }
  else
  {
    v51 = 0;
    memset(v50, 0, sizeof(v50));
    sub_1BA604728((uint64_t)v50, (uint64_t)&qword_1EF2CE320, (uint64_t)&unk_1EF2BE000, (uint64_t)&protocol descriptor for FormatError, (uint64_t (*)(_QWORD))sub_1BA65DC00);
    sub_1BA4AD288(0, &qword_1EF2AA6C8, (uint64_t)&type metadata for DebugFormatErrorModel.Item, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
    v26 = objc_msgSend(v2, sel_localizedDescription);
    v27 = sub_1BB8729A0();
    v29 = v28;

    *(_QWORD *)(v25 + 32) = v27;
    *(_QWORD *)(v25 + 40) = v29;
    v11 = sub_1BB38F48C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v31 = v11[2];
    v30 = v11[3];
    if (v31 >= v30 >> 1)
      v11 = sub_1BB38F48C((_QWORD *)(v30 > 1), v31 + 1, 1, v11);
    v11[2] = v31 + 1;
    v32 = &v11[3 * v31];
    v32[4] = 0x7470697263736544;
    v32[5] = 0xEB000000006E6F69;
    v32[6] = v25;
  }
  sub_1BA4AD288(0, &qword_1EF2AA6C8, (uint64_t)&type metadata for DebugFormatErrorModel.Item, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
  v34 = objc_msgSend(v2, sel_domain);
  v35 = sub_1BB8729A0();
  v37 = v36;

  v53 = v35;
  v54 = v37;
  sub_1BB872AFC(v38);
  *(_QWORD *)&v50[0] = objc_msgSend(v2, sel_code);
  sub_1BB87420C();
  sub_1BB872AFC(v39);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v40);
  v41 = v54;
  *(_QWORD *)(v33 + 32) = v53;
  *(_QWORD *)(v33 + 40) = v41;
  v43 = v11[2];
  v42 = v11[3];
  if (v43 >= v42 >> 1)
    v11 = sub_1BB38F48C((_QWORD *)(v42 > 1), v43 + 1, 1, v11);
  v11[2] = v43 + 1;
  v44 = (char *)&v11[3 * v43];
  strcpy(v44 + 32, "Domain + Code");
  *((_WORD *)v44 + 23) = -4864;
  *((_QWORD *)v44 + 6) = v33;
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v45 + 32) = v3;
  *(_QWORD *)(v45 + 40) = v5;
  v47 = v11[2];
  v46 = v11[3];
  if (v47 >= v46 >> 1)
    v11 = sub_1BB38F48C((_QWORD *)(v46 > 1), v47 + 1, 1, v11);
  v11[2] = v47 + 1;
  v48 = &v11[3 * v47];
  v48[4] = 1886221636;
  v48[5] = 0xE400000000000000;
  v48[6] = v45;

  return a1;
}

uint64_t sub_1BA90A848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1EF2AA690, (void (*)(uint64_t))MEMORY[0x1E0DB3620]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for DebugFormatErrorModel.Item()
{
  return &type metadata for DebugFormatErrorModel.Item;
}

uint64_t destroy for FormatOptionBinding()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8NewsFeed19FormatOptionBindingVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatOptionBinding(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatOptionBinding(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatErrorModel.Section()
{
  return &type metadata for DebugFormatErrorModel.Section;
}

id sub_1BA90A9CC()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  result = objc_msgSend(v0, sel_setFormatOptions_, 3955);
  qword_1ED476938 = (uint64_t)v0;
  return result;
}

ValueMetadata *type metadata accessor for FormatJSONDateFormatter.Errors()
{
  return &type metadata for FormatJSONDateFormatter.Errors;
}

uint64_t sub_1BA90AA28()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatRouter()
{
  return objc_opt_self();
}

void sub_1BA90AA74()
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1BB86DA68();
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1BA90AB34()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  void (*v3)(char *, char *, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;

  v6 = swift_projectBox();
  sub_1BA90B280(v6, v4);
  sub_1BB86D774();
  v8 = v7;
  type metadata accessor for GroupLayoutContext();
  sub_1BB86D624();
  sub_1BB02C304(v0, v3, v1, v8);
  (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v5 + 8))(v3, v2);
  return sub_1BA90B2C4(v4);
}

void static FormatVideoNodeContent.== infix(_:_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

BOOL sub_1BA90AE40()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  if (v0 >> 61)
  {
    return 0;
  }
  else
  {
    v3 = swift_projectBox();
    v4 = swift_projectBox();
    sub_1BA90B280(v3, v2);
    sub_1BA90B280(v4, v1);
    swift_retain();
    swift_retain();
    v5 = _s8NewsFeed17FormatRemoteVideoV2eeoiySbAC_ACtFZ_0(v2, v1);
    sub_1BA90B2C4(v1);
    sub_1BA90B2C4(v2);
    swift_release();
    swift_release();
  }
  return v5;
}

uint64_t sub_1BA90B254@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatVideoNodeContent.init(from:)(a1, a2);
}

void sub_1BA90B268(_QWORD *a1)
{
  FormatVideoNodeContent.encode(to:)(a1);
}

uint64_t sub_1BA90B280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatRemoteVideo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BA90B2C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatRemoteVideo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BA90B300(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA829B34();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA90B324()
{
  unint64_t result;

  result = qword_1ED3D09D8;
  if (!qword_1ED3D09D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoNodeContent, &type metadata for FormatVideoNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED3D09D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoNodeContent()
{
  return &type metadata for FormatVideoNodeContent;
}

BOOL static FormatBindingImageExpressionLogic.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatBindingImageExpressionLogic.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatBindingImageExpressionLogic.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BA90B400()
{
  unint64_t result;

  result = qword_1EF2AA6D0;
  if (!qword_1EF2AA6D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingImageExpressionLogic, &type metadata for FormatBindingImageExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2AA6D0);
  }
  return result;
}

unint64_t sub_1BA90B444(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA90B468();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA90B468()
{
  unint64_t result;

  result = qword_1EF2AA6D8;
  if (!qword_1EF2AA6D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingImageExpressionLogic, &type metadata for FormatBindingImageExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2AA6D8);
  }
  return result;
}

unint64_t sub_1BA90B4AC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA820E18();
  a1[2] = sub_1BA90B4E0();
  result = sub_1BA90B400();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA90B4E0()
{
  unint64_t result;

  result = qword_1ED39BD38;
  if (!qword_1ED39BD38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingImageExpressionLogic, &type metadata for FormatBindingImageExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1ED39BD38);
  }
  return result;
}

uint64_t sub_1BA90B524(_QWORD *a1)
{
  return FormatBindingImageExpressionLogic.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatBindingImageExpressionLogic()
{
  return &type metadata for FormatBindingImageExpressionLogic;
}

uint64_t FormatProperty.resolveOptions(pool:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  if ((~v4 & 0xF000000000000007) != 0)
  {
    sub_1BA90C3A4(0, &qword_1ED3B9E20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = type metadata accessor for FormatOption();
    v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
    v11 = (v10 + 32) & ~v10;
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
    v12 = (uint64_t *)(v8 + v11);
    *v12 = v3;
    v12[1] = v2;
    v12[2] = v4;
    v12[3] = 1;
    v13 = v8 + v11 + *(int *)(v9 + 28);
    v14 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  v5 = *(_QWORD *)(a1 + 72);
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_7:
    v8 = MEMORY[0x1E0DEE9D8];
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1BA6E35A8(v3, v2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + (v6 << 6) + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  sub_1BA5E7FF4(v4);
  return v8;
}

uint64_t FormatProperty.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProperty.value.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatProperty.init(identifier:value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

uint64_t sub_1BA90B734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BA90C2B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BA90B758()
{
  sub_1BA5E8068();
  return sub_1BB874710();
}

uint64_t sub_1BA90B780()
{
  sub_1BA5E8068();
  return sub_1BB87471C();
}

uint64_t FormatProperty.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_1BA4CDF6C(0, &qword_1ED39DBD8, (uint64_t (*)(void))sub_1BA5E8068, (uint64_t)&type metadata for FormatProperty.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v11 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA5E8068();
  sub_1BB8746C8();
  v15 = 0;
  v8 = v12;
  sub_1BB87417C();
  if (!v8)
  {
    v13 = v11;
    v14 = 1;
    sub_1BA90BED8();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BA90B900(_QWORD *a1)
{
  return FormatProperty.encode(to:)(a1);
}

uint64_t sub_1BA90B918(uint64_t a1)
{
  return sub_1BA90BCF8(a1, (void (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1BA90B924(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90B930(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90B940(uint64_t a1)
{
  return sub_1BA90B95C(a1, (unint64_t *)&qword_1ED3B3780, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
}

uint64_t sub_1BA90B95C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v8;
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1BB873EA0();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_1BA4CDF6C(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      v8 = sub_1BB872E74();
      *(_QWORD *)(v8 + 16) = a1;
    }
    else
    {
      v8 = MEMORY[0x1E0DEE9D8];
    }
    sub_1BA4CDF6C(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    return v8;
  }
  return result;
}

uint64_t sub_1BA90BA5C(uint64_t a1)
{
  return sub_1BA90B95C(a1, (unint64_t *)&qword_1ED3B3790, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
}

uint64_t sub_1BA90BA78(uint64_t a1)
{
  return sub_1BA90BCF8(a1, sub_1BA709CA4);
}

uint64_t sub_1BA90BA84(uint64_t a1)
{
  return sub_1BA90B95C(a1, (unint64_t *)&qword_1ED3B37D0, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
}

uint64_t sub_1BA90BAA0(uint64_t a1)
{
  return sub_1BA90B95C(a1, (unint64_t *)&qword_1ED3B3740, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
}

uint64_t sub_1BA90BABC(uint64_t a1)
{
  return sub_1BA90B95C(a1, (unint64_t *)&qword_1ED3B3748, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
}

uint64_t sub_1BA90BAD8(uint64_t a1)
{
  return sub_1BA90B95C(a1, (unint64_t *)&qword_1ED3B3760, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
}

uint64_t sub_1BA90BAF4(uint64_t a1)
{
  return sub_1BA90BCF8(a1, (void (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1BA90BB00(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BB0C(uint64_t a1)
{
  return sub_1BA90BCF8(a1, (void (*)(_QWORD))type metadata accessor for FormatOption);
}

uint64_t sub_1BA90BB18(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BB24(uint64_t a1)
{
  return sub_1BA90BCF8(a1, (void (*)(_QWORD))type metadata accessor for FormatCompilerOptions);
}

uint64_t sub_1BA90BB30(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BB3C(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1BB873EA0();
    __break(1u);
  }
  else if (a1)
  {
    sub_1BA6BCC84();
    result = sub_1BB872E74();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1BA90BBD8(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BBE4(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BBF0(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BBFC(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BC08(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BC14(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BC20(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BC2C(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BC38(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BC44(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BC50(uint64_t a1)
{
  return sub_1BA90BC5C(a1);
}

uint64_t sub_1BA90BC5C(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1BB873EA0();
    __break(1u);
  }
  else if (a1)
  {
    result = sub_1BB872E74();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1BA90BCEC(uint64_t a1)
{
  return sub_1BA90BCF8(a1, (void (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
}

uint64_t sub_1BA90BCF8(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1BB873EA0();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      v4 = sub_1BB872E74();
      *(_QWORD *)(v4 + 16) = a1;
    }
    else
    {
      v4 = MEMORY[0x1E0DEE9D8];
    }
    a2(0);
    return v4;
  }
  return result;
}

uint64_t sub_1BA90BDC0(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1BB873EA0();
    __break(1u);
  }
  else if (a1)
  {
    sub_1BA90C3A4(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = sub_1BB872E74();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t _s8NewsFeed14FormatPropertyV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;
  char v6;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  v3 = a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BB874398(), v6 = 0, (v5 & 1) != 0))
  {
    v8 = v3;
    v9 = v2;
    v6 = _s8NewsFeed19FormatPropertyValueO2eeoiySbAC_ACtFZ_0(&v9, &v8);
  }
  return v6 & 1;
}

unint64_t sub_1BA90BED8()
{
  unint64_t result;

  result = qword_1ED39CEA8;
  if (!qword_1ED39CEA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPropertyValue, &type metadata for FormatPropertyValue);
    atomic_store(result, (unint64_t *)&qword_1ED39CEA8);
  }
  return result;
}

unint64_t sub_1BA90BF1C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8350B4();
  a1[2] = sub_1BA89B7F8();
  result = sub_1BA90BF50();
  a1[3] = result;
  return result;
}

unint64_t sub_1BA90BF50()
{
  unint64_t result;

  result = qword_1EF2AA6E0;
  if (!qword_1EF2AA6E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProperty, &type metadata for FormatProperty);
    atomic_store(result, (unint64_t *)&qword_1EF2AA6E0);
  }
  return result;
}

uint64_t destroy for FormatProperty(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((~*(_QWORD *)(a1 + 16) & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

_QWORD *_s8NewsFeed14FormatPropertyVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  swift_bridgeObjectRetain();
  if ((~v4 & 0xF000000000000007) != 0)
    swift_retain();
  a1[2] = v4;
  return a1;
}

_QWORD *assignWithCopy for FormatProperty(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 2;
  v5 = a2[2];
  v6 = v5 & 0xF000000000000007;
  if ((~a1[2] & 0xF000000000000007) != 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *v4 = v5;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1BA90C0E0((uint64_t)(a1 + 2));
    v5 = a2[2];
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
LABEL_6:
    *v4 = v5;
    return a1;
  }
  *v4 = v5;
  swift_retain();
  return a1;
}

uint64_t sub_1BA90C0E0(uint64_t a1)
{
  destroy for SportsDataVisualizationEventStatus();
  return a1;
}

_QWORD *assignWithTake for FormatProperty(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1 + 2;
  v6 = a2[2];
  if ((~a1[2] & 0xF000000000000007) != 0)
  {
    if ((~v6 & 0xF000000000000007) != 0)
    {
      *v5 = v6;
      swift_release();
      return a1;
    }
    sub_1BA90C0E0((uint64_t)(a1 + 2));
  }
  *v5 = v6;
  return a1;
}

ValueMetadata *type metadata accessor for FormatProperty()
{
  return &type metadata for FormatProperty;
}

uint64_t storeEnumTagSinglePayload for FormatProperty.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BA90C1E8 + 4 * byte_1BB8839C1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BA90C21C + 4 * byte_1BB8839BC[v4]))();
}

uint64_t sub_1BA90C21C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA90C224(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BA90C22CLL);
  return result;
}

uint64_t sub_1BA90C238(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BA90C240);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BA90C244(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BA90C24C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatProperty.CodingKeys()
{
  return &type metadata for FormatProperty.CodingKeys;
}

unint64_t sub_1BA90C26C()
{
  unint64_t result;

  result = qword_1EF2AA6E8;
  if (!qword_1EF2AA6E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB883B38, &type metadata for FormatProperty.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AA6E8);
  }
  return result;
}

uint64_t sub_1BA90C2B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1BA90C3A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for FormatOption();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BA90C3FC()
{
  unint64_t result;

  result = qword_1ED3B9960;
  if (!qword_1ED3B9960)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B9960);
  }
  return result;
}

uint64_t sub_1BA90C438(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17[2];
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    sub_1BA682148(*v11, v13);
    sub_1BA9D7B94(v17, v12, v13);
    result = sub_1BA766C18(v17[0], v17[1]);
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t FeedTag.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedTag.Overrides.Image.assetHandle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C010C(v1, a1);
}

uint64_t FeedTag.Overrides.Image.aspectRatio.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

unint64_t FeedTag.Overrides.Image.init(assetHandle:aspectRatio:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a4 + 24) = sub_1BA749984();
  result = sub_1BA7499C0();
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 32) = result;
  *(_QWORD *)(a4 + 40) = a2;
  *(_BYTE *)(a4 + 48) = a3 & 1;
  return result;
}

uint64_t FeedTag.Overrides.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedTag.Overrides.coverImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA90C818(v1 + 16, a1, (unint64_t *)&unk_1EF2AA6F0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
}

uint64_t FeedTag.Overrides.init(name:coverImage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  return sub_1BA6A09F0(a3, (uint64_t)(a4 + 2), (unint64_t *)&unk_1EF2AA6F0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
}

uint64_t FeedTag.tag.getter()
{
  return swift_unknownObjectRetain();
}

void FeedTag.badge.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

void FeedTag.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FeedTag.accessoryText.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void FeedTag.tagTraits.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 64);
}

uint64_t FeedTag.additionalContextMenuOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedTag.name.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v5;
  uint64_t v6;
  id v7;

  sub_1BA90C818(v0 + 80, (uint64_t)&v5, &qword_1ED3A5228, (uint64_t)&type metadata for FeedTag.Overrides);
  v1 = v6;
  if (v6 == 1)
  {
    sub_1BA6ED734((uint64_t)&v5, &qword_1ED3A5228, (uint64_t)&type metadata for FeedTag.Overrides);
    sub_1BA6A955C(v0, (uint64_t)&v5);
LABEL_4:
    v3 = objc_msgSend(v7, sel_name);
    v2 = sub_1BB8729A0();

    goto LABEL_5;
  }
  v2 = v5;
  swift_bridgeObjectRetain();
  sub_1BA90C870((uint64_t)&v5);
  sub_1BA6A955C(v0, (uint64_t)&v5);
  if (!v1)
    goto LABEL_4;
LABEL_5:
  sub_1BA6A94C4((uint64_t)&v5);
  return v2;
}

uint64_t sub_1BA90C818(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1BA4AD288(0, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BA90C870(uint64_t a1)
{
  destroy for FeedTag.Overrides(a1);
  return a1;
}

uint64_t FeedTag.coverImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t *v3;
  ValueMetadata *v4;
  _BYTE *v5;
  id v7;
  _BYTE v8[16];
  id v9;
  uint64_t v10;
  _BYTE v11[8];
  uint64_t v12;
  id v13[17];
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  sub_1BA90C818(v1 + 80, (uint64_t)v11, &qword_1ED3A5228, (uint64_t)&type metadata for FeedTag.Overrides);
  if (v12 == 1)
  {
    v3 = &qword_1ED3A5228;
    v4 = &type metadata for FeedTag.Overrides;
    v5 = v11;
  }
  else
  {
    sub_1BA90C818((uint64_t)v13, (uint64_t)v8, (unint64_t *)&unk_1EF2AA6F0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
    sub_1BA90C870((uint64_t)v11);
    if (v10)
    {
      sub_1BA4C010C((uint64_t)v8, (uint64_t)&v14);
      sub_1BA90CA40((uint64_t)v8);
      goto LABEL_7;
    }
    v3 = (unint64_t *)&unk_1EF2AA6F0;
    v4 = &type metadata for FeedTag.Overrides.Image;
    v5 = v8;
  }
  sub_1BA6ED734((uint64_t)v5, v3, (uint64_t)v4);
  v14 = 0u;
  v15 = 0u;
  v16 = 0;
LABEL_7:
  sub_1BA6A955C(v1, (uint64_t)v11);
  if (*((_QWORD *)&v15 + 1))
  {
    sub_1BA6A94C4((uint64_t)v11);
    return sub_1BA4CECCC(&v14, a1);
  }
  v7 = objc_msgSend(v13[0], sel_coverImageAssetHandle);
  sub_1BA6A955C((uint64_t)v11, (uint64_t)v8);
  if (v7)
  {
    sub_1BA6A94C4((uint64_t)v8);
  }
  else
  {
    v7 = objc_msgSend(v9, sel_feedNavImageAssetHandle);
    sub_1BA6A94C4((uint64_t)v8);
    if (!v7)
    {
      sub_1BA6A94C4((uint64_t)v11);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 32) = 0;
      return sub_1BA728544((uint64_t)&v14);
    }
  }
  *(_QWORD *)(a1 + 24) = sub_1BA749984();
  *(_QWORD *)(a1 + 32) = sub_1BA7499C0();
  *(_QWORD *)a1 = v7;
  sub_1BA6A94C4((uint64_t)v11);
  return sub_1BA728544((uint64_t)&v14);
}

uint64_t sub_1BA90CA40(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t FeedTag.coverImageAspectRatio.getter()
{
  uint64_t v0;
  unint64_t *v1;
  ValueMetadata *v2;
  _BYTE *v3;
  uint64_t v4;
  _QWORD v6[2];
  uint64_t v7;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;

  sub_1BA90C818(v0 + 80, (uint64_t)v6, &qword_1ED3A5228, (uint64_t)&type metadata for FeedTag.Overrides);
  if (v6[1] == 1)
  {
    v1 = &qword_1ED3A5228;
    v2 = &type metadata for FeedTag.Overrides;
    v3 = v6;
LABEL_6:
    sub_1BA6ED734((uint64_t)v3, v1, (uint64_t)v2);
    return 0;
  }
  sub_1BA90C818((uint64_t)&v7, (uint64_t)v8, (unint64_t *)&unk_1EF2AA6F0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
  sub_1BA90C870((uint64_t)v6);
  if (!v9)
  {
    v1 = (unint64_t *)&unk_1EF2AA6F0;
    v2 = &type metadata for FeedTag.Overrides.Image;
    v3 = v8;
    goto LABEL_6;
  }
  v4 = v10;
  sub_1BA90CA40((uint64_t)v8);
  return v4;
}

NewsFeed::FeedTag::Traits __swiftcall FeedTag.Traits.init(rawValue:)(NewsFeed::FeedTag::Traits rawValue)
{
  NewsFeed::FeedTag::Traits *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FeedTag.Traits.followed.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FeedTag.Traits.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_1BA90CB4C(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FeedTag.init(identifier:tag:badge:accessoryText:tagTraits:overrides:additionalContextMenuOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v11;
  uint64_t v12;
  uint64_t result;

  v11 = *a4;
  v12 = *a7;
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = v11;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 32) = 0;
  *(_BYTE *)(a9 + 40) = 0;
  *(_QWORD *)(a9 + 64) = v12;
  result = sub_1BA6A09F0(a8, a9 + 80, &qword_1ED3A5228, (uint64_t)&type metadata for FeedTag.Overrides);
  *(_QWORD *)(a9 + 72) = a10;
  return result;
}

uint64_t FeedTag.copy(contextMenuOptions:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v6 = *((_BYTE *)v1 + 24);
  v8 = v1[6];
  v7 = v1[7];
  v9 = v1[8];
  sub_1BA90C818((uint64_t)(v1 + 10), a1 + 80, &qword_1ED3A5228, (uint64_t)&type metadata for FeedTag.Overrides);
  v10 = v1[9];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = swift_bridgeObjectRetain();
  result = sub_1BA67DA1C(v11, v10, sub_1BA9D7058);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = result;
  return result;
}

void FeedTag.dragItem.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*(id *)(v1 + 16), sel_identifier);
  if (!v3)
  {
    sub_1BB8729A0();
    v3 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_, v3);

  if (v4)
  {
    sub_1BB872AA8();
    v5 = sub_1BB873564();
    swift_bridgeObjectRelease();
    FeedTag.name.getter();
    sub_1BB8714AC();
    if (v5)

    v6 = sub_1BB8714B8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
  else
  {
    __break(1u);
  }
}

BOOL FeedTag.traits.getter@<W0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  return FCTagProviding.traits.getter(a1);
}

double FeedTag.kind.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BB883BB0;
  return result;
}

BOOL sub_1BA90CE08@<W0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  return FCTagProviding.traits.getter(a1);
}

void sub_1BA90CE38(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
}

double sub_1BA90CE4C@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BB883BB0;
  return result;
}

uint64_t sub_1BA90CE5C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t FeedTag.debugIdentifier.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t sub_1BA90CF04()
{
  return 0;
}

uint64_t FeedTag.debugSourceName.getter()
{
  return 0;
}

uint64_t sub_1BA90CF1C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_name);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t FeedTag.debugTitle.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_name);
  v2 = sub_1BB8729A0();

  return v2;
}

id FeedTag.debugAssetHandle.getter()
{
  uint64_t v0;
  id v1;
  _BYTE *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  _BYTE v8[16];
  id v9;
  _BYTE v10[16];
  id v11;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_feedNavImageAssetHandle);
  sub_1BA6A955C(v0, (uint64_t)v10);
  if (!v1)
  {
    v3 = objc_msgSend(v11, sel_asSports);
    if (v3
      && (v4 = objc_msgSend(v3, sel_sportsTheme), swift_unknownObjectRelease(), v4))
    {
      v1 = objc_msgSend(v4, sel_sportsLogoImageAssetHandle);
      swift_unknownObjectRelease();
      sub_1BA6A955C((uint64_t)v10, (uint64_t)v8);
      if (v1)
      {
LABEL_12:
        sub_1BA6A94C4((uint64_t)v10);
        v2 = v8;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1BA6A955C((uint64_t)v10, (uint64_t)v8);
    }
    v5 = objc_msgSend(v9, sel_asSports);
    v1 = v5;
    if (v5)
    {
      v6 = objc_msgSend(v5, sel_sportsTheme);
      swift_unknownObjectRelease();
      if (v6)
      {
        v1 = objc_msgSend(v6, sel_sportsLogoImageCompactAssetHandle);
        swift_unknownObjectRelease();
      }
      else
      {
        v1 = 0;
      }
    }
    goto LABEL_12;
  }
  v2 = v10;
LABEL_13:
  sub_1BA6A94C4((uint64_t)v2);
  return v1;
}

uint64_t FeedTag.debugScoreProfile.getter()
{
  return 0;
}

uint64_t _s8NewsFeed0B3TagV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  char v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _BYTE v23[152];
  _BYTE v24[152];
  _BYTE v25[64];
  uint64_t v26;
  _BYTE v27[64];
  uint64_t v28;
  _BYTE v29[16];
  id v30;
  _BYTE v31[16];
  id v32;

  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BA6A955C((uint64_t)a1, (uint64_t)v31);
    sub_1BA6A955C((uint64_t)a2, (uint64_t)v29);
  }
  else
  {
    v5 = sub_1BB874398();
    sub_1BA6A955C((uint64_t)a1, (uint64_t)v31);
    sub_1BA6A955C((uint64_t)a2, (uint64_t)v29);
    if ((v5 & 1) == 0)
    {
      sub_1BA6A94C4((uint64_t)v31);
      sub_1BA6A94C4((uint64_t)v29);
      sub_1BA6A955C((uint64_t)a1, (uint64_t)v27);
      sub_1BA6A955C((uint64_t)a2, (uint64_t)v25);
LABEL_16:
      sub_1BA6A94C4((uint64_t)v25);
      sub_1BA6A94C4((uint64_t)v27);
      sub_1BA6A955C((uint64_t)a1, (uint64_t)v24);
      sub_1BA6A955C((uint64_t)a2, (uint64_t)v23);
      goto LABEL_17;
    }
  }
  v6 = objc_msgSend(v32, sel_identifier);
  v7 = sub_1BB8729A0();
  v9 = v8;

  v10 = objc_msgSend(v30, sel_identifier);
  v11 = sub_1BB8729A0();
  v13 = v12;

  if (v7 == v11 && v9 == v13)
  {
    swift_bridgeObjectRelease_n();
    sub_1BA6A94C4((uint64_t)v31);
    sub_1BA6A94C4((uint64_t)v29);
    sub_1BA6A955C((uint64_t)a1, (uint64_t)v27);
    sub_1BA6A955C((uint64_t)a2, (uint64_t)v25);
  }
  else
  {
    v14 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6A94C4((uint64_t)v31);
    sub_1BA6A94C4((uint64_t)v29);
    sub_1BA6A955C((uint64_t)a1, (uint64_t)v27);
    sub_1BA6A955C((uint64_t)a2, (uint64_t)v25);
    if ((v14 & 1) == 0)
      goto LABEL_16;
  }
  v15 = v28;
  v16 = v26;
  sub_1BA6A94C4((uint64_t)v25);
  sub_1BA6A94C4((uint64_t)v27);
  sub_1BA6A955C((uint64_t)a1, (uint64_t)v24);
  sub_1BA6A955C((uint64_t)a2, (uint64_t)v23);
  if (v15 != v16)
  {
LABEL_17:
    v21 = 0;
    goto LABEL_18;
  }
  v17 = FeedTag.name.getter();
  v19 = v18;
  if (v17 == FeedTag.name.getter() && v19 == v20)
  {
    swift_bridgeObjectRelease_n();
    v21 = 1;
  }
  else
  {
    v21 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_18:
  sub_1BA6A94C4((uint64_t)v23);
  sub_1BA6A94C4((uint64_t)v24);
  return v21 & 1;
}

unint64_t sub_1BA90D3EC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA90D410();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BA90D410()
{
  unint64_t result;

  result = qword_1EF2AA700;
  if (!qword_1EF2AA700)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedTag.Traits, &type metadata for FeedTag.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2AA700);
  }
  return result;
}

unint64_t sub_1BA90D458()
{
  unint64_t result;

  result = qword_1EF2AA708;
  if (!qword_1EF2AA708)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedTag.Traits, &type metadata for FeedTag.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2AA708);
  }
  return result;
}

unint64_t sub_1BA90D4A0()
{
  unint64_t result;

  result = qword_1EF2AA710;
  if (!qword_1EF2AA710)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedTag.Traits, &type metadata for FeedTag.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2AA710);
  }
  return result;
}

unint64_t sub_1BA90D4E8()
{
  unint64_t result;

  result = qword_1ED3AC1B8;
  if (!qword_1ED3AC1B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedTag.Traits, &type metadata for FeedTag.Traits);
    atomic_store(result, (unint64_t *)&qword_1ED3AC1B8);
  }
  return result;
}

unint64_t sub_1BA90D530()
{
  unint64_t result;

  result = qword_1ED3AC1C0;
  if (!qword_1ED3AC1C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedTag.Traits, &type metadata for FeedTag.Traits);
    atomic_store(result, (unint64_t *)&qword_1ED3AC1C0);
  }
  return result;
}

uint64_t assignWithCopy for FeedTag(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a1 + 80);
  v6 = (_OWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88) == 1)
  {
    if (v7 == 1)
    {
      *v5 = *v6;
      v8 = *(_OWORD *)(a2 + 96);
      v9 = *(_OWORD *)(a2 + 112);
      v10 = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v9;
      *(_OWORD *)(a1 + 128) = v10;
      *(_OWORD *)(a1 + 96) = v8;
      return a1;
    }
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v14 = a1 + 96;
    v15 = (__int128 *)(a2 + 96);
    v16 = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    if (v16)
    {
      *(_QWORD *)(a1 + 120) = v16;
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))(a1 + 96, a2 + 96, v16);
LABEL_13:
      v19 = *(_BYTE *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_BYTE *)(a1 + 144) = v19;
      return a1;
    }
    goto LABEL_14;
  }
  if (v7 == 1)
  {
    sub_1BA90C870(a1 + 80);
    *v5 = *v6;
    v12 = *(_OWORD *)(a2 + 112);
    v11 = *(_OWORD *)(a2 + 128);
    v13 = *(_OWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 128) = v11;
    *(_OWORD *)(a1 + 96) = v13;
    return a1;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a1 + 96;
  v15 = (__int128 *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 120);
  if (!*(_QWORD *)(a1 + 120))
  {
    if (v17)
    {
      *(_QWORD *)(a1 + 120) = v17;
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))(a1 + 96, a2 + 96, v17);
      goto LABEL_13;
    }
LABEL_14:
    v20 = *v15;
    v21 = v15[1];
    v22 = v15[2];
    *(_BYTE *)(v14 + 48) = *((_BYTE *)v15 + 48);
    *(_OWORD *)(v14 + 16) = v21;
    *(_OWORD *)(v14 + 32) = v22;
    *(_OWORD *)v14 = v20;
    return a1;
  }
  if (v17)
  {
    __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
    v18 = *(_QWORD *)(a2 + 136);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v18;
  }
  else
  {
    sub_1BA90CA40(a1 + 96);
    v24 = *(_OWORD *)(a2 + 112);
    v23 = *(_OWORD *)(a2 + 128);
    v25 = *v15;
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v24;
    *(_OWORD *)(a1 + 128) = v23;
    *(_OWORD *)v14 = v25;
  }
  return a1;
}

__n128 __swift_memcpy145_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for FeedTag(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 88) != 1)
  {
    v7 = *(_QWORD *)(a2 + 88);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v7;
      swift_bridgeObjectRelease();
      v11 = (_OWORD *)(a1 + 96);
      v12 = (_OWORD *)(a2 + 96);
      if (*(_QWORD *)(a1 + 120))
      {
        if (*(_QWORD *)(a2 + 120))
        {
          __swift_destroy_boxed_opaque_existential_1(a1 + 96);
          v13 = *(_OWORD *)(a2 + 112);
          *v11 = *v12;
          *(_OWORD *)(a1 + 112) = v13;
          *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
          *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
          *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
          return a1;
        }
        sub_1BA90CA40(a1 + 96);
      }
      v14 = *(_OWORD *)(a2 + 112);
      *v11 = *v12;
      *(_OWORD *)(a1 + 112) = v14;
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      return a1;
    }
    sub_1BA90C870(a1 + 80);
  }
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedTag(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 145))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedTag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 144) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 145) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 145) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t destroy for FeedTag.Overrides(uint64_t a1)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  return result;
}

uint64_t initializeWithCopy for FeedTag.Overrides(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 16;
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  else
  {
    v8 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(v5 + 32);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(v5 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for FeedTag.Overrides(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      v7 = *(_QWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v7;
    }
    else
    {
      sub_1BA90CA40(a1 + 16);
      v10 = *(_OWORD *)(a2 + 32);
      v9 = *(_OWORD *)(a2 + 48);
      v11 = *v5;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)(a1 + 48) = v9;
      *v4 = v11;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
    v8 = *(_BYTE *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 64) = v8;
  }
  else
  {
    v12 = *v5;
    v13 = *(_OWORD *)(a2 + 32);
    v14 = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v14;
    *v4 = v12;
  }
  return a1;
}

uint64_t assignWithTake for FeedTag.Overrides(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a1 + 16);
  v6 = (_OWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 40))
    goto LABEL_5;
  if (!*(_QWORD *)(a2 + 40))
  {
    sub_1BA90CA40(a1 + 16);
LABEL_5:
    v8 = *(_OWORD *)(a2 + 32);
    *v5 = *v6;
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    return a1;
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *v5 = *v6;
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedTag.Overrides(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedTag.Overrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedTag.Overrides()
{
  return &type metadata for FeedTag.Overrides;
}

uint64_t initializeWithCopy for FeedTag.Overrides.Image(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for FeedTag.Overrides.Image(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  return a1;
}

uint64_t assignWithTake for FeedTag.Overrides.Image(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedTag.Overrides.Image(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedTag.Overrides.Image(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedTag.Overrides.Image()
{
  return &type metadata for FeedTag.Overrides.Image;
}

ValueMetadata *type metadata accessor for FeedTag.Traits()
{
  return &type metadata for FeedTag.Traits;
}

uint64_t sub_1BA90DEA0(uint64_t a1, uint64_t a2)
{
  return sub_1BA90DEB4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization, (void (*)(char *, char *))sub_1BA9DA054);
}

uint64_t sub_1BA90DEB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v8 = a3(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - v13;
  v20 = a2;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v17 = *(_QWORD *)(v12 + 72);
    do
    {
      sub_1BA4C2DD8(v16, (uint64_t)v10, a3);
      a4(v14, v10);
      sub_1BA4A2E80((uint64_t)v14, a3);
      v16 += v17;
      --v15;
    }
    while (v15);
    return v20;
  }
  return a2;
}

_QWORD *sub_1BA90DFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t inited;
  void *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47[10];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v57;
  _OWORD v58[9];
  char v59;
  uint64_t v60;

  v60 = *MEMORY[0x1E0C80C00];
  sub_1BA8C88C8(0);
  v45 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA90C818(a2, (uint64_t)&v48, &qword_1ED3C1098, (uint64_t)&type metadata for FeedTag);
  if (*((_QWORD *)&v48 + 1))
  {
    v43 = a1;
    v58[6] = v54;
    v58[7] = v55;
    v58[8] = v56;
    v58[2] = v50;
    v58[3] = v51;
    v59 = v57;
    v58[4] = v52;
    v58[5] = v53;
    v58[0] = v48;
    v58[1] = v49;
    v7 = (void *)v49;
    sub_1BA8EDAAC();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    *((_QWORD *)&v49 + 1) = &type metadata for FeedTag;
    *(_QWORD *)&v50 = sub_1BA6A96BC();
    *(_QWORD *)&v48 = swift_allocObject();
    sub_1BA6A955C((uint64_t)v58, v48 + 16);
    v42 = v7;
    swift_unknownObjectRetain();
    sub_1BA7592C4(&v48, v47);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
    v8 = v47[0];
    v47[0] = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, 0, 0);
    v9 = v47[0];
    if (v8)
    {
      v44 = v6 + 2;
      do
      {
        *(_QWORD *)&v48 = 91;
        *((_QWORD *)&v48 + 1) = 0xE100000000000000;
        v46 = (_QWORD *)(v8 & -v8);
        v46 = sub_1BA78E0E8();
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA6A0BA4();
        sub_1BB872904();
        swift_bridgeObjectRelease();
        sub_1BB872AFC(v10);
        swift_bridgeObjectRelease();
        sub_1BB872AFC(v11);
        v12 = sub_1BA9C0430(1uLL, v48, *((unint64_t *)&v48 + 1));
        v14 = v13;
        swift_bridgeObjectRelease();
        if (__OFSUB__(sub_1BB873A44(), 1))
        {
          __break(1u);
LABEL_16:
          __break(1u);
        }
        v15 = sub_1BB873A38();
        if ((v16 & 1) != 0)
          v17 = v14;
        else
          v17 = v15;
        if (v17 >> 14 < v12 >> 14)
          goto LABEL_16;
        v18 = sub_1BB873A68();
        v20 = v19;
        v22 = v21;
        v24 = v23;
        swift_bridgeObjectRelease();
        v25 = MEMORY[0x1BCCE334C](v18, v20, v22, v24);
        v27 = v26;
        swift_bridgeObjectRelease();
        v28 = type metadata accessor for FormatInspectionItem(0);
        v29 = (uint64_t *)((char *)v6 + *(int *)(v28 + 24));
        *v29 = 0;
        v29[1] = 0xE000000000000000;
        v30 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
        *v6 = v25;
        v6[1] = v27;
        v31 = v44;
        *v44 = 0;
        v31[1] = 0;
        v32 = (char *)v6 + *(int *)(v28 + 28);
        *(_QWORD *)v32 = 0;
        *((_QWORD *)v32 + 1) = 0;
        v32[16] = -1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v6, 0, 1, v28);
        v47[0] = v9;
        v34 = *(_QWORD *)(v9 + 16);
        v33 = *(_QWORD *)(v9 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_1BAC79E1C(v33 > 1, v34 + 1, 1);
          v9 = v47[0];
        }
        v8 ^= v8 & -v8;
        *(_QWORD *)(v9 + 16) = v34 + 1;
        sub_1BA89EB4C((uint64_t)v6, v9+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v34);
      }
      while (v8);
    }
    v35 = (_QWORD *)inited;
    sub_1BAF89090(0x737469617254, 0xE600000000000000, 0, 0, v9, &v48);
    swift_release();
    v35[7] = &type metadata for FormatInspectionGroup;
    v35[8] = &off_1E72D2F60;
    v36 = swift_allocObject();
    v35[4] = v36;
    *(_QWORD *)(v36 + 48) = v50;
    v37 = v49;
    *(_OWORD *)(v36 + 16) = v48;
    *(_OWORD *)(v36 + 32) = v37;
    v38 = sub_1BB1F5C20(v43, v42);
    swift_setDeallocating();
    sub_1BA65DC00(0, &qword_1EF2ABC80, (unint64_t *)&qword_1EF2A9760);
    swift_arrayDestroy();
    swift_unknownObjectRelease();
    sub_1BA6A94C4((uint64_t)v58);
  }
  else
  {
    sub_1BA6ED734((uint64_t)&v48, &qword_1ED3C1098, (uint64_t)&type metadata for FeedTag);
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  return v38;
}

uint64_t sub_1BA90E4E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

uint64_t sub_1BA90E540()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BA90E574@<X0>(uint64_t a1@<X4>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86F778();
  BlueprintItem<>.feedItem.getter(v7, a1);
  FeedItem.identifier.getter();
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
  v8 = sub_1BB872B5C();
  result = swift_bridgeObjectRelease();
  v10 = 0;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  if ((v8 & 1) != 0)
  {
    BlueprintItem<>.feedItem.getter(v7, a1);
    FeedItem.identifier.getter();
    v10 = v14;
    v11 = v15;
    result = sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
    v13 = MEMORY[0x1E0DEE9D8];
    v12 = MEMORY[0x1E0DEE9E8];
  }
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = 0;
  a2[5] = 0;
  return result;
}

uint64_t sub_1BA90E6D0@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, _BYTE *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[144];
  uint64_t v34[17];
  char v35;

  v25 = a2;
  v26 = a4;
  v27 = a1;
  v28 = a3;
  v29 = a5;
  v5 = sub_1BB86F778();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6F08], v5);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6EF8], v5);
  v6 = sub_1BB86E38C();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3DB8], v6);
  v7 = sub_1BB873CD8();
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - v8;
  sub_1BA4AD288(255, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v10 = sub_1BB873E1C();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEC858], v10);
  v11 = sub_1BB873F18();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DECCA8], v11);
  v12 = sub_1BB873E1C();
  v23 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - v13;
  sub_1BB872C04();
  v15 = (_QWORD *)swift_allocObject();
  v16 = v28;
  v15[2] = v25;
  v15[3] = v16;
  v17 = v27;
  v15[4] = v26;
  v15[5] = v17;
  v18 = v17;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEC330], v7);
  sub_1BB873FC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
  v32 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3DC0], v6);
  v19 = MEMORY[0x1E0DEC860];
  v31 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEC860], v10, &v32);
  v30 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DECCB0], v11, &v31);
  MEMORY[0x1BCCE5B24](v19, v12, &v30);
  sub_1BB873144();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v12);
  sub_1BA6A09F0((uint64_t)v34, (uint64_t)v33, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  sub_1BA6A09F0((uint64_t)v33, (uint64_t)v34, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  result = sub_1BA84DAF0(v34);
  if ((_DWORD)result == 1)
  {
    v21 = 0;
  }
  else
  {
    result = sub_1BA90EECC((uint64_t)v33);
    v21 = v35;
  }
  *v29 = v21;
  return result;
}

uint64_t sub_1BA90E9FC@<X0>(void *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _OWORD v20[7];
  _OWORD v21[2];
  _BYTE v22[144];
  _OWORD v23[7];
  _OWORD v24[2];

  v6 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86F778();
  BlueprintItem<>.feedItem.getter(v9, a2);
  FeedItem.feedIssue.getter((uint64_t)v20);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedItem);
  sub_1BA6A09F0((uint64_t)v20, (uint64_t)v22, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  sub_1BA6A09F0((uint64_t)v22, (uint64_t)v23, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  if (sub_1BA84DAF0((uint64_t *)v23) == 1)
    goto LABEL_8;
  v10 = objc_msgSend(*(id *)&v23[0], sel_identifier);
  v11 = sub_1BB8729A0();
  v13 = v12;

  v14 = objc_msgSend(a1, sel_identifier);
  v15 = sub_1BB8729A0();
  v17 = v16;

  if (v11 != v15 || v13 != v17)
  {
    v18 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) != 0)
      goto LABEL_6;
    sub_1BA90EECC((uint64_t)v22);
LABEL_8:
    sub_1BA90EFB8(v20);
    return sub_1BA6A09F0((uint64_t)v20, a3, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  }
  swift_bridgeObjectRelease_n();
LABEL_6:
  v20[6] = v23[6];
  v21[0] = v24[0];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v24 + 9);
  v20[2] = v23[2];
  v20[3] = v23[3];
  v20[4] = v23[4];
  v20[5] = v23[5];
  v20[0] = v23[0];
  v20[1] = v23[1];
  nullsub_1(v20);
  return sub_1BA6A09F0((uint64_t)v20, a3, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
}

uint64_t sub_1BA90EC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[7];
  char v25;
  void *v26;
  char v27;
  void *v28;

  v4 = (int *)type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v24[-v8];
  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for FormatWebEmbed.Resolved();
  sub_1BA4C2DD8(a1 + *(int *)(v13 + 36), (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
  sub_1BA6C5A68();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v14) == 1)
  {
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
    v17 = type metadata accessor for FeedHeadline(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  else
  {
    sub_1BB86ED1C();
    v19 = v26;
    (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v12, v15);
    v20 = sub_1BB871B24();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
    v28 = 0;
    v26 = 0;
    v27 = 1;
    v25 = 0;
    v21 = (char *)v6 + v4[6];
    v22 = type metadata accessor for SharedItem();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    *v6 = 258;
    *((_BYTE *)v6 + v4[7]) = 1;
    *((_BYTE *)v6 + v4[8]) = 0;
    *((_BYTE *)v6 + v4[9]) = 0;
    *((_BYTE *)v6 + v4[10]) = 0;
    FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v19, 0, &v25, (uint64_t)v9, (uint64_t)v6, &v28, a2, (uint64_t)&v26);
    v23 = type metadata accessor for FeedHeadline(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 0, 1, v23);
  }
}

