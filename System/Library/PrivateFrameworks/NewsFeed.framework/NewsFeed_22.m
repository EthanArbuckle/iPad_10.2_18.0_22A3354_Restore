uint64_t SportsDataVisualizationEventRequest.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1BB8745CC();
  if ((v3 & 1) != 0)
  {
    sub_1BA98B668(v1, v2, 1);
  }
  else
  {
    sub_1BA98B668(v1, v2, 0);
    v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    sub_1BB8729A0();

    sub_1BA98B5E4(v1, v2, 0);
    sub_1BA98B5E4(v1, v2, 0);
  }
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB27B7D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_1BA98B668(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), 1);
  }
  else
  {
    sub_1BA98B668(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), 0);
    v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    sub_1BB8729A0();

    sub_1BA98B5E4(v2, v1, 0);
    sub_1BA98B5E4(v2, v1, 0);
  }
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB27B8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  id v4;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_1BB8745CC();
  if ((v3 & 1) != 0)
  {
    sub_1BA98B668(v1, v2, 1);
  }
  else
  {
    sub_1BA98B668(v1, v2, 0);
    v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    sub_1BB8729A0();

    sub_1BA98B5E4(v1, v2, 0);
    sub_1BA98B5E4(v1, v2, 0);
  }
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t _s8NewsFeed35SportsDataVisualizationEventRequestV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  v8 = *(_QWORD *)a1;
  if ((v4 & 1) != 0)
  {
    sub_1BA98B668(v8, v3, 1);
    v9 = v3;
    if ((v7 & 1) == 0)
      goto LABEL_3;
  }
  else
  {
    v14 = swift_unknownObjectRetain();
    sub_1BA98B668(v14, v3, 0);
    v15 = objc_msgSend(v2, sel_identifier);
    v16 = sub_1BB8729A0();
    v9 = v17;

    sub_1BA98B5E4((uint64_t)v2, v3, 0);
    sub_1BA98B5E4((uint64_t)v2, v3, 0);
    v2 = (void *)v16;
    if ((v7 & 1) == 0)
    {
LABEL_3:
      sub_1BA98B668((uint64_t)v5, v6, v7);
      sub_1BA98B668((uint64_t)v5, v6, v7);
      v10 = objc_msgSend(v5, sel_identifier);
      v11 = sub_1BB8729A0();
      v13 = v12;

      sub_1BA98B5E4((uint64_t)v5, v6, v7);
      sub_1BA98B5E4((uint64_t)v5, v6, v7);
      if (v2 != (void *)v11)
        goto LABEL_9;
      goto LABEL_7;
    }
  }
  sub_1BA98B668((uint64_t)v5, v6, v7);
  v13 = v6;
  if (v2 != v5)
  {
LABEL_9:
    v18 = sub_1BB874398();
    goto LABEL_10;
  }
LABEL_7:
  if (v9 != v13)
    goto LABEL_9;
  v18 = 1;
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18 & 1;
}

unint64_t sub_1BB27BB1C()
{
  unint64_t result;

  result = qword_1EF2BF980;
  if (!qword_1EF2BF980)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualizationEventRequest, &type metadata for SportsDataVisualizationEventRequest);
    atomic_store(result, (unint64_t *)&qword_1EF2BF980);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventRequest()
{
  return &type metadata for SportsDataVisualizationEventRequest;
}

uint64_t destroy for SportsDataVisualizationAllRequest.Content(uint64_t a1)
{
  return sub_1BA98B5E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed33SportsDataVisualizationAllRequestC7ContentOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA98B668(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SportsDataVisualizationAllRequest.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA98B668(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA98B5E4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationAllRequest.Content(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA98B5E4(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationEventRequest.Content()
{
  return &type metadata for SportsDataVisualizationEventRequest.Content;
}

uint64_t PuzzleResource.init(puzzle:indexFileURL:dataFileURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v11)(char *, uint64_t, uint64_t);

  *a4 = a1;
  v7 = type metadata accessor for PuzzleResource();
  v8 = (char *)a4 + *(int *)(v7 + 20);
  v9 = sub_1BB86C67C();
  v11 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v11(v8, a2, v9);
  return ((uint64_t (*)(char *, uint64_t, uint64_t))v11)((char *)a4 + *(int *)(v7 + 24), a3, v9);
}

uint64_t type metadata accessor for PuzzleResource()
{
  uint64_t result;

  result = qword_1EF2BF9E0;
  if (!qword_1EF2BF9E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PuzzleResource.puzzle.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t PuzzleResource.indexFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleResource() + 20);
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PuzzleResource.dataFileURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PuzzleResource() + 24);
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

unint64_t PuzzleResource.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  type metadata accessor for PuzzleResource();
  sub_1BB86C67C();
  sub_1BAAC6DFC();
  sub_1BB87420C();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB87420C();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v3);
  return 0xD00000000000001DLL;
}

char *initializeBufferWithCopyOfBuffer for PuzzleResource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (char *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = (char *)a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C67C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_unknownObjectRetain();
    v12(v9, v10, v11);
    v12(&v7[*(int *)(a3 + 24)], (char *)a2 + *(int *)(a3 + 24), v11);
  }
  return v7;
}

uint64_t destroy for PuzzleResource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  swift_unknownObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86C67C();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 24), v5);
}

char *initializeWithCopy for PuzzleResource(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BB86C67C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_unknownObjectRetain();
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *assignWithCopy for PuzzleResource(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BB86C67C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *initializeWithTake for PuzzleResource(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BB86C67C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *assignWithTake for PuzzleResource(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BB86C67C();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleResource()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB27C29C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleResource()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB27C324(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86C67C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB27C398()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FormatTextNodeAttachment.scaled.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA69C808(v2, v3, v4);
}

void FormatTextNodeAttachment.alignment.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

uint64_t FormatTextNodeAttachment.image.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

_BYTE *FormatTextNodeAttachment.alignment.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = *result;
  return result;
}

uint64_t (*FormatTextNodeAttachment.alignment.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB27C458(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t result;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_BYTE *)(a2 + 32);
  sub_1BA69C808(*(_QWORD *)a1, v4, v5);
  result = sub_1BA69C828(v6, v7, v8);
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_BYTE *)(a2 + 32) = v5;
  return result;
}

uint64_t FormatTextNodeAttachment.scaled.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_1BA69C828(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  return result;
}

uint64_t (*FormatTextNodeAttachment.scaled.modify())(_QWORD)
{
  return nullsub_1;
}

void static FormatCodingBaselineAttachmentAlignmentStrategy.defaultValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t static FormatCodingBaselineAttachmentAlignmentStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t _s8NewsFeed24FormatTextNodeAttachmentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v16;
  char v18;
  unint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 32);
  v7 = *(unsigned __int8 *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(unsigned __int8 *)(a2 + 32);
  v19 = *(_QWORD *)a2;
  v20 = v2;
  if (!static FormatSyncImageContent.== infix(_:_:)(&v20, &v19))
    return 0;
  if (v3)
    v11 = 0x61437265746E6563;
  else
    v11 = 0x656E696C65736162;
  if (v3)
    v12 = 0xEF74686769654870;
  else
    v12 = 0xE800000000000000;
  if (v7)
    v13 = 0x61437265746E6563;
  else
    v13 = 0x656E696C65736162;
  if (v7)
    v14 = 0xEF74686769654870;
  else
    v14 = 0xE800000000000000;
  if (v11 == v13 && v12 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v16 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
      return 0;
  }
  sub_1BA69C808(v4, v5, v6);
  sub_1BA69C808(v8, v9, v10);
  v18 = sub_1BB807F7C(v4, v5, v6, v8, v9, v10);
  sub_1BA69C828(v8, v9, v10);
  sub_1BA69C828(v4, v5, v6);
  return v18 & 1;
}

unint64_t sub_1BB27C694(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB27C6B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB27C6B8()
{
  unint64_t result;

  result = qword_1EF2BFA20;
  if (!qword_1EF2BFA20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAttachment, &type metadata for FormatTextNodeAttachment);
    atomic_store(result, (unint64_t *)&qword_1EF2BFA20);
  }
  return result;
}

unint64_t sub_1BB27C6FC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6468AC();
  a1[2] = sub_1BA6353F4();
  result = sub_1BB27C730();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB27C730()
{
  unint64_t result;

  result = qword_1EF2BFA28;
  if (!qword_1EF2BFA28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAttachment, &type metadata for FormatTextNodeAttachment);
    atomic_store(result, (unint64_t *)&qword_1EF2BFA28);
  }
  return result;
}

unint64_t sub_1BB27C774(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB27C798();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB27C798()
{
  unint64_t result;

  result = qword_1EF2BFA30;
  if (!qword_1EF2BFA30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingBaselineAttachmentAlignmentStrategy, &type metadata for FormatCodingBaselineAttachmentAlignmentStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2BFA30);
  }
  return result;
}

uint64_t sub_1BB27C7E4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 8);
  return result;
}

_BYTE *sub_1BB27C7F0(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 8) = *result;
  return result;
}

uint64_t sub_1BB27C7FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = v4;
  return sub_1BA69C808(v3, v2, v4);
}

uint64_t destroy for FormatTextNodeAttachment(uint64_t a1)
{
  swift_release();
  return sub_1BA69C828(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for FormatTextNodeAttachment(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  swift_retain();
  sub_1BA69C808(v3, v4, v5);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatTextNodeAttachment(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *((_BYTE *)v2 + 8);
  v4 = v2[2];
  v5 = v2[3];
  LOBYTE(v2) = *((_BYTE *)v2 + 32);
  sub_1BA69C808(v4, v5, (char)v2);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = (_BYTE)v2;
  sub_1BA69C828(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatTextNodeAttachment(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = v4;
  sub_1BA69C828(v5, v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeAttachment()
{
  return &type metadata for FormatTextNodeAttachment;
}

ValueMetadata *type metadata accessor for FormatCodingBaselineAttachmentAlignmentStrategy()
{
  return &type metadata for FormatCodingBaselineAttachmentAlignmentStrategy;
}

_QWORD *sub_1BB27C9C8(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

uint64_t sub_1BB27CA04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t *v21;
  void (*v22)(uint64_t);
  __int128 *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  __int128 v43;
  uint64_t v44;
  _BYTE v45[40];

  v42 = a1;
  sub_1BA4A3FB4(0, &qword_1ED3B56D0, (void (*)(uint64_t))type metadata accessor for GroupLayoutContext);
  MEMORY[0x1E0C80A78](v2);
  v4 = (__int128 *)((char *)&v41 - v3);
  v5 = (int *)type metadata accessor for GroupLayoutContext();
  v6 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v41 - v10;
  sub_1BA4A3FB4(0, &qword_1ED3B7C20, (void (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext);
  MEMORY[0x1E0C80A78](v12);
  v14 = (__int128 *)((char *)&v41 - v13);
  v15 = type metadata accessor for GroupLayoutBindingContext();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v41 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v41 - v19;
  sub_1BA57B488(v1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory, (uint64_t)&v43, (unint64_t *)&unk_1ED3B6FD0, (void (*)(uint64_t))sub_1BA829AA0);
  if (v44)
  {
    sub_1BA4CECCC(&v43, (uint64_t)v45);
    sub_1BA57B488(v1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t)v14, &qword_1ED3B7C20, (void (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext);
    if ((*(unsigned int (**)(__int128 *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      v21 = &qword_1ED3B7C20;
      v22 = (void (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext;
      v23 = v14;
    }
    else
    {
      sub_1BA5193C4((uint64_t)v14, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      sub_1BA57B488(v1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t)v4, &qword_1ED3B56D0, (void (*)(uint64_t))type metadata accessor for GroupLayoutContext);
      if ((*(unsigned int (**)(__int128 *, uint64_t, int *))(v6 + 48))(v4, 1, v5) != 1)
      {
        sub_1BA5193C4((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
        sub_1BA4C010C((uint64_t)v45, (uint64_t)&v43);
        v26 = v41;
        sub_1BA4C2DD8((uint64_t)v20, v41, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
        sub_1BB86D72C();
        sub_1BB86D798();
        v27 = v5[5];
        v28 = &v11[v27];
        v29 = &v8[v27];
        v30 = sub_1BB86D660();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v29, v28, v30);
        v31 = *(_QWORD *)&v11[v5[10]];
        sub_1BA4C2DD8((uint64_t)&v11[v5[6]], (uint64_t)&v8[v5[6]], type metadata accessor for FeedLayoutSolverOptions);
        v32 = *(_QWORD *)&v11[v5[7]];
        v33 = *(_QWORD *)&v11[v5[8]];
        v34 = v11[v5[9]];
        v35 = v11[v5[11]];
        v36 = *(_QWORD *)&v11[v5[12]];
        *(_QWORD *)&v8[v5[10]] = v31;
        *(_QWORD *)&v8[v5[7]] = v32;
        *(_QWORD *)&v8[v5[8]] = v33;
        v8[v5[9]] = v34;
        v8[v5[11]] = v35;
        *(_QWORD *)&v8[v5[12]] = v36;
        __swift_project_boxed_opaque_existential_1(&v43, v44);
        swift_retain();
        swift_retain();
        v37 = sub_1BA969388();
        v38 = v42;
        *v42 = v37;
        v38[1] = v39;
        sub_1BA4C010C((uint64_t)&v43, (uint64_t)(v38 + 2));
        v40 = type metadata accessor for DebugGroupLayoutKey();
        sub_1BA5193C4(v26, (uint64_t)v38 + *(int *)(v40 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
        sub_1BA5193C4((uint64_t)v8, (uint64_t)v38 + *(int *)(v40 + 28), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
        sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v38, 0, 1, v40);
      }
      sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      v21 = &qword_1ED3B56D0;
      v22 = (void (*)(uint64_t))type metadata accessor for GroupLayoutContext;
      v23 = v4;
    }
  }
  else
  {
    v21 = (unint64_t *)&unk_1ED3B6FD0;
    v22 = (void (*)(uint64_t))sub_1BA829AA0;
    v23 = &v43;
  }
  sub_1BA502AD0((uint64_t)v23, v21, v22);
  v24 = type metadata accessor for DebugGroupLayoutKey();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v42, 1, 1, v24);
}

uint64_t GroupLayoutKey.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t static GroupLayoutKey.default.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_1BB86C8E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C8D4();
  v4 = sub_1BB86C8C8();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0x746C7561666564;
  *(_QWORD *)(v7 + 24) = 0xE700000000000000;
  v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  *v8 = v4;
  v8[1] = v6;
  v9 = v7 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory;
  *(_QWORD *)(v9 + 32) = 0;
  *(_OWORD *)v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  v10 = v7 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  v11 = type metadata accessor for GroupLayoutBindingContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = v7 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  v13 = type metadata accessor for GroupLayoutContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return v7;
}

uint64_t GroupLayoutKey.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, &qword_1ED3B7C20, (void (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext);
  swift_bridgeObjectRelease();
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory, (unint64_t *)&unk_1ED3B6FD0, (void (*)(uint64_t))sub_1BA829AA0);
  sub_1BA502AD0(v0 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, &qword_1ED3B56D0, (void (*)(uint64_t))type metadata accessor for GroupLayoutContext);
  return v0;
}

uint64_t GroupLayoutKey.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB27D13C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB27D1B0()
{
  sub_1BB872A90();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB27D20C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB27D27C(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed14GroupLayoutKeyC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s8NewsFeed14GroupLayoutKeyC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
  if (v4 || (v5 = sub_1BB874398(), result = 0, (v5 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier) == *(_QWORD *)(a2
                                                                                             + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier)
      && *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier + 8) == *(_QWORD *)(a2
                                                                                                 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier
                                                                                                 + 8))
    {
      return 1;
    }
    else
    {
      return sub_1BB874398();
    }
  }
  return result;
}

unint64_t sub_1BB27D310()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BFA98;
  if (!qword_1EF2BFA98)
  {
    v1 = type metadata accessor for GroupLayoutKey();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GroupLayoutKey, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BFA98);
  }
  return result;
}

uint64_t sub_1BB27D358()
{
  return type metadata accessor for GroupLayoutKey();
}

uint64_t method lookup function for GroupLayoutKey()
{
  return swift_lookUpClassMethod();
}

double static FormatConfig.default.getter@<D0>(uint64_t a1@<X8>)
{
  double result;
  char v3;

  sub_1BB86D294();
  sub_1BB86D27C();
  if (qword_1ED3D5158 != -1)
    swift_once();
  sub_1BB86D270();
  swift_release();
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 1) = v3;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_QWORD *)(a1 + 56) = 0;
  return result;
}

uint64_t assignWithCopy for FormatConfig(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 24);
  v6 = (_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7 = *(void **)(a1 + 32);
      v8 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v8;
      v9 = v8;

      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAB52240(a1 + 24);
      v12 = *(_QWORD *)(a2 + 56);
      v13 = *(_OWORD *)(a2 + 40);
      *v4 = *v6;
      *(_OWORD *)(a1 + 40) = v13;
      *(_QWORD *)(a1 + 56) = v12;
    }
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 24) = v5;
    v10 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v11 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *v6;
    v15 = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *v4 = v14;
    *(_OWORD *)(a1 + 40) = v15;
  }
  return a1;
}

uint64_t assignWithTake for FormatConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __int128 v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_5;
  if (!v5)
  {
    sub_1BAB52240(a1 + 24);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    return a1;
  }
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatConfig(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t FeedNativeAdInsertable.nativeAdSwapIdentifier.getter()
{
  return 0;
}

uint64_t dispatch thunk of FeedBannerAdInsertable.bannerAd.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static FeedBannerAdInsertable.createAdItem(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FeedNativeAdInsertable.nativeAdSwapIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static FeedNativeAdInsertable.createNativeAdItem(for:feedContext:replacing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of static FeedNativeAdInsertable.removeNativeAd(from:feedContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FeedContentPrefetchManagerType.addTask<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

void sub_1BB27D72C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v2 = (void *)objc_opt_self();
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a1;
  v6[4] = sub_1BB27DDB0;
  v6[5] = v4;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1BB27DA9C;
  v6[3] = &block_descriptor_10_2;
  v5 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_scheduleLowPriorityAsyncBlock_, v5);
  _Block_release(v5);
}

uint64_t sub_1BB27D818(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t *a4)
{
  void *v6;

  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return a1();
  sub_1BB27D8E8(a4);
  v6 = (void *)sub_1BB86E854();
  sub_1BB86E9EC();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1BB27D8E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  v3 = *a1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v5 = objc_msgSend(v4, sel_isLowPowerModeEnabled);

  if ((v5 & 1) != 0)
  {
    v7 = a1[2];
    v8 = sub_1BB87330C();
    sub_1BB86EF44("FeedContentPrefetchManager: will not prefetch because device is in low-power mode", 81, 2, &dword_1BA493000, v7, v8, MEMORY[0x1E0DEE9D8]);
    sub_1BB27DE28();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    MEMORY[0x1E0C80A78](v6);
    v9 = *(_QWORD *)(v3 + 80);
    v10 = *(_QWORD *)(v3 + 88);
    type metadata accessor for FeedContentPrefetchTask.Result(0, v9, v10, v11);
    sub_1BB86EC14();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v9;
    *(_QWORD *)(v12 + 24) = v10;
    v13 = (void *)sub_1BB86E854();
    sub_1BB86E98C();
    swift_release();
    swift_release();

    v1 = sub_1BB86EA04();
    swift_release();
  }
  return v1;
}

uint64_t sub_1BB27DA9C(uint64_t a1, void *aBlock)
{
  void (*v2)(uint64_t (*)(), uint64_t);
  void *v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t (*)(), uint64_t))(a1 + 32);
  v3 = _Block_copy(aBlock);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_1BB27DDDC, v4);
  swift_release();
  return swift_release();
}

uint64_t sub_1BB27DB0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result;
  uint64_t v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = a2();
    sub_1BB27D72C(v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB27DB84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[40];
  uint64_t v6;

  sub_1BA4C010C(a2 + 24, (uint64_t)v5);
  sub_1BA4C010C(a2 + 64, (uint64_t)&v6);
  v3 = FeedContentPrefetchTask.run(with:)(v5);
  sub_1BB27DE6C((uint64_t)v5);
  return v3;
}

uint64_t sub_1BB27DBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  uint64_t v6;

  v5 = objc_msgSend(*(id *)(a2 + 16), sel_interestTokenForContentManifest_, *(_QWORD *)(a1 + *(int *)(type metadata accessor for FeedContentPrefetchTask.Result(0, a3, a4, a4) + 36)));
  v6 = swift_beginAccess();
  MEMORY[0x1BCCE36AC](v6);
  if (*(_QWORD *)((*(_QWORD *)(a2 + 104) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 104) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_1BB872E44();
  sub_1BB872E8C();
  sub_1BB872DCC();
  return swift_endAccess();
}

uint64_t sub_1BB27DCC4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1BB27DD00(uint64_t a1)
{
  sub_1BB27D72C(a1);
}

uint64_t sub_1BB27DD24()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB27DD48()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB27DD74()
{
  uint64_t v0;

  return sub_1BB27DB0C(*(_QWORD *)(v0 + 32), *(uint64_t (**)(void))(v0 + 40));
}

uint64_t sub_1BB27DD84()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB27DDB0(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1BB27D818(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t sub_1BB27DDB8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BB27DDDC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1BB27DDE8()
{
  uint64_t v0;

  return sub_1BB27DB84(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB27DE00()
{
  return swift_deallocObject();
}

uint64_t sub_1BB27DE10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB27DBF4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1BB27DE28()
{
  unint64_t result;

  result = qword_1ED3A0DD0;
  if (!qword_1ED3A0DD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FEF94, &type metadata for FeedContentPrefetchManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED3A0DD0);
  }
  return result;
}

uint64_t sub_1BB27DE6C(uint64_t a1)
{
  destroy for FeedContentPrefetchContext(a1);
  return a1;
}

uint64_t storeEnumTagSinglePayload for FeedContentPrefetchManager.Errors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB27DEE0 + 4 * byte_1BB8FEE50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB27DF00 + 4 * byte_1BB8FEE55[v4]))();
}

_BYTE *sub_1BB27DEE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB27DF00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB27DF08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB27DF10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB27DF18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB27DF20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedContentPrefetchManager.Errors()
{
  return &type metadata for FeedContentPrefetchManager.Errors;
}

unint64_t sub_1BB27DF40()
{
  unint64_t result;

  result = qword_1EF2BFAA0;
  if (!qword_1EF2BFAA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FEF6C, &type metadata for FeedContentPrefetchManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2BFAA0);
  }
  return result;
}

uint64_t LayeredMediaViewDisplayState.isVisible.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t LayeredMediaViewDisplayState.isReducedMotionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

BOOL static LayeredMediaViewDisplayState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

BOOL sub_1BB27DFC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

uint64_t storeEnumTagSinglePayload for LayeredMediaViewDisplayState(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB27E038 + 4 * byte_1BB8FEFE5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1BB27E06C + 4 * byte_1BB8FEFE0[v4]))();
}

uint64_t sub_1BB27E06C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BB27E074(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BB27E07CLL);
  return result;
}

uint64_t sub_1BB27E088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BB27E090);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB27E094(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BB27E09C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaViewDisplayState()
{
  return &type metadata for LayeredMediaViewDisplayState;
}

uint64_t sub_1BB27E0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1BA4A3FB4(0, &qword_1EF2A99E8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - v10;
  v12 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_1BA6E35A8(a1, a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      v16 = *(_QWORD *)(v12 + 56);
      v17 = type metadata accessor for FormatDerivedDataOption();
      v18 = *(_QWORD *)(v17 - 8);
      sub_1BAA73640(v16 + *(_QWORD *)(v18 + 72) * v15, (uint64_t)v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v11, 0, 1, v17);
    }
    else
    {
      v17 = type metadata accessor for FormatDerivedDataOption();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for FormatDerivedDataOption();
    v20 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v17) != 1)
    {
      sub_1BA8E5414((uint64_t)v11, a4);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a4, 0, 1, v17);
    }
  }
  else
  {
    v19 = type metadata accessor for FormatDerivedDataOption();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v11, 1, 1, v19);
  }
  swift_beginAccess();
  v21 = *(_QWORD *)(a3 + 56);
  if (*(_QWORD *)(v21 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_1BA6E35A8(a1, a2);
    if ((v23 & 1) != 0)
    {
      v24 = v22;
      v25 = *(_QWORD *)(v21 + 56);
      v26 = type metadata accessor for FormatDerivedDataOption();
      v27 = *(_QWORD *)(v26 - 8);
      sub_1BAA73640(v25 + *(_QWORD *)(v27 + 72) * v24, a4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56))(a4, 0, 1, v26);
    }
    else
    {
      v30 = type metadata accessor for FormatDerivedDataOption();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a4, 1, 1, v30);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = type metadata accessor for FormatDerivedDataOption();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a4, 1, 1, v29);
  }
  return sub_1BB27F6A0((uint64_t)v11);
}

uint64_t sub_1BB27E330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  char **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  int v90;
  unsigned __int8 v91;

  v77 = a3;
  v79 = a5;
  sub_1BA4A3FB4(0, &qword_1EF2A99E8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  MEMORY[0x1E0C80A78](v9);
  v76 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v67 - v12;
  v14 = type metadata accessor for FormatDerivedDataOption();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v70 = (uint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v67 - v18;
  v20 = *v5;
  v21 = *((unsigned __int8 *)v5 + 16);
  v22 = v5[3];
  v23 = v5[4];
  v24 = v5[5];
  v25 = v5[6];
  v26 = v5[7];
  v74 = (unint64_t)v5[1];
  v75 = v20;
  v82 = (uint64_t)v20;
  v83 = v74;
  v90 = v21;
  LOBYTE(v84) = v21;
  v72 = v24;
  v73 = v22;
  v85 = v22;
  v86 = v23;
  v87 = v24;
  v88 = v25;
  v71 = v26;
  v89 = v26;
  v68 = a1;
  v27 = a1;
  v29 = v28;
  v69 = a2;
  v30 = a2;
  v31 = a4;
  sub_1BB27E0B8(v27, v30, a4, (uint64_t)v13);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v32(v13, 1, v29) == 1)
  {
    v33 = (uint64_t)v13;
LABEL_3:
    sub_1BB27F6A0(v33);
    sub_1BA8D4E18();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v79, 1, 1, v34);
  }
  sub_1BA8E5414((uint64_t)v13, (uint64_t)v19);
  v36 = *((_QWORD *)v19 + 2);
  if (!v19[40])
  {
    v41 = v77;
    if ((sub_1BA713E54(*((_QWORD *)v19 + 2), v77) & 1) == 0)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1BA87DD80();
      swift_allocError();
      v56 = v69;
      *(_QWORD *)v57 = v68;
      *(_QWORD *)(v57 + 8) = v56;
      *(_BYTE *)(v57 + 16) = v36;
      *(_QWORD *)(v57 + 24) = v41;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return sub_1BAA736BC((uint64_t)v19);
    }
LABEL_9:
    v42 = v79;
    sub_1BA8D8218((uint64_t)&v19[*(int *)(v29 + 28)], v79);
    sub_1BAA736BC((uint64_t)v19);
    sub_1BA8D4E18();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 0, 1, v43);
  }
  if (v19[40] != 1)
    goto LABEL_9;
  v38 = *((_QWORD *)v19 + 3);
  v37 = *((_QWORD *)v19 + 4);
  v82 = (uint64_t)v75;
  v83 = v74;
  LOBYTE(v84) = v90;
  v85 = v73;
  v86 = v23;
  v39 = v37;
  v87 = v72;
  v88 = v25;
  v89 = v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40 = v76;
  sub_1BB27E0B8(v36, v38, v31, v76);
  if (v32((char *)v40, 1, v29) == 1)
  {
    sub_1BAA736BC((uint64_t)v19);
    sub_1BAA37068(v36, v38, v39, 1);
    v33 = v40;
    goto LABEL_3;
  }
  v75 = v19;
  v44 = v70;
  sub_1BA8E5414(v40, v70);
  v45 = v79;
  if (*(_BYTE *)(v44 + 40))
  {
    sub_1BAA37068(v36, v38, v39, 1);
    v79 = type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    v78 = v46;
    v82 = 0;
    v83 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v80 = 0xD000000000000012;
    v81 = 0x80000001BB983390;
    v47 = *(_QWORD *)(v44 + 16);
    v48 = *(_QWORD *)(v44 + 24);
    v49 = v44;
    v50 = *(_QWORD *)(v44 + 32);
    v51 = *(_BYTE *)(v49 + 40);
    v82 = v47;
    v83 = v48;
    v84 = v50;
    LOBYTE(v85) = v51;
    FormatDerivedDataOptionType.description.getter();
    sub_1BAA73684(v47, v48, v50, v51);
    sub_1BB872AFC(v52);
    swift_bridgeObjectRelease();
    sub_1BAA37068(v47, v48, v50, v51);
    v53 = v81;
    v54 = v78;
    *v78 = v80;
    v54[1] = v53;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v55 = v49;
LABEL_12:
    sub_1BAA736BC(v55);
    v19 = v75;
    return sub_1BAA736BC((uint64_t)v19);
  }
  v58 = *(unsigned __int8 *)(v44 + 16);
  swift_bridgeObjectRetain();
  sub_1BAA37068(v36, v38, v39, 1);
  v59 = *(_QWORD *)(v39 + 16);
  if (v59)
  {
    v60 = v29;
    swift_bridgeObjectRetain();
    v61 = 0;
    v63 = v77;
    v62 = v78;
    while (1)
    {
      LOBYTE(v80) = *(_BYTE *)(v39 + v61 + 32);
      v91 = v58;
      sub_1BA87D884(&v91);
      if (v62)
        break;
      ++v61;
      v58 = v82;
      if (v59 == v61)
      {
        swift_bridgeObjectRelease();
        v19 = v75;
        v44 = v70;
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease_n();
    v55 = v70;
    goto LABEL_12;
  }
  v60 = v29;
  v63 = v77;
  v19 = v75;
LABEL_21:
  swift_bridgeObjectRelease();
  if ((sub_1BA713E54(v58, v63) & 1) == 0)
  {
    type metadata accessor for FormatDerivedDataError();
    sub_1BA87DD80();
    swift_allocError();
    v65 = v69;
    *(_QWORD *)v66 = v68;
    *(_QWORD *)(v66 + 8) = v65;
    *(_BYTE *)(v66 + 16) = v58;
    *(_QWORD *)(v66 + 24) = v63;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_1BAA736BC(v44);
    return sub_1BAA736BC((uint64_t)v19);
  }
  sub_1BAA736BC((uint64_t)v19);
  sub_1BA8D8218(v44 + *(int *)(v60 + 28), v45);
  sub_1BAA736BC(v44);
  sub_1BA8D4E18();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v45, 0, 1, v64);
}

uint64_t sub_1BB27E930(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t inited;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;

  v55 = a2;
  sub_1BA4A3FB4(0, &qword_1EF2A99E8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  MEMORY[0x1E0C80A78](v4);
  v47 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v52 = (uint64_t)&v43 - v7;
  v8 = type metadata accessor for FormatDerivedDataOption();
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x1E0C80A78](v8);
  v45 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)v2;
  v10 = *(_QWORD *)(v2 + 8);
  v12 = *(_QWORD *)(v2 + 24);
  v13 = *(_QWORD *)(v2 + 32);
  v14 = *(_QWORD *)(v2 + 40);
  v15 = *(_QWORD *)(v2 + 48);
  v46 = v2 + 48;
  v16 = *(_QWORD *)(v2 + 56);
  v17 = *(_BYTE *)(v2 + 16);
  v56 = v11;
  v57 = v10;
  v58 = v17;
  v50 = v13;
  v51 = v12;
  v59 = v12;
  v60 = v13;
  v61 = v14;
  v62 = v15;
  v63 = v16;
  v18 = (uint64_t)a1;
  v19 = *a1;
  v48 = v18;
  v49 = *(_QWORD *)(v18 + 8);
  sub_1BA8D4E00(v11, v10, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = v52;
  v44 = v19;
  v21 = v19;
  v22 = v49;
  sub_1BB27E0B8(v21, v49, v55, v52);
  sub_1BA8D5088(v11, v10, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = v53;
  v24 = v54;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v20, 1, v24) == 1)
  {
    sub_1BB27F6A0(v20);
    v25 = *(_QWORD *)v48;
    v26 = *(_QWORD *)(v48 + 8);
    v27 = v47;
    sub_1BAA73640(v48, v47);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v24);
    swift_bridgeObjectRetain();
    return sub_1BB4A9F64(v27, v25, v26);
  }
  v29 = v22;
  v30 = v44;
  v31 = v45;
  sub_1BA8E5414(v20, v45);
  v32 = v47;
  v33 = v48;
  if (*(_BYTE *)(v31 + 40) || *(_BYTE *)(v48 + 40))
    goto LABEL_9;
  v34 = *(_QWORD *)(v48 + 16);
  LODWORD(v51) = *(unsigned __int8 *)(v31 + 16);
  LOBYTE(v56) = v51;
  v50 = v34;
  v64 = v34;
  v52 = FormatOptionType.rawValue.getter();
  v55 = v35;
  if (v52 == FormatOptionType.rawValue.getter() && v55 == v36)
  {
    swift_bridgeObjectRelease_n();
LABEL_9:
    sub_1BAA73640(v33, v32);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v23 + 56))(v32, 0, 1, v24);
    swift_bridgeObjectRetain();
    sub_1BB4A9F64(v32, v30, v29);
    return sub_1BAA736BC(v31);
  }
  LODWORD(v52) = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v52 & 1) != 0)
    goto LABEL_9;
  type metadata accessor for FormatDerivedDataError();
  sub_1BA87DD80();
  swift_allocError();
  v38 = v37;
  v40 = *(_QWORD *)v31;
  v39 = *(_QWORD *)(v31 + 8);
  sub_1BA738818();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_BYTE *)(inited + 32) = v50;
  swift_bridgeObjectRetain();
  v42 = sub_1BA862600(inited);
  swift_setDeallocating();
  *(_QWORD *)v38 = v40;
  *(_QWORD *)(v38 + 8) = v39;
  *(_BYTE *)(v38 + 16) = v51;
  *(_QWORD *)(v38 + 24) = v42;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return sub_1BAA736BC(v31);
}

uint64_t sub_1BB27ED5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t result;
  int64_t v30;
  unint64_t v31;
  unint64_t v32;
  BOOL v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  int64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  unsigned __int8 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  int64_t v66;

  v8 = type metadata accessor for FormatDerivedDataOption();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v53 - v13;
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)v3;
  v17 = *(_QWORD *)(v3 + 8);
  v18 = *(_BYTE *)(v3 + 16);
  v20 = *(_QWORD *)(v3 + 24);
  v19 = *(_QWORD *)(v3 + 32);
  v22 = *(_QWORD *)(v3 + 40);
  v21 = *(_QWORD *)(v3 + 48);
  v23 = *(_QWORD *)(v3 + 56);
  if (!*(_QWORD *)(v15 + 16))
  {
    *(_QWORD *)a3 = v16;
    *(_QWORD *)(a3 + 8) = v17;
    *(_BYTE *)(a3 + 16) = v18;
    *(_QWORD *)(a3 + 24) = v20;
    *(_QWORD *)(a3 + 32) = v19;
    *(_QWORD *)(a3 + 40) = v22;
    *(_QWORD *)(a3 + 48) = v21;
    *(_QWORD *)(a3 + 56) = v23;
    sub_1BA8D4E00(v16, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  v54 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)&v61 = v16;
  *((_QWORD *)&v61 + 1) = v17;
  v62 = v18;
  *(_QWORD *)&v63 = v20;
  *((_QWORD *)&v63 + 1) = v19;
  *(_QWORD *)&v64 = v22;
  *((_QWORD *)&v64 + 1) = v21;
  v53[0] = a3;
  v53[1] = &v65;
  v65 = v23;
  v57 = v23;
  v58 = v21;
  v24 = *(_QWORD *)(v15 + 64);
  v59 = v15 + 64;
  v25 = *(_BYTE *)(v15 + 32);
  v55 = v19;
  v56 = v22;
  v26 = 1 << v25;
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v24;
  sub_1BA8D4E00(v16, v17, v18);
  v66 = (unint64_t)(v26 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v30 = 0;
  while (v28)
  {
    v31 = __clz(__rbit64(v28));
    v28 &= v28 - 1;
    v32 = v31 | (v30 << 6);
LABEL_6:
    sub_1BAA73640(*(_QWORD *)(v15 + 56) + *(_QWORD *)(v9 + 72) * v32, (uint64_t)v14);
    sub_1BA8E5414((uint64_t)v14, (uint64_t)v11);
    sub_1BB27E930(v11, a2);
    result = sub_1BAA736BC((uint64_t)v11);
    if (v4)
    {
      swift_release();
      sub_1BA8D5088(v61, *((uint64_t *)&v61 + 1), v62);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  v33 = __OFADD__(v30++, 1);
  if (v33)
  {
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  if (v30 >= v66)
    goto LABEL_27;
  v34 = *(_QWORD *)(v59 + 8 * v30);
  if (v34)
  {
LABEL_20:
    v28 = (v34 - 1) & v34;
    v32 = __clz(__rbit64(v34)) + (v30 << 6);
    goto LABEL_6;
  }
  v35 = v30 + 1;
  if (v30 + 1 >= v66)
    goto LABEL_27;
  v34 = *(_QWORD *)(v59 + 8 * v35);
  if (v34)
    goto LABEL_19;
  v35 = v30 + 2;
  if (v30 + 2 >= v66)
    goto LABEL_27;
  v34 = *(_QWORD *)(v59 + 8 * v35);
  if (v34)
    goto LABEL_19;
  v35 = v30 + 3;
  if (v30 + 3 >= v66)
    goto LABEL_27;
  v34 = *(_QWORD *)(v59 + 8 * v35);
  if (v34)
    goto LABEL_19;
  v35 = v30 + 4;
  if (v30 + 4 >= v66)
  {
LABEL_27:
    v36 = v54;
    swift_release();
    v37 = v36 + 56;
    v38 = 1 << *(_BYTE *)(v36 + 32);
    v39 = -1;
    if (v38 < 64)
      v39 = ~(-1 << v38);
    v40 = v39 & *(_QWORD *)(v36 + 56);
    v41 = (unint64_t)(v38 + 63) >> 6;
    result = swift_bridgeObjectRetain();
    v42 = 0;
    while (1)
    {
      if (v40)
      {
        v43 = __clz(__rbit64(v40));
        v40 &= v40 - 1;
        v44 = v43 | (v42 << 6);
      }
      else
      {
        v33 = __OFADD__(v42++, 1);
        if (v33)
          goto LABEL_50;
        if (v42 >= v41)
        {
LABEL_48:
          result = swift_release();
          v50 = v62;
          v51 = v65;
          v52 = v53[0];
          *(_OWORD *)v53[0] = v61;
          *(_BYTE *)(v52 + 16) = v50;
          *(_OWORD *)(v52 + 24) = v63;
          *(_OWORD *)(v52 + 40) = v64;
          *(_QWORD *)(v52 + 56) = v51;
          return result;
        }
        v48 = *(_QWORD *)(v37 + 8 * v42);
        if (!v48)
        {
          v49 = v42 + 1;
          if (v42 + 1 >= v41)
            goto LABEL_48;
          v48 = *(_QWORD *)(v37 + 8 * v49);
          if (!v48)
          {
            v49 = v42 + 2;
            if (v42 + 2 >= v41)
              goto LABEL_48;
            v48 = *(_QWORD *)(v37 + 8 * v49);
            if (!v48)
            {
              v49 = v42 + 3;
              if (v42 + 3 >= v41)
                goto LABEL_48;
              v48 = *(_QWORD *)(v37 + 8 * v49);
              if (!v48)
              {
                while (1)
                {
                  v42 = v49 + 1;
                  if (__OFADD__(v49, 1))
                    goto LABEL_51;
                  if (v42 >= v41)
                    goto LABEL_48;
                  v48 = *(_QWORD *)(v37 + 8 * v42);
                  ++v49;
                  if (v48)
                    goto LABEL_43;
                }
              }
            }
          }
          v42 = v49;
        }
LABEL_43:
        v40 = (v48 - 1) & v48;
        v44 = __clz(__rbit64(v48)) + (v42 << 6);
      }
      v45 = (uint64_t *)(*(_QWORD *)(v36 + 48) + 16 * v44);
      v47 = *v45;
      v46 = v45[1];
      swift_bridgeObjectRetain_n();
      sub_1BA6EE5AC(&v60, v47, v46);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
  }
  v34 = *(_QWORD *)(v59 + 8 * v35);
  if (v34)
  {
LABEL_19:
    v30 = v35;
    goto LABEL_20;
  }
  while (1)
  {
    v30 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v30 >= v66)
      goto LABEL_27;
    v34 = *(_QWORD *)(v59 + 8 * v30);
    ++v35;
    if (v34)
      goto LABEL_20;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t FormatDerivedDataContextKey.hash(into:)()
{
  sub_1BB8745D8();
  return sub_1BB872A90();
}

uint64_t FormatDerivedDataContextKey.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB27F2B0()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB27F310()
{
  sub_1BB8745D8();
  return sub_1BB872A90();
}

uint64_t sub_1BB27F350()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t FormatDerivedDataContextKey.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if (*(_BYTE *)(v0 + 16))
  {
    if (*(_BYTE *)(v0 + 16) == 1)
      v1 = 0x203A6B636F6C62;
    else
      v1 = 0x203A6E6F6974706FLL;
  }
  else
  {
    v1 = 0x203A656C6966;
  }
  v3 = v1;
  sub_1BB872AFC((_QWORD *)v1);
  return v3;
}

uint64_t _s8NewsFeed27FormatDerivedDataContextKeyO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v10;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (!*(_BYTE *)(a2 + 16))
    {
      if (v2 != v5 || v3 != v6)
        goto LABEL_23;
      LOBYTE(v7) = 0;
      LOBYTE(v4) = 0;
      goto LABEL_17;
    }
LABEL_24:
    v10 = 0;
    goto LABEL_25;
  }
  if (v4 != 1)
  {
    if (v7 == 2)
    {
      if (v2 == v5 && v3 == v6)
      {
        v10 = 1;
        LOBYTE(v7) = 2;
        LOBYTE(v4) = 2;
        goto LABEL_25;
      }
      goto LABEL_23;
    }
    goto LABEL_24;
  }
  if (v7 != 1)
    goto LABEL_24;
  if (v2 != v5 || v3 != v6)
  {
LABEL_23:
    v10 = sub_1BB874398();
    LOBYTE(v7) = v4;
    goto LABEL_25;
  }
  LOBYTE(v7) = 1;
  LOBYTE(v4) = 1;
LABEL_17:
  v10 = 1;
LABEL_25:
  sub_1BA8D4E00(v5, v6, v7);
  sub_1BA8D4E00(v2, v3, v4);
  sub_1BA8D5088(v2, v3, v4);
  sub_1BA8D5088(v5, v6, v7);
  return v10 & 1;
}

unint64_t sub_1BB27F558()
{
  unint64_t result;

  result = qword_1EF2BFAB0;
  if (!qword_1EF2BFAB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDerivedDataContextKey, &type metadata for FormatDerivedDataContextKey);
    atomic_store(result, (unint64_t *)&qword_1EF2BFAB0);
  }
  return result;
}

uint64_t destroy for FormatDerivedDataFileReference(uint64_t a1)
{
  return sub_1BA8D5088(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed27FormatDerivedDataContextKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA8D4E00(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataContextKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA8D4E00(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA8D5088(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataFileReference(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA8D5088(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedDataContextKey()
{
  return &type metadata for FormatDerivedDataContextKey;
}

uint64_t sub_1BB27F6A0(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, &qword_1EF2A99E8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for FormatDerivedDataContext(uint64_t a1)
{
  sub_1BA8D5088(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDerivedDataContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1BA8D4E00(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1BA8D4E00(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_1BA8D5088(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataContext(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_1BA8D5088(v5, v6, v7);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataContext()
{
  return &type metadata for FormatDerivedDataContext;
}

CACornerMask __swiftcall CACornerMask.init(_:)(__C::UIRectCorner a1)
{
  CACornerMask v1;

  if ((a1.rawValue & 1) != 0)
  {
    if ((a1.rawValue & 2) != 0)
    {
      v1 = 3;
      if ((a1.rawValue & 4) == 0)
        goto LABEL_8;
    }
    else
    {
      v1 = 1;
      if ((a1.rawValue & 4) == 0)
        goto LABEL_8;
    }
    goto LABEL_7;
  }
  if ((a1.rawValue & 2) == 0)
  {
    v1 = 0;
    if ((a1.rawValue & 4) == 0)
      goto LABEL_8;
LABEL_7:
    v1 |= 4uLL;
    goto LABEL_8;
  }
  v1 = 2;
  if ((a1.rawValue & 4) != 0)
    goto LABEL_7;
LABEL_8:
  if ((a1.rawValue & 8) != 0)
    v1 |= 8uLL;
  return v1;
}

uint64_t FormatVideoPlayerSession.feedItemIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerSession.headline.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FormatVideoPlayerSession.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatVideoPlayerSession() + 24);
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for FormatVideoPlayerSession()
{
  uint64_t result;

  result = qword_1EF2BFB18;
  if (!qword_1EF2BFB18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FormatVideoPlayerSession.feedKind.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FormatVideoPlayerSession();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t FormatVideoPlayerSession.lastPlaybackPosition.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for FormatVideoPlayerSession() + 32));
}

uint64_t FormatVideoPlayerSession.totalTimePlayed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FormatVideoPlayerSession() + 36));
}

uint64_t FormatVideoPlayerSession.playbackDuration.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for FormatVideoPlayerSession() + 40));
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatVideoPlayerSession(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    v8 = a3[6];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C67C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_DWORD *)((char *)v4 + v13) = *(_DWORD *)((char *)a2 + v13);
    v14 = a3[10];
    *(_QWORD *)((char *)v4 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *(_DWORD *)((char *)v4 + v14) = *(_DWORD *)((char *)a2 + v14);
  }
  return v4;
}

uint64_t destroy for FormatVideoPlayerSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for FormatVideoPlayerSession(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C67C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_DWORD *)((char *)a1 + v12) = *(_DWORD *)((char *)a2 + v12);
  v13 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_DWORD *)((char *)a1 + v13) = *(_DWORD *)((char *)a2 + v13);
  return a1;
}

_QWORD *assignWithCopy for FormatVideoPlayerSession(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_DWORD *)((char *)a1 + a3[10]) = *(_DWORD *)((char *)a2 + a3[10]);
  return a1;
}

uint64_t initializeWithTake for FormatVideoPlayerSession(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_DWORD *)(a1 + v10) = *(_DWORD *)(a2 + v10);
  v11 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  return a1;
}

_QWORD *assignWithTake for FormatVideoPlayerSession(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRelease();
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_DWORD *)((char *)a1 + v11) = *(_DWORD *)((char *)a2 + v11);
  v12 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_DWORD *)((char *)a1 + v12) = *(_DWORD *)((char *)a2 + v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoPlayerSession()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB27FF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for FormatVideoPlayerSession()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB280014(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB280088()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id FeedBannerAdIntegrator.__allocating_init(pipeline:blueprintProvider:policyValidator:layoutCollectionProvider:journal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  objc_class *v6;
  id v12;
  id v13;

  v6 = v5;
  v12 = objc_allocWithZone(v6);
  v13 = sub_1BA4EA700(a1, a2, a3, a4, a5);
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*((_QWORD *)v6 + 10) - 8) + 8))(a2);
  swift_release();
  return v13;
}

uint64_t FeedBannerAdIntegrator.collectionView(_:didEndDisplaying:forItemAt:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA4D5F20(a1, a3);
}

id FeedBannerAdIntegrator.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FeedBannerAdIntegrator.init()()
{
  sub_1BB28036C();
}

void sub_1BB28020C()
{
  sub_1BB28036C();
}

id FeedBannerAdIntegrator.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB280264(char *a1)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v3 = *MEMORY[0x1E0DEEDD8] & *(_QWORD *)a1;
  swift_release();
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1)
                                                                                                 + 0x88)]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x90)]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[*(_QWORD *)((*v2 & *(_QWORD *)a1) + 0x98)]);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB280340()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB28036C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t method lookup function for FeedBannerAdIntegrator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedBannerAdIntegrator.__allocating_init(pipeline:blueprintProvider:policyValidator:layoutCollectionProvider:journal:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1BB2803AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedBannerAd();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BB2803F0()
{
  unint64_t result;

  result = qword_1ED3B0B10;
  if (!qword_1ED3B0B10)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3B0B10);
  }
  return result;
}

uint64_t sub_1BB280444()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB280468()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB28048C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t LayeredMediaViewDisplayStateCoordinator.isEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

void sub_1BB2804E0(unsigned __int8 *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(unsigned __int8 *)(v3 + 16);
  *(_BYTE *)(v3 + 16) = v2;
  if (v2 != v4)
  {
    if ((v2 & 1) != 0)
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
    else
      *(_WORD *)(v3 + 56) = 2;
  }
}

void LayeredMediaViewDisplayStateCoordinator.isEnabled.setter(char a1)
{
  uint64_t v1;
  int v3;
  int v4;

  v3 = a1 & 1;
  swift_beginAccess();
  v4 = *(unsigned __int8 *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = a1;
  if (v4 != v3)
  {
    if ((a1 & 1) != 0)
      LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
    else
      *(_WORD *)(v1 + 56) = 2;
  }
}

Swift::Void __swiftcall LayeredMediaViewDisplayStateCoordinator.updateDisplay()()
{
  uint64_t v0;
  void (*v1)(_BYTE *);
  uint64_t v2;
  void *v3;
  int v4;
  id v5;
  int v6;
  _BOOL4 IsReduceMotionEnabled;
  __int16 v8;
  _BYTE v9[2];

  swift_beginAccess();
  if (*(_BYTE *)(v0 + 16) != 1)
    return;
  v1 = *(void (**)(_BYTE *))(v0 + 24);
  if (!v1)
    return;
  v2 = MEMORY[0x1BCCE5D40](v0 + 48);
  if (!v2)
    return;
  v3 = (void *)v2;
  swift_beginAccess();
  v4 = *(char *)(v0 + 17);
  swift_retain();
  v5 = objc_msgSend(v3, sel_window);
  if (v4 < 0)
  {
    if ((*(_BYTE *)(v0 + 40) & 1) == 0)
    {
      if (v5)
      {
        v6 = 1;
        goto LABEL_10;
      }
LABEL_22:
      v6 = 0;
      goto LABEL_11;
    }
LABEL_9:
    v6 = 0;
    goto LABEL_10;
  }
  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
    goto LABEL_9;
  if (!v5)
    goto LABEL_22;
  v6 = v4 & 1;
LABEL_10:

LABEL_11:
  IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  if (IsReduceMotionEnabled)
    v8 = 256;
  else
    v8 = 0;
  if (*(_BYTE *)(v0 + 56) == 2
    || ((v6 ^ *(unsigned __int8 *)(v0 + 56)) & 1) != 0
    || ((IsReduceMotionEnabled ^ *(unsigned __int8 *)(v0 + 57)) & 1) != 0)
  {
    *(_WORD *)(v0 + 56) = v8 | v6;
    v9[0] = v6;
    v9[1] = IsReduceMotionEnabled;
    v1(v9);
    sub_1BA49EBE0((uint64_t)v1);

  }
  else
  {

    sub_1BA49EBE0((uint64_t)v1);
  }
}

void (*LayeredMediaViewDisplayStateCoordinator.isEnabled.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess();
  *((_BYTE *)v3 + 32) = *(_BYTE *)(v1 + 16);
  return sub_1BB28075C;
}

void sub_1BB28075C(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  int v4;
  unsigned __int8 v5;
  uint64_t v6;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(unsigned __int8 *)(*(_QWORD *)a1 + 32);
  v5 = *(_BYTE *)(v3 + 16);
  *(_BYTE *)(v3 + 16) = v4;
  if ((a2 & 1) == 0)
  {
    if (((v4 ^ v5) & 1) == 0)
      goto LABEL_8;
    v6 = v2[3];
    if (!v4)
      goto LABEL_4;
    goto LABEL_7;
  }
  if (((v4 ^ v5) & 1) != 0)
  {
    v6 = v2[3];
    if ((v4 & 1) == 0)
    {
LABEL_4:
      *(_WORD *)(v6 + 56) = 2;
      goto LABEL_8;
    }
LABEL_7:
    LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
  }
LABEL_8:
  free(v2);
}

uint64_t LayeredMediaViewDisplayStateCoordinator.visibilityTracking.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_BYTE *)(v1 + 17);
  return result;
}

void sub_1BB2807FC(unsigned __int8 *a1, uint64_t *a2)
{
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;
  _BOOL4 v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(unsigned __int8 *)(v3 + 17);
  *(_BYTE *)(v3 + 17) = v2;
  if (!(v4 >> 6))
  {
    v5 = (v4 & 1) == 0;
    if (v2 > 0x3F)
      goto LABEL_9;
LABEL_6:
    if (((v2 ^ v5) & 1) != 0)
      return;
    goto LABEL_9;
  }
  if (v4 >> 6 != 1)
  {
    if (v2 == 128)
      return;
    goto LABEL_9;
  }
  v5 = (v4 & 1) == 0;
  if ((v2 & 0xC0) == 0x40)
    goto LABEL_6;
LABEL_9:
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
}

void LayeredMediaViewDisplayStateCoordinator.visibilityTracking.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(unsigned __int8 *)(v1 + 17);
  *(_BYTE *)(v1 + 17) = v2;
  if (!(v3 >> 6))
  {
    v4 = (v3 & 1) == 0;
    if (v2 > 0x3F)
      goto LABEL_9;
LABEL_6:
    if (((v2 ^ v4) & 1) != 0)
      return;
    goto LABEL_9;
  }
  if (v3 >> 6 != 1)
  {
    if (v2 == 128)
      return;
    goto LABEL_9;
  }
  v4 = (v3 & 1) == 0;
  if ((v2 & 0xC0) == 0x40)
    goto LABEL_6;
LABEL_9:
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
}

void (*LayeredMediaViewDisplayStateCoordinator.visibilityTracking.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_beginAccess();
  *((_BYTE *)v3 + 32) = *(_BYTE *)(v1 + 17);
  return sub_1BB280980;
}

void sub_1BB280980(uint64_t a1)
{
  void *v1;
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;
  _BOOL4 v5;

  v1 = *(void **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 32);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(unsigned __int8 *)(v3 + 17);
  *(_BYTE *)(v3 + 17) = v2;
  if (v4 >> 6)
  {
    if (v4 >> 6 == 1)
    {
      v5 = (v4 & 1) == 0;
      if ((v2 & 0xC0) != 0x40)
        goto LABEL_9;
      goto LABEL_6;
    }
    if (v2 == 128)
      goto LABEL_10;
LABEL_9:
    LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
    goto LABEL_10;
  }
  v5 = (v4 & 1) == 0;
  if (v2 > 0x3F)
    goto LABEL_9;
LABEL_6:
  if (((v2 ^ v5) & 1) == 0)
    goto LABEL_9;
LABEL_10:
  free(v1);
}

uint64_t LayeredMediaViewDisplayStateCoordinator.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  LayeredMediaViewDisplayStateCoordinator.init()();
  return v0;
}

uint64_t LayeredMediaViewDisplayStateCoordinator.init()()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  *(_WORD *)(v0 + 16) = -32767;
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v0 + 56) = 2;
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v2, sel_addObserver_selector_name_object_, v0, sel_sceneDidEnterBackground, *MEMORY[0x1E0DC5318], 0);

  v3 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v3, sel_addObserver_selector_name_object_, v0, sel_sceneWillEnterForeground, *MEMORY[0x1E0DC5338], 0);

  v4 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v4, sel_addObserver_selector_name_object_, v0, sel_reduceMotionStatusDidChange, *MEMORY[0x1E0DC45B0], 0);

  return v0;
}

uint64_t LayeredMediaViewDisplayStateCoordinator.deinit()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v2, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DC5318], 0);

  v3 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DC5338], 0);

  v4 = objc_msgSend(v1, sel_defaultCenter);
  objc_msgSend(v4, sel_removeObserver_name_object_, v0, *MEMORY[0x1E0DC45B0], 0);

  sub_1BA49EBE0(*(_QWORD *)(v0 + 24));
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t LayeredMediaViewDisplayStateCoordinator.__deallocating_deinit()
{
  LayeredMediaViewDisplayStateCoordinator.deinit();
  return swift_deallocClassInstance();
}

uint64_t LayeredMediaViewDisplayStateCoordinator.register(view:onChange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;

  swift_unknownObjectWeakAssign();
  v6 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  sub_1BA49EBE0(v6);
  return swift_retain();
}

uint64_t sub_1BB280CBC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_1BB280D04@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_1BB280D5C(uint64_t a1, uint64_t a2, char a3)
{
  *(_BYTE *)(a1 + 40) = a3;
  swift_retain();
  LayeredMediaViewDisplayStateCoordinator.updateDisplay()();
  return swift_release();
}

uint64_t type metadata accessor for LayeredMediaViewDisplayStateCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for LayeredMediaViewDisplayStateCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LayeredMediaViewDisplayStateCoordinator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t sub_1BB280DE4@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _BYTE *v3;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[7];
  _OWORD v32[3];
  char v33;

  v6 = a1[7];
  v31[6] = a1[6];
  v32[0] = v6;
  *(_OWORD *)((char *)v32 + 9) = *(_OWORD *)((char *)a1 + 121);
  v7 = a1[3];
  v31[2] = a1[2];
  v31[3] = v7;
  v8 = a1[5];
  v31[4] = a1[4];
  v31[5] = v8;
  v9 = a1[1];
  v31[0] = *a1;
  v31[1] = v9;
  v11 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v29 = *(_OWORD *)(a2 + 80);
  v30 = *(_OWORD *)(a2 + 64);
  v28 = *(_OWORD *)(a2 + 96);
  v12 = *(_QWORD *)(a2 + 112);
  v13 = *(_QWORD *)(a2 + 120);
  v14 = *(_BYTE *)(a2 + 128);
  if ((*v3 & 1) != 0)
  {
    v15 = (_OWORD *)swift_allocObject();
    v16 = a1[7];
    v15[7] = a1[6];
    v15[8] = v16;
    *(_OWORD *)((char *)v15 + 137) = *(_OWORD *)((char *)a1 + 121);
    v17 = a1[3];
    v15[3] = a1[2];
    v15[4] = v17;
    v18 = a1[5];
    v15[5] = a1[4];
    v15[6] = v18;
    v19 = a1[1];
    v15[1] = *a1;
    v15[2] = v19;
    v33 = 1;
    v20 = swift_allocObject();
    v21 = v20;
    *(_OWORD *)(v20 + 16) = 0u;
    *(_OWORD *)(v20 + 32) = 0u;
    *(_BYTE *)(v20 + 48) = v33;
    *(_QWORD *)(v20 + 56) = v11;
    *(_QWORD *)(v20 + 64) = v10;
    *(_OWORD *)(v20 + 72) = v30;
    *(_OWORD *)(v20 + 88) = v29;
    *(_OWORD *)(v20 + 104) = v28;
    *(_QWORD *)(v20 + 120) = v12;
    *(_QWORD *)(v20 + 128) = v13;
    *(_BYTE *)(v20 + 136) = v14;
    v22 = sub_1BB2816B0;
  }
  else
  {
    v15 = (_OWORD *)swift_allocObject();
    v23 = a1[7];
    v15[7] = a1[6];
    v15[8] = v23;
    *(_OWORD *)((char *)v15 + 137) = *(_OWORD *)((char *)a1 + 121);
    v24 = a1[3];
    v15[3] = a1[2];
    v15[4] = v24;
    v25 = a1[5];
    v15[5] = a1[4];
    v15[6] = v25;
    v26 = a1[1];
    v15[1] = *a1;
    v15[2] = v26;
    v33 = 1;
    v20 = swift_allocObject();
    v21 = v20;
    *(_OWORD *)(v20 + 16) = 0u;
    *(_OWORD *)(v20 + 32) = 0u;
    *(_BYTE *)(v20 + 48) = v33;
    *(_QWORD *)(v20 + 56) = v11;
    *(_QWORD *)(v20 + 64) = v10;
    *(_OWORD *)(v20 + 72) = v30;
    *(_OWORD *)(v20 + 88) = v29;
    *(_OWORD *)(v20 + 104) = v28;
    *(_QWORD *)(v20 + 120) = v12;
    *(_QWORD *)(v20 + 128) = v13;
    *(_BYTE *)(v20 + 136) = v14;
    v22 = sub_1BB2816E8;
  }
  *(_QWORD *)(v20 + 144) = v22;
  *(_QWORD *)(v20 + 152) = v15;
  swift_bridgeObjectRetain();
  *a3 = v21 | 0x2000000000000000;
  return sub_1BA8D1F08((uint64_t)v31);
}

double sub_1BB280FFC@<D0>(id *a1@<X2>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  double result;

  v3 = objc_msgSend(*a1, sel_coverImageAssetHandle);
  if (v3)
  {
    v4 = v3;
    *(_QWORD *)(a2 + 24) = sub_1BA749984();
    *(_QWORD *)(a2 + 32) = sub_1BA7499C0();
    *(_QWORD *)a2 = v4;
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1BB281060@<D0>(void *a1@<X0>, uint64_t a2@<X1>, id *a3@<X2>, uint64_t a4@<X8>)
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  double result;

  if (a2 == 2)
  {
    v6 = objc_msgSend(objc_msgSend(*a3, sel_sourceChannel), sel_theme);
    swift_unknownObjectRelease();
    if (!v6)
      goto LABEL_18;
    v7 = objc_msgSend(v6, sel_bannerImageForMask);
    swift_unknownObjectRelease();
    if (!v7)
      goto LABEL_18;
  }
  else
  {
    v8 = objc_msgSend(a1, sel_userInterfaceStyle);
    if ((unint64_t)v8 >= 2)
    {
      if (v8 == (id)2)
      {
        v10 = objc_msgSend(objc_msgSend(*a3, sel_sourceChannel), sel_theme);
        swift_unknownObjectRelease();
        if (!v10)
          goto LABEL_18;
        v7 = objc_msgSend(v10, sel_bannerImageForMask);
        swift_unknownObjectRelease();
        if (!v7)
          goto LABEL_18;
      }
      else
      {
        v11 = objc_msgSend(objc_msgSend(*a3, sel_sourceChannel), sel_theme);
        swift_unknownObjectRelease();
        if (!v11)
          goto LABEL_18;
        v7 = objc_msgSend(v11, sel_bannerImageForWhiteBackground);
        swift_unknownObjectRelease();
        if (!v7)
          goto LABEL_18;
      }
    }
    else
    {
      v9 = objc_msgSend(objc_msgSend(*a3, sel_sourceChannel), sel_theme);
      swift_unknownObjectRelease();
      if (!v9)
        goto LABEL_18;
      v7 = objc_msgSend(v9, sel_bannerImageForWhiteBackground);
      swift_unknownObjectRelease();
      if (!v7)
        goto LABEL_18;
    }
  }
  v12 = objc_msgSend(v7, sel_assetHandle);

  if (v12)
  {
    *(_QWORD *)(a4 + 24) = sub_1BA749984();
    *(_QWORD *)(a4 + 32) = sub_1BA7499C0();
    *(_QWORD *)a4 = v12;
    return result;
  }
LABEL_18:
  *(_QWORD *)(a4 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

uint64_t sub_1BB2812DC(char *a1, char *a2)
{
  return sub_1BB7FDC98(*a1, *a2);
}

uint64_t sub_1BB2812E8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB281370()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2813D4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB281458(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72515C0;
}

BOOL static FormatIssueBinding.Image.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatIssueBinding.Image.hash(into:)()
{
  return sub_1BB8745D8();
}

void *static FormatIssueBinding.Image.allCases.getter()
{
  return &unk_1E7270A80;
}

uint64_t FormatIssueBinding.Image.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB2814FC()
{
  unint64_t result;

  result = qword_1EF2BFBC8;
  if (!qword_1EF2BFBC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Image, &type metadata for FormatIssueBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2BFBC8);
  }
  return result;
}

unint64_t sub_1BB281540(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB281564();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB281564()
{
  unint64_t result;

  result = qword_1EF2BFBD0;
  if (!qword_1EF2BFBD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Image, &type metadata for FormatIssueBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2BFBD0);
  }
  return result;
}

uint64_t sub_1BB2815A8()
{
  return sub_1BA9BD27C(&qword_1EF2BFBD8, &qword_1EF2BFBE0);
}

void sub_1BB2815D4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72515E8;
}

unint64_t sub_1BB2815E4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5C163C();
  a1[2] = sub_1BA5940E8();
  result = sub_1BB2814FC();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Image()
{
  return &type metadata for FormatIssueBinding.Image;
}

ValueMetadata *_s5ImageO10CodingTypeOMa()
{
  return &_s5ImageO10CodingTypeON;
}

uint64_t sub_1BB281638()
{
  return sub_1BA9BD27C(&qword_1EF2BFBE8, &qword_1EF2BFBF0);
}

unint64_t sub_1BB281668()
{
  unint64_t result;

  result = qword_1EF2BFBF8;
  if (!qword_1EF2BFBF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF514, &_s5ImageO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2BFBF8);
  }
  return result;
}

double sub_1BB2816B0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BB281060(a1, a2, (id *)(v3 + 16), a3);
}

uint64_t sub_1BB2816B8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

double sub_1BB2816E8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB280FFC((id *)(v1 + 16), a1);
}

void sub_1BB2816F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (!v1)
  {
    v8 = MEMORY[0x1BCCE5D40](v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
    if (!v8)
      return;
    v9 = v8;
    sub_1BB873708();
    v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
    sub_1BB873708();
    v11 = *(id *)(v10 + qword_1ED476B40);
    sub_1BB873708();

    sub_1BB873708();
    goto LABEL_11;
  }
  v2 = v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate;
  v3 = MEMORY[0x1BCCE5D40](v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
  v4 = v1;
  v14 = v4;
  if (v3)
  {
    sub_1BB2D1C64(v4);
    swift_unknownObjectRelease();
    v4 = v14;
  }
  v5 = objc_msgSend(v4, sel_isPictureInPictureActive);
  v6 = MEMORY[0x1BCCE5D40](v2);
  v7 = v6;
  if (v5)
  {
    if (v6)
      goto LABEL_10;
  }
  else if (v6)
  {
LABEL_10:
    sub_1BB873708();
    v12 = *(_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
    sub_1BB873708();
    v13 = *(id *)(v12 + qword_1ED476B40);
    sub_1BB873708();

    sub_1BB873708();
LABEL_11:
    swift_unknownObjectRelease();
    return;
  }

}

void sub_1BB281950(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  __int128 v26;
  _QWORD aBlock[6];

  v3 = type metadata accessor for FormatVideoPlayerData();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController))
    return;
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D977B0]), sel_init);
  v9 = *(void **)(v1 + v7);
  *(_QWORD *)(v1 + v7) = v8;

  if (!objc_msgSend((id)objc_opt_self(), sel_isInternalBuild))
    goto LABEL_6;
  v10 = objc_msgSend(a1, sel_view);
  if (*(_QWORD *)(v1 + v7))
  {
    v25 = *(id *)(v1 + v7);
    v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_adJournal);
    v12 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_commandCenter;
    v13 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data;
    v14 = v10;
    v15 = swift_allocObject();
    v26 = *(_OWORD *)(v1 + v12);
    swift_unknownObjectWeakInit();
    sub_1BAB363E8(v13, (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    v16 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v17 = (v5 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v11;
    sub_1BB284648((uint64_t)v6, v18 + v16);
    *(_QWORD *)(v18 + v17) = v15;
    *(_OWORD *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v26;
    aBlock[4] = sub_1BB28468C;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = &block_descriptor_59;
    v19 = _Block_copy(aBlock);
    v20 = v25;
    swift_retain();
    swift_unknownObjectRetain();
    swift_release();
    objc_msgSend(v20, sel_addDebuggerAction_, v19);

    _Block_release(v19);
LABEL_6:
    v21 = *(void **)(v1 + v7);
    if (!v21)
      return;
    goto LABEL_7;
  }

  v21 = *(void **)(v1 + v7);
  if (!v21)
    return;
LABEL_7:
  objc_msgSend(v21, sel_setDelegate_, v1);
  v22 = *(void **)(v1 + v7);
  if (v22)
  {
    objc_msgSend(v22, sel_setDataSource_, v1);
    v23 = *(void **)(v1 + v7);
    if (v23)
      objc_msgSend(v23, sel_setEnablePictureInPictureBehaviors_, 1);
  }
}

uint64_t sub_1BB281BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  ValueMetadata *v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  char v34;

  v27 = a4;
  v28 = a5;
  v25 = a1;
  sub_1BA4B07F0(0, &qword_1EF2BFDA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52640], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v29 = (char *)&v23 - v8;
  v24 = sub_1BB8709F0();
  v9 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB871A70();
  v26 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3 + 16;
  v19 = *(_QWORD *)(a2 + 40);
  sub_1BAB363E8(a2, (uint64_t)v14);
  if (!v19)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  sub_1BB8720F4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB9EF8], v24);
  v30 = &type metadata for Tracker;
  v31 = sub_1BB2846E0();
  swift_beginAccess();
  MEMORY[0x1BCCE5D40](v18);
  v32 = 0u;
  v33 = 0u;
  v34 = 1;
  sub_1BB87069C();
  swift_allocObject();
  sub_1BB870684();
  swift_getObjectType();
  sub_1BB871488();
  v20 = v26;
  v21 = (uint64_t)v29;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v29, v17, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v21, 0, 1, v15);
  swift_retain();
  sub_1BB86FF4C();
  swift_release();
  swift_release_n();
  sub_1BB284724(v21);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v17, v15);
}

void sub_1BB281EDC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  char **v5;
  _BYTE v6[16];

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cover;
  swift_beginAccess();
  sub_1BB284338(v1, (uint64_t)v6);
  LODWORD(v1) = v6[8];
  sub_1BB28438C((uint64_t)v6);
  if ((_DWORD)v1 == 1
    && (*(_BYTE *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_isBookmarkInProgress) & 1) == 0
    && (*(_BYTE *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_isViewTransitionInProcess) & 1) == 0)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
    if (v2)
    {
      v3 = v2;
      if (!objc_msgSend(v3, sel_isPlaying)
        || (objc_msgSend(v3, sel_isFullscreenInProgress) & 1) != 0)
      {
        goto LABEL_12;
      }
      v4 = objc_msgSend(v3, sel_mode);
      if (v4)
      {
        if (v4 != (id)1)
        {
LABEL_12:

          return;
        }
        v5 = &selRef_pause;
      }
      else
      {
        v5 = &selRef_startPictureInPictureIfPossible;
      }
      objc_msgSend(v3, *v5);
      goto LABEL_12;
    }
  }
}

void sub_1BB28203C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = sub_1BB86BEF0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB870C9C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 0;
  v18 = 1;
  v11 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cover;
  swift_beginAccess();
  sub_1BB284F28((uint64_t)&v17, v11);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_1BB870C84();
  v12 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1BB870C90();
    if (v14)
    {
      v15 = (void *)v14;
      if ((sub_1BB8733D8() & 1) != 0)
      {
        swift_unknownObjectWeakInit();

        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        v18 = 0;
        swift_beginAccess();
        sub_1BB284F28((uint64_t)&v17, v11);
        swift_endAccess();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void sub_1BB282228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  char v17;
  id v18;
  _BYTE v20[24];
  uint64_t v21;
  char v22;
  _BYTE v23[8];

  v3 = sub_1BB86BEF0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1BB870C9C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v6, a1, v3, v9);
  sub_1BB870C84();
  v12 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cover;
  swift_beginAccess();
  sub_1BB284338(v12, (uint64_t)v20);
  if (v20[8] == 1)
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    sub_1BB28438C((uint64_t)v20);
    return;
  }
  sub_1BB284F18();
  v13 = (void *)MEMORY[0x1BCCE5D40](v23);
  v14 = sub_1BB870C90();
  v15 = (void *)v14;
  if (!v13)
  {
    sub_1BA8FD860((uint64_t)v23);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
    if (v15)
    {

      return;
    }
    goto LABEL_9;
  }
  if (!v14)
  {
    v18 = v13;
    sub_1BA8FD860((uint64_t)v23);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);

    return;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3C0420);
  v16 = v13;
  v17 = sub_1BB8738B8();
  sub_1BA8FD860((uint64_t)v23);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);

  if ((v17 & 1) != 0)
  {
LABEL_9:
    v21 = 0;
    v22 = 1;
    swift_beginAccess();
    sub_1BB284F28((uint64_t)&v21, v12);
    swift_endAccess();
  }
}

uint64_t sub_1BB282590()
{
  return type metadata accessor for FormatVideoPlayerManager();
}

uint64_t type metadata accessor for FormatVideoPlayerManager()
{
  uint64_t result;

  result = qword_1EF2BFCC8;
  if (!qword_1EF2BFCC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB2825D4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatVideoPlayerData();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

void sub_1BB2826C0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  _QWORD v29[7];
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  sub_1BB282A04((uint64_t)&v30);
  if (v31)
  {
    v27 = v31;
    v4 = v30;
    v6 = v32;
    v5 = v33;
    v8 = v34;
    v7 = v35;
    v9 = v36;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_sceneProvider), *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_sceneProvider + 24));
    v10 = (void *)sub_1BB86FFC4();
    if (v10)
    {
      v11 = v10;
      v26 = objc_msgSend(v10, sel_rootViewController);

      if (v26)
      {
        v12 = objc_msgSend(v26, sel_presentedViewController);
        if (v12 && (v13 = v12, objc_opt_self(), v14 = swift_dynamicCastObjCClass(), v13, v14))
        {
          sub_1BA6D6924(v4, (uint64_t)v27);

        }
        else
        {
          v22 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory);
          v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory + 24);
          v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory + 32);
          __swift_project_boxed_opaque_existential_1(v22, v23);
          v29[0] = v4;
          v29[1] = v27;
          v29[2] = v6;
          v29[3] = v5;
          v29[4] = v8;
          v29[5] = v7;
          v29[6] = v9;
          v25 = (id)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v24 + 8))(v29, v23, v24);
          sub_1BA6D6924(v4, (uint64_t)v27);
          objc_msgSend(v26, sel_presentViewController_animated_completion_, v25, 1, 0);

        }
      }
      else
      {
        sub_1BA6D6924(v4, (uint64_t)v27);
      }
    }
    else
    {
      sub_1BA6D6924(v4, (uint64_t)v27);
    }
  }
  else
  {
    sub_1BB281950(a1);
    v15 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
    if (v15)
    {
      v16 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate;
      v17 = MEMORY[0x1BCCE5D40](v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
      v28 = v15;
      if (v17)
      {
        sub_1BB2D1C64(v28);
        swift_unknownObjectRelease();
      }
      v18 = MEMORY[0x1BCCE5D40](v16);
      if (v18)
      {
        v19 = v18;
        sub_1BB873708();
        v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
        sub_1BB873708();
        v21 = *(id *)(v20 + qword_1ED476B40);
        sub_1BB873708();

        sub_1BB873708();
        swift_unknownObjectRelease();
      }
      objc_msgSend(v28, sel_playWithButtonTapped_, 1);

    }
  }
}

uint64_t sub_1BB282A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)(v1 + qword_1EF2C4698);
  v5 = *(_QWORD *)(v1 + qword_1EF2C4698 + 24);
  v4 = *(_QWORD *)(v1 + qword_1EF2C4698 + 32);
  __swift_project_boxed_opaque_existential_1(v3, v5);
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 8) + 8))(v5);
  switch(result)
  {
    case 0:
      *(_QWORD *)(a1 + 48) = 0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      return result;
    case 1:
    case 2:
      if (qword_1EF2A74A0 != -1)
        swift_once();
      v7 = &qword_1EF3D0B10;
      goto LABEL_15;
    case 3:
      if (qword_1EF2A74C0 != -1)
        swift_once();
      v7 = &qword_1EF3D0BF0;
      goto LABEL_15;
    case 4:
    case 5:
      if (qword_1EF2A74B0 != -1)
        swift_once();
      v7 = &qword_1EF3D0B80;
      goto LABEL_15;
    case 6:
      if (qword_1EF2A74B8 != -1)
        swift_once();
      v7 = &qword_1EF3D0BB8;
LABEL_15:
      v8 = v7[1];
      v9 = v7[2];
      v10 = v7[3];
      v11 = v7[4];
      v12 = v7[5];
      v13 = v7[6];
      *(_QWORD *)a1 = *v7;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v10;
      *(_QWORD *)(a1 + 32) = v11;
      *(_QWORD *)(a1 + 40) = v12;
      *(_QWORD *)(a1 + 48) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      break;
    default:
      result = sub_1BB873EAC();
      __break(1u);
      break;
  }
  return result;
}

void sub_1BB282BF0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  _QWORD v31[7];
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  sub_1BB282A04((uint64_t)&v32);
  if (v33)
  {
    v29 = v33;
    v4 = v32;
    v6 = v34;
    v5 = v35;
    v8 = v36;
    v7 = v37;
    v9 = v38;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_sceneProvider), *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_sceneProvider + 24));
    v10 = (void *)sub_1BB86FFC4();
    if (v10
      && (v11 = v10,
          v28 = objc_msgSend(v10, sel_rootViewController),
          v11,
          v28))
    {
      v12 = objc_msgSend(v28, sel_presentedViewController);
      if (v12 && (v13 = v12, objc_opt_self(), v14 = swift_dynamicCastObjCClass(), v13, v14))
      {
        sub_1BA6D6924(v4, (uint64_t)v29);

      }
      else
      {
        v22 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory);
        v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory + 24);
        v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory + 32);
        __swift_project_boxed_opaque_existential_1(v22, v23);
        v31[0] = v4;
        v31[1] = v29;
        v31[2] = v6;
        v31[3] = v5;
        v31[4] = v8;
        v31[5] = v7;
        v31[6] = v9;
        v27 = (void *)(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v24 + 8))(v31, v23, v24);
        sub_1BA6D6924(v4, (uint64_t)v29);
        objc_msgSend(v28, sel_presentViewController_animated_completion_, v27, 1, 0);

      }
    }
    else
    {
      sub_1BA6D6924(v4, (uint64_t)v29);
    }
    return;
  }
  sub_1BB281950(a1);
  v15 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (!v15)
    return;
  v16 = v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate;
  v17 = MEMORY[0x1BCCE5D40](v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
  v18 = v15;
  v30 = v18;
  if (v17)
  {
    sub_1BB2D1C64(v18);
    swift_unknownObjectRelease();
    v18 = v30;
  }
  v19 = objc_msgSend(v18, sel_isPictureInPictureActive);
  v20 = MEMORY[0x1BCCE5D40](v16);
  v21 = v20;
  if (v19)
  {
    if (v20)
      goto LABEL_18;
  }
  else if (v20)
  {
LABEL_18:
    sub_1BB873708();
    v25 = *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
    sub_1BB873708();
    v26 = *(id *)(v25 + qword_1ED476B40);
    sub_1BB873708();

    sub_1BB873708();
    swift_unknownObjectRelease();
  }
  if (objc_msgSend(v30, sel_isPlaying))
    objc_msgSend(v30, sel_pause);
  else
    objc_msgSend(v30, sel_playWithButtonTapped_, 1);

}

void sub_1BB282FF8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  _QWORD aBlock[6];

  v2 = v1;
  v38 = a1;
  v3 = sub_1BB872610();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB872664();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatPictureInPictureModel();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86C67C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_1BB86E14C();
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatPictureInPictureModel);
  v15 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (v15)
  {
    v16 = v15;
    if (objc_msgSend(v16, sel_isFullscreen)
      || objc_msgSend(v16, sel_isFullscreenInProgress))
    {
      goto LABEL_4;
    }
    if (objc_msgSend(v38, sel_isPlaying))
    {
      if (*(double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage) < 1.0)
      {
        v17 = objc_msgSend(v38, sel_playerViewController);
        v18 = objc_msgSend(v17, sel_presentingViewController);

        if (!v18)
        {
          objc_msgSend(v38, sel_pause);
          v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator + 24);
          v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator + 32);
          __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator), v20);
          (*(void (**)(uint64_t, uint64_t))(v19 + 104))(v20, v19);
        }
      }
    }
    v21 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v22 = objc_msgSend(v21, sel_userInterfaceIdiom);

    if (v22 == (id)5)
      objc_msgSend(v38, sel_pause);
    v23 = MEMORY[0x1BCCE5D40](v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
    if (v23)
    {
      v24 = v23;
      sub_1BB873708();
      v25 = *(_QWORD *)(v24 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1BB873708();
      v26 = *(id *)(v25 + qword_1ED476B40);
      sub_1BB873708();

      sub_1BB873708();
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
      v37 = sub_1BB87345C();
      v27 = swift_allocObject();
      v28 = v38;
      *(_QWORD *)(v27 + 16) = v38;
      aBlock[4] = sub_1BB284E20;
      aBlock[5] = v27;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BA4F1DD8;
      aBlock[3] = &block_descriptor_24_2;
      v36 = _Block_copy(aBlock);
      v29 = v28;
      swift_release();
      sub_1BB872634();
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1BA571CB8();
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA571C58();
      sub_1BB873BC4();
      v31 = v36;
      v30 = (void *)v37;
      MEMORY[0x1BCCE3D90](0, v10, v6, v36);

      _Block_release(v31);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return;
    }
    if (!MEMORY[0x1BCCE5D40](v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate))
    {
LABEL_4:

    }
    else
    {
      v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey);
      v33 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey + 8);
      swift_beginAccess();
      v34 = (void *)sub_1BAA497D0(v32, v33);
      swift_endAccess();
      swift_unknownObjectRelease();

    }
  }
}

void sub_1BB283528(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id))
{
  id v7;
  id v8;

  v7 = a3;
  swift_unknownObjectRetain();
  v8 = a1;
  a5(v7);

  swift_unknownObjectRelease();
}

uint64_t sub_1BB283608(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  unsigned int v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  _QWORD aBlock[6];

  v3 = sub_1BB872610();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB872664();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_embedVideoPlayerIfNeeded, v9);
  v12 = objc_msgSend(a1, sel_isPictureInPictureActive);
  result = MEMORY[0x1BCCE5D40](v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
  v14 = result;
  if (v12)
  {
    if (result)
    {
      sub_1BB873708();
      v15 = *(_QWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1BB873708();
      v16 = *(id *)(v15 + qword_1ED476B40);
      sub_1BB873708();

      sub_1BB873708();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    if (result)
    {
      sub_1BB873708();
      v17 = *(_QWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1BB873708();
      v18 = *(id *)(v17 + qword_1ED476B40);
      sub_1BB873708();

      sub_1BB873708();
      swift_unknownObjectRelease();
    }
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v19 = (void *)sub_1BB87345C();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a1;
    aBlock[4] = sub_1BB284E20;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = &block_descriptor_9_2;
    v21 = _Block_copy(aBlock);
    v22 = a1;
    swift_release();
    sub_1BB872634();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1BA571CB8();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA571C58();
    sub_1BB873BC4();
    MEMORY[0x1BCCE3D90](0, v11, v6, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  return result;
}

uint64_t sub_1BB2839AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  v3 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data + 48);
  if (v7)
  {
    if ((objc_msgSend((id)swift_unknownObjectRetain(), sel_disablePrerollAds) & 1) == 0
      && *((_BYTE *)v6 + *(int *)(v3 + 52)) == 1)
    {
      v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_videoAdProviderFactory + 24);
      v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_videoAdProviderFactory + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_videoAdProviderFactory), v8);
      v10 = v6[4];
      v11 = v6[5];
      sub_1BAB363E8((uint64_t)v6, (uint64_t)v5);
      if (v11)
      {
        v12 = v11;
      }
      else
      {
        v10 = *((_QWORD *)v5 + 2);
        v12 = *((_QWORD *)v5 + 3);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(v7, v10, v12, a1, v8, v9);
      swift_unknownObjectRelease();
      goto LABEL_10;
    }
    swift_unknownObjectRelease();
  }
  if (qword_1ED3BB670 != -1)
    swift_once();
  v13 = (void *)qword_1ED4768A8;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
  v15 = v6[1];
  v24[0] = *v6;
  v24[1] = v15;
  v16 = MEMORY[0x1E0DEA968];
  sub_1BA4CF8F4(0, (unint64_t *)&qword_1ED3B9200);
  v17 = v13;
  swift_bridgeObjectRetain();
  v18 = sub_1BB872A00();
  v20 = v19;
  *(_QWORD *)(v14 + 56) = v16;
  *(_QWORD *)(v14 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v14 + 32) = v18;
  *(_QWORD *)(v14 + 40) = v20;
  v21 = sub_1BB87330C();
  sub_1BB86EF44("Skipping preroll ad for headline: %{public}@", 44, 2, &dword_1BA493000, v17, v21, v14);

  v22 = 0;
LABEL_10:
  swift_bridgeObjectRelease();
  return v22;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerManagerCover()
{
  return &type metadata for FormatVideoPlayerManagerCover;
}

uint64_t sub_1BB283CBC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (v2)
  {
    objc_msgSend(v2, sel_pause);
    v3 = *(void **)(v0 + v1);
    if (v3)
      objc_msgSend(v3, sel_stopPictureInPicture);
  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator + 24);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator), v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
}

void sub_1BB283D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController))
  {
    if (MEMORY[0x1BCCE5D40](v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate))
    {
      v1 = v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey;
      v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey);
      v3 = *(_QWORD *)(v1 + 8);
      swift_beginAccess();
      v4 = (void *)sub_1BAA497D0(v2, v3);
      swift_endAccess();
      swift_unknownObjectRelease();

    }
  }
}

id sub_1BB283DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _BYTE *v12;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  void *v46;
  uint64_t v48;
  uint64_t v49;
  objc_class *ObjectType;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  objc_super v60;

  v56 = a8;
  v57 = a3;
  v48 = a6;
  v49 = a7;
  v58 = a2;
  v59 = a1;
  v51 = a11;
  v52 = a12;
  v55 = a10;
  ObjectType = (objc_class *)swift_getObjectType();
  v19 = sub_1BB86BEF0();
  v53 = *(_QWORD *)(v19 - 8);
  v54 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offscreenVisibility] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_partialVisibility] = 0x3FE0000000000000;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_onscreenVisibility] = 0x3FF0000000000000;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage] = 0x3FF0000000000000;
  v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_isBookmarkInProgress] = 0;
  v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_isViewTransitionInProcess] = 0;
  v22 = &v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cover];
  *(_QWORD *)v22 = 0;
  v22[8] = 1;
  sub_1BAB363E8(a1, (uint64_t)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data]);
  sub_1BA4C010C(a2, (uint64_t)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator]);
  sub_1BA4C010C(a3, (uint64_t)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_videoAdProviderFactory]);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_pictureInPictureState] = a4;
  v23 = &v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_commandCenter];
  v24 = v48;
  v25 = v49;
  *v23 = a5;
  v23[1] = v24;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_adJournal] = v25;
  sub_1BA4C010C(a8, (uint64_t)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_sceneProvider]);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineManager] = a9;
  sub_1BA4C010C(a10, (uint64_t)&v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_offlineAlertControllerFactory]);
  v26 = &v12[OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey];
  v27 = v52;
  *v26 = v51;
  v26[1] = v27;
  v60.receiver = v12;
  v60.super_class = ObjectType;
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  v28 = a9;
  v29 = objc_msgSendSuper2(&v60, sel_init);
  v30 = (void *)objc_opt_self();
  v31 = v29;
  v32 = objc_msgSend(v30, sel_defaultCenter);
  sub_1BA49A224(0, &qword_1EF2BFDB8);
  v33 = v31;
  sub_1BB873540();
  v34 = (void *)sub_1BB86BED8();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v21, v54);
  objc_msgSend(v32, sel_addObserver_selector_name_object_, v33, sel_startPictureInPictureIfPossible, v34, 0);

  v35 = objc_msgSend(v30, sel_defaultCenter);
  v36 = v33;
  v37 = (void *)sub_1BB86FE68();
  objc_msgSend(v35, sel_addObserver_selector_name_object_, v36, sel_willApplyBookmark, v37, 0);

  v38 = objc_msgSend(v30, sel_defaultCenter);
  v39 = v36;
  v40 = (void *)sub_1BB86FE5C();
  objc_msgSend(v38, sel_addObserver_selector_name_object_, v39, sel_didApplyBookmark, v40, 0);

  v41 = objc_msgSend(v30, sel_defaultCenter);
  sub_1BB86FDE4();
  v42 = v39;
  v43 = (void *)sub_1BB86FDB4();
  objc_msgSend(v41, sel_addObserver_selector_name_object_, v42, sel_didStartCoveringWithNotification_, v43, 0);

  v44 = objc_msgSend(v30, sel_defaultCenter);
  v45 = v42;
  v46 = (void *)sub_1BB86FD9C();
  objc_msgSend(v44, sel_addObserver_selector_name_object_, v45, sel_didFinishCoveringWithNotification_, v46, 0);

  __swift_destroy_boxed_opaque_existential_1(v55);
  __swift_destroy_boxed_opaque_existential_1(v56);
  __swift_destroy_boxed_opaque_existential_1(v57);
  __swift_destroy_boxed_opaque_existential_1(v58);
  sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  return v45;
}

void sub_1BB284280(double a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  unsigned int v4;
  void *v5;
  id v6;
  id v7;

  v2 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage;
  *(double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage) = a1;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (v3)
  {
    v7 = v3;
    v4 = objc_msgSend(v7, sel_isPlaying);
    v5 = v7;
    if (v4)
    {
      v6 = objc_msgSend(v7, sel_mode);
      if (v6 != (id)1)
      {
        v5 = v7;
        if (v6 || *(double *)(v1 + v2) >= 1.0)
          goto LABEL_10;
        goto LABEL_9;
      }
      v5 = v7;
      if (*(double *)(v1 + v2) <= 0.5)
      {
LABEL_9:
        sub_1BB281EDC();
        v5 = v7;
      }
    }
LABEL_10:

  }
}

uint64_t sub_1BB284338(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4CF8F4(0, &qword_1EF2BFD98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB28438C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4CF8F4(0, &qword_1EF2BFD98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BB2843D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController;
  v3 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
  if (v3 && objc_msgSend(v3, sel_isLoading))
  {
    v4 = v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate;
    v5 = MEMORY[0x1BCCE5D40](v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
    if (v5)
    {
      v6 = v5;
      sub_1BB873708();
      v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1BB873708();
      v8 = *(id *)(v7 + qword_1ED476B40);
      sub_1BB873708();

      sub_1BB873708();
      swift_unknownObjectRelease();
    }
    if (MEMORY[0x1BCCE5D40](v4))
    {
      sub_1BB2D19A8();
      swift_unknownObjectRelease();
    }
    v9 = *(void **)(v1 + v2);
    if (v9)
    {
      objc_msgSend(v9, sel_pause);
      v9 = *(void **)(v1 + v2);
    }
    *(_QWORD *)(v1 + v2) = 0;

  }
  else
  {
    sub_1BB281EDC();
  }
}

uint64_t sub_1BB284510()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB284534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for FormatVideoPlayerData();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 36);
  v5 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB284648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatVideoPlayerData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB28468C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FormatVideoPlayerData() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BB281BDC(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

unint64_t sub_1BB2846E0()
{
  unint64_t result;

  result = qword_1EF2BFDA8;
  if (!qword_1EF2BFDA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF740, &type metadata for Tracker);
    atomic_store(result, (unint64_t *)&qword_1EF2BFDA8);
  }
  return result;
}

uint64_t sub_1BB284724(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1EF2BFDA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52640], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB284778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v1 = type metadata accessor for FormatPictureInPictureModel();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data;
  v5 = v4 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 36);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v3, v5, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
  sub_1BB86E14C();
  sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatPictureInPictureModel);
  result = MEMORY[0x1BCCE5D40](v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
  if (result)
  {
    v9 = result;
    sub_1BB873708();
    v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
    sub_1BB873708();
    v11 = *(id *)(v10 + qword_1ED476B40);
    sub_1BB873708();

    sub_1BB873708();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BB284904(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v4;
  id v5;
  id v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  if ((objc_msgSend(a1, sel_isFullscreen) & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    v5 = objc_msgSend(a1, sel_viewIfLoaded);
    v6 = objc_msgSend(v5, sel_window);

    v4 = v6 == 0;
  }
  if (*(double *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage) != 0.0 && !v4)
  {
    result = MEMORY[0x1BCCE5D40](v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate);
    if (result)
    {
      sub_1BB359DAC(*(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey), *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey + 8));
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    v8 = v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate;
    v9 = MEMORY[0x1BCCE5D40](v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_delegate);
    if (v9)
    {
      v10 = v9;
      sub_1BB873708();
      v11 = *(_QWORD *)(v10 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame);
      sub_1BB873708();
      v12 = *(id *)(v11 + qword_1ED476B40);
      sub_1BB873708();

      sub_1BB873708();
      swift_unknownObjectRelease();
    }
    if (MEMORY[0x1BCCE5D40](v8))
    {
      sub_1BB2D19A8();
      swift_unknownObjectRelease();
    }
    v13 = OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController;
    v14 = *(void **)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_playerViewController);
    if (v14)
    {
      objc_msgSend(v14, sel_pause);
      v15 = *(void **)(v2 + v13);
    }
    else
    {
      v15 = 0;
    }
    *(_QWORD *)(v2 + v13) = 0;

    v17 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator);
    v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator + 24);
    v19 = v17[4];
    __swift_project_boxed_opaque_existential_1(v17, v18);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 104))(v18, v19);
  }
  return result;
}

uint64_t sub_1BB284B04(void *a1)
{
  uint64_t v1;
  uint64_t result;

  if (*(double *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_visibilityPercentage) <= 0.5
    && objc_msgSend(a1, sel_mode) == (id)1)
  {
    objc_msgSend(a1, sel_pause);
  }
  result = MEMORY[0x1BCCE5D40](v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_reuseDelegate);
  if (result)
  {
    sub_1BB359DAC(*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey), *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_cacheKey + 8));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BB284B9C(void *a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  v5 = (void *)objc_opt_self();
  _Block_copy(a2);
  v6 = objc_msgSend(v5, sel_currentDevice);
  v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

  if (v7 == (id)5 || objc_msgSend(a1, sel_isFullscreen))
  {
    a2[2](a2, 1);
    return swift_release();
  }
  else
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = sub_1BB284E48;
    *(_QWORD *)(v9 + 24) = v4;
    v11[4] = sub_1BB284E80;
    v11[5] = v9;
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 1107296256;
    v11[2] = sub_1BA4F1DD8;
    v11[3] = &block_descriptor_18_2;
    v10 = _Block_copy(v11);
    swift_retain();
    swift_release();
    objc_msgSend(a1, sel_enterFullscreenWithCompletionBlock_, v10);
    _Block_release(v10);
    return swift_release();
  }
}

id sub_1BB284D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  char *v5;
  id v6;
  uint64_t v8;
  objc_super v9;
  _BYTE v10[40];

  v1 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB363E8(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_data, (uint64_t)v3);
  sub_1BA4C010C(v0 + OBJC_IVAR____TtC8NewsFeed24FormatVideoPlayerManager_coordinator, (uint64_t)v10);
  v4 = (objc_class *)type metadata accessor for FormatVideoPlayerProvider();
  v5 = (char *)objc_allocWithZone(v4);
  *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata] = 0;
  sub_1BAB363E8((uint64_t)v3, (uint64_t)&v5[OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data]);
  sub_1BA4C010C((uint64_t)v10, (uint64_t)&v5[OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator]);
  v9.receiver = v5;
  v9.super_class = v4;
  v6 = objc_msgSendSuper2(&v9, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  return v6;
}

uint64_t sub_1BB284E24()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BB284E48(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

uint64_t sub_1BB284E5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB284E80()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1BB284EA4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BB284EC8()
{
  uint64_t v0;
  void *v1;
  id result;

  v1 = *(void **)(v0 + 16);
  result = objc_msgSend(v1, sel_isPlaying);
  if ((result & 1) == 0)
    return objc_msgSend(v1, sel_flashPlaybackControlsWithDuration_, 1.79769313e308);
  return result;
}

uint64_t sub_1BB284F18()
{
  return swift_unknownObjectWeakTakeInit();
}

uint64_t sub_1BB284F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4CF8F4(0, &qword_1EF2BFD98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for Tracker()
{
  return &type metadata for Tracker;
}

uint64_t sub_1BB284FA8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

void sub_1BB284FE0(uint64_t a1, uint64_t a2, uint64_t a3, void **a4, char *a5, uint64_t a6)
{
  sub_1BB285034(a4, *a5, a6);
}

uint64_t sub_1BB28500C(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  return sub_1BB2852B0(a4) & 1;
}

void sub_1BB285034(void **a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;

  v4 = v3;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3A3F00, (void (*)(uint64_t))MEMORY[0x1E0DB9F30]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - v13;
  v15 = *a1;
  if ((a2 & 1) != 0)
  {
    if (a3)
    {
      sub_1BB870690();
      v18 = sub_1BB8709F0();
      v19 = *(_QWORD *)(v18 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
      sub_1BB1CAA38((uint64_t)v14, (uint64_t)v10);
      if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v10, v18) == *MEMORY[0x1E0DB9EF0])
      {
        v20 = *(void **)(v4 + 16);
        v21 = objc_msgSend(v15, sel_identifier);
        if (!v21)
        {
          sub_1BB8729A0();
          v21 = (id)sub_1BB872970();
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v20, sel_addArticleToReadingList_eventInitiationLevel_origin_, v21, 1, 3);
LABEL_15:

        sub_1BA502AD0((uint64_t)v14, (unint64_t *)&unk_1ED3A3F00, (void (*)(uint64_t))MEMORY[0x1E0DB9F30]);
        return;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
    }
    else
    {
      v22 = sub_1BB8709F0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 1, 1, v22);
    }
    v23 = *(void **)(v4 + 16);
    v21 = objc_msgSend(v15, sel_identifier);
    if (!v21)
    {
      sub_1BB8729A0();
      v21 = (id)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v23, sel_addArticleToReadingList_, v21);
    goto LABEL_15;
  }
  v16 = *(void **)(v4 + 16);
  v17 = objc_msgSend(v15, sel_identifier, v12);
  if (!v17)
  {
    sub_1BB8729A0();
    v25 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
    v17 = v25;
  }
  v25 = v17;
  objc_msgSend(v16, sel_removeArticleFromReadingList_);

}

uint64_t sub_1BB2852B0(void **a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  __objc2_class_ro *v15;
  id v16;
  unsigned int v17;
  int v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  char *v42;
  id v43;
  id v44;
  unint64_t v45;
  id v46;
  unsigned int v47;
  id v48;
  id v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  id v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[24];
  uint64_t v57;

  v2 = v1;
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v52 - v11;
  v13 = *a1;
  v14 = (void *)v1[2];
  v15 = &StubThumbnailProcessor;
  v16 = objc_msgSend(v13, sel_identifier, v10);
  if (!v16)
  {
    sub_1BB8729A0();
    v16 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v17 = objc_msgSend(v14, sel_isArticleOnReadingList_, v16);

  if (v17)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  v19 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
    return 1;
  v20 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v21 = objc_msgSend(v20, sel_bundleIdentifier);

  if (v21)
  {
    v22 = sub_1BB8729A0();
    v24 = v23;

    if (v22 == 0x6C7070612E6D6F63 && v24 == 0xEE007377656E2E65)
    {
      swift_bridgeObjectRelease();
      v15 = &StubThumbnailProcessor;
      goto LABEL_13;
    }
    v25 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v15 = &StubThumbnailProcessor;
    if ((v25 & 1) != 0)
      goto LABEL_13;
  }
  v26 = v2[7];
  v27 = v2[8];
  __swift_project_boxed_opaque_existential_1(v2 + 4, v26);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v27 + 32))(v26, v27) & 1) == 0)
    return 0;
LABEL_13:
  if ((objc_msgSend(v13, sel_respondsToSelector_, sel_role) & 1) != 0)
  {
    v28 = (unint64_t)objc_msgSend(v13, sel_role);
    if (v28 < 8 && ((0x9Du >> v28) & 1) != 0)
      return 0;
  }
  v29 = objc_msgSend(v13, sel_routeURL);
  if (v29)
  {
    v30 = v29;
    sub_1BB86C5EC();

    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v12, v7, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v12, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) != 1)
    {
      sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v12, 1, 1, v4);
  }
  sub_1BA502AD0((uint64_t)v12, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (objc_msgSend(v13, sel_contentType) == (id)1)
    return 0;
  v31 = objc_msgSend(v13, sel_sourceChannel);
  if (!v31)
    return 1;
  v32 = v31;
  v33 = (void *)v2[3];
  swift_unknownObjectRetain();
  v34 = objc_msgSend(v33, sel_purchaseProvider);
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
  {
    v35 = objc_msgSend(v32, sel_asSection);
    if (!v35
      || (v36 = objc_msgSend(v35, sel_parentID), swift_unknownObjectRelease(), !v36))
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_30;
    }
  }
  else
  {
    v36 = objc_msgSend(v32, (SEL)v15[26].base_meths);
  }
  v37 = sub_1BB8729A0();
  v39 = v38;

  v40 = objc_msgSend(v34, sel_purchasedTagIDs);
  v41 = sub_1BB873030();

  LOBYTE(v40) = sub_1BA761FE4(v37, v39, v41);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
  {
    swift_unknownObjectRelease_n();
    return 1;
  }
LABEL_30:
  v42 = (char *)objc_msgSend(objc_msgSend(v33, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v42, v42 + 1))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v54, (uint64_t)v56);
  if (!v57)
  {
    sub_1BA6EDA74((uint64_t)v56);
    goto LABEL_38;
  }
  sub_1BA78DE28();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_38:
    v43 = 0;
    v45 = 0;
    goto LABEL_39;
  }
  v43 = v53;
  v44 = objc_msgSend(v53, sel_integerValue);
  if (v44 == (id)-1)
  {

    goto LABEL_50;
  }
  v45 = (unint64_t)v44;
LABEL_39:
  if (objc_getAssociatedObject(v42, (const void *)~v45))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v54, (uint64_t)v56);
  if (!v57)
  {
    sub_1BA6EDA74((uint64_t)v56);
LABEL_47:

    if ((v45 & 1) != 0)
      goto LABEL_50;
LABEL_48:
    swift_unknownObjectRelease();
    goto LABEL_54;
  }
  sub_1BA78DE28();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_47;
  v46 = v53;
  v47 = objc_msgSend(v46, sel_integerValue);

  if ((((v47 + 1) ^ ((_DWORD)v45 + 1)) & 1) == 0)
    goto LABEL_48;
LABEL_50:
  v48 = objc_msgSend(objc_msgSend(v33, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  v49 = objc_msgSend(v32, (SEL)v15[26].base_meths);
  if (!v49)
  {
    sub_1BB8729A0();
    v49 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v50 = objc_msgSend(v48, sel_containsTagID_, v49);
  swift_unknownObjectRelease();

  if (v50)
  {
    swift_unknownObjectRelease();
    return 1;
  }
LABEL_54:
  v51 = objc_msgSend((id)swift_unknownObjectRetain(), sel_isPaid);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v51 ^ 1;
}

ValueMetadata *type metadata accessor for A18_V3()
{
  return &type metadata for A18_V3;
}

uint64_t sub_1BB285A5C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2BFEF8, (uint64_t (*)(void))sub_1BB288A84, (uint64_t)&type metadata for A18_V3.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB288A84();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB285C10()
{
  sub_1BB288A84();
  return sub_1BB874710();
}

uint64_t sub_1BB285C38()
{
  sub_1BB288A84();
  return sub_1BB87471C();
}

double sub_1BB285C60@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB288870(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB285CA4(_QWORD *a1)
{
  return sub_1BB285A5C(a1);
}

uint64_t sub_1BB285CB8()
{
  sub_1BB28856C();
  return sub_1BB86D96C();
}

uint64_t sub_1BB285D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A18_V3;
  v20 = sub_1BA8EE094();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A18_V3;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E7269E40, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E7269E68, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A18_V3.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(qword_1EF2BFDD0, (uint64_t (*)(uint64_t))type metadata accessor for A18_V3.Bound, (uint64_t)&unk_1BB8FF8B0);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

double sub_1BB286354@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  double result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  _BYTE *v43;
  _QWORD v44[18];
  char v45[105];
  __int128 v46[2];
  __int128 v47[2];
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = v1;
  v43 = a1;
  v3 = sub_1BB86DA38();
  v40 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)&v41 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + *(int *)(type metadata accessor for A18_V3.Bound() + 24);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = *(_QWORD *)(v6 + *(int *)(v7 + 40));
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(int *)(v7 + 32);
  v42 = v6;
  v11 = *(double *)(v6 + v10);
  sub_1BA4C010C(v9 + 16, (uint64_t)v47);
  sub_1BA4C010C(v9 + 56, (uint64_t)v46);
  v12 = v11 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v47, inited + 16);
  sub_1BA4CECCC(v46, inited + 56);
  *(double *)(inited + 96) = v12;
  v45[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v45, (uint64_t *)&v48);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1BA829A4C();
  v14 = sub_1BB872E74();
  *(_QWORD *)(v14 + 16) = 3;
  sub_1BA4C010C((uint64_t)&v48, v14 + 32);
  sub_1BA4C010C((uint64_t)&v48, v14 + 72);
  sub_1BA4CECCC(&v48, v14 + 112);
  v15 = *(_QWORD *)(v8 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v47);
  sub_1BA4C010C(v15 + 56, (uint64_t)v46);
  v16 = v11 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v47, v17 + 16);
  sub_1BA4CECCC(v46, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v45[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v45, (uint64_t *)&v48);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v18 = sub_1BB872E74();
  *(_QWORD *)(v18 + 16) = 3;
  sub_1BA4C010C((uint64_t)&v48, v18 + 32);
  sub_1BA4C010C((uint64_t)&v48, v18 + 72);
  sub_1BA4CECCC(&v48, v18 + 112);
  *(_QWORD *)&v48 = v14;
  sub_1BA6B5BE8(v18);
  v19 = v48;
  v44[2] = v2;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BACB8FF0(v20, v19, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22 >= 3)
    v23 = 3;
  else
    v23 = *(_QWORD *)(v21 + 16);
  sub_1BB874434();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v25 = *(_QWORD *)(v24 + 16);
  swift_release();
  if (v25 == v22 - v23)
  {
    if (!swift_dynamicCastClass())
      swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v38 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    sub_1BA85CDD8(v21, v21 + ((v38 + 32) & ~v38), v23, (2 * v22) | 1);
  }
  swift_bridgeObjectRelease();
  v26 = *MEMORY[0x1E0DB5D88];
  v27 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v5, v26, v27);
  v28 = (*(uint64_t (**)(char *, _QWORD, _QWORD))(v40 + 104))(v5, *MEMORY[0x1E0DB6200], v41);
  MEMORY[0x1E0C80A78](v28);
  sub_1BB288610(0, &qword_1EF2BFE78, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v29 = sub_1BB86DB34();
  swift_release();
  v42 = v29;
  v30 = sub_1BB86DB40();
  v41 = v48;
  v31 = v49;
  v32 = v50;
  *(_QWORD *)&v48 = v21;
  *(_QWORD *)&v47[0] = v51;
  MEMORY[0x1E0C80A78](v30);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v33 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v48 = v33;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v34 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35 = v43;
  *v43 = 0;
  result = *(double *)&v41;
  *(_OWORD *)(v35 + 8) = v41;
  *((_QWORD *)v35 + 3) = v31;
  *((_QWORD *)v35 + 4) = v32;
  v37 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v35 + 5) = v34;
  *((_QWORD *)v35 + 6) = v37;
  return result;
}

uint64_t sub_1BB286944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2BFE90, (uint64_t (*)(void))sub_1BB288528, (uint64_t)&type metadata for A18_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 18;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BB288610(0, &qword_1EF2BFE98, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB2885D0(&qword_1EF2BFEA0, &qword_1EF2BFE98, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BB286AA0(uint64_t a1, void (*a2)(uint64_t *, uint64_t), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD);
  uint64_t v12;
  void (*v13)(uint64_t *);
  uint64_t (*v14)(uint64_t, _QWORD *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD);
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *);
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  unsigned int v38;
  uint64_t (*v39)(uint64_t, _QWORD, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  void (*v44)(uint64_t, _QWORD, uint64_t);
  unsigned int v45;
  void (*v46)(uint64_t *);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t *, uint64_t);
  void (*v52)(uint64_t *, uint64_t);
  uint64_t v53;

  v50 = a3;
  v51 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BFE90, (uint64_t (*)(void))sub_1BB288528, (uint64_t)&type metadata for A18_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v37 - v7);
  v53 = a1;
  v9 = sub_1BB86D438();
  v10 = swift_allocBox();
  v11 = *(void (**)(_QWORD))(*(_QWORD *)(v9 - 8) + 104);
  v45 = *MEMORY[0x1E0DB5A38];
  v44 = (void (*)(uint64_t, _QWORD, uint64_t))v11;
  v11(v12);
  *v8 = v10;
  v13 = *(void (**)(uint64_t *))(v6 + 104);
  v43 = *MEMORY[0x1E0DB6318];
  v13(v8);
  v14 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB288610(0, &qword_1EF2BFEA8, MEMORY[0x1E0DB5A10]);
  v16 = v15;
  v17 = sub_1BB2885D0(&qword_1EF2BFEB0, &qword_1EF2BFEA8, v14, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v18 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v18(v8, v5);
  v49 = a1;
  v53 = a1;
  v19 = *MEMORY[0x1E0DB63C0];
  v46 = v13;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v13)(v8, v19, v5);
  sub_1BB28868C();
  v21 = v20;
  sub_1BA4CDF6C(0, &qword_1EF2BFEC0, (uint64_t (*)(void))sub_1BB288528, (uint64_t)&type metadata for A18_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v23 = v22;
  v24 = *(_QWORD *)(v22 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (v25 + 32) & ~v25;
  v41 = v26 + *(_QWORD *)(v24 + 72);
  v42 = v21;
  v40 = v25 | 7;
  v27 = swift_allocObject();
  v37 = xmmword_1BB87CE70;
  *(_OWORD *)(v27 + 16) = xmmword_1BB87CE70;
  v28 = *(void (**)(_QWORD))(v24 + 104);
  v38 = *MEMORY[0x1E0DB5C80];
  v39 = (uint64_t (*)(uint64_t, _QWORD, uint64_t))v28;
  v28(v27 + v26);
  v52 = v51;
  v47 = v17;
  v48 = v16;
  sub_1BB86D498();
  v29 = v50;
  swift_bridgeObjectRelease();
  v51 = v18;
  result = ((uint64_t (*)(uint64_t *, uint64_t))v18)(v8, v5);
  if (*(_QWORD *)(v29 + 16) == 3)
  {
    v31 = v49;
    v53 = v49;
    v32 = swift_allocBox();
    v44(v33, v45, v9);
    *v8 = v32;
    v34 = v46;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v46)(v8, v43, v5);
    sub_1BB86D4EC();
    v51(v8, v5);
    v53 = v31;
    ((void (*)(uint64_t *, _QWORD, uint64_t))v34)(v8, *MEMORY[0x1E0DB6410], v5);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v37;
    v36 = v39(v35 + v26, v38, v23);
    MEMORY[0x1E0C80A78](v36);
    sub_1BB86D498();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t *, uint64_t))v51)(v8, v5);
  }
  return result;
}

uint64_t sub_1BB286E60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BFE90, (uint64_t (*)(void))sub_1BB288528, (uint64_t)&type metadata for A18_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v18 - v7);
  v23 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v22 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB288610(0, &qword_1EF2BFEA8, MEMORY[0x1E0DB5A10]);
  sub_1BB2885D0(&qword_1EF2BFEB0, &qword_1EF2BFEA8, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v23 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 6;
  *v8 = v14;
  v11(v8, v10, v5);
  v15 = v19;
  v21 = v19;
  sub_1BB86D4BC();
  v13(v8, v5);
  v23 = a1;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 6;
  *v8 = v16;
  v11(v8, v10, v5);
  v20 = v15;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BB2870C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BFE90, (uint64_t (*)(void))sub_1BB288528, (uint64_t)&type metadata for A18_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB288610(0, &qword_1EF2BFEA8, MEMORY[0x1E0DB5A10]);
  sub_1BB2885D0(&qword_1EF2BFEB0, &qword_1EF2BFEA8, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BB2874C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BFE90, (uint64_t (*)(void))sub_1BB288528, (uint64_t)&type metadata for A18_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB288610(0, &qword_1EF2BFEA8, MEMORY[0x1E0DB5A10]);
  sub_1BB2885D0(&qword_1EF2BFEB0, &qword_1EF2BFEA8, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BB2878CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BFE90, (uint64_t (*)(void))sub_1BB288528, (uint64_t)&type metadata for A18_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB288610(0, &qword_1EF2BFEA8, MEMORY[0x1E0DB5A10]);
  sub_1BB2885D0(&qword_1EF2BFEB0, &qword_1EF2BFEA8, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

void sub_1BB287CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, _QWORD *);
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  unsigned int v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2BFE90, (uint64_t (*)(void))sub_1BB288528, (uint64_t)&type metadata for A18_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (_QWORD *)((char *)v15 - v7);
  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v17 = *(_QWORD *)(v10 + 72);
    v16 = *MEMORY[0x1E0DB63F8];
    v15[1] = a2;
    swift_bridgeObjectRetain();
    v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    do
    {
      v19 = a1;
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = 6;
      *v8 = v13;
      v14 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, v16, v5);
      v18 = v15;
      MEMORY[0x1E0C80A78](v14);
      sub_1BB288610(0, &qword_1EF2BFEA8, v12);
      sub_1BB2885D0(&qword_1EF2BFEB0, &qword_1EF2BFEA8, v12, MEMORY[0x1E0DB5A18]);
      sub_1BB86D4BC();
      (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
      v11 += v17;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB287ED0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  uint64_t (*v23)(uint64_t, _QWORD *);
  _QWORD v25[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2BFE90, (uint64_t (*)(void))sub_1BB288528, (uint64_t)&type metadata for A18_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v25[0] = v7;
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v25 - v10);
  v25[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  v13 = (char *)v6 + v4[5];
  v14 = *MEMORY[0x1E0DB61C8];
  v15 = sub_1BB86DA20();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  v17 = (void *)*MEMORY[0x1E0DC4918];
  *v6 = 0;
  *(_QWORD *)((char *)v6 + v4[6]) = 0;
  *(_QWORD *)((char *)v6 + v4[7]) = v17;
  v18 = *MEMORY[0x1E0DC49E8];
  v19 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
  v20 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
  v21 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
  v22 = v17;
  _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(a2, (uint64_t)v6, v18, v19, v20, v21);
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
  v23 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB288610(0, &qword_1EF2BFEA8, MEMORY[0x1E0DB5A10]);
  sub_1BB2885D0(&qword_1EF2BFEB0, &qword_1EF2BFEA8, v23, MEMORY[0x1E0DB5A18]);
  sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v25[0]);
}

uint64_t sub_1BB28815C@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A18_V3.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB28823C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB285D20(a1, a2, a3);
}

uint64_t sub_1BB288250()
{
  return sub_1BB690B0C();
}

unint64_t sub_1BB288260(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB28828C();
  result = sub_1BB2882D0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB28828C()
{
  unint64_t result;

  result = qword_1EF2BFDC0;
  if (!qword_1EF2BFDC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF7FC, &type metadata for A18_V3);
    atomic_store(result, (unint64_t *)&qword_1EF2BFDC0);
  }
  return result;
}

unint64_t sub_1BB2882D0()
{
  unint64_t result;

  result = qword_1EF2BFDC8;
  if (!qword_1EF2BFDC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF824, &type metadata for A18_V3);
    atomic_store(result, (unint64_t *)&qword_1EF2BFDC8);
  }
  return result;
}

uint64_t type metadata accessor for A18_V3.Bound()
{
  uint64_t result;

  result = qword_1EF2BFE30;
  if (!qword_1EF2BFE30)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB288350()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB28835C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB2883D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB2883E4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB288458()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB2884E4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2BFE70, (uint64_t (*)(uint64_t))type metadata accessor for A18_V3.Bound, (uint64_t)&unk_1BB8FF888);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB288520(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB286944(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BB288528()
{
  unint64_t result;

  result = qword_1EF2BFE80;
  if (!qword_1EF2BFE80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF9E0, &type metadata for A18_V3.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2BFE80);
  }
  return result;
}

unint64_t sub_1BB28856C()
{
  unint64_t result;

  result = qword_1EF2BFE88;
  if (!qword_1EF2BFE88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF9B0, &type metadata for A18_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BFE88);
  }
  return result;
}

uint64_t sub_1BB2885B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB28815C(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB2885B8()
{
  return swift_deallocObject();
}

uint64_t sub_1BB2885C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB286AA0(a1, *(void (**)(uint64_t *, uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB2885D0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB288610(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB288610(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A18_V3.Layout;
    v8[1] = &type metadata for A18_V3.Layout.Attributes;
    v8[2] = sub_1BB288528();
    v8[3] = sub_1BB28856C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB28868C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BFEB8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BFEC0, (uint64_t (*)(void))sub_1BB288528, (uint64_t)&type metadata for A18_V3.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BFEB8);
  }
}

uint64_t sub_1BB288700(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB286E60(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BB288708(uint64_t a1)
{
  uint64_t v1;

  sub_1BB287CD4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB288710(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB287ED0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB288718(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2870C8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB288720(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2874C4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB288728(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2878CC(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V3.Layout.Attributes()
{
  return &type metadata for A18_V3.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V3.Layout()
{
  return &type metadata for A18_V3.Layout;
}

unint64_t sub_1BB288754()
{
  unint64_t result;

  result = qword_1EF2BFEC8;
  if (!qword_1EF2BFEC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF950, &type metadata for A18_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BFEC8);
  }
  return result;
}

unint64_t sub_1BB28879C()
{
  unint64_t result;

  result = qword_1EF2BFED0;
  if (!qword_1EF2BFED0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF928, &type metadata for A18_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BFED0);
  }
  return result;
}

unint64_t sub_1BB2887E4()
{
  unint64_t result;

  result = qword_1EF2BFED8;
  if (!qword_1EF2BFED8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF900, &type metadata for A18_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BFED8);
  }
  return result;
}

unint64_t sub_1BB28882C()
{
  unint64_t result;

  result = qword_1EF2BFEE0;
  if (!qword_1EF2BFEE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FF978, &type metadata for A18_V3.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BFEE0);
  }
  return result;
}

uint64_t sub_1BB288870@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BFEE8, (uint64_t (*)(void))sub_1BB288A84, (uint64_t)&type metadata for A18_V3.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB288A84();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB288A84()
{
  unint64_t result;

  result = qword_1EF2BFEF0;
  if (!qword_1EF2BFEF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FFAD4, &type metadata for A18_V3.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BFEF0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A18_V3.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB288B14 + 4 * byte_1BB8FF7ED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB288B48 + 4 * byte_1BB8FF7E8[v4]))();
}

uint64_t sub_1BB288B48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB288B50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB288B58);
  return result;
}

uint64_t sub_1BB288B64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB288B6CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB288B70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB288B78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A18_V3.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V3.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB288B98()
{
  unint64_t result;

  result = qword_1EF2BFF00;
  if (!qword_1EF2BFF00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FFAAC, &type metadata for A18_V3.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BFF00);
  }
  return result;
}

unint64_t sub_1BB288BE0()
{
  unint64_t result;

  result = qword_1EF2BFF08;
  if (!qword_1EF2BFF08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FFA1C, &type metadata for A18_V3.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BFF08);
  }
  return result;
}

unint64_t sub_1BB288C28()
{
  unint64_t result;

  result = qword_1EF2BFF10;
  if (!qword_1EF2BFF10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FFA44, &type metadata for A18_V3.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BFF10);
  }
  return result;
}

uint64_t sub_1BB288C6C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1BB288CDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = a2[1];
      *v3 = *a2;
      v3[1] = v11;
      *((_BYTE *)v3 + v5) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_1BB288DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x10)
    v3 = 16;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return swift_bridgeObjectRelease();
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1BB288E3C + 4 * byte_1BB8FFB35[v5]))();
  }
}

_QWORD *sub_1BB288E94(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    v9 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v9 = 0;
  }
  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

_QWORD *sub_1BB288F6C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + v7) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }
  return a1;
}

_OWORD *sub_1BB289104(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_OWORD *sub_1BB2891D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_bridgeObjectRelease();
    else
      (*(void (**)(_OWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1BB289364(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x10uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB289428 + 4 * byte_1BB8FFB58[(v4 - 1)]))();
}

void sub_1BB289474(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10)
    v5 = 16;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1BB28961C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x10uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB289664 + 4 * byte_1BB8FFB66[v3]))();
}

void sub_1BB2896AC(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x10uLL)
    v4 = 16;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

void type metadata accessor for FormatCodingKeysContainer()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t sub_1BB289780(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v8, v6);
  if (swift_getEnumCaseMultiPayload() == 1)
    return *(_QWORD *)v8;
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
  v10 = sub_1BB8746EC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v10;
}

void sub_1BB28987C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1BB873A2C();
  MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BB289930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v15;

  v9 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (uint64_t *)((char *)&v15 - v10);
  swift_bridgeObjectRetain();
  *(_QWORD *)(v7 - 128) = v3;
  sub_1BB8746F8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v1) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 144) + 8))(v4, *(_QWORD *)(v7 - 136));
    *v11 = *(_QWORD *)(v7 - 128);
    v11[1] = v2;
  }
  else
  {
    swift_bridgeObjectRelease();
    v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 32);
    v12(v6, v4, v1);
    v12(v11, (uint64_t)v6, v1);
  }
  swift_storeEnumTagMultiPayload();
  v13 = *(_QWORD *)(v7 - 120);
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v9 + 32))(v13, v11, a1);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, a1);
}

void sub_1BB289A48()
{
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BB289A70(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(v1, 1, 1, a1);
}

uint64_t sub_1BB289A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t KeyPath;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = &v17[-v10];
  sub_1BB873CCC();
  v22 = a1;
  v23 = a2;
  v24 = a3;
  v25 = a4;
  KeyPath = swift_getKeyPath();
  v18 = a2;
  v19 = a3;
  v20 = a4;
  v21 = KeyPath;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = sub_1BAA52384((void (*)(char *, char *))sub_1BB28A018, (uint64_t)v17, AssociatedTypeWitness, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], AssociatedConformanceWitness, MEMORY[0x1E0DEDD18], v14);
  (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  swift_release();
  return v15;
}

uint64_t sub_1BB289BE0(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v2 + 16))(v5, v3);
  if (swift_getEnumCaseMultiPayload() == 1)
    return *(_QWORD *)v5;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, a1);
  return 0;
}

void sub_1BB289C7C(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BB289CE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t TupleTypeMetadata2;
  double v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(_BYTE *, _QWORD, uint64_t, double);
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  _BYTE v27[96];

  v5 = a1;
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (uint64_t *)&v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v11 = &v27[-v10];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *(_QWORD *)(v4 - 152) = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v13 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v15 = &v27[-v14];
  v17 = &v27[*(int *)(v16 + 48) - v14];
  *(_QWORD *)(v4 - 144) = v6;
  v18 = *(void (**)(_BYTE *, _QWORD, uint64_t, double))(v6 + 16);
  v18(&v27[-v14], *(_QWORD *)(v4 - 128), v5, v13);
  ((void (*)(_QWORD *, _QWORD, uint64_t))v18)(v17, *(_QWORD *)(v4 - 120), v5);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    ((void (*)(_BYTE *, _BYTE *, uint64_t))v18)(v11, v15, v5);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v24 = v2;
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 32))(v2, v17, v1);
      v23 = sub_1BB872958();
      v25 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v25(v24, v1);
      v25((uint64_t)v11, v1);
      v22 = *(_QWORD *)(v4 - 144);
      goto LABEL_14;
    }
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v11, v1);
    goto LABEL_11;
  }
  ((void (*)(uint64_t *, _BYTE *, uint64_t))v18)(v8, v15, v5);
  v20 = *v8;
  v19 = v8[1];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    v23 = 0;
    v22 = *(_QWORD *)(v4 - 152);
    v5 = TupleTypeMetadata2;
    goto LABEL_14;
  }
  v21 = v20 == *v17 && v19 == v17[1];
  v22 = *(_QWORD *)(v4 - 144);
  if (v21)
  {
    swift_bridgeObjectRelease_n();
    v23 = 1;
  }
  else
  {
    v23 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v15, v5);
  return v23 & 1;
}

void sub_1BB289F14(uint64_t a1)
{
  sub_1BB289C7C(a1);
}

void sub_1BB289F28()
{
  sub_1BB28987C();
}

void sub_1BB289F38()
{
  sub_1BB289A48();
}

uint64_t sub_1BB289F48(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB289F7C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  return sub_1BB87471C();
}

uint64_t sub_1BB289FB0(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1BB289FDC()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB289FEC()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BB28A000()
{
  return 32;
}

__n128 sub_1BB28A00C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1BB28A018()
{
  return swift_getAtKeyPath();
}

void sub_1BB28A040(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  unint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(void **)(a1 + 56);
  v5 = *(_QWORD *)v2;
  if (!*(_BYTE *)(v2 + 8))
  {
    v9 = objc_msgSend(*(id *)(a1 + 56), sel_orderedNavigationBarThemes);
    if (!v9)
      goto LABEL_26;
    v10 = v9;
    sub_1BA9D0070();
    v8 = sub_1BB872DB4();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v17 < v5)
        goto LABEL_10;
    }
    else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) < v5)
    {
LABEL_10:
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    if ((v8 & 0xC000000000000001) == 0)
    {
      if (v5 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v5 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v18 = *(void **)(v8 + 8 * v5 + 32);
        swift_unknownObjectRetain();
        goto LABEL_25;
      }
      __break(1u);
      JUMPOUT(0x1BB28A490);
    }
LABEL_35:
    v18 = (void *)MEMORY[0x1BCCE4630](v5, v8);
LABEL_25:
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v18, sel_rankForegroundColor);
    swift_unknownObjectRelease();
    if (v13)
      goto LABEL_28;
LABEL_26:
    v14 = objc_msgSend(v4, sel_themeColor);
    if (!v14)
    {
      v15 = swift_allocObject();
      v16 = v15;
      *(_BYTE *)(v15 + 16) = 1;
      goto LABEL_30;
    }
    goto LABEL_27;
  }
  if (*(_BYTE *)(v2 + 8) != 1)
    __asm { BR              X9 }
  v6 = objc_msgSend(*(id *)(a1 + 56), sel_orderedNavigationBarThemes);
  if (!v6)
  {
LABEL_18:
    v14 = objc_msgSend(v4, sel_themeColor);
    if (!v14)
    {
      v15 = swift_allocObject();
      v16 = v15;
      *(_BYTE *)(v15 + 16) = 0;
LABEL_30:
      *(_QWORD *)(v15 + 24) = 0x3FF0000000000000;
      *(_BYTE *)(v15 + 32) = 0;
      v26 = 0x1000000000000000;
      goto LABEL_31;
    }
LABEL_27:
    v13 = v14;
    goto LABEL_28;
  }
  v7 = v6;
  sub_1BA9D0070();
  v8 = sub_1BB872DB4();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v11 < v5)
      goto LABEL_6;
  }
  else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) < v5)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if ((v8 & 0xC000000000000001) == 0)
  {
    if (v5 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v5 < *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v12 = *(void **)(v8 + 8 * v5 + 32);
      swift_unknownObjectRetain();
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_35;
  }
  v12 = (void *)MEMORY[0x1BCCE4630](v5, v8);
LABEL_17:
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v12, sel_rankForegroundDarkModeColor);
  swift_unknownObjectRelease();
  if (!v13)
    goto LABEL_18;
LABEL_28:
  v16 = swift_allocObject();
  objc_msgSend(v13, sel_red);
  v20 = v19 * 255.0;
  objc_msgSend(v13, sel_green);
  v22 = v21 * 255.0;
  objc_msgSend(v13, sel_blue);
  v24 = v23 * 255.0;
  objc_msgSend(v13, sel_alpha);
  *(double *)(v16 + 16) = v20;
  *(double *)(v16 + 24) = v22;
  *(double *)(v16 + 32) = v24;
  *(_QWORD *)(v16 + 40) = v25;
  *(_BYTE *)(v16 + 48) = 0;

  v26 = 0x6000000000000000;
LABEL_31:
  *a2 = v26 | v16;
}

uint64_t FormatPuzzleTypeBinding.Color.CodingType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  v4 = 6;
  if (v2 < 6)
    v4 = v2;
  *a1 = v4;
  return result;
}

void *static FormatPuzzleTypeBinding.Color.CodingType.allCases.getter()
{
  return &unk_1E7252848;
}

uint64_t FormatPuzzleTypeBinding.Color.CodingType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB28A53C + 4 * byte_1BB8FFCF0[*v0]))(0x6C6F43656D656874, 0xEA0000000000726FLL);
}

unint64_t sub_1BB28A53C()
{
  return 0xD000000000000013;
}

void sub_1BB28A5C0(char *a1)
{
  sub_1BB7F5F48(*a1);
}

void sub_1BB28A5CC()
{
  char *v0;

  sub_1BA8D410C(*v0);
}

void sub_1BB28A5D4(uint64_t a1)
{
  char *v1;

  sub_1BA9D23C8(a1, *v1);
}

void sub_1BB28A5DC(uint64_t a1)
{
  char *v1;

  sub_1BAB08C80(a1, *v1);
}

uint64_t sub_1BB28A5E4@<X0>(char *a1@<X8>)
{
  return FormatPuzzleTypeBinding.Color.CodingType.init(rawValue:)(a1);
}

uint64_t sub_1BB28A5F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatPuzzleTypeBinding.Color.CodingType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BB28A614()
{
  sub_1BB28B1C4();
  return sub_1BB872D60();
}

uint64_t sub_1BB28A670()
{
  sub_1BB28B1C4();
  return sub_1BB872D0C();
}

void sub_1BB28A6BC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252848;
}

uint64_t sub_1BB28A6D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPuzzleTypeBinding.Color.init(from:)(a1, a2);
}

uint64_t sub_1BB28A6E4(_QWORD *a1)
{
  return FormatPuzzleTypeBinding.Color.encode(to:)(a1);
}

void sub_1BB28A6F8(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB28A73C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  char *v10;
  uint64_t v11;

  sub_1BAC86C64(0);
  v2 = type metadata accessor for FormatInspectionItem(0);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
  v6 = (_QWORD *)(v5 + v4);
  sub_1BB28A040(v1, &v11);
  v7 = (_QWORD *)((char *)v6 + *(int *)(v2 + 24));
  *v7 = v11;
  v8 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  *v6 = 0x6F4320656D656854;
  v6[2] = 0;
  v6[3] = 0;
  v6[1] = 0xEB00000000726F6CLL;
  v10 = (char *)v6 + *(int *)(v2 + 28);
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = -1;
  *v0 = v5;
  return result;
}

uint64_t _s8NewsFeed23FormatPuzzleTypeBindingV5ColorO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  if (!*((_BYTE *)a1 + 8))
  {
    if (!*(_BYTE *)(a2 + 8))
      return v2 == *(_QWORD *)a2;
    return 0;
  }
  if (*((_BYTE *)a1 + 8) != 1)
    return ((uint64_t (*)(void))((char *)&loc_1BB28ACB4 + 4 * byte_1BB8FFD02[v2]))();
  if (*(_BYTE *)(a2 + 8) != 1)
    return 0;
  return v2 == *(_QWORD *)a2;
}

unint64_t sub_1BB28AD14()
{
  unint64_t result;

  result = qword_1EF2BFF18;
  if (!qword_1EF2BFF18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Color.CodingType, &type metadata for FormatPuzzleTypeBinding.Color.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BFF18);
  }
  return result;
}

unint64_t sub_1BB28AD5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BFF20;
  if (!qword_1EF2BFF20)
  {
    sub_1BB28ADA4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BFF20);
  }
  return result;
}

void sub_1BB28ADA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BFF28)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BFF28);
  }
}

unint64_t sub_1BB28ADF8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB28AE1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB28AE1C()
{
  unint64_t result;

  result = qword_1EF2BFF30;
  if (!qword_1EF2BFF30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Color, &type metadata for FormatPuzzleTypeBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2BFF30);
  }
  return result;
}

unint64_t sub_1BB28AE60(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE88C44();
  a1[2] = sub_1BAEF2D40();
  result = sub_1BB28AE94();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB28AE94()
{
  unint64_t result;

  result = qword_1EF2BFF38;
  if (!qword_1EF2BFF38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Color, &type metadata for FormatPuzzleTypeBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2BFF38);
  }
  return result;
}

uint64_t sub_1BB28AED8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BB28AEF0(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding.Color()
{
  return &type metadata for FormatPuzzleTypeBinding.Color;
}

uint64_t _s5ColorO10CodingTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB28AF64 + 4 * byte_1BB8FFD0B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB28AF98 + 4 * byte_1BB8FFD06[v4]))();
}

uint64_t sub_1BB28AF98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB28AFA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB28AFA8);
  return result;
}

uint64_t sub_1BB28AFB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB28AFBCLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB28AFC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB28AFC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleTypeBinding.Color.CodingType()
{
  return &type metadata for FormatPuzzleTypeBinding.Color.CodingType;
}

double sub_1BB28AFE4@<D0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  double result;
  __int128 v7;
  uint64_t v8;
  char v9;
  _OWORD v10[2];
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v3 = a1[1];
  v12 = *a1;
  v13 = v3;
  v4 = a1[3];
  v14 = a1[2];
  v15 = v4;
  *(_QWORD *)&v10[0] = MEMORY[0x1E0DEE9D8];
  v9 = 0;
  sub_1BB28A6F8((uint64_t)&v9);
  sub_1BB383BA8(v8);
  v9 = 1;
  sub_1BB28A6F8((uint64_t)&v9);
  sub_1BB383BA8(v8);
  v9 = 2;
  sub_1BB28A6F8((uint64_t)&v9);
  sub_1BB383BA8(v8);
  v9 = 3;
  sub_1BB28A6F8((uint64_t)&v9);
  sub_1BB383BA8(v8);
  v9 = 4;
  sub_1BB28A6F8((uint64_t)&v9);
  sub_1BB383BA8(v8);
  v9 = 5;
  sub_1BB28A6F8((uint64_t)&v9);
  sub_1BB383BA8(v8);
  v5 = sub_1BA97461C(*(uint64_t *)&v10[0]);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x7954656C7A7A7550, 0xEA00000000006570, 0, 0, v5, v10);
  swift_bridgeObjectRelease();
  result = *(double *)v10;
  v7 = v10[1];
  *(_OWORD *)a2 = v10[0];
  *(_OWORD *)(a2 + 16) = v7;
  *(_QWORD *)(a2 + 32) = v11;
  return result;
}

uint64_t sub_1BB28B1A4()
{
  return swift_deallocObject();
}

uint64_t sub_1BB28B1B4()
{
  return swift_deallocObject();
}

unint64_t sub_1BB28B1C4()
{
  unint64_t result;

  result = qword_1ED3A2B98;
  if (!qword_1ED3A2B98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Color.CodingType, &type metadata for FormatPuzzleTypeBinding.Color.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B98);
  }
  return result;
}

char *sub_1BB28B208(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v9;
  uint64_t *v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(const void *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(const void *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  const void *v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *__dst;
  char *__dsta;
  int *__dstb;
  int *v89;
  int *v90;
  char *v91;
  unsigned int (*v92)(const void *, uint64_t, uint64_t);
  char *v93;
  unsigned int (*v94)(const void *, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v7[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        *(_QWORD *)a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v9 = *a2;
        *(_QWORD *)a1 = *a2;
        v10 = (uint64_t *)(a2 + 1);
        v11 = (unint64_t)a2[2];
        v12 = v9;
        if (v11 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v10;
        }
        else
        {
          v52 = *v10;
          sub_1BA69D44C(*v10, v11);
          *((_QWORD *)a1 + 1) = v52;
          *((_QWORD *)a1 + 2) = v11;
        }
        sub_1BAA30C9C();
        v54 = *(int *)(v53 + 64);
        v55 = &a1[v54];
        v56 = (uint64_t)a2 + v54;
        v57 = sub_1BB86BC8C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v13 = sub_1BB86BC8C();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v14 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v14;
        v15 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v15;
        a1[32] = *((_BYTE *)a2 + 32);
        v16 = a2[6];
        *((_QWORD *)a1 + 5) = a2[5];
        *((_QWORD *)a1 + 6) = v16;
        v17 = a2[8];
        *((_QWORD *)a1 + 7) = a2[7];
        *((_QWORD *)a1 + 8) = v17;
        v18 = a2[10];
        *((_QWORD *)a1 + 9) = a2[9];
        *((_QWORD *)a1 + 10) = v18;
        a1[88] = *((_BYTE *)a2 + 88);
        v19 = a2[13];
        *((_QWORD *)a1 + 12) = a2[12];
        *((_QWORD *)a1 + 13) = v19;
        v20 = type metadata accessor for DebugNewsroomLayoutData();
        v21 = *(int *)(v20 + 52);
        __dst = &a1[v21];
        v89 = (int *)v20;
        v83 = (char *)a2 + v21;
        v22 = sub_1BB86EB84();
        v23 = *(_QWORD *)(v22 - 8);
        v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v92 = v24;
        v82 = v23;
        v85 = v22;
        if (v24(v83, 1, v22))
        {
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(__dst, v83, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v83, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
        }
        sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
        __dstb = v58;
        v59 = v58[9];
        v60 = &a1[v59];
        v61 = (uint64_t)a2 + v59;
        v62 = *(_QWORD *)(v61 + 8);
        *(_QWORD *)v60 = *(_QWORD *)v61;
        *((_QWORD *)v60 + 1) = v62;
        v63 = *(_QWORD *)(v61 + 24);
        *((_QWORD *)v60 + 2) = *(_QWORD *)(v61 + 16);
        *((_QWORD *)v60 + 3) = v63;
        v60[32] = *(_BYTE *)(v61 + 32);
        v64 = *(_QWORD *)(v61 + 48);
        *((_QWORD *)v60 + 5) = *(_QWORD *)(v61 + 40);
        *((_QWORD *)v60 + 6) = v64;
        v65 = *(_QWORD *)(v61 + 64);
        *((_QWORD *)v60 + 7) = *(_QWORD *)(v61 + 56);
        *((_QWORD *)v60 + 8) = v65;
        v66 = *(_QWORD *)(v61 + 80);
        *((_QWORD *)v60 + 9) = *(_QWORD *)(v61 + 72);
        *((_QWORD *)v60 + 10) = v66;
        v60[88] = *(_BYTE *)(v61 + 88);
        v67 = *(_QWORD *)(v61 + 104);
        *((_QWORD *)v60 + 12) = *(_QWORD *)(v61 + 96);
        *((_QWORD *)v60 + 13) = v67;
        v68 = v89[13];
        v91 = &v60[v68];
        v69 = (const void *)(v61 + v68);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v92(v69, 1, v85))
          goto LABEL_26;
        goto LABEL_22;
      case 5u:
        v26 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v26;
        a1[16] = *((_BYTE *)a2 + 16);
        v27 = a2[4];
        *((_QWORD *)a1 + 3) = a2[3];
        *((_QWORD *)a1 + 4) = v27;
        v28 = a2[6];
        *((_QWORD *)a1 + 5) = a2[5];
        *((_QWORD *)a1 + 6) = v28;
        v29 = a2[8];
        *((_QWORD *)a1 + 7) = a2[7];
        *((_QWORD *)a1 + 8) = v29;
        v30 = a2[10];
        *((_QWORD *)a1 + 9) = a2[9];
        *((_QWORD *)a1 + 10) = v30;
        v93 = a2[12];
        *((_QWORD *)a1 + 11) = a2[11];
        *((_QWORD *)a1 + 12) = v93;
        v31 = type metadata accessor for DebugNewsroomThemeData();
        v32 = *(int *)(v31 + 48);
        __dsta = &a1[v32];
        v90 = (int *)v31;
        v84 = (char *)a2 + v32;
        v33 = sub_1BB86EB84();
        v34 = *(_QWORD *)(v33 - 8);
        v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v94 = v35;
        v82 = v34;
        v85 = v33;
        if (v35(v84, 1, v33))
        {
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(__dsta, v84, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v34 + 16))(__dsta, v84, v33);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dsta, 0, 1, v33);
        }
        sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
        __dstb = v71;
        v72 = v71[9];
        v73 = &a1[v72];
        v74 = (uint64_t)a2 + v72;
        v75 = *(_QWORD *)(v74 + 8);
        *(_QWORD *)v73 = *(_QWORD *)v74;
        *((_QWORD *)v73 + 1) = v75;
        v73[16] = *(_BYTE *)(v74 + 16);
        v76 = *(_QWORD *)(v74 + 32);
        *((_QWORD *)v73 + 3) = *(_QWORD *)(v74 + 24);
        *((_QWORD *)v73 + 4) = v76;
        v77 = *(_QWORD *)(v74 + 48);
        *((_QWORD *)v73 + 5) = *(_QWORD *)(v74 + 40);
        *((_QWORD *)v73 + 6) = v77;
        v78 = *(_QWORD *)(v74 + 64);
        *((_QWORD *)v73 + 7) = *(_QWORD *)(v74 + 56);
        *((_QWORD *)v73 + 8) = v78;
        v79 = *(_QWORD *)(v74 + 80);
        *((_QWORD *)v73 + 9) = *(_QWORD *)(v74 + 72);
        *((_QWORD *)v73 + 10) = v79;
        v80 = *(_QWORD *)(v74 + 96);
        *((_QWORD *)v73 + 11) = *(_QWORD *)(v74 + 88);
        *((_QWORD *)v73 + 12) = v80;
        v81 = v90[12];
        v91 = &v73[v81];
        v69 = (const void *)(v74 + v81);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v94(v69, 1, v85))
        {
LABEL_22:
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(v91, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
LABEL_26:
          (*(void (**)(char *, const void *, uint64_t))(v82 + 16))(v91, v69, v85);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v91, 0, 1, v85);
        }
        *(_QWORD *)&a1[__dstb[10]] = *(char **)((char *)a2 + __dstb[10]);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v37 = sub_1BB86C67C();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v38 = sub_1BB86BFF8();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v39 = *a2;
        v40 = *a2;
        *(_QWORD *)a1 = v39;
        sub_1BAA30E74();
        v42 = *(int *)(v41 + 48);
        v43 = &a1[v42];
        v44 = (uint64_t)a2 + v42;
        v45 = sub_1BB86BC8C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = a2[2];
        sub_1BAA30DA0();
        v47 = *(int *)(v46 + 64);
        v48 = &a1[v47];
        v49 = (uint64_t)a2 + v47;
        v50 = sub_1BB86BC8C();
        v51 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v48, v49, v50);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB28BA18(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
      return swift_bridgeObjectRelease();
    case 1:

      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >> 60 != 15)
        sub_1BA69D314(*(_QWORD *)(a1 + 8), v3);
      sub_1BAA30C9C();
      goto LABEL_18;
    case 3:
      goto LABEL_20;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = type metadata accessor for DebugNewsroomLayoutData();
      v6 = a1 + *(int *)(v5 + 52);
      v7 = sub_1BB86EB84();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      if (!v9(v6, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
      sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
      v11 = a1 + *(int *)(v10 + 36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *(int *)(v5 + 52);
      goto LABEL_11;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for DebugNewsroomThemeData();
      v14 = a1 + *(int *)(v13 + 48);
      v7 = sub_1BB86EB84();
      v8 = *(_QWORD *)(v7 - 8);
      v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      if (!v9(v14, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v14, v7);
      sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
      v11 = a1 + *(int *)(v15 + 36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *(int *)(v13 + 48);
LABEL_11:
      v16 = v11 + v12;
      if (!v9(v11 + v12, 1, v7))
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v7);
      return swift_bridgeObjectRelease();
    case 6:
      v17 = sub_1BB86C67C();
      goto LABEL_21;
    case 7:
      v17 = sub_1BB86BFF8();
      goto LABEL_21;
    case 8:

      sub_1BAA30E74();
      v19 = *(int *)(v18 + 48);
      goto LABEL_19;
    case 9:
      swift_bridgeObjectRelease();
      sub_1BAA30DA0();
LABEL_18:
      v19 = *(int *)(v4 + 64);
LABEL_19:
      a1 += v19;
LABEL_20:
      v17 = sub_1BB86BC8C();
LABEL_21:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a1, v17);
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1BB28BD54(char *a1, uint64_t *a2, uint64_t a3)
{
  void *v6;
  uint64_t *v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  const void *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(const void *, uint64_t, uint64_t);
  uint64_t v86;
  unsigned int (*v87)(const void *, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  char *__dstb;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
      *(_QWORD *)a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 1u:
      v6 = (void *)*a2;
      *(_QWORD *)a1 = *a2;
      v7 = a2 + 1;
      v8 = a2[2];
      v9 = v6;
      if (v8 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
      }
      else
      {
        v47 = *v7;
        sub_1BA69D44C(*v7, v8);
        *((_QWORD *)a1 + 1) = v47;
        *((_QWORD *)a1 + 2) = v8;
      }
      sub_1BAA30C9C();
      v49 = *(int *)(v48 + 64);
      v50 = &a1[v49];
      v51 = (uint64_t)a2 + v49;
      v52 = sub_1BB86BC8C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
      goto LABEL_25;
    case 3u:
      v10 = sub_1BB86BC8C();
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_25;
    case 4u:
      v11 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v11;
      v12 = a2[3];
      *((_QWORD *)a1 + 2) = a2[2];
      *((_QWORD *)a1 + 3) = v12;
      a1[32] = *((_BYTE *)a2 + 32);
      v13 = a2[6];
      *((_QWORD *)a1 + 5) = a2[5];
      *((_QWORD *)a1 + 6) = v13;
      v14 = a2[8];
      *((_QWORD *)a1 + 7) = a2[7];
      *((_QWORD *)a1 + 8) = v14;
      v15 = a2[10];
      *((_QWORD *)a1 + 9) = a2[9];
      *((_QWORD *)a1 + 10) = v15;
      a1[88] = *((_BYTE *)a2 + 88);
      v16 = a2[13];
      *((_QWORD *)a1 + 12) = a2[12];
      *((_QWORD *)a1 + 13) = v16;
      v83 = type metadata accessor for DebugNewsroomLayoutData();
      v17 = *(int *)(v83 + 52);
      __dst = &a1[v17];
      v79 = (char *)a2 + v17;
      v18 = sub_1BB86EB84();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v85 = v20;
      v78 = v19;
      v81 = v18;
      if (v20(v79, 1, v18))
      {
        sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
        memcpy(__dst, v79, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v79, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
      v82 = v53;
      v54 = *(int *)(v53 + 36);
      v55 = &a1[v54];
      v56 = (uint64_t)a2 + v54;
      v57 = *(_QWORD *)(v56 + 8);
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v57;
      v58 = *(_QWORD *)(v56 + 24);
      *((_QWORD *)v55 + 2) = *(_QWORD *)(v56 + 16);
      *((_QWORD *)v55 + 3) = v58;
      v55[32] = *(_BYTE *)(v56 + 32);
      v59 = *(_QWORD *)(v56 + 48);
      *((_QWORD *)v55 + 5) = *(_QWORD *)(v56 + 40);
      *((_QWORD *)v55 + 6) = v59;
      v60 = *(_QWORD *)(v56 + 64);
      *((_QWORD *)v55 + 7) = *(_QWORD *)(v56 + 56);
      *((_QWORD *)v55 + 8) = v60;
      v61 = *(_QWORD *)(v56 + 80);
      *((_QWORD *)v55 + 9) = *(_QWORD *)(v56 + 72);
      *((_QWORD *)v55 + 10) = v61;
      v55[88] = *(_BYTE *)(v56 + 88);
      v62 = *(_QWORD *)(v56 + 104);
      *((_QWORD *)v55 + 12) = *(_QWORD *)(v56 + 96);
      *((_QWORD *)v55 + 13) = v62;
      v63 = *(int *)(v83 + 52);
      __dstb = &v55[v63];
      v64 = (const void *)(v56 + v63);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v85(v64, 1, v81))
        goto LABEL_22;
      goto LABEL_23;
    case 5u:
      v22 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v22;
      a1[16] = *((_BYTE *)a2 + 16);
      v23 = a2[4];
      *((_QWORD *)a1 + 3) = a2[3];
      *((_QWORD *)a1 + 4) = v23;
      v24 = a2[6];
      *((_QWORD *)a1 + 5) = a2[5];
      *((_QWORD *)a1 + 6) = v24;
      v25 = a2[8];
      *((_QWORD *)a1 + 7) = a2[7];
      *((_QWORD *)a1 + 8) = v25;
      v26 = a2[10];
      *((_QWORD *)a1 + 9) = a2[9];
      *((_QWORD *)a1 + 10) = v26;
      v86 = a2[12];
      *((_QWORD *)a1 + 11) = a2[11];
      *((_QWORD *)a1 + 12) = v86;
      v84 = type metadata accessor for DebugNewsroomThemeData();
      v27 = *(int *)(v84 + 48);
      __dsta = &a1[v27];
      v80 = (char *)a2 + v27;
      v28 = sub_1BB86EB84();
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v87 = v30;
      v78 = v29;
      v81 = v28;
      if (v30(v80, 1, v28))
      {
        sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
        memcpy(__dsta, v80, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dsta, v80, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dsta, 0, 1, v28);
      }
      sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
      v82 = v65;
      v66 = *(int *)(v65 + 36);
      v67 = &a1[v66];
      v68 = (uint64_t)a2 + v66;
      v69 = *(_QWORD *)(v68 + 8);
      *(_QWORD *)v67 = *(_QWORD *)v68;
      *((_QWORD *)v67 + 1) = v69;
      v67[16] = *(_BYTE *)(v68 + 16);
      v70 = *(_QWORD *)(v68 + 32);
      *((_QWORD *)v67 + 3) = *(_QWORD *)(v68 + 24);
      *((_QWORD *)v67 + 4) = v70;
      v71 = *(_QWORD *)(v68 + 48);
      *((_QWORD *)v67 + 5) = *(_QWORD *)(v68 + 40);
      *((_QWORD *)v67 + 6) = v71;
      v72 = *(_QWORD *)(v68 + 64);
      *((_QWORD *)v67 + 7) = *(_QWORD *)(v68 + 56);
      *((_QWORD *)v67 + 8) = v72;
      v73 = *(_QWORD *)(v68 + 80);
      *((_QWORD *)v67 + 9) = *(_QWORD *)(v68 + 72);
      *((_QWORD *)v67 + 10) = v73;
      v74 = *(_QWORD *)(v68 + 96);
      *((_QWORD *)v67 + 11) = *(_QWORD *)(v68 + 88);
      *((_QWORD *)v67 + 12) = v74;
      v75 = *(int *)(v84 + 48);
      __dstb = &v67[v75];
      v64 = (const void *)(v68 + v75);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v87(v64, 1, v81))
      {
LABEL_22:
        sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
        memcpy(__dstb, v64, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
LABEL_23:
        (*(void (**)(char *, const void *, uint64_t))(v78 + 16))(__dstb, v64, v81);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(__dstb, 0, 1, v81);
      }
      *(_QWORD *)&a1[*(int *)(v82 + 40)] = *(uint64_t *)((char *)a2 + *(int *)(v82 + 40));
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 6u:
      v32 = sub_1BB86C67C();
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
      goto LABEL_25;
    case 7u:
      v33 = sub_1BB86BFF8();
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
      goto LABEL_25;
    case 8u:
      v34 = *a2;
      v35 = (id)*a2;
      *(_QWORD *)a1 = v34;
      sub_1BAA30E74();
      v37 = *(int *)(v36 + 48);
      v38 = &a1[v37];
      v39 = (uint64_t)a2 + v37;
      v40 = sub_1BB86BC8C();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      goto LABEL_25;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = a2[2];
      sub_1BAA30DA0();
      v42 = *(int *)(v41 + 64);
      v43 = &a1[v42];
      v44 = (uint64_t)a2 + v42;
      v45 = sub_1BB86BC8C();
      v46 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      v46(v43, v44, v45);
LABEL_25:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1BB28C520(char *a1, uint64_t *a2, uint64_t a3)
{
  void *v6;
  uint64_t *v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *__dst;
  int *__dsta;
  int *v67;
  char *v68;

  if (a1 != (char *)a2)
  {
    sub_1BB28CDB8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 2u:
        *(_QWORD *)a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_27;
      case 1u:
        v6 = (void *)*a2;
        *(_QWORD *)a1 = *a2;
        v7 = a2 + 1;
        v8 = a2[2];
        v9 = v6;
        if (v8 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v7;
        }
        else
        {
          v38 = *v7;
          sub_1BA69D44C(*v7, v8);
          *((_QWORD *)a1 + 1) = v38;
          *((_QWORD *)a1 + 2) = v8;
        }
        sub_1BAA30C9C();
        v40 = *(int *)(v39 + 64);
        v41 = &a1[v40];
        v42 = (uint64_t)a2 + v40;
        v43 = sub_1BB86BC8C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
        goto LABEL_27;
      case 3u:
        v10 = sub_1BB86BC8C();
        (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_27;
      case 4u:
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = a2[1];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = a2[3];
        a1[32] = *((_BYTE *)a2 + 32);
        *((_QWORD *)a1 + 5) = a2[5];
        *((_QWORD *)a1 + 6) = a2[6];
        *((_QWORD *)a1 + 7) = a2[7];
        *((_QWORD *)a1 + 8) = a2[8];
        *((_QWORD *)a1 + 9) = a2[9];
        *((_QWORD *)a1 + 10) = a2[10];
        a1[88] = *((_BYTE *)a2 + 88);
        *((_QWORD *)a1 + 12) = a2[12];
        *((_QWORD *)a1 + 13) = a2[13];
        v11 = type metadata accessor for DebugNewsroomLayoutData();
        v12 = *(int *)(v11 + 52);
        __dst = &a1[v12];
        v67 = (int *)v11;
        v60 = (char *)a2 + v12;
        v13 = sub_1BB86EB84();
        v14 = *(_QWORD *)(v13 - 8);
        v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15(v60, 1, v13))
        {
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(__dst, v60, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v60, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
        }
        sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
        __dsta = v44;
        v45 = v44[9];
        v46 = &a1[v45];
        v47 = (uint64_t)a2 + v45;
        *(_QWORD *)v46 = *(_QWORD *)v47;
        *((_QWORD *)v46 + 1) = *(_QWORD *)(v47 + 8);
        *((_QWORD *)v46 + 2) = *(_QWORD *)(v47 + 16);
        *((_QWORD *)v46 + 3) = *(_QWORD *)(v47 + 24);
        v46[32] = *(_BYTE *)(v47 + 32);
        *((_QWORD *)v46 + 5) = *(_QWORD *)(v47 + 40);
        *((_QWORD *)v46 + 6) = *(_QWORD *)(v47 + 48);
        *((_QWORD *)v46 + 7) = *(_QWORD *)(v47 + 56);
        *((_QWORD *)v46 + 8) = *(_QWORD *)(v47 + 64);
        *((_QWORD *)v46 + 9) = *(_QWORD *)(v47 + 72);
        *((_QWORD *)v46 + 10) = *(_QWORD *)(v47 + 80);
        v46[88] = *(_BYTE *)(v47 + 88);
        *((_QWORD *)v46 + 12) = *(_QWORD *)(v47 + 96);
        *((_QWORD *)v46 + 13) = *(_QWORD *)(v47 + 104);
        v48 = v67[13];
        v68 = &v46[v48];
        v49 = (void *)(v47 + v48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15((char *)v49, 1, v13))
        {
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(v68, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v14 + 16))(v68, v49, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v68, 0, 1, v13);
        }
        goto LABEL_26;
      case 5u:
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = a2[1];
        a1[16] = *((_BYTE *)a2 + 16);
        *((_QWORD *)a1 + 3) = a2[3];
        *((_QWORD *)a1 + 4) = a2[4];
        *((_QWORD *)a1 + 5) = a2[5];
        *((_QWORD *)a1 + 6) = a2[6];
        *((_QWORD *)a1 + 7) = a2[7];
        *((_QWORD *)a1 + 8) = a2[8];
        *((_QWORD *)a1 + 9) = a2[9];
        *((_QWORD *)a1 + 10) = a2[10];
        *((_QWORD *)a1 + 11) = a2[11];
        *((_QWORD *)a1 + 12) = a2[12];
        v17 = type metadata accessor for DebugNewsroomThemeData();
        v18 = *(int *)(v17 + 48);
        v61 = &a1[v18];
        v62 = v17;
        v63 = (char *)a2 + v18;
        v19 = sub_1BB86EB84();
        v20 = *(_QWORD *)(v19 - 8);
        v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v59 = v20;
        if (v21(v63, 1, v19))
        {
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(v61, v63, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v61, v63, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v61, 0, 1, v19);
        }
        sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
        __dsta = v51;
        v52 = v51[9];
        v53 = &a1[v52];
        v54 = (uint64_t)a2 + v52;
        *(_QWORD *)v53 = *(_QWORD *)v54;
        *((_QWORD *)v53 + 1) = *(_QWORD *)(v54 + 8);
        v53[16] = *(_BYTE *)(v54 + 16);
        *((_QWORD *)v53 + 3) = *(_QWORD *)(v54 + 24);
        *((_QWORD *)v53 + 4) = *(_QWORD *)(v54 + 32);
        *((_QWORD *)v53 + 5) = *(_QWORD *)(v54 + 40);
        *((_QWORD *)v53 + 6) = *(_QWORD *)(v54 + 48);
        *((_QWORD *)v53 + 7) = *(_QWORD *)(v54 + 56);
        *((_QWORD *)v53 + 8) = *(_QWORD *)(v54 + 64);
        *((_QWORD *)v53 + 9) = *(_QWORD *)(v54 + 72);
        *((_QWORD *)v53 + 10) = *(_QWORD *)(v54 + 80);
        *((_QWORD *)v53 + 11) = *(_QWORD *)(v54 + 88);
        *((_QWORD *)v53 + 12) = *(_QWORD *)(v54 + 96);
        v55 = *(int *)(v62 + 48);
        v64 = &v53[v55];
        v56 = (void *)(v54 + v55);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21((char *)v56, 1, v19))
        {
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(v64, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, void *, uint64_t))(v59 + 16))(v64, v56, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v64, 0, 1, v19);
        }
LABEL_26:
        *(_QWORD *)&a1[__dsta[10]] = *(uint64_t *)((char *)a2 + __dsta[10]);
        swift_bridgeObjectRetain();
        goto LABEL_27;
      case 6u:
        v23 = sub_1BB86C67C();
        (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        goto LABEL_27;
      case 7u:
        v24 = sub_1BB86BFF8();
        (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
        goto LABEL_27;
      case 8u:
        v25 = *a2;
        v26 = (id)*a2;
        *(_QWORD *)a1 = v25;
        sub_1BAA30E74();
        v28 = *(int *)(v27 + 48);
        v29 = &a1[v28];
        v30 = (uint64_t)a2 + v28;
        v31 = sub_1BB86BC8C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
        goto LABEL_27;
      case 9u:
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = a2[1];
        *((_QWORD *)a1 + 2) = a2[2];
        sub_1BAA30DA0();
        v33 = *(int *)(v32 + 64);
        v34 = &a1[v33];
        v35 = (uint64_t)a2 + v33;
        v36 = sub_1BB86BC8C();
        v37 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        v37(v34, v35, v36);
LABEL_27:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB28CDB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugNewsroomServiceError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugNewsroomServiceError()
{
  uint64_t result;

  result = qword_1EF2BFFB0;
  if (!qword_1EF2BFFB0)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *sub_1BB28CE30(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      sub_1BAA30C9C();
      v7 = *(int *)(v6 + 64);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BB86BC8C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      goto LABEL_23;
    case 3u:
      v11 = sub_1BB86BC8C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      goto LABEL_23;
    case 4u:
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((_BYTE *)a1 + 88) = *((_BYTE *)a2 + 88);
      a1[6] = a2[6];
      v13 = type metadata accessor for DebugNewsroomLayoutData();
      v14 = *(int *)(v13 + 52);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1BB86EB84();
      v18 = *(_QWORD *)(v17 - 8);
      v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      if (v19(v16, 1, v17))
      {
        sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
      v42 = v41;
      v43 = *(int *)(v41 + 36);
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      v46 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v46;
      v44[32] = v45[32];
      *(_OWORD *)(v44 + 40) = *(_OWORD *)(v45 + 40);
      *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
      *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
      v44[88] = v45[88];
      *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
      v47 = *(int *)(v13 + 52);
      v48 = &v44[v47];
      v49 = &v45[v47];
      if (v19(&v45[v47], 1, v17))
      {
        sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v48, v49, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v48, 0, 1, v17);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v42 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v42 + 40));
      goto LABEL_23;
    case 5u:
      *a1 = *a2;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      v21 = type metadata accessor for DebugNewsroomThemeData();
      v22 = *(int *)(v21 + 48);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_1BB86EB84();
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      if (v27(v24, 1, v25))
      {
        sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
      v52 = v51;
      v53 = *(int *)(v51 + 36);
      v54 = (char *)a1 + v53;
      v55 = (char *)a2 + v53;
      *(_OWORD *)v54 = *(_OWORD *)v55;
      v54[16] = v55[16];
      *(_OWORD *)(v54 + 24) = *(_OWORD *)(v55 + 24);
      *(_OWORD *)(v54 + 40) = *(_OWORD *)(v55 + 40);
      *(_OWORD *)(v54 + 56) = *(_OWORD *)(v55 + 56);
      *(_OWORD *)(v54 + 72) = *(_OWORD *)(v55 + 72);
      *(_OWORD *)(v54 + 88) = *(_OWORD *)(v55 + 88);
      v56 = *(int *)(v21 + 48);
      v57 = &v54[v56];
      v58 = &v55[v56];
      if (v27(&v55[v56], 1, v25))
      {
        sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v57, v58, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v57, 0, 1, v25);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v52 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v52 + 40));
      goto LABEL_23;
    case 6u:
      v29 = sub_1BB86C67C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
      goto LABEL_23;
    case 7u:
      v30 = sub_1BB86BFF8();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(a1, a2, v30);
      goto LABEL_23;
    case 8u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      sub_1BAA30E74();
      v32 = *(int *)(v31 + 48);
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = sub_1BB86BC8C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      goto LABEL_23;
    case 9u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
      sub_1BAA30DA0();
      v37 = *(int *)(v36 + 64);
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = sub_1BB86BC8C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1BB28D3FC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;

  if (a1 != a2)
  {
    sub_1BB28CDB8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        sub_1BAA30C9C();
        v7 = *(int *)(v6 + 64);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_1BB86BC8C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        goto LABEL_24;
      case 3u:
        v11 = sub_1BB86BC8C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        goto LABEL_24;
      case 4u:
        v12 = a2[1];
        *a1 = *a2;
        a1[1] = v12;
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *((_BYTE *)a1 + 88) = *((_BYTE *)a2 + 88);
        a1[6] = a2[6];
        v13 = type metadata accessor for DebugNewsroomLayoutData();
        v14 = *(int *)(v13 + 52);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_1BB86EB84();
        v18 = *(_QWORD *)(v17 - 8);
        v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
        if (v19(v16, 1, v17))
        {
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        sub_1BA930088(0, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
        v42 = v41;
        v43 = *(int *)(v41 + 36);
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = *((_OWORD *)v45 + 1);
        *(_OWORD *)v44 = *(_OWORD *)v45;
        *((_OWORD *)v44 + 1) = v46;
        v44[32] = v45[32];
        *(_OWORD *)(v44 + 40) = *(_OWORD *)(v45 + 40);
        *(_OWORD *)(v44 + 56) = *(_OWORD *)(v45 + 56);
        *(_OWORD *)(v44 + 72) = *(_OWORD *)(v45 + 72);
        v44[88] = v45[88];
        *((_OWORD *)v44 + 6) = *((_OWORD *)v45 + 6);
        v47 = *(int *)(v13 + 52);
        v48 = &v44[v47];
        v49 = &v45[v47];
        if (v19(&v45[v47], 1, v17))
        {
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v48, v49, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v48, 0, 1, v17);
        }
        *(_QWORD *)((char *)a1 + *(int *)(v42 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v42 + 40));
        goto LABEL_24;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        v21 = type metadata accessor for DebugNewsroomThemeData();
        v22 = *(int *)(v21 + 48);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = sub_1BB86EB84();
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
        if (v27(v24, 1, v25))
        {
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        sub_1BA930088(0, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
        v52 = v51;
        v53 = *(int *)(v51 + 36);
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        *(_OWORD *)v54 = *(_OWORD *)v55;
        v54[16] = v55[16];
        *(_OWORD *)(v54 + 24) = *(_OWORD *)(v55 + 24);
        *(_OWORD *)(v54 + 40) = *(_OWORD *)(v55 + 40);
        *(_OWORD *)(v54 + 56) = *(_OWORD *)(v55 + 56);
        *(_OWORD *)(v54 + 72) = *(_OWORD *)(v55 + 72);
        *(_OWORD *)(v54 + 88) = *(_OWORD *)(v55 + 88);
        v56 = *(int *)(v21 + 48);
        v57 = &v54[v56];
        v58 = &v55[v56];
        if (v27(&v55[v56], 1, v25))
        {
          sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
          memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v57, v58, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v57, 0, 1, v25);
        }
        *(_QWORD *)((char *)a1 + *(int *)(v52 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v52 + 40));
        goto LABEL_24;
      case 6u:
        v29 = sub_1BB86C67C();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(a1, a2, v29);
        goto LABEL_24;
      case 7u:
        v30 = sub_1BB86BFF8();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(a1, a2, v30);
        goto LABEL_24;
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        sub_1BAA30E74();
        v32 = *(int *)(v31 + 48);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_1BB86BC8C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_24;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_OWORD *)((char *)a1 + 8) = *(_OWORD *)((char *)a2 + 8);
        sub_1BAA30DA0();
        v37 = *(int *)(v36 + 64);
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = sub_1BB86BC8C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1BB28D9D8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;

  v0 = MEMORY[0x1E0DE9D18] + 64;
  v15 = MEMORY[0x1E0DE9D18] + 64;
  v1 = sub_1BB86BC8C();
  if (v2 <= 0x3F)
  {
    v3 = *(_QWORD *)(v1 - 8) + 64;
    swift_getTupleTypeLayout3();
    v16 = &v14;
    v17 = v0;
    v18 = v3;
    sub_1BA930088(319, &qword_1EF2AAC78, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, &qword_1EF2AAC80, (uint64_t)&unk_1BB8A4630);
    if (v5 <= 0x3F)
    {
      v19 = *(_QWORD *)(v4 - 8) + 64;
      sub_1BA930088(319, &qword_1EF2AAC88, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, &qword_1EF2AAC90, (uint64_t)&unk_1BB89B6E8);
      if (v7 <= 0x3F)
      {
        v20 = *(_QWORD *)(v6 - 8) + 64;
        v8 = sub_1BB86C67C();
        if (v9 <= 0x3F)
        {
          v21 = *(_QWORD *)(v8 - 8) + 64;
          v10 = sub_1BB86BFF8();
          if (v11 <= 0x3F)
          {
            v22 = *(_QWORD *)(v10 - 8) + 64;
            swift_getTupleTypeLayout2();
            v23 = &v13;
            swift_getTupleTypeLayout3();
            v24 = &v12;
            swift_initEnumMetadataMultiPayload();
          }
        }
      }
    }
  }
}

uint64_t FormatTextLineBreakMode.lineBreakMode.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FormatTextLineBreakMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB28DBAC + 4 * byte_1BB900040[*v0]))(0x7061725764726F77, 0xEC000000676E6970);
}

unint64_t sub_1BB28DBAC()
{
  return 0xD000000000000011;
}

uint64_t sub_1BB28DBC8()
{
  return 1885957219;
}

uint64_t sub_1BB28DBD8()
{
  return 0x657461636E757274;
}

void sub_1BB28DC1C(char *a1)
{
  sub_1BB7FC2B0(*a1);
}

void sub_1BB28DC28()
{
  char *v0;

  sub_1BA8D420C(*v0);
}

void sub_1BB28DC30(uint64_t a1)
{
  char *v1;

  sub_1BA9D22FC(a1, *v1);
}

void sub_1BB28DC38(uint64_t a1)
{
  char *v1;

  sub_1BAB08B94(a1, *v1);
}

uint64_t sub_1BB28DC40()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB28DC78 + 4 * byte_1BB900046[*v0]))();
}

void sub_1BB28DC78(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001BB95DCC0;
}

void sub_1BB28DC98(_QWORD *a1@<X8>)
{
  *a1 = 1885957219;
  a1[1] = 0xE400000000000000;
}

void sub_1BB28DCAC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "truncateHead");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t FormatTextLineBreakMode.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB28DD2C + 4 * byte_1BB90004C[*v0]))(0x7061725764726F77, 0xEC000000676E6970);
}

unint64_t sub_1BB28DD2C()
{
  return 0xD000000000000011;
}

uint64_t sub_1BB28DD48()
{
  return 1885957219;
}

uint64_t sub_1BB28DD58()
{
  return 0x657461636E757274;
}

unint64_t sub_1BB28DDA0()
{
  unint64_t result;

  result = qword_1EF2BFFE8;
  if (!qword_1EF2BFFE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextLineBreakMode, &type metadata for FormatTextLineBreakMode);
    atomic_store(result, (unint64_t *)&qword_1EF2BFFE8);
  }
  return result;
}

unint64_t sub_1BB28DDE4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB28DE10();
  result = sub_1BA49AE88();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB28DE10()
{
  unint64_t result;

  result = qword_1EF2BFFF0;
  if (!qword_1EF2BFFF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextLineBreakMode, &type metadata for FormatTextLineBreakMode);
    atomic_store(result, (unint64_t *)&qword_1EF2BFFF0);
  }
  return result;
}

unint64_t sub_1BB28DE54(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB28DE78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB28DE78()
{
  unint64_t result;

  result = qword_1EF2BFFF8;
  if (!qword_1EF2BFFF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextLineBreakMode, &type metadata for FormatTextLineBreakMode);
    atomic_store(result, (unint64_t *)&qword_1EF2BFFF8);
  }
  return result;
}

unint64_t sub_1BB28DEBC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5D7DE8();
  a1[2] = sub_1BA828AB8();
  result = sub_1BB28DDA0();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB28DEF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB28DF28 + 4 * byte_1BB900052[*v0]))(0x7061725764726F77, 0xEC000000676E6970);
}

unint64_t sub_1BB28DF28()
{
  return 0xD000000000000011;
}

uint64_t sub_1BB28DF44()
{
  return 1885957219;
}

uint64_t sub_1BB28DF54()
{
  return 0x657461636E757274;
}

ValueMetadata *type metadata accessor for FormatTextLineBreakMode()
{
  return &type metadata for FormatTextLineBreakMode;
}

uint64_t sub_1BB28DFAC(_QWORD *a1)
{
  return FormatSupplementaryNodePinDistance.encode(to:)(a1);
}

void sub_1BB28DFCC(_QWORD *a1)
{
  FormatSupplementaryNodePinDistanceAdjustment.encode(to:)(a1);
}

uint64_t FormatSupplementaryNodePinDistanceAdjustmentValue.description.getter()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = 0x676E696361705368;
  v2 = *v0;
  if (!*v0)
    return 0x676E696361705376;
  if (v2 != 1)
  {
    v3 = swift_bridgeObjectRetain();
    v1 = sub_1BB106F08(v3);
    sub_1BA5B18CC(v2);
  }
  return v1;
}

uint64_t sub_1BB28E054(_QWORD *a1)
{
  return FormatSupplementaryNodePinDistanceAdjustmentValue.encode(to:)(a1);
}

uint64_t sub_1BB28E068()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = 0x676E696361705368;
  v2 = *v0;
  if (!*v0)
    return 0x676E696361705376;
  if (v2 != 1)
  {
    v3 = swift_bridgeObjectRetain();
    v1 = sub_1BB106F08(v3);
    sub_1BA5B18CC(v2);
  }
  return v1;
}

void _s8NewsFeed44FormatSupplementaryNodePinDistanceAdjustmentO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_1BB28E110()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  unsigned __int8 v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  char v8;

  if (v2)
  {
    sub_1BA7AD868(v1, v2);
    sub_1BA7AD868(v0, v3);
    sub_1BA7AAE2C(v0, v3);
    v5 = v1;
    v6 = v2;
LABEL_7:
    sub_1BA7AAE2C(v5, v6);
    return 0;
  }
  if (!v0)
  {
    if (!v1)
    {
      sub_1BA7AD868(0, 0);
      sub_1BA67035C(0);
      sub_1BA5B18CC(0);
      sub_1BA5B18CC(0);
      sub_1BA7AAE2C(0, 0);
      sub_1BA7AAE2C(0, 0);
      sub_1BA7AAE2C(0, 0);
      sub_1BA7AAE2C(0, 0);
      return 1;
    }
    goto LABEL_13;
  }
  if (v0 != 1)
  {
    if (v1 >= 2)
    {
      sub_1BA7AD868(v1, 0);
      sub_1BA7AD868(v0, 0);
      sub_1BA7AD868(v1, 0);
      sub_1BA7AD868(v0, 0);
      sub_1BA7AD868(v1, 0);
      sub_1BA7AD868(v0, 0);
      sub_1BA7AD868(v1, 0);
      sub_1BA7AD868(v0, 0);
      v8 = sub_1BA881EAC(v0, v1);
      sub_1BA5B18CC(v0);
      sub_1BA5B18CC(v1);
      sub_1BA7AAE2C(v1, 0);
      sub_1BA7AAE2C(v0, 0);
      sub_1BA7AAE2C(v0, 0);
      sub_1BA7AAE2C(v1, 0);
      sub_1BA7AAE2C(v1, 0);
      sub_1BA7AAE2C(v0, 0);
      return (v8 & 1) != 0;
    }
    goto LABEL_13;
  }
  if (v1 != 1)
  {
LABEL_13:
    sub_1BA7AD868(v1, 0);
    sub_1BA7AD868(v0, 0);
    sub_1BA7AD868(v1, 0);
    sub_1BA7AD868(v0, 0);
    sub_1BA7AD868(v1, 0);
    sub_1BA7AD868(v0, 0);
    sub_1BA5B18CC(v0);
    sub_1BA5B18CC(v1);
    sub_1BA7AAE2C(v0, 0);
    sub_1BA7AAE2C(v1, 0);
    sub_1BA7AAE2C(v1, 0);
    v5 = v0;
    v6 = 0;
    goto LABEL_7;
  }
  v4 = 1;
  sub_1BA7AD868(1uLL, 0);
  sub_1BA67035C(1uLL);
  sub_1BA5B18CC(1uLL);
  sub_1BA5B18CC(1uLL);
  sub_1BA7AAE2C(1uLL, 0);
  sub_1BA7AAE2C(1uLL, 0);
  sub_1BA7AAE2C(1uLL, 0);
  sub_1BA7AAE2C(1uLL, 0);
  return v4;
}

uint64_t _s8NewsFeed34FormatSupplementaryNodePinDistanceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  char v4;
  unint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;

  v2 = *(_QWORD *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 9);
  v5 = *(_QWORD *)a2;
  v6 = *(unsigned __int8 *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 9);
  if ((v4 & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 9))
    {
      if (v3 == 255)
      {
        v8 = 1;
        sub_1BA7AD890(*(_QWORD *)a2, *(_BYTE *)(a2 + 8), 1);
        sub_1BA7AD890(v2, 0xFFu, 1);
        sub_1BA7AD890(v5, v6, 1);
        sub_1BA7AAE54(v2, 0xFFu, 1);
        sub_1BA7AAE54(v5, v6, 1);
        if (v6 == 255)
          return v8;
      }
      else
      {
        v13 = *(_QWORD *)a1;
        v14 = v3;
        if (v6 != 255)
        {
          v8 = 1;
          sub_1BA7AD890(v2, v3, 1);
          sub_1BA7AD890(v5, v6, 1);
          sub_1BA7AD890(v2, v3, 1);
          sub_1BA7AD890(v2, v3, 1);
          sub_1BA7AD890(v5, v6, 1);
          _s8NewsFeed44FormatSupplementaryNodePinDistanceAdjustmentO2eeoiySbAC_ACtFZ_0((uint64_t)&v13);
          v10 = v9;
          sub_1BA7AAE54(v2, v3, 1);
          sub_1BA7AAE54(v5, v6, 1);
          sub_1BA7AAE54(v5, v6, 1);
          sub_1BA7AAE2C(v13, v14);
          sub_1BA7AAE54(v2, v3, 1);
          if ((v10 & 1) != 0)
            return v8;
          return 0;
        }
        sub_1BA7AD890(v2, v3, 1);
        sub_1BA7AD890(v5, 0xFFu, 1);
        sub_1BA7AD890(v2, v3, 1);
        sub_1BA7AD890(v2, v3, 1);
        sub_1BA7AD890(v5, 0xFFu, 1);
        sub_1BA7AAE54(v2, v3, 1);
        sub_1BA7AAE54(v5, 0xFFu, 1);
        sub_1BA7AAE2C(v2, v3);
      }
      sub_1BA7AAE40(v2, v3);
      sub_1BA7AAE40(v5, v6);
      return 0;
    }
LABEL_8:
    sub_1BA7AD890(*(_QWORD *)a1, v3, v4);
    sub_1BA7AD890(v5, v6, v7);
    sub_1BA7AAE54(v2, v3, v4);
    sub_1BA7AAE54(v5, v6, v7);
    return 0;
  }
  if ((*(_BYTE *)(a2 + 9) & 1) != 0)
    goto LABEL_8;
  sub_1BA7AD890(*(_QWORD *)a2, *(_BYTE *)(a2 + 8), 0);
  sub_1BA7AD890(v2, v3, 0);
  sub_1BA7AD890(v2, v3, 0);
  sub_1BA7AD890(v5, v6, 0);
  v12 = sub_1BA881EAC(v2, v5);
  sub_1BA7AAE54(v2, v3, 0);
  sub_1BA7AAE54(v5, v6, 0);
  sub_1BA7AAE54(v5, v6, 0);
  sub_1BA7AAE54(v2, v3, 0);
  return v12 & 1;
}

unint64_t sub_1BB28ED28(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB28ED4C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB28ED4C()
{
  unint64_t result;

  result = qword_1EF2C0000;
  if (!qword_1EF2C0000)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinDistance, &type metadata for FormatSupplementaryNodePinDistance);
    atomic_store(result, (unint64_t *)&qword_1EF2C0000);
  }
  return result;
}

uint64_t sub_1BB28ED90(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA820698, (uint64_t (*)(void))sub_1BAEF9388, (uint64_t (*)(void))sub_1BB28EDAC);
}

unint64_t sub_1BB28EDAC()
{
  unint64_t result;

  result = qword_1EF2C0008;
  if (!qword_1EF2C0008)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinDistance, &type metadata for FormatSupplementaryNodePinDistance);
    atomic_store(result, (unint64_t *)&qword_1EF2C0008);
  }
  return result;
}

unint64_t sub_1BB28EDF0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB28EE14();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB28EE14()
{
  unint64_t result;

  result = qword_1EF2C0010;
  if (!qword_1EF2C0010)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinDistanceAdjustment, &type metadata for FormatSupplementaryNodePinDistanceAdjustment);
    atomic_store(result, (unint64_t *)&qword_1EF2C0010);
  }
  return result;
}

uint64_t sub_1BB28EE58(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA81F6B0, (uint64_t (*)(void))sub_1BAEEAAA8, (uint64_t (*)(void))sub_1BB28EE74);
}

unint64_t sub_1BB28EE74()
{
  unint64_t result;

  result = qword_1EF2C0018;
  if (!qword_1EF2C0018)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinDistanceAdjustment, &type metadata for FormatSupplementaryNodePinDistanceAdjustment);
    atomic_store(result, (unint64_t *)&qword_1EF2C0018);
  }
  return result;
}

unint64_t sub_1BB28EEB8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB28EEDC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB28EEDC()
{
  unint64_t result;

  result = qword_1EF2C0020;
  if (!qword_1EF2C0020)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinDistanceAdjustmentValue, &type metadata for FormatSupplementaryNodePinDistanceAdjustmentValue);
    atomic_store(result, (unint64_t *)&qword_1EF2C0020);
  }
  return result;
}

uint64_t sub_1BB28EF20(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA81F488, (uint64_t (*)(void))sub_1BAEEAA14, (uint64_t (*)(void))sub_1BB28EF3C);
}

unint64_t sub_1BB28EF3C()
{
  unint64_t result;

  result = qword_1EF2C0028;
  if (!qword_1EF2C0028)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinDistanceAdjustmentValue, &type metadata for FormatSupplementaryNodePinDistanceAdjustmentValue);
    atomic_store(result, (unint64_t *)&qword_1EF2C0028);
  }
  return result;
}

unint64_t destroy for FormatSupplementaryNodePinDistance(uint64_t a1)
{
  return sub_1BA7AAE54(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_BYTE *)(a1 + 9));
}

uint64_t _s8NewsFeed34FormatSupplementaryNodePinDistanceOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 9);
  v5 = *(_BYTE *)(a2 + 8);
  sub_1BA7AD890(*(_QWORD *)a2, v5, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = v4;
  return a1;
}

uint64_t assignWithCopy for FormatSupplementaryNodePinDistance(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unsigned __int8 v5;
  unint64_t v6;
  char v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 9);
  v5 = *(_BYTE *)(a2 + 8);
  sub_1BA7AD890(*(_QWORD *)a2, v5, v4);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = v3;
  v8 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 9) = v4;
  sub_1BA7AAE54(v6, v8, v7);
  return a1;
}

uint64_t assignWithTake for FormatSupplementaryNodePinDistance(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  unint64_t v5;
  char v6;
  unsigned __int8 v7;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 9);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4;
  sub_1BA7AAE54(v5, v7, v6);
  return a1;
}

uint64_t sub_1BB28F090(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 9);
}

uint64_t sub_1BB28F098(uint64_t result, char a2)
{
  *(_BYTE *)(result + 9) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodePinDistance()
{
  return &type metadata for FormatSupplementaryNodePinDistance;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatSupplementaryNodePinDistanceAdjustment(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA7AD868(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

unint64_t destroy for FormatSupplementaryNodePinDistanceAdjustment(uint64_t a1)
{
  return sub_1BA7AAE2C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for FormatSupplementaryNodePinDistanceAdjustment(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA7AD868(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA7AAE2C(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatSupplementaryNodePinDistanceAdjustment(uint64_t a1, uint64_t a2)
{
  char v3;
  unint64_t v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BA7AAE2C(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodePinDistanceAdjustment()
{
  return &type metadata for FormatSupplementaryNodePinDistanceAdjustment;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodePinDistanceAdjustmentValue()
{
  return &type metadata for FormatSupplementaryNodePinDistanceAdjustmentValue;
}

_QWORD *sub_1BB28F1B4(uint64_t a1)
{
  unint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  _QWORD *v36;
  unsigned __int8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v1 = *(_QWORD *)a1;
  switch(*(_BYTE *)(a1 + 8))
  {
    case 0:
      v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
      sub_1BA8C88C8(0);
      v5 = *(_QWORD *)(v4 - 8);
      v6 = *(_QWORD *)(v5 + 72);
      v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
      v9 = v8 + v7;
      sub_1BA67035C(v1);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 6579265, 0xE300000000000000, (_QWORD *)(v8 + v7));
      v10 = type metadata accessor for FormatInspectionItem(0);
      v11 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
      v11(v9, 0, 1, v10);
      if (!v1)
      {
        v37 = 0;
        goto LABEL_23;
      }
      if (v1 == 1)
      {
        v12 = 0x676E696361705368;
        v13 = 0;
        goto LABEL_14;
      }
      v38 = swift_bridgeObjectRetain();
      v12 = sub_1BB106F08(v38);
      v40 = v39;
      sub_1BA7AAE40(v1, 0);
      sub_1BA7AAE40(v1, 0);
      goto LABEL_25;
    case 1:
      v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v14);
      sub_1BA8C88C8(0);
      v16 = *(_QWORD *)(v15 - 8);
      v6 = *(_QWORD *)(v16 + 72);
      v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
      v9 = v8 + v17;
      sub_1BA67035C(v1);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x7463617274627553, 0xE800000000000000, (_QWORD *)(v8 + v17));
      v10 = type metadata accessor for FormatInspectionItem(0);
      v11 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
      v11(v9, 0, 1, v10);
      if (!v1)
      {
        v37 = 1;
        goto LABEL_23;
      }
      if (v1 == 1)
      {
        v12 = 0x676E696361705368;
        v13 = 1;
        goto LABEL_14;
      }
      v41 = swift_bridgeObjectRetain();
      v12 = sub_1BB106F08(v41);
      v40 = v42;
      sub_1BA7AAE40(v1, 1u);
      sub_1BA7AAE40(v1, 1u);
      goto LABEL_25;
    case 2:
      v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v18);
      sub_1BA8C88C8(0);
      v20 = *(_QWORD *)(v19 - 8);
      v6 = *(_QWORD *)(v20 + 72);
      v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
      v9 = v8 + v21;
      sub_1BA67035C(v1);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x796C7069746C754DLL, 0xE800000000000000, (_QWORD *)(v8 + v21));
      v10 = type metadata accessor for FormatInspectionItem(0);
      v11 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
      v11(v9, 0, 1, v10);
      if (!v1)
      {
        v37 = 2;
        goto LABEL_23;
      }
      if (v1 == 1)
      {
        v12 = 0x676E696361705368;
        v13 = 2;
        goto LABEL_14;
      }
      v43 = swift_bridgeObjectRetain();
      v12 = sub_1BB106F08(v43);
      v40 = v44;
      sub_1BA7AAE40(v1, 2u);
      sub_1BA7AAE40(v1, 2u);
      goto LABEL_25;
    case 3:
      v22 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v22);
      sub_1BA8C88C8(0);
      v24 = *(_QWORD *)(v23 - 8);
      v6 = *(_QWORD *)(v24 + 72);
      v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
      v9 = v8 + v25;
      sub_1BA67035C(v1);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x656469766944, 0xE600000000000000, (_QWORD *)(v8 + v25));
      v10 = type metadata accessor for FormatInspectionItem(0);
      v11 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
      v11(v9, 0, 1, v10);
      if (!v1)
      {
        v37 = 3;
LABEL_23:
        sub_1BA7AAE40(0, v37);
        v12 = 0x676E696361705376;
        goto LABEL_24;
      }
      if (v1 == 1)
      {
        v12 = 0x676E696361705368;
        v13 = 3;
LABEL_14:
        sub_1BA7AAE40(1uLL, v13);
LABEL_24:
        v40 = 0xE800000000000000;
        goto LABEL_25;
      }
      v48 = swift_bridgeObjectRetain();
      v12 = sub_1BB106F08(v48);
      v40 = v49;
      sub_1BA7AAE40(v1, 3u);
      sub_1BA7AAE40(v1, 3u);
LABEL_25:
      sub_1BAAF7494(0x65756C6156, 0xE500000000000000, v12, v40, (_QWORD *)(v9 + v6));
      v11(v9 + v6, 0, 1, v10);
      sub_1BAF89090(0xD000000000000013, 0x80000001BB9837E0, 0, 0, v8, &v50);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(inited + 64) = &off_1E72D2F60;
      v45 = swift_allocObject();
      *(_QWORD *)(inited + 32) = v45;
      *(_QWORD *)(v45 + 48) = v52;
      v46 = v51;
      *(_OWORD *)(v45 + 16) = v50;
      *(_OWORD *)(v45 + 32) = v46;
      v36 = sub_1BB6DF010(inited);
      swift_setDeallocating();
      sub_1BA89EA04(0);
LABEL_26:
      swift_arrayDestroy();
      return v36;
    default:
      v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v27 = swift_initStackObject();
      *(_OWORD *)(v27 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v26);
      sub_1BA8C88C8(0);
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80);
      v30 = (v29 + 32) & ~v29;
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1BB87CE70;
      v32 = (_QWORD *)(v31 + v30);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v32);
      v33 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
      sub_1BAF89090(0xD000000000000013, 0x80000001BB9837E0, 0, 0, v31, &v50);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(v27 + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(v27 + 64) = &off_1E72D2F60;
      v34 = swift_allocObject();
      *(_QWORD *)(v27 + 32) = v34;
      *(_QWORD *)(v34 + 48) = v52;
      v35 = v51;
      *(_OWORD *)(v34 + 16) = v50;
      *(_OWORD *)(v34 + 32) = v35;
      v36 = sub_1BB6DF010(v27);
      swift_setDeallocating();
      sub_1BA89EA04(0);
      goto LABEL_26;
  }
}

_QWORD *sub_1BB28FA64(uint64_t a1)
{
  unsigned int v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  __int128 v38;
  _QWORD *v39;
  _OWORD v41[2];
  uint64_t v42;

  v1 = *(unsigned __int16 *)(a1 + 8);
  if (v1 >> 8 <= 0xFE)
  {
    v10 = *(_QWORD *)a1;
    if ((v1 & 0x100) != 0)
    {
      v24 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v24);
      sub_1BA8C88C8(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(_QWORD *)(v26 + 72);
      v28 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1BB87A390;
      v29 = (_QWORD *)(v16 + v28);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x656D617246, 0xE500000000000000, v29);
      v30 = type metadata accessor for FormatInspectionItem(0);
      v31 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
      v31(v29, 0, 1, v30);
      v32 = (_QWORD *)((char *)v29 + v27);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v24);
      v33 = swift_initStackObject();
      *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)&v41[0] = v10;
      BYTE8(v41[0]) = v1;
      v34 = sub_1BB28F1B4((uint64_t)v41);
      *(_QWORD *)(v33 + 56) = &type metadata for FormatInspection;
      *(_QWORD *)(v33 + 64) = &off_1E7335C38;
      *(_QWORD *)(v33 + 32) = v34;
      v35 = sub_1BA9747FC(v33);
      swift_setDeallocating();
      sub_1BA89EA20();
      swift_arrayDestroy();
      v36 = sub_1BB6DF010(v35);
      swift_bridgeObjectRelease();
      sub_1BAAF3C48(0x656D7473756A6441, 0xEA0000000000746ELL, (uint64_t)v36, 0, 0, v32);
      v31(v32, 0, 1, v30);
    }
    else
    {
      v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v11);
      sub_1BA8C88C8(0);
      v13 = *(_QWORD *)(v12 - 8);
      v14 = *(_QWORD *)(v13 + 72);
      v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1BB87A390;
      v17 = (_QWORD *)(v16 + v15);
      sub_1BA7AD890(v10, v1, 0);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6465786946, 0xE500000000000000, v17);
      v18 = type metadata accessor for FormatInspectionItem(0);
      v19 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
      v19(v17, 0, 1, v18);
      v20 = (_QWORD *)((char *)v17 + v14);
      v21 = sub_1BB106F08(v10);
      v23 = v22;
      sub_1BA7AAE60(v10, v1);
      sub_1BAAF7494(0x65756C6156, 0xE500000000000000, v21, v23, v20);
      v19(v20, 0, 1, v18);
    }
    sub_1BAF89090(0x65636E6174736944, 0xE800000000000000, 0, 0, v16, v41);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
    sub_1BA8C88C8(0);
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
    v6 = (v5 + 32) & ~v5;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
    v8 = (_QWORD *)(v7 + v6);
    sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v8);
    v9 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
    sub_1BAF89090(0x65636E6174736944, 0xE800000000000000, 0, 0, v7, v41);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v37 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v37;
  *(_QWORD *)(v37 + 48) = v42;
  v38 = v41[1];
  *(_OWORD *)(v37 + 16) = v41[0];
  *(_OWORD *)(v37 + 32) = v38;
  v39 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v39;
}

uint64_t sub_1BB28FFFC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t dispatch thunk of static FormatDefaultProviding.default.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FormatLayoutSectionDescriptor.Data.init(content:layoutResult:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, double);
  void (*v23)(char *, _QWORD, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t result;
  _QWORD v53[2];
  void (*v54)(char *, _QWORD, uint64_t);
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68[16];
  char *v69;
  uint64_t v70;

  v65 = a1;
  v7 = type metadata accessor for FormatLayoutSectionDescriptor.Footer(0);
  v66 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v67 = (uint64_t)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FeedItemSupplementaryAttributes();
  v63 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatLayoutSectionDescriptor.Header(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB870E88();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a2[5];
  v59 = a2[4];
  v56 = a2[6];
  v61 = *(_QWORD *)(a3 - 8);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v61 + 16);
  v64 = a4;
  v22(a4, v65, a3, v18);
  v23 = *(void (**)(char *, _QWORD, uint64_t))(v17 + 104);
  v23(v20, *MEMORY[0x1E0DBB2B8], v16);
  v69 = v20;
  swift_bridgeObjectRetain();
  v58 = v21;
  sub_1BA6A9700((uint64_t (*)(char *))sub_1BA6A9724, (uint64_t)v68, v21);
  v25 = v24;
  v26 = *(void (**)(char *, uint64_t))(v17 + 8);
  v57 = v20;
  v60 = v16;
  v55 = v26;
  v26(v20, v16);
  v27 = *(_QWORD *)(v25 + 16);
  v62 = a3;
  if (v27)
  {
    v53[1] = 0;
    v54 = v23;
    v70 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B318(0, v27, 0);
    v28 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    v53[0] = v25;
    v29 = v25 + v28;
    v30 = *(_QWORD *)(v63 + 72);
    v31 = v70;
    do
    {
      sub_1BA4C2DD8(v29, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4C2DD8((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B318(0, *(_QWORD *)(v31 + 16) + 1, 1);
        v31 = v70;
      }
      v33 = *(_QWORD *)(v31 + 16);
      v32 = *(_QWORD *)(v31 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_1BAC7B318(v32 > 1, v33 + 1, 1);
        v31 = v70;
      }
      *(_QWORD *)(v31 + 16) = v33 + 1;
      sub_1BA5193C4((uint64_t)v15, v31+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v33, type metadata accessor for FormatLayoutSectionDescriptor.Header);
      v29 += v30;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    v37 = v63;
    v36 = v64;
    a3 = v62;
    v23 = v54;
  }
  else
  {
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x1E0DEE9D8];
    v37 = v63;
    v36 = v64;
  }
  v63 = type metadata accessor for FormatLayoutSectionDescriptor.Data(0, a3, v34, v35);
  *(_QWORD *)(v36 + *(int *)(v63 + 28)) = v31;
  v38 = v57;
  v39 = v60;
  v40 = ((uint64_t (*)(char *, _QWORD, uint64_t))v23)(v57, *MEMORY[0x1E0DBB2B0], v60);
  MEMORY[0x1E0C80A78](v40);
  v53[-2] = v38;
  v41 = v58;
  swift_bridgeObjectRetain();
  sub_1BA6A9700((uint64_t (*)(char *))sub_1BB295204, (uint64_t)&v53[-4], v41);
  v43 = v42;
  v55(v38, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v44 = *(_QWORD *)(v43 + 16);
  v45 = MEMORY[0x1E0DEE9D8];
  if (v44)
  {
    v70 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B2EC(0, v44, 0);
    v46 = v43 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    v47 = *(_QWORD *)(v37 + 72);
    v45 = v70;
    v48 = v67;
    do
    {
      sub_1BA4C2DD8(v46, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4C2DD8((uint64_t)v11, v48, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B2EC(0, *(_QWORD *)(v45 + 16) + 1, 1);
        v45 = v70;
      }
      v50 = *(_QWORD *)(v45 + 16);
      v49 = *(_QWORD *)(v45 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1BAC7B2EC(v49 > 1, v50 + 1, 1);
        v45 = v70;
      }
      *(_QWORD *)(v45 + 16) = v50 + 1;
      v51 = v45
          + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))
          + *(_QWORD *)(v66 + 72) * v50;
      v48 = v67;
      sub_1BA5193C4(v67, v51, type metadata accessor for FormatLayoutSectionDescriptor.Footer);
      v46 += v47;
      --v44;
    }
    while (v44);
    v36 = v64;
    a3 = v62;
  }
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v65, a3);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + *(int *)(v63 + 32)) = v45;
  return result;
}

uint64_t type metadata accessor for FormatLayoutSectionDescriptor.Footer(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A87C0);
}

uint64_t type metadata accessor for FormatLayoutSectionDescriptor.Header(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A8840);
}

uint64_t FormatLayoutSectionDescriptor.supplementaryAttributes.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  sub_1BA822894(0);
  v2 = v1;
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatLayoutSectionDescriptor(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0, (uint64_t)v7, v8);
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA822894);
  v9 = sub_1BB290678(*(_QWORD *)&v4[*(int *)(v2 + 28)], type metadata accessor for FormatLayoutSectionDescriptor.Header);
  v10 = sub_1BB290678(*(_QWORD *)&v4[*(int *)(v2 + 32)], type metadata accessor for FormatLayoutSectionDescriptor.Footer);
  v14 = v9;
  sub_1BB384E30(v10);
  v11 = v14;
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA822894);
  return v11;
}

uint64_t sub_1BB290678(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = a2(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  v21 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1E0C80A78](v21);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7AA10(0, v13, 0);
    v15 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v20 = *(_QWORD *)(v5 + 72);
    v14 = v25;
    do
    {
      sub_1BA4C2DD8(v15, (uint64_t)v10, a2);
      sub_1BA4C2DD8((uint64_t)v10, (uint64_t)v7, a2);
      sub_1BA5193C4((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4A2E80((uint64_t)v10, a2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7AA10(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v25;
      }
      v17 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v14 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BAC7AA10(v16 > 1, v17 + 1, 1);
        v14 = v25;
      }
      v23 = v21;
      v24 = sub_1BA4A2870((unint64_t *)&unk_1ED39C820, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t)&protocol conformance descriptor for FeedItemSupplementaryAttributes);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v22);
      sub_1BA4C2DD8((uint64_t)v12, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      *(_QWORD *)(v14 + 16) = v17 + 1;
      sub_1BA4CECCC(&v22, v14 + 40 * v17 + 32);
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      v15 += v20;
      --v13;
    }
    while (v13);
  }
  return v14;
}

uint64_t sub_1BB2908A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  sub_1BA822894(0);
  v2 = v1;
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0, (uint64_t)v7, type metadata accessor for FormatLayoutSectionDescriptor);
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA822894);
  v8 = sub_1BB290678(*(_QWORD *)&v4[*(int *)(v2 + 28)], type metadata accessor for FormatLayoutSectionDescriptor.Header);
  v9 = sub_1BB290678(*(_QWORD *)&v4[*(int *)(v2 + 32)], type metadata accessor for FormatLayoutSectionDescriptor.Footer);
  v13 = v8;
  sub_1BB384E30(v9);
  v10 = v13;
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BA822894);
  return v10;
}

uint64_t sub_1BB2909B0()
{
  sub_1BA4A2870(&qword_1EF2C0030, type metadata accessor for FormatLayoutSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatLayoutSectionDescriptor);
  return sub_1BB8712A8();
}

uint64_t sub_1BB2909F0()
{
  sub_1BA4A2870(&qword_1ED3A88C0, type metadata accessor for FormatLayoutSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatLayoutSectionDescriptor);
  return sub_1BB870FF0();
}

uint64_t sub_1BB290A30()
{
  return sub_1BA4A2870(&qword_1ED3A88C0, type metadata accessor for FormatLayoutSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatLayoutSectionDescriptor);
}

uint64_t sub_1BB290A5C()
{
  return sub_1BA4A2870((unint64_t *)&qword_1ED3D4E30, type metadata accessor for FormatLayoutSectionDescriptor, (uint64_t)&protocol conformance descriptor for FormatLayoutSectionDescriptor);
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatLayoutSectionDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  int *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t *, uint64_t, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  int *v54;
  int EnumCaseMultiPayload;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  id v77;
  uint64_t v78;
  uint64_t v79;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  int *v92;
  unsigned int (*v93)(_QWORD *, uint64_t, uint64_t);
  int *v94;
  _QWORD *__dst;
  _QWORD *v96;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = (int *)type metadata accessor for FormatContent.Resolved();
    v8 = v7[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C8B0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(_QWORD *)((char *)v4 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
    *(_QWORD *)((char *)v4 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
    *(_QWORD *)((char *)v4 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
    v13 = a2;
    *(_QWORD *)((char *)v4 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
    *(_QWORD *)((char *)v4 + v7[10]) = *(_QWORD *)((char *)a2 + v7[10]);
    *(_QWORD *)((char *)v4 + v7[11]) = *(_QWORD *)((char *)a2 + v7[11]);
    v14 = v7[12];
    v15 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)v4 + v14) = v15;
    *(_QWORD *)((char *)v4 + v7[13]) = *(_QWORD *)((char *)v13 + v7[13]);
    v91 = v13;
    v92 = v7;
    v16 = v7[14];
    v90 = v4;
    __dst = (_QWORD *)((char *)v4 + v16);
    v96 = (_QWORD *)((char *)v13 + v16);
    v17 = type metadata accessor for FormatWebEmbed.Resolved();
    v18 = *(_QWORD *)(v17 - 8);
    v93 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v19 = v15;
    swift_unknownObjectRetain();
    if (v93(v96, 1, v17))
    {
      sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v96, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v22 = v91;
      v21 = v92;
    }
    else
    {
      v85 = v18;
      v24 = v96[1];
      *__dst = *v96;
      __dst[1] = v24;
      v94 = (int *)v17;
      v25 = *(int *)(v17 + 20);
      v26 = (_QWORD *)((char *)__dst + v25);
      v27 = (char *)v96 + v25;
      v28 = *(_QWORD *)((char *)v96 + v25 + 8);
      *v26 = *(_QWORD *)((char *)v96 + v25);
      v26[1] = v28;
      v29 = (int *)type metadata accessor for FormatWebEmbed();
      v30 = v29[5];
      v86 = &v27[v30];
      v88 = (char *)v26 + v30;
      v31 = sub_1BB86C67C();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      swift_bridgeObjectRetain();
      v34 = v31;
      swift_bridgeObjectRetain();
      v33(v88, v86, v31);
      v35 = v29[6];
      v36 = (char *)v26 + v35;
      v37 = &v27[v35];
      v83 = v33;
      v84 = v34;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v27[v35], 1, v34))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v33(v36, v37, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v34);
      }
      *(_QWORD *)((char *)v26 + v29[7]) = *(_QWORD *)&v27[v29[7]];
      v39 = v29[8];
      v40 = (_QWORD *)((char *)v26 + v39);
      v41 = &v27[v39];
      v42 = *((_QWORD *)v41 + 1);
      *v40 = *(_QWORD *)v41;
      v40[1] = v42;
      v43 = v29[9];
      v44 = (_QWORD *)((char *)v26 + v43);
      v45 = &v27[v43];
      v46 = *((_QWORD *)v45 + 1);
      *v44 = *(_QWORD *)v45;
      v44[1] = v46;
      *(_QWORD *)((char *)v26 + v29[10]) = *(_QWORD *)&v27[v29[10]];
      *(_QWORD *)((char *)v26 + v29[11]) = *(_QWORD *)&v27[v29[11]];
      *(_QWORD *)((char *)v26 + v29[12]) = *(_QWORD *)&v27[v29[12]];
      *(_QWORD *)((char *)__dst + v94[6]) = *(_QWORD *)((char *)v96 + v94[6]);
      *(_QWORD *)((char *)__dst + v94[7]) = *(_QWORD *)((char *)v96 + v94[7]);
      v47 = v94[8];
      v87 = (_QWORD *)((char *)__dst + v47);
      v48 = (_QWORD *)((char *)v96 + v47);
      v49 = type metadata accessor for WebEmbedDataVisualization();
      v50 = *(_QWORD *)(v49 - 8);
      v51 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v51(v48, 1, v49))
      {
        v52 = __dst;
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v87, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        v22 = v91;
        v21 = v92;
        v54 = v94;
        v4 = v90;
      }
      else
      {
        v89 = v50;
        v52 = __dst;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v56 = *v48;
        v22 = v91;
        v21 = v92;
        v54 = v94;
        v4 = v90;
        if (EnumCaseMultiPayload == 1)
        {
          v82 = v49;
          v57 = v48[1];
          *v87 = v56;
          v87[1] = v57;
          v58 = v48;
          v59 = type metadata accessor for GenericDataVisualization();
          v60 = *(int *)(v59 + 20);
          v61 = (char *)v87 + v60;
          v81 = (char *)v58 + v60;
          v49 = v82;
          swift_bridgeObjectRetain();
          v83(v61, v81, v84);
          *(_QWORD *)((char *)v87 + *(int *)(v59 + 24)) = *(uint64_t *)((char *)v58 + *(int *)(v59 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *v87 = v56;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v87, 0, 1, v49);
      }
      v62 = v54[9];
      v63 = (char *)v52 + v62;
      v64 = (char *)v96 + v62;
      sub_1BA6C5A68();
      v66 = v65;
      v67 = *(_QWORD *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v64, 1, v65))
      {
        sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v63, v64, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v63, 0, 1, v66);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v85 + 56))(v52, 0, 1, v54);
    }
    v69 = v21[15];
    v70 = *(void **)((char *)v22 + v69);
    *(_QWORD *)((char *)v4 + v69) = v70;
    *((_BYTE *)v4 + v21[16]) = *((_BYTE *)v22 + v21[16]);
    *(_QWORD *)((char *)v4 + v21[17]) = *(_QWORD *)((char *)v22 + v21[17]);
    v71 = v21[18];
    v72 = (char *)v4 + v71;
    v73 = (char *)v22 + v71;
    v74 = sub_1BB871E24();
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
    v77 = v70;
    swift_bridgeObjectRetain();
    if (v76(v73, 1, v74))
    {
      sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    sub_1BA822894(0);
    *(_QWORD *)((char *)v4 + *(int *)(v79 + 28)) = *(_QWORD *)((char *)v22 + *(int *)(v79 + 28));
    *(_QWORD *)((char *)v4 + *(int *)(v79 + 32)) = *(_QWORD *)((char *)v22 + *(int *)(v79 + 32));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FormatLayoutSectionDescriptor(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for FormatContent.Resolved();
  v3 = a1 + v2[5];
  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v5 = a1 + v2[14];
  v6 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v7 = v5 + v6[5];
    swift_bridgeObjectRelease();
    v8 = type metadata accessor for FormatWebEmbed();
    v9 = v7 + *(int *)(v8 + 20);
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v12(v9, v10);
    v13 = v7 + *(int *)(v8 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10))
      v12(v13, v10);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v14 = v5 + v6[8];
    v15 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for GenericDataVisualization();
        v12(v14 + *(int *)(v16 + 20), v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v17 = v5 + v6[9];
    sub_1BA6C5A68();
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  }

  swift_bridgeObjectRelease();
  v21 = a1 + v2[18];
  v22 = sub_1BB871E24();
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  sub_1BA822894(0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatLayoutSectionDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  int *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  _QWORD *v52;
  int EnumCaseMultiPayload;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  id v76;
  uint64_t v77;
  uint64_t v78;
  char *v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  int *v85;
  _QWORD *v86;
  int *v87;
  unsigned int (*v88)(_QWORD *, uint64_t, uint64_t);
  uint64_t v89;
  _QWORD *v90;
  unsigned int (*v91)(_QWORD *, uint64_t, uint64_t);
  char *v92;
  uint64_t v93;
  void *v94;
  _QWORD *v95;
  _QWORD *__dst;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (int *)type metadata accessor for FormatContent.Resolved();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
  *(_QWORD *)((char *)a1 + v5[7]) = *(_QWORD *)((char *)a2 + v5[7]);
  *(_QWORD *)((char *)a1 + v5[8]) = *(_QWORD *)((char *)a2 + v5[8]);
  *(_QWORD *)((char *)a1 + v5[9]) = *(_QWORD *)((char *)a2 + v5[9]);
  *(_QWORD *)((char *)a1 + v5[10]) = *(_QWORD *)((char *)a2 + v5[10]);
  *(_QWORD *)((char *)a1 + v5[11]) = *(_QWORD *)((char *)a2 + v5[11]);
  v11 = v5[12];
  v94 = *(void **)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v94;
  *(_QWORD *)((char *)a1 + v5[13]) = *(_QWORD *)((char *)a2 + v5[13]);
  v86 = a1;
  v87 = v5;
  v12 = v5[14];
  __dst = (_QWORD *)((char *)a1 + v12);
  v90 = a2;
  v13 = (_QWORD *)((char *)a2 + v12);
  v14 = type metadata accessor for FormatWebEmbed.Resolved();
  v15 = *(_QWORD *)(v14 - 8);
  v91 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v16 = v94;
  swift_unknownObjectRetain();
  if (v91(v13, 1, v14))
  {
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    v18 = v87;
    v19 = v90;
    v20 = v86;
  }
  else
  {
    v84 = v15;
    v85 = (int *)v14;
    v21 = v13[1];
    *__dst = *v13;
    __dst[1] = v21;
    v22 = *(int *)(v14 + 20);
    v23 = (_QWORD *)((char *)__dst + v22);
    v95 = v13;
    v24 = (char *)v13 + v22;
    v25 = *(_QWORD *)((char *)v13 + v22 + 8);
    *v23 = *(_QWORD *)((char *)v13 + v22);
    v23[1] = v25;
    v26 = (int *)type metadata accessor for FormatWebEmbed();
    v27 = v26[5];
    v28 = (char *)v23 + v27;
    v92 = &v24[v27];
    v29 = sub_1BB86C67C();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v28, v92, v29);
    v32 = v26[6];
    v33 = (char *)v23 + v32;
    v34 = &v24[v32];
    v81 = v31;
    v82 = v29;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&v24[v32], 1, v29))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v31(v33, v34, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
    }
    v18 = v87;
    *(_QWORD *)((char *)v23 + v26[7]) = *(_QWORD *)&v24[v26[7]];
    v36 = v26[8];
    v37 = (_QWORD *)((char *)v23 + v36);
    v38 = &v24[v36];
    v39 = *((_QWORD *)v38 + 1);
    *v37 = *(_QWORD *)v38;
    v37[1] = v39;
    v40 = v26[9];
    v41 = (_QWORD *)((char *)v23 + v40);
    v42 = &v24[v40];
    v43 = *((_QWORD *)v42 + 1);
    *v41 = *(_QWORD *)v42;
    v41[1] = v43;
    *(_QWORD *)((char *)v23 + v26[10]) = *(_QWORD *)&v24[v26[10]];
    *(_QWORD *)((char *)v23 + v26[11]) = *(_QWORD *)&v24[v26[11]];
    *(_QWORD *)((char *)v23 + v26[12]) = *(_QWORD *)&v24[v26[12]];
    *(_QWORD *)((char *)__dst + v85[6]) = *(_QWORD *)((char *)v95 + v85[6]);
    *(_QWORD *)((char *)__dst + v85[7]) = *(_QWORD *)((char *)v95 + v85[7]);
    v44 = v85[8];
    v83 = (_QWORD *)((char *)__dst + v44);
    v45 = (_QWORD *)((char *)v95 + v44);
    v46 = type metadata accessor for WebEmbedDataVisualization();
    v47 = *(_QWORD *)(v46 - 8);
    v88 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v47 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48 = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v88(v45, 1, v46))
    {
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v83, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      v19 = v90;
      v50 = v85;
      v20 = v86;
      v52 = v95;
      v51 = __dst;
    }
    else
    {
      v93 = v47;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v54 = *v45;
      v19 = v90;
      v50 = v85;
      v20 = v86;
      v52 = v95;
      if (EnumCaseMultiPayload == 1)
      {
        v55 = v48[1];
        *v83 = v54;
        v83[1] = v55;
        v89 = v46;
        v56 = type metadata accessor for GenericDataVisualization();
        v57 = *(int *)(v56 + 20);
        v58 = (char *)v83 + v57;
        v80 = (char *)v48 + v57;
        v59 = v83;
        swift_bridgeObjectRetain();
        v81(v58, v80, v82);
        v60 = *(int *)(v56 + 24);
        v46 = v89;
        *(_QWORD *)((char *)v83 + v60) = *(_QWORD *)((char *)v48 + v60);
        swift_bridgeObjectRetain();
      }
      else
      {
        v59 = v83;
        *v83 = v54;
        swift_retain();
      }
      v51 = __dst;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v59, 0, 1, v46);
    }
    v61 = v50[9];
    v62 = (char *)v51 + v61;
    v63 = (char *)v52 + v61;
    sub_1BA6C5A68();
    v65 = v64;
    v66 = *(_QWORD *)(v64 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v63, 1, v64))
    {
      sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v62, v63, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v62, 0, 1, v65);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v84 + 56))(v51, 0, 1, v50);
  }
  v68 = v18[15];
  v69 = *(void **)((char *)v19 + v68);
  *(_QWORD *)((char *)v20 + v68) = v69;
  *((_BYTE *)v20 + v18[16]) = *((_BYTE *)v19 + v18[16]);
  *(_QWORD *)((char *)v20 + v18[17]) = *(_QWORD *)((char *)v19 + v18[17]);
  v70 = v18[18];
  v71 = (char *)v20 + v70;
  v72 = (char *)v19 + v70;
  v73 = sub_1BB871E24();
  v74 = *(_QWORD *)(v73 - 8);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
  v76 = v69;
  swift_bridgeObjectRetain();
  if (v75(v72, 1, v73))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
  }
  sub_1BA822894(0);
  *(_QWORD *)((char *)v20 + *(int *)(v78 + 28)) = *(_QWORD *)((char *)v19 + *(int *)(v78 + 28));
  *(_QWORD *)((char *)v20 + *(int *)(v78 + 32)) = *(_QWORD *)((char *)v19 + *(int *)(v78 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v20;
}

_QWORD *assignWithCopy for FormatLayoutSectionDescriptor(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  size_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(void);
  int v50;
  uint64_t v51;
  size_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  int *v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  id v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(char *, uint64_t, uint64_t);
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v97;
  _QWORD *v98;
  char *v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(_QWORD *, uint64_t, uint64_t);
  int v109;
  int v110;
  uint64_t (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  int EnumCaseMultiPayload;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  int *v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(char *, uint64_t, uint64_t);
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*__dst)(char *, char *, uint64_t);
  _QWORD *__dsta;
  char *__dstb;
  char *__dstc;
  uint64_t v138;
  _QWORD *v139;
  int *v140;
  uint64_t v141;
  unsigned int (*v142)(_QWORD *, uint64_t, uint64_t);
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *__srca;
  void *__src;
  int *__srcb;
  int *__srcc;
  int *v151;
  int *v152;
  _QWORD *v153;
  _QWORD *v154;
  _QWORD *v155;
  _QWORD *v156;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for FormatContent.Resolved();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v9 = v4[12];
  v10 = *(void **)((char *)a1 + v9);
  v11 = *(void **)((char *)a2 + v9);
  *(_QWORD *)((char *)a1 + v9) = v11;
  v12 = v11;

  *(_QWORD *)((char *)a1 + v4[13]) = *(_QWORD *)((char *)a2 + v4[13]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v13 = v4[14];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for FormatWebEmbed.Resolved();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_6;
    }
    *v14 = *v15;
    v14[1] = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v152 = (int *)v16;
    v154 = v15;
    v38 = *(int *)(v16 + 20);
    v156 = v14;
    v39 = (_QWORD *)((char *)v14 + v38);
    v40 = (char *)v15 + v38;
    *v39 = *(_QWORD *)((char *)v15 + v38);
    v39[1] = *(_QWORD *)((char *)v15 + v38 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v41 = (int *)type metadata accessor for FormatWebEmbed();
    v42 = v41[5];
    v43 = (char *)v39 + v42;
    v44 = &v40[v42];
    v45 = sub_1BB86C67C();
    v46 = *(_QWORD *)(v45 - 8);
    __dst = *(void (**)(char *, char *, uint64_t))(v46 + 24);
    __dst(v43, v44, v45);
    v47 = v41[6];
    v48 = &v40[v47];
    v138 = v46;
    v49 = *(uint64_t (**)(void))(v46 + 48);
    v144 = (char *)v39 + v47;
    LODWORD(v46) = v49();
    v141 = v45;
    v50 = ((uint64_t (*)(char *, uint64_t, uint64_t))v49)(v48, 1, v45);
    if ((_DWORD)v46)
    {
      if (v50)
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v52 = *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64);
        v53 = v144;
LABEL_20:
        memcpy(v53, v48, v52);
        goto LABEL_37;
      }
      (*(void (**)(char *, char *, uint64_t))(v138 + 16))(v144, v48, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v144, 0, 1, v45);
    }
    else
    {
      if (v50)
      {
        (*(void (**)(char *, uint64_t))(v138 + 8))(v144, v45);
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v52 = *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64);
        v53 = v144;
        goto LABEL_20;
      }
      __dst(v144, v48, v45);
    }
LABEL_37:
    *(_QWORD *)((char *)v39 + v41[7]) = *(_QWORD *)&v40[v41[7]];
    swift_retain();
    swift_release();
    v97 = v41[8];
    v98 = (_QWORD *)((char *)v39 + v97);
    v99 = &v40[v97];
    *v98 = *(_QWORD *)v99;
    v98[1] = *((_QWORD *)v99 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v100 = v41[9];
    v101 = (_QWORD *)((char *)v39 + v100);
    v102 = &v40[v100];
    *v101 = *(_QWORD *)v102;
    v101[1] = *((_QWORD *)v102 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v39 + v41[10]) = *(_QWORD *)&v40[v41[10]];
    *(_QWORD *)((char *)v39 + v41[11]) = *(_QWORD *)&v40[v41[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v39 + v41[12]) = *(_QWORD *)&v40[v41[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v156 + v152[6]) = *(_QWORD *)((char *)v154 + v152[6]);
    swift_retain();
    swift_release();
    *(_QWORD *)((char *)v156 + v152[7]) = *(_QWORD *)((char *)v154 + v152[7]);
    swift_retain();
    swift_release();
    v103 = v152[8];
    v104 = (_QWORD *)((char *)v156 + v103);
    v105 = (_QWORD *)((char *)v154 + v103);
    v106 = type metadata accessor for WebEmbedDataVisualization();
    v107 = *(_QWORD *)(v106 - 8);
    v108 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v107 + 48);
    v109 = v108(v104, 1, v106);
    v110 = v108(v105, 1, v106);
    if (v109)
    {
      if (!v110)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *v104 = *v105;
        if (EnumCaseMultiPayload == 1)
        {
          v104[1] = v105[1];
          v114 = type metadata accessor for GenericDataVisualization();
          v115 = *(int *)(v114 + 20);
          v145 = (char *)v104 + v115;
          __srcb = (int *)v114;
          __dstb = (char *)v105 + v115;
          v116 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
          swift_bridgeObjectRetain();
          v116(v145, __dstb, v141);
          *(_QWORD *)((char *)v104 + __srcb[6]) = *(_QWORD *)((char *)v105 + __srcb[6]);
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
        goto LABEL_51;
      }
      v111 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    }
    else
    {
      if (!v110)
      {
        v117 = v152;
        if (a1 != a2)
        {
          sub_1BA4A2E80((uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          v118 = swift_getEnumCaseMultiPayload();
          *v104 = *v105;
          if (v118 == 1)
          {
            v104[1] = v105[1];
            v119 = type metadata accessor for GenericDataVisualization();
            v120 = *(int *)(v119 + 20);
            v146 = (char *)v104 + v120;
            __srcc = (int *)v119;
            __dstc = (char *)v105 + v120;
            v121 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
            swift_bridgeObjectRetain();
            v121(v146, __dstc, v141);
            *(_QWORD *)((char *)v104 + __srcc[6]) = *(_QWORD *)((char *)v105 + __srcc[6]);
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_52:
        v122 = v117[9];
        v123 = (char *)v156 + v122;
        v124 = (char *)v154 + v122;
        sub_1BA6C5A68();
        v126 = v125;
        v127 = *(_QWORD *)(v125 - 8);
        v128 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v127 + 48);
        v129 = v128(v123, 1, v125);
        v130 = v128(v124, 1, v126);
        if (v129)
        {
          if (!v130)
          {
            (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v123, v124, v126);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v123, 0, 1, v126);
            goto LABEL_27;
          }
        }
        else
        {
          if (!v130)
          {
            (*(void (**)(char *, char *, uint64_t))(v127 + 24))(v123, v124, v126);
            goto LABEL_27;
          }
          (*(void (**)(char *, uint64_t))(v127 + 8))(v123, v126);
        }
        sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v23 = *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64);
        v24 = v123;
        v25 = v124;
        goto LABEL_7;
      }
      sub_1BA4A2E80((uint64_t)v104, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v111 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    }
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v111);
    memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
LABEL_51:
    v117 = v152;
    goto LABEL_52;
  }
  if (v20)
  {
    v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v21);
    v23 = *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64);
    v24 = (char *)v14;
    v25 = (char *)v15;
LABEL_7:
    memcpy(v24, v25, v23);
    goto LABEL_27;
  }
  v140 = v4;
  v133 = v17;
  *v14 = *v15;
  v14[1] = v15[1];
  v151 = (int *)v16;
  v153 = v15;
  v26 = *(int *)(v16 + 20);
  v155 = v14;
  v27 = (_QWORD *)((char *)v14 + v26);
  v28 = (char *)v15 + v26;
  *v27 = *(_QWORD *)((char *)v15 + v26);
  v27[1] = *(_QWORD *)((char *)v15 + v26 + 8);
  v29 = (int *)type metadata accessor for FormatWebEmbed();
  v30 = v29[5];
  v143 = &v28[v30];
  __srca = (char *)v27 + v30;
  v31 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(__srca, v143, v31);
  v34 = v29[6];
  v35 = (char *)v27 + v34;
  v36 = &v28[v34];
  v132 = v31;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v28[v34], 1, v31))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v33(v35, v36, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
  }
  v4 = v140;
  *(_QWORD *)((char *)v27 + v29[7]) = *(_QWORD *)&v28[v29[7]];
  v54 = v29[8];
  v55 = (_QWORD *)((char *)v27 + v54);
  v56 = &v28[v54];
  *v55 = *(_QWORD *)v56;
  v55[1] = *((_QWORD *)v56 + 1);
  v57 = v29[9];
  v58 = (_QWORD *)((char *)v27 + v57);
  v59 = &v28[v57];
  *v58 = *(_QWORD *)v59;
  v58[1] = *((_QWORD *)v59 + 1);
  *(_QWORD *)((char *)v27 + v29[10]) = *(_QWORD *)&v28[v29[10]];
  *(_QWORD *)((char *)v27 + v29[11]) = *(_QWORD *)&v28[v29[11]];
  *(_QWORD *)((char *)v27 + v29[12]) = *(_QWORD *)&v28[v29[12]];
  *(_QWORD *)((char *)v155 + v151[6]) = *(_QWORD *)((char *)v153 + v151[6]);
  *(_QWORD *)((char *)v155 + v151[7]) = *(_QWORD *)((char *)v153 + v151[7]);
  v60 = v151[8];
  __dsta = (_QWORD *)((char *)v155 + v60);
  v139 = (_QWORD *)((char *)v153 + v60);
  v61 = type metadata accessor for WebEmbedDataVisualization();
  v62 = *(_QWORD **)(v61 - 8);
  v142 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v62[6];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v142(v139, 1, v61))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dsta, v139, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    v65 = v153;
    v64 = v155;
    v66 = v151;
    v67 = v133;
  }
  else
  {
    __src = v62;
    v68 = swift_getEnumCaseMultiPayload();
    *__dsta = *v139;
    if (v68 == 1)
    {
      __dsta[1] = v139[1];
      v69 = type metadata accessor for GenericDataVisualization();
      v70 = *(int *)(v69 + 20);
      v71 = (char *)__dsta + v70;
      v72 = (char *)v139 + v70;
      swift_bridgeObjectRetain();
      v33(v71, v72, v132);
      *(_QWORD *)((char *)__dsta + *(int *)(v69 + 24)) = *(_QWORD *)((char *)v139 + *(int *)(v69 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    v66 = v151;
    v65 = v153;
    v67 = v133;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__src + 7))(__dsta, 0, 1, v61);
    v64 = v155;
  }
  v74 = v66[9];
  v75 = (char *)v64 + v74;
  v76 = (char *)v65 + v74;
  sub_1BA6C5A68();
  v78 = v77;
  v79 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v76, 1, v77))
  {
    sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v75, v76, v78);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v75, 0, 1, v78);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v67 + 56))(v155, 0, 1, v66);
LABEL_27:
  v81 = v4[15];
  v82 = *(void **)((char *)a1 + v81);
  v83 = *(void **)((char *)a2 + v81);
  *(_QWORD *)((char *)a1 + v81) = v83;
  v84 = v83;

  *((_BYTE *)a1 + v4[16]) = *((_BYTE *)a2 + v4[16]);
  *(_QWORD *)((char *)a1 + v4[17]) = *(_QWORD *)((char *)a2 + v4[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v85 = v4[18];
  v86 = (char *)a1 + v85;
  v87 = (char *)a2 + v85;
  v88 = sub_1BB871E24();
  v89 = *(_QWORD *)(v88 - 8);
  v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
  v91 = v90(v86, 1, v88);
  v92 = v90(v87, 1, v88);
  if (!v91)
  {
    if (!v92)
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 24))(v86, v87, v88);
      goto LABEL_33;
    }
    (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v88);
    goto LABEL_32;
  }
  if (v92)
  {
LABEL_32:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
LABEL_33:
  sub_1BA822894(0);
  v95 = v94;
  *(_QWORD *)((char *)a1 + *(int *)(v94 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v94 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + *(int *)(v95 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v95 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatLayoutSectionDescriptor(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v49)(char *, char *, uint64_t);
  _OWORD *v50;
  uint64_t v51;
  _OWORD *v52;
  char *__dsta;
  char *__dst;
  int *v55;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for FormatContent.Resolved();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
  *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
  *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
  *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
  *(_QWORD *)((char *)a1 + v4[12]) = *(_QWORD *)((char *)a2 + v4[12]);
  *(_QWORD *)((char *)a1 + v4[13]) = *(_QWORD *)((char *)a2 + v4[13]);
  v9 = v4[14];
  v10 = (_OWORD *)((char *)a1 + v9);
  v11 = (_OWORD *)((char *)a2 + v9);
  v12 = type metadata accessor for FormatWebEmbed.Resolved();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v51 = v13;
    v52 = v10;
    *v10 = *v11;
    v55 = (int *)v12;
    v15 = *(int *)(v12 + 20);
    v16 = (_OWORD *)((char *)v10 + v15);
    v50 = v11;
    v17 = (char *)v11 + v15;
    *v16 = *(_OWORD *)((char *)v11 + v15);
    v18 = (int *)type metadata accessor for FormatWebEmbed();
    v19 = v18[5];
    __dsta = (char *)v16 + v19;
    v20 = &v17[v19];
    v21 = sub_1BB86C67C();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v23(__dsta, v20, v21);
    v24 = v18[6];
    __dst = (char *)v16 + v24;
    v25 = &v17[v24];
    v49 = v23;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(&v17[v24], 1, v21))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v23(__dst, v25, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    *(_QWORD *)((char *)v16 + v18[7]) = *(_QWORD *)&v17[v18[7]];
    *(_OWORD *)((char *)v16 + v18[8]) = *(_OWORD *)&v17[v18[8]];
    *(_OWORD *)((char *)v16 + v18[9]) = *(_OWORD *)&v17[v18[9]];
    *(_QWORD *)((char *)v16 + v18[10]) = *(_QWORD *)&v17[v18[10]];
    *(_QWORD *)((char *)v16 + v18[11]) = *(_QWORD *)&v17[v18[11]];
    *(_QWORD *)((char *)v16 + v18[12]) = *(_QWORD *)&v17[v18[12]];
    *(_QWORD *)((char *)v52 + v55[6]) = *(_QWORD *)((char *)v50 + v55[6]);
    *(_QWORD *)((char *)v52 + v55[7]) = *(_QWORD *)((char *)v50 + v55[7]);
    v27 = v55[8];
    v28 = (_OWORD *)((char *)v52 + v27);
    v29 = (_OWORD *)((char *)v50 + v27);
    v30 = type metadata accessor for WebEmbedDataVisualization();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v28 = *v29;
        v33 = type metadata accessor for GenericDataVisualization();
        v49((char *)v28 + *(int *)(v33 + 20), (char *)v29 + *(int *)(v33 + 20), v21);
        *(_QWORD *)((char *)v28 + *(int *)(v33 + 24)) = *(_QWORD *)((char *)v29 + *(int *)(v33 + 24));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v28, v29, *(_QWORD *)(v31 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v34 = v55[9];
    v35 = (char *)v52 + v34;
    v36 = (char *)v50 + v34;
    sub_1BA6C5A68();
    v38 = v37;
    v39 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v36, 1, v37))
    {
      sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v36, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v35, 0, 1, v38);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v51 + 56))(v52, 0, 1, v55);
  }
  *(_QWORD *)((char *)a1 + v4[15]) = *(_QWORD *)((char *)a2 + v4[15]);
  *((_BYTE *)a1 + v4[16]) = *((_BYTE *)a2 + v4[16]);
  *(_QWORD *)((char *)a1 + v4[17]) = *(_QWORD *)((char *)a2 + v4[17]);
  v41 = v4[18];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = sub_1BB871E24();
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  sub_1BA822894(0);
  *(_QWORD *)((char *)a1 + *(int *)(v47 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v47 + 28));
  *(_QWORD *)((char *)a1 + *(int *)(v47 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v47 + 32));
  return a1;
}

_QWORD *assignWithTake for FormatLayoutSectionDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, int *);
  int v18;
  int v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  size_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _OWORD *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(_OWORD *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  size_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(char *, uint64_t, uint64_t);
  int v112;
  int v113;
  uint64_t v114;
  void (*v115)(char *, char *, uint64_t);
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;
  int *v118;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  char *__dstb;
  char *__dst;
  char *__dstc;
  char *__dsta;
  _QWORD *v126;
  _QWORD *v127;
  _QWORD *v128;
  _QWORD *v129;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for FormatContent.Resolved();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[7]) = *(_QWORD *)((char *)a2 + v5[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[8]) = *(_QWORD *)((char *)a2 + v5[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[9]) = *(_QWORD *)((char *)a2 + v5[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[10]) = *(_QWORD *)((char *)a2 + v5[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[11]) = *(_QWORD *)((char *)a2 + v5[11]);
  swift_unknownObjectRelease();
  v10 = v5[12];
  v11 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);

  *(_QWORD *)((char *)a1 + v5[13]) = *(_QWORD *)((char *)a2 + v5[13]);
  swift_unknownObjectRelease();
  v12 = v5[14];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_6;
    }
    v37 = v14[1];
    *v13 = *v14;
    v13[1] = v37;
    swift_bridgeObjectRelease();
    v38 = v15[5];
    v127 = v13;
    v129 = v14;
    v39 = (char *)v13 + v38;
    v40 = (char *)v14 + v38;
    v41 = *(_QWORD *)((char *)v14 + v38 + 8);
    *(_QWORD *)v39 = *(_QWORD *)((char *)v14 + v38);
    *((_QWORD *)v39 + 1) = v41;
    swift_bridgeObjectRelease();
    v42 = type metadata accessor for FormatWebEmbed();
    v43 = *(int *)(v42 + 20);
    __dstc = &v39[v43];
    v44 = &v40[v43];
    v45 = sub_1BB86C67C();
    v46 = *(_QWORD *)(v45 - 8);
    v115 = *(void (**)(char *, char *, uint64_t))(v46 + 40);
    v115(__dstc, v44, v45);
    v121 = (int *)v42;
    __dsta = v40;
    v47 = *(int *)(v42 + 24);
    v48 = &v39[v47];
    v49 = &v40[v47];
    v117 = v46;
    v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
    LODWORD(v40) = v50(&v39[v47], 1, v45);
    v119 = v45;
    v51 = v50(v49, 1, v45);
    if ((_DWORD)v40)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v48, v49, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v48, 0, 1, v45);
        goto LABEL_21;
      }
    }
    else
    {
      if (!v51)
      {
        v115(v48, v49, v45);
LABEL_21:
        *(_QWORD *)&v39[v121[7]] = *(_QWORD *)&__dsta[v121[7]];
        swift_release();
        v61 = v121[8];
        v62 = &v39[v61];
        v63 = &__dsta[v61];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = v65;
        *((_QWORD *)v62 + 1) = v64;
        swift_bridgeObjectRelease();
        v66 = v121[9];
        v67 = &v39[v66];
        v68 = &__dsta[v66];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        *(_QWORD *)v67 = v70;
        *((_QWORD *)v67 + 1) = v69;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v39[v121[10]] = *(_QWORD *)&__dsta[v121[10]];
        *(_QWORD *)&v39[v121[11]] = *(_QWORD *)&__dsta[v121[11]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&v39[v121[12]] = *(_QWORD *)&__dsta[v121[12]];
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v127 + v15[6]) = *(_QWORD *)((char *)v129 + v15[6]);
        swift_release();
        *(_QWORD *)((char *)v127 + v15[7]) = *(_QWORD *)((char *)v129 + v15[7]);
        swift_release();
        v71 = v15[8];
        v72 = (_OWORD *)((char *)v127 + v71);
        v73 = (_OWORD *)((char *)v129 + v71);
        v74 = type metadata accessor for WebEmbedDataVisualization();
        v75 = *(_QWORD *)(v74 - 8);
        v76 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v75 + 48);
        v77 = v76(v72, 1, v74);
        v78 = v76(v73, 1, v74);
        if (v77)
        {
          if (v78)
          {
            v79 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_26:
            sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v79);
            v81 = *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64);
LABEL_27:
            memcpy(v72, v73, v81);
            goto LABEL_50;
          }
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *v72 = *v73;
            v103 = type metadata accessor for GenericDataVisualization();
            (*(void (**)(char *, char *, uint64_t))(v117 + 32))((char *)v72 + *(int *)(v103 + 20), (char *)v73 + *(int *)(v103 + 20), v119);
            *(_QWORD *)((char *)v72 + *(int *)(v103 + 24)) = *(_QWORD *)((char *)v73 + *(int *)(v103 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v72, v73, *(_QWORD *)(v75 + 64));
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
        }
        else
        {
          if (v78)
          {
            sub_1BA4A2E80((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            v79 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
            goto LABEL_26;
          }
          if (a1 != a2)
          {
            sub_1BA4A2E80((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            if (swift_getEnumCaseMultiPayload() != 1)
            {
              v81 = *(_QWORD *)(v75 + 64);
              goto LABEL_27;
            }
            *v72 = *v73;
            v104 = type metadata accessor for GenericDataVisualization();
            (*(void (**)(char *, char *, uint64_t))(v117 + 32))((char *)v72 + *(int *)(v104 + 20), (char *)v73 + *(int *)(v104 + 20), v119);
            *(_QWORD *)((char *)v72 + *(int *)(v104 + 24)) = *(_QWORD *)((char *)v73 + *(int *)(v104 + 24));
            swift_storeEnumTagMultiPayload();
          }
        }
LABEL_50:
        v105 = v15[9];
        v106 = (char *)v127 + v105;
        v107 = (char *)v129 + v105;
        sub_1BA6C5A68();
        v109 = v108;
        v110 = *(_QWORD *)(v108 - 8);
        v111 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 48);
        v112 = v111(v106, 1, v108);
        v113 = v111(v107, 1, v109);
        if (v112)
        {
          if (!v113)
          {
            (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v106, v107, v109);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v106, 0, 1, v109);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v113)
          {
            (*(void (**)(char *, char *, uint64_t))(v110 + 40))(v106, v107, v109);
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v110 + 8))(v106, v109);
        }
        sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v22 = *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64);
        v23 = v106;
        v24 = v107;
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v117 + 8))(v48, v45);
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_21;
  }
  if (v19)
  {
    v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v20);
    v22 = *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64);
    v23 = (char *)v13;
    v24 = (char *)v14;
LABEL_7:
    memcpy(v23, v24, v22);
    goto LABEL_34;
  }
  v118 = v15;
  v120 = v16;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v25 = v15[5];
  v126 = v13;
  v128 = v14;
  v26 = (_OWORD *)((char *)v13 + v25);
  v27 = (char *)v14 + v25;
  *v26 = *(_OWORD *)((char *)v14 + v25);
  v28 = (int *)type metadata accessor for FormatWebEmbed();
  v29 = v28[5];
  __dstb = (char *)v26 + v29;
  v30 = &v27[v29];
  v31 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v33(__dstb, v30, v31);
  v34 = v28[6];
  __dst = (char *)v26 + v34;
  v35 = &v27[v34];
  v116 = v33;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v27[v34], 1, v31))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v33(__dst, v35, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  *(_QWORD *)((char *)v26 + v28[7]) = *(_QWORD *)&v27[v28[7]];
  *(_OWORD *)((char *)v26 + v28[8]) = *(_OWORD *)&v27[v28[8]];
  *(_OWORD *)((char *)v26 + v28[9]) = *(_OWORD *)&v27[v28[9]];
  *(_QWORD *)((char *)v26 + v28[10]) = *(_QWORD *)&v27[v28[10]];
  *(_QWORD *)((char *)v26 + v28[11]) = *(_QWORD *)&v27[v28[11]];
  *(_QWORD *)((char *)v26 + v28[12]) = *(_QWORD *)&v27[v28[12]];
  *(_QWORD *)((char *)v126 + v118[6]) = *(_QWORD *)((char *)v128 + v118[6]);
  *(_QWORD *)((char *)v126 + v118[7]) = *(_QWORD *)((char *)v128 + v118[7]);
  v52 = v118[8];
  v53 = (_OWORD *)((char *)v126 + v52);
  v54 = (_OWORD *)((char *)v128 + v52);
  v55 = type metadata accessor for WebEmbedDataVisualization();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    v58 = v126;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v53 = *v54;
      v59 = type metadata accessor for GenericDataVisualization();
      v116((char *)v53 + *(int *)(v59 + 20), (char *)v54 + *(int *)(v59 + 20), v31);
      *(_QWORD *)((char *)v53 + *(int *)(v59 + 24)) = *(_QWORD *)((char *)v54 + *(int *)(v59 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v53, v54, *(_QWORD *)(v56 + 64));
    }
    v58 = v126;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  v82 = v118[9];
  v83 = (char *)v58 + v82;
  v84 = (char *)v128 + v82;
  sub_1BA6C5A68();
  v86 = v85;
  v87 = *(_QWORD *)(v85 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v84, 1, v85))
  {
    sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v83, v84, v86);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v83, 0, 1, v86);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v120 + 56))(v58, 0, 1, v118);
LABEL_34:
  v89 = v5[15];
  v90 = *(void **)((char *)a1 + v89);
  *(_QWORD *)((char *)a1 + v89) = *(_QWORD *)((char *)a2 + v89);

  *((_BYTE *)a1 + v5[16]) = *((_BYTE *)a2 + v5[16]);
  *(_QWORD *)((char *)a1 + v5[17]) = *(_QWORD *)((char *)a2 + v5[17]);
  swift_bridgeObjectRelease();
  v91 = v5[18];
  v92 = (char *)a1 + v91;
  v93 = (char *)a2 + v91;
  v94 = sub_1BB871E24();
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (!v97)
  {
    if (!v98)
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 40))(v92, v93, v94);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v94);
    goto LABEL_39;
  }
  if (v98)
  {
LABEL_39:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v92, v93, v94);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
LABEL_40:
  sub_1BA822894(0);
  v101 = v100;
  *(_QWORD *)((char *)a1 + *(int *)(v100 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v100 + 28));
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + *(int *)(v101 + 32)) = *(_QWORD *)((char *)a2 + *(int *)(v101 + 32));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatLayoutSectionDescriptor()
{
  sub_1BA822894(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB293824(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_DWORD *)(v3 + 84) == a2)
    return (*(uint64_t (**)(void))(v3 + 48))();
  v5 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v5 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatLayoutSectionDescriptor()
{
  sub_1BA822894(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2938AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v4 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(result, a2, a2);
  *(_QWORD *)(result + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_1BB293900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA8227D0(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes);
}

_QWORD *_s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwCP_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;
  uint64_t v40;
  void (*v41)(uint64_t, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  _OWORD *v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  char *v61;
  char *v62;
  void *v63;
  uint64_t v64;
  void *v65;
  _QWORD *v66;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = type metadata accessor for FeedItemSupplementaryAttributes();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      v15 = (void *)a2[3];
      a1[2] = a2[2];
      a1[3] = v15;
      v16 = (void *)a2[4];
      v17 = (void *)a2[5];
      a1[4] = v16;
      a1[5] = v17;
      v18 = (void *)a2[6];
      v63 = (void *)a2[7];
      a1[6] = v18;
      a1[7] = v63;
      v65 = (void *)a2[8];
      a1[8] = v65;
      v19 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      v66 = (_QWORD *)((char *)a1 + v19);
      v20 = (char *)a2 + v19;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      v21 = v15;
      v22 = v16;
      v23 = v17;
      v24 = v18;
      v25 = v63;
      v26 = v65;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v27 = *((_QWORD *)v20 + 1);
        *v66 = *(_QWORD *)v20;
        v66[1] = v27;
        v28 = *((_QWORD *)v20 + 2);
        swift_bridgeObjectRetain();
        if (v28 >= 0xB)
        {
          v32 = *((_QWORD *)v20 + 3);
          v33 = *((_QWORD *)v20 + 4);
          v66[2] = v28;
          v66[3] = v32;
          v66[4] = v33;
          swift_retain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)v66 + 1) = *((_OWORD *)v20 + 1);
          v66[4] = *((_QWORD *)v20 + 4);
        }
        v34 = *((_QWORD *)v20 + 6);
        v66[5] = *((_QWORD *)v20 + 5);
        v66[6] = v34;
        v66[7] = *((_QWORD *)v20 + 7);
        sub_1BB074B08();
        v36 = *(int *)(v35 + 80);
        v37 = (char *)v66 + v36;
        v38 = &v20[v36];
        *v37 = *v38;
        v64 = (uint64_t)v66 + v36 + 8;
        v39 = *((_OWORD *)v38 + 2);
        *((_OWORD *)v37 + 2) = v39;
        v40 = v39;
        v41 = **(void (***)(uint64_t, char *, uint64_t))(v39 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v41(v64, v38 + 8, v40);
        v42 = *((_QWORD *)v38 + 7);
        *((_QWORD *)v37 + 6) = *((_QWORD *)v38 + 6);
        *((_QWORD *)v37 + 7) = v42;
        v43 = *((_QWORD *)v38 + 9);
        *((_QWORD *)v37 + 8) = *((_QWORD *)v38 + 8);
        *((_QWORD *)v37 + 9) = v43;
        *((_QWORD *)v37 + 10) = *((_QWORD *)v38 + 10);
        v37[88] = v38[88];
        *((_QWORD *)v37 + 12) = *((_QWORD *)v38 + 12);
        v44 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v45 = v44[13];
        v61 = &v38[v45];
        v62 = &v37[v45];
        v46 = sub_1BB86D8A0();
        v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v47(v62, v61, v46);
        *(_QWORD *)&v37[v44[14]] = *(_QWORD *)&v38[v44[14]];
        *(_QWORD *)&v37[v44[15]] = *(_QWORD *)&v38[v44[15]];
        v37[v44[16]] = v38[v44[16]];
        *(_QWORD *)&v37[v44[17]] = *(_QWORD *)&v38[v44[17]];
        *(_QWORD *)&v37[v44[18]] = *(_QWORD *)&v38[v44[18]];
        *(_QWORD *)&v37[v44[19]] = *(_QWORD *)&v38[v44[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v29 = *(_QWORD *)v20;
        v30 = *(id *)v20;
        v31 = *((_QWORD *)v20 + 1);
        *v66 = v29;
        v66[1] = v31;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BB0746EC();
      v49 = *(int *)(v48 + 48);
      v50 = (_OWORD *)((char *)a1 + v49);
      v51 = (_OWORD *)((char *)a2 + v49);
      v52 = v51[13];
      v50[12] = v51[12];
      v50[13] = v52;
      v53 = v51[15];
      v50[14] = v51[14];
      v50[15] = v53;
      v54 = v51[9];
      v50[8] = v51[8];
      v50[9] = v54;
      v55 = v51[11];
      v50[10] = v51[10];
      v50[11] = v55;
      v56 = v51[5];
      v50[4] = v51[4];
      v50[5] = v56;
      v57 = v51[7];
      v50[6] = v51[6];
      v50[7] = v57;
      v58 = v51[1];
      *v50 = *v51;
      v50[1] = v58;
      v59 = v51[3];
      v50[2] = v51[2];
      v50[3] = v59;
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload == 2)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      v10 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v10;
      v11 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v11;
      v12 = a2[13];
      a1[12] = a2[12];
      a1[13] = v12;
      a1[14] = a2[14];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  return a1;
}

uint64_t _s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwxx_0(id *a1)
{
  uint64_t result;
  char *v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  type metadata accessor for FeedItemSupplementaryAttributes();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3)
  {
    swift_bridgeObjectRelease();
    swift_release();

    v3 = (char *)a1 + *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    type metadata accessor for InternalErrorViewModel();
    if (swift_getEnumCaseMultiPayload() != 1)
    {

      return swift_release();
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)v3 + 2) >= 0xBuLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB074B08();
    v5 = &v3[*(int *)(v4 + 80)];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v5 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = &v5[*(int *)(type metadata accessor for GroupLayoutBindingContext() + 52)];
    v7 = sub_1BB86D8A0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if ((_DWORD)result == 2)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

_QWORD *_s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char *v58;
  char *v59;
  void *v60;
  uint64_t v61;
  void *v62;
  _QWORD *v63;

  v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    v12 = (void *)a2[3];
    a1[2] = a2[2];
    a1[3] = v12;
    v13 = (void *)a2[4];
    v14 = (void *)a2[5];
    a1[4] = v13;
    a1[5] = v14;
    v15 = (void *)a2[6];
    v60 = (void *)a2[7];
    a1[6] = v15;
    a1[7] = v60;
    v62 = (void *)a2[8];
    a1[8] = v62;
    v16 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    v63 = (_QWORD *)((char *)a1 + v16);
    v17 = (char *)a2 + v16;
    type metadata accessor for InternalErrorViewModel();
    swift_bridgeObjectRetain();
    swift_retain();
    v18 = v12;
    v19 = v13;
    v20 = v14;
    v21 = v15;
    v22 = v60;
    v23 = v62;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = *((_QWORD *)v17 + 1);
      *v63 = *(_QWORD *)v17;
      v63[1] = v24;
      v25 = *((_QWORD *)v17 + 2);
      swift_bridgeObjectRetain();
      if (v25 >= 0xB)
      {
        v29 = *((_QWORD *)v17 + 3);
        v30 = *((_QWORD *)v17 + 4);
        v63[2] = v25;
        v63[3] = v29;
        v63[4] = v30;
        swift_retain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v63 + 1) = *((_OWORD *)v17 + 1);
        v63[4] = *((_QWORD *)v17 + 4);
      }
      v31 = *((_QWORD *)v17 + 6);
      v63[5] = *((_QWORD *)v17 + 5);
      v63[6] = v31;
      v63[7] = *((_QWORD *)v17 + 7);
      sub_1BB074B08();
      v33 = *(int *)(v32 + 80);
      v34 = (char *)v63 + v33;
      v35 = &v17[v33];
      *v34 = *v35;
      v61 = (uint64_t)v63 + v33 + 8;
      v36 = *((_OWORD *)v35 + 2);
      *((_OWORD *)v34 + 2) = v36;
      v37 = v36;
      v38 = **(void (***)(uint64_t, char *, uint64_t))(v36 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v61, v35 + 8, v37);
      v39 = *((_QWORD *)v35 + 7);
      *((_QWORD *)v34 + 6) = *((_QWORD *)v35 + 6);
      *((_QWORD *)v34 + 7) = v39;
      v40 = *((_QWORD *)v35 + 9);
      *((_QWORD *)v34 + 8) = *((_QWORD *)v35 + 8);
      *((_QWORD *)v34 + 9) = v40;
      *((_QWORD *)v34 + 10) = *((_QWORD *)v35 + 10);
      v34[88] = v35[88];
      *((_QWORD *)v34 + 12) = *((_QWORD *)v35 + 12);
      v41 = (int *)type metadata accessor for GroupLayoutBindingContext();
      v42 = v41[13];
      v58 = &v35[v42];
      v59 = &v34[v42];
      v43 = sub_1BB86D8A0();
      v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44(v59, v58, v43);
      *(_QWORD *)&v34[v41[14]] = *(_QWORD *)&v35[v41[14]];
      *(_QWORD *)&v34[v41[15]] = *(_QWORD *)&v35[v41[15]];
      v34[v41[16]] = v35[v41[16]];
      *(_QWORD *)&v34[v41[17]] = *(_QWORD *)&v35[v41[17]];
      *(_QWORD *)&v34[v41[18]] = *(_QWORD *)&v35[v41[18]];
      *(_QWORD *)&v34[v41[19]] = *(_QWORD *)&v35[v41[19]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v26 = *(_QWORD *)v17;
      v27 = *(id *)v17;
      v28 = *((_QWORD *)v17 + 1);
      *v63 = v26;
      v63[1] = v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    sub_1BB0746EC();
    v46 = *(int *)(v45 + 48);
    v47 = (_OWORD *)((char *)a1 + v46);
    v48 = (_OWORD *)((char *)a2 + v46);
    v49 = v48[13];
    v47[12] = v48[12];
    v47[13] = v49;
    v50 = v48[15];
    v47[14] = v48[14];
    v47[15] = v50;
    v51 = v48[9];
    v47[8] = v48[8];
    v47[9] = v51;
    v52 = v48[11];
    v47[10] = v48[10];
    v47[11] = v52;
    v53 = v48[5];
    v47[4] = v48[4];
    v47[5] = v53;
    v54 = v48[7];
    v47[6] = v48[6];
    v47[7] = v54;
    v55 = v48[1];
    *v47 = *v48;
    v47[1] = v55;
    v56 = v48[3];
    v47[2] = v48[2];
    v47[3] = v56;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v8;
    v9 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v9;
    v10 = a2[13];
    a1[12] = a2[12];
    a1[13] = v10;
    a1[14] = a2[14];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  return a1;
}

_QWORD *_s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  __int128 v6;
  __int128 v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  int *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  __int128 *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char *v51;
  char *v52;
  void *v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
    v4 = type metadata accessor for FeedItemSupplementaryAttributes();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v8 = (void *)a2[3];
      a1[3] = v8;
      v9 = (void *)a2[4];
      a1[4] = v9;
      v10 = (void *)a2[5];
      a1[5] = v10;
      v11 = (void *)a2[6];
      a1[6] = v11;
      v53 = (void *)a2[7];
      a1[7] = v53;
      v55 = (void *)a2[8];
      a1[8] = v55;
      v12 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      v56 = (_QWORD *)((char *)a1 + v12);
      v13 = (char *)a2 + v12;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      v14 = v8;
      v15 = v9;
      v16 = v10;
      v17 = v11;
      v18 = v53;
      v19 = v55;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v56 = *(_QWORD *)v13;
        v56[1] = *((_QWORD *)v13 + 1);
        v20 = *((_QWORD *)v13 + 2);
        swift_bridgeObjectRetain();
        if (v20 >= 0xB)
        {
          v56[2] = v20;
          v56[3] = *((_QWORD *)v13 + 3);
          v56[4] = *((_QWORD *)v13 + 4);
          swift_retain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v21 = *((_OWORD *)v13 + 1);
          v56[4] = *((_QWORD *)v13 + 4);
          *((_OWORD *)v56 + 1) = v21;
        }
        v56[5] = *((_QWORD *)v13 + 5);
        v56[6] = *((_QWORD *)v13 + 6);
        v56[7] = *((_QWORD *)v13 + 7);
        sub_1BB074B08();
        v25 = *(int *)(v24 + 80);
        v26 = (char *)v56 + v25;
        v27 = &v13[v25];
        *v26 = *v27;
        v54 = (uint64_t)v56 + v25 + 8;
        v28 = *((_QWORD *)v27 + 4);
        *((_QWORD *)v26 + 4) = v28;
        *((_QWORD *)v26 + 5) = *((_QWORD *)v27 + 5);
        v29 = **(void (***)(uint64_t, char *, uint64_t))(v28 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29(v54, v27 + 8, v28);
        *((_QWORD *)v26 + 6) = *((_QWORD *)v27 + 6);
        *((_QWORD *)v26 + 7) = *((_QWORD *)v27 + 7);
        *((_QWORD *)v26 + 8) = *((_QWORD *)v27 + 8);
        *((_QWORD *)v26 + 9) = *((_QWORD *)v27 + 9);
        *((_QWORD *)v26 + 10) = *((_QWORD *)v27 + 10);
        v26[88] = v27[88];
        *((_QWORD *)v26 + 12) = *((_QWORD *)v27 + 12);
        v30 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v31 = v30[13];
        v51 = &v27[v31];
        v52 = &v26[v31];
        v32 = sub_1BB86D8A0();
        v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v33(v52, v51, v32);
        *(_QWORD *)&v26[v30[14]] = *(_QWORD *)&v27[v30[14]];
        *(_QWORD *)&v26[v30[15]] = *(_QWORD *)&v27[v30[15]];
        v26[v30[16]] = v27[v30[16]];
        *(_QWORD *)&v26[v30[17]] = *(_QWORD *)&v27[v30[17]];
        *(_QWORD *)&v26[v30[18]] = *(_QWORD *)&v27[v30[18]];
        *(_QWORD *)&v26[v30[19]] = *(_QWORD *)&v27[v30[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v22 = *(_QWORD *)v13;
        v23 = *(id *)v13;
        *v56 = v22;
        v56[1] = *((_QWORD *)v13 + 1);
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BB0746EC();
      v35 = *(int *)(v34 + 48);
      v36 = (_OWORD *)((char *)a1 + v35);
      v37 = (__int128 *)((char *)a2 + v35);
      v38 = v37[12];
      v39 = v37[13];
      v40 = v37[15];
      v36[14] = v37[14];
      v36[15] = v40;
      v36[12] = v38;
      v36[13] = v39;
      v41 = v37[8];
      v42 = v37[9];
      v43 = v37[11];
      v36[10] = v37[10];
      v36[11] = v43;
      v36[8] = v41;
      v36[9] = v42;
      v44 = v37[4];
      v45 = v37[5];
      v46 = v37[7];
      v36[6] = v37[6];
      v36[7] = v46;
      v36[4] = v44;
      v36[5] = v45;
      v47 = *v37;
      v48 = v37[1];
      v49 = v37[3];
      v36[2] = v37[2];
      v36[3] = v49;
      *v36 = v47;
      v36[1] = v48;
      goto LABEL_13;
    }
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      v6 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v6;
      v7 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v7;
      a1[12] = a2[12];
      a1[13] = a2[13];
      a1[14] = a2[14];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *_s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwtk_0(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
    v7 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for InternalErrorViewModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v11;
      v12 = *((_QWORD *)v9 + 5);
      *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
      *((_QWORD *)v8 + 5) = v12;
      *((_OWORD *)v8 + 3) = *((_OWORD *)v9 + 3);
      sub_1BB074B08();
      v14 = *(int *)(v13 + 80);
      v15 = &v8[v14];
      v16 = &v9[v14];
      *v15 = v9[v14];
      *((_QWORD *)v15 + 5) = *(_QWORD *)&v9[v14 + 40];
      *(_OWORD *)(v15 + 24) = *(_OWORD *)&v9[v14 + 24];
      *(_OWORD *)(v15 + 8) = *(_OWORD *)&v9[v14 + 8];
      v17 = *(_OWORD *)&v9[v14 + 64];
      *((_OWORD *)v15 + 3) = *(_OWORD *)&v9[v14 + 48];
      *((_OWORD *)v15 + 4) = v17;
      *((_QWORD *)v15 + 10) = *(_QWORD *)&v9[v14 + 80];
      v15[88] = v9[v14 + 88];
      *((_QWORD *)v15 + 12) = *(_QWORD *)&v9[v14 + 96];
      v18 = (int *)type metadata accessor for GroupLayoutBindingContext();
      v19 = v18[13];
      v20 = &v15[v19];
      v21 = &v16[v19];
      v22 = sub_1BB86D8A0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      *(_QWORD *)&v15[v18[14]] = *(_QWORD *)&v16[v18[14]];
      *(_QWORD *)&v15[v18[15]] = *(_QWORD *)&v16[v18[15]];
      v15[v18[16]] = v16[v18[16]];
      *(_QWORD *)&v15[v18[17]] = *(_QWORD *)&v16[v18[17]];
      *(_QWORD *)&v15[v18[18]] = *(_QWORD *)&v16[v18[18]];
      *(_QWORD *)&v15[v18[19]] = *(_QWORD *)&v16[v18[19]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    sub_1BB0746EC();
    v24 = *(int *)(v23 + 48);
    v25 = (_OWORD *)((char *)a1 + v24);
    v26 = (_OWORD *)((char *)a2 + v24);
    v27 = v26[13];
    v25[12] = v26[12];
    v25[13] = v27;
    v28 = v26[15];
    v25[14] = v26[14];
    v25[15] = v28;
    v29 = v26[9];
    v25[8] = v26[8];
    v25[9] = v29;
    v30 = v26[11];
    v25[10] = v26[10];
    v25[11] = v30;
    v31 = v26[5];
    v25[4] = v26[4];
    v25[5] = v31;
    v32 = v26[7];
    v25[6] = v26[6];
    v25[7] = v32;
    v33 = v26[1];
    *v25 = *v26;
    v25[1] = v33;
    v34 = v26[3];
    v25[2] = v26[2];
    v25[3] = v34;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *_s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwta_0(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
    v4 = type metadata accessor for FeedItemSupplementaryAttributes();
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v7 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for InternalErrorViewModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v11 = *((_OWORD *)v9 + 1);
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_OWORD *)v8 + 1) = v11;
        v12 = *((_QWORD *)v9 + 5);
        *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
        *((_QWORD *)v8 + 5) = v12;
        *((_OWORD *)v8 + 3) = *((_OWORD *)v9 + 3);
        sub_1BB074B08();
        v14 = *(int *)(v13 + 80);
        v15 = &v8[v14];
        v16 = &v9[v14];
        *v15 = v9[v14];
        *((_QWORD *)v15 + 5) = *(_QWORD *)&v9[v14 + 40];
        *(_OWORD *)(v15 + 24) = *(_OWORD *)&v9[v14 + 24];
        *(_OWORD *)(v15 + 8) = *(_OWORD *)&v9[v14 + 8];
        v17 = *(_OWORD *)&v9[v14 + 64];
        *((_OWORD *)v15 + 3) = *(_OWORD *)&v9[v14 + 48];
        *((_OWORD *)v15 + 4) = v17;
        *((_QWORD *)v15 + 10) = *(_QWORD *)&v9[v14 + 80];
        v15[88] = v9[v14 + 88];
        *((_QWORD *)v15 + 12) = *(_QWORD *)&v9[v14 + 96];
        v18 = (int *)type metadata accessor for GroupLayoutBindingContext();
        v19 = v18[13];
        v20 = &v15[v19];
        v21 = &v16[v19];
        v22 = sub_1BB86D8A0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        *(_QWORD *)&v15[v18[14]] = *(_QWORD *)&v16[v18[14]];
        *(_QWORD *)&v15[v18[15]] = *(_QWORD *)&v16[v18[15]];
        v15[v18[16]] = v16[v18[16]];
        *(_QWORD *)&v15[v18[17]] = *(_QWORD *)&v16[v18[17]];
        *(_QWORD *)&v15[v18[18]] = *(_QWORD *)&v16[v18[18]];
        *(_QWORD *)&v15[v18[19]] = *(_QWORD *)&v16[v18[19]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      sub_1BB0746EC();
      v24 = *(int *)(v23 + 48);
      v25 = (_OWORD *)((char *)a1 + v24);
      v26 = (_OWORD *)((char *)a2 + v24);
      v27 = v26[13];
      v25[12] = v26[12];
      v25[13] = v27;
      v28 = v26[15];
      v25[14] = v26[14];
      v25[15] = v28;
      v29 = v26[9];
      v25[8] = v26[8];
      v25[9] = v29;
      v30 = v26[11];
      v25[10] = v26[10];
      v25[11] = v30;
      v31 = v26[5];
      v25[4] = v26[4];
      v25[5] = v31;
      v32 = v26[7];
      v25[6] = v26[6];
      v25[7] = v32;
      v33 = v26[1];
      *v25 = *v26;
      v25[1] = v33;
      v34 = v26[3];
      v25[2] = v26[2];
      v25[3] = v34;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t _s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwet_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s8NewsFeed29FormatLayoutSectionDescriptorO6HeaderOwst_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for FeedItemSupplementaryAttributes();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t *sub_1BB294C68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BB294D3C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB294D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB294E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v7 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB294E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BB294EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB294F74(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BB294FF8 + 4 * byte_1BB9005F0[v10]))();
  }
}

void sub_1BB29507C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BB295178()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BB2951ECLL);
}

void sub_1BB295180(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BB295188);
  JUMPOUT(0x1BB2951ECLL);
}

void sub_1BB2951C8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB2951ECLL);
}

void sub_1BB2951D0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB2951ECLL);
}

uint64_t sub_1BB2951D8(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1BB2951ECLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1BB2951E8);
    JUMPOUT(0x1BB2951E4);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1BB295204()
{
  return sub_1BA6A9724() & 1;
}

uint64_t FormatFontLineSizing.style.getter()
{
  return swift_retain();
}

uint64_t FormatFontLineSizing.numberOfLines.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB295230(char *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[8];

  v4 = *v1;
  v5 = v1[1];
  v6 = (uint64_t *)(*(_QWORD *)&a1[OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory]
                 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  v8 = *v6;
  v7 = v6[1];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1BA748BCC(v4, (uint64_t)a1, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v2)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    v11 = sub_1BA728610(v27, v5);
    swift_bridgeObjectRelease();
    result = swift_release();
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v12 = MEMORY[0x1E0DEE9D8];
      if (v11)
      {
        v26 = v9;
        v28 = MEMORY[0x1E0DEE9D8];
        sub_1BA7447E8(0, v11, 0);
        v12 = v28;
        v13 = *(_QWORD *)(v28 + 16);
        v14 = 16 * v13;
        do
        {
          v15 = *(_QWORD *)(v28 + 24);
          v16 = v13 + 1;
          if (v13 >= v15 >> 1)
            sub_1BA7447E8(v15 > 1, v13 + 1, 1);
          *(_QWORD *)(v28 + 16) = v16;
          v17 = v28 + v14;
          *(_QWORD *)(v17 + 32) = 87;
          *(_QWORD *)(v17 + 40) = 0xE100000000000000;
          v14 += 16;
          v13 = v16;
          --v11;
        }
        while (v11);
      }
      sub_1BA6D249C();
      sub_1BA6A0BA4();
      v18 = sub_1BB872904();
      v20 = v19;
      swift_bridgeObjectRelease();
      if (v9)
      {
        swift_retain_n();
        swift_retain();
        v21 = sub_1BA742048(v9, a1);
        sub_1BA743168(v21, v9, (uint64_t)a1, 18, v29);
        type metadata accessor for FormatAttributedString();
        swift_allocObject();
        swift_bridgeObjectRetain();
        sub_1BA741FD8((uint64_t)v29);
        sub_1BA741BFC(v18, v20, (uint64_t)v29);
        sub_1BA741B54((uint64_t)v29);
        sub_1BA714CBC((uint64_t)a1);
        v25 = v24;
        swift_release();
        sub_1BA741B54((uint64_t)v29);
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        v22 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
        v23 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v25 = objc_msgSend(v22, sel_initWithString_, v23);

      }
      objc_msgSend(v25, sel_boundingRectWithSize_options_context_, 33, 0, 1.79769313e308, 1.79769313e308, v26, v12);

      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BB2955F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFontLineSizing.init(from:)(a1, a2);
}

uint64_t sub_1BB295608(_QWORD *a1)
{
  return FormatFontLineSizing.encode(to:)(a1);
}

uint64_t _s8NewsFeed20FormatFontLineSizingV2eeoiySbAC_ACtFZ_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v2 = a1[1];
  v4 = *a2;
  v3 = a2[1];
  if (*a1)
  {
    if (v4)
    {
      swift_retain();
      v5 = swift_retain();
      v6 = _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(v5, v4);
      swift_release();
      swift_release();
      if ((v6 & 1) != 0)
        goto LABEL_4;
    }
  }
  else if (!v4)
  {
LABEL_4:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1BA882E70(v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7 & 1;
  }
  return 0;
}

unint64_t sub_1BB2956C8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2956EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2956EC()
{
  unint64_t result;

  result = qword_1EF2C0038;
  if (!qword_1EF2C0038)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontLineSizing, &type metadata for FormatFontLineSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2C0038);
  }
  return result;
}

unint64_t sub_1BB295730(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEB8354();
  a1[2] = sub_1BAEEC418();
  result = sub_1BB295764();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB295764()
{
  unint64_t result;

  result = qword_1EF2C0040;
  if (!qword_1EF2C0040)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontLineSizing, &type metadata for FormatFontLineSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2C0040);
  }
  return result;
}

uint64_t destroy for FormatFontLineSizing()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8NewsFeed20FormatFontLineSizingVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatFontLineSizing(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FormatFontLineSizing(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatFontLineSizing()
{
  return &type metadata for FormatFontLineSizing;
}

uint64_t FeedSuggestionClusteringResult.clusters.getter()
{
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for FeedSuggestionClusteringResult()
{
  return &type metadata for FeedSuggestionClusteringResult;
}

uint64_t WebEmbedDataVisualizationURLDataSource.contentType.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA993F8C(v2, v3);
}

uint64_t WebEmbedDataVisualizationURLDataSource.key.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WebEmbedDataVisualizationURLDataSource.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WebEmbedDataVisualizationURLDataSource.__allocating_init(contentType:key:url:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *a1;
  *(_QWORD *)(v8 + 32) = a2;
  *(_QWORD *)(v8 + 40) = a3;
  v9 = v8 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
  v10 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a4, v10);
  return v8;
}

uint64_t WebEmbedDataVisualizationURLDataSource.init(contentType:key:url:)(_OWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)(v4 + 16) = *a1;
  *(_QWORD *)(v4 + 32) = a2;
  *(_QWORD *)(v4 + 40) = a3;
  v6 = v4 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
  v7 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a4, v7);
  return v4;
}

uint64_t sub_1BB295A2C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7955819;
  if (*v0 != 1)
    v1 = 7107189;
  if (*v0)
    return v1;
  else
    return 0x54746E65746E6F63;
}

uint64_t sub_1BB295A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB296668(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB295AA4()
{
  sub_1BB295D38();
  return sub_1BB874710();
}

uint64_t sub_1BB295ACC()
{
  sub_1BB295D38();
  return sub_1BB87471C();
}

uint64_t WebEmbedDataVisualizationURLDataSource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BAB05BB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
  v2 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t WebEmbedDataVisualizationURLDataSource.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BAB05BB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url;
  v2 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t WebEmbedDataVisualizationURLDataSource.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  __int128 v12;

  v3 = v1;
  sub_1BB29608C(0, &qword_1ED3AB798, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB295D38();
  sub_1BB8746C8();
  v12 = *(_OWORD *)(v3 + 16);
  v11[15] = 0;
  sub_1BB295D7C();
  sub_1BB87414C();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1BB87417C();
    LOBYTE(v12) = 2;
    sub_1BB86C67C();
    sub_1BA6BEF7C((unint64_t *)&unk_1ED3B04B0, MEMORY[0x1E0CB0010]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB295D38()
{
  unint64_t result;

  result = qword_1ED3AA650;
  if (!qword_1ED3AA650)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9009CC, &type metadata for WebEmbedDataVisualizationURLDataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA650);
  }
  return result;
}

unint64_t sub_1BB295D7C()
{
  unint64_t result;

  result = qword_1ED3AAB10;
  if (!qword_1ED3AAB10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSourceContentType, &type metadata for WebEmbedDataVisualizationURLDataSourceContentType);
    atomic_store(result, (unint64_t *)&qword_1ED3AAB10);
  }
  return result;
}

uint64_t WebEmbedDataVisualizationURLDataSource.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  WebEmbedDataVisualizationURLDataSource.init(from:)(a1);
  return v2;
}

uint64_t *WebEmbedDataVisualizationURLDataSource.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  char v22;

  v20 = *v1;
  v16 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB29608C(0, &qword_1ED3AB580, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v17 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB295D38();
  v18 = v9;
  v10 = v19;
  sub_1BB87468C();
  if (v10)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v19 = v5;
    v11 = v16;
    v22 = 0;
    sub_1BB2960E8();
    v12 = v17;
    sub_1BB874068();
    *((_OWORD *)v1 + 1) = v21;
    LOBYTE(v21) = 1;
    v1[4] = sub_1BB874098();
    v1[5] = v13;
    LOBYTE(v21) = 2;
    sub_1BA6BEF7C((unint64_t *)&unk_1ED3B04E0, MEMORY[0x1E0CB0038]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v12);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))((uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v19, v11);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1BB29608C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB295D38();
    v7 = a3(a1, &type metadata for WebEmbedDataVisualizationURLDataSource.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB2960E8()
{
  unint64_t result;

  result = qword_1ED3AAB20;
  if (!qword_1ED3AAB20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for WebEmbedDataVisualizationURLDataSourceContentType, &type metadata for WebEmbedDataVisualizationURLDataSourceContentType);
    atomic_store(result, (unint64_t *)&qword_1ED3AAB20);
  }
  return result;
}

uint64_t *sub_1BB29612C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t *result;

  v5 = swift_allocObject();
  result = WebEmbedDataVisualizationURLDataSource.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB296180(_QWORD *a1)
{
  return WebEmbedDataVisualizationURLDataSource.encode(to:)(a1);
}

uint64_t sub_1BB2961A0()
{
  return type metadata accessor for WebEmbedDataVisualizationURLDataSource();
}

uint64_t type metadata accessor for WebEmbedDataVisualizationURLDataSource()
{
  uint64_t result;

  result = qword_1ED3AA688;
  if (!qword_1ED3AA688)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB2961E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for WebEmbedDataVisualizationURLDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WebEmbedDataVisualizationURLDataSource.__allocating_init(contentType:key:url:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of WebEmbedDataVisualizationURLDataSource.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for WebEmbedDataVisualizationURLDataSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB2962DC + 4 * byte_1BB900825[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB296310 + 4 * asc_1BB900820[v4]))();
}

uint64_t sub_1BB296310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB296318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB296320);
  return result;
}

uint64_t sub_1BB29632C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB296334);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB296338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB296340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WebEmbedDataVisualizationURLDataSource.CodingKeys()
{
  return &type metadata for WebEmbedDataVisualizationURLDataSource.CodingKeys;
}

unint64_t sub_1BB296360()
{
  unint64_t result;

  result = qword_1EF2C0048;
  if (!qword_1EF2C0048)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9009A4, &type metadata for WebEmbedDataVisualizationURLDataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0048);
  }
  return result;
}

unint64_t sub_1BB2963A8()
{
  unint64_t result;

  result = qword_1ED3AA660;
  if (!qword_1ED3AA660)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB900914, &type metadata for WebEmbedDataVisualizationURLDataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA660);
  }
  return result;
}

unint64_t sub_1BB2963F0()
{
  unint64_t result;

  result = qword_1ED3AA658;
  if (!qword_1ED3AA658)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90093C, &type metadata for WebEmbedDataVisualizationURLDataSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA658);
  }
  return result;
}

uint64_t sub_1BB296434(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char *v20;
  uint64_t v22;
  char *v23;
  __int128 v24;
  __int128 v25;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v23 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - v11;
  *(_QWORD *)&v25 = sub_1BB86C538();
  *((_QWORD *)&v25 + 1) = v13;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v14);
  swift_bridgeObjectRelease();
  sub_1BB86C634();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
    v25 = *a1;
    sub_1BA73D624((uint64_t)&v25);
    v24 = a1[1];
    sub_1BA73D624((uint64_t)&v24);
    swift_bridgeObjectRelease();
    sub_1BA7F0A80((uint64_t)v6);
    return 0;
  }
  else
  {
    v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v16(v12, v6, v7);
    v18 = *(_QWORD *)a1;
    v17 = *((_QWORD *)a1 + 1);
    swift_bridgeObjectRetain();
    WebEmbedDataVisualizationURLDataSourceContentType.init(rawValue:)(v18, v17, &v24);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
    v19 = v24;
    v25 = a1[1];
    v20 = v23;
    v16(v23, v12, v7);
    type metadata accessor for WebEmbedDataVisualizationURLDataSource();
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v19;
    *(_OWORD *)(v15 + 32) = v25;
    v16((char *)(v15 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url), v20, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v15;
}

uint64_t sub_1BB296668(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7955819 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t PuzzleEmbedSubmitScoreHandler.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v1);
}

uint64_t PuzzleEmbedSubmitScoreHandler.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*PuzzleEmbedSubmitScoreHandler.delegate.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BA8FC358;
}

id PuzzleEmbedSubmitScoreHandler.__allocating_init(scriptsManager:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_scriptsManager] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id PuzzleEmbedSubmitScoreHandler.init(scriptsManager:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_scriptsManager] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id PuzzleEmbedSubmitScoreHandler.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PuzzleEmbedSubmitScoreHandler.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id PuzzleEmbedSubmitScoreHandler.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB296AA0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v1);
}

uint64_t sub_1BB296AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1BB296B54(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BA8FC358;
}

void _s8NewsFeed29PuzzleEmbedSubmitScoreHandlerC10didReceive_14securityOriginySo9SWMessage_p_So0l8SecurityK0_ptF_0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjectType;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[4];
  uint64_t v33;

  v2 = v1;
  v4 = objc_msgSend(a1, sel_body);
  v5 = sub_1BB87276C();

  v6 = sub_1BB7E7464(v5);
  swift_bridgeObjectRelease();
  if (v6)
  {
    if (*(_QWORD *)(v6 + 16))
    {
      v7 = sub_1BA6E35A8(0x65726F6373, 0xE500000000000000);
      if ((v8 & 1) != 0)
      {
        sub_1BA747A10(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)v32);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v9 = v33;
          if (qword_1ED3C0B50 != -1)
            swift_once();
          v10 = sub_1BB86EFEC();
          __swift_project_value_buffer(v10, (uint64_t)qword_1ED476918);
          swift_bridgeObjectRetain();
          v11 = sub_1BB86EFC8();
          v12 = sub_1BB87330C();
          if (os_log_type_enabled(v11, v12))
          {
            v30 = v9;
            v13 = (uint8_t *)swift_slowAlloc();
            v14 = swift_slowAlloc();
            v32[0] = v14;
            *(_DWORD *)v13 = 136315138;
            swift_bridgeObjectRetain();
            v15 = sub_1BB872778();
            v17 = v16;
            swift_bridgeObjectRelease();
            v33 = sub_1BA5D2E14(v15, v17, v32);
            sub_1BB873A8C();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BA493000, v11, v12, "PuzzleEmbedSubmitScoreHandler received: %s", v13, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1BCCE5C38](v14, -1, -1);
            v18 = v13;
            v9 = v30;
            MEMORY[0x1BCCE5C38](v18, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          v27 = v2 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
          swift_beginAccess();
          if (MEMORY[0x1BCCE5D40](v27))
          {
            v28 = *(_QWORD *)(v27 + 8);
            ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v28 + 8))(v2, &protocol witness table for PuzzleEmbedSubmitScoreHandler, v9, ObjectType, v28);
            swift_unknownObjectRelease();
          }
          return;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v19 = sub_1BB86EFEC();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED476918);
  swift_unknownObjectRetain_n();
  v20 = sub_1BB86EFC8();
  v21 = sub_1BB8732F4();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v32[0] = v31;
    *(_DWORD *)v22 = 136315138;
    v23 = objc_msgSend(a1, sel_body);
    sub_1BB87276C();

    v24 = sub_1BB872778();
    v26 = v25;
    swift_bridgeObjectRelease();
    v33 = sub_1BA5D2E14(v24, v26, v32);
    sub_1BB873A8C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BA493000, v20, v21, "PuzzleEmbedSubmitScoreHandler received invalid message %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v31, -1, -1);
    MEMORY[0x1BCCE5C38](v22, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_1BB2970F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1BB297148(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC8NewsFeed29PuzzleEmbedSubmitScoreHandler_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of PuzzleEmbedSubmitScoreMessageHandlerType.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedSubmitScoreMessageHandlerType.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedSubmitScoreMessageHandlerType.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PuzzleEmbedSubmitScoreMessageHandlerDelegate.puzzleEmbedSubmitScoreMessageHandler(_:didSubmitScore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for PuzzleEmbedSubmitScoreHandler()
{
  return objc_opt_self();
}

uint64_t method lookup function for PuzzleEmbedSubmitScoreHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PuzzleEmbedSubmitScoreHandler.__allocating_init(scriptsManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1BB2971FC(char *a1)
{
  sub_1BB7FE12C(*a1);
}

void sub_1BB297208()
{
  char *v0;

  sub_1BA8D3CB0(*v0);
}

void sub_1BB297210()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB297250()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB2972CC(uint64_t a1)
{
  char *v1;

  sub_1BAB0A730(a1, *v1);
}

uint64_t sub_1BB2972D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB297308 + 4 * byte_1BB900AD5[*v0]))();
}

void sub_1BB297308(_QWORD *a1@<X8>)
{
  *a1 = 0x646961507369;
  a1[1] = 0xE600000000000000;
}

void sub_1BB297320(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "isBundlePaid");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1BB297344(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001BB95C770;
}

void sub_1BB297364(_QWORD *a1@<X8>)
{
  *a1 = 0x74666172447369;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1BB297380()
{
  sub_1BA49BF14();
  return sub_1BB872D0C();
}

void sub_1BB2973CC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72514D0;
}

BOOL static FormatIssueBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatIssueBinding.Bool.hash(into:)()
{
  return sub_1BB8745D8();
}

void *static FormatIssueBinding.Bool.allCases.getter()
{
  return &unk_1E7270CA0;
}

uint64_t FormatIssueBinding.Bool.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB29746C()
{
  unint64_t result;

  result = qword_1EF2C00E8;
  if (!qword_1EF2C00E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Bool, &type metadata for FormatIssueBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2C00E8);
  }
  return result;
}

unint64_t sub_1BB2974B0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2974D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2974D4()
{
  unint64_t result;

  result = qword_1EF2C00F0;
  if (!qword_1EF2C00F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Bool, &type metadata for FormatIssueBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2C00F0);
  }
  return result;
}

uint64_t sub_1BB297518()
{
  return sub_1BA9BD27C(&qword_1EF2C00F8, &qword_1EF2C0100);
}

void sub_1BB297544(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72514F8;
}

unint64_t sub_1BB297554(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5D8B60();
  a1[2] = sub_1BAEF2DD4();
  result = sub_1BB29746C();
  a1[3] = result;
  return result;
}

void sub_1BB297588(_QWORD *a1)
{
  FormatIssueBinding.Bool.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Bool()
{
  return &type metadata for FormatIssueBinding.Bool;
}

ValueMetadata *_s4BoolO10CodingTypeOMa_3()
{
  return &_s4BoolO10CodingTypeON_3;
}

uint64_t sub_1BB2975BC()
{
  return sub_1BA9BD27C(&qword_1EF2C0108, &qword_1EF2C0110);
}

unint64_t sub_1BB2975EC()
{
  unint64_t result;

  result = qword_1EF2C0118;
  if (!qword_1EF2C0118)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB900D28, &_s4BoolO10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1EF2C0118);
  }
  return result;
}

void sub_1BB297630(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB297668(uint64_t a1, id *a2)
{
  _QWORD *v2;
  unsigned __int8 v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  char *v7;

  v3 = objc_msgSend(*a2, sel_isCurrent);
  v4 = type metadata accessor for FormatInspectionItem(0);
  v5 = (unsigned __int8 *)v2 + *(int *)(v4 + 24);
  *v5 = v3;
  v6 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  *v2 = 0x6572727543207349;
  v2[1] = 0xEA0000000000746ELL;
  v2[2] = 0;
  v2[3] = 0;
  v7 = (char *)v2 + *(int *)(v4 + 28);
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = -1;
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 0, 1, v4);
}

uint64_t static CoverIssueViewLayout.makeCatalogLayout(context:factories:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  v4 = sub_1BB86DA38();
  v5 = MEMORY[0x1E0C80A78](v4);
  v10 = a1;
  v11 = a2;
  (*(void (**)(_BYTE *, _QWORD, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E0DB6208], v5);
  sub_1BAA46860(0, (unint64_t *)&qword_1ED39C2F0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  return sub_1BB86DB34();
}

uint64_t sub_1BB2979FC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void);
  _BYTE v17[16];
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = &v17[-v9];
  v11 = a2[40];
  v12 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
  v13 = a2[40];
  v14 = a2[41];
  __swift_project_boxed_opaque_existential_1(a2 + 37, v13);
  (*(void (**)(uint64_t, uint64_t))(v14 + 56))(v13, v14);
  v20 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB6410], v7);
  v18 = a2;
  v19 = a3;
  v15 = MEMORY[0x1E0DB5DD0];
  sub_1BAA46860(0, &qword_1ED39C2B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAA468DC(&qword_1ED39C2B0, &qword_1ED39C2B8, (uint64_t (*)(uint64_t, _QWORD *))v15, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BB297B94(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2979FC(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB297B9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD);
  uint64_t (*v12)(uint64_t, _QWORD *);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t *, _QWORD, uint64_t);
  void (*v33)(uint64_t *, uint64_t);
  _QWORD *v34;
  uint64_t v35;
  void (*v36)(uint64_t *, uint64_t);
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  void (*v44)(uint64_t *, _QWORD, uint64_t);
  _QWORD *v45;
  uint64_t v46;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  void (*v53)(uint64_t *, uint64_t);
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  void (*v57)(_QWORD);
  unsigned int v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;

  v56 = a3;
  v59 = a2;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v48 - v7);
  v63 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 0x4024000000000000;
  *v8 = v9;
  v11 = *(void (**)(_QWORD))(v6 + 104);
  v58 = *MEMORY[0x1E0DB63F0];
  v10 = v58;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v11)(v8, v58, v5);
  v57 = v11;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v14 = v13;
  v15 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v12, MEMORY[0x1E0DB5A18]);
  v54 = v14;
  v50 = v15;
  sub_1BB86D4EC();
  v16 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v16(v8, v5);
  v53 = v16;
  sub_1BB29A360((uint64_t)v59, v56, a1);
  v63 = a1;
  v52 = a1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0x4030000000000000;
  *v8 = v17;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v11)(v8, v10, v5);
  sub_1BB86D4EC();
  v18 = v5;
  v16(v8, v5);
  v63 = a1;
  sub_1BA71C838();
  v20 = v19;
  v56 = v19;
  v51 = swift_allocBox();
  v22 = v21;
  v23 = (uint64_t *)(v21 + *(int *)(v20 + 48));
  v55 = *MEMORY[0x1E0DB5F98];
  v24 = v55;
  v25 = sub_1BB86D894();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104);
  v48 = v25;
  v26(v22, v24, v25);
  v49 = v26;
  v27 = swift_allocObject();
  v28 = v59;
  v29 = v59[40];
  v30 = v59[41];
  __swift_project_boxed_opaque_existential_1(v59 + 37, v29);
  *(double *)(v27 + 16) = (*(double (**)(uint64_t, uint64_t))(v30 + 24))(v29, v30);
  *v23 = v27;
  v26((uint64_t)v23, *MEMORY[0x1E0DB5FA0], v25);
  *v8 = v51;
  LODWORD(v51) = *MEMORY[0x1E0DB63D0];
  v31 = v18;
  v32 = (void (*)(uint64_t *, _QWORD, uint64_t))v57;
  v57(v8);
  v62 = v28;
  sub_1BB86D498();
  v33 = v53;
  v53(v8, v31);
  v34 = v52;
  v63 = v52;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = 0x401C000000000000;
  *v8 = v35;
  v32(v8, v58, v31);
  sub_1BB86D4EC();
  v33(v8, v31);
  v36 = v33;
  v63 = v34;
  v37 = v34;
  v38 = v56;
  v39 = swift_allocBox();
  v41 = v40 + *(int *)(v38 + 48);
  v42 = v48;
  v43 = v49;
  v49(v40, v55, v48);
  v43(v41, *MEMORY[0x1E0DB5FB8], v42);
  *v8 = v39;
  v44 = (void (*)(uint64_t *, _QWORD, uint64_t))v57;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v57)(v8, v51, v31);
  v45 = v59;
  v61 = v59;
  sub_1BB86D498();
  v36(v8, v31);
  v63 = v37;
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = 0x4038000000000000;
  *v8 = v46;
  v44(v8, v58, v31);
  sub_1BB86D4EC();
  v36(v8, v31);
  v63 = v37;
  v60 = v45;
  v44(v8, *MEMORY[0x1E0DB63C0], v31);
  sub_1BB86D540();
  return ((uint64_t (*)(uint64_t *, uint64_t))v36)(v8, v31);
}

uint64_t sub_1BB2980D4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BB297B9C(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB2980DC()
{
  return swift_deallocObject();
}

uint64_t sub_1BB2980EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, _QWORD *);
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v28 - v7);
  v9 = sub_1BB8726B8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = a1;
  swift_getKeyPath();
  v13 = *(_QWORD *)(a2 + 336);
  if ((*(_BYTE *)(v13 + qword_1ED3B2F88) & 1) != 0
    || (sub_1BA657D64(),
        *v12 = sub_1BB87345C(),
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF738], v9),
        v14 = sub_1BB8726D0(),
        result = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9),
        (v14 & 1) != 0))
  {
    v16 = swift_allocObject();
    v17 = *(void **)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 136));
    *(_QWORD *)(v16 + 16) = v17;
    *v8 = v16;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB6398], v5);
    sub_1BAA46934();
    sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v29 = v6;
    v30 = v5;
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1BB87CE70;
    v23 = v22 + v21;
    v24 = *MEMORY[0x1E0DB5C48];
    sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v23, v24, v25);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v20 + 104))(v23, *MEMORY[0x1E0DB5C68], v19);
    v26 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
    sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v26, MEMORY[0x1E0DB5A18]);
    sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
    v27 = v17;
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v29 + 8))(v8, v30);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB298414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  void (*v27)(uint64_t, _QWORD, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  uint64_t (*v30)(uint64_t, _QWORD *);
  uint64_t *v31;
  uint64_t v32;
  void (*v33)(uint64_t *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, _QWORD, uint64_t);
  id v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t KeyPath;
  void (*v52)(uint64_t *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v53 = a1;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  v50 = v6;
  v7 = v6;
  MEMORY[0x1E0C80A78](v4);
  v9 = (uint64_t *)((char *)&v40 - v8);
  v10 = (void *)sub_1BAA466F8(a2);
  v44 = v10;
  v55 = a1;
  KeyPath = swift_getKeyPath();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  v46 = v9;
  *v9 = v11;
  v12 = *MEMORY[0x1E0DB6340];
  v52 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 104);
  v52(v9, v12, v5);
  sub_1BAA46934();
  v48 = v13;
  sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v54 = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v17 = *(unsigned __int8 *)(v15 + 80);
  v41 = *(_QWORD *)(v15 + 72);
  v16 = v41;
  v18 = (v17 + 32) & ~v17;
  v45 = v18;
  v47 = v17 | 7;
  v19 = swift_allocObject();
  v42 = v19;
  *(_OWORD *)(v19 + 16) = xmmword_1BB87A390;
  v20 = v19 + v18;
  *(_QWORD *)(v19 + v18) = 0x4034000000000000;
  v21 = *MEMORY[0x1E0DB6030];
  v22 = sub_1BB86D8F4();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104);
  v23(v20, v21, v22);
  v24 = *MEMORY[0x1E0DB6120];
  v25 = sub_1BB86D9B4();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104);
  v26(v20, v24, v25);
  v27 = *(void (**)(uint64_t, _QWORD, uint64_t))(v15 + 104);
  v28 = v54;
  v27(v20, *MEMORY[0x1E0DB5B98], v54);
  v43 = v27;
  v29 = (_QWORD *)(v20 + v16);
  *v29 = 0x4008000000000000;
  v23((uint64_t)v29, v21, v22);
  v26((uint64_t)v29, v24, v25);
  v27((uint64_t)v29, *MEMORY[0x1E0DB5BA8], v28);
  v30 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v30, MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  v44 = v44;
  v31 = v46;
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  v32 = v49;
  v33 = *(void (**)(uint64_t *, uint64_t))(v50 + 8);
  v33(v31, v49);
  v55 = v53;
  swift_getKeyPath();
  v52(v31, *MEMORY[0x1E0DB63D8], v32);
  v34 = v45;
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
  v36 = v35 + v34;
  v37 = *MEMORY[0x1E0DB5C58];
  sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
  v43(v36, *MEMORY[0x1E0DB5C68], v54);
  sub_1BB86D4E0();

  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v33)(v31, v32);
}

uint64_t sub_1BB298860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *);
  uint64_t v26;
  void (*v27)(uint64_t *);
  uint64_t v28;
  void (*v29)(_QWORD);
  uint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, _QWORD *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(void);
  uint64_t *v70;
  _QWORD v72[3];
  unsigned int v73;
  void (*v74)(void);
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t *, _QWORD, uint64_t);
  unsigned int v84;
  void (*v85)(uint64_t *, uint64_t, uint64_t);
  uint64_t v86;
  unsigned int v87;
  void (*KeyPath)(uint64_t *, uint64_t);
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93[9];

  v89 = a1;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v78 = *(_QWORD *)(v4 - 8);
  v6 = v78;
  MEMORY[0x1E0C80A78](v4);
  v91 = (_QWORD *)((char *)v72 - v7);
  v92 = a1;
  KeyPath = (void (*)(uint64_t *, uint64_t))swift_getKeyPath();
  sub_1BB29A988();
  v9 = v8;
  v82 = swift_allocBox();
  v11 = v10;
  v12 = (uint64_t *)((char *)v10 + *(int *)(v9 + 48));
  v13 = (char *)v10 + *(int *)(v9 + 64);
  v14 = swift_allocObject();
  sub_1BA744E38(a2 + 152, (uint64_t)v93, (unint64_t *)&qword_1ED3C23B0);
  *(_BYTE *)(v14 + 16) = sub_1BA84DAF0(v93) != 0;
  *v11 = v14;
  v15 = *MEMORY[0x1E0DB5B30];
  sub_1BA4CDF6C(0, &qword_1EF2C0128, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5B40]);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v11, v15, v16);
  sub_1BA71C838();
  v18 = v17;
  v19 = swift_allocBox();
  v21 = v20;
  v22 = (uint64_t *)(v20 + *(int *)(v18 + 48));
  v23 = *MEMORY[0x1E0DB5F98];
  v24 = sub_1BB86D894();
  v25 = *(void (**)(uint64_t *))(*(_QWORD *)(v24 - 8) + 104);
  v26 = v23;
  v86 = v24;
  v27 = v25;
  v85 = (void (*)(uint64_t *, uint64_t, uint64_t))v25;
  ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v21, v26, v24);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0x4000000000000000;
  *v22 = v28;
  v84 = *MEMORY[0x1E0DB5FA0];
  v27(v22);
  *v12 = v19;
  v87 = *MEMORY[0x1E0DB63D0];
  v29 = *(void (**)(_QWORD))(v6 + 104);
  v83 = (void (*)(uint64_t *, _QWORD, uint64_t))v29;
  v90 = v5;
  v29(v12);
  ((void (*)(char *, _QWORD, uint64_t))v29)(v13, *MEMORY[0x1E0DB63D8], v5);
  v30 = v91;
  *v91 = v82;
  v31 = v30;
  ((void (*)(void))v29)();
  sub_1BAA46934();
  v82 = v32;
  sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v34 = *(_QWORD *)(v33 - 8);
  v75 = v33;
  v80 = *(_QWORD *)(v34 + 72);
  v35 = *(unsigned __int8 *)(v34 + 80);
  v36 = (v35 + 32) & ~v35;
  v79 = v36;
  v81 = v35 | 7;
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1BB87CE70;
  v38 = v37 + v36;
  v77 = *MEMORY[0x1E0DB5C30];
  v39 = v77;
  sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
  v76 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 104);
  v41 = v40;
  v76(v38, v39);
  v73 = *MEMORY[0x1E0DB5C68];
  v74 = *(void (**)(void))(v34 + 104);
  ((void (*)(uint64_t))v74)(v38);
  v42 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v72[2] = v43;
  v72[1] = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v42, MEMORY[0x1E0DB5A18]);
  v72[0] = sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = *(void (**)(uint64_t *, uint64_t))(v78 + 8);
  v44 = v90;
  KeyPath(v31, v90);
  v92 = v89;
  v89 = swift_getKeyPath();
  v45 = swift_allocBox();
  v47 = v46;
  v48 = (uint64_t *)((char *)v46 + *(int *)(v18 + 48));
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = 0x403C000000000000;
  *v47 = v49;
  v50 = v47;
  v51 = v84;
  v52 = v86;
  v53 = v85;
  v85(v50, v84, v86);
  v54 = swift_allocObject();
  *(_QWORD *)(v54 + 16) = 0x403C000000000000;
  *v48 = v54;
  v53(v48, v51, v52);
  *v31 = v45;
  v83(v31, v87, v44);
  v55 = 2 * v80;
  v56 = v80;
  v57 = v79;
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_1BB87FC80;
  v59 = v58 + v57;
  v60 = v41;
  v61 = v76;
  ((void (*)(uint64_t, _QWORD, uint64_t))v76)(v58 + v57, v77, v41);
  v62 = v73;
  v63 = v75;
  v64 = v74;
  ((void (*)(uint64_t, _QWORD, uint64_t))v74)(v59, v73, v75);
  ((void (*)(uint64_t, _QWORD, uint64_t))v61)(v59 + v56, *MEMORY[0x1E0DB5C58], v60);
  ((void (*)(uint64_t, uint64_t, uint64_t))v64)(v59 + v56, v62, v63);
  __asm { FMOV            V0.2D, #-10.0 }
  *(_OWORD *)(v59 + v55) = _Q0;
  v64();
  v70 = v91;
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))KeyPath)(v70, v90);
}

uint64_t sub_1BB298F14(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, double a5)
{
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t (*v13)(uint64_t, _QWORD *);
  _BYTE __src[392];
  uint64_t v16;

  v16 = a1;
  sub_1BA915B28(a4, (uint64_t)__src);
  v8 = swift_allocObject();
  *(double *)(v8 + 16) = a5;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = a3[7];
  *(_OWORD *)(v8 + 128) = a3[6];
  *(_OWORD *)(v8 + 144) = v9;
  *(_OWORD *)(v8 + 153) = *(_OWORD *)((char *)a3 + 121);
  v10 = a3[3];
  *(_OWORD *)(v8 + 64) = a3[2];
  *(_OWORD *)(v8 + 80) = v10;
  v11 = a3[5];
  *(_OWORD *)(v8 + 96) = a3[4];
  *(_OWORD *)(v8 + 112) = v11;
  v12 = a3[1];
  *(_OWORD *)(v8 + 32) = *a3;
  *(_OWORD *)(v8 + 48) = v12;
  memcpy((void *)(v8 + 176), __src, 0x188uLL);
  swift_retain();
  sub_1BA8D1F08((uint64_t)a3);
  v13 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v13, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4F8();
  return swift_release();
}

uint64_t sub_1BB299040(double a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5)
{
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _BYTE __src[392];

  sub_1BA915B28(a5, (uint64_t)__src);
  v9 = swift_allocObject();
  *(double *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a3;
  v10 = a4[7];
  *(_OWORD *)(v9 + 128) = a4[6];
  *(_OWORD *)(v9 + 144) = v10;
  *(_OWORD *)(v9 + 153) = *(_OWORD *)((char *)a4 + 121);
  v11 = a4[3];
  *(_OWORD *)(v9 + 64) = a4[2];
  *(_OWORD *)(v9 + 80) = v11;
  v12 = a4[5];
  *(_OWORD *)(v9 + 96) = a4[4];
  *(_OWORD *)(v9 + 112) = v12;
  v13 = a4[1];
  *(_OWORD *)(v9 + 32) = *a4;
  *(_OWORD *)(v9 + 48) = v13;
  memcpy((void *)(v9 + 176), __src, 0x188uLL);
  swift_retain();
  sub_1BA8D1F08((uint64_t)a4);
  sub_1BB86D69C();
  swift_release();
  sub_1BA915B28(a5, (uint64_t)__src);
  v14 = swift_allocObject();
  *(double *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a3;
  memcpy((void *)(v14 + 32), __src, 0x188uLL);
  swift_retain();
  sub_1BB86D69C();
  return swift_release();
}

uint64_t sub_1BB299194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(void);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a4;
  v33 = a2;
  v34 = a3;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v31 - v10);
  v40 = a1;
  sub_1BA71C838();
  v13 = v12;
  v14 = swift_allocBox();
  v16 = v15;
  v17 = v15 + *(int *)(v13 + 48);
  v18 = *MEMORY[0x1E0DB5F98];
  v19 = sub_1BB86D894();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104);
  v20(v16, v18, v19);
  v20(v17, *MEMORY[0x1E0DB5FB8], v19);
  *v11 = v14;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB63D0], v8);
  sub_1BAA46934();
  sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
  v26 = v25 + v24;
  v27 = *MEMORY[0x1E0DB5C30];
  sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v26, v27, v28);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v23 + 104))(v26, *MEMORY[0x1E0DB5BC8], v22);
  v36 = a5;
  v37 = v33;
  v38 = v34;
  v39 = v35;
  v29 = MEMORY[0x1E0DB5B80];
  sub_1BAA46860(0, &qword_1EF2C0130, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5B80]);
  sub_1BAA468DC(&qword_1EF2C0138, &qword_1EF2C0130, (uint64_t (*)(uint64_t, _QWORD *))v29, MEMORY[0x1E0DB5B88]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v32);
}

uint64_t sub_1BB299450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD, uint64_t);
  void (*v24)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v25)(uint64_t, _QWORD *);
  void (*v26)(uint64_t *, uint64_t);
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v30 = a3;
  v31 = a4;
  v29 = a2;
  v32 = a1;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v29 - v10);
  v36 = a1;
  sub_1BA71C838();
  v13 = v12;
  v14 = swift_allocBox();
  v16 = v15;
  v17 = (char *)v15 + *(int *)(v13 + 48);
  v18 = sub_1BB86D894();
  v19 = swift_allocBox();
  v21 = v20;
  v22 = swift_allocObject();
  *(double *)(v22 + 16) = a5;
  *v21 = v22;
  v23 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104);
  v23(v21, *MEMORY[0x1E0DB5FA0], v18);
  *v16 = v19;
  v23(v16, *MEMORY[0x1E0DB5FA8], v18);
  v23((uint64_t *)v17, *MEMORY[0x1E0DB5FB8], v18);
  *v11 = v14;
  v24 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104);
  v24(v11, *MEMORY[0x1E0DB63D0], v8);
  v33 = v29;
  v34 = v30;
  v35 = v31;
  v25 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v25, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  v26 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v26(v11, v8);
  v36 = v32;
  v27 = swift_allocObject();
  *(double *)(v27 + 16) = a5;
  *v11 = v27;
  v24(v11, *MEMORY[0x1E0DB63F0], v8);
  sub_1BB86D4EC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v26)(v11, v8);
}

uint64_t sub_1BB2996CC(uint64_t a1, uint64_t a2, void **a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t (*v28)(uint64_t, _QWORD *);
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  void *v46;
  uint64_t v47;
  _BYTE v48[40];
  char v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[48];
  _OWORD v53[5];
  __int128 v54;
  id v55[2];
  unint64_t v56;
  uint64_t v57;

  sub_1BB16AF40();
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&KeyPath - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&KeyPath - v14;
  v51 = a1;
  KeyPath = swift_getKeyPath();
  v16 = *MEMORY[0x1E0DB6410];
  v31 = v13;
  v32 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v15, v16, v12);
  v50 = *(_QWORD *)(a2 + 24);
  v17 = *a3;
  sub_1BA744E38((uint64_t)(a3 + 9), (uint64_t)v52, &qword_1ED39C8F8);
  sub_1BA744E38((uint64_t)v52, (uint64_t)v53, &qword_1ED39C8F8);
  if (*((_QWORD *)&v53[0] + 1) == 1
    || (v53[3] = v53[0],
        v53[4] = v53[1],
        v54 = v53[2],
        sub_1BA744E38((uint64_t)&v54, (uint64_t)v55, &qword_1EF2C0140),
        sub_1BA744E38((uint64_t)v55, (uint64_t)&v56, &qword_1EF2C0140),
        (v18 = v56) == 0))
  {
    swift_retain();
    sub_1BA8D1F08((uint64_t)a3);
    FCIssue.issueCoverModel.getter((uint64_t)&v46);
    sub_1BA8D1FE4((uint64_t)a3);
    v17 = v46;
    v19 = v47;
    v24 = *(_OWORD *)v48;
    v21 = *(_OWORD *)&v48[16];
    v23 = *(_QWORD *)&v48[32];
    v22 = v49;
  }
  else
  {
    v19 = v57;
    v46 = v17;
    v47 = v57;
    *(_QWORD *)v48 = v56;
    memset(&v48[8], 0, 32);
    v49 = 0;
    swift_retain();
    sub_1BA745810(v55);
    v20 = v17;
    v21 = 0uLL;
    v22 = 0;
    v23 = 0;
    v24 = v18;
  }
  v40 = v17;
  v41 = v19;
  v42 = v24;
  v43 = v21;
  v44 = v23;
  v45 = v22;
  v25 = a4[40];
  v26 = a4[41];
  __swift_project_boxed_opaque_existential_1(a4 + 37, v25);
  v27 = (*(double (**)(uint64_t, uint64_t))(v26 + 64))(v25, v26);
  v35 = 0;
  v36 = 0x4010000000000000;
  v37 = v27;
  v38 = -1;
  v39 = 0x3FE0000000000000;
  sub_1BA4CDF6C(0, &qword_1ED39C280, (uint64_t (*)(void))sub_1BA8D93BC, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BA915CEC();
  sub_1BB16B024();
  sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
  sub_1BB86D684();
  v28 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v28, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v15, v32);
}

uint64_t sub_1BB299AA4(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a3;
  v31 = a2;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v30 - v9);
  v36 = a1;
  sub_1BA71C838();
  v12 = v11;
  v13 = swift_allocBox();
  v15 = v14;
  v16 = v14 + *(int *)(v12 + 48);
  v17 = *MEMORY[0x1E0DB5F98];
  v18 = sub_1BB86D894();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104);
  v19(v15, v17, v18);
  v19(v16, *MEMORY[0x1E0DB5FB8], v18);
  *v10 = v13;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63D0], v7);
  sub_1BAA46934();
  sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB87CE70;
  v25 = v24 + v23;
  v26 = *MEMORY[0x1E0DB5C30];
  sub_1BA4CDF6C(0, &qword_1ED39C288, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v25, v26, v27);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v22 + 104))(v25, *MEMORY[0x1E0DB5BC8], v21);
  v33 = a4;
  v34 = v31;
  v35 = v32;
  v28 = MEMORY[0x1E0DB5B80];
  sub_1BAA46860(0, &qword_1EF2C0130, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5B80]);
  sub_1BAA468DC(&qword_1EF2C0138, &qword_1EF2C0130, (uint64_t (*)(uint64_t, _QWORD *))v28, MEMORY[0x1E0DB5B88]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v30);
}

uint64_t sub_1BB299D58(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v24 = a3;
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v23 - v10);
  v28 = a1;
  sub_1BA71C838();
  v13 = v12;
  v14 = swift_allocBox();
  v16 = v15;
  v17 = v15 + *(int *)(v13 + 48);
  v18 = *MEMORY[0x1E0DB5F98];
  v19 = sub_1BB86D894();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104);
  v20(v16, v18, v19);
  v20(v17, *MEMORY[0x1E0DB5FB8], v19);
  *v11 = v14;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB63D0], v8);
  v25 = a4;
  v26 = a2;
  v27 = v24;
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v21, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BB299F24(char *a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v19)(uint64_t, _QWORD *);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  char *v40;
  char *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t KeyPath;
  uint64_t v46;
  void (*v47)(uint64_t *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  void *v65;
  uint64_t v66;
  _BYTE v67[40];
  char v68;
  uint64_t v69;
  char *v70;
  _OWORD v71[6];
  __int128 v72;
  _OWORD v73[3];

  v44 = a2;
  v50 = a1;
  sub_1BB16AF40();
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  MEMORY[0x1E0C80A78](v7);
  v51 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v43 - v15);
  *(_QWORD *)&v71[0] = a1;
  v17 = swift_allocObject();
  *(double *)(v17 + 16) = a4;
  *v16 = v17;
  v18 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 104);
  v18(v16, *MEMORY[0x1E0DB63E8], v10);
  v19 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAA46860(0, &qword_1ED39C260, MEMORY[0x1E0DB5A10]);
  v21 = v20;
  v22 = sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, v19, MEMORY[0x1E0DB5A18]);
  v48 = v21;
  v46 = v22;
  sub_1BB86D4EC();
  v47 = *(void (**)(uint64_t *, uint64_t))(v11 + 8);
  v47(v16, v10);
  v70 = v50;
  KeyPath = swift_getKeyPath();
  v23 = *MEMORY[0x1E0DB6410];
  v49 = v10;
  v50 = v13;
  v18((uint64_t *)v13, v23, v10);
  v69 = *(_QWORD *)(v44 + 24);
  v24 = *(_OWORD *)(a3 + 88);
  v25 = *(_OWORD *)(a3 + 120);
  v72 = *(_OWORD *)(a3 + 104);
  v73[0] = v25;
  *(_OWORD *)((char *)v73 + 9) = *(_OWORD *)(a3 + 129);
  v26 = *(_OWORD *)(a3 + 24);
  v27 = *(_OWORD *)(a3 + 56);
  v71[2] = *(_OWORD *)(a3 + 40);
  v71[3] = v27;
  v71[4] = *(_OWORD *)(a3 + 72);
  v71[5] = v24;
  v71[0] = *(_OWORD *)(a3 + 8);
  v71[1] = v26;
  v28 = *(void **)&v71[0];
  if ((_QWORD)v24 == 1 || (v29 = (void *)*((_QWORD *)&v72 + 1)) == 0)
  {
    swift_retain();
    sub_1BA8D1F08((uint64_t)v71);
    FCIssue.issueCoverModel.getter((uint64_t)&v65);
    sub_1BA8D1FE4((uint64_t)v71);
    v28 = v65;
    v30 = v66;
    v36 = *(_OWORD *)v67;
    v33 = *(_OWORD *)&v67[16];
    v35 = *(_QWORD *)&v67[32];
    v34 = v68;
  }
  else
  {
    v30 = *(_QWORD *)&v73[0];
    v65 = *(void **)&v71[0];
    v66 = *(_QWORD *)&v73[0];
    *(_QWORD *)v67 = *((_QWORD *)&v72 + 1);
    memset(&v67[8], 0, 32);
    v68 = 0;
    swift_retain();
    v31 = v29;
    v32 = v28;
    v33 = 0uLL;
    v34 = 0;
    v35 = 0;
    v36 = (unint64_t)v29;
  }
  v59 = v28;
  v60 = v30;
  v61 = v36;
  v62 = v33;
  v63 = v35;
  v64 = v34;
  v37 = *(_QWORD *)(a3 + 320);
  v38 = *(_QWORD *)(a3 + 328);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 296), v37);
  v39 = (*(double (**)(uint64_t, uint64_t))(v38 + 64))(v37, v38);
  v54 = 0;
  v55 = 0x4010000000000000;
  v56 = v39;
  v57 = -1;
  v58 = 0x3FE0000000000000;
  sub_1BA4CDF6C(0, &qword_1ED39C280, (uint64_t (*)(void))sub_1BA8D93BC, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  type metadata accessor for IssueCoverViewLayoutAttributesFactory();
  sub_1BA915CEC();
  sub_1BB16B024();
  sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
  v40 = v51;
  sub_1BB86D684();
  v41 = v50;
  sub_1BB86D4D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v53);
  return ((uint64_t (*)(char *, uint64_t))v47)(v41, v49);
}

uint64_t sub_1BB29A360(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  int v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _BYTE v59[40];
  char v60;
  char v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  _QWORD *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  _OWORD v81[2];
  _BYTE v82[144];
  _OWORD v83[7];
  _OWORD v84[3];

  v53 = a2;
  v55 = *a3;
  sub_1BB16AF40();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v56 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v50 - v13);
  sub_1BA744E38(a1 + 152, (uint64_t)v82, (unint64_t *)&qword_1ED3C23B0);
  sub_1BA744E38((uint64_t)v82, (uint64_t)v83, (unint64_t *)&qword_1ED3C23B0);
  v15 = sub_1BA84DAF0((uint64_t *)v83);
  v54 = v9;
  if (v15 == 1)
  {
    v73 = a3;
    swift_getKeyPath();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6410], v56);
    v72 = *(_QWORD *)(v53 + 24);
    v16 = *(_OWORD *)(a1 + 88);
    v17 = *(_OWORD *)(a1 + 120);
    v80 = *(_OWORD *)(a1 + 104);
    v81[0] = v17;
    *(_OWORD *)((char *)v81 + 9) = *(_OWORD *)(a1 + 129);
    v18 = *(_OWORD *)(a1 + 24);
    v19 = *(_OWORD *)(a1 + 56);
    v76 = *(_OWORD *)(a1 + 40);
    v77 = v19;
    v78 = *(_OWORD *)(a1 + 72);
    v79 = v16;
    v74 = *(_OWORD *)(a1 + 8);
    v75 = v18;
    v20 = (void *)v74;
    if ((_QWORD)v16 == 1 || (v21 = (void *)*((_QWORD *)&v80 + 1)) == 0)
    {
      swift_retain();
      sub_1BA8D1F08((uint64_t)&v74);
      FCIssue.issueCoverModel.getter((uint64_t)&v57);
      sub_1BA8D1FE4((uint64_t)&v74);
      v20 = v57;
      v22 = v58;
      v28 = *(_OWORD *)v59;
      v25 = *(_OWORD *)&v59[16];
      v27 = *(_QWORD *)&v59[32];
      v26 = v60;
    }
    else
    {
      v22 = *(_QWORD *)&v81[0];
      v57 = (void *)v74;
      v58 = *(_QWORD *)&v81[0];
      *(_QWORD *)v59 = *((_QWORD *)&v80 + 1);
      memset(&v59[8], 0, 32);
      v60 = 0;
      swift_retain();
      v23 = v21;
      v24 = v20;
      v25 = 0uLL;
      v26 = 0;
      v27 = 0;
      v28 = (unint64_t)v21;
    }
    v66 = v20;
    v67 = v22;
    v68 = v28;
    v69 = v25;
    v70 = v27;
    v71 = v26;
    v46 = (_QWORD *)(a1 + 296);
    v47 = *(_QWORD *)(a1 + 320);
    v48 = *(_QWORD *)(a1 + 328);
    __swift_project_boxed_opaque_existential_1(v46, v47);
    v49 = (*(double (**)(uint64_t, uint64_t))(v48 + 64))(v47, v48);
    v61 = 0;
    v62 = 0x4010000000000000;
    v63 = v49;
    v64 = -1;
    v65 = 0x3FE0000000000000;
    sub_1BA4CDF6C(0, &qword_1ED39C280, (uint64_t (*)(void))sub_1BA8D93BC, (uint64_t)&type metadata for IssueCoverViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
    type metadata accessor for IssueCoverViewLayoutAttributesFactory();
    sub_1BA915CEC();
    sub_1BB16B024();
    sub_1BA4A2870(&qword_1ED39D730, (uint64_t (*)(uint64_t))type metadata accessor for IssueCoverViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for IssueCoverViewLayoutAttributesFactory);
    sub_1BB86D684();
    sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, MEMORY[0x1E0DB5A10], MEMORY[0x1E0DB5A18]);
    sub_1BB86D4D4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v52);
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v11, v56);
  }
  else
  {
    v80 = v83[6];
    v81[0] = v84[0];
    *(_OWORD *)((char *)v81 + 9) = *(_OWORD *)((char *)v84 + 9);
    v76 = v83[2];
    v77 = v83[3];
    v78 = v83[4];
    v79 = v83[5];
    v74 = v83[0];
    v75 = v83[1];
    v66 = a3;
    sub_1BA71C838();
    v30 = v29;
    v31 = swift_allocBox();
    v33 = v32;
    v34 = v32 + *(int *)(v30 + 48);
    v35 = *MEMORY[0x1E0DB5F98];
    v36 = sub_1BB86D894();
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104);
    v37(v33, v35, v36);
    v37(v34, *MEMORY[0x1E0DB5FB8], v36);
    *v14 = v31;
    v38 = v56;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v14, *MEMORY[0x1E0DB63D0], v56);
    sub_1BAA46934();
    sub_1BA4CDF6C(0, &qword_1ED39C298, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v40 = v39;
    v41 = *(_QWORD *)(v39 - 8);
    v42 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1BB87CE70;
    v44 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v41 + 104))(v43 + v42, *MEMORY[0x1E0DB5C80], v40);
    MEMORY[0x1E0C80A78](v44);
    sub_1BA744E38((uint64_t)v82, (uint64_t)&v57, (unint64_t *)&qword_1ED3C23B0);
    sub_1BA8D1F08((uint64_t)&v57);
    sub_1BAA468DC(&qword_1ED39C258, &qword_1ED39C260, MEMORY[0x1E0DB5A10], MEMORY[0x1E0DB5A18]);
    sub_1BB86D4BC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t *, uint64_t))(v54 + 8))(v14, v38);
    return sub_1BA90EECC((uint64_t)v82);
  }
}

uint64_t sub_1BB29A970(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2980EC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB29A978(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB298414(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB29A980(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB298860(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BB29A988()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF2C0120)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C0128, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, MEMORY[0x1E0DB5B40]);
    sub_1BA4CDF6C(255, &qword_1ED39C300, (uint64_t (*)(void))sub_1BA915CEC, (uint64_t)&type metadata for CoverIssueViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF2C0120);
  }
}

uint64_t sub_1BB29AA44()
{
  return swift_deallocObject();
}

uint64_t sub_1BB29AA54()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB29AA78(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB298F14(a1, *(_QWORD *)(v1 + 24), *(_OWORD **)(v1 + 32), *(_QWORD *)(v1 + 40), *(double *)(v1 + 16));
}

uint64_t sub_1BB29AA8C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB299040(*(double *)(v1 + 16), a1, *(_QWORD *)(v1 + 24), (_OWORD *)(v1 + 32), v1 + 176);
}

uint64_t objectdestroy_26Tm_1()
{
  uint64_t v0;
  void *v1;

  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 112) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 160) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 264) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 312) >= 0x11uLL)
    swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 328);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 408) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 456) >= 0x11uLL)
      swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 472);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB29ABFC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB299194(a1, *(_QWORD *)(v1 + 24), v1 + 32, v1 + 176, *(double *)(v1 + 16));
}

uint64_t sub_1BB29AC20()
{
  uint64_t v0;
  void *v1;

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 120) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 168) >= 0x11uLL)
    swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 184);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 264) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 312) >= 0x11uLL)
      swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 328);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB29AD20(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB299AA4(a1, *(_QWORD *)(v1 + 24), v1 + 32, *(double *)(v1 + 16));
}

uint64_t sub_1BB29AD40(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB299D58(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(double *)(v1 + 16));
}

uint64_t sub_1BB29AD4C(char *a1)
{
  uint64_t v1;

  return sub_1BB299F24(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(double *)(v1 + 16));
}

uint64_t sub_1BB29AD58(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB299450(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(double *)(v1 + 16));
}

uint64_t sub_1BB29AD68(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2996CC(a1, *(_QWORD *)(v1 + 16), *(void ***)(v1 + 24), *(_QWORD **)(v1 + 32));
}

uint64_t getEnumTagSinglePayload for FormatPluginDataPlaceholderContent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatPluginDataPlaceholderContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB29AE00(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1BB29AE18(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatPluginDataPlaceholderContent()
{
  return &type metadata for FormatPluginDataPlaceholderContent;
}

uint64_t FormatNodeContext.contextLayoutOptions.getter()
{
  uint64_t v1;

  sub_1BB86DD80();
  return v1;
}

uint64_t FormatNodeContext.resizeSnapshot.getter()
{
  type metadata accessor for GroupLayoutContext();
  return swift_retain();
}

uint64_t sub_1BB29AEAC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, _OWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v21 = v20;
  v77 = a8;
  v86 = a7;
  v72 = a3;
  v73 = a4;
  v68 = a1;
  v83 = a19;
  v84 = a20;
  v81 = a17;
  v82 = a18;
  v79 = a14;
  v80 = a15;
  v78 = a13;
  v85 = a9;
  v74 = a16;
  v75 = a10;
  v76 = a11;
  v25 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v25 - 8);
  v26 = *(_QWORD *)(v63 + 64);
  MEMORY[0x1E0C80A78](v25);
  v64 = (uint64_t)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v63 - v28;
  v30 = *a2;
  v31 = a2[1];
  v67 = *(_OWORD *)(a2 + 8);
  v66 = *(_OWORD *)(a2 + 24);
  v65 = *(_OWORD *)(a2 + 40);
  v32 = *((_QWORD *)a2 + 7);
  v33 = *a12;
  v70 = a12[1];
  v71 = v33;
  v34 = *((_QWORD *)a12 + 5);
  v69 = *((_QWORD *)a12 + 4);
  v35 = v68;
  sub_1BA4C2DD8(v68, v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v36);
  v37 = v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config;
  *(_BYTE *)v37 = v30;
  *(_BYTE *)(v37 + 1) = v31;
  *(_OWORD *)(v37 + 8) = v67;
  *(_OWORD *)(v37 + 24) = v66;
  *(_OWORD *)(v37 + 40) = v65;
  *(_QWORD *)(v37 + 56) = v32;
  *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory) = v72;
  *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace) = v73;
  v38 = (_OWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  v39 = a5[1];
  *v38 = *a5;
  v38[1] = v39;
  v40 = a5[2];
  v41 = a5[3];
  v43 = v85;
  v42 = v86;
  v38[2] = v40;
  v38[3] = v41;
  v73 = a6;
  *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors) = a6;
  v44 = v74;
  *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options) = v42;
  *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks) = v77;
  sub_1BA70AF2C(v43, v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v45 = (_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  v46 = v76;
  *v45 = v75;
  v45[1] = v46;
  v47 = v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary;
  v48 = v70;
  *(_OWORD *)v47 = v71;
  *(_OWORD *)(v47 + 16) = v48;
  *(_QWORD *)(v47 + 32) = v69;
  *(_QWORD *)(v47 + 40) = v34;
  *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines) = v78;
  v49 = (_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  v50 = v80;
  *v49 = v79;
  v49[1] = v50;
  sub_1BA4C2DD8(v35, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  if (!v44)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBE40, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB3258]);
    v80 = v51;
    v52 = v64;
    sub_1BA4C2DD8((uint64_t)v29, v64, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v53 = v29;
    v54 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    v55 = (v26 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    v56 = swift_allocObject();
    sub_1BA5193C4(v52, v56 + v54, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(_QWORD *)(v56 + v55) = v86;
    *(_QWORD *)(v56 + ((v55 + 15) & 0xFFFFFFFFFFFFFFF8)) = v73;
    swift_bridgeObjectRetain();
    v29 = v53;
    swift_retain();
    v57 = sub_1BB86DD98();
    v43 = v85;
    v44 = v57;
  }
  sub_1BA70AF8C(v43, qword_1ED3B2E38, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions) = v44;
  v58 = (_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  v59 = v82;
  *v58 = v81;
  v58[1] = v59;
  v60 = (_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  v61 = v84;
  *v60 = v83;
  v60[1] = v61;
  return v21;
}

uint64_t sub_1BB29B2FC(__int128 *a1, uint64_t a2, uint64_t *a3, _QWORD **a4)
{
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t inited;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  _OWORD *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v43;
  __int128 v44;
  ValueMetadata *v45;
  unint64_t v46;
  uint64_t v47[6];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _OWORD v55[2];
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v47[3] = (uint64_t)&type metadata for FeedIssue;
  v43 = sub_1BA6B2E68();
  v47[4] = v43;
  v7 = (_OWORD *)swift_allocObject();
  v8 = a1[5];
  v9 = a1[7];
  v54 = a1[6];
  v55[0] = v9;
  *(_OWORD *)((char *)v55 + 9) = *(__int128 *)((char *)a1 + 121);
  v10 = a1[1];
  v11 = a1[3];
  v50 = a1[2];
  v12 = v50;
  v51 = v11;
  v13 = a1[3];
  v14 = a1[5];
  v52 = a1[4];
  v15 = v52;
  v53 = v14;
  v16 = a1[1];
  v48 = *a1;
  v17 = v48;
  v49 = v16;
  v18 = a1[7];
  v7[7] = v54;
  v7[8] = v18;
  *(_OWORD *)((char *)v7 + 137) = *(__int128 *)((char *)a1 + 121);
  v7[3] = v12;
  v7[4] = v13;
  v7[5] = v15;
  v7[6] = v8;
  v47[0] = (uint64_t)v7;
  v7[1] = v17;
  v7[2] = v10;
  swift_beginAccess();
  sub_1BA8D1F08((uint64_t)&v48);
  sub_1BA6B0198((uint64_t)v47, a2);
  sub_1BA6A09F0((uint64_t)(a1 + 10), (uint64_t)v47, &qword_1ED3C5430, (uint64_t)&type metadata for FeedItemAuxiliary);
  swift_beginAccess();
  v19 = *a3;
  v20 = a3[1];
  sub_1BA6A09F0((uint64_t)v47, (uint64_t)a3, &qword_1ED3C5430, (uint64_t)&type metadata for FeedItemAuxiliary);
  sub_1BA78A580(v47);
  sub_1BA70ABF4(v19, v20);
  swift_beginAccess();
  v21 = (void *)v48;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B9D60, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA8D1F08((uint64_t)&v48);
  v23 = objc_msgSend(v21, sel_sourceChannel);
  *(_QWORD *)(inited + 56) = &type metadata for FeedTag;
  *(_QWORD *)(inited + 64) = sub_1BA6A96BC();
  v24 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v24;
  v25 = objc_msgSend(v23, sel_identifier);
  v26 = sub_1BB8729A0();
  v28 = v27;

  *(_OWORD *)(v24 + 96) = xmmword_1BB87FC90;
  *(_OWORD *)(v24 + 112) = 0u;
  *(_OWORD *)(v24 + 128) = 0u;
  *(_OWORD *)(v24 + 144) = 0u;
  *(_BYTE *)(v24 + 160) = 0;
  *(_QWORD *)(v24 + 16) = v26;
  *(_QWORD *)(v24 + 24) = v28;
  *(_QWORD *)(v24 + 32) = v23;
  *(_BYTE *)(v24 + 40) = 0;
  *(_QWORD *)(v24 + 64) = 0;
  *(_QWORD *)(v24 + 72) = 0xE000000000000000;
  *(_QWORD *)(v24 + 48) = 0;
  *(_BYTE *)(v24 + 56) = 0;
  v29 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v24 + 80) = 0;
  *(_QWORD *)(v24 + 88) = v29;
  sub_1BA6B017C(inited);
  v30 = *a4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v30;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v30 = sub_1BA6A94A8(0, v30[2] + 1, 1, v30);
    *a4 = v30;
  }
  v33 = v30[2];
  v32 = v30[3];
  if (v33 >= v32 >> 1)
  {
    v30 = sub_1BA6A94A8((_QWORD *)(v32 > 1), v33 + 1, 1, v30);
    *a4 = v30;
  }
  v45 = &type metadata for FeedIssue;
  v46 = v43;
  v34 = (_OWORD *)swift_allocObject();
  *(_QWORD *)&v44 = v34;
  v35 = v55[0];
  v34[7] = v54;
  v34[8] = v35;
  *(_OWORD *)((char *)v34 + 137) = *(_OWORD *)((char *)v55 + 9);
  v36 = v51;
  v34[3] = v50;
  v34[4] = v36;
  v37 = v53;
  v34[5] = v52;
  v34[6] = v37;
  v38 = v49;
  v34[1] = v48;
  v34[2] = v38;
  v30[2] = v33 + 1;
  sub_1BA4CECCC(&v44, (uint64_t)&v30[5 * v33 + 4]);
  swift_endAccess();
  swift_beginAccess();
  v39 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v39);
  swift_endAccess();
  swift_beginAccess();
  v40 = swift_bridgeObjectRetain();
  sub_1BA7082C0(v40);
  return swift_endAccess();
}

uint64_t sub_1BB29B714(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD **a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD **v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[3];
  uint64_t v38;
  char *v39;
  _QWORD **v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a5;
  v45 = a6;
  v40 = a4;
  v9 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v9);
  v39 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v11;
  v47 = v11;
  v41 = sub_1BA4A2870(&qword_1ED39AF58, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t)&protocol conformance descriptor for FeedWebEmbed);
  v48 = v41;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v46);
  v38 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  swift_beginAccess();
  sub_1BA6B0198((uint64_t)&v46, a2);
  sub_1BA4B07F0(0, &qword_1ED3BE978, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  v43 = v13;
  v14 = (uint64_t *)(a1 + *(int *)(v13 + 36));
  v16 = *v14;
  v15 = v14[1];
  v18 = v14[2];
  v17 = v14[3];
  v19 = v14[4];
  v20 = v14[5];
  swift_beginAccess();
  v21 = *a3;
  v22 = a3[1];
  v37[2] = a3[3];
  v37[1] = a3[4];
  v37[0] = a3[5];
  *a3 = v16;
  a3[1] = v15;
  a3[2] = v18;
  a3[3] = v17;
  a3[4] = v19;
  a3[5] = v20;
  v23 = v16;
  v24 = v38;
  v25 = v15;
  v27 = (uint64_t)v39;
  v26 = v40;
  sub_1BA70A834(v23, v25);
  sub_1BA70ABF4(v21, v22);
  swift_beginAccess();
  sub_1BA4C2DD8(v24, v27, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v28 = FeedWebEmbed.additionalFormatFeedItems.getter();
  sub_1BA6B017C((uint64_t)v28);
  v29 = *v26;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v26 = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v29 = sub_1BA6A94A8(0, v29[2] + 1, 1, v29);
    *v26 = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_1BA6A94A8((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *v26 = v29;
  }
  v47 = v42;
  v48 = v41;
  v33 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v46);
  sub_1BA4C2DD8(v27, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  v29[2] = v32 + 1;
  sub_1BA4CECCC(&v46, (uint64_t)&v29[5 * v32 + 4]);
  sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  swift_endAccess();
  swift_beginAccess();
  v34 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v34);
  swift_endAccess();
  swift_beginAccess();
  v35 = swift_bridgeObjectRetain();
  sub_1BA7082C0(v35);
  return swift_endAccess();
}

uint64_t sub_1BB29BA4C(_QWORD *a1, uint64_t a2, uint64_t *a3, _QWORD **a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v23;
  __int128 v24;
  ValueMetadata *v25;
  unint64_t v26;
  _QWORD v27[19];

  v27[3] = &type metadata for FeedTag;
  v23 = sub_1BA6A96BC();
  v27[4] = v23;
  v27[0] = swift_allocObject();
  sub_1BA6A955C((uint64_t)a1, v27[0] + 16);
  swift_beginAccess();
  sub_1BA6B0198((uint64_t)v27, a2);
  v7 = a1[21];
  v8 = a1[22];
  v9 = a1[23];
  v10 = a1[24];
  v12 = a1[25];
  v11 = a1[26];
  swift_beginAccess();
  v14 = *a3;
  v13 = a3[1];
  *a3 = v7;
  a3[1] = v8;
  a3[2] = v9;
  a3[3] = v10;
  a3[4] = v12;
  a3[5] = v11;
  sub_1BA70A834(v7, v8);
  sub_1BA70ABF4(v14, v13);
  swift_beginAccess();
  sub_1BA6A955C((uint64_t)a1, (uint64_t)v27);
  sub_1BA6B017C(MEMORY[0x1E0DEE9D8]);
  v15 = *a4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_1BA6A94A8(0, v15[2] + 1, 1, v15);
    *a4 = v15;
  }
  v18 = v15[2];
  v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    v15 = sub_1BA6A94A8((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
    *a4 = v15;
  }
  v25 = &type metadata for FeedTag;
  v26 = v23;
  *(_QWORD *)&v24 = swift_allocObject();
  sub_1BA6A955C((uint64_t)v27, v24 + 16);
  v15[2] = v18 + 1;
  sub_1BA4CECCC(&v24, (uint64_t)&v15[5 * v18 + 4]);
  sub_1BA6A94C4((uint64_t)v27);
  swift_endAccess();
  swift_beginAccess();
  v19 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v19);
  swift_endAccess();
  swift_beginAccess();
  v20 = swift_bridgeObjectRetain();
  sub_1BA7082C0(v20);
  return swift_endAccess();
}

uint64_t sub_1BB29BCD0(_QWORD *a1, uint64_t a2, uint64_t *a3, _QWORD **a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v37;
  __int128 v38;
  ValueMetadata *v39;
  unint64_t v40;
  _QWORD v41[32];

  v41[30] = *MEMORY[0x1E0C80C00];
  v41[3] = &type metadata for FeedPuzzle;
  v37 = sub_1BACB5AD0();
  v41[4] = v37;
  v41[0] = swift_allocObject();
  sub_1BA93EB58((uint64_t)a1, v41[0] + 16);
  swift_beginAccess();
  sub_1BA6B0198((uint64_t)v41, a2);
  v7 = a1[23];
  v8 = a1[24];
  v9 = a1[25];
  v10 = a1[26];
  v12 = a1[27];
  v11 = a1[28];
  swift_beginAccess();
  v13 = *a3;
  v35 = a3[1];
  *a3 = v7;
  a3[1] = v8;
  a3[2] = v9;
  a3[3] = v10;
  a3[4] = v12;
  a3[5] = v11;
  sub_1BA70A834(v7, v8);
  sub_1BA70ABF4(v13, v35);
  swift_beginAccess();
  sub_1BA93EB58((uint64_t)a1, (uint64_t)v41);
  v14 = objc_msgSend((id)v41[7], sel_puzzleType);
  v15 = objc_msgSend(v14, sel_identifier);
  v16 = sub_1BB8729A0();
  v18 = v17;

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B9D60, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 56) = &type metadata for FeedPuzzleType;
  *(_QWORD *)(inited + 64) = sub_1BACB5BC8();
  v20 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v20 + 24) = 0;
  *(_BYTE *)(v20 + 32) = 1;
  *(_OWORD *)(v20 + 40) = xmmword_1BB88C450;
  *(_QWORD *)(v20 + 56) = v16;
  *(_QWORD *)(v20 + 64) = v18;
  *(_QWORD *)(v20 + 72) = v14;
  *(_QWORD *)&v38 = inited;
  v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v21 + 56) = &type metadata for FeedTag;
  *(_QWORD *)(v21 + 64) = sub_1BA6A96BC();
  v22 = swift_allocObject();
  *(_QWORD *)(v21 + 32) = v22;
  sub_1BA75A650(0, 0xDuLL);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1BA75A650(0, 0xDuLL);
  swift_bridgeObjectRetain();
  v23 = objc_msgSend((id)swift_unknownObjectRetain_n(), sel_identifier);
  v24 = sub_1BB8729A0();
  v26 = v25;

  *(_OWORD *)(v22 + 96) = xmmword_1BB87FC90;
  *(_OWORD *)(v22 + 112) = 0u;
  *(_OWORD *)(v22 + 128) = 0u;
  *(_OWORD *)(v22 + 144) = 0u;
  *(_BYTE *)(v22 + 160) = 0;
  *(_QWORD *)(v22 + 16) = v24;
  *(_QWORD *)(v22 + 24) = v26;
  *(_QWORD *)(v22 + 32) = v14;
  *(_BYTE *)(v22 + 40) = 0;
  *(_QWORD *)(v22 + 64) = 0;
  *(_QWORD *)(v22 + 72) = 0xE000000000000000;
  *(_QWORD *)(v22 + 48) = 0;
  *(_BYTE *)(v22 + 56) = 0;
  v27 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v22 + 80) = 0;
  *(_QWORD *)(v22 + 88) = v27;
  sub_1BA6E0CBC(0, 0xDuLL);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6B017C(v21);
  sub_1BA6E0CBC(0, 0xDuLL);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6B017C(v38);
  v28 = *a4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v28;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v28 = sub_1BA6A94A8(0, v28[2] + 1, 1, v28);
    *a4 = v28;
  }
  v31 = v28[2];
  v30 = v28[3];
  if (v31 >= v30 >> 1)
  {
    v28 = sub_1BA6A94A8((_QWORD *)(v30 > 1), v31 + 1, 1, v28);
    *a4 = v28;
  }
  v39 = &type metadata for FeedPuzzle;
  v40 = v37;
  *(_QWORD *)&v38 = swift_allocObject();
  sub_1BA93EB58((uint64_t)v41, v38 + 16);
  v28[2] = v31 + 1;
  sub_1BA4CECCC(&v38, (uint64_t)&v28[5 * v31 + 4]);
  sub_1BA93EBE8((uint64_t)v41);
  swift_endAccess();
  swift_beginAccess();
  v32 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v32);
  swift_endAccess();
  swift_beginAccess();
  v33 = swift_bridgeObjectRetain();
  sub_1BA7082C0(v33);
  return swift_endAccess();
}

uint64_t sub_1BB29C188(__int128 *a1, uint64_t a2, uint64_t *a3, _QWORD **a4)
{
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v32;
  __int128 v33;
  ValueMetadata *v34;
  unint64_t v35;
  uint64_t v36[6];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v36[3] = (uint64_t)&type metadata for FeedPuzzleType;
  v32 = sub_1BACB5BC8();
  v36[4] = v32;
  v7 = (_OWORD *)swift_allocObject();
  v36[0] = (uint64_t)v7;
  v8 = a1[1];
  v37 = *a1;
  v38 = v8;
  v10 = a1[3];
  v39 = a1[2];
  v9 = v39;
  v40 = v10;
  v7[1] = v37;
  v7[2] = v8;
  v7[3] = v9;
  v7[4] = v10;
  swift_beginAccess();
  sub_1BACB5B80((uint64_t)&v37);
  sub_1BA6B0198((uint64_t)v36, a2);
  sub_1BA6A09F0((uint64_t)(a1 + 5), (uint64_t)v36, &qword_1ED3C5430, (uint64_t)&type metadata for FeedItemAuxiliary);
  swift_beginAccess();
  v11 = *a3;
  v12 = a3[1];
  sub_1BA6A09F0((uint64_t)v36, (uint64_t)a3, &qword_1ED3C5430, (uint64_t)&type metadata for FeedItemAuxiliary);
  sub_1BA78A580(v36);
  sub_1BA70ABF4(v11, v12);
  swift_beginAccess();
  v13 = *((_QWORD *)&v40 + 1);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B9D60, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 56) = &type metadata for FeedTag;
  *(_QWORD *)(inited + 64) = sub_1BA6A96BC();
  v15 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v15;
  sub_1BACB5B80((uint64_t)&v37);
  v16 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  v17 = sub_1BB8729A0();
  v19 = v18;

  *(_OWORD *)(v15 + 96) = xmmword_1BB87FC90;
  *(_OWORD *)(v15 + 112) = 0u;
  *(_OWORD *)(v15 + 128) = 0u;
  *(_OWORD *)(v15 + 144) = 0u;
  *(_BYTE *)(v15 + 160) = 0;
  *(_QWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 24) = v19;
  *(_QWORD *)(v15 + 32) = v13;
  *(_BYTE *)(v15 + 40) = 0;
  *(_QWORD *)(v15 + 64) = 0;
  *(_QWORD *)(v15 + 72) = 0xE000000000000000;
  *(_QWORD *)(v15 + 48) = 0;
  *(_BYTE *)(v15 + 56) = 0;
  v20 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v15 + 80) = 0;
  *(_QWORD *)(v15 + 88) = v20;
  sub_1BA6B017C(inited);
  v21 = *a4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a4 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_1BA6A94A8(0, v21[2] + 1, 1, v21);
    *a4 = v21;
  }
  v24 = v21[2];
  v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    v21 = sub_1BA6A94A8((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    *a4 = v21;
  }
  v34 = &type metadata for FeedPuzzleType;
  v35 = v32;
  v25 = (_OWORD *)swift_allocObject();
  *(_QWORD *)&v33 = v25;
  v26 = v38;
  v25[1] = v37;
  v25[2] = v26;
  v27 = v40;
  v25[3] = v39;
  v25[4] = v27;
  v21[2] = v24 + 1;
  sub_1BA4CECCC(&v33, (uint64_t)&v21[5 * v24 + 4]);
  swift_endAccess();
  swift_beginAccess();
  v28 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v28);
  swift_endAccess();
  swift_beginAccess();
  v29 = swift_bridgeObjectRetain();
  sub_1BA7082C0(v29);
  return swift_endAccess();
}

uint64_t sub_1BB29C534(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD **a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD **v26;
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD **v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v50 = a6;
  v49 = a5;
  v46 = a4;
  v54 = *MEMORY[0x1E0C80C00];
  v44 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v44);
  v45 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v10;
  v47 = sub_1BA4A2870(&qword_1EF2B1A40, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t)&protocol conformance descriptor for FeedPuzzleStatistic);
  v53 = v47;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v51);
  v43 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  swift_beginAccess();
  sub_1BA6B0198((uint64_t)&v51, a2);
  sub_1BA4B07F0(0, &qword_1ED3C4230, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  v48 = v12;
  v13 = (uint64_t *)(a1 + *(int *)(v12 + 36));
  v15 = *v13;
  v14 = v13[1];
  v17 = v13[2];
  v16 = v13[3];
  v19 = v13[4];
  v18 = v13[5];
  swift_beginAccess();
  v20 = *a3;
  v21 = a3[1];
  v42[2] = a3[3];
  v42[1] = a3[4];
  v42[0] = a3[5];
  *a3 = v15;
  a3[1] = v14;
  a3[2] = v17;
  a3[3] = v16;
  a3[4] = v19;
  a3[5] = v18;
  v22 = v44;
  v23 = v43;
  sub_1BA70A834(v15, v14);
  v24 = v20;
  v25 = (uint64_t)v45;
  sub_1BA70ABF4(v24, v21);
  v26 = v46;
  swift_beginAccess();
  sub_1BA4C2DD8(v23, v25, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3B9D60, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v28 = *(_QWORD *)(v25 + *(int *)(v22 + 32));
  *(_QWORD *)(inited + 56) = &type metadata for FeedPuzzleType;
  *(_QWORD *)(inited + 64) = sub_1BACB5BC8();
  v29 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v29;
  v30 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
  v31 = sub_1BB8729A0();
  v33 = v32;

  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  *(_BYTE *)(v29 + 32) = 1;
  *(_OWORD *)(v29 + 40) = xmmword_1BB88C450;
  *(_QWORD *)(v29 + 56) = v31;
  *(_QWORD *)(v29 + 64) = v33;
  *(_QWORD *)(v29 + 72) = v28;
  sub_1BA6B017C(inited);
  v34 = *v26;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v26 = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v34 = sub_1BA6A94A8(0, v34[2] + 1, 1, v34);
    *v26 = v34;
  }
  v37 = v34[2];
  v36 = v34[3];
  if (v37 >= v36 >> 1)
  {
    v34 = sub_1BA6A94A8((_QWORD *)(v36 > 1), v37 + 1, 1, v34);
    *v26 = v34;
  }
  v52 = v22;
  v53 = v47;
  v38 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v51);
  sub_1BA4C2DD8(v25, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  v34[2] = v37 + 1;
  sub_1BA4CECCC(&v51, (uint64_t)&v34[5 * v37 + 4]);
  sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  swift_endAccess();
  swift_beginAccess();
  v39 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v39);
  swift_endAccess();
  swift_beginAccess();
  v40 = swift_bridgeObjectRetain();
  sub_1BA7082C0(v40);
  return swift_endAccess();
}

uint64_t sub_1BB29C99C(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD **a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD **v27;
  _QWORD *v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[3];
  uint64_t v37;
  char *v38;
  _QWORD **v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v43 = a5;
  v44 = a6;
  v39 = a4;
  v9 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v9);
  v38 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v11;
  v46 = v11;
  v40 = sub_1BA4A2870(&qword_1ED39E460, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t)&protocol conformance descriptor for FeedCustomItem);
  v47 = v40;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v45);
  v37 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  swift_beginAccess();
  sub_1BA6B0198((uint64_t)&v45, a2);
  sub_1BA4B07F0(0, &qword_1ED3C9968, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  v42 = v13;
  v14 = (uint64_t *)(a1 + *(int *)(v13 + 36));
  v16 = *v14;
  v15 = v14[1];
  v17 = v14[2];
  v18 = v14[3];
  v19 = v14[4];
  v20 = v14[5];
  swift_beginAccess();
  v21 = *a3;
  v22 = a3[1];
  v36[2] = a3[3];
  v36[1] = a3[4];
  v36[0] = a3[5];
  *a3 = v16;
  a3[1] = v15;
  a3[2] = v17;
  a3[3] = v18;
  a3[4] = v19;
  a3[5] = v20;
  v23 = v16;
  v24 = (uint64_t)v38;
  sub_1BA70A834(v23, v15);
  v25 = v22;
  v26 = v37;
  sub_1BA70ABF4(v21, v25);
  v27 = v39;
  swift_beginAccess();
  sub_1BA4C2DD8(v26, v24, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  sub_1BA6B017C(MEMORY[0x1E0DEE9D8]);
  v28 = *v27;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v27 = v28;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v28 = sub_1BA6A94A8(0, v28[2] + 1, 1, v28);
    *v27 = v28;
  }
  v31 = v28[2];
  v30 = v28[3];
  if (v31 >= v30 >> 1)
  {
    v28 = sub_1BA6A94A8((_QWORD *)(v30 > 1), v31 + 1, 1, v28);
    *v27 = v28;
  }
  v46 = v41;
  v47 = v40;
  v32 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v45);
  sub_1BA4C2DD8(v24, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  v28[2] = v31 + 1;
  sub_1BA4CECCC(&v45, (uint64_t)&v28[5 * v31 + 4]);
  sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  swift_endAccess();
  swift_beginAccess();
  v33 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v33);
  swift_endAccess();
  swift_beginAccess();
  v34 = swift_bridgeObjectRetain();
  sub_1BA7082C0(v34);
  return swift_endAccess();
}

uint64_t sub_1BB29CCD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t *v32;
  uint64_t *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[2];
  _BYTE v42[40];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[10];
  _OWORD v52[7];
  _OWORD v53[2];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  _BYTE v61[40];
  _OWORD v62[6];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v4 = v3;
  v65 = *v3;
  v8 = v65;
  if (*(_QWORD *)(v65 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BA6E35A8(a1, a2);
    if ((v10 & 1) != 0)
    {
      sub_1BA70AF2C(*(_QWORD *)(v65 + 56) + 104 * v9, (uint64_t)&v54, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v55 + 1))
      {
        v38 = v58;
        v39 = v59;
        *(_QWORD *)&v40 = v60;
        v34 = v54;
        v35 = v55;
        v36 = v56;
        v37 = v57;
        goto LABEL_15;
      }
    }
    else
    {
      v60 = 0;
      v58 = 0u;
      v59 = 0u;
      v56 = 0u;
      v57 = 0u;
      v54 = 0u;
      v55 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
    v56 = 0u;
    v57 = 0u;
    v54 = 0u;
    v55 = 0u;
  }
  v17 = v3[1];
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(a1, a2);
    if ((v19 & 1) != 0)
    {
      sub_1BA70AF2C(*(_QWORD *)(v17 + 56) + 104 * v18, (uint64_t)&v34, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      *(_QWORD *)&v40 = 0;
      v38 = 0u;
      v39 = 0u;
      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v40 = 0;
    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
  }
  sub_1BA4A2E80((uint64_t)&v54, (uint64_t (*)(_QWORD))sub_1BA75D984);
  if (!*((_QWORD *)&v35 + 1))
  {
    sub_1BA4A2E80((uint64_t)&v34, (uint64_t (*)(_QWORD))sub_1BA75D984);
    sub_1BA758A4C();
    swift_allocError();
    v12 = v11;
    swift_bridgeObjectRetain();
    sub_1BA781758((uint64_t)&v65);
    v13 = sub_1BA85C6FC(v8);
    sub_1BA4F6CCC((uint64_t)&v65);
    v64 = v4[1];
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1BA85C6FC(v14);
    sub_1BA4F6CCC((uint64_t)&v64);
    *(_QWORD *)v12 = a1;
    *(_QWORD *)(v12 + 8) = a2;
    *(_QWORD *)(v12 + 16) = v13;
    *(_QWORD *)(v12 + 24) = v15;
    *(_BYTE *)(v12 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v62[4] = v38;
  v62[5] = v39;
  v63 = v40;
  v62[0] = v34;
  v62[1] = v35;
  v62[2] = v36;
  v62[3] = v37;
  sub_1BA4C010C((uint64_t)v62, (uint64_t)v61);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B2E30);
  if ((swift_dynamicCast() & 1) != 0)
  {
    nullsub_1(&v54);
    sub_1BA6A09F0((uint64_t)&v54, (uint64_t)v51, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
    sub_1BA6A09F0((uint64_t)v51, (uint64_t)v52, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
    sub_1BA70AF2C((uint64_t)v62, (uint64_t)v42, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    v40 = v52[6];
    v41[0] = v53[0];
    *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v53 + 9);
    v36 = v52[2];
    v37 = v52[3];
    v38 = v52[4];
    v39 = v52[5];
    v34 = v52[0];
    v35 = v52[1];
    v20 = v43;
    v21 = v44;
    v22 = v45;
    v23 = v46;
    v25 = v47;
    v24 = v48;
    v27 = v49;
    v26 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A834(v22, v23);
    sub_1BA70AF8C((uint64_t)v42, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    v28 = v41[0];
    *(_OWORD *)(a3 + 96) = v40;
    *(_OWORD *)(a3 + 112) = v28;
    *(_OWORD *)(a3 + 121) = *(_OWORD *)((char *)v41 + 9);
    v29 = v37;
    *(_OWORD *)(a3 + 32) = v36;
    *(_OWORD *)(a3 + 48) = v29;
    v30 = v39;
    *(_OWORD *)(a3 + 64) = v38;
    *(_OWORD *)(a3 + 80) = v30;
    v31 = v35;
    *(_OWORD *)a3 = v34;
    *(_OWORD *)(a3 + 16) = v31;
    *(_QWORD *)(a3 + 144) = v20;
    *(_QWORD *)(a3 + 152) = v21;
    *(_QWORD *)(a3 + 160) = v22;
    *(_QWORD *)(a3 + 168) = v23;
    *(_QWORD *)(a3 + 176) = v25;
    *(_QWORD *)(a3 + 184) = v24;
    *(_QWORD *)(a3 + 192) = v27;
    *(_QWORD *)(a3 + 200) = v26;
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v33 = v32;
    *v32 = a1;
    v32[1] = a2;
    sub_1BA4C010C((uint64_t)v62, (uint64_t)(v32 + 2));
    *((_BYTE *)v33 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return sub_1BA70AF8C((uint64_t)v62, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
}

uint64_t sub_1BB29D13C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  unint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  _BYTE v35[40];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  char v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  char v63;
  _OWORD v64[6];
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[5];

  v5 = v3;
  v67[0] = *v3;
  v9 = v67[0];
  if (*(_QWORD *)(v67[0] + 16))
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BA6E35A8(a1, a2);
    if ((v11 & 1) != 0)
    {
      sub_1BA70AF2C(*(_QWORD *)(v67[0] + 56) + 104 * v10, (uint64_t)&v44, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v45 + 1))
      {
        v58 = v48;
        v59 = v49;
        *(_QWORD *)&v60 = v50;
        v54 = v44;
        v55 = v45;
        v56 = v46;
        v57 = v47;
        goto LABEL_15;
      }
    }
    else
    {
      *(_QWORD *)&v50 = 0;
      v48 = 0u;
      v49 = 0u;
      v46 = 0u;
      v47 = 0u;
      v44 = 0u;
      v45 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(_QWORD *)&v50 = 0;
    v48 = 0u;
    v49 = 0u;
    v46 = 0u;
    v47 = 0u;
    v44 = 0u;
    v45 = 0u;
  }
  v18 = v3[1];
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = sub_1BA6E35A8(a1, a2);
    if ((v20 & 1) != 0)
    {
      sub_1BA70AF2C(*(_QWORD *)(v18 + 56) + 104 * v19, (uint64_t)&v54, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      *(_QWORD *)&v60 = 0;
      v58 = 0u;
      v59 = 0u;
      v56 = 0u;
      v57 = 0u;
      v54 = 0u;
      v55 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v60 = 0;
    v58 = 0u;
    v59 = 0u;
    v56 = 0u;
    v57 = 0u;
    v54 = 0u;
    v55 = 0u;
  }
  sub_1BA4A2E80((uint64_t)&v44, (uint64_t (*)(_QWORD))sub_1BA75D984);
  if (!*((_QWORD *)&v55 + 1))
  {
    sub_1BA4A2E80((uint64_t)&v54, (uint64_t (*)(_QWORD))sub_1BA75D984);
    sub_1BA758A4C();
    swift_allocError();
    v13 = v12;
    swift_bridgeObjectRetain();
    sub_1BA781758((uint64_t)v67);
    v14 = sub_1BA85C6FC(v9);
    sub_1BA4F6CCC((uint64_t)v67);
    v66 = v5[1];
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA85C6FC(v15);
    sub_1BA4F6CCC((uint64_t)&v66);
    *(_QWORD *)v13 = a1;
    *(_QWORD *)(v13 + 8) = a2;
    *(_QWORD *)(v13 + 16) = v14;
    *(_QWORD *)(v13 + 24) = v16;
    *(_BYTE *)(v13 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v64[4] = v58;
  v64[5] = v59;
  v65 = v60;
  v64[0] = v54;
  v64[1] = v55;
  v64[2] = v56;
  v64[3] = v57;
  sub_1BA4C010C((uint64_t)v64, (uint64_t)v35);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B2E30);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v60 = v50;
    v61 = v51;
    v62 = v52;
    v63 = v53;
    v56 = v46;
    v57 = v47;
    v58 = v48;
    v59 = v49;
    v54 = v44;
    v55 = v45;
    sub_1BA6A955C((uint64_t)&v54, (uint64_t)&v44);
    sub_1BA70AF2C((uint64_t)v64, (uint64_t)v35, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    v21 = v51;
    *(_OWORD *)(a3 + 96) = v50;
    *(_OWORD *)(a3 + 112) = v21;
    *(_OWORD *)(a3 + 128) = v52;
    *(_BYTE *)(a3 + 144) = v53;
    v22 = v47;
    *(_OWORD *)(a3 + 32) = v46;
    *(_OWORD *)(a3 + 48) = v22;
    v23 = v49;
    *(_OWORD *)(a3 + 64) = v48;
    *(_OWORD *)(a3 + 80) = v23;
    v24 = v45;
    *(_OWORD *)a3 = v44;
    *(_OWORD *)(a3 + 16) = v24;
    v25 = v36;
    v26 = v37;
    v67[4] = v4;
    v27 = v38;
    v28 = v39;
    v30 = v40;
    v29 = v41;
    v32 = v42;
    v31 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A834(v27, v28);
    sub_1BA70AF8C((uint64_t)v35, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    *(_QWORD *)(a3 + 152) = v25;
    *(_QWORD *)(a3 + 160) = v26;
    *(_QWORD *)(a3 + 168) = v27;
    *(_QWORD *)(a3 + 176) = v28;
    *(_QWORD *)(a3 + 184) = v30;
    *(_QWORD *)(a3 + 192) = v29;
    *(_QWORD *)(a3 + 200) = v32;
    *(_QWORD *)(a3 + 208) = v31;
    sub_1BA6A94C4((uint64_t)&v54);
  }
  else
  {
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    v46 = 0u;
    v44 = 0u;
    v45 = 0u;
    sub_1BA66EA88((uint64_t)&v44, &qword_1ED3C1098, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA758A4C();
    swift_allocError();
    v34 = v33;
    *v33 = a1;
    v33[1] = a2;
    sub_1BA4C010C((uint64_t)v64, (uint64_t)(v33 + 2));
    *((_BYTE *)v34 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return sub_1BA70AF8C((uint64_t)v64, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
}

uint64_t sub_1BB29D5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  unint64_t v19;
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  _BYTE v36[40];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  _OWORD v67[6];
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[5];

  v5 = v3;
  v70[0] = *v3;
  v9 = v70[0];
  if (*(_QWORD *)(v70[0] + 16))
  {
    swift_bridgeObjectRetain();
    v10 = sub_1BA6E35A8(a1, a2);
    if ((v11 & 1) != 0)
    {
      sub_1BA70AF2C(*(_QWORD *)(v70[0] + 56) + 104 * v10, (uint64_t)&v45, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v46 + 1))
      {
        v60 = v49;
        v61 = v50;
        *(_QWORD *)&v62 = v51;
        v56 = v45;
        v57 = v46;
        v58 = v47;
        v59 = v48;
        goto LABEL_15;
      }
    }
    else
    {
      *(_QWORD *)&v51 = 0;
      v49 = 0u;
      v50 = 0u;
      v47 = 0u;
      v48 = 0u;
      v45 = 0u;
      v46 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    *(_QWORD *)&v51 = 0;
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    v45 = 0u;
    v46 = 0u;
  }
  v18 = v3[1];
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = sub_1BA6E35A8(a1, a2);
    if ((v20 & 1) != 0)
    {
      sub_1BA70AF2C(*(_QWORD *)(v18 + 56) + 104 * v19, (uint64_t)&v56, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      *(_QWORD *)&v62 = 0;
      v60 = 0u;
      v61 = 0u;
      v58 = 0u;
      v59 = 0u;
      v56 = 0u;
      v57 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)&v62 = 0;
    v60 = 0u;
    v61 = 0u;
    v58 = 0u;
    v59 = 0u;
    v56 = 0u;
    v57 = 0u;
  }
  sub_1BA4A2E80((uint64_t)&v45, (uint64_t (*)(_QWORD))sub_1BA75D984);
  if (!*((_QWORD *)&v57 + 1))
  {
    sub_1BA4A2E80((uint64_t)&v56, (uint64_t (*)(_QWORD))sub_1BA75D984);
    sub_1BA758A4C();
    swift_allocError();
    v13 = v12;
    swift_bridgeObjectRetain();
    sub_1BA781758((uint64_t)v70);
    v14 = sub_1BA85C6FC(v9);
    sub_1BA4F6CCC((uint64_t)v70);
    v69 = v5[1];
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA85C6FC(v15);
    sub_1BA4F6CCC((uint64_t)&v69);
    *(_QWORD *)v13 = a1;
    *(_QWORD *)(v13 + 8) = a2;
    *(_QWORD *)(v13 + 16) = v14;
    *(_QWORD *)(v13 + 24) = v16;
    *(_BYTE *)(v13 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v67[4] = v60;
  v67[5] = v61;
  v68 = v62;
  v67[0] = v56;
  v67[1] = v57;
  v67[2] = v58;
  v67[3] = v59;
  sub_1BA4C010C((uint64_t)v67, (uint64_t)v36);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B2E30);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v64 = v53;
    v65 = v54;
    v66 = v55;
    v60 = v49;
    v61 = v50;
    v62 = v51;
    v63 = v52;
    v56 = v45;
    v57 = v46;
    v58 = v47;
    v59 = v48;
    sub_1BA93EB58((uint64_t)&v56, (uint64_t)&v45);
    sub_1BA70AF2C((uint64_t)v67, (uint64_t)v36, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    v21 = v54;
    *(_OWORD *)(a3 + 128) = v53;
    *(_OWORD *)(a3 + 144) = v21;
    *(_QWORD *)(a3 + 160) = v55;
    v22 = v50;
    *(_OWORD *)(a3 + 64) = v49;
    *(_OWORD *)(a3 + 80) = v22;
    v23 = v52;
    *(_OWORD *)(a3 + 96) = v51;
    *(_OWORD *)(a3 + 112) = v23;
    v24 = v46;
    *(_OWORD *)a3 = v45;
    *(_OWORD *)(a3 + 16) = v24;
    v25 = v48;
    *(_OWORD *)(a3 + 32) = v47;
    *(_OWORD *)(a3 + 48) = v25;
    v26 = v37;
    v27 = v38;
    v70[4] = v4;
    v28 = v39;
    v29 = v40;
    v31 = v41;
    v30 = v42;
    v33 = v43;
    v32 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A834(v28, v29);
    sub_1BA70AF8C((uint64_t)v36, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    *(_QWORD *)(a3 + 168) = v26;
    *(_QWORD *)(a3 + 176) = v27;
    *(_QWORD *)(a3 + 184) = v28;
    *(_QWORD *)(a3 + 192) = v29;
    *(_QWORD *)(a3 + 200) = v31;
    *(_QWORD *)(a3 + 208) = v30;
    *(_QWORD *)(a3 + 216) = v33;
    *(_QWORD *)(a3 + 224) = v32;
    sub_1BA93EBE8((uint64_t)&v56);
  }
  else
  {
    v55 = 0;
    v53 = 0u;
    v54 = 0u;
    v51 = 0u;
    v52 = 0u;
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    v45 = 0u;
    v46 = 0u;
    sub_1BA66EA88((uint64_t)&v45, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA758A4C();
    swift_allocError();
    v35 = v34;
    *v34 = a1;
    v34[1] = a2;
    sub_1BA4C010C((uint64_t)v67, (uint64_t)(v34 + 2));
    *((_BYTE *)v35 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return sub_1BA70AF8C((uint64_t)v67, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
}

uint64_t sub_1BB29DA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t *v25;
  uint64_t *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  _BYTE v33[40];
  __int128 v34;
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _OWORD v47[6];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = v3;
  v50 = *v3;
  v8 = v50;
  if (*(_QWORD *)(v50 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BA6E35A8(a1, a2);
    if ((v10 & 1) != 0)
    {
      sub_1BA70AF2C(*(_QWORD *)(v50 + 56) + 104 * v9, (uint64_t)&v34, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v35[0] + 1))
      {
        v44 = v37;
        v45 = v38;
        v46 = v39;
        v40 = v34;
        v41 = v35[0];
        v42 = v35[1];
        v43 = v36;
        goto LABEL_15;
      }
    }
    else
    {
      v39 = 0;
      v37 = 0u;
      v38 = 0u;
      v36 = 0u;
      v34 = 0u;
      memset(v35, 0, sizeof(v35));
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
    v36 = 0u;
    v34 = 0u;
    memset(v35, 0, sizeof(v35));
  }
  v17 = v3[1];
  if (*(_QWORD *)(v17 + 16))
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BA6E35A8(a1, a2);
    if ((v19 & 1) != 0)
    {
      sub_1BA70AF2C(*(_QWORD *)(v17 + 56) + 104 * v18, (uint64_t)&v40, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      v46 = 0;
      v44 = 0u;
      v45 = 0u;
      v42 = 0u;
      v43 = 0u;
      v40 = 0u;
      v41 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v46 = 0;
    v44 = 0u;
    v45 = 0u;
    v42 = 0u;
    v43 = 0u;
    v40 = 0u;
    v41 = 0u;
  }
  sub_1BA4A2E80((uint64_t)&v34, (uint64_t (*)(_QWORD))sub_1BA75D984);
  if (!*((_QWORD *)&v41 + 1))
  {
    sub_1BA4A2E80((uint64_t)&v40, (uint64_t (*)(_QWORD))sub_1BA75D984);
    sub_1BA758A4C();
    swift_allocError();
    v12 = v11;
    swift_bridgeObjectRetain();
    sub_1BA781758((uint64_t)&v50);
    v13 = sub_1BA85C6FC(v8);
    sub_1BA4F6CCC((uint64_t)&v50);
    v49 = v4[1];
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1BA85C6FC(v14);
    sub_1BA4F6CCC((uint64_t)&v49);
    *(_QWORD *)v12 = a1;
    *(_QWORD *)(v12 + 8) = a2;
    *(_QWORD *)(v12 + 16) = v13;
    *(_QWORD *)(v12 + 24) = v15;
    *(_BYTE *)(v12 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v47[4] = v44;
  v47[5] = v45;
  v48 = v46;
  v47[0] = v40;
  v47[1] = v41;
  v47[2] = v42;
  v47[3] = v43;
  sub_1BA4C010C((uint64_t)v47, (uint64_t)v33);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B2E30);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v28 = *((_QWORD *)&v34 + 1);
    v29 = v34;
    v27 = v35[0];
    v32 = *(_OWORD *)((char *)v35 + 8);
    v31 = *((_QWORD *)&v35[1] + 1);
    v30 = v36;
    sub_1BA70AF2C((uint64_t)v47, (uint64_t)&v40, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    v20 = *((_QWORD *)&v42 + 1);
    v21 = v43;
    v22 = v44;
    v24 = v45;
    v23 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A834(*((uint64_t *)&v21 + 1), v22);
    sub_1BA70AF8C((uint64_t)&v40, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    *(_QWORD *)a3 = v29;
    *(_QWORD *)(a3 + 8) = v28;
    *(_BYTE *)(a3 + 16) = v27 & 1;
    *(_OWORD *)(a3 + 24) = v32;
    *(_QWORD *)(a3 + 40) = v31;
    *(_OWORD *)(a3 + 48) = v30;
    *(_QWORD *)(a3 + 64) = v20;
    *(_OWORD *)(a3 + 72) = v21;
    *(_OWORD *)(a3 + 88) = v22;
    *(_OWORD *)(a3 + 104) = v24;
    *(_QWORD *)(a3 + 120) = v23;
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v26 = v25;
    *v25 = a1;
    v25[1] = a2;
    sub_1BA4C010C((uint64_t)v47, (uint64_t)(v25 + 2));
    *((_BYTE *)v26 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return sub_1BA70AF8C((uint64_t)v47, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
}

uint64_t sub_1BB29DE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  _QWORD *v52;
  _QWORD *v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  unint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  _OWORD v77[6];
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v9 = v6;
  v59 = a6;
  v60 = a3;
  sub_1BA4B07F0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  v58 = v12;
  MEMORY[0x1E0C80A78](v12);
  v57 = (uint64_t)&v54 - v13;
  v56 = a5;
  sub_1BA4B07F0(0, a5, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v54 - v16;
  v18 = a4;
  v19 = ((uint64_t (*)(_QWORD, double))a4)(0, v15);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v55 = (uint64_t)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v61 = (uint64_t)&v54 - v23;
  v62 = a1;
  v80 = *v9;
  v24 = v80;
  if (*(_QWORD *)(v80 + 16))
  {
    swift_bridgeObjectRetain();
    v25 = sub_1BA6E35A8(a1, a2);
    if ((v26 & 1) != 0)
    {
      sub_1BA70AF2C(*(_QWORD *)(v24 + 56) + 104 * v25, (uint64_t)&v63, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v64 + 1))
      {
        v74 = v67;
        v75 = v68;
        v76 = v69;
        v70 = v63;
        v71 = v64;
        v72 = v65;
        v73 = v66;
        goto LABEL_15;
      }
    }
    else
    {
      v69 = 0;
      v67 = 0u;
      v68 = 0u;
      v65 = 0u;
      v66 = 0u;
      v63 = 0u;
      v64 = 0u;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v69 = 0;
    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
  }
  v33 = v9[1];
  if (*(_QWORD *)(v33 + 16))
  {
    swift_bridgeObjectRetain();
    v34 = sub_1BA6E35A8(v62, a2);
    if ((v35 & 1) != 0)
    {
      sub_1BA70AF2C(*(_QWORD *)(v33 + 56) + 104 * v34, (uint64_t)&v70, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      v76 = 0;
      v74 = 0u;
      v75 = 0u;
      v72 = 0u;
      v73 = 0u;
      v70 = 0u;
      v71 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v76 = 0;
    v74 = 0u;
    v75 = 0u;
    v72 = 0u;
    v73 = 0u;
    v70 = 0u;
    v71 = 0u;
  }
  sub_1BA4A2E80((uint64_t)&v63, (uint64_t (*)(_QWORD))sub_1BA75D984);
  if (!*((_QWORD *)&v71 + 1))
  {
    sub_1BA4A2E80((uint64_t)&v70, (uint64_t (*)(_QWORD))sub_1BA75D984);
    sub_1BA758A4C();
    swift_allocError();
    v28 = v27;
    swift_bridgeObjectRetain();
    sub_1BA781758((uint64_t)&v80);
    v29 = sub_1BA85C6FC(v24);
    sub_1BA4F6CCC((uint64_t)&v80);
    v79 = v9[1];
    v30 = swift_bridgeObjectRetain();
    v31 = sub_1BA85C6FC(v30);
    sub_1BA4F6CCC((uint64_t)&v79);
    *(_QWORD *)v28 = v62;
    *(_QWORD *)(v28 + 8) = a2;
    *(_QWORD *)(v28 + 16) = v29;
    *(_QWORD *)(v28 + 24) = v31;
    *(_BYTE *)(v28 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v77[4] = v74;
  v77[5] = v75;
  v78 = v76;
  v77[0] = v70;
  v77[1] = v71;
  v77[2] = v72;
  v77[3] = v73;
  sub_1BA4C010C((uint64_t)v77, (uint64_t)&v70);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B2E30);
  v36 = swift_dynamicCast();
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  if ((v36 & 1) != 0)
  {
    v37(v17, 0, 1, v19);
    v38 = (uint64_t)v17;
    v39 = v61;
    v40 = v18;
    sub_1BA5193C4(v38, v61, v18);
    v41 = v39;
    v42 = v55;
    v54 = v18;
    sub_1BA4C2DD8(v41, v55, v18);
    sub_1BA70AF2C((uint64_t)v77, (uint64_t)&v70, (unint64_t *)&qword_1ED3BE980, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    v43 = v57;
    sub_1BA5193C4(v42, v57, v40);
    v44 = v58;
    v45 = v73;
    *(_QWORD *)(v43 + *(int *)(v58 + 28)) = *((_QWORD *)&v72 + 1);
    *(_QWORD *)(v43 + *(int *)(v44 + 32)) = v45;
    v46 = *((_QWORD *)&v73 + 1);
    v47 = v74;
    v49 = v75;
    v48 = v76;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A834(v46, v47);
    sub_1BA70AF8C((uint64_t)&v70, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    v50 = v43 + *(int *)(v44 + 36);
    *(_QWORD *)v50 = v46;
    *(_OWORD *)(v50 + 8) = v47;
    *(_OWORD *)(v50 + 24) = v49;
    *(_QWORD *)(v50 + 40) = v48;
    v51 = v54;
    sub_1BB29EDCC(v43, v59, v60, v54);
    sub_1BA4A2E80(v61, v51);
  }
  else
  {
    v37(v17, 1, 1, v19);
    sub_1BA6B0510((uint64_t)v17, v56, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BA758A4C();
    swift_allocError();
    v53 = v52;
    *v52 = v62;
    v52[1] = a2;
    sub_1BA4C010C((uint64_t)v77, (uint64_t)(v52 + 2));
    *((_BYTE *)v53 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return sub_1BA70AF8C((uint64_t)v77, (unint64_t *)&qword_1ED3BE980, (unint64_t *)&qword_1ED3B2E30, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
}

uint64_t sub_1BB29E414(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  char isUniquelyReferenced_nonNull_native;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[40];
  char v67[8];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _OWORD v75[4];
  _OWORD v76[5];
  char v77;

  v2 = v1;
  v57 = *v2;
  v4 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v6;
  v7 = *(_OWORD *)(a1 + 48);
  v76[2] = *(_OWORD *)(a1 + 32);
  v76[3] = v7;
  v76[4] = *(_OWORD *)(a1 + 64);
  v77 = *(_BYTE *)(a1 + 80);
  v8 = *(_OWORD *)(a1 + 16);
  v76[0] = *(_OWORD *)a1;
  v76[1] = v8;
  v9 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  v10 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB29F84C((uint64_t)v76);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v75[0] = v9;
  sub_1BB4BE138((uint64_t)v76, v10, *((uint64_t *)&v10 + 1), isUniquelyReferenced_nonNull_native);
  v59 = *(_QWORD *)&v75[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  v12 = *((_BYTE *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  v13 = *((_BYTE *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  v14 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  v15 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  v16 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
  v17 = *(void **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  v18 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  v53 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  v54 = v18;
  v52 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  v67[0] = v12;
  v67[1] = v13;
  v68 = v14;
  v69 = v15;
  v70 = v16;
  v71 = v17;
  v72 = v18;
  v73 = v53;
  v74 = v52;
  v60 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  v55 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  v19 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  v20 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  v21 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  v75[2] = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  v75[3] = v21;
  v22 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v75[0] = v19;
  v75[1] = v20;
  v51 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  v23 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  sub_1BA70AF2C((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v66, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v24 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  v25 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  v26 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  v44 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  v45 = v26;
  v27 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  v42 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  v43 = v27;
  v28 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  v41 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(_QWORD *)&v61 = v26;
  *((_QWORD *)&v61 + 1) = v44;
  v62 = v27;
  v63 = v42;
  v64 = v28;
  v65 = v41;
  v29 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  v56 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  v47 = v29;
  v48 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  v30 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  v50 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  v46 = v30;
  v31 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  v32 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  v49 = v31;
  v57 = swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1BA70A884(v16, v17);
  swift_retain();
  v33 = v55;
  swift_retain();
  sub_1BA70A8DC((uint64_t)v75);
  swift_bridgeObjectRetain();
  v34 = v51;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA70A834(v45, v44);
  v35 = v32;
  swift_bridgeObjectRetain();
  v36 = v47;
  swift_bridgeObjectRetain();
  v37 = v48;
  swift_retain();
  v38 = swift_bridgeObjectRetain();
  return sub_1BB29AEAC((uint64_t)v58, v67, v60, v33, v75, v22, v34, v23, (uint64_t)v66, v24, v25, &v61, v59, v56, v36, v37, v50, v38, v49,
           v35);
}

uint64_t sub_1BB29E7C4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[40];
  char v57[8];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v5);
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8 = a1[1];
  if (v8)
  {
    v50 = a1[3];
    v47 = (_QWORD *)a1[2];
    v9 = *a1;
    v49 = (uint64_t)v39 - v7;
    sub_1BA4C2DD8((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)v39 - v7, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v10 = *((_BYTE *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    v12 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
    v14 = *(void **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    v15 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
    v16 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
    v17 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
    v57[0] = *((_BYTE *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    v57[1] = v10;
    v58 = v12;
    v59 = v11;
    v60 = v13;
    v61 = v14;
    v62 = v15;
    v63 = v16;
    v64 = v17;
    *(_QWORD *)&v65 = v9;
    v48 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
    v46 = v4;
    *((_QWORD *)&v65 + 1) = v8;
    *(_QWORD *)&v66 = v47;
    *((_QWORD *)&v66 + 1) = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A884(v13, v14);
    swift_retain();
    v47 = sub_1BB58CD54((uint64_t *)&v65);
    swift_bridgeObjectRelease();
    v18 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
    v65 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
    v66 = v18;
    v19 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
    v20 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
    v50 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
    v67 = v19;
    v68 = v20;
    v21 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
    v22 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
    sub_1BA70AF2C((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v56, qword_1ED3B2E38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v24 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    v23 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
    v25 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
    v39[0] = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
    v26 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
    v27 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    v29 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
    v28 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
    *(_QWORD *)&v51 = v25;
    *((_QWORD *)&v51 + 1) = v39[0];
    v52 = v26;
    v53 = v27;
    v54 = v29;
    v55 = v28;
    v42 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
    v30 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    v45 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    v40 = v30;
    v41 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
    v31 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    v44 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    v39[1] = v31;
    v32 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
    v33 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
    v43 = v32;
    v46 = swift_allocObject();
    sub_1BA70A8DC((uint64_t)&v65);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA70A834(v25, v39[0]);
    swift_bridgeObjectRetain();
    v34 = v42;
    swift_bridgeObjectRetain();
    v35 = v40;
    swift_bridgeObjectRetain();
    v36 = v41;
    swift_retain();
    v37 = swift_bridgeObjectRetain();
    return sub_1BB29AEAC(v49, v57, v48, (uint64_t)v47, &v65, v50, v21, v22, (uint64_t)v56, v24, v23, &v51, v34, v45, v35, v36, v44, v37, v43,
             v33);
  }
  else
  {
    swift_retain();
  }
  return (uint64_t)v2;
}

uint64_t sub_1BB29EBE4()
{
  return type metadata accessor for FormatNodeContext();
}

uint64_t method lookup function for FormatNodeContext()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB29EBF8()
{
  return objectdestroy_6Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BB29EC04()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB29EC28()
{
  return objectdestroy_6Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

_QWORD *sub_1BB29EC34(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[10];
  v3 = a1[11];
  sub_1BA6E0CBC(a1[3], a1[4]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70ABF4(v2, v3);
  return a1;
}

uint64_t sub_1BB29ECDC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(void **)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 128);
  v10 = *(_QWORD *)(a1 + 120);
  v11 = *(_QWORD *)(a1 + 168);
  v12 = *(_QWORD *)(a1 + 160);

  swift_bridgeObjectRelease();
  sub_1BA7B9D78(v3, v4, v5, v6, v7);
  sub_1BA6E0CBC(v10, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA70ABF4(v12, v11);
  return a1;
}

uint64_t sub_1BB29EDCC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BA4B07F0(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BB29EE24()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB29EE88()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

uint64_t sub_1BB29EEE4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 128))
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  if (*(_QWORD *)(v0 + 168))
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return swift_deallocObject();
}

uint64_t sub_1BB29EF50()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB29EF8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int64_t v13;
  __n128 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  int64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int64_t v49;

  v3 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
  sub_1BB29FAAC(0, (unint64_t *)&qword_1EF2AC670, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v44 - v7;
  sub_1BB29FB0C(0, &qword_1EF2C0148, (unint64_t *)&qword_1EF2AC670, v3);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14.n128_f64[0] = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v44 - v13;
  v16 = *v1;
  v17 = v1[1];
  v19 = v1[2];
  v18 = v1[3];
  v20 = v18;
  v21 = v1[4];
  v44 = v8;
  if (v21)
  {
    v48 = v11;
    v49 = v18;
    v45 = v19;
    v46 = v17;
    v22 = v6;
    v47 = a1;
    v23 = (v21 - 1) & v21;
    v24 = __clz(__rbit64(v21)) | (v18 << 6);
LABEL_3:
    v25 = *(_QWORD *)(v16 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * v24);
    v27 = v16;
    v29 = *v26;
    v28 = v26[1];
    v30 = sub_1BB86E710();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(&v15[*(int *)(v5 + 48)], v25 + *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72) * v24, v30);
    *(_QWORD *)v15 = v29;
    *((_QWORD *)v15 + 1) = v28;
    v6 = v22;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v15, 0, 1, v5);
    v16 = v27;
    swift_bridgeObjectRetain();
    a1 = v47;
    v11 = v48;
    v19 = v45;
    v17 = v46;
    goto LABEL_25;
  }
  v31 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
    __break(1u);
LABEL_23:
    v20 = v13;
    goto LABEL_24;
  }
  v32 = (unint64_t)(v19 + 64) >> 6;
  if (v31 < v32)
  {
    v33 = *(_QWORD *)(v17 + 8 * v31);
    if (v33)
    {
LABEL_7:
      v45 = v19;
      v46 = v17;
      v47 = a1;
      v48 = v11;
      v22 = v6;
      v23 = (v33 - 1) & v33;
      v24 = __clz(__rbit64(v33)) + (v31 << 6);
      v49 = v31;
      goto LABEL_3;
    }
    v34 = v18 + 2;
    v20 = v18 + 1;
    if (v18 + 2 < v32)
    {
      v33 = *(_QWORD *)(v17 + 8 * v34);
      if (v33)
      {
LABEL_10:
        v31 = v34;
        goto LABEL_7;
      }
      v20 = v18 + 2;
      if (v18 + 3 < v32)
      {
        v33 = *(_QWORD *)(v17 + 8 * (v18 + 3));
        if (v33)
        {
          v31 = v18 + 3;
          goto LABEL_7;
        }
        v34 = v18 + 4;
        v20 = v18 + 3;
        if (v18 + 4 < v32)
        {
          v33 = *(_QWORD *)(v17 + 8 * v34);
          if (v33)
            goto LABEL_10;
          v31 = v18 + 5;
          v20 = v18 + 4;
          if (v18 + 5 < v32)
          {
            v33 = *(_QWORD *)(v17 + 8 * v31);
            if (v33)
              goto LABEL_7;
            v13 = v32 - 1;
            v35 = v18 + 6;
            while (v32 != v35)
            {
              v33 = *(_QWORD *)(v17 + 8 * v35++);
              if (v33)
              {
                v31 = v35 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v49 = v20;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v15, 1, 1, v5, v14);
  v23 = 0;
LABEL_25:
  *v1 = v16;
  v1[1] = v17;
  v36 = v49;
  v1[2] = v19;
  v1[3] = v36;
  v1[4] = v23;
  v37 = (void (*)(uint64_t))v1[5];
  sub_1BB29FB60((uint64_t)v15, (uint64_t)v11, &qword_1EF2C0148, (unint64_t *)&qword_1EF2AC670, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_1BA7AD210(0, (unint64_t *)&qword_1ED3AF7C8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(a1, 1, 1, v38);
  }
  else
  {
    v40 = (void (*)(uint64_t))MEMORY[0x1E0DB48B0];
    v41 = (uint64_t)v11;
    v42 = (uint64_t)v44;
    sub_1BB29FA24(v41, (uint64_t)v44, (unint64_t *)&qword_1EF2AC670, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    v37(v42);
    sub_1BB29FA70(v42, (unint64_t *)&qword_1EF2AC670, v40);
    sub_1BA7AD210(0, (unint64_t *)&qword_1ED3AF7C8, v40);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a1, 0, 1, v43);
  }
}

uint64_t sub_1BB29F324()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v11(&v19, v20);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_1BB29F4B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int64_t v12;
  __n128 v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  int64_t v47;

  sub_1BB29FAAC(0, (unint64_t *)&qword_1ED3A2EB0, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v42 - v6;
  sub_1BB29FB0C(0, &qword_1ED3A2EB8, (unint64_t *)&qword_1ED3A2EB0, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.n128_f64[0] = MEMORY[0x1E0C80A78](v11);
  v14 = (char **)((char *)&v42 - v12);
  v15 = *v1;
  v16 = v1[1];
  v18 = v1[2];
  v17 = v1[3];
  v19 = v17;
  v20 = v1[4];
  v42 = v7;
  if (v20)
  {
    v46 = v10;
    v47 = v17;
    v43 = v18;
    v44 = v16;
    v21 = v5;
    v45 = a1;
    v22 = (v20 - 1) & v20;
    v23 = __clz(__rbit64(v20)) | (v17 << 6);
LABEL_3:
    v24 = *(_QWORD *)(v15 + 56);
    v25 = (uint64_t *)(*(_QWORD *)(v15 + 48) + 16 * v23);
    v26 = v15;
    v28 = *v25;
    v27 = v25[1];
    v29 = type metadata accessor for FeedClusteringOptions(0);
    sub_1BA4C2DD8(v24 + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v23, (uint64_t)v14 + *(int *)(v4 + 48), type metadata accessor for FeedClusteringOptions);
    *v14 = v28;
    v14[1] = v27;
    v5 = v21;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v14, 0, 1, v4);
    v15 = v26;
    swift_bridgeObjectRetain();
    a1 = v45;
    v10 = v46;
    v18 = v43;
    v16 = v44;
    goto LABEL_25;
  }
  v30 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
LABEL_23:
    v19 = v12;
    goto LABEL_24;
  }
  v31 = (unint64_t)(v18 + 64) >> 6;
  if (v30 < v31)
  {
    v32 = *(_QWORD *)(v16 + 8 * v30);
    if (v32)
    {
LABEL_7:
      v43 = v18;
      v44 = v16;
      v45 = a1;
      v46 = v10;
      v21 = v5;
      v22 = (v32 - 1) & v32;
      v23 = __clz(__rbit64(v32)) + (v30 << 6);
      v47 = v30;
      goto LABEL_3;
    }
    v33 = v17 + 2;
    v19 = v17 + 1;
    if (v17 + 2 < v31)
    {
      v32 = *(_QWORD *)(v16 + 8 * v33);
      if (v32)
      {
LABEL_10:
        v30 = v33;
        goto LABEL_7;
      }
      v19 = v17 + 2;
      if (v17 + 3 < v31)
      {
        v32 = *(_QWORD *)(v16 + 8 * (v17 + 3));
        if (v32)
        {
          v30 = v17 + 3;
          goto LABEL_7;
        }
        v33 = v17 + 4;
        v19 = v17 + 3;
        if (v17 + 4 < v31)
        {
          v32 = *(_QWORD *)(v16 + 8 * v33);
          if (v32)
            goto LABEL_10;
          v30 = v17 + 5;
          v19 = v17 + 4;
          if (v17 + 5 < v31)
          {
            v32 = *(_QWORD *)(v16 + 8 * v30);
            if (v32)
              goto LABEL_7;
            v12 = v31 - 1;
            v34 = v17 + 6;
            while (v31 != v34)
            {
              v32 = *(_QWORD *)(v16 + 8 * v34++);
              if (v32)
              {
                v30 = v34 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v47 = v19;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v14, 1, 1, v4, v13);
  v22 = 0;
LABEL_25:
  *v1 = v15;
  v1[1] = v16;
  v35 = v47;
  v1[2] = v18;
  v1[3] = v35;
  v1[4] = v22;
  v36 = (void (*)(uint64_t))v1[5];
  sub_1BB29FB60((uint64_t)v14, (uint64_t)v10, &qword_1ED3A2EB8, (unint64_t *)&qword_1ED3A2EB0, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1BA7AD210(0, (unint64_t *)&qword_1ED3A1008, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(a1, 1, 1, v37);
  }
  else
  {
    v39 = (uint64_t)v10;
    v40 = (uint64_t)v42;
    sub_1BB29FA24(v39, (uint64_t)v42, (unint64_t *)&qword_1ED3A2EB0, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    v36(v40);
    sub_1BB29FA70(v40, (unint64_t *)&qword_1ED3A2EB0, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    sub_1BA7AD210(0, (unint64_t *)&qword_1ED3A1008, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(a1, 0, 1, v41);
  }
}

uint64_t sub_1BB29F84C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_BYTE *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA7261E0(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_1BB29F8D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for GroupLayoutContext();
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  v3 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = v2 + *(int *)(v1 + 20);
  v5 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v2 + *(int *)(v1 + 24);
  if (*(_QWORD *)(v6 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v8 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = sub_1BB8705C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB29FA24(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BB29FAAC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BB29FA70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BB29FAAC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BB29FAAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_1BB29FB0C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BB29FAAC(255, a3, a4);
    v5 = sub_1BB873A2C();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BB29FB60(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v7;

  sub_1BB29FB0C(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BB29FBB8(_QWORD *a1)
{
  return FormatAnimationNodeAnimation.encode(to:)(a1);
}

BOOL _s8NewsFeed019FormatAnimationNodeD0O2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *a1;
  v3 = *a2;
  v4 = (unint64_t)*a1 >> 62;
  if ((_DWORD)v4)
  {
    if ((_DWORD)v4 == 1)
    {
      if (v3 >> 62 == 1)
      {
        v5 = *(_QWORD *)(v2 + 16);
        v6 = *(_QWORD *)(v3 + 16);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v7 = _s8NewsFeed025FormatAnimationNodeSpringD0C2eeoiySbAC_ACtFZ_0(v5, v6);
LABEL_9:
        v10 = v7;
        goto LABEL_10;
      }
    }
    else if (v3 >> 62 == 2)
    {
      v11 = *(_QWORD *)(v2 + 16);
      v12 = *(_QWORD *)(v3 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v7 = _s8NewsFeed024FormatAnimationNodeGroupD0C2eeoiySbAC_ACtFZ_0(v11, v12);
      goto LABEL_9;
    }
    return 0;
  }
  if (v3 >> 62)
    return 0;
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v3 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v10 = _s8NewsFeed024FormatAnimationNodeBasicD0C2eeoiySbAC_ACtFZ_0(v8, v9);
LABEL_10:
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v10;
}

unint64_t sub_1BB29FD20(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB29FD44();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB29FD44()
{
  unint64_t result;

  result = qword_1EF2C0150;
  if (!qword_1EF2C0150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeAnimation, &type metadata for FormatAnimationNodeAnimation);
    atomic_store(result, (unint64_t *)&qword_1EF2C0150);
  }
  return result;
}

unint64_t sub_1BB29FD88(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA83F0C8();
  a1[2] = sub_1BAE812C8();
  result = sub_1BB29FDBC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB29FDBC()
{
  unint64_t result;

  result = qword_1EF2C0158;
  if (!qword_1EF2C0158)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeAnimation, &type metadata for FormatAnimationNodeAnimation);
    atomic_store(result, (unint64_t *)&qword_1EF2C0158);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAnimationNodeAnimation()
{
  return &type metadata for FormatAnimationNodeAnimation;
}

uint64_t dispatch thunk of FeedGroupDebuggerType.debug(groupIdentifier:debugGroupIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t FeedJournalConfigEntry.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  return sub_1BA92F1BC(a3, (uint64_t)(a4 + 2));
}

uint64_t initializeWithCopy for FeedJournalConfigEntry(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2 + 2;
  v6 = a2[5];
  swift_bridgeObjectRetain();
  if (v6)
  {
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, _QWORD *, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
  }
  else
  {
    v8 = *((_OWORD *)v5 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = v5[4];
  }
  return a1;
}

uint64_t assignWithCopy for FeedJournalConfigEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 40) = v4;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 16, a2 + 16);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 16);
    v6 = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  return a1;
}

uint64_t assignWithTake for FeedJournalConfigEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for FeedJournalConfigEntry()
{
  return &type metadata for FeedJournalConfigEntry;
}

uint64_t AlertSubscriptionLimitReached.title.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

uint64_t AlertSubscriptionLimitReached.message.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

uint64_t AlertSubscriptionLimitReached.acceptButton.getter()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

uint64_t sub_1BB2A0210()
{
  return AlertSubscriptionLimitReached.title.getter();
}

uint64_t sub_1BB2A0224()
{
  return AlertSubscriptionLimitReached.message.getter();
}

uint64_t sub_1BB2A0258()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

ValueMetadata *type metadata accessor for AlertSubscriptionLimitReached()
{
  return &type metadata for AlertSubscriptionLimitReached;
}

uint64_t static FormatHeadlineBinding.LayeredMedia.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatHeadlineBinding.LayeredMedia.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatHeadlineBinding.LayeredMedia.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB2A03A0()
{
  unint64_t result;

  result = qword_1EF2C0160;
  if (!qword_1EF2C0160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.LayeredMedia, &type metadata for FormatHeadlineBinding.LayeredMedia);
    atomic_store(result, (unint64_t *)&qword_1EF2C0160);
  }
  return result;
}

unint64_t sub_1BB2A03E4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2A0408();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2A0408()
{
  unint64_t result;

  result = qword_1EF2C0168;
  if (!qword_1EF2C0168)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.LayeredMedia, &type metadata for FormatHeadlineBinding.LayeredMedia);
    atomic_store(result, (unint64_t *)&qword_1EF2C0168);
  }
  return result;
}

unint64_t sub_1BB2A044C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA509198();
  a1[2] = sub_1BAEEFEA4();
  result = sub_1BB2A03A0();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB2A0480(_QWORD *a1)
{
  return FormatHeadlineBinding.LayeredMedia.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.LayeredMedia()
{
  return &type metadata for FormatHeadlineBinding.LayeredMedia;
}

uint64_t static FormatCommand.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  __int128 v6;
  uint64_t v7;
  char v8;
  char v9;

  v1 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v2 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 41);
  v6 = *(_OWORD *)(*(_QWORD *)a1 + 16);
  v7 = v1;
  v8 = v2;
  v9 = v3;
  _s8NewsFeed20FormatCommandBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v6);
  return v4 & 1;
}

uint64_t sub_1BB2A0514()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v1 = *(unsigned __int8 *)(*(_QWORD *)v0 + 40);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  v7 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  v8 = *(_BYTE *)(*(_QWORD *)v0 + 41);
  sub_1BB2A0748(v5, v6, v7, v1, v8, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  sub_1BA73AA74();
  v3 = v2;
  sub_1BB2A0748(v5, v6, v7, v1, v8, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  return v3;
}

uint64_t sub_1BB2A05E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  __int128 v10;
  uint64_t v11;
  char v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  char v17;

  v2 = *a2;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 41);
  v6 = *(_QWORD *)(*a2 + 32);
  v7 = *(_BYTE *)(*a2 + 40);
  v8 = *(_BYTE *)(*a2 + 41);
  v14 = *(_OWORD *)(*(_QWORD *)a1 + 16);
  v15 = v3;
  v16 = v4;
  v17 = v5;
  v10 = *(_OWORD *)(v2 + 16);
  v11 = v6;
  v12 = v7;
  v13 = v8;
  return static FormatCommandBinding.== infix(_:_:)(&v14, &v10) & 1;
}

unint64_t sub_1BB2A0658(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2A067C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2A067C()
{
  unint64_t result;

  result = qword_1EF2C0170;
  if (!qword_1EF2C0170)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommand, &type metadata for FormatCommand);
    atomic_store(result, (unint64_t *)&qword_1EF2C0170);
  }
  return result;
}

unint64_t sub_1BB2A06C0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA600DE0();
  a1[2] = sub_1BA6007E8();
  result = sub_1BB2A06F4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2A06F4()
{
  unint64_t result;

  result = qword_1EF2C0178;
  if (!qword_1EF2C0178)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommand, &type metadata for FormatCommand);
    atomic_store(result, (unint64_t *)&qword_1EF2C0178);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCommand()
{
  return &type metadata for FormatCommand;
}

uint64_t sub_1BB2A0748(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v7;

  if ((a5 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch(v7 & 0xFFFFFFFC | (a4 >> 2) & 3)
  {
    case 0u:
      result = sub_1BA856ECC(result, a2, a3, a4, a6);
      break;
    case 3u:
      result = a6();
      break;
    case 6u:
      result = sub_1BA856F00(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      result = a7(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SportsScoreConcern(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BB2A07FC(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1BB2A07FC(uint64_t a1, char a2)
{
  uint64_t result;

  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      result = swift_retain();
      break;
    case 3:
    case 4:
    case 5:
      result = swift_unknownObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for SportsScoreConcern(uint64_t a1)
{
  return sub_1BB2A0840(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1BB2A0840(uint64_t a1, char a2)
{
  uint64_t result;

  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      result = swift_release();
      break;
    case 3:
    case 4:
    case 5:
      result = swift_unknownObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t assignWithCopy for SportsScoreConcern(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BB2A07FC(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BB2A0840(v5, v6);
  return a1;
}

uint64_t assignWithTake for SportsScoreConcern(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BB2A0840(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for SportsScoreConcern()
{
  return &type metadata for SportsScoreConcern;
}

uint64_t sub_1BB2A0910()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  uint64_t v2;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = sub_1BB86C340();

  return v2;
}

uint64_t sub_1BB2A0AE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BB2A0B3C + 4 * byte_1BB901430[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void sub_1BB2A0D44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 5u:
    case 6u:
      goto LABEL_6;
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2u:
      swift_bridgeObjectRelease();

      return;
    case 3u:
      type metadata accessor for DebugFormatManagerIndex();
      swift_bridgeObjectRelease();
      v2 = a1 + *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
      v3 = sub_1BB86EB84();
      v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v4(v2, v3);
      v5 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
      v4(v2 + *(int *)(v5 + 20), v3);
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    case 4u:
      v6 = sub_1BB86EB84();
      v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v8(a1, v6);
      sub_1BB0FA1D4();
      v8(a1 + *(int *)(v7 + 48), v6);
      break;
    default:
      return;
  }
}

void sub_1BB2A0EA8()
{
  char *v0;

  v0 = (char *)sub_1BB2A0EF8 + 4 * byte_1BB90143E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1BB2A0EF8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1BB2A10E0(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BB2A1358(result);
    v2 = (char *)&loc_1BB2A1140 + 4 * byte_1BB901445[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1BB2A1358(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatManagerError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatManagerError()
{
  uint64_t result;

  result = qword_1EF2C01F0;
  if (!qword_1EF2C01F0)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1BB2A13D0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  void (*v14)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    v13 = sub_1BB86EB84();
    v14 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
    v14(a1, a2, v13);
    sub_1BB0FA1D4();
    v14((_QWORD *)((char *)a1 + *(int *)(v15 + 48)), (_QWORD *)((char *)a2 + *(int *)(v15 + 48)), v13);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 3)
  {
    type metadata accessor for DebugFormatManagerIndex();
    swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86EB84();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    v12 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
    v11(&v8[v12[5]], &v9[v12[5]], v10);
    *(_OWORD *)&v8[v12[6]] = *(_OWORD *)&v9[v12[6]];
    v8[v12[7]] = v9[v12[7]];
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1BB2A1558(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  void (*v14)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v15;

  if (a1 != a2)
  {
    sub_1BB2A1358((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 4)
    {
      v13 = sub_1BB86EB84();
      v14 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
      v14(a1, a2, v13);
      sub_1BB0FA1D4();
      v14((_QWORD *)((char *)a1 + *(int *)(v15 + 48)), (_QWORD *)((char *)a2 + *(int *)(v15 + 48)), v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 3)
    {
      type metadata accessor for DebugFormatManagerIndex();
      swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for DebugFormatFileDirectory(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BB86EB84();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      v12 = (int *)type metadata accessor for DebugFormatFileDirectoryMetadata(0);
      v11(&v8[v12[5]], &v9[v12[5]], v10);
      *(_OWORD *)&v8[v12[6]] = *(_OWORD *)&v9[v12[6]];
      v8[v12[7]] = v9[v12[7]];
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BB2A16F0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  char v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;

  v4 = &unk_1BB901478;
  v5 = &unk_1BB901490;
  v6 = &unk_1BB9014A8;
  result = type metadata accessor for DebugFormatManagerIndex();
  if (v1 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8) + 64;
    result = sub_1BB86EB84();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v8 = &v3;
      v9 = MEMORY[0x1E0DE9D18] + 64;
      v10 = &unk_1BB901478;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void sub_1BB2A17BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v1 = type metadata accessor for DebugFormatManagerError();
  MEMORY[0x1E0C80A78](v1);
  sub_1BB2A2074(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = (char *)sub_1BB2A183C + 4 * byte_1BB90144C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1BB2A183C()
{
  uint64_t v0;

  sub_1BB2A1358(v0);
  return 0xD000000000000016;
}

uint64_t sub_1BB2A197C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2BB5A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_1BB2A19B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = sub_1BB86EB84();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for DebugFormatManagerError();
  MEMORY[0x1E0C80A78](v3);
  sub_1BB2A2074(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)&loc_1BB2A1A8C + dword_1BB2A203C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB2A1A9C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 - 96) = 0xD000000000000019;
  *(_QWORD *)(v0 - 88) = 0x80000001BB983D30;
  sub_1BB872AFC((_QWORD *)0xD000000000000019);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  return *(_QWORD *)(v0 - 96);
}

uint64_t sub_1BB2A2074(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatManagerError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FeedValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FeedValue.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_1BB2A20E8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1BB2A2164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2A20E8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BB2A2198@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA647E00();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BB2A21CC(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB901688, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB2A2200(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB901688, a1);
  return sub_1BB87471C();
}

uint64_t FeedValue.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = a2[3];
  v10 = a2[2];
  v4 = type metadata accessor for FeedValue.CodingKeys(255, v10, v3, a2[4]);
  MEMORY[0x1BCCE5B24](&unk_1BB901688, v4);
  v5 = sub_1BB8741D0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746C8();
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for FeedValue.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedValue.CodingKeys);
}

uint64_t FeedValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v28 = a5;
  v33 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v34 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FeedValue.CodingKeys(255, v10, v11, v12);
  MEMORY[0x1BCCE5B24](&unk_1BB901688, v13);
  v35 = sub_1BB874104();
  v29 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v15 = (char *)&v26 - v14;
  v31 = a2;
  v32 = a3;
  v27 = type metadata accessor for FeedValue(0, a2, a3, a4);
  v16 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v18 = (char *)&v26 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v30 = v15;
  v19 = v36;
  sub_1BB87468C();
  if (!v19)
  {
    v36 = v16;
    v20 = v29;
    v21 = v30;
    v22 = v33;
    v23 = v34;
    v24 = v31;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v35);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v18, v23, v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v28, v18, v27);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for FeedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedValue);
}

uint64_t sub_1BB2A2560@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return FeedValue.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1BB2A2580(_QWORD *a1, _QWORD *a2)
{
  return FeedValue.encode(to:)(a1, a2);
}

uint64_t sub_1BB2A2594(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB2A2644 + 4 * byte_1BB901520[(v7 - 1)]))();
}

void sub_1BB2A2694(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1BB2A2844(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB2A2884 + 4 * byte_1BB90152E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB2A28A4 + 4 * byte_1BB901533[v4]))();
}

_BYTE *sub_1BB2A2884(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB2A28A4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2A28AC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2A28B4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2A28BC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2A28C4(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1BB2A28D0()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB2A28E0()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB2A28F0()
{
  JUMPOUT(0x1BCCE5B24);
}

id sub_1BB2A2900()
{
  return sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneDebuggerButtonItem, 0xD00000000000001FLL, 0x80000001BB983EC0, (uint64_t *)&selRef_doConsolePaneDebuggerDisplay);
}

id sub_1BB2A292C()
{
  return sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneLoggerButtonItem, 0xD000000000000020, 0x80000001BB983E90, (uint64_t *)&selRef_doConsolePaneLoggerDisplay);
}

void sub_1BB2A2958()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  char v12;

  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (!v12)
  {
    v5 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneDebuggerButtonItem, 0xD00000000000001FLL, 0x80000001BB983EC0, (uint64_t *)&selRef_doConsolePaneDebuggerDisplay);
    v6 = (void *)objc_opt_self();
    v7 = objc_msgSend(v6, sel_secondaryLabelColor);
    objc_msgSend(v5, sel_setTintColor_, v7);

    v3 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneLoggerButtonItem, 0xD000000000000020, 0x80000001BB983E90, (uint64_t *)&selRef_doConsolePaneLoggerDisplay);
    v8 = objc_msgSend(v6, sel_systemBlueColor);
LABEL_6:
    v4 = v8;
    objc_msgSend(v3, sel_setTintColor_, v4);
    goto LABEL_7;
  }
  if (v12 != 1)
  {
    v9 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneDebuggerButtonItem, 0xD00000000000001FLL, 0x80000001BB983EC0, (uint64_t *)&selRef_doConsolePaneDebuggerDisplay);
    v10 = (void *)objc_opt_self();
    v11 = objc_msgSend(v10, sel_systemBlueColor);
    objc_msgSend(v9, sel_setTintColor_, v11);

    v3 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneLoggerButtonItem, 0xD000000000000020, 0x80000001BB983E90, (uint64_t *)&selRef_doConsolePaneLoggerDisplay);
    v8 = objc_msgSend(v10, sel_secondaryLabelColor);
    goto LABEL_6;
  }
  v0 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneDebuggerButtonItem, 0xD00000000000001FLL, 0x80000001BB983EC0, (uint64_t *)&selRef_doConsolePaneDebuggerDisplay);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_systemBlueColor);
  objc_msgSend(v0, sel_setTintColor_, v2);

  v3 = sub_1BB19EAF4(&OBJC_IVAR____TtC8NewsFeed39DebugFormatConsolePaneDisplayController____lazy_storage___consolePaneLoggerButtonItem, 0xD000000000000020, 0x80000001BB983E90, (uint64_t *)&selRef_doConsolePaneLoggerDisplay);
  v4 = objc_msgSend(v1, sel_systemBlueColor);
  objc_msgSend(v3, sel_setTintColor_, v4);
LABEL_7:

}

uint64_t sub_1BB2A2C50()
{
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_retain();
  sub_1BB86D2C4();
  return swift_release();
}

uint64_t sub_1BB2A2D40()
{
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  swift_retain();
  sub_1BB86D2C4();
  return swift_release();
}

uint64_t type metadata accessor for DebugFormatConsolePaneDisplayController()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding()
{
  return &type metadata for FormatSportsEventBinding;
}

ValueMetadata *type metadata accessor for FormatSportsEventCompetitorBinding()
{
  return &type metadata for FormatSportsEventCompetitorBinding;
}

uint64_t sub_1BB2A2EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t *v24;
  _OWORD v25[2];
  char v26;

  v24 = a3;
  v5 = type metadata accessor for FormatJson();
  MEMORY[0x1E0C80A78](v5);
  v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v8;
  v26 = *(_BYTE *)(a2 + 32);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AF820, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonKeyValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = type metadata accessor for FormatJsonKeyValue();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  v23 = v13;
  *(_OWORD *)(v13 + 16) = xmmword_1BB87D7A0;
  v14 = (_QWORD *)(v13 + v12);
  swift_retain();
  sub_1BACB5A2C((uint64_t)v25);
  v15 = sub_1BB2A49B0((uint64_t)&unk_1E724C788, a1, (uint64_t)v25);
  sub_1BAB6C26C((uint64_t)v25);
  swift_release();
  *v7 = v15;
  swift_storeEnumTagMultiPayload();
  *v14 = 0x7465737361;
  v14[1] = 0xE500000000000000;
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v14 + *(int *)(v9 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  v16 = (_QWORD *)((char *)v14 + v11);
  swift_retain();
  sub_1BACB5A2C((uint64_t)v25);
  v17 = sub_1BB2A3500((uint64_t)&unk_1E724C7B0, a1, (uint64_t)v25);
  sub_1BAB6C26C((uint64_t)v25);
  swift_release();
  *v7 = v17;
  swift_storeEnumTagMultiPayload();
  *v16 = 0x6E61656C6F6F62;
  v16[1] = 0xE700000000000000;
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v14 + v11 + *(int *)(v9 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  v18 = (_QWORD *)((char *)v14 + 2 * v11);
  swift_retain();
  sub_1BACB5A2C((uint64_t)v25);
  v19 = sub_1BB2A5278((uint64_t)&unk_1E724C7D8, a1, (uint64_t)v25);
  sub_1BAB6C26C((uint64_t)v25);
  swift_release();
  *v7 = v19;
  swift_storeEnumTagMultiPayload();
  *v18 = 0x726F6C6F63;
  v18[1] = 0xE500000000000000;
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v18 + *(int *)(v9 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  v20 = (_QWORD *)((char *)v14 + 3 * v11);
  swift_retain();
  sub_1BACB5A2C((uint64_t)v25);
  v21 = sub_1BB2A4308((uint64_t)&unk_1E724C800, a1, (uint64_t)v25);
  sub_1BAB6C26C((uint64_t)v25);
  swift_release();
  *v7 = v21;
  swift_storeEnumTagMultiPayload();
  *v20 = 0x676E69727473;
  v20[1] = 0xE600000000000000;
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v20 + *(int *)(v9 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  *v24 = v23;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB2A3208(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v2 = type metadata accessor for FormatJsonKeyValue();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatJson();
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_20;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    if (!v9)
      return MEMORY[0x1E0DEE9D8];
    v34 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7A2A0(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v31 = v34;
    v26 = a1 & 0xC000000000000001;
    v27 = v9;
    v23[1] = a1 + 32;
    v24 = v8;
    v25 = a1;
    while (v12 != v9)
    {
      if (v26)
        MEMORY[0x1BCCE4630](v12, a1);
      else
        swift_unknownObjectRetain();
      v30 = v12;
      v13 = 19;
      v33 = v10;
      sub_1BAC7A274(0, 19, 0);
      v14 = v33;
      v15 = &byte_1E724C2A8;
      do
      {
        v16 = *v15++;
        v32 = v16;
        sub_1BB4062AC((uint64_t)&v32);
        v33 = v14;
        v18 = *(_QWORD *)(v14 + 16);
        v17 = *(_QWORD *)(v14 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BAC7A274(v17 > 1, v18 + 1, 1);
          v14 = v33;
        }
        *(_QWORD *)(v14 + 16) = v18 + 1;
        sub_1BA5193C4((uint64_t)v5, v14+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
        --v13;
      }
      while (v13);
      v8 = v24;
      a1 = v25;
      *(_QWORD *)v24 = v14;
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      v19 = v31;
      v34 = v31;
      v21 = *(_QWORD *)(v31 + 16);
      v20 = *(_QWORD *)(v31 + 24);
      v9 = v27;
      if (v21 >= v20 >> 1)
      {
        sub_1BAC7A2A0(v20 > 1, v21 + 1, 1);
        v19 = v34;
      }
      v12 = v30 + 1;
      *(_QWORD *)(v19 + 16) = v21 + 1;
      v22 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v31 = v19;
      sub_1BA5193C4((uint64_t)v8, v19 + v22 + *(_QWORD *)(v28 + 72) * v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
      v10 = MEMORY[0x1E0DEE9D8];
      if (v12 == v9)
        return v31;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    v9 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB2A3500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int64_t v18;
  uint64_t v19;
  int v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;

  v59 = a3;
  v55 = a2;
  v4 = type metadata accessor for FormatJson();
  MEMORY[0x1E0C80A78](v4);
  v54 = (uint64_t *)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v53 = (uint64_t *)((char *)&v49 - v7);
  MEMORY[0x1E0C80A78](v8);
  v52 = (uint64_t *)((char *)&v49 - v9);
  v61 = type metadata accessor for FormatJsonKeyValue();
  v10 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v51 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v49 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v49 - v16);
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v66 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A274(0, v18, 0);
    v19 = 0;
    v63 = v66;
    v60 = a1 + 32;
    v56 = v4;
    v57 = v17;
    v58 = v18;
    v50 = v14;
    while (1)
    {
      v20 = *(unsigned __int8 *)(v60 + v19);
      v62 = v19;
      if (v20)
      {
        if (v20 != 1)
        {
          v35 = objc_msgSend(*(id *)(v59 + 16), sel_eventCompetitorTags);
          if (v35)
          {
            v36 = v35;
            sub_1BA8EB1C8();
            v37 = sub_1BB872DB4();

          }
          else
          {
            v37 = MEMORY[0x1E0DEE9D8];
          }
          swift_retain();
          v41 = sub_1BB2A3208(v37);
          swift_bridgeObjectRelease();
          swift_release();
          v42 = v54;
          *v54 = v41;
          swift_storeEnumTagMultiPayload();
          *v17 = 0x74697465706D6F63;
          v39 = 0xEA0000000000726FLL;
          v40 = (uint64_t)v42;
          goto LABEL_20;
        }
        v21 = objc_msgSend(*(id *)(v59 + 16), sel_eventLeagueTag);
        v22 = 19;
        v65 = MEMORY[0x1E0DEE9D8];
        sub_1BAC7A274(0, 19, 0);
        v23 = v65;
        v24 = &byte_1E724C2A8;
        v25 = (uint64_t)v51;
        do
        {
          v26 = *v24++;
          v64 = v26;
          sub_1BB4062AC((uint64_t)&v64);
          v65 = v23;
          v28 = *(_QWORD *)(v23 + 16);
          v27 = *(_QWORD *)(v23 + 24);
          if (v28 >= v27 >> 1)
          {
            sub_1BAC7A274(v27 > 1, v28 + 1, 1);
            v23 = v65;
          }
          *(_QWORD *)(v23 + 16) = v28 + 1;
          sub_1BA5193C4(v25, v23+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
          --v22;
        }
        while (v22);
        v14 = v50;
        v38 = v53;
        *v53 = v23;
        swift_storeEnumTagMultiPayload();
        swift_unknownObjectRelease();
        v17 = v57;
        *v57 = 0x65756761656CLL;
        v39 = 0xE600000000000000;
      }
      else
      {
        v29 = 19;
        v65 = MEMORY[0x1E0DEE9D8];
        sub_1BAC7A274(0, 19, 0);
        v30 = v65;
        v31 = &byte_1E724C2A8;
        do
        {
          v32 = *v31++;
          v64 = v32;
          sub_1BB4062AC((uint64_t)&v64);
          v65 = v30;
          v34 = *(_QWORD *)(v30 + 16);
          v33 = *(_QWORD *)(v30 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_1BAC7A274(v33 > 1, v34 + 1, 1);
            v30 = v65;
          }
          *(_QWORD *)(v30 + 16) = v34 + 1;
          sub_1BA5193C4((uint64_t)v14, v30+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
          --v29;
        }
        while (v29);
        v17 = v57;
        v38 = v52;
        *v52 = v30;
        swift_storeEnumTagMultiPayload();
        *v17 = 0x746E657665;
        v39 = 0xE500000000000000;
      }
      v40 = (uint64_t)v38;
      v18 = v58;
LABEL_20:
      v17[1] = v39;
      sub_1BA5193C4(v40, (uint64_t)v17 + *(int *)(v61 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
      v44 = v62;
      v43 = v63;
      v66 = v63;
      v46 = *(_QWORD *)(v63 + 16);
      v45 = *(_QWORD *)(v63 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_1BAC7A274(v45 > 1, v46 + 1, 1);
        v44 = v62;
        v43 = v66;
      }
      v19 = v44 + 1;
      *(_QWORD *)(v43 + 16) = v46 + 1;
      v47 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v63 = v43;
      sub_1BA5193C4((uint64_t)v17, v43 + v47 + *(_QWORD *)(v10 + 72) * v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      if (v19 == v18)
        return v63;
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB2A3A4C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  sub_1BB2A5CF8(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatJsonKeyValue();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v38 = (uint64_t)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v37 = (uint64_t)v27 - v9;
  v10 = type metadata accessor for FormatJson();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
    goto LABEL_25;
  v13 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v13)
      break;
    v40 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7A2A0(0, v13 & ~(v13 >> 63), 0);
    if (v13 < 0)
    {
      __break(1u);
      return result;
    }
    v15 = 0;
    v35 = v40;
    v36 = v5;
    v27[1] = a1 + 32;
    v28 = a1 & 0xC000000000000001;
    v30 = v12;
    v31 = a1;
    v29 = v13;
    while (v15 != v13)
    {
      v34 = v15;
      if (v28)
        MEMORY[0x1BCCE4630](v15, a1);
      else
        swift_unknownObjectRetain();
      v16 = 23;
      v17 = &byte_1E724C2E0;
      v18 = MEMORY[0x1E0DEE9D8];
      do
      {
        v19 = *v17++;
        v39 = v19;
        sub_1BB54D9EC((uint64_t)&v39);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
        {
          sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BB2A5CF8);
        }
        else
        {
          v20 = v37;
          sub_1BA5193C4((uint64_t)v4, v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
          sub_1BA5193C4(v20, v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v18 = sub_1BB38E844(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
          v22 = *(_QWORD *)(v18 + 16);
          v21 = *(_QWORD *)(v18 + 24);
          if (v22 >= v21 >> 1)
            v18 = sub_1BB38E844(v21 > 1, v22 + 1, 1, v18);
          *(_QWORD *)(v18 + 16) = v22 + 1;
          sub_1BA5193C4(v38, v18+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
          v5 = v36;
        }
        --v16;
      }
      while (v16);
      v12 = v30;
      *v30 = v18;
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      v23 = v35;
      v40 = v35;
      v25 = *(_QWORD *)(v35 + 16);
      v24 = *(_QWORD *)(v35 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1BAC7A2A0(v24 > 1, v25 + 1, 1);
        v23 = v40;
      }
      v15 = v34 + 1;
      *(_QWORD *)(v23 + 16) = v25 + 1;
      v26 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      v35 = v23;
      sub_1BA5193C4((uint64_t)v12, v23 + v26 + *(_QWORD *)(v32 + 72) * v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
      v13 = v29;
      a1 = v31;
      if (v15 == v29)
        return v35;
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v13 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB2A3E08(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t *v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  const char *v19;
  const char *v20;
  const char *v21;
  char *v22;
  char *v23;
  const char *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v2 = type metadata accessor for FormatJsonKeyValue();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v31 = type metadata accessor for FormatJson();
  v18 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v12[-v6];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8)
  {
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A2A0(0, v8 & ~(v8 >> 63), 0);
    if ((v8 & 0x8000000000000000) == 0)
    {
      v17 = a1 & 0xC000000000000001;
      v13 = (uint64_t *)(a1 + 32);
      v27 = v34;
      v28 = "neGenre";
      v24 = "bannerImageForWhiteBackground";
      v25 = "bannerImageForMask";
      v22 = "arge";
      v23 = "verImage";
      v20 = "sportsLogoAltImageLarge";
      v21 = "sportsLogoImageCompact";
      v19 = "sportsLogoAltImage";
      v15 = v7;
      v16 = a1;
      v14 = v8;
      v26 = 0;
      if ((a1 & 0xC000000000000001) != 0)
      {
        v9 = MEMORY[0x1BCCE4630](0, a1);
      }
      else
      {
        v9 = *v13;
        swift_unknownObjectRetain();
      }
      v33 = MEMORY[0x1E0DEE9D8];
      swift_getObjectType();
      sub_1BAC7A274(0, 11, 0);
      v32 = 0;
      sub_1BA7834E0(v9, (uint64_t)&v32);
      *v4 = v10;
      swift_storeEnumTagMultiPayload();
      JUMPOUT(0x1BB2A4140);
    }
    __break(1u);
    JUMPOUT(0x1BB2A42DCLL);
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB2A4308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  id v45;
  void *v46;
  unint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v59;
  unint64_t *v60;
  unint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;

  v65 = a3;
  v63 = a2;
  sub_1BB2A5CF8(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v59 - v8;
  v68 = type metadata accessor for FormatJson();
  MEMORY[0x1E0C80A78](v68);
  v62 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v61 = (unint64_t *)((char *)&v59 - v12);
  MEMORY[0x1E0C80A78](v13);
  v60 = (unint64_t *)((char *)&v59 - v14);
  v15 = type metadata accessor for FormatJsonKeyValue();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v76 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v72 = (uint64_t)&v59 - v19;
  MEMORY[0x1E0C80A78](v20);
  v75 = (uint64_t)&v59 - v21;
  MEMORY[0x1E0C80A78](v22);
  v71 = (uint64_t)&v59 - v23;
  MEMORY[0x1E0C80A78](v24);
  v64 = (uint64_t *)((char *)&v59 - v25);
  v26 = *(_QWORD *)(a1 + 16);
  if (v26)
  {
    v78 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A274(0, v26, 0);
    v27 = 0;
    v70 = v78;
    v66 = a1 + 32;
    v67 = v26;
    v73 = v15;
    v74 = v6;
    v28 = v64;
    while (1)
    {
      v69 = v27;
      if (*(_BYTE *)(v66 + v27))
      {
        if (*(_BYTE *)(v66 + v27) == 1)
        {
          v29 = objc_msgSend(*(id *)(v65 + 16), sel_eventLeagueTag);
          v30 = 23;
          v31 = &byte_1E724C2E0;
          v32 = MEMORY[0x1E0DEE9D8];
          do
          {
            while (1)
            {
              v33 = *v31++;
              v77 = v33;
              sub_1BB54D9EC((uint64_t)&v77);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15) != 1)
                break;
              sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BB2A5CF8);
              if (!--v30)
                goto LABEL_25;
            }
            v34 = (uint64_t)v6;
            v35 = v72;
            sub_1BA5193C4(v34, v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
            sub_1BA5193C4(v35, v76, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v32 = sub_1BB38E844(0, *(_QWORD *)(v32 + 16) + 1, 1, v32);
            v37 = *(_QWORD *)(v32 + 16);
            v36 = *(_QWORD *)(v32 + 24);
            if (v37 >= v36 >> 1)
              v32 = sub_1BB38E844(v36 > 1, v37 + 1, 1, v32);
            *(_QWORD *)(v32 + 16) = v37 + 1;
            sub_1BA5193C4(v76, v32+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
            v15 = v73;
            v6 = v74;
            --v30;
          }
          while (v30);
LABEL_25:
          v48 = v61;
          *v61 = v32;
          swift_storeEnumTagMultiPayload();
          swift_unknownObjectRelease();
          v28 = v64;
          *v64 = 0x65756761656CLL;
          v49 = 0xE600000000000000;
          v50 = (uint64_t)v48;
          goto LABEL_30;
        }
        v45 = objc_msgSend(*(id *)(v65 + 16), sel_eventCompetitorTags);
        if (v45)
        {
          v46 = v45;
          sub_1BA8EB1C8();
          v47 = sub_1BB872DB4();

        }
        else
        {
          v47 = MEMORY[0x1E0DEE9D8];
        }
        swift_retain();
        v52 = sub_1BB2A3A4C(v47);
        swift_bridgeObjectRelease();
        swift_release();
        v51 = v62;
        *v62 = v52;
        swift_storeEnumTagMultiPayload();
        *v28 = 0x74697465706D6F63;
        v49 = 0xEA0000000000726FLL;
      }
      else
      {
        v38 = 23;
        v39 = &byte_1E724C2E0;
        v40 = MEMORY[0x1E0DEE9D8];
        do
        {
          v41 = *v39++;
          v77 = v41;
          sub_1BB54D9EC((uint64_t)&v77);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
          {
            sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB2A5CF8);
          }
          else
          {
            v42 = v71;
            sub_1BA5193C4((uint64_t)v9, v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
            sub_1BA5193C4(v42, v75, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v40 = sub_1BB38E844(0, *(_QWORD *)(v40 + 16) + 1, 1, v40);
            v44 = *(_QWORD *)(v40 + 16);
            v43 = *(_QWORD *)(v40 + 24);
            if (v44 >= v43 >> 1)
              v40 = sub_1BB38E844(v43 > 1, v44 + 1, 1, v40);
            *(_QWORD *)(v40 + 16) = v44 + 1;
            sub_1BA5193C4(v75, v40+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
            v15 = v73;
            v6 = v74;
          }
          --v38;
        }
        while (v38);
        v51 = v60;
        *v60 = v40;
        swift_storeEnumTagMultiPayload();
        v28 = v64;
        *v64 = 0x746E657665;
        v49 = 0xE500000000000000;
      }
      v50 = (uint64_t)v51;
LABEL_30:
      v28[1] = v49;
      sub_1BA5193C4(v50, (uint64_t)v28 + *(int *)(v15 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
      v54 = v69;
      v53 = v70;
      v78 = v70;
      v56 = *(_QWORD *)(v70 + 16);
      v55 = *(_QWORD *)(v70 + 24);
      if (v56 >= v55 >> 1)
      {
        sub_1BAC7A274(v55 > 1, v56 + 1, 1);
        v54 = v69;
        v53 = v78;
      }
      v27 = v54 + 1;
      *(_QWORD *)(v53 + 16) = v56 + 1;
      v57 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v70 = v53;
      sub_1BA5193C4((uint64_t)v28, v53 + v57 + *(_QWORD *)(v16 + 72) * v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      if (v27 == v67)
        return v70;
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB2A49B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v39[2];
  uint64_t *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  const char *v47;
  const char *v48;
  const char *v49;
  char *v50;
  char *v51;
  const char *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t ObjectType;
  char *v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;

  v44 = a3;
  v41 = a2;
  v61 = type metadata accessor for FormatJson();
  MEMORY[0x1E0C80A78](v61);
  v40 = (_QWORD *)((char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v59 = (_QWORD *)((char *)v39 - v7);
  MEMORY[0x1E0C80A78](v8);
  v39[1] = (char *)v39 - v9;
  MEMORY[0x1E0C80A78](v10);
  v58 = (_QWORD *)((char *)v39 - v11);
  MEMORY[0x1E0C80A78](v12);
  v39[0] = (char *)v39 - v13;
  v60 = type metadata accessor for FormatJsonKeyValue();
  v14 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v18 = (_QWORD *)((char *)v39 - v17);
  v19 = *(_QWORD *)(a1 + 16);
  v20 = MEMORY[0x1E0DEE9D8];
  if (!v19)
    return MEMORY[0x1E0DEE9D8];
  v43 = v3;
  v64 = MEMORY[0x1E0DEE9D8];
  v46 = v19;
  sub_1BAC7A274(0, v19, 0);
  v21 = 0;
  v45 = a1 + 32;
  v55 = v64;
  v57 = "neGenre";
  v52 = "bannerImageForWhiteBackground";
  v53 = "bannerImageForMask";
  v50 = "arge";
  v51 = "verImage";
  v48 = "sportsLogoAltImageLarge";
  v49 = "sportsLogoImageCompact";
  v47 = "sportsLogoAltImage";
  v42 = v18;
  do
  {
    v22 = *(unsigned __int8 *)(v45 + v21);
    v54 = v21;
    if (!v22)
    {
      v63 = v20;
      v25 = *(_QWORD *)(v44 + 16);
      ObjectType = swift_getObjectType();
      sub_1BAC7A274(0, 11, 0);
      v62 = 0;
      sub_1BA7834E0(v25, (uint64_t)&v62);
      *v58 = v26;
      swift_storeEnumTagMultiPayload();
      JUMPOUT(0x1BB2A4F4CLL);
    }
    if (v22 == 1)
    {
      v23 = objc_msgSend(*(id *)(v44 + 16), sel_eventLeagueTag);
      v63 = v20;
      ObjectType = swift_getObjectType();
      sub_1BAC7A274(0, 11, 0);
      v62 = 0;
      sub_1BA7834E0((uint64_t)v23, (uint64_t)&v62);
      *v59 = v24;
      swift_storeEnumTagMultiPayload();
      JUMPOUT(0x1BB2A4D68);
    }
    v27 = objc_msgSend(*(id *)(v44 + 16), sel_eventCompetitorTags);
    if (v27)
    {
      v28 = v27;
      sub_1BA8EB1C8();
      v29 = sub_1BB872DB4();

    }
    else
    {
      v29 = v20;
    }
    swift_retain();
    v30 = v43;
    v31 = sub_1BB2A3E08(v29);
    v43 = v30;
    swift_bridgeObjectRelease();
    swift_release();
    v32 = (uint64_t)v40;
    *v40 = v31;
    swift_storeEnumTagMultiPayload();
    *v18 = 0x74697465706D6F63;
    v18[1] = 0xEA0000000000726FLL;
    sub_1BA5193C4(v32, (uint64_t)v18 + *(int *)(v60 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
    v34 = v54;
    v33 = v55;
    v64 = v55;
    v36 = *(_QWORD *)(v55 + 16);
    v35 = *(_QWORD *)(v55 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_1BAC7A274(v35 > 1, v36 + 1, 1);
      v33 = v64;
    }
    v21 = v34 + 1;
    *(_QWORD *)(v33 + 16) = v36 + 1;
    v37 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v55 = v33;
    sub_1BA5193C4((uint64_t)v18, v33 + v37 + *(_QWORD *)(v14 + 72) * v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
  }
  while (v21 != v46);
  return v55;
}

unint64_t sub_1BB2A5278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v24 = a2;
  sub_1BB2A5CF8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for FormatJsonKeyValue();
  v9 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v22 = (uint64_t)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v20 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v15 = 0;
  v16 = MEMORY[0x1E0DEE9D8];
  v20[1] = a3;
  v21 = a1;
  do
  {
    v25 = *(_BYTE *)(a1 + v15 + 32);
    sub_1BB2569B4((uint64_t)&v25);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v23) == 1)
    {
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BB2A5CF8);
    }
    else
    {
      sub_1BA5193C4((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      sub_1BA5193C4((uint64_t)v13, v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1BB38E844(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v18 = *(_QWORD *)(v16 + 16);
      v17 = *(_QWORD *)(v16 + 24);
      if (v18 >= v17 >> 1)
        v16 = sub_1BB38E844(v17 > 1, v18 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v18 + 1;
      sub_1BA5193C4(v22, v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      a1 = v21;
    }
    ++v15;
  }
  while (v14 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

_QWORD *sub_1BB2A54C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *boxed_opaque_existential_0;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  _QWORD *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[2];
  __int128 v52;
  uint64_t v53;
  _OWORD v54[2];
  uint64_t v55;
  _OWORD v56[2];
  uint64_t v57;
  _OWORD v58[2];
  uint64_t v59;
  _OWORD v60[2];
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  char v67;
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  v48 = type metadata accessor for FormatInspectionItem(0);
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v5 = (uint64_t *)((char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA76D78C();
  v47 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_OWORD *)(a2 + 16);
  v65 = *(_OWORD *)a2;
  v66 = v9;
  v67 = *(_BYTE *)(a2 + 32);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB8827B0;
  *(_QWORD *)&v62 = MEMORY[0x1E0DEE9D8];
  LOBYTE(v58[0]) = 0;
  sub_1BA8EA61C(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1BB383BA8(*(uint64_t *)&v60[0]);
  LOBYTE(v58[0]) = 1;
  sub_1BA8EA61C(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1BB383BA8(*(uint64_t *)&v60[0]);
  LOBYTE(v58[0]) = 2;
  sub_1BA8EA61C(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1BB383BA8(*(uint64_t *)&v60[0]);
  v11 = sub_1BA97461C(v62);
  swift_bridgeObjectRelease();
  sub_1BAF89090(1819242306, 0xE400000000000000, 0, 0, v11, v54);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v12 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(v12 + 48) = v55;
  v13 = v54[1];
  *(_OWORD *)(v12 + 16) = v54[0];
  *(_OWORD *)(v12 + 32) = v13;
  v62 = v65;
  v63 = v66;
  LOBYTE(v64) = v67;
  sub_1BB257528(&v62, (uint64_t)v56);
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v14 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v14;
  *(_QWORD *)(v14 + 48) = v57;
  v15 = v56[1];
  *(_OWORD *)(v14 + 16) = v56[0];
  *(_OWORD *)(v14 + 32) = v15;
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v62 = MEMORY[0x1E0DEE9D8];
  LOBYTE(v58[0]) = 0;
  sub_1BB519824(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1BB383BA8(*(uint64_t *)&v60[0]);
  LOBYTE(v58[0]) = 1;
  sub_1BB519824(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1BB383BA8(*(uint64_t *)&v60[0]);
  LOBYTE(v58[0]) = 2;
  sub_1BB519824(v58, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1BB383BA8(*(uint64_t *)&v60[0]);
  v17 = sub_1BA97461C(v62);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x646E616D6D6F43, 0xE700000000000000, 0, 0, v17, v58);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v18 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v18;
  *(_QWORD *)(v18 + 48) = v59;
  v19 = v58[1];
  *(_OWORD *)(v18 + 16) = v58[0];
  *(_OWORD *)(v18 + 32) = v19;
  *(_QWORD *)&v62 = v16;
  LOBYTE(v52) = 0;
  sub_1BAFBB8F8(&v52, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1BB383BA8(*(uint64_t *)&v60[0]);
  LOBYTE(v52) = 1;
  sub_1BAFBB8F8(&v52, (uint64_t)&v65, a1, (uint64_t *)v60);
  sub_1BB383BA8(*(uint64_t *)&v60[0]);
  LOBYTE(v52) = 2;
  sub_1BAFBB8F8(&v52, (uint64_t)&v65, a1, (uint64_t *)v60);
  v49 = inited + 32;
  sub_1BB383BA8(*(uint64_t *)&v60[0]);
  v20 = sub_1BA97461C(v62);
  swift_bridgeObjectRelease();
  sub_1BAF89090(1954047316, 0xE400000000000000, 0, 0, v20, v60);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 176) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 184) = &off_1E72D2F60;
  v21 = swift_allocObject();
  *(_QWORD *)(inited + 152) = v21;
  *(_QWORD *)(v21 + 48) = v61;
  v22 = v60[1];
  *(_OWORD *)(v21 + 16) = v60[0];
  *(_OWORD *)(v21 + 32) = v22;
  v50 = v16;
  v23 = (void *)v66;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v24 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
  v53 = v47;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v52);
  sub_1BACB5A2C((uint64_t)&v65);
  v27 = objc_msgSend(v23, sel_sportsEventStartTime);
  if (v27)
  {
    v28 = v27;
    sub_1BB86C874();

    v29 = sub_1BB86C8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v8, 0, 1, v29);
  }
  else
  {
    v30 = sub_1BB86C8B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v8, 1, 1, v30);
  }
  sub_1BA5193C4((uint64_t)v8, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  sub_1BAB6C26C((uint64_t)&v65);
  sub_1BA76EAE0(&v52, &v62);
  sub_1BA967B04((uint64_t)&v62, (uint64_t)&v52);
  if (v53)
  {
    sub_1BA967BB4((uint64_t)&v52, (uint64_t)v51);
    sub_1BA4A2E80((uint64_t)&v62, (uint64_t (*)(_QWORD))sub_1BB14B40C);
    v31 = v48;
    v32 = (_OWORD *)((char *)v5 + *(int *)(v48 + 24));
    v33 = v51[1];
    *v32 = v51[0];
    v32[1] = v33;
    v34 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v32, 0, 1, v34);
    *v5 = 0xD000000000000010;
    v5[1] = 0x80000001BB983F20;
    v5[2] = 0;
    v5[3] = 0;
    v35 = (char *)v5 + *(int *)(v31 + 28);
    *(_QWORD *)v35 = 0;
    *((_QWORD *)v35 + 1) = 0;
    v35[16] = -1;
    sub_1BA967BF0((uint64_t)&v52);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)&v62, (uint64_t (*)(_QWORD))sub_1BB14B40C);
    v36 = v48;
    v37 = (char *)v5 + *(int *)(v48 + 24);
    v38 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 1, v38);
    *v5 = 0xD000000000000010;
    v5[1] = 0x80000001BB983F20;
    v5[2] = 0;
    v5[3] = 0;
    v39 = (char *)v5 + *(int *)(v36 + 28);
    *(_QWORD *)v39 = 0;
    *((_QWORD *)v39 + 1) = 0;
    v39[16] = -1;
  }
  sub_1BA5193C4((uint64_t)v5, v25 + v24, type metadata accessor for FormatInspectionItem);
  sub_1BB383BA8(v25);
  v40 = sub_1BA97461C(v50);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x6D69542065746144, 0xE900000000000065, 0, 0, v40, &v62);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 216) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 224) = &off_1E72D2F60;
  v41 = swift_allocObject();
  *(_QWORD *)(inited + 192) = v41;
  *(_QWORD *)(v41 + 48) = v64;
  v42 = v63;
  *(_OWORD *)(v41 + 16) = v62;
  *(_OWORD *)(v41 + 32) = v42;
  v43 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v43;
}

uint64_t sub_1BB2A5CC4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB2A5CF8(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AF790, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonKeyValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t FormatContentSubgroup.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - v4;
  v6 = type metadata accessor for FormatContentSubgroup();
  sub_1BA8CAF1C(v1 + *(int *)(v6 + 40), (uint64_t)v5, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  return sub_1BA5193C4((uint64_t)v5, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
}

uint64_t FormatContentSubgroup.init(identifier:layouts:properties:selectors:contents:sections:placeholders:metadata:filters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int *v18;
  uint64_t result;

  *a9 = a1;
  a9[1] = a2;
  v18 = (int *)type metadata accessor for FormatContentSubgroup();
  sub_1BA5193C4(a3, (uint64_t)a9 + v18[5], (uint64_t (*)(_QWORD))sub_1BA6BCC70);
  *(_QWORD *)((char *)a9 + v18[6]) = a4;
  *(_QWORD *)((char *)a9 + v18[7]) = a5;
  *(_QWORD *)((char *)a9 + v18[9]) = a8;
  *(_QWORD *)((char *)a9 + v18[8]) = a6;
  *(_QWORD *)((char *)a9 + v18[12]) = a7;
  result = sub_1BA5193C4(a10, (uint64_t)a9 + v18[10], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *(_QWORD *)((char *)a9 + v18[11]) = a11;
  return result;
}

uint64_t sub_1BB2A5EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;

  v53 = a2;
  v3 = type metadata accessor for FormatPackage();
  MEMORY[0x1E0C80A78](v3);
  v52 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v5);
  v50 = (_QWORD **)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v51 = (_QWORD **)((char *)&v48 - v8);
  MEMORY[0x1E0C80A78](v9);
  v48 = (_QWORD **)((char *)&v48 - v10);
  MEMORY[0x1E0C80A78](v11);
  v49 = (_QWORD **)((char *)&v48 - v12);
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v48 - v21;
  sub_1BB2AEC64(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (uint64_t)&v25[*(int *)(v26 + 48)];
  sub_1BA4C2DD8(a1, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  sub_1BA4C2DD8(v53, v27, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4C2DD8((uint64_t)v25, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    v29 = *(int *)(v28 + 48);
    v30 = (uint64_t)&v19[v29];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = v27 + v29;
      v32 = v27;
      v33 = v52;
      sub_1BA5193C4(v32, v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      v34 = v51;
      sub_1BA5193C4(v30, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v35 = v50;
      sub_1BA5193C4(v31, (uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v36 = static FormatPackage.== infix(_:_:)(v19, v33);
      sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      if ((v36 & 1) != 0)
      {
        v37 = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(v34, v35);
        sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
LABEL_14:
        v40 = sub_1BA6BCBF8;
        goto LABEL_15;
      }
      sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
      goto LABEL_13;
    }
    sub_1BA4A2E80((uint64_t)&v19[v29], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v39 = *(int *)(v38 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v41 = v27 + v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v16, v27, v13);
      v42 = (uint64_t)&v22[v39];
      v43 = v49;
      sub_1BA5193C4(v42, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v44 = v48;
      sub_1BA5193C4(v41, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v45 = MEMORY[0x1BCCDCEFC](v22, v16);
      v46 = *(void (**)(char *, uint64_t))(v14 + 8);
      v46(v22, v13);
      if ((v45 & 1) != 0)
      {
        v37 = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(v43, v44);
        sub_1BA4A2E80((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v46(v16, v13);
        goto LABEL_14;
      }
      sub_1BA4A2E80((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v46(v16, v13);
LABEL_13:
      v37 = 0;
      goto LABEL_14;
    }
    sub_1BA4A2E80((uint64_t)&v22[v39], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
  }
  v37 = 0;
  v40 = sub_1BB2AEC64;
LABEL_15:
  sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))v40);
  return v37 & 1;
}

uint64_t sub_1BB2A6380(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _QWORD *v29;
  _QWORD *v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  _QWORD *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v51 = a2;
  v3 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v3);
  v47 = (uint64_t *)((char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v48 = (uint64_t *)((char *)&v43 - v6);
  MEMORY[0x1E0C80A78](v7);
  v45 = (uint64_t *)((char *)&v43 - v8);
  MEMORY[0x1E0C80A78](v9);
  v46 = (uint64_t *)((char *)&v43 - v10);
  v11 = sub_1BB86C67C();
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  MEMORY[0x1E0C80A78](v11);
  v44 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v43 - v17;
  sub_1BB2AEC78(0, &qword_1EF2C0308, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v43 - v20;
  v23 = (char *)&v43 + *(int *)(v22 + 48) - v20;
  sub_1BA8CAF1C(a1, (uint64_t)&v43 - v20, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CAF1C(v51, (uint64_t)v23, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA8CAF1C((uint64_t)v21, (uint64_t)v18, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v34 = *(int *)(v33 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v36 = v49;
      v35 = v50;
      v37 = v44;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v44, v23, v50);
      v38 = v46;
      sub_1BA5193C4((uint64_t)&v18[v34], (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v39 = v45;
      sub_1BA5193C4((uint64_t)&v23[v34], (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v40 = MEMORY[0x1BCCDCEFC](v18, v37);
      v41 = *(void (**)(char *, uint64_t))(v36 + 8);
      v41(v18, v35);
      if ((v40 & 1) != 0)
      {
        v32 = static FormatMetadata.== infix(_:_:)(v38, v39);
        sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v41(v37, v35);
        goto LABEL_11;
      }
      sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v41(v37, v35);
      goto LABEL_14;
    }
    sub_1BA4A2E80((uint64_t)&v18[v34], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v50);
LABEL_8:
    sub_1BB2AED20((uint64_t)v21, &qword_1EF2C0308, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization);
LABEL_15:
    v32 = 0;
    return v32 & 1;
  }
  sub_1BA8CAF1C((uint64_t)v21, (uint64_t)v15, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CF138(0, &qword_1ED3B55A8);
  v25 = *(int *)(v24 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA4A2E80((uint64_t)v15 + v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v26 = *((_QWORD *)v23 + 1);
  v27 = *((_QWORD *)v23 + 6);
  v52[0] = *(_QWORD *)v23;
  v52[1] = v26;
  v28 = *((_OWORD *)v23 + 2);
  v53 = *((_OWORD *)v23 + 1);
  v54 = v28;
  v55 = v27;
  v29 = v48;
  sub_1BA5193C4((uint64_t)v15 + v25, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v30 = v47;
  sub_1BA5193C4((uint64_t)&v23[v25], (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v31 = _s8NewsFeed18FormatLocalizationV2eeoiySbAC_ACtFZ_0(v15, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1BB06B59C((uint64_t)v21, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  v32 = static FormatMetadata.== infix(_:_:)(v29, v30);
  sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  sub_1BB06B59C((uint64_t)v21, (unint64_t *)&unk_1ED3B5CE0, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v32 & 1;
}

uint64_t sub_1BB2A695C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unsigned __int16 v33;
  char v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  _QWORD v64[2];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  uint64_t v71;
  unsigned __int16 v72;
  unsigned __int8 v73;

  v63 = (char *)a2;
  v3 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v3);
  v60 = (char **)((char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v61 = (char **)((char *)&v57 - v6);
  MEMORY[0x1E0C80A78](v7);
  v58 = (char **)((char *)&v57 - v8);
  MEMORY[0x1E0C80A78](v9);
  v59 = (char **)((char *)&v57 - v10);
  v62 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v57 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v57 - v17;
  sub_1BB2AEC78(0, &qword_1EF2C0310, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v57 + *(int *)(v21 + 48) - v20;
  v23 = a1;
  v24 = (char *)&v57 - v20;
  sub_1BA8CAF1C(v23, (uint64_t)&v57 - v20, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CAF1C((uint64_t)v63, (uint64_t)v22, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA8CAF1C((uint64_t)v24, (uint64_t)v18, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v43 = *(int *)(v42 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v46 = v57;
      v47 = v62;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v57, v22, v62);
      v48 = v59;
      sub_1BA5193C4((uint64_t)&v18[v43], (uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v49 = (uint64_t)&v22[v43];
      v50 = v58;
      sub_1BA5193C4(v49, (uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v51 = MEMORY[0x1BCCDCEFC](v18, v46);
      v52 = *(void (**)(char *, uint64_t))(v11 + 8);
      v52(v18, v47);
      if ((v51 & 1) != 0)
      {
        v39 = static FormatMetadata.== infix(_:_:)(v48, v50);
        sub_1BA4A2E80((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v52(v46, v47);
        sub_1BB06B59C((uint64_t)v24, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
        return v39 & 1;
      }
      sub_1BA4A2E80((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v52(v46, v47);
      v55 = (uint64_t)v24;
      goto LABEL_13;
    }
    sub_1BA4A2E80((uint64_t)&v18[v43], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v62);
LABEL_8:
    sub_1BB2AED20((uint64_t)v24, &qword_1EF2C0310, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration);
LABEL_14:
    v39 = 0;
    return v39 & 1;
  }
  v63 = v24;
  sub_1BA8CAF1C((uint64_t)v24, (uint64_t)v15, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CF138(0, &qword_1ED3B4850);
  v26 = *(int *)(v25 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA4A2E80((uint64_t)&v15[v26], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v44 = *((_QWORD *)v15 + 12);
    v45 = *((unsigned __int16 *)v15 + 52) | (v15[106] << 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA771864(v44, v45);
    v24 = v63;
    goto LABEL_8;
  }
  v27 = *((_QWORD *)v22 + 1);
  v29 = *((_OWORD *)v22 + 2);
  v28 = *((_OWORD *)v22 + 3);
  v30 = *((_QWORD *)v22 + 8);
  v31 = v22[72];
  v32 = *((_QWORD *)v22 + 12);
  v33 = *((_WORD *)v22 + 52);
  v34 = v22[106];
  v64[0] = *(_QWORD *)v22;
  v64[1] = v27;
  v65 = *((_OWORD *)v22 + 1);
  v66 = v29;
  v67 = v28;
  v68 = v30;
  v69 = v31;
  v70 = *((_OWORD *)v22 + 5);
  v71 = v32;
  v73 = v34;
  v72 = v33;
  v35 = v61;
  sub_1BA5193C4((uint64_t)&v15[v26], (uint64_t)v61, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v36 = v60;
  sub_1BA5193C4((uint64_t)&v22[v26], (uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  LODWORD(v62) = static FormatDecoration.== infix(_:_:)(v15, v64);
  v37 = *((_QWORD *)v15 + 12);
  v38 = *((unsigned __int16 *)v15 + 52) | (v15[106] << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA771864(v37, v38);
  if ((v62 & 1) == 0)
  {
    sub_1BA4A2E80((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v53 = v71;
    v54 = v72 | (v73 << 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BA771864(v53, v54);
    v55 = (uint64_t)v63;
LABEL_13:
    sub_1BB06B59C(v55, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_14;
  }
  v39 = static FormatMetadata.== infix(_:_:)(v35, v36);
  sub_1BA4A2E80((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v40 = v71;
  v41 = v72 | (v73 << 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA771864(v40, v41);
  sub_1BB06B59C((uint64_t)v63, (unint64_t *)&unk_1ED3B5CD0, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v39 & 1;
}

uint64_t sub_1BB2A70B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  __int128 v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 v37;
  _QWORD *v38;
  _QWORD *v39;
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  _QWORD *v58;
  char v59;
  void (*v60)(char *, uint64_t);
  __int128 v61;
  __int128 v62;
  __int128 v63;
  unsigned __int8 v64;
  char *v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD v74[2];
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  unsigned __int8 v79;

  v73 = a2;
  v3 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v3);
  v71 = (char **)((char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v72 = (char **)((char *)&v66 - v6);
  MEMORY[0x1E0C80A78](v7);
  v67 = (char **)((char *)&v66 - v8);
  MEMORY[0x1E0C80A78](v9);
  v68 = (char **)((char *)&v66 - v10);
  v11 = sub_1BB86C67C();
  v69 = *(_QWORD *)(v11 - 8);
  v70 = v11;
  MEMORY[0x1E0C80A78](v11);
  v66 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v66 - v17;
  sub_1BB2AEC78(0, &qword_1EF2C0318, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v66 - v20;
  v23 = (char *)&v66 + *(int *)(v22 + 48) - v20;
  sub_1BA8CAF1C(a1, (uint64_t)&v66 - v20, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CAF1C(v73, (uint64_t)v23, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA8CAF1C((uint64_t)v21, (uint64_t)v18, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v46 = *(int *)(v45 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v55 = v69;
      v54 = v70;
      v56 = v66;
      (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v66, v23, v70);
      v57 = v68;
      sub_1BA5193C4((uint64_t)&v18[v46], (uint64_t)v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v58 = v67;
      sub_1BA5193C4((uint64_t)&v23[v46], (uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v59 = MEMORY[0x1BCCDCEFC](v18, v56);
      v60 = *(void (**)(char *, uint64_t))(v55 + 8);
      v60(v18, v54);
      if ((v59 & 1) != 0)
      {
        v40 = static FormatMetadata.== infix(_:_:)(v57, v58);
        sub_1BA4A2E80((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v60(v56, v54);
        goto LABEL_11;
      }
      sub_1BA4A2E80((uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v60(v56, v54);
      goto LABEL_14;
    }
    sub_1BA4A2E80((uint64_t)&v18[v46], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v18, v70);
LABEL_8:
    sub_1BB2AED20((uint64_t)v21, &qword_1EF2C0318, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType);
LABEL_15:
    v40 = 0;
    return v40 & 1;
  }
  sub_1BA8CAF1C((uint64_t)v21, (uint64_t)v15, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CF138(0, &qword_1ED3B3168);
  v25 = *(int *)(v24 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA4A2E80((uint64_t)&v15[v25], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v47 = *((_QWORD *)v15 + 4);
    v48 = *((_QWORD *)v15 + 5);
    v49 = *((_QWORD *)v15 + 6);
    v50 = *((_QWORD *)v15 + 7);
    v51 = *((_QWORD *)v15 + 8);
    v52 = *((_QWORD *)v15 + 9);
    v53 = v15[80];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6C0C20(v47, v48, v49, v50, v51, v52, v53);
    goto LABEL_8;
  }
  v26 = *((_QWORD *)v23 + 1);
  v27 = v23[80];
  v74[0] = *(_QWORD *)v23;
  v74[1] = v26;
  v28 = *((_OWORD *)v23 + 2);
  v75 = *((_OWORD *)v23 + 1);
  v76 = v28;
  v29 = *((_OWORD *)v23 + 4);
  v77 = *((_OWORD *)v23 + 3);
  v78 = v29;
  v79 = v27;
  sub_1BA5193C4((uint64_t)&v15[v25], (uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA5193C4((uint64_t)&v23[v25], (uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v30 = static FormatType.== infix(_:_:)((uint64_t)v15, (uint64_t)v74);
  v31 = *((_QWORD *)v15 + 4);
  v32 = *((_QWORD *)v15 + 5);
  v33 = *((_QWORD *)v15 + 6);
  v34 = *((_QWORD *)v15 + 7);
  v35 = *((_QWORD *)v15 + 8);
  v36 = *((_QWORD *)v15 + 9);
  v37 = v15[80];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6C0C20(v31, v32, v33, v34, v35, v36, v37);
  if (!v30)
  {
    sub_1BA4A2E80((uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v61 = v76;
    v62 = v77;
    v63 = v78;
    v64 = v79;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6C0C20(v61, *((uint64_t *)&v61 + 1), v62, *((uint64_t *)&v62 + 1), v63, *((uint64_t *)&v63 + 1), v64);
LABEL_14:
    sub_1BB06B59C((uint64_t)v21, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  v39 = v71;
  v38 = v72;
  v40 = static FormatMetadata.== infix(_:_:)(v72, v71);
  sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v41 = v76;
  v42 = v77;
  v43 = v78;
  v44 = v79;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6C0C20(v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44);
LABEL_11:
  sub_1BB06B59C((uint64_t)v21, (unint64_t *)&unk_1ED3B5D10, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v40 & 1;
}

uint64_t sub_1BB2A7700(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  __int128 v32;
  _QWORD *v33;
  _QWORD *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  _QWORD v54[2];
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  char v60;
  __int128 v61;
  char v62;

  v53 = (char *)a2;
  v3 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v3);
  v50 = (char **)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v52 = (char **)((char *)&v47 - v6);
  MEMORY[0x1E0C80A78](v7);
  v48 = (char **)((char *)&v47 - v8);
  MEMORY[0x1E0C80A78](v9);
  v49 = (char **)((char *)&v47 - v10);
  v51 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v47 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v47 - v17;
  sub_1BB2AEC78(0, &qword_1EF2C0320, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v47 + *(int *)(v21 + 48) - v20;
  v23 = a1;
  v24 = (char *)&v47 - v20;
  sub_1BA8CAF1C(v23, (uint64_t)&v47 - v20, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CAF1C((uint64_t)v53, (uint64_t)v22, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA8CAF1C((uint64_t)v24, (uint64_t)v18, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v37 = *(int *)(v36 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v38 = v47;
      v39 = v51;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v47, v22, v51);
      v40 = v49;
      sub_1BA5193C4((uint64_t)&v18[v37], (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v41 = (uint64_t)&v22[v37];
      v42 = v48;
      sub_1BA5193C4(v41, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v43 = MEMORY[0x1BCCDCEFC](v18, v38);
      v44 = *(void (**)(char *, uint64_t))(v11 + 8);
      v44(v18, v39);
      if ((v43 & 1) != 0)
      {
        v35 = static FormatMetadata.== infix(_:_:)(v40, v42);
        sub_1BA4A2E80((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v44(v38, v39);
        sub_1BB06B59C((uint64_t)v24, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
        return v35 & 1;
      }
      sub_1BA4A2E80((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v44(v38, v39);
      v45 = (uint64_t)v24;
      goto LABEL_13;
    }
    sub_1BA4A2E80((uint64_t)&v18[v37], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v51);
LABEL_8:
    sub_1BB2AED20((uint64_t)v24, &qword_1EF2C0320, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary);
LABEL_14:
    v35 = 0;
    return v35 & 1;
  }
  v53 = v24;
  sub_1BA8CAF1C((uint64_t)v24, (uint64_t)v15, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CF138(0, &qword_1ED3B5F60);
  v26 = *(int *)(v25 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA4A2E80((uint64_t)&v15[v26], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v24 = v53;
    goto LABEL_8;
  }
  v27 = *((_QWORD *)v22 + 1);
  v28 = *((_QWORD *)v22 + 6);
  v29 = *((_QWORD *)v22 + 7);
  v30 = v22[80];
  v31 = v22[104];
  v54[0] = *(_QWORD *)v22;
  v54[1] = v27;
  v32 = *((_OWORD *)v22 + 2);
  v55 = *((_OWORD *)v22 + 1);
  v56 = v32;
  v57 = v28;
  v58 = v29;
  v59 = *((_OWORD *)v22 + 4);
  v60 = v30;
  v61 = *(_OWORD *)(v22 + 88);
  v62 = v31;
  sub_1BA5193C4((uint64_t)&v15[v26], (uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v33 = v50;
  sub_1BA5193C4((uint64_t)&v22[v26], (uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  LODWORD(v51) = static FormatSupplementary.== infix(_:_:)((uint64_t)v15, (uint64_t)v54);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if ((v51 & 1) == 0)
  {
    sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v45 = (uint64_t)v53;
LABEL_13:
    sub_1BB06B59C(v45, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_14;
  }
  v34 = v52;
  v35 = static FormatMetadata.== infix(_:_:)(v52, v33);
  sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4A2E80((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BB06B59C((uint64_t)v53, (unint64_t *)&unk_1ED3B5CF0, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v35 & 1;
}

uint64_t sub_1BB2A7E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD **v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;

  v4 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v4);
  v45 = (uint64_t *)((char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v46 = (uint64_t *)((char *)&v42 - v7);
  MEMORY[0x1E0C80A78](v8);
  v43 = (uint64_t *)((char *)&v42 - v9);
  MEMORY[0x1E0C80A78](v10);
  v44 = (uint64_t *)((char *)&v42 - v11);
  v47 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CED28(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (_QWORD **)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v42 - v19;
  sub_1BB2AED0C(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = &v23[*(int *)(v24 + 48)];
  sub_1BA4C2DD8(a1, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BA8CED28);
  sub_1BA4C2DD8(a2, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BA8CED28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4C2DD8((uint64_t)v23, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA8CED28);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3BCE70, (void (*)(uint64_t))type metadata accessor for FormatSnippet);
    v27 = *(int *)(v26 + 48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = *(_QWORD **)v25;
      v29 = v46;
      sub_1BA5193C4((uint64_t)v17 + v27, (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v30 = v45;
      sub_1BA5193C4((uint64_t)&v25[v27], (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      type metadata accessor for FormatSnippet();
      v31 = static FormatSnippet.== infix(_:_:)(*v17, v28);
      swift_release();
      if ((v31 & 1) != 0)
      {
        v32 = static FormatMetadata.== infix(_:_:)(v29, v30);
        sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        swift_release();
LABEL_14:
        v35 = sub_1BA8CED28;
        goto LABEL_15;
      }
      sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      swift_release();
      goto LABEL_13;
    }
    sub_1BA4A2E80((uint64_t)v17 + v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    swift_release();
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA8CED28);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v34 = *(int *)(v33 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v36 = v47;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v25, v47);
      v37 = v44;
      sub_1BA5193C4((uint64_t)&v20[v34], (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v38 = v43;
      sub_1BA5193C4((uint64_t)&v25[v34], (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v39 = MEMORY[0x1BCCDCEFC](v20, v14);
      v40 = *(void (**)(char *, uint64_t))(v12 + 8);
      v40(v20, v36);
      if ((v39 & 1) != 0)
      {
        v32 = static FormatMetadata.== infix(_:_:)(v37, v38);
        sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v40(v14, v36);
        goto LABEL_14;
      }
      sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v40(v14, v36);
LABEL_13:
      v32 = 0;
      goto LABEL_14;
    }
    sub_1BA4A2E80((uint64_t)&v20[v34], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v47);
  }
  v32 = 0;
  v35 = sub_1BB2AED0C;
LABEL_15:
  sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))v35);
  return v32 & 1;
}

uint64_t sub_1BB2A82A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _QWORD *v29;
  _QWORD *v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  _QWORD *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v51 = a2;
  v3 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v3);
  v47 = (uint64_t *)((char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v48 = (uint64_t *)((char *)&v43 - v6);
  MEMORY[0x1E0C80A78](v7);
  v45 = (uint64_t *)((char *)&v43 - v8);
  MEMORY[0x1E0C80A78](v9);
  v46 = (uint64_t *)((char *)&v43 - v10);
  v11 = sub_1BB86C67C();
  v49 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  MEMORY[0x1E0C80A78](v11);
  v44 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v43 - v17;
  sub_1BB2AEC78(0, &qword_1EF2C0330, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v43 - v20;
  v23 = (char *)&v43 + *(int *)(v22 + 48) - v20;
  sub_1BA8CAF1C(a1, (uint64_t)&v43 - v20, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CAF1C(v51, (uint64_t)v23, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA8CAF1C((uint64_t)v21, (uint64_t)v18, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v34 = *(int *)(v33 + 48);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v36 = v49;
      v35 = v50;
      v37 = v44;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v44, v23, v50);
      v38 = v46;
      sub_1BA5193C4((uint64_t)&v18[v34], (uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v39 = v45;
      sub_1BA5193C4((uint64_t)&v23[v34], (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v40 = MEMORY[0x1BCCDCEFC](v18, v37);
      v41 = *(void (**)(char *, uint64_t))(v36 + 8);
      v41(v18, v35);
      if ((v40 & 1) != 0)
      {
        v32 = static FormatMetadata.== infix(_:_:)(v38, v39);
        sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v41(v37, v35);
        goto LABEL_11;
      }
      sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v41(v37, v35);
      goto LABEL_14;
    }
    sub_1BA4A2E80((uint64_t)&v18[v34], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v18, v50);
LABEL_8:
    sub_1BB2AED20((uint64_t)v21, &qword_1EF2C0330, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle);
LABEL_15:
    v32 = 0;
    return v32 & 1;
  }
  sub_1BA8CAF1C((uint64_t)v21, (uint64_t)v15, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CF138(0, &qword_1ED3B3338);
  v25 = *(int *)(v24 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA4A2E80((uint64_t)&v15[v25], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v26 = *((_QWORD *)v23 + 1);
  v27 = *((_QWORD *)v23 + 8);
  v52[0] = *(_QWORD *)v23;
  v52[1] = v26;
  v28 = *((_OWORD *)v23 + 2);
  v53 = *((_OWORD *)v23 + 1);
  v54 = v28;
  v55 = *((_OWORD *)v23 + 3);
  v56 = v27;
  v29 = v48;
  sub_1BA5193C4((uint64_t)&v15[v25], (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v30 = v47;
  sub_1BA5193C4((uint64_t)&v23[v25], (uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v31 = static FormatStyle.== infix(_:_:)(v15, v52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) == 0)
  {
    sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    sub_1BB06B59C((uint64_t)v21, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  v32 = static FormatMetadata.== infix(_:_:)(v29, v30);
  sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  sub_1BB06B59C((uint64_t)v21, (unint64_t *)&unk_1ED3B5D30, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v32 & 1;
}

uint64_t sub_1BB2A88D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _QWORD *v29;
  _QWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _OWORD v66[2];
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _OWORD v73[2];
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  _OWORD v80[3];

  v58 = a1;
  v59 = a2;
  v2 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v2);
  v54 = (uint64_t *)((char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v55 = (uint64_t *)((char *)&v50 - v5);
  MEMORY[0x1E0C80A78](v6);
  v52 = (uint64_t *)((char *)&v50 - v7);
  MEMORY[0x1E0C80A78](v8);
  v53 = (uint64_t *)((char *)&v50 - v9);
  v10 = sub_1BB86C67C();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v12);
  v14 = (__int128 *)((char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v50 - v16;
  sub_1BB2AEC78(0, &qword_1EF2C0338, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v50 - v19;
  v22 = (__int128 *)((char *)&v50 + *(int *)(v21 + 48) - v19);
  sub_1BA8CAF1C(v58, (uint64_t)&v50 - v19, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CAF1C(v59, (uint64_t)v22, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA8CAF1C((uint64_t)v20, (uint64_t)v17, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v36 = *(int *)(v35 + 48);
    v37 = &v17[v36];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v41 = (uint64_t)v22 + v36;
      v43 = v56;
      v42 = v57;
      v44 = v51;
      (*(void (**)(char *, __int128 *, uint64_t))(v56 + 32))(v51, v22, v57);
      v45 = (uint64_t)v37;
      v46 = v53;
      sub_1BA5193C4(v45, (uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v47 = v52;
      sub_1BA5193C4(v41, (uint64_t)v52, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      LOBYTE(v41) = MEMORY[0x1BCCDCEFC](v17, v44);
      v48 = *(void (**)(char *, uint64_t))(v43 + 8);
      v48(v17, v42);
      if ((v41 & 1) != 0)
      {
        v34 = static FormatMetadata.== infix(_:_:)(v46, v47);
        sub_1BA4A2E80((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v48(v44, v42);
        goto LABEL_11;
      }
      sub_1BA4A2E80((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v48(v44, v42);
      goto LABEL_14;
    }
    sub_1BA4A2E80((uint64_t)&v17[v36], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v17, v57);
LABEL_8:
    sub_1BB2AED20((uint64_t)v20, &qword_1EF2C0338, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem);
LABEL_15:
    v34 = 0;
    return v34 & 1;
  }
  sub_1BA8CAF1C((uint64_t)v20, (uint64_t)v14, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CF138(0, &qword_1ED3B3108);
  v24 = *(int *)(v23 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA4A2E80((uint64_t)v14 + v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v38 = v14[5];
    v78 = v14[4];
    v79 = v38;
    v80[0] = v14[6];
    *(_OWORD *)((char *)v80 + 9) = *(__int128 *)((char *)v14 + 105);
    v39 = v14[1];
    v74 = *v14;
    v75 = v39;
    v40 = v14[3];
    v76 = v14[2];
    v77 = v40;
    sub_1BA8CEE60((uint64_t)&v74);
    goto LABEL_8;
  }
  v25 = (uint64_t)v22 + v24;
  v26 = v22[5];
  v71 = v22[4];
  v72 = v26;
  v73[0] = v22[6];
  *(_OWORD *)((char *)v73 + 9) = *(__int128 *)((char *)v22 + 105);
  v27 = v22[1];
  v67 = *v22;
  v68 = v27;
  v28 = v22[3];
  v69 = v22[2];
  v70 = v28;
  v29 = v55;
  sub_1BA5193C4((uint64_t)v14 + v24, (uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v30 = v54;
  sub_1BA5193C4(v25, (uint64_t)v54, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  LOBYTE(v25) = static FormatItem.== infix(_:_:)(v14, &v67);
  v31 = v14[5];
  v78 = v14[4];
  v79 = v31;
  v80[0] = v14[6];
  *(_OWORD *)((char *)v80 + 9) = *(__int128 *)((char *)v14 + 105);
  v32 = v14[1];
  v74 = *v14;
  v75 = v32;
  v33 = v14[3];
  v76 = v14[2];
  v77 = v33;
  sub_1BA8CEE60((uint64_t)&v74);
  if ((v25 & 1) == 0)
  {
    sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v64 = v71;
    v65 = v72;
    v66[0] = v73[0];
    *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)((char *)v73 + 9);
    v60 = v67;
    v61 = v68;
    v62 = v69;
    v63 = v70;
    sub_1BA8CEE60((uint64_t)&v60);
LABEL_14:
    sub_1BB06B59C((uint64_t)v20, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  v34 = static FormatMetadata.== infix(_:_:)(v29, v30);
  sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4A2E80((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v64 = v71;
  v65 = v72;
  v66[0] = v73[0];
  *(_OWORD *)((char *)v66 + 9) = *(_OWORD *)((char *)v73 + 9);
  v60 = v67;
  v61 = v68;
  v62 = v69;
  v63 = v70;
  sub_1BA8CEE60((uint64_t)&v60);
LABEL_11:
  sub_1BB06B59C((uint64_t)v20, (unint64_t *)&unk_1ED3B5D00, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v34 & 1;
}

uint64_t sub_1BB2A8EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __int128 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _QWORD *v30;
  _QWORD *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;

  v61 = a1;
  v62 = a2;
  v2 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v2);
  v57 = (uint64_t *)((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v58 = (uint64_t *)((char *)&v53 - v5);
  MEMORY[0x1E0C80A78](v6);
  v55 = (uint64_t *)((char *)&v53 - v7);
  MEMORY[0x1E0C80A78](v8);
  v56 = (uint64_t *)((char *)&v53 - v9);
  v10 = sub_1BB86C67C();
  v59 = *(_QWORD *)(v10 - 8);
  v60 = v10;
  MEMORY[0x1E0C80A78](v10);
  v54 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  MEMORY[0x1E0C80A78](v12);
  v14 = (__int128 *)((char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v53 - v16;
  sub_1BB2AEC78(0, &qword_1EF2C0340, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v53 - v19;
  v22 = (__int128 *)((char *)&v53 + *(int *)(v21 + 48) - v19);
  sub_1BA8CAF1C(v61, (uint64_t)&v53 - v19, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CAF1C(v62, (uint64_t)v22, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA8CAF1C((uint64_t)v20, (uint64_t)v17, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v38 = *(int *)(v37 + 48);
    v39 = &v17[v38];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v44 = (uint64_t)v22 + v38;
      v46 = v59;
      v45 = v60;
      v47 = v54;
      (*(void (**)(char *, __int128 *, uint64_t))(v59 + 32))(v54, v22, v60);
      v48 = (uint64_t)v39;
      v49 = v56;
      sub_1BA5193C4(v48, (uint64_t)v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v50 = v55;
      sub_1BA5193C4(v44, (uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      LOBYTE(v44) = MEMORY[0x1BCCDCEFC](v17, v47);
      v51 = *(void (**)(char *, uint64_t))(v46 + 8);
      v51(v17, v45);
      if ((v44 & 1) != 0)
      {
        v36 = static FormatMetadata.== infix(_:_:)(v49, v50);
        sub_1BA4A2E80((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        sub_1BA4A2E80((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
        v51(v47, v45);
        goto LABEL_11;
      }
      sub_1BA4A2E80((uint64_t)v50, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      sub_1BA4A2E80((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v51(v47, v45);
      goto LABEL_14;
    }
    sub_1BA4A2E80((uint64_t)&v17[v38], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v60);
LABEL_8:
    sub_1BB2AED20((uint64_t)v20, &qword_1EF2C0340, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup);
LABEL_15:
    v36 = 0;
    return v36 & 1;
  }
  sub_1BA8CAF1C((uint64_t)v20, (uint64_t)v14, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  sub_1BA8CF138(0, qword_1ED3B3268);
  v24 = *(int *)(v23 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA4A2E80((uint64_t)v14 + v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v40 = v14[7];
    v87 = v14[6];
    v88 = v40;
    v89 = v14[8];
    v41 = v14[3];
    v83 = v14[2];
    v84 = v41;
    v42 = v14[5];
    v85 = v14[4];
    v86 = v42;
    v43 = v14[1];
    v81 = *v14;
    v82 = v43;
    sub_1BA8C89E4((uint64_t)&v81);
    goto LABEL_8;
  }
  v25 = (uint64_t)v22 + v24;
  v26 = v22[7];
  v78 = v22[6];
  v79 = v26;
  v80 = v22[8];
  v27 = v22[3];
  v74 = v22[2];
  v75 = v27;
  v28 = v22[5];
  v76 = v22[4];
  v77 = v28;
  v29 = v22[1];
  v72 = *v22;
  v73 = v29;
  v30 = v58;
  sub_1BA5193C4((uint64_t)v14 + v24, (uint64_t)v58, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v31 = v57;
  sub_1BA5193C4(v25, (uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  LOBYTE(v25) = static FormatGroup.== infix(_:_:)(v14, &v72);
  v32 = v14[7];
  v87 = v14[6];
  v88 = v32;
  v89 = v14[8];
  v33 = v14[3];
  v83 = v14[2];
  v84 = v33;
  v34 = v14[5];
  v85 = v14[4];
  v86 = v34;
  v35 = v14[1];
  v81 = *v14;
  v82 = v35;
  sub_1BA8C89E4((uint64_t)&v81);
  if ((v25 & 1) == 0)
  {
    sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v69 = v78;
    v70 = v79;
    v71 = v80;
    v65 = v74;
    v66 = v75;
    v67 = v76;
    v68 = v77;
    v63 = v72;
    v64 = v73;
    sub_1BA8C89E4((uint64_t)&v63);
LABEL_14:
    sub_1BB06B59C((uint64_t)v20, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    goto LABEL_15;
  }
  v36 = static FormatMetadata.== infix(_:_:)(v30, v31);
  sub_1BA4A2E80((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v69 = v78;
  v70 = v79;
  v71 = v80;
  v65 = v74;
  v66 = v75;
  v67 = v76;
  v68 = v77;
  v63 = v72;
  v64 = v73;
  sub_1BA8C89E4((uint64_t)&v63);
LABEL_11:
  sub_1BB06B59C((uint64_t)v20, (unint64_t *)&unk_1ED3B5D20, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
  return v36 & 1;
}

uint64_t FormatContentSubgroup.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSubgroup.layouts.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatContentSubgroup();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))sub_1BA6BCC70);
}

uint64_t FormatContentSubgroup.properties.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2A9578(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 24);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.properties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.properties.modify())()
{
  type metadata accessor for FormatContentSubgroup();
  return nullsub_1;
}

uint64_t FormatContentSubgroup.selectors.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2A9648(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 28);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.selectors.modify())()
{
  type metadata accessor for FormatContentSubgroup();
  return nullsub_1;
}

uint64_t FormatContentSubgroup.contents.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2A9718(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 32);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.contents.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 32);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.contents.modify())()
{
  type metadata accessor for FormatContentSubgroup();
  return nullsub_1;
}

uint64_t FormatContentSubgroup.placeholders.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2A97E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 36);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.placeholders.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.placeholders.modify())()
{
  type metadata accessor for FormatContentSubgroup();
  return nullsub_1;
}

uint64_t sub_1BB2A9898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  v7 = type metadata accessor for FormatContentSubgroup();
  sub_1BA8CAF1C(a1 + *(int *)(v7 + 40), (uint64_t)v6, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  return sub_1BA5193C4((uint64_t)v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
}

uint64_t sub_1BB2A9970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v6, v7);
  v8 = type metadata accessor for FormatContentSubgroup();
  return sub_1BB2A9A2C((uint64_t)v6, a2 + *(int *)(v8 + 40));
}

uint64_t FormatContentSubgroup.metadata.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 40);
  return sub_1BB2A9A2C(a1, v3);
}

uint64_t sub_1BB2A9A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*FormatContentSubgroup.metadata.modify())()
{
  type metadata accessor for FormatContentSubgroup();
  return nullsub_1;
}

uint64_t FormatContentSubgroup.filters.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2A9AB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 44);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.filters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 44);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.filters.modify())()
{
  type metadata accessor for FormatContentSubgroup();
  return nullsub_1;
}

uint64_t FormatContentSubgroup.sections.getter()
{
  type metadata accessor for FormatContentSubgroup();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2A9B88(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatContentSubgroup() + 48);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatContentSubgroup.sections.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatContentSubgroup() + 48);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatContentSubgroup.sections.modify())()
{
  type metadata accessor for FormatContentSubgroup();
  return nullsub_1;
}

uint64_t sub_1BB2A9C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[6];
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  __int128 v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char v82[16];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87[16];
  uint64_t v88;
  uint64_t v89;

  v76 = a5;
  v11 = (int *)type metadata accessor for FormatContentSubgroup();
  v12 = *(_QWORD *)((char *)v5 + v11[9]);
  v88 = a2;
  swift_bridgeObjectRetain();
  v81 = sub_1BB7CB998((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB2AED5C, (uint64_t)v87, v12);
  swift_bridgeObjectRelease();
  v13 = v11[8];
  v78 = a1;
  v79 = v5;
  v14 = *(_QWORD *)((char *)v5 + v13);
  v83 = a1;
  v84 = a2;
  v85 = a3;
  v86 = a4;
  swift_bridgeObjectRetain();
  v15 = sub_1BB1413EC((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB2AEDB4, (uint64_t)v82, v14);
  v16 = swift_bridgeObjectRelease();
  if (v6)
    return swift_bridgeObjectRelease();
  v73 = v15;
  v18 = *(_QWORD *)((char *)v79 + v11[12]);
  MEMORY[0x1E0C80A78](v16);
  v66[2] = v78;
  v66[3] = a2;
  v66[4] = a3;
  v66[5] = a4;
  swift_bridgeObjectRetain();
  v19 = sub_1BB141600((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB2AEDD0, (uint64_t)v66, v18);
  swift_bridgeObjectRelease();
  v74 = 0;
  v80 = a2;
  v69 = v19;
  v20 = v79;
  v22 = *v79;
  v21 = v79[1];
  v23 = *(_QWORD *)((char *)v79 + v11[6]);
  v24 = MEMORY[0x1E0DEE9D8];
  v89 = MEMORY[0x1E0DEE9D8];
  v25 = *(_QWORD *)(v23 + 16);
  v71 = v22;
  v72 = v11;
  v70 = v21;
  if (!v25)
  {
    swift_bridgeObjectRetain_n();
    v44 = *(_QWORD *)((char *)v20 + v11[7]);
    v75 = v24;
    v89 = v24;
    goto LABEL_24;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v68 = v23;
  v26 = (uint64_t *)(v23 + 48);
  v77 = xmmword_1BB87CE70;
  do
  {
    v34 = *(v26 - 2);
    v35 = *(v26 - 1);
    v36 = *v26;
    if ((~*v26 & 0xF000000000000007) != 0)
    {
      sub_1BA4B07F0(0, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v27 = type metadata accessor for FormatOption();
      v28 = *(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80);
      v29 = (v28 + 32) & ~v28;
      v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = v77;
      v31 = (uint64_t *)(v30 + v29);
      *v31 = v34;
      v31[1] = v35;
      v31[2] = v36;
      v31[3] = 1;
      v32 = v30 + v29 + *(int *)(v27 + 28);
      v33 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    v37 = *(_QWORD *)(v80 + 72);
    if (*(_QWORD *)(v37 + 16))
    {
      swift_bridgeObjectRetain();
      v38 = sub_1BA6E35A8(v34, v35);
      if ((v39 & 1) != 0)
      {
        v40 = *(_QWORD *)(v37 + 56) + (v38 << 6);
        v75 = *(_QWORD *)(v40 + 8);
        v30 = *(_QWORD *)(v40 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      swift_bridgeObjectRelease();
    }
    v30 = MEMORY[0x1E0DEE9D8];
LABEL_6:
    v26 += 3;
    sub_1BA5E7FF4(v36);
    sub_1BA6D3834(v30);
    --v25;
  }
  while (v25);
  v41 = v68;
  swift_bridgeObjectRelease();
  v42 = v89;
  v43 = *(_QWORD *)(v41 + 16);
  v20 = v79;
  v44 = *(_QWORD *)((char *)v79 + v72[7]);
  v89 = MEMORY[0x1E0DEE9D8];
  v75 = v42;
  if (!v43)
  {
LABEL_24:
    v55 = v78;
    v56 = v76;
    v57 = v81;
    v58 = v69;
    swift_bridgeObjectRetain();
    v59 = MEMORY[0x1E0DEE9D8];
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  v67 = v44;
  swift_bridgeObjectRetain();
  v45 = (_QWORD *)(v41 + 48);
  v46 = MEMORY[0x1E0DEE9E8];
  v47 = v80;
  do
  {
    v48 = v46;
    if ((~*v45 & 0xF000000000000007) == 0)
    {
      v49 = *(_QWORD *)(v47 + 72);
      if (*(_QWORD *)(v49 + 16))
      {
        v50 = *(v45 - 2);
        v51 = *(v45 - 1);
        swift_bridgeObjectRetain();
        v52 = sub_1BA6E35A8(v50, v51);
        if ((v53 & 1) != 0)
        {
          v54 = *(_QWORD *)(v49 + 56) + (v52 << 6);
          *(_QWORD *)&v77 = *(_QWORD *)(v54 + 8);
          v48 = *(_QWORD *)(v54 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v20 = v79;
          swift_bridgeObjectRelease();
          v46 = MEMORY[0x1E0DEE9E8];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v47 = v80;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v48 = v46;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v48 = v46;
      }
    }
    v45 += 3;
    sub_1BA67FB48(v48);
    --v43;
  }
  while (v43);
  swift_bridgeObjectRelease();
  v59 = v89;
  v55 = v78;
  v56 = v76;
  v57 = v81;
  v58 = v69;
  v44 = v67;
LABEL_26:
  v60 = sub_1BA78A504(v59, v44);
  swift_bridgeObjectRelease();
  v89 = (uint64_t)v73;
  sub_1BA6D74C4(v57);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B03B0, (uint64_t)&type metadata for FormatContentSlot.Resolved, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB2AEDEC();
  v61 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  v62 = *(_QWORD *)((char *)v20 + v72[11]);
  v63 = v71;
  v64 = v70;
  *v56 = v71;
  v56[1] = v64;
  v56[2] = v63;
  v56[3] = v64;
  v65 = v75;
  v56[4] = v55;
  v56[5] = v65;
  v56[6] = v60;
  v56[7] = v61;
  v56[8] = v58;
  v56[9] = v62;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1BB2AA26C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  _QWORD v13[6];

  v9 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  swift_bridgeObjectRetain();
  v11 = sub_1BB1413EC((void (*)(uint64_t *__return_ptr, _QWORD *))sub_1BB2AEE8C, (uint64_t)v13, v10);
  result = swift_bridgeObjectRelease();
  if (!v6)
  {
    *a6 = v9;
    a6[1] = v8;
    a6[2] = v11;
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_1BB2AA2F4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double result;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD v37[3];
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;

  v44 = a5;
  v47 = a4;
  v43 = a3;
  v38 = a6;
  sub_1BB2AEE4C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatSlotDefinition();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = a1[1];
  v39 = a1[2];
  v40 = a1[3];
  v41 = a1[4];
  v42 = a1[5];
  v37[1] = a2;
  v17 = a2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots;
  swift_beginAccess();
  v18 = *(_QWORD *)(v17 + 8);
  v19 = *(_QWORD *)(v18 + 16);
  v45 = v16;
  v37[2] = v17;
  if (v19)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1BA6E35A8(v15, v16);
    if ((v21 & 1) != 0)
    {
      sub_1BA4C2DD8(*(_QWORD *)(v18 + 56) + *(_QWORD *)(v12 + 72) * v20, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v22, 1, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      sub_1BA5193C4((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      v48 = v15;
      v49 = v45;
      v50 = v39;
      v51 = v40;
      v52 = v41;
      v53 = v42;
      sub_1BA4AD288(0, &qword_1ED3C0560, (uint64_t)&type metadata for FormatSlotTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1BB87CE70;
      v28 = swift_allocObject();
      type metadata accessor for FormatSlotItemCountLimit();
      v29 = swift_allocBox();
      sub_1BA4C2DD8((uint64_t)v14, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)(v28 + 16) = v29;
      *(_QWORD *)(v27 + 32) = v28 | 0x4000000000000000;
      v59 = v27;
      v31 = swift_bridgeObjectRetain();
      sub_1BB386EE4(v31);
      v32 = v46;
      sub_1BB5F436C(v43, v47, v44, v59, &v54);
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinition);
      swift_bridgeObjectRelease();
      if (v32)
        return result;
      goto LABEL_13;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BB2AEE4C);
  v23 = *(_QWORD *)(v47 + *(int *)(type metadata accessor for FormatServiceOptions() + 40) + 120);
  v24 = v15;
  if (*(_QWORD *)(v23 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    v25 = sub_1BB874608();
    v24 = v15;
    v26 = v25 & ~(-1 << *(_BYTE *)(v23 + 32));
    if (((*(_QWORD *)(v23 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) != 0)
      __asm { BR              X9 }
  }
  v48 = v24;
  v49 = v45;
  v50 = v39;
  v51 = v40;
  v52 = v41;
  v53 = v42;
  v34 = v46;
  sub_1BB5F436C(v43, v47, v44, MEMORY[0x1E0DEE9D8], &v54);
  if (!v34)
  {
LABEL_13:
    v35 = v58;
    v36 = v38;
    *v38 = v54;
    *(_OWORD *)(v36 + 1) = v55;
    *(_OWORD *)(v36 + 3) = v56;
    result = *(double *)&v57;
    *(_OWORD *)(v36 + 5) = v57;
    v36[7] = v35;
  }
  return result;
}

uint64_t FormatContentSubgroup.copy(identifier:layouts:properties:selectors:contents:sections:placeholders:metadata:filters:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t (*v49)(_QWORD);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t result;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v12 = v11;
  v77 = a7;
  v78 = a8;
  v75 = a5;
  v76 = a6;
  v74 = a4;
  v82 = a3;
  v91 = a1;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v15);
  v73 = (uint64_t)&v72 - v16;
  sub_1BA6C0BF8(0);
  MEMORY[0x1E0C80A78](v17);
  v90 = (uint64_t)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FormatMetadata();
  v87 = *(_QWORD *)(v19 - 8);
  v88 = v19;
  MEMORY[0x1E0C80A78](v19);
  v79 = (uint64_t)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB2AB014(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCC70(0);
  v80 = v24;
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v92 = (uint64_t)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = (int *)type metadata accessor for FormatContentSubgroup();
  MEMORY[0x1E0C80A78](v27);
  v89 = (uint64_t)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v86 = (uint64_t)&v72 - v30;
  MEMORY[0x1E0C80A78](v31);
  v84 = (uint64_t)&v72 - v32;
  MEMORY[0x1E0C80A78](v33);
  v83 = (char *)&v72 - v34;
  MEMORY[0x1E0C80A78](v35);
  v81 = (uint64_t)&v72 - v36;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v72 - v38;
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v72 - v41;
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)&v72 - v44;
  MEMORY[0x1E0C80A78](v46);
  v48 = (uint64_t *)((char *)&v72 - v47);
  sub_1BA4C2DD8(v12, (uint64_t)&v72 - v47, v49);
  if (a2)
  {
    v85 = a2;
  }
  else
  {
    v50 = v48[1];
    v91 = *v48;
    v85 = v50;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  sub_1BA4C2DD8(v82, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BB2AB014);
  sub_1BA4C2DD8(v12, (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v80) == 1)
  {
    sub_1BA4C2DD8((uint64_t)&v45[v27[5]], v92, (uint64_t (*)(_QWORD))sub_1BA6BCC70);
    sub_1BA4A2E80((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BB2AB014);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
    sub_1BA5193C4((uint64_t)v23, v92, (uint64_t (*)(_QWORD))sub_1BA6BCC70);
  }
  v51 = v77;
  v52 = v78;
  v54 = v75;
  v53 = v76;
  v55 = v74;
  sub_1BA4C2DD8(v12, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  if (v55)
  {
    v78 = v55;
  }
  else
  {
    v78 = *(_QWORD *)&v42[v27[6]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  sub_1BA4C2DD8(v12, (uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  if (v54)
  {
    v82 = v54;
  }
  else
  {
    v82 = *(_QWORD *)&v39[v27[7]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v39, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  v56 = v81;
  sub_1BA4C2DD8(v12, v81, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  if (v53)
  {
    v80 = v53;
  }
  else
  {
    v80 = *(_QWORD *)(v56 + v27[8]);
    swift_bridgeObjectRetain();
  }
  v57 = (uint64_t)v83;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  sub_1BA4C2DD8(v12, v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  if (v51)
  {
    v58 = v51;
  }
  else
  {
    v58 = *(_QWORD *)(v57 + v27[12]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v57, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  v59 = v84;
  sub_1BA4C2DD8(v12, v84, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  if (v52)
  {
    v60 = v52;
  }
  else
  {
    v60 = *(_QWORD *)(v59 + v27[9]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  v61 = v90;
  sub_1BA4C2DD8(a10, v90, (uint64_t (*)(_QWORD))sub_1BA6C0BF8);
  v62 = v86;
  sub_1BA4C2DD8(v12, v86, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v61, 1, v88) == 1)
  {
    v63 = v73;
    sub_1BA8CAF1C(v62 + v27[10], v73, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
    v64 = v63;
    v65 = v79;
    sub_1BA5193C4(v64, v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
    sub_1BA4A2E80(v61, (uint64_t (*)(_QWORD))sub_1BA6C0BF8);
  }
  else
  {
    sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
    v65 = v79;
    sub_1BA5193C4(v61, v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  }
  v66 = v91;
  v67 = v78;
  v68 = v89;
  sub_1BA4C2DD8(v12, v89, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  if (a11)
  {
    v69 = a11;
  }
  else
  {
    v69 = *(_QWORD *)(v68 + v27[11]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v68, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroup);
  v70 = v85;
  *a9 = v66;
  a9[1] = v70;
  sub_1BA5193C4(v92, (uint64_t)a9 + v27[5], (uint64_t (*)(_QWORD))sub_1BA6BCC70);
  *(_QWORD *)((char *)a9 + v27[6]) = v67;
  *(_QWORD *)((char *)a9 + v27[7]) = v82;
  *(_QWORD *)((char *)a9 + v27[9]) = v60;
  *(_QWORD *)((char *)a9 + v27[8]) = v80;
  *(_QWORD *)((char *)a9 + v27[12]) = v58;
  result = sub_1BA5193C4(v65, (uint64_t)a9 + v27[10], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  *(_QWORD *)((char *)a9 + v27[11]) = v69;
  return result;
}

void sub_1BB2AB014(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AA0B0, (uint64_t (*)(uint64_t))sub_1BA6BCC70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t FormatContentSubgroup.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;

  v2 = v1;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1E0C80A78](v4);
  v21 = (uint64_t)&v20 - v5;
  v22 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v22);
  v23 = (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39DBF8, (uint64_t (*)(void))sub_1BA6BCFF0, (uint64_t)&type metadata for FormatContentSubgroup.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6BCFF0();
  sub_1BB8746C8();
  LOBYTE(v26) = 0;
  v12 = v24;
  sub_1BB87417C();
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v24 = a1;
  v14 = v9;
  v15 = (int *)type metadata accessor for FormatContentSubgroup();
  v16 = v1;
  v17 = v21;
  sub_1BA8CAF1C(v2 + v15[10], v21, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  v18 = v23;
  sub_1BA5193C4(v17, v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  LOBYTE(v26) = 7;
  sub_1BA4A2870(&qword_1ED39CBE8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
  sub_1BB8741AC();
  sub_1BA4A2E80(v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v26 = *(_QWORD *)(v16 + v15[6]);
  v25 = 2;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9470, (uint64_t)&type metadata for FormatProperty, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA89BC1C();
  sub_1BB8741AC();
  v26 = *(_QWORD *)(v16 + v15[7]);
  v25 = 3;
  sub_1BA6BCC84();
  sub_1BA64D3D4((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
  sub_1BB8741AC();
  v26 = *(_QWORD *)(v16 + v15[8]);
  v25 = 5;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9490, (uint64_t)&type metadata for FormatContentSlot, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB2AC0AC();
  sub_1BB8741AC();
  v26 = *(_QWORD *)(v16 + v15[12]);
  v25 = 6;
  sub_1BA4AD288(0, &qword_1ED3CF7F8, (uint64_t)&type metadata for FormatContentSubgroupSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB2AC168();
  sub_1BB8741AC();
  v26 = *(_QWORD *)(v16 + v15[11]);
  v25 = 8;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3CF7D0, (uint64_t)&type metadata for FormatContentSubgroupFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA7E61E0();
  sub_1BB8741AC();
  v26 = *(_QWORD *)(v16 + v15[9]);
  v25 = 4;
  sub_1BA4AD288(0, &qword_1ED3CF758, (uint64_t)&type metadata for FormatPlaceholder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB2AC224();
  sub_1BB8741AC();
  __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  v19 = sub_1BB872874();
  LOBYTE(v17) = Dictionary<>.bindingContent.getter(v19);
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    LOBYTE(v26) = 1;
    sub_1BA6BCC70(0);
    sub_1BA4A2870(&qword_1ED39D700, (uint64_t (*)(uint64_t))sub_1BA6BCC70, (uint64_t)&protocol conformance descriptor for FormatLatestCompatibleFileReference<A>);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v11, v8);
}

uint64_t sub_1BB2AB598(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2AB5D0 + 4 * byte_1BB901767[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BB2AB5D0()
{
  return 0x7374756F79616CLL;
}

uint64_t sub_1BB2AB5E8()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BB2AB600()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BB2AB61C()
{
  return 0x6C6F686563616C70;
}

uint64_t sub_1BB2AB63C()
{
  return 0x73746E65746E6F63;
}

uint64_t sub_1BB2AB654()
{
  return 0x736E6F6974636573;
}

uint64_t sub_1BB2AB66C()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1BB2AB684()
{
  return 0x737265746C6966;
}

void sub_1BB2AB69C(char *a1)
{
  sub_1BB7F9A20(*a1);
}

uint64_t sub_1BB2AB6A8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D2CB0((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB2AB6EC(uint64_t a1)
{
  char *v1;

  sub_1BA9D2CB0(a1, *v1);
}

uint64_t sub_1BB2AB6F4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D2CB0((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BB2AB734@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB2AEC1C();
  *a1 = result;
  return result;
}

uint64_t sub_1BB2AB760@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB2AB598(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB2AB788@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB2AEC1C();
  *a1 = result;
  return result;
}

uint64_t sub_1BB2AB7AC()
{
  sub_1BA6BCFF0();
  return sub_1BB874710();
}

uint64_t sub_1BB2AB7D4()
{
  sub_1BA6BCFF0();
  return sub_1BB87471C();
}

uint64_t sub_1BB2AB7FC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB2AB84C()
{
  return sub_1BB872A90();
}

uint64_t sub_1BB2AB864()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB2AB8B0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BB2AB900(_QWORD *a1@<X8>)
{
  *a1 = 0x327374756F79616CLL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1BB2AB91C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BB2AB970()
{
  sub_1BA6BCFAC();
  return sub_1BB874710();
}

uint64_t sub_1BB2AB998()
{
  sub_1BA6BCFAC();
  return sub_1BB87471C();
}

uint64_t sub_1BB2AB9C4(_QWORD *a1)
{
  return FormatContentSubgroup.encode(to:)(a1);
}

uint64_t sub_1BB2AB9DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FormatService.ThemePackage(0);
  sub_1BA4C2DD8(a1 + *(int *)(v13 + 20), (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1BA5193C4((uint64_t)&v6[*(int *)(v14 + 48)], (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BA5193C4((uint64_t)&v6[*(int *)(v15 + 48)], (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v16 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v6, v16);
  }
  sub_1BA4C2DD8((uint64_t)&v9[*(int *)(v7 + 28)], (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v17 = sub_1BB86EB84();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a2, v12, v17);
  sub_1BB86EB54();
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
}

uint64_t sub_1BB2ABC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1BA5193C4((uint64_t)&v6[*(int *)(v13 + 48)], (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BA5193C4((uint64_t)&v6[*(int *)(v14 + 48)], (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v15 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v6, v15);
  }
  sub_1BA4C2DD8((uint64_t)&v9[*(int *)(v7 + 28)], (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v16 = sub_1BB86EB84();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a2, v12, v16);
  sub_1BB86EB54();
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
}

uint64_t sub_1BB2ABE28(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[2];

  v22[1] = a2;
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatMetadata();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86EB84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FormatService.ThemePackage(0);
  sub_1BA4C2DD8(a1 + *(int *)(v16 + 20), (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1BA5193C4((uint64_t)&v5[*(int *)(v17 + 48)], (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BA5193C4((uint64_t)&v5[*(int *)(v18 + 48)], (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v19 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v5, v19);
  }
  sub_1BA4C2DD8((uint64_t)&v8[*(int *)(v6 + 28)], (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    v20 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v20 = sub_1BB86E8FC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v20 & 1;
}

unint64_t sub_1BB2AC0AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39D9A8;
  if (!qword_1ED39D9A8)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B9490, (uint64_t)&type metadata for FormatContentSlot, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BB2AC124();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39D9A8);
  }
  return result;
}

unint64_t sub_1BB2AC124()
{
  unint64_t result;

  result = qword_1ED3B4BA0;
  if (!qword_1ED3B4BA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSlot, &type metadata for FormatContentSlot);
    atomic_store(result, (unint64_t *)&qword_1ED3B4BA0);
  }
  return result;
}

unint64_t sub_1BB2AC168()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAFE8;
  if (!qword_1ED3AAFE8)
  {
    sub_1BA4AD288(255, &qword_1ED3CF7F8, (uint64_t)&type metadata for FormatContentSubgroupSection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BB2AC1E0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAFE8);
  }
  return result;
}

unint64_t sub_1BB2AC1E0()
{
  unint64_t result;

  result = qword_1ED3A8410;
  if (!qword_1ED3A8410)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupSection, &type metadata for FormatContentSubgroupSection);
    atomic_store(result, (unint64_t *)&qword_1ED3A8410);
  }
  return result;
}

unint64_t sub_1BB2AC224()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2A6C30;
  if (!qword_1EF2A6C30)
  {
    sub_1BA4AD288(255, &qword_1ED3CF758, (uint64_t)&type metadata for FormatPlaceholder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BACC2604();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2A6C30);
  }
  return result;
}

uint64_t _s8NewsFeed21FormatContentSubgroupV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1BB874398() & 1) == 0)
    return 0;
  v5 = (int *)type metadata accessor for FormatContentSubgroup();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  if ((sub_1BB2A5EB0((uint64_t)a1 + v6, (uint64_t)a2 + v6) & 1) == 0)
    return 0;
  sub_1BA6BCC70(0);
  v10 = *(int *)(v9 + 36);
  v11 = *(_QWORD *)&v7[v10];
  v12 = *(_QWORD *)&v8[v10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = sub_1BA888320(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
    return 0;
  v14 = v5[6];
  v15 = *(_QWORD *)((char *)a1 + v14);
  v16 = *(_QWORD *)((char *)a2 + v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BA8880B0(v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
    return 0;
  v18 = v5[7];
  v19 = *(_QWORD *)((char *)a1 + v18);
  v20 = *(_QWORD *)((char *)a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = sub_1BA6EB330(v19, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
    return 0;
  v22 = v5[8];
  v23 = *(_QWORD *)((char *)a1 + v22);
  v24 = *(_QWORD *)((char *)a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA8824C0(v23, v24);
  v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
    return 0;
  if ((sub_1BA888270(*(_QWORD *)((char *)a1 + v5[9]), *(_QWORD *)((char *)a2 + v5[9])) & 1) == 0)
    return 0;
  if ((static FormatMetadata.== infix(_:_:)((_QWORD *)((char *)a1 + v5[10]), (_QWORD *)((char *)a2 + v5[10])) & 1) == 0)
    return 0;
  v27 = v5[11];
  v28 = *(_QWORD *)((char *)a1 + v27);
  v29 = *(_QWORD *)((char *)a2 + v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = sub_1BA88206C(v28, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0)
    return 0;
  v31 = v5[12];
  v32 = *(_QWORD *)((char *)a1 + v31);
  v33 = *(_QWORD *)((char *)a2 + v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA8874A8(v32, v33);
  v35 = v34;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v35 & 1;
}

uint64_t sub_1BB2AC4D0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3B65C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t)&protocol conformance descriptor for FormatContentSubgroup);
  a1[2] = sub_1BA4A2870(&qword_1ED39D0A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t)&protocol conformance descriptor for FormatContentSubgroup);
  result = sub_1BA4A2870(&qword_1EF2C02E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t)&protocol conformance descriptor for FormatContentSubgroup);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB2AC548@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 24));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2AC580@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 28));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2AC5B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 32));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2AC5F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 36));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2AC630@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 44));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2AC668@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatContentSubgroup() + 48));
  return swift_bridgeObjectRetain();
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatContentSubgroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _OWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  int *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  __int128 *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  unsigned int (*v109)(char *, uint64_t, uint64_t);
  char *v110;
  char *v111;
  unint64_t v112;
  int *v113;
  int *v114;
  uint64_t v115;
  int *v116;
  _QWORD *v117;
  _QWORD *v118;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v20 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v20;
  }
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  sub_1BA6BCBF8(0);
  swift_bridgeObjectRetain();
  v117 = a2;
  v118 = a1;
  v116 = a3;
  v111 = v9;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v21 = sub_1BB86C67C();
    v22 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v9, v10, v21);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, v22);
    v24 = *(int *)(v23 + 48);
    v25 = &v9[v24];
    v26 = &v10[v24];
    v27 = *(_QWORD *)&v10[v24 + 8];
    *(_QWORD *)v25 = *(_QWORD *)&v10[v24];
    *((_QWORD *)v25 + 1) = v27;
    v28 = (int *)type metadata accessor for FormatMetadata();
    v29 = v28[5];
    v30 = &v25[v29];
    v31 = &v26[v29];
    v32 = sub_1BB86EB84();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    swift_bridgeObjectRetain();
    v34(v30, v31, v32);
    v34(&v25[v28[6]], &v26[v28[6]], v32);
    v113 = v28;
    v35 = v28[7];
    v36 = &v25[v35];
    v37 = &v26[v35];
    v115 = v32;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(&v26[v35], 1, v32))
    {
      sub_1BA6BF9E8(0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v34(v36, v37, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
    }
    v39 = v116;
    *(_QWORD *)&v25[v28[8]] = *(_QWORD *)&v26[v28[8]];
    *(_QWORD *)&v25[v28[9]] = *(_QWORD *)&v26[v28[9]];
    *(_QWORD *)&v25[v28[10]] = *(_QWORD *)&v26[v28[10]];
    *(_QWORD *)&v25[v28[11]] = *(_QWORD *)&v26[v28[11]];
    v40 = v111;
    goto LABEL_30;
  }
  v11 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *((_QWORD *)v9 + 1) = v11;
  v12 = *((_QWORD *)v10 + 3);
  *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
  *((_QWORD *)v9 + 3) = v12;
  v13 = *((_QWORD *)v10 + 5);
  *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
  *((_QWORD *)v9 + 5) = v13;
  *((_WORD *)v9 + 24) = *((_WORD *)v10 + 24);
  v14 = *((_QWORD *)v10 + 8);
  *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
  *((_QWORD *)v9 + 8) = v14;
  v15 = *((_QWORD *)v10 + 10);
  *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
  *((_QWORD *)v9 + 10) = v15;
  v16 = *((_QWORD *)v10 + 12);
  *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
  *((_QWORD *)v9 + 12) = v16;
  v104 = *((_QWORD *)v10 + 14);
  *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
  *((_QWORD *)v9 + 14) = v104;
  v105 = *((_QWORD *)v10 + 16);
  *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
  *((_QWORD *)v9 + 16) = v105;
  v108 = *((_QWORD *)v10 + 18);
  *((_QWORD *)v9 + 17) = *((_QWORD *)v10 + 17);
  *((_QWORD *)v9 + 18) = v108;
  *((_QWORD *)v9 + 19) = *((_QWORD *)v10 + 19);
  v103 = (__int128 *)(v10 + 160);
  v112 = *((_QWORD *)v10 + 21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v112 < 2)
  {
    v17 = *v103;
    v18 = v9 + 160;
LABEL_11:
    *v18 = v17;
    goto LABEL_14;
  }
  v18 = v9 + 160;
  if (v112 == 2)
  {
    v17 = *v103;
    goto LABEL_11;
  }
  v9[160] = *(_BYTE *)v103;
  *((_QWORD *)v9 + 21) = v112;
  swift_bridgeObjectRetain();
LABEL_14:
  v114 = (int *)type metadata accessor for FormatPackage();
  v41 = v114[23];
  v42 = &v9[v41];
  v43 = &v10[v41];
  v44 = *(_QWORD *)&v10[v41 + 8];
  *(_QWORD *)v42 = *(_QWORD *)&v10[v41];
  *((_QWORD *)v42 + 1) = v44;
  v45 = (int *)type metadata accessor for FormatCompilerOptions(0);
  v46 = v45[6];
  v47 = &v42[v46];
  v48 = &v43[v46];
  v49 = *(_QWORD *)&v43[v46 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v49 == 1)
  {
    v50 = *((_OWORD *)v48 + 1);
    *(_OWORD *)v47 = *(_OWORD *)v48;
    *((_OWORD *)v47 + 1) = v50;
    *((_OWORD *)v47 + 2) = *((_OWORD *)v48 + 2);
  }
  else
  {
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *((_QWORD *)v47 + 1) = v49;
    v51 = *((_QWORD *)v48 + 3);
    *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
    *((_QWORD *)v47 + 3) = v51;
    v52 = *((_QWORD *)v48 + 5);
    *((_QWORD *)v47 + 4) = *((_QWORD *)v48 + 4);
    *((_QWORD *)v47 + 5) = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v53 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  v54 = &v47[v53];
  v55 = &v48[v53];
  v56 = sub_1BB86E710();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
  if (v58(v55, 1, v56))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  v60 = v45[7];
  v61 = &v42[v60];
  v62 = &v43[v60];
  v109 = v58;
  if (v58(&v43[v60], 1, v56))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v61, v62, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v61, 0, 1, v56);
  }
  *(_QWORD *)&v42[v45[8]] = *(_QWORD *)&v43[v45[8]];
  v64 = v114[24];
  v65 = &v9[v64];
  v66 = &v10[v64];
  v67 = sub_1BB86EB84();
  v106 = *(_QWORD *)(v67 - 8);
  v68 = *(void (**)(char *, char *, uint64_t))(v106 + 16);
  swift_bridgeObjectRetain();
  v115 = v67;
  v68(v65, v66, v67);
  v69 = v114[25];
  v70 = &v9[v69];
  v71 = &v10[v69];
  if (v109(&v10[v69], 1, v56))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v70, v71, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v70, 0, 1, v56);
  }
  sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
  v74 = *(int *)(v73 + 48);
  v75 = &v9[v74];
  v76 = &v10[v74];
  v77 = *(_QWORD *)&v10[v74 + 8];
  *(_QWORD *)v75 = *(_QWORD *)&v10[v74];
  *((_QWORD *)v75 + 1) = v77;
  v78 = (int *)type metadata accessor for FormatMetadata();
  v79 = v78[5];
  v80 = &v75[v79];
  v81 = &v76[v79];
  swift_bridgeObjectRetain();
  v68(v80, v81, v115);
  v68(&v75[v78[6]], &v76[v78[6]], v115);
  v82 = v78;
  v83 = v78[7];
  v84 = &v75[v83];
  v85 = &v76[v83];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(&v76[v83], 1, v115))
  {
    sub_1BA6BF9E8(0);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    v68(v84, v85, v115);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v84, 0, 1, v115);
  }
  v40 = v111;
  *(_QWORD *)&v75[v82[8]] = *(_QWORD *)&v76[v82[8]];
  *(_QWORD *)&v75[v82[9]] = *(_QWORD *)&v76[v82[9]];
  *(_QWORD *)&v75[v82[10]] = *(_QWORD *)&v76[v82[10]];
  v113 = v82;
  *(_QWORD *)&v75[v82[11]] = *(_QWORD *)&v76[v82[11]];
  v39 = v116;
LABEL_30:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  sub_1BA6BCC70(0);
  *(_QWORD *)&v40[*(int *)(v87 + 36)] = *(_QWORD *)&v10[*(int *)(v87 + 36)];
  v88 = v39[7];
  *(_QWORD *)((char *)v118 + v39[6]) = *(_QWORD *)((char *)v117 + v39[6]);
  *(_QWORD *)((char *)v118 + v88) = *(_QWORD *)((char *)v117 + v88);
  v89 = v39[9];
  *(_QWORD *)((char *)v118 + v39[8]) = *(_QWORD *)((char *)v117 + v39[8]);
  *(_QWORD *)((char *)v118 + v89) = *(_QWORD *)((char *)v117 + v89);
  v90 = v39[10];
  v91 = (char *)v118 + v90;
  v92 = (char *)v117 + v90;
  v93 = *(_QWORD *)((char *)v117 + v90 + 8);
  *(_QWORD *)v91 = *(_QWORD *)((char *)v117 + v90);
  *((_QWORD *)v91 + 1) = v93;
  type metadata accessor for FormatMetadata();
  v94 = v113[5];
  v107 = &v92[v94];
  v110 = &v91[v94];
  sub_1BB86EB84();
  v95 = *(_QWORD *)(v115 - 8);
  v96 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v96(v110, v107, v115);
  v96(&v91[v113[6]], &v92[v113[6]], v115);
  v97 = v113[7];
  v98 = &v91[v97];
  v99 = &v92[v97];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(&v92[v97], 1, v115))
  {
    sub_1BA6BF9E8(0);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
  }
  else
  {
    v96(v98, v99, v115);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v98, 0, 1, v115);
  }
  v20 = v118;
  *(_QWORD *)&v91[v113[8]] = *(_QWORD *)&v92[v113[8]];
  *(_QWORD *)&v91[v113[9]] = *(_QWORD *)&v92[v113[9]];
  *(_QWORD *)&v91[v113[10]] = *(_QWORD *)&v92[v113[10]];
  *(_QWORD *)&v91[v113[11]] = *(_QWORD *)&v92[v113[11]];
  v101 = v116[12];
  *(_QWORD *)((char *)v118 + v116[11]) = *(_QWORD *)((char *)v117 + v116[11]);
  *(_QWORD *)((char *)v118 + v101) = *(_QWORD *)((char *)v117 + v101);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v20;
}

_QWORD *assignWithCopy for FormatContentSubgroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t (*v85)(char *, uint64_t, uint64_t);
  int v86;
  uint64_t v87;
  _OWORD *v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(char *, uint64_t, uint64_t);
  char *v95;
  int *v96;
  _QWORD *v97;
  _QWORD *v98;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v96 = a3;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v97 = a2;
  v98 = a1;
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1 + v6, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA6BCBF8(0);
    v95 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
      *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
      *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
      v7[48] = v8[48];
      v7[49] = v8[49];
      *((_QWORD *)v7 + 7) = *((_QWORD *)v8 + 7);
      *((_QWORD *)v7 + 8) = *((_QWORD *)v8 + 8);
      *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
      *((_QWORD *)v7 + 10) = *((_QWORD *)v8 + 10);
      *((_QWORD *)v7 + 11) = *((_QWORD *)v8 + 11);
      *((_QWORD *)v7 + 12) = *((_QWORD *)v8 + 12);
      *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
      *((_QWORD *)v7 + 14) = *((_QWORD *)v8 + 14);
      *((_QWORD *)v7 + 15) = *((_QWORD *)v8 + 15);
      *((_QWORD *)v7 + 16) = *((_QWORD *)v8 + 16);
      *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
      *((_QWORD *)v7 + 18) = *((_QWORD *)v8 + 18);
      *((_QWORD *)v7 + 19) = *((_QWORD *)v8 + 19);
      v89 = v8 + 160;
      v90 = v7 + 160;
      v9 = *((_QWORD *)v8 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= 2)
      {
        v10 = v95;
        if (v9 == 2)
        {
          *v90 = *v89;
        }
        else
        {
          v7[160] = v95[160];
          *((_QWORD *)v7 + 21) = *((_QWORD *)v95 + 21);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        *v90 = *v89;
        v10 = v95;
      }
      v92 = type metadata accessor for FormatPackage();
      v28 = *(int *)(v92 + 92);
      v29 = &v7[v28];
      v30 = &v10[v28];
      *(_QWORD *)v29 = *(_QWORD *)&v10[v28];
      *((_QWORD *)v29 + 1) = *(_QWORD *)&v10[v28 + 8];
      v31 = type metadata accessor for FormatCompilerOptions(0);
      v32 = *(int *)(v31 + 24);
      v33 = &v29[v32];
      v34 = &v30[v32];
      v35 = *(_QWORD *)&v30[v32 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v35 == 1)
      {
        v36 = *(_OWORD *)v34;
        v37 = *((_OWORD *)v34 + 2);
        *((_OWORD *)v33 + 1) = *((_OWORD *)v34 + 1);
        *((_OWORD *)v33 + 2) = v37;
        *(_OWORD *)v33 = v36;
      }
      else
      {
        *(_QWORD *)v33 = *(_QWORD *)v34;
        *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
        *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
        *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
        *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
        *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v38 = v31;
      v39 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v40 = &v33[v39];
      v41 = &v34[v39];
      v42 = sub_1BB86E710();
      v43 = *(_QWORD *)(v42 - 8);
      v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
      if (v94(v41, 1, v42))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v45 = *(int *)(v38 + 28);
      v46 = &v29[v45];
      v47 = &v30[v45];
      v48 = v92;
      v91 = v43;
      if (v94(&v30[v45], 1, v42))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v46, v47, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v46, 0, 1, v42);
      }
      *(_QWORD *)&v29[*(int *)(v38 + 32)] = *(_QWORD *)&v30[*(int *)(v38 + 32)];
      v50 = *(int *)(v92 + 96);
      v51 = &v7[v50];
      v52 = &v95[v50];
      v53 = sub_1BB86EB84();
      v93 = *(_QWORD *)(v53 - 8);
      v54 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
      swift_bridgeObjectRetain();
      v54(v51, v52, v53);
      v55 = *(int *)(v48 + 100);
      v56 = &v7[v55];
      v57 = &v95[v55];
      if (v94(&v95[v55], 1, v42))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v56, v57, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v56, 0, 1, v42);
      }
      sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
      v60 = *(int *)(v59 + 48);
      v61 = &v7[v60];
      v62 = &v95[v60];
      *(_QWORD *)v61 = *(_QWORD *)&v95[v60];
      *((_QWORD *)v61 + 1) = *(_QWORD *)&v95[v60 + 8];
      v63 = (int *)type metadata accessor for FormatMetadata();
      v64 = v63[5];
      v65 = &v61[v64];
      v66 = &v62[v64];
      swift_bridgeObjectRetain();
      v54(v65, v66, v53);
      v54(&v61[v63[6]], &v62[v63[6]], v53);
      v67 = v63[7];
      v68 = &v61[v67];
      v69 = &v62[v67];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(&v62[v67], 1, v53))
      {
        sub_1BA6BF9E8(0);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
      }
      else
      {
        v54(v68, v69, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v68, 0, 1, v53);
      }
      *(_QWORD *)&v61[v63[8]] = *(_QWORD *)&v62[v63[8]];
      *(_QWORD *)&v61[v63[9]] = *(_QWORD *)&v62[v63[9]];
      *(_QWORD *)&v61[v63[10]] = *(_QWORD *)&v62[v63[10]];
      *(_QWORD *)&v61[v63[11]] = *(_QWORD *)&v62[v63[11]];
      v8 = v95;
    }
    else
    {
      v11 = sub_1BB86C67C();
      v12 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
      sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, v12);
      v14 = *(int *)(v13 + 48);
      v15 = &v7[v14];
      v16 = &v8[v14];
      *(_QWORD *)v15 = *(_QWORD *)&v8[v14];
      *((_QWORD *)v15 + 1) = *(_QWORD *)&v8[v14 + 8];
      v17 = (int *)type metadata accessor for FormatMetadata();
      v18 = v17[5];
      v19 = &v15[v18];
      v20 = &v16[v18];
      v21 = sub_1BB86EB84();
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      swift_bridgeObjectRetain();
      v23(v19, v20, v21);
      v23(&v15[v17[6]], &v16[v17[6]], v21);
      v24 = v17[7];
      v25 = &v15[v24];
      v26 = &v16[v24];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(&v16[v24], 1, v21))
      {
        sub_1BA6BF9E8(0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        v23(v25, v26, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
      }
      v8 = v95;
      *(_QWORD *)&v15[v17[8]] = *(_QWORD *)&v16[v17[8]];
      *(_QWORD *)&v15[v17[9]] = *(_QWORD *)&v16[v17[9]];
      *(_QWORD *)&v15[v17[10]] = *(_QWORD *)&v16[v17[10]];
      *(_QWORD *)&v15[v17[11]] = *(_QWORD *)&v16[v17[11]];
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  sub_1BA6BCC70(0);
  *(_QWORD *)&v7[*(int *)(v71 + 36)] = *(_QWORD *)&v8[*(int *)(v71 + 36)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v98 + v96[6]) = *(_QWORD *)((char *)v97 + v96[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v98 + v96[7]) = *(_QWORD *)((char *)v97 + v96[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v98 + v96[8]) = *(_QWORD *)((char *)v97 + v96[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v98 + v96[9]) = *(_QWORD *)((char *)v97 + v96[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72 = v96[10];
  v73 = (char *)v98 + v72;
  v74 = (char *)v97 + v72;
  *(_QWORD *)v73 = *(_QWORD *)((char *)v97 + v72);
  *((_QWORD *)v73 + 1) = *(_QWORD *)((char *)v97 + v72 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v75 = (int *)type metadata accessor for FormatMetadata();
  v76 = v75[5];
  v77 = &v73[v76];
  v78 = &v74[v76];
  v79 = sub_1BB86EB84();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(void (**)(char *, char *, uint64_t))(v80 + 24);
  v81(v77, v78, v79);
  v81(&v73[v75[6]], &v74[v75[6]], v79);
  v82 = v75[7];
  v83 = &v73[v82];
  v84 = &v74[v82];
  v85 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
  LODWORD(v77) = v85(&v73[v82], 1, v79);
  v86 = v85(v84, 1, v79);
  if (!(_DWORD)v77)
  {
    if (!v86)
    {
      v81(v83, v84, v79);
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v80 + 8))(v83, v79);
    goto LABEL_34;
  }
  if (v86)
  {
LABEL_34:
    sub_1BA6BF9E8(0);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v83, v84, v79);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v83, 0, 1, v79);
LABEL_35:
  *(_QWORD *)&v73[v75[8]] = *(_QWORD *)&v74[v75[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v73[v75[9]] = *(_QWORD *)&v74[v75[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v73[v75[10]] = *(_QWORD *)&v74[v75[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v73[v75[11]] = *(_QWORD *)&v74[v75[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v98 + v96[11]) = *(_QWORD *)((char *)v97 + v96[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v98 + v96[12]) = *(_QWORD *)((char *)v97 + v96[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v98;
}

_OWORD *initializeWithTake for FormatContentSubgroup(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  int *v82;
  uint64_t v83;

  *a1 = *a2;
  v3 = a3[5];
  v4 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  sub_1BA6BCBF8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = *((_OWORD *)v5 + 1);
    *(_OWORD *)v4 = *(_OWORD *)v5;
    *((_OWORD *)v4 + 1) = v6;
    *((_OWORD *)v4 + 2) = *((_OWORD *)v5 + 2);
    *((_WORD *)v4 + 24) = *((_WORD *)v5 + 24);
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(v5 + 56);
    *(_OWORD *)(v4 + 72) = *(_OWORD *)(v5 + 72);
    *(_OWORD *)(v4 + 88) = *(_OWORD *)(v5 + 88);
    *(_OWORD *)(v4 + 104) = *(_OWORD *)(v5 + 104);
    *(_OWORD *)(v4 + 120) = *(_OWORD *)(v5 + 120);
    *(_OWORD *)(v4 + 136) = *(_OWORD *)(v5 + 136);
    *((_QWORD *)v4 + 19) = *((_QWORD *)v5 + 19);
    *((_OWORD *)v4 + 10) = *((_OWORD *)v5 + 10);
    v7 = type metadata accessor for FormatPackage();
    v8 = *(int *)(v7 + 92);
    v9 = &v4[v8];
    v10 = &v5[v8];
    *(_OWORD *)&v4[v8] = *(_OWORD *)&v5[v8];
    v82 = (int *)type metadata accessor for FormatCompilerOptions(0);
    v11 = v82[6];
    v12 = &v9[v11];
    v13 = &v10[v11];
    v14 = *(_OWORD *)&v10[v11 + 16];
    *(_OWORD *)v12 = *(_OWORD *)&v10[v11];
    *((_OWORD *)v12 + 1) = v14;
    *((_OWORD *)v12 + 2) = *(_OWORD *)&v10[v11 + 32];
    v15 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    v16 = &v12[v15];
    v17 = &v13[v15];
    v18 = sub_1BB86E710();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v20(v17, 1, v18))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v39 = v82[7];
    v40 = &v9[v39];
    v41 = &v10[v39];
    v81 = v20;
    if (v20(&v10[v39], 1, v18))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v40, v41, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v40, 0, 1, v18);
    }
    *(_QWORD *)&v9[v82[8]] = *(_QWORD *)&v10[v82[8]];
    v46 = *(int *)(v7 + 96);
    v47 = &v4[v46];
    v48 = &v5[v46];
    v32 = sub_1BB86EB84();
    v49 = v7;
    v83 = *(_QWORD *)(v32 - 8);
    v50 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
    v50(v47, v48, v32);
    v51 = *(int *)(v49 + 100);
    v52 = &v4[v51];
    v53 = &v5[v51];
    if (v81(&v5[v51], 1, v18))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v52, v53, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v52, 0, 1, v18);
    }
    sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    v56 = *(int *)(v55 + 48);
    v57 = &v4[v56];
    v58 = &v5[v56];
    *(_OWORD *)&v4[v56] = *(_OWORD *)&v5[v56];
    v28 = (int *)type metadata accessor for FormatMetadata();
    v50(&v57[v28[5]], &v58[v28[5]], v32);
    v50(&v57[v28[6]], &v58[v28[6]], v32);
    v59 = v28[7];
    v60 = &v57[v59];
    v61 = &v58[v59];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(&v58[v59], 1, v32))
    {
      sub_1BA6BF9E8(0);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v50(v60, v61, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v60, 0, 1, v32);
    }
    *(_QWORD *)&v57[v28[8]] = *(_QWORD *)&v58[v28[8]];
    *(_QWORD *)&v57[v28[9]] = *(_QWORD *)&v58[v28[9]];
    *(_QWORD *)&v57[v28[10]] = *(_QWORD *)&v58[v28[10]];
    v63 = v28[11];
    v44 = &v57[v63];
    v45 = &v58[v63];
  }
  else
  {
    v22 = sub_1BB86C67C();
    v23 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v4, v5, v22);
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, v23);
    v25 = *(int *)(v24 + 48);
    v26 = &v4[v25];
    v27 = &v5[v25];
    *(_OWORD *)&v4[v25] = *(_OWORD *)&v5[v25];
    v28 = (int *)type metadata accessor for FormatMetadata();
    v29 = v28[5];
    v30 = &v26[v29];
    v31 = &v27[v29];
    v32 = sub_1BB86EB84();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v34(v30, v31, v32);
    v34(&v26[v28[6]], &v27[v28[6]], v32);
    v35 = v28[7];
    v36 = &v26[v35];
    v37 = &v27[v35];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(&v27[v35], 1, v32))
    {
      sub_1BA6BF9E8(0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v34(v36, v37, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v36, 0, 1, v32);
    }
    *(_QWORD *)&v26[v28[8]] = *(_QWORD *)&v27[v28[8]];
    *(_QWORD *)&v26[v28[9]] = *(_QWORD *)&v27[v28[9]];
    *(_QWORD *)&v26[v28[10]] = *(_QWORD *)&v27[v28[10]];
    v43 = v28[11];
    v44 = &v26[v43];
    v45 = &v27[v43];
  }
  *(_QWORD *)v44 = *(_QWORD *)v45;
  swift_storeEnumTagMultiPayload();
  sub_1BA6BCC70(0);
  *(_QWORD *)&v4[*(int *)(v64 + 36)] = *(_QWORD *)&v5[*(int *)(v64 + 36)];
  v65 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v65) = *(_QWORD *)((char *)a2 + v65);
  v66 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v66) = *(_QWORD *)((char *)a2 + v66);
  v67 = a3[10];
  v68 = (char *)a1 + v67;
  v69 = (char *)a2 + v67;
  *(_OWORD *)((char *)a1 + v67) = *(_OWORD *)((char *)a2 + v67);
  type metadata accessor for FormatMetadata();
  v70 = v28[5];
  v71 = &v68[v70];
  v72 = &v69[v70];
  sub_1BB86EB84();
  v73 = *(_QWORD *)(v32 - 8);
  v74 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
  v74(v71, v72, v32);
  v74(&v68[v28[6]], &v69[v28[6]], v32);
  v75 = v28[7];
  v76 = &v68[v75];
  v77 = &v69[v75];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(&v69[v75], 1, v32))
  {
    sub_1BA6BF9E8(0);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    v74(v76, v77, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v76, 0, 1, v32);
  }
  *(_QWORD *)&v68[v28[8]] = *(_QWORD *)&v69[v28[8]];
  *(_QWORD *)&v68[v28[9]] = *(_QWORD *)&v69[v28[9]];
  *(_QWORD *)&v68[v28[10]] = *(_QWORD *)&v69[v28[10]];
  *(_QWORD *)&v68[v28[11]] = *(_QWORD *)&v69[v28[11]];
  v79 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v79) = *(_QWORD *)((char *)a2 + v79);
  return a1;
}

_QWORD *assignWithTake for FormatContentSubgroup(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t (*v84)(char *, uint64_t, uint64_t);
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  int *__dst;
  char *__dsta;
  int *v93;
  char *v94;
  char *v95;
  _QWORD *v96;
  _QWORD *v97;
  int *v98;

  v4 = a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v97 = v4;
  v98 = a3;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)v4 + v7;
  if (a1 != v4)
  {
    sub_1BA4A2E80((uint64_t)a1 + v7, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA6BCBF8(0);
    v95 = v9;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
      *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
      *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
      *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
      *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
      *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
      *((_QWORD *)v8 + 19) = *((_QWORD *)v9 + 19);
      *((_OWORD *)v8 + 10) = *((_OWORD *)v9 + 10);
      __dst = (int *)type metadata accessor for FormatPackage();
      v11 = __dst[23];
      v12 = &v8[v11];
      v13 = &v9[v11];
      *(_OWORD *)&v8[v11] = *(_OWORD *)&v9[v11];
      v93 = (int *)type metadata accessor for FormatCompilerOptions(0);
      v14 = v93[6];
      v15 = &v12[v14];
      v16 = &v13[v14];
      v17 = *(_OWORD *)&v13[v14 + 16];
      *(_OWORD *)v15 = *(_OWORD *)&v13[v14];
      *((_OWORD *)v15 + 1) = v17;
      *((_OWORD *)v15 + 2) = *(_OWORD *)&v13[v14 + 32];
      v18 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v19 = &v15[v18];
      v20 = &v16[v18];
      v21 = sub_1BB86E710();
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      if (v23(v20, 1, v21))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      v42 = v93[7];
      v43 = &v12[v42];
      v44 = &v13[v42];
      v90 = v23;
      v45 = v23(&v13[v42], 1, v21);
      v9 = v95;
      if (v45)
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v43, v44, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v43, 0, 1, v21);
      }
      *(_QWORD *)&v12[v93[8]] = *(_QWORD *)&v13[v93[8]];
      v50 = __dst[24];
      v51 = &v8[v50];
      v52 = &v95[v50];
      v53 = v8;
      v54 = sub_1BB86EB84();
      v89 = *(_QWORD *)(v54 - 8);
      v55 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
      v55(v51, v52, v54);
      v56 = __dst[25];
      v94 = v53;
      v57 = &v53[v56];
      v58 = &v95[v56];
      if (v90(&v95[v56], 1, v21))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v57, v58, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v57, 0, 1, v21);
      }
      sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
      v61 = *(int *)(v60 + 48);
      v62 = &v94[v61];
      v63 = &v95[v61];
      *(_OWORD *)&v94[v61] = *(_OWORD *)&v95[v61];
      v64 = (int *)type metadata accessor for FormatMetadata();
      v55(&v62[v64[5]], &v63[v64[5]], v54);
      v55(&v62[v64[6]], &v63[v64[6]], v54);
      v65 = v64[7];
      __dsta = &v62[v65];
      v66 = &v63[v65];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(&v63[v65], 1, v54))
      {
        sub_1BA6BF9E8(0);
        memcpy(__dsta, v66, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        v55(__dsta, v66, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(__dsta, 0, 1, v54);
      }
      *(_QWORD *)&v62[v64[8]] = *(_QWORD *)&v63[v64[8]];
      *(_QWORD *)&v62[v64[9]] = *(_QWORD *)&v63[v64[9]];
      *(_QWORD *)&v62[v64[10]] = *(_QWORD *)&v63[v64[10]];
      v68 = v64[11];
      v48 = &v62[v68];
      v49 = &v63[v68];
      v8 = v94;
    }
    else
    {
      v25 = sub_1BB86C67C();
      v26 = (void (*)(uint64_t))MEMORY[0x1E0CAFFF8];
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v8, v9, v25);
      sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, v26);
      v28 = *(int *)(v27 + 48);
      v29 = &v8[v28];
      v30 = &v9[v28];
      *(_OWORD *)&v8[v28] = *(_OWORD *)&v9[v28];
      v31 = (int *)type metadata accessor for FormatMetadata();
      v32 = v31[5];
      v33 = &v29[v32];
      v34 = &v30[v32];
      v35 = sub_1BB86EB84();
      v36 = *(_QWORD *)(v35 - 8);
      v37 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v37(v33, v34, v35);
      v37(&v29[v31[6]], &v30[v31[6]], v35);
      v38 = v31[7];
      v39 = &v29[v38];
      v40 = &v30[v38];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(&v30[v38], 1, v35))
      {
        sub_1BA6BF9E8(0);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v37(v39, v40, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
      }
      *(_QWORD *)&v29[v31[8]] = *(_QWORD *)&v30[v31[8]];
      *(_QWORD *)&v29[v31[9]] = *(_QWORD *)&v30[v31[9]];
      *(_QWORD *)&v29[v31[10]] = *(_QWORD *)&v30[v31[10]];
      v47 = v31[11];
      v48 = &v29[v47];
      v49 = &v30[v47];
      v9 = v95;
      v4 = v97;
    }
    *(_QWORD *)v48 = *(_QWORD *)v49;
    swift_storeEnumTagMultiPayload();
  }
  sub_1BA6BCC70(0);
  *(_QWORD *)&v8[*(int *)(v69 + 36)] = *(_QWORD *)&v9[*(int *)(v69 + 36)];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v98[6]) = *(_QWORD *)((char *)v4 + v98[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v98[7]) = *(_QWORD *)((char *)v4 + v98[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v98[8]) = *(_QWORD *)((char *)v4 + v98[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v98[9]) = *(_QWORD *)((char *)v4 + v98[9]);
  swift_bridgeObjectRelease();
  v70 = v98[10];
  v96 = a1;
  v71 = (char *)a1 + v70;
  v72 = (char *)v4 + v70;
  v73 = *(_QWORD *)((char *)v4 + v70 + 8);
  *(_QWORD *)v71 = *(_QWORD *)((char *)v4 + v70);
  *((_QWORD *)v71 + 1) = v73;
  swift_bridgeObjectRelease();
  v74 = (int *)type metadata accessor for FormatMetadata();
  v75 = v74[5];
  v76 = &v71[v75];
  v77 = &v72[v75];
  v78 = sub_1BB86EB84();
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(void (**)(char *, char *, uint64_t))(v79 + 40);
  v80(v76, v77, v78);
  v80(&v71[v74[6]], &v72[v74[6]], v78);
  v81 = v74[7];
  v82 = &v71[v81];
  v83 = &v72[v81];
  v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 48);
  v85 = v84(&v71[v81], 1, v78);
  v86 = v84(v83, 1, v78);
  if (!v85)
  {
    if (!v86)
    {
      v80(v82, v83, v78);
      goto LABEL_27;
    }
    (*(void (**)(char *, uint64_t))(v79 + 8))(v82, v78);
    goto LABEL_26;
  }
  if (v86)
  {
LABEL_26:
    sub_1BA6BF9E8(0);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v82, v83, v78);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v82, 0, 1, v78);
LABEL_27:
  *(_QWORD *)&v71[v74[8]] = *(_QWORD *)&v72[v74[8]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v71[v74[9]] = *(_QWORD *)&v72[v74[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v71[v74[10]] = *(_QWORD *)&v72[v74[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v71[v74[11]] = *(_QWORD *)&v72[v74[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v96 + v98[11]) = *(_QWORD *)((char *)v97 + v98[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v96 + v98[12]) = *(_QWORD *)((char *)v97 + v98[12]);
  swift_bridgeObjectRelease();
  return v96;
}

uint64_t sub_1BB2AE8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA6BCC70(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BB2AE968(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA6BCC70(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3C2590, (uint64_t (*)(void))sub_1BA8237E8, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BB2AEA70 + 4 * byte_1BB90177E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BB2AEAA4 + 4 * byte_1BB901779[v4]))();
}

uint64_t sub_1BB2AEAA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2AEAAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2AEAB4);
  return result;
}

uint64_t sub_1BB2AEAC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2AEAC8);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BB2AEACC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2AEAD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroup.CodingKeys()
{
  return &type metadata for FormatContentSubgroup.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroup.AltCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB2AEB30 + 4 * byte_1BB901783[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB2AEB50 + 4 * byte_1BB901788[v4]))();
}

_BYTE *sub_1BB2AEB30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB2AEB50(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2AEB58(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2AEB60(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2AEB68(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2AEB70(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroup.AltCodingKeys()
{
  return &type metadata for FormatContentSubgroup.AltCodingKeys;
}

unint64_t sub_1BB2AEB90()
{
  unint64_t result;

  result = qword_1EF2C02F0;
  if (!qword_1EF2C02F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB901954, &type metadata for FormatContentSubgroup.AltCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C02F0);
  }
  return result;
}

unint64_t sub_1BB2AEBD8()
{
  unint64_t result;

  result = qword_1EF2C02F8;
  if (!qword_1EF2C02F8)
  {
    result = MEMORY[0x1BCCE5B24]("킟+", &type metadata for FormatContentSubgroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C02F8);
  }
  return result;
}

uint64_t sub_1BB2AEC1C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

void sub_1BB2AEC64(uint64_t a1)
{
  sub_1BA9ED538(a1, &qword_1EF2C0300, sub_1BA6BCBF8);
}

void sub_1BB2AEC78(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BA4CDF6C(255, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

unint64_t sub_1BB2AECE8(unint64_t result, __int16 a2, char a3)
{
  if (a3 == 2)
    return sub_1BA7AAE60(result, a2);
  if (a3 == 1)
    return sub_1BA7AAE54(result, a2, HIBYTE(a2) & 1);
  return result;
}

void sub_1BB2AED0C(uint64_t a1)
{
  sub_1BA9ED538(a1, &qword_1EF2C0328, sub_1BA8CED28);
}

uint64_t sub_1BB2AED20(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v6;

  sub_1BB2AEC78(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1BB2AED5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1BB35B018(*(_QWORD *)(v1 + 16));
  *a1 = result;
  return result;
}

double sub_1BB2AEDB4@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BB2AA2F4(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1BB2AEDD0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BB2AA26C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_1BB2AEDEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CF750;
  if (!qword_1ED3CF750)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3B03B0, (uint64_t)&type metadata for FormatContentSlot.Resolved, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CF750);
  }
  return result;
}

void sub_1BB2AEE4C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C91C8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB2AEE68()
{
  uint64_t v0;

  sub_1BA810070(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

double sub_1BB2AEE8C@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB2AEDB4(a1, a2);
}

uint64_t FormatSlotDefinitionItemSet.kinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotDefinitionItemSet.max.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t FormatSlotDefinitionItemSet.init(kinds:min:max:properties:auxiliary:editorProperties:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, _OWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;

  *(_DWORD *)a7 = a2;
  *(_DWORD *)(a7 + 4) = a3;
  *(_QWORD *)(a7 + 8) = a1;
  *(_QWORD *)(a7 + 16) = a4;
  *(_OWORD *)(a7 + 24) = *a5;
  v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  return sub_1BA5193C4(a6, a7 + *(int *)(v9 + 36), (uint64_t (*)(_QWORD))sub_1BA74E57C);
}

uint64_t FormatSlotDefinitionItemSet.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2AEF08()
{
  uint64_t v0;
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v14[3];

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BA68215C(v0);
  swift_bridgeObjectRelease();
  v2 = v1[2];
  if (v2)
  {
    v14[0] = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v2, 0);
    v3 = v14[0];
    v4 = v1 + 5;
    do
    {
      v5 = 0xE700000000000000;
      v6 = 0x656C6369747241;
      switch(*v4)
      {
        case 0uLL:
          break;
        case 1uLL:
          v5 = 0xE500000000000000;
          v6 = 0x6575737349;
          break;
        case 2uLL:
          v5 = 0xE800000000000000;
          v6 = 0x6465626D45626557;
          break;
        case 3uLL:
          v5 = 0xEA00000000006B63;
          v6 = 0x6172546F69647541;
          break;
        case 4uLL:
          v5 = 0xE300000000000000;
          v6 = 6775124;
          break;
        case 5uLL:
          v5 = 0xE500000000000000;
          v6 = 0x65726F6353;
          break;
        case 6uLL:
          v5 = 0xE800000000000000;
          v6 = 0x676E69646E617453;
          break;
        case 7uLL:
          v6 = 0x74656B63617242;
          break;
        case 8uLL:
          v5 = 0xE900000000000065;
          v6 = 0x726F635320786F42;
          break;
        case 9uLL:
          v6 = 0x6F635320656E694CLL;
          v5 = 0xEA00000000006572;
          break;
        case 0xAuLL:
          v5 = 0xED000074726F7065;
          v6 = 0x52207972756A6E49;
          break;
        case 0xBuLL:
          v5 = 0xEA00000000007265;
          v6 = 0x79616C502079654BLL;
          break;
        case 0xCuLL:
          v5 = 0xE600000000000000;
          v6 = 0x656C7A7A7550;
          break;
        case 0xDuLL:
          v5 = 0xEB00000000657079;
          v6 = 0x5420656C7A7A7550;
          break;
        case 0xEuLL:
          v5 = 0x80000001BB984050;
          v6 = 0xD000000000000010;
          break;
        default:
          v6 = *(v4 - 1);
          v5 = *v4;
          break;
      }
      sub_1BA682148(*(v4 - 1), *v4);
      v14[0] = v3;
      v8 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v3 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1BA7447E8(v7 > 1, v8 + 1, 1);
        v3 = v14[0];
      }
      v4 += 2;
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = v3 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v2;
    }
    while (v2);
    swift_release();
  }
  else
  {
    swift_release();
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v14[0] = v3;
  swift_bridgeObjectRetain();
  sub_1BA5BBDDC(v14);
  swift_bridgeObjectRelease();
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_release();
  v14[0] = sub_1BB2AF408();
  v14[1] = v10;
  sub_1BB872AFC(v11);
  sub_1BB872AFC(v12);
  swift_bridgeObjectRelease();
  return v14[0];
}

uint64_t FormatSlotDefinitionItemSet.min.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t FormatSlotDefinitionItemSet.max.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*FormatSlotDefinitionItemSet.max.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinitionItemSet.kinds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FormatSlotDefinitionItemSet.kinds.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinitionItemSet.properties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FormatSlotDefinitionItemSet.properties.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinitionItemSet.auxiliary.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA5DCC20(v2);
}

uint64_t FormatSlotDefinitionItemSet.auxiliary.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1BA5DCC4C(*(_QWORD *)(v1 + 24));
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  return result;
}

uint64_t (*FormatSlotDefinitionItemSet.auxiliary.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinitionItemSet.editorProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatSlotDefinitionItemSet();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(_QWORD))sub_1BA74E57C);
}

uint64_t sub_1BB2AF390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2B0D20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2AF3B4()
{
  sub_1BA7DFD50();
  return sub_1BB874710();
}

uint64_t sub_1BB2AF3DC()
{
  sub_1BA7DFD50();
  return sub_1BB87471C();
}

uint64_t sub_1BB2AF408()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;

  v4 = sub_1BB87420C();
  sub_1BB872AFC(v1);
  v2 = (_QWORD *)*(unsigned int *)(v0 + 4);
  if ((_DWORD)v2 != 0x7FFFFFFF)
    sub_1BB87420C();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  return v4;
}

BOOL _s8NewsFeed27FormatSlotDefinitionItemSetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v4 = sub_1BB86E710();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA793CE8();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA74E57C();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v43 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v43 - v19;
  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    return 0;
  if (*(_DWORD *)(a1 + 4) != *(_DWORD *)(a2 + 4))
    return 0;
  v48 = v5;
  v49 = v11;
  v50 = v4;
  v21 = *(_QWORD *)(a1 + 8);
  v22 = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_1BA857E18(v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0)
    return 0;
  v24 = *(_QWORD *)(a1 + 16);
  v25 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_1BA882880(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
    return 0;
  v27 = *(_QWORD *)(a1 + 24);
  v47 = *(_QWORD *)(a1 + 32);
  v28 = *(_QWORD *)(a2 + 24);
  if (v27)
  {
    if (v28)
    {
      v46 = *(_QWORD *)(a2 + 32);
      sub_1BA5DCC20(v27);
      sub_1BA5DCC20(v27);
      sub_1BA5DCC20(v28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v27;
      v30 = sub_1BA882880(v27, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
        v44 = v29;
        v45 = sub_1BA88286C(v47, v46);
        sub_1BA5DCC4C(v28);
        swift_bridgeObjectRelease();
        v31 = v44;
        swift_bridgeObjectRelease();
        sub_1BA5DCC4C(v31);
        if ((v45 & 1) == 0)
          return 0;
        goto LABEL_11;
      }
      sub_1BA5DCC4C(v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v29;
LABEL_17:
      sub_1BA5DCC4C(v39);
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_15:
    sub_1BA5DCC20(v28);
    sub_1BA5DCC4C(v27);
    v39 = v28;
    goto LABEL_17;
  }
  if (v28)
    goto LABEL_15;
LABEL_11:
  v32 = type metadata accessor for FormatSlotDefinitionItemSet();
  sub_1BA4C2DD8(a1 + *(int *)(v32 + 36), (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  sub_1BA4C2DD8(a2 + *(int *)(v32 + 36), (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  v33 = *(int *)(v9 + 48);
  v34 = (uint64_t)v49;
  v35 = (uint64_t)&v49[v33];
  sub_1BA4C2DD8((uint64_t)v20, (uint64_t)v49, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  sub_1BA4C2DD8((uint64_t)v17, v35, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  v36 = v48;
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  v38 = v50;
  if (v37(v34, 1, v50) == 1)
  {
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA74E57C);
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA74E57C);
    if (v37(v35, 1, v38) == 1)
    {
      sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))sub_1BA74E57C);
      return 1;
    }
    goto LABEL_22;
  }
  sub_1BA4C2DD8(v34, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  if (v37(v35, 1, v38) == 1)
  {
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA74E57C);
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA74E57C);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v38);
LABEL_22:
    sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))sub_1BA793CE8);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v7, v35, v38);
  sub_1BA4A2870(&qword_1EF2A96D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C8]);
  v41 = sub_1BB872958();
  v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v7, v38);
  sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  v42(v14, v38);
  sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  return (v41 & 1) != 0;
}

uint64_t sub_1BB2AF99C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(qword_1ED3BF8D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatSlotDefinitionItemSet);
  a1[2] = sub_1BA4A2870(&qword_1ED3A80E8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatSlotDefinitionItemSet);
  result = sub_1BA4A2870(&qword_1EF2C0348, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatSlotDefinitionItemSet);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB2AFA14@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *(_DWORD *)(result + 4);
  return result;
}

_DWORD *sub_1BB2AFA20(_DWORD *result, uint64_t a2)
{
  *(_DWORD *)(a2 + 4) = *result;
  return result;
}

uint64_t sub_1BB2AFA2C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2AFA38(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_1BB2AFA78@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2AFA84(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatSlotDefinitionItemSet(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v9 = a2 + 3;
    v8 = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      v10 = a2[4];
      v4[3] = v8;
      v4[4] = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 3) = *v9;
    }
    v12 = *(int *)(a3 + 36);
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1BB86E710();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_1BA74E57C();
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t assignWithCopy for FormatSlotDefinitionItemSet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 24) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BAA44B5C(a1 + 24);
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  v7 = *(int *)(a3 + 36);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1BB86E710();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_13;
  }
  if (v14)
  {
LABEL_13:
    sub_1BA74E57C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for FormatSlotDefinitionItemSet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 36);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1BB86E710();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BA74E57C();
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for FormatSlotDefinitionItemSet(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v6 = a2[3];
  if (a1[3])
  {
    if (v6)
    {
      a1[3] = v6;
      swift_bridgeObjectRelease();
      a1[4] = a2[4];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BAA44B5C((uint64_t)(a1 + 3));
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
LABEL_6:
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86E710();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_11;
  }
  if (v14)
  {
LABEL_11:
    sub_1BA74E57C();
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1BB2AFFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA74E57C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1BB2B0064(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA74E57C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatSlotDefinitionItemSet.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB2B0124 + 4 * byte_1BB901B2A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB2B0158 + 4 * byte_1BB901B25[v4]))();
}

uint64_t sub_1BB2B0158(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2B0160(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2B0168);
  return result;
}

uint64_t sub_1BB2B0174(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2B017CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB2B0180(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2B0188(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotDefinitionItemSet.CodingKeys()
{
  return &type metadata for FormatSlotDefinitionItemSet.CodingKeys;
}

unint64_t sub_1BB2B01A8()
{
  unint64_t result;

  result = qword_1EF2C0350;
  if (!qword_1EF2C0350)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB901CC4, &type metadata for FormatSlotDefinitionItemSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0350);
  }
  return result;
}

_QWORD *sub_1BB2B01EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  int v22;
  int v23;
  char v24;
  char v25;
  uint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v57)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t inited;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  _OWORD v89[2];
  uint64_t v90;
  uint64_t v91;

  sub_1BA74E57C();
  MEMORY[0x1E0C80A78](v4);
  v85 = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB2B0F8C(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatSlotDefinitionItemSet();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BB2B0F8C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BB2B0F8C);
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    v78 = a1;
    v79 = v9;
    sub_1BA5193C4((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
    v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    v77 = xmmword_1BB87CE70;
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v14);
    sub_1BA8C88C8(0);
    v80 = v15;
    v16 = *(_QWORD *)(v15 - 8);
    v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v82 = *(_QWORD *)(v16 + 72);
    v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_1BB8827B0;
    v18 = *((_QWORD *)v12 + 1);
    v19 = *(_QWORD *)(v18 + 16);
    v20 = MEMORY[0x1E0DEE9D8];
    if (v19)
    {
      v76 = v17;
      v81 = v12;
      *(_QWORD *)&v89[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1BA7447E8(0, v19, 0);
      v20 = *(_QWORD *)&v89[0];
      v21 = sub_1BA580CE4(v18);
      v23 = v22;
      v25 = v24 & 1;
      v87 = (char *)(v18 + 56);
      v86 = (uint64_t)"Editor Properties";
      do
      {
        if (v21 < 0 || v21 >= 1 << *(_BYTE *)(v18 + 32))
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          swift_release();
          __break(1u);
          JUMPOUT(0x1BB2B0CE4);
        }
        if (((*(_QWORD *)&v87[((unint64_t)v21 >> 3) & 0xFFFFFFFFFFFFF8] >> v21) & 1) == 0)
          goto LABEL_37;
        if (*(_DWORD *)(v18 + 36) != v23)
          goto LABEL_38;
        v26 = (uint64_t *)(*(_QWORD *)(v18 + 48) + 16 * v21);
        v27 = v26[1];
        v28 = 0xE500000000000000;
        v29 = 0x6575737349;
        switch(v27)
        {
          case 0uLL:
            v28 = 0xE700000000000000;
            v29 = 0x656C6369747241;
            break;
          case 1uLL:
            break;
          case 2uLL:
            v28 = 0xE800000000000000;
            v29 = 0x6465626D45626557;
            break;
          case 3uLL:
            v28 = 0xEA00000000006B63;
            v29 = 0x6172546F69647541;
            break;
          case 4uLL:
            v28 = 0xE300000000000000;
            v29 = 6775124;
            break;
          case 5uLL:
            v29 = 0x65726F6353;
            break;
          case 6uLL:
            v28 = 0xE800000000000000;
            v29 = 0x676E69646E617453;
            break;
          case 7uLL:
            v28 = 0xE700000000000000;
            v29 = 0x74656B63617242;
            break;
          case 8uLL:
            v29 = 0x726F635320786F42;
            v28 = 0xE900000000000065;
            break;
          case 9uLL:
            v29 = 0x6F635320656E694CLL;
            v28 = 0xEA00000000006572;
            break;
          case 0xAuLL:
            v28 = 0xED000074726F7065;
            v29 = 0x52207972756A6E49;
            break;
          case 0xBuLL:
            v28 = 0xEA00000000007265;
            v29 = 0x79616C502079654BLL;
            break;
          case 0xCuLL:
            v28 = 0xE600000000000000;
            v29 = 0x656C7A7A7550;
            break;
          case 0xDuLL:
            v28 = 0xEB00000000657079;
            v29 = 0x5420656C7A7A7550;
            break;
          case 0xEuLL:
            v28 = v86 | 0x8000000000000000;
            v29 = 0xD000000000000010;
            break;
          default:
            v29 = *v26;
            v28 = v26[1];
            break;
        }
        sub_1BA682148(*v26, v27);
        *(_QWORD *)&v89[0] = v20;
        v31 = *(_QWORD *)(v20 + 16);
        v30 = *(_QWORD *)(v20 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_1BA7447E8(v30 > 1, v31 + 1, 1);
          v20 = *(_QWORD *)&v89[0];
        }
        *(_QWORD *)(v20 + 16) = v31 + 1;
        v32 = v20 + 16 * v31;
        *(_QWORD *)(v32 + 32) = v29;
        *(_QWORD *)(v32 + 40) = v28;
        v33 = sub_1BA57FFE8(v21, v23, v25 & 1, v18);
        v21 = v33;
        v23 = v34;
        v25 = v35 & 1;
        --v19;
      }
      while (v19);
      sub_1BA8CA884(v33, v34, v35 & 1);
      swift_bridgeObjectRelease();
      v12 = v81;
      v17 = v76;
    }
    *(_QWORD *)&v89[0] = v20;
    swift_bridgeObjectRetain();
    sub_1BA5BBDDC((uint64_t *)v89);
    v76 = inited + 32;
    v36 = (char *)(v83 + v17);
    swift_bridgeObjectRelease();
    sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
    sub_1BA6A0BA4();
    v37 = sub_1BB872904();
    v39 = v38;
    swift_release();
    sub_1BAAF7494(0x73646E694BLL, 0xE500000000000000, v37, v39, v36);
    v40 = type metadata accessor for FormatInspectionItem(0);
    v41 = *(char **)(*(_QWORD *)(v40 - 8) + 56);
    v81 = v36;
    v86 = v40;
    v87 = v41;
    ((void (*)(char *, _QWORD, uint64_t))v41)(v36, 0, 1);
    LODWORD(v88) = *(_DWORD *)v12;
    *(_QWORD *)&v89[0] = sub_1BB87420C();
    *((_QWORD *)&v89[0] + 1) = v42;
    sub_1BB872AFC(v43);
    if (*((_DWORD *)v12 + 1) != 0x7FFFFFFF)
    {
      LODWORD(v88) = *((_DWORD *)v12 + 1);
      sub_1BB87420C();
    }
    v44 = v82;
    v45 = v81;
    sub_1BB872AFC(&v91);
    swift_bridgeObjectRelease();
    sub_1BAAF7494(0x65676E6152, 0xE500000000000000, *(uint64_t *)&v89[0], *((uint64_t *)&v89[0] + 1), &v45[v44]);
    v46 = v86;
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v87)(&v45[v44], 0, 1, v86);
    v88 = *(_QWORD *)(*((_QWORD *)v12 + 2) + 16);
    *(_QWORD *)&v89[0] = sub_1BB87420C();
    *((_QWORD *)&v89[0] + 1) = v47;
    sub_1BB872AFC(v48);
    v49 = v89[0];
    v50 = swift_bridgeObjectRetain();
    v51 = (uint64_t)v12;
    v52 = sub_1BB1390DC(v50);
    swift_bridgeObjectRelease();
    v53 = sub_1BA975B1C(v52);
    swift_bridgeObjectRelease();
    v54 = sub_1BA9747FC(v53);
    swift_bridgeObjectRelease();
    v55 = sub_1BB6DF010(v54);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x69747265706F7250, 0xEA00000000007365, (uint64_t)v55, v49, *((uint64_t *)&v49 + 1), &v45[2 * v44]);
    v56 = v46;
    v57 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v87;
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v87)(&v45[2 * v44], 0, 1, v56);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v58 = swift_initStackObject();
    *(_OWORD *)(v58 + 16) = v77;
    v59 = *(_QWORD *)(v51 + 24);
    v60 = *(_QWORD *)(v51 + 32);
    *(_QWORD *)&v89[0] = v59;
    *((_QWORD *)&v89[0] + 1) = v60;
    sub_1BA5DCC20(v59);
    v61 = sub_1BB1FCA24(v78, v89);
    sub_1BA5DCC4C(v59);
    *(_QWORD *)(v58 + 56) = &type metadata for FormatInspection;
    *(_QWORD *)(v58 + 64) = &off_1E7335C38;
    *(_QWORD *)(v58 + 32) = v61;
    v62 = sub_1BA9747FC(v58);
    swift_setDeallocating();
    sub_1BA89EA20();
    swift_arrayDestroy();
    v63 = sub_1BB6DF010(v62);
    swift_bridgeObjectRelease();
    sub_1BAAF3C48(0x7261696C69787541, 0xE900000000000079, (uint64_t)v63, 0, 0, &v45[3 * v44]);
    v57(&v45[3 * v44], 0, 1, v86);
    v64 = v85;
    sub_1BA4C2DD8(v51 + *(int *)(v79 + 36), v85, (uint64_t (*)(_QWORD))sub_1BA74E57C);
    v65 = sub_1BB86E710();
    v66 = *(_QWORD *)(v65 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65) == 1)
    {
      sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))sub_1BA74E57C);
      v67 = 0;
      v68 = 0xE000000000000000;
    }
    else
    {
      v67 = sub_1BB86E704();
      v68 = v69;
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v65);
    }
    v70 = &v81[4 * v82];
    sub_1BAAF7494(0xD000000000000011, 0x80000001BB984030, v67, v68, v70);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v87)(v70, 0, 1, v86);
    sub_1BAF89090(0x746553206D657449, 0xE800000000000000, 0, 0, v83, v89);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v71 = inited;
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(v71 + 64) = &off_1E72D2F60;
    v72 = swift_allocObject();
    *(_QWORD *)(v71 + 32) = v72;
    *(_QWORD *)(v72 + 48) = v90;
    v73 = v89[1];
    *(_OWORD *)(v72 + 16) = v89[0];
    *(_OWORD *)(v72 + 32) = v73;
    v13 = sub_1BB6DF010(v71);
    swift_setDeallocating();
    sub_1BA89EA04(0);
    swift_arrayDestroy();
    sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatSlotDefinitionItemSet);
  }
  return v13;
}

uint64_t sub_1BB2B0D20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7235949 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7889261 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73646E696BLL && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7261696C69787561 && a2 == 0xE900000000000079 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB95B4E0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

void sub_1BB2B0F8C(uint64_t a1)
{
  sub_1BA4B07F0(a1, qword_1EF2ADE58, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB2B0FA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB2B0FE0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;

  sub_1BB2B14A4();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BB901D40;
  v1 = (void *)*MEMORY[0x1E0DC5020];
  v2 = (void *)*MEMORY[0x1E0DC5060];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0DC5020];
  *(_QWORD *)(v0 + 40) = v2;
  v3 = (void *)*MEMORY[0x1E0DC5058];
  v4 = (void *)*MEMORY[0x1E0DC5180];
  *(_QWORD *)(v0 + 48) = *MEMORY[0x1E0DC5058];
  *(_QWORD *)(v0 + 56) = v4;
  v5 = (void *)*MEMORY[0x1E0DC5188];
  v6 = (void *)*MEMORY[0x1E0DC5088];
  *(_QWORD *)(v0 + 64) = *MEMORY[0x1E0DC5188];
  *(_QWORD *)(v0 + 72) = v6;
  v7 = (void *)*MEMORY[0x1E0DC5010];
  v8 = (void *)*MEMORY[0x1E0DC50C0];
  *(_QWORD *)(v0 + 80) = *MEMORY[0x1E0DC5010];
  *(_QWORD *)(v0 + 88) = v8;
  v9 = (void *)*MEMORY[0x1E0DC50E8];
  v10 = (void *)*MEMORY[0x1E0DC5090];
  *(_QWORD *)(v0 + 96) = *MEMORY[0x1E0DC50E8];
  *(_QWORD *)(v0 + 104) = v10;
  v74 = (void *)*MEMORY[0x1E0DC50D0];
  v76 = (void *)*MEMORY[0x1E0DC50B0];
  v11 = *MEMORY[0x1E0DC50B0];
  *(_QWORD *)(v0 + 112) = *MEMORY[0x1E0DC50D0];
  *(_QWORD *)(v0 + 120) = v11;
  v75 = (void *)*MEMORY[0x1E0DC50B8];
  v78 = (void *)*MEMORY[0x1E0DC5038];
  v12 = *MEMORY[0x1E0DC5038];
  *(_QWORD *)(v0 + 128) = *MEMORY[0x1E0DC50B8];
  *(_QWORD *)(v0 + 136) = v12;
  v77 = (void *)*MEMORY[0x1E0DC50C8];
  v80 = (void *)*MEMORY[0x1E0DC5050];
  v13 = *MEMORY[0x1E0DC5050];
  *(_QWORD *)(v0 + 144) = *MEMORY[0x1E0DC50C8];
  *(_QWORD *)(v0 + 152) = v13;
  v79 = (void *)*MEMORY[0x1E0DC5178];
  v82 = (void *)*MEMORY[0x1E0DC5120];
  v14 = *MEMORY[0x1E0DC5120];
  *(_QWORD *)(v0 + 160) = *MEMORY[0x1E0DC5178];
  *(_QWORD *)(v0 + 168) = v14;
  v81 = (void *)*MEMORY[0x1E0DC5068];
  v84 = (void *)*MEMORY[0x1E0DC50D8];
  v15 = *MEMORY[0x1E0DC50D8];
  *(_QWORD *)(v0 + 176) = *MEMORY[0x1E0DC5068];
  *(_QWORD *)(v0 + 184) = v15;
  v83 = (void *)*MEMORY[0x1E0DC50F0];
  v86 = (void *)*MEMORY[0x1E0DC5158];
  v16 = *MEMORY[0x1E0DC5158];
  *(_QWORD *)(v0 + 192) = *MEMORY[0x1E0DC50F0];
  *(_QWORD *)(v0 + 200) = v16;
  v85 = (void *)*MEMORY[0x1E0DC5108];
  v88 = (void *)*MEMORY[0x1E0DC5118];
  v17 = *MEMORY[0x1E0DC5118];
  *(_QWORD *)(v0 + 208) = *MEMORY[0x1E0DC5108];
  *(_QWORD *)(v0 + 216) = v17;
  v87 = (void *)*MEMORY[0x1E0DC5110];
  v90 = (void *)*MEMORY[0x1E0DC5130];
  v18 = *MEMORY[0x1E0DC5130];
  *(_QWORD *)(v0 + 224) = *MEMORY[0x1E0DC5110];
  *(_QWORD *)(v0 + 232) = v18;
  v89 = (void *)*MEMORY[0x1E0DC5138];
  v92 = (void *)*MEMORY[0x1E0DC5128];
  v19 = *MEMORY[0x1E0DC5128];
  *(_QWORD *)(v0 + 240) = *MEMORY[0x1E0DC5138];
  *(_QWORD *)(v0 + 248) = v19;
  v91 = (void *)*MEMORY[0x1E0DC5170];
  v94 = (void *)*MEMORY[0x1E0DC5100];
  v20 = *MEMORY[0x1E0DC5100];
  *(_QWORD *)(v0 + 256) = *MEMORY[0x1E0DC5170];
  *(_QWORD *)(v0 + 264) = v20;
  v93 = (void *)*MEMORY[0x1E0DC50A0];
  v96 = (void *)*MEMORY[0x1E0DC5098];
  v21 = *MEMORY[0x1E0DC5098];
  *(_QWORD *)(v0 + 272) = *MEMORY[0x1E0DC50A0];
  *(_QWORD *)(v0 + 280) = v21;
  v95 = (void *)*MEMORY[0x1E0DC5078];
  v22 = *MEMORY[0x1E0DC5070];
  v98 = (void *)*MEMORY[0x1E0DC5070];
  *(_QWORD *)(v0 + 288) = *MEMORY[0x1E0DC5078];
  *(_QWORD *)(v0 + 296) = v22;
  v97 = (void *)*MEMORY[0x1E0DC5150];
  v23 = *MEMORY[0x1E0DC5148];
  v100 = (void *)*MEMORY[0x1E0DC5148];
  *(_QWORD *)(v0 + 304) = *MEMORY[0x1E0DC5150];
  *(_QWORD *)(v0 + 312) = v23;
  v99 = (void *)*MEMORY[0x1E0DC5160];
  v102 = (void *)*MEMORY[0x1E0DC5140];
  *(_QWORD *)(v0 + 320) = *MEMORY[0x1E0DC5160];
  *(_QWORD *)(v0 + 328) = v102;
  v101 = (void *)*MEMORY[0x1E0DC5028];
  v24 = *MEMORY[0x1E0DC5190];
  v104 = (void *)*MEMORY[0x1E0DC5190];
  *(_QWORD *)(v0 + 336) = *MEMORY[0x1E0DC5028];
  *(_QWORD *)(v0 + 344) = v24;
  v103 = (void *)*MEMORY[0x1E0DC5018];
  v25 = *MEMORY[0x1E0DC5168];
  v106 = (void *)*MEMORY[0x1E0DC5168];
  *(_QWORD *)(v0 + 352) = *MEMORY[0x1E0DC5018];
  *(_QWORD *)(v0 + 360) = v25;
  v105 = (void *)*MEMORY[0x1E0DC50F8];
  v108 = (void *)*MEMORY[0x1E0DC5080];
  *(_QWORD *)(v0 + 368) = *MEMORY[0x1E0DC50F8];
  *(_QWORD *)(v0 + 376) = v108;
  v107 = (void *)*MEMORY[0x1E0DC50A8];
  v26 = *MEMORY[0x1E0DC5030];
  v109 = (void *)*MEMORY[0x1E0DC5030];
  *(_QWORD *)(v0 + 384) = *MEMORY[0x1E0DC50A8];
  *(_QWORD *)(v0 + 392) = v26;
  v27 = v1;
  v28 = v2;
  v29 = v3;
  v30 = v4;
  v31 = v5;
  v32 = v6;
  v33 = v7;
  v34 = v8;
  v35 = v9;
  v36 = v10;
  v37 = v74;
  v38 = v76;
  v39 = v75;
  v40 = v78;
  v41 = v77;
  v42 = v80;
  v43 = v79;
  v44 = v82;
  v45 = v81;
  v46 = v84;
  v47 = v83;
  v48 = v86;
  v49 = v85;
  v50 = v88;
  v51 = v87;
  v52 = v90;
  v53 = v89;
  v54 = v92;
  v55 = v91;
  v56 = v94;
  v57 = v93;
  v58 = v96;
  v59 = v95;
  v60 = v98;
  v61 = v97;
  v62 = v100;
  v63 = v99;
  v64 = v102;
  v65 = v101;
  v66 = v104;
  v67 = v103;
  v68 = v106;
  v69 = v105;
  v70 = v108;
  v71 = v107;
  v72 = v109;
  return v0;
}

void sub_1BB2B14A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A1080)
  {
    type metadata accessor for Identifier(255);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A1080);
  }
}

void sub_1BB2B14F8(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB2B1540(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  result = sub_1BAC68EEC(v4, v5, a3);
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = -2;
  return result;
}

uint64_t sub_1BB2B1894@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupRequirement.init(from:)(a1, a2);
}

void sub_1BB2B18A8(_QWORD *a1)
{
  FormatGroupRequirement.encode(to:)(a1);
}

void _s8NewsFeed22FormatGroupRequirementO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_1BB2B1900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;
  int v5;

  if (v5)
  {
    sub_1BA901A94(v1, v0, v5);
    sub_1BAC68EEC(v3, v2, v4);
    sub_1BAC68EEC(v1, v0, v5);
    return 0;
  }
  else
  {
    sub_1BAC68EEC(v3, v2, 0);
    sub_1BAC68EEC(v1, v0, 0);
    return *(double *)&v3 == *(double *)&v1;
  }
}

unint64_t sub_1BB2B1D50(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2B1D74();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2B1D74()
{
  unint64_t result;

  result = qword_1EF2C0358;
  if (!qword_1EF2C0358)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupRequirement, &type metadata for FormatGroupRequirement);
    atomic_store(result, (unint64_t *)&qword_1EF2C0358);
  }
  return result;
}

unint64_t sub_1BB2B1DB8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82A400();
  a1[2] = sub_1BA82A444();
  result = sub_1BB2B1DEC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2B1DEC()
{
  unint64_t result;

  result = qword_1EF2C0360;
  if (!qword_1EF2C0360)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupRequirement, &type metadata for FormatGroupRequirement);
    atomic_store(result, (unint64_t *)&qword_1EF2C0360);
  }
  return result;
}

uint64_t destroy for FormatGroupRequirement(uint64_t a1)
{
  return sub_1BAC68EEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed22FormatGroupRequirementOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA901A94(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatGroupRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA901A94(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BAC68EEC(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatGroupRequirement(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BAC68EEC(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatGroupRequirement(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF4 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 244);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0xC)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatGroupRequirement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF3)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 244;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF4)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF4)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupRequirement()
{
  return &type metadata for FormatGroupRequirement;
}

uint64_t sub_1BB2B1FC0@<X0>(uint64_t (*a1)(_QWORD *)@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t i;
  BOOL v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v25;
  int64_t v26;
  uint64_t v29;
  _QWORD v30[8];
  int64_t v31;

  v25 = a2 + 64;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 64);
  v26 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v29 = (v6 - 1) & v6;
  v31 = v8;
  for (i = __clz(__rbit64(v6)) | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v11 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(a2 + 56) + (i << 6));
    v15 = *v14;
    v16 = v14[1];
    v17 = v14[2];
    v18 = v14[3];
    v20 = v14[4];
    v19 = v14[5];
    v22 = v14[6];
    v21 = v14[7];
    v30[0] = *v14;
    v30[1] = v16;
    v30[2] = v17;
    v30[3] = v18;
    v30[4] = v20;
    v30[5] = v19;
    v30[6] = v22;
    v30[7] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = a1(v30);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if ((v23 & 1) != 0)
    {
      result = swift_release();
      *a3 = v15;
      a3[1] = v16;
      a3[2] = v17;
      a3[3] = v18;
      a3[4] = v20;
      a3[5] = v19;
      a3[6] = v22;
      a3[7] = v21;
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v8 = v31;
    v6 = v29;
    if (v29)
      goto LABEL_4;
LABEL_5:
    v10 = __OFADD__(v8, 1);
    v11 = v8 + 1;
    if (v10)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v11 >= v26)
      goto LABEL_28;
    v12 = *(_QWORD *)(v25 + 8 * v11);
    if (!v12)
      break;
LABEL_17:
    v29 = (v12 - 1) & v12;
    v31 = v11;
  }
  v13 = v11 + 1;
  if (v11 + 1 >= v26)
    goto LABEL_28;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v11 + 2;
  if (v11 + 2 >= v26)
    goto LABEL_28;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v11 + 3;
  if (v11 + 3 >= v26)
    goto LABEL_28;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
    goto LABEL_16;
  v13 = v11 + 4;
  if (v11 + 4 >= v26)
  {
LABEL_28:
    result = swift_release();
    *((_OWORD *)a3 + 2) = 0u;
    *((_OWORD *)a3 + 3) = 0u;
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
    return result;
  }
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
  {
LABEL_16:
    v11 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    v11 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v11 >= v26)
      goto LABEL_28;
    v12 = *(_QWORD *)(v25 + 8 * v11);
    ++v13;
    if (v12)
      goto LABEL_17;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1BB2B22A4(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  void (*v6)(id, id, uint64_t (*)(char), uint64_t);
  void *v7;
  uint64_t v8;
  id v9;
  id v10;

  v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v7 = _Block_copy(aBlock);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_retain();
  v10 = a2;
  v9 = a3;
  v6(v10, v9, sub_1BB284E48, v8);
  swift_release();
  swift_release();

}

uint64_t sub_1BB2B2564()
{
  return type metadata accessor for DebugInspectViewController();
}

uint64_t type metadata accessor for DebugInspectViewController()
{
  uint64_t result;

  result = qword_1EF2C0408;
  if (!qword_1EF2C0408)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB2B25A8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for DebugGroupLayoutKey();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DebugInspectViewResult();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

void sub_1BB2B2680()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  objc_super v29;

  v29.receiver = v0;
  v29.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v29, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_navigationItem);
  v28 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource];
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setTitle_, v2);

  v3 = objc_msgSend(v0, sel_navigationItem);
  objc_msgSend(v3, sel_setLeftItemsSupplementBackButton_, 1);

  v4 = objc_msgSend(v0, sel_navigationItem);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB8856E0;
  v6 = (void *)sub_1BB872970();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_systemImageNamed_, v6);

  if (!v8)
  {
    __break(1u);
    goto LABEL_6;
  }
  v9 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v10 = v0;
  v11 = objc_msgSend(v9, sel_initWithImage_style_target_action_, v8, 0, v10, sel_doTapToRadar);

  *(_QWORD *)(v5 + 32) = v11;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v12 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setLeftBarButtonItems_, v12);

  v13 = objc_msgSend(v10, sel_navigationItem);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BB8856E0;
  v15 = (void *)sub_1BB872970();
  v16 = objc_msgSend(v7, sel_systemImageNamed_, v15);

  if (!v16)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v17 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v18 = v10;
  v19 = objc_msgSend(v17, sel_initWithImage_style_target_action_, v16, 2, v18, sel_doDismiss);

  *(_QWORD *)(v14 + 32) = v19;
  sub_1BB872DCC();
  v20 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setRightBarButtonItems_, v20);

  v21 = objc_msgSend(v18, sel_view);
  if (v21)
  {
    v22 = v21;
    v23 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView];
    objc_msgSend(v21, sel_addSubview_, v23);

    objc_msgSend(v23, sel_setDelegate_, v18);
    objc_msgSend(v23, sel_setDataSource_, v18);
    objc_msgSend(v23, sel_setAlwaysBounceVertical_, 1);
    type metadata accessor for FeedItemTableViewCell();
    sub_1BB873234();
    type metadata accessor for RequirementTableViewCell();
    sub_1BB873234();
    type metadata accessor for KeyValueTableViewCell();
    sub_1BB873234();
    type metadata accessor for LayoutTableViewCell();
    sub_1BB873234();
    type metadata accessor for LoadingTableViewCell();
    sub_1BB873234();
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
    sub_1BB873234();
    type metadata accessor for SubtitleTableViewCell();
    sub_1BB873234();
    v24 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_searchController];
    objc_msgSend(v24, sel_setSearchResultsUpdater_, v18);
    objc_msgSend(v24, sel_setHidesNavigationBarDuringPresentation_, 0);
    objc_msgSend(v24, sel_setObscuresBackgroundDuringPresentation_, 0);
    v25 = objc_msgSend(v24, sel_searchBar);
    v26 = (void *)sub_1BB872970();
    objc_msgSend(v25, sel_setPlaceholder_, v26);

    v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1BACD61E0(v28, v27);
    swift_release();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1BB2B2BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (char *)v4;
    v6 = OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inspector;
    v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inspector);
    swift_retain();
    swift_bridgeObjectRetain();
    v8 = sub_1BB3FE33C(v7, a1);
    swift_release();
    *(_QWORD *)&v5[v6] = v8;
    swift_release();
    v9 = objc_msgSend(v5, sel_navigationItem);
    objc_msgSend(v9, sel_setSearchController_, *(_QWORD *)&v5[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_searchController]);

    objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView], sel_reloadData);
  }
}

id sub_1BB2B2D08()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  id result;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double Width;
  CGFloat v31;
  CGAffineTransform v32;
  _OWORD v33[3];
  uint64_t v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v1 = v0;
  v2 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8((uint64_t)&v0[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_result], (uint64_t)v4, v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BACD5EAC();

    v7 = 0;
LABEL_6:
    sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    return v7;
  }
  sub_1BACD5F2C();
  v9 = &v4[*(int *)(v8 + 48)];
  v34 = *((_QWORD *)v9 + 6);
  v10 = *((_OWORD *)v9 + 1);
  v33[0] = *(_OWORD *)v9;
  v33[1] = v10;
  v33[2] = *((_OWORD *)v9 + 2);
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_factory], *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_factory + 24]);
  type metadata accessor for DebugGroupLayoutKey();
  sub_1BB86D714();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = (void *)sub_1BB86D738();
  v7 = (void *)sub_1BB820490((uint64_t)v33, MEMORY[0x1E0DEE9D8], 0, (uint64_t)v19, v12, v14, v16, v18);

  sub_1BA6A4460((uint64_t)v33);
  objc_msgSend(v7, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v7, sel_bounds);
  if (CGRectGetWidth(v35) <= 0.0)
    goto LABEL_6;
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v21 = result;
    objc_msgSend(result, sel_bounds);
    v23 = v22;
    v25 = v24;
    v27 = v26;
    v29 = v28;

    v36.origin.x = v23;
    v36.origin.y = v25;
    v36.size.width = v27;
    v36.size.height = v29;
    Width = CGRectGetWidth(v36);
    objc_msgSend(v7, sel_bounds);
    v31 = fmin(Width / CGRectGetWidth(v37), 1.0);
    CGAffineTransformMakeScale(&v32, v31, v31);
    objc_msgSend(v7, sel_setTransform_, &v32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_1BB2B30CC()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;

  v1 = v0;
  swift_getObjectType();
  v2 = objc_msgSend(v0, sel_navigationItem);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8856E0;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_init);
  objc_msgSend(v4, sel_sizeToFit);
  objc_msgSend(v4, sel_startAnimating);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithCustomView_, v4);

  *(_QWORD *)(v3 + 32) = v5;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v6 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setLeftBarButtonItems_, v6);

  sub_1BB86EC14();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v7 = (void *)sub_1BB87345C();
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  v8 = v1;
  sub_1BB86E98C();
  swift_release();

  swift_release();
  v9 = (void *)sub_1BB87345C();
  sub_1BB86E9B0();
  swift_release();
  swift_release();

}

void sub_1BB2B3314(uint64_t a1, void *a2, char *a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  char *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  _QWORD *v66;
  uint64_t *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  uint64_t *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  id v105;
  id v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  void (*v112)(char *, uint64_t, uint64_t);
  uint64_t *v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t *v122;
  uint64_t v123;
  id v124;
  id v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  id v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t *, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  id v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v153;
  uint64_t v154;
  id v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  _QWORD v163[6];
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  void (*v183)(char *, uint64_t, uint64_t);
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;

  v181 = a3;
  v168 = sub_1BB86FE2C();
  v167 = *(_QWORD *)(v168 - 8);
  MEMORY[0x1E0C80A78](v168);
  v169 = (char *)v163 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C0530, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB74E0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v163 - v8;
  sub_1BA4B07F0(0, &qword_1EF2CC0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC2A8], v6);
  MEMORY[0x1E0C80A78](v10);
  v170 = (char *)v163 - v11;
  v183 = *(void (**)(char *, uint64_t, uint64_t))a1;
  v166 = *(_QWORD *)(a1 + 8);
  v165 = *(char **)(a1 + 16);
  v172 = *(_QWORD *)(a1 + 24);
  v173 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 48);
  v174 = *(_QWORD *)(a1 + 40);
  v175 = v12;
  v13 = *(uint64_t **)(a1 + 64);
  v176 = *(_QWORD *)(a1 + 56);
  v177 = v13;
  v178 = *(_QWORD *)(a1 + 72);
  v14 = *(_QWORD *)(a1 + 88);
  v164 = *(_QWORD *)(a1 + 80);
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v180 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(a2, sel_navigationItem);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BB8856E0;
  v17 = (void *)sub_1BB872970();
  v18 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v17);

  if (v18)
  {
    v19 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v20 = a2;
    v21 = objc_msgSend(v19, sel_initWithImage_style_target_action_, v18, 0, v20, sel_doTapToRadar);

    *(_QWORD *)(v16 + 32) = v21;
    v184 = v16;
    sub_1BB872DCC();
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
    v22 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v15, sel_setLeftBarButtonItems_, v22);

    v23 = *(_QWORD *)&v20[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter + 8];
    v163[4] = *(_QWORD *)&v20[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter];
    v163[5] = v23;
    v163[3] = swift_getObjectType();
    sub_1BB8714A0();
    v163[1] = sub_1BB871464();
    v24 = sub_1BB86F9A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 1, 1, v24);
    sub_1BA4B07F0(0, &qword_1EF2C0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB79E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v25 = sub_1BB86FC28();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    v182 = *(_QWORD *)(v26 + 72);
    v28 = swift_allocObject();
    v163[2] = v28;
    *(_OWORD *)(v28 + 16) = xmmword_1BB881B80;
    v179 = (char *)(v28 + v27);
    v29 = (_QWORD *)swift_allocObject();
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1BB87CE70;
    v31 = (char *)(v30 + v27);
    v32 = (_QWORD *)swift_allocObject();
    v32[5] = &type metadata for DebugInspection;
    v32[6] = sub_1BB2BCDE8();
    v33 = (_QWORD *)swift_allocObject();
    v32[2] = v33;
    v34 = v166;
    v33[2] = v183;
    v33[3] = v34;
    v35 = v172;
    v33[4] = v165;
    v33[5] = v35;
    v36 = v174;
    v33[6] = v173;
    v33[7] = v36;
    v37 = v176;
    v33[8] = v175;
    v33[9] = v37;
    v38 = v178;
    v33[10] = v177;
    v33[11] = v38;
    v39 = v180;
    v33[12] = v164;
    v33[13] = v39;
    v165 = v9;
    v32[7] = 0xD000000000000015;
    v32[8] = 0x80000001BB9842E0;
    *(_QWORD *)v31 = v32;
    v40 = *MEMORY[0x1E0DB79C8];
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 104);
    v186 = v25;
    v41(v31, v40, v25);
    v183 = v41;
    v29[2] = v30;
    v29[3] = 0xD000000000000015;
    v29[4] = 0x80000001BB9842E0;
    v42 = v179;
    *(_QWORD *)v179 = v29;
    v41(v42, *MEMORY[0x1E0DB79D8], v25);
    v43 = v182;
    v44 = (uint64_t *)&v42[v182];
    v45 = swift_allocObject();
    v46 = *(char **)&v181[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_cloudContext];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v181 = v46;
    v47 = objc_msgSend(v46, sel_privateDataDirectory);
    v48 = sub_1BB8729A0();
    v50 = v49;

    v184 = v48;
    v185 = v50;
    sub_1BB872AFC(v51);
    v52 = v185;
    *(_QWORD *)(v45 + 16) = v184;
    *(_QWORD *)(v45 + 24) = v52;
    *v44 = v45;
    LODWORD(v180) = *MEMORY[0x1E0DB79E0];
    v53 = v180;
    v183(&v42[v43], v180, v186);
    v54 = 2 * v43;
    v55 = (uint64_t *)&v42[2 * v43];
    v56 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v57 = objc_msgSend(v46, sel_privateDataDirectory);
    v58 = sub_1BB8729A0();
    v60 = v59;
    swift_bridgeObjectRelease();

    v184 = v58;
    v185 = v60;
    sub_1BB872AFC("inspection-group-data");
    v61 = v185;
    *(_QWORD *)(v56 + 16) = v184;
    *(_QWORD *)(v56 + 24) = v61;
    *v55 = v56;
    v62 = v53;
    v63 = v186;
    v64 = (void (*)(uint64_t *, _QWORD, uint64_t))v183;
    v183((char *)v55, v62, v186);
    v65 = v54 + v182;
    v66 = v179;
    v67 = (uint64_t *)&v179[v65];
    v68 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v69 = objc_msgSend(v181, sel_privateDataDirectory);
    v70 = sub_1BB8729A0();
    v72 = v71;
    swift_bridgeObjectRelease();

    v184 = v70;
    v185 = v72;
    sub_1BB872AFC("-aggregates.json");
    v73 = v185;
    *(_QWORD *)(v68 + 16) = v184;
    *(_QWORD *)(v68 + 24) = v73;
    *v67 = v68;
    v64(v67, v180, v63);
    v74 = v182;
    v178 = 4 * v182;
    v177 = (_QWORD *)((char *)v66 + 4 * v182);
    v75 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v76 = v181;
    v77 = objc_msgSend(v181, sel_privateDataDirectory);
    v78 = sub_1BB8729A0();
    v80 = v79;
    swift_bridgeObjectRelease();

    v184 = v78;
    v185 = v80;
    sub_1BB872AFC("/personalization-sessions");
    v81 = v185;
    *(_QWORD *)(v75 + 16) = v184;
    *(_QWORD *)(v75 + 24) = v81;
    *v177 = v75;
    v82 = (void (*)(uint64_t *, _QWORD, uint64_t))v183;
    ((void (*)(void))v183)();
    v83 = (_QWORD *)((char *)v66 + v178 + v74);
    v84 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v85 = objc_msgSend(v76, sel_privateDataDirectory);
    v86 = sub_1BB8729A0();
    v88 = v87;
    swift_bridgeObjectRelease();

    v184 = v86;
    v185 = v88;
    sub_1BB872AFC("/user_embedding_transformer.pkg");
    v89 = v185;
    *(_QWORD *)(v84 + 16) = v184;
    *(_QWORD *)(v84 + 24) = v89;
    *v83 = v84;
    v90 = v83;
    v91 = v180;
    v92 = v186;
    v82(v90, v180, v186);
    v93 = (_QWORD *)((char *)v66 + 6 * v182);
    v94 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v95 = objc_msgSend(v181, sel_privateDataDirectory);
    v96 = sub_1BB8729A0();
    v98 = v97;
    swift_bridgeObjectRelease();

    v184 = v96;
    v185 = v98;
    sub_1BB872AFC(v99);
    v100 = v185;
    *(_QWORD *)(v94 + 16) = v184;
    *(_QWORD *)(v94 + 24) = v100;
    *v93 = v94;
    v101 = v91;
    v102 = v92;
    v183((char *)v93, v101, v92);
    v178 = 8 * v182;
    v103 = (_QWORD *)((char *)v66 + 7 * v182);
    v104 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v105 = v181;
    v106 = objc_msgSend(v181, sel_privateDataDirectory);
    v107 = sub_1BB8729A0();
    v109 = v108;
    swift_bridgeObjectRelease();

    v184 = v107;
    v185 = v109;
    sub_1BB872AFC("/subscriptions.json");
    v110 = v185;
    *(_QWORD *)(v104 + 16) = v184;
    *(_QWORD *)(v104 + 24) = v110;
    *v103 = v104;
    v111 = v102;
    v112 = (void (*)(uint64_t *, _QWORD, uint64_t))v183;
    v183((char *)v103, v180, v111);
    v113 = (_QWORD *)((char *)v66 + v178);
    v114 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v115 = objc_msgSend(v105, sel_privateDataDirectory);
    v116 = sub_1BB8729A0();
    v118 = v117;
    swift_bridgeObjectRelease();

    v184 = v116;
    v185 = v118;
    sub_1BB872AFC("_human_readable.json");
    v119 = v185;
    *(_QWORD *)(v114 + 16) = v184;
    *(_QWORD *)(v114 + 24) = v119;
    *v113 = v114;
    v112(v113, v180, v186);
    v120 = v182;
    v121 = v179;
    v122 = (uint64_t *)&v179[v178 + v182];
    v123 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v124 = v181;
    v125 = objc_msgSend(v181, sel_privateDataDirectory);
    v126 = sub_1BB8729A0();
    v128 = v127;
    swift_bridgeObjectRelease();

    v184 = v126;
    v185 = v128;
    sub_1BB872AFC("_human_readable_previous.json");
    v129 = v185;
    *(_QWORD *)(v123 + 16) = v184;
    *(_QWORD *)(v123 + 24) = v129;
    *v122 = v123;
    v130 = v122;
    v131 = v180;
    v183((char *)v130, v180, v186);
    v132 = (_QWORD *)((char *)v121 + 10 * v120);
    v133 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v134 = objc_msgSend(v124, sel_privateDataDirectory);
    v135 = sub_1BB8729A0();
    v137 = v136;
    swift_bridgeObjectRelease();

    v184 = v135;
    v185 = v137;
    sub_1BB872AFC("user_embedding_parameters.json");
    v138 = v185;
    *(_QWORD *)(v133 + 16) = v184;
    *(_QWORD *)(v133 + 24) = v138;
    *v132 = v133;
    v139 = v131;
    v140 = v186;
    v141 = (void (*)(uint64_t *, uint64_t, uint64_t))v183;
    v183((char *)v132, v139, v186);
    v142 = v182;
    v143 = (uint64_t *)&v179[11 * v182];
    v144 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v145 = objc_msgSend(v181, sel_contentDirectory);
    v146 = sub_1BB8729A0();
    v148 = v147;
    swift_bridgeObjectRelease();

    v184 = v146;
    v185 = v148;
    sub_1BB872AFC("embedding_training_history.json");
    v149 = v185;
    *(_QWORD *)(v144 + 16) = v184;
    *(_QWORD *)(v144 + 24) = v149;
    *v143 = v144;
    v150 = v180;
    v151 = v140;
    v152 = v141;
    v141(v143, v180, v151);
    v153 = (uint64_t *)&v179[12 * v142];
    v154 = swift_allocObject();
    v184 = 0;
    v185 = 0xE000000000000000;
    sub_1BB873CB4();
    v155 = objc_msgSend(v181, sel_contentDirectory);
    v156 = sub_1BB8729A0();
    v158 = v157;
    swift_bridgeObjectRelease();

    v184 = v156;
    v185 = v158;
    sub_1BB872AFC("/tabi_user_features");
    v159 = v185;
    *(_QWORD *)(v154 + 16) = v184;
    *(_QWORD *)(v154 + 24) = v159;
    *v153 = v154;
    v152(v153, v150, v186);
    (*(void (**)(char *, _QWORD, uint64_t))(v167 + 104))(v169, *MEMORY[0x1E0DB7E18], v168);
    v160 = (uint64_t)v170;
    sub_1BB871320();
    v161 = sub_1BB87132C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56))(v160, 0, 1, v161);
    v162 = v171;
    sub_1BB86FF70();
    if (v162)
    {
      swift_release();

      sub_1BA5C699C(v160, &qword_1EF2CC0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC2A8]);
    }
    else
    {
      sub_1BA5C699C(v160, &qword_1EF2CC0F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC2A8]);
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1BB2B4300(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;

  if (qword_1EF2A7360 != -1)
    swift_once();
  v2 = (id)qword_1EF3D0928;
  v3 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = 0xE000000000000000;
  sub_1BB86EF44("Inspector tap to radar failed to generate inspections, error=%@", 63, 2, &dword_1BA493000, v2, v3, v4);

  swift_bridgeObjectRelease();
  sub_1BB873E34();
  v5 = (void *)sub_1BB872970();
  v6 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v5, v6, 1);

  v8 = (void *)sub_1BB872970();
  v9 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v8, 0, 0);

  objc_msgSend(v7, sel_addAction_, v9);
  objc_msgSend(a2, sel_presentViewController_animated_completion_, v7, 1, 0);
  v10 = objc_msgSend(a2, sel_navigationItem);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB8856E0;
  v12 = (void *)sub_1BB872970();
  v13 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v12);

  if (v13)
  {
    v14 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v15 = a2;
    v16 = objc_msgSend(v14, sel_initWithImage_style_target_action_, v13, 0, v15, sel_doTapToRadar);

    *(_QWORD *)(v11 + 32) = v16;
    sub_1BB872DCC();
    sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
    v17 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_setLeftBarButtonItems_, v17);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BB2B47E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v29[21];
  uint64_t v30;

  v29[20] = a1;
  sub_1BA6BCBF8(0);
  v29[14] = *(_QWORD *)(v2 - 8);
  v29[15] = v2;
  MEMORY[0x1E0C80A78](v2);
  v29[16] = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v29[11] = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C20B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v29[17] = (char *)v29 - v9;
  sub_1BA4B07F0(0, &qword_1EF2AFF58, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC548], v7);
  MEMORY[0x1E0C80A78](v10);
  v29[18] = (char *)v29 - v11;
  v12 = sub_1BB87261C();
  v29[7] = *(_QWORD *)(v12 - 8);
  v29[8] = v12;
  MEMORY[0x1E0C80A78](v12);
  v29[6] = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DebugInspectViewItem();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v30 = (uint64_t)v29 - v19;
  v20 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource);
  v21 = (uint64_t *)(v20 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  v22 = *v21;
  swift_bridgeObjectRetain();
  v23 = sub_1BB86CBD4();
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v23 < *(_QWORD *)(v22 + 16))
  {
    v29[12] = v5;
    v29[13] = v4;
    v29[19] = v20;
    v24 = *(_QWORD *)(v22 + 48 * v23 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = sub_1BB86CBC8();
    if ((v25 & 0x8000000000000000) == 0)
    {
      if (v25 < *(_QWORD *)(v24 + 16))
      {
        v26 = v24
            + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
            + *(_QWORD *)(v15 + 72) * v25;
        v27 = v30;
        sub_1BA4C2DD8(v26, v30, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
        swift_bridgeObjectRelease();
        sub_1BA4C2DD8(v27, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
        v28 = (char *)&loc_1BB2B4ACC + dword_1BB2B79EC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
LABEL_9:
      __break(1u);
      JUMPOUT(0x1BB2B79ECLL);
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __break(1u);
  goto LABEL_8;
}

uint64_t sub_1BB2B7A08(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 16);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v3 = sub_1BB86DEE8();
  LOBYTE(v2) = sub_1BA761FE4(v3, v4, v2);
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BB2B7A70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD *v8;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  v3 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 48))(v1);
  if (!v3)
    return 2960685;
  v4 = v3;
  objc_msgSend(v3, sel_agedPersonalizationScore);

  if (qword_1EF2A74C8 != -1)
    swift_once();
  v5 = (void *)qword_1EF3D0C38;
  v6 = (void *)sub_1BB86DC24();
  v7 = objc_msgSend(v5, sel_stringForObjectValue_, v6);

  if (v7)
  {
    sub_1BB8729A0();

  }
  else
  {
    sub_1BB872FDC();
  }
  sub_1BB872AFC(v8);
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1BB2B7B9C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  void *v16;
  void *v17;
  id v18;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v9 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8NewsFeed21FeedItemTableViewCell_identifier);
    v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC8NewsFeed21FeedItemTableViewCell_identifier + 8);
    swift_bridgeObjectRetain();

  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  v10 = a3[3];
  v11 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v10);
  v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v11 + 8) + 8))(v10);
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return;
  }
  if (v9 == v12 && v8 == v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      return;
  }
  swift_beginAccess();
  v16 = (void *)MEMORY[0x1BCCE5D40](v5);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v16, sel_imageView);

    if (v18)
    {
      objc_msgSend(v18, sel_setImage_, a1);

    }
  }
}

void sub_1BB2B7D10(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  char v14;
  void *v15;
  void *v16;
  id v17;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = (void *)MEMORY[0x1BCCE5D40](v5);
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, sel_textLabel);

    if (!v8)
    {
      v7 = 0;
      goto LABEL_8;
    }
    v9 = objc_msgSend(v8, sel_text);

    if (v9)
    {
      v7 = (void *)sub_1BB8729A0();
      v8 = v10;

      goto LABEL_8;
    }
    v7 = 0;
  }
  v8 = 0;
LABEL_8:
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  v11 = sub_1BA969388();
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return;
  }
  if (v7 == (void *)v11 && v8 == v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return;
  }
  swift_beginAccess();
  v15 = (void *)MEMORY[0x1BCCE5D40](v5);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v15, sel_imageView);

    objc_msgSend(v17, sel_setImage_, a1);
  }
}

void sub_1BB2B80E0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t ObjectType;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;

  ObjectType = swift_getObjectType();
  sub_1BA6BCBF8(0);
  v74 = *(_QWORD *)(v3 - 8);
  v75 = v3;
  MEMORY[0x1E0C80A78](v3);
  v76 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86C67C();
  v69 = *(_QWORD *)(v5 - 8);
  v70 = v5;
  MEMORY[0x1E0C80A78](v5);
  v68 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB8714E8();
  v79 = *(_QWORD *)(v7 - 8);
  v80 = v7;
  MEMORY[0x1E0C80A78](v7);
  v72 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v73 = (char *)&v46 - v10;
  sub_1BA4B07F0(0, &qword_1EF2AFF58, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v77 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v78 = (char *)&v46 - v15;
  v51 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1E0C80A78](v51);
  v58 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1BB872610();
  v56 = *(_QWORD *)(v17 - 8);
  v57 = v17;
  MEMORY[0x1E0C80A78](v17);
  v55 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BB872664();
  v53 = *(_QWORD *)(v19 - 8);
  v54 = v19;
  MEMORY[0x1E0C80A78](v19);
  v52 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BB87261C();
  v49 = *(_QWORD *)(v21 - 8);
  v50 = v21;
  MEMORY[0x1E0C80A78](v21);
  v48 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1E0C80A78](v23);
  v67 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v64);
  v66 = (char *)&v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for DebugGroupLayoutKey();
  v47 = *(_QWORD *)(v65 - 8);
  v26 = *(_QWORD *)(v47 + 64);
  MEMORY[0x1E0C80A78](v65);
  v60 = (char *)&v46 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v71 = (char *)&v46 - v28;
  v29 = sub_1BB86D8A0();
  v61 = *(_QWORD *)(v29 - 8);
  v62 = v29;
  MEMORY[0x1E0C80A78](v29);
  v63 = (char *)&v46 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for DebugInspectViewItem();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v46 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)&v46 - v36;
  v38 = (void *)sub_1BB86CB8C();
  objc_msgSend(a1, sel_deselectRowAtIndexPath_animated_, v38, 1);

  v81 = v1;
  v39 = (uint64_t *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource)
                  + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  v40 = *v39;
  swift_bridgeObjectRetain();
  v41 = sub_1BB86CBD4();
  if ((v41 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v41 < *(_QWORD *)(v40 + 16))
  {
    v82 = v37;
    v42 = *(_QWORD *)(v40 + 48 * v41 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v43 = sub_1BB86CBC8();
    if ((v43 & 0x8000000000000000) == 0)
    {
      if (v43 < *(_QWORD *)(v42 + 16))
      {
        v44 = (uint64_t)v82;
        sub_1BA4C2DD8(v42+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(_QWORD *)(v32 + 72) * v43, (uint64_t)v82, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
        swift_bridgeObjectRelease();
        sub_1BA4C2DD8(v44, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
        v45 = (char *)&loc_1BB2B85E4 + *((int *)qword_1BB2B9340 + swift_getEnumCaseMultiPayload());
        __asm { BR              X10 }
      }
LABEL_9:
      __break(1u);
      JUMPOUT(0x1BB2B9340);
    }
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __break(1u);
  goto LABEL_8;
}

uint64_t sub_1BB2B935C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  void (*v23)();
  uint64_t v24;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  _BYTE *v32;
  uint64_t (*v33)(uint64_t);
  _BYTE *v34;
  uint64_t v35;
  _BYTE v37[12];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t aBlock;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  void *v52;
  void (*v53)();
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;

  v41 = a4;
  v7 = sub_1BB872610();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x1E0C80A78](v7);
  v46 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v45 = sub_1BB872664();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v43 = &v37[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for DebugGroupLayoutKey();
  v40 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v40 + 64);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for GroupLayoutBindingContext();
  v42 = a2;
  v13 = swift_projectBox();
  v15 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v16 = a3 + *(int *)(v10 + 28);
  swift_beginAccess();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 48))(v56, v13, v16, v15, v14);
  v17 = MEMORY[0x1E0DEE9D8];
  swift_endAccess();
  v18 = v57;
  v19 = v58;
  __swift_project_boxed_opaque_existential_1(v56, v57);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 32))(&aBlock, v18, v19);
  v38 = aBlock;
  v20 = v50;
  v21 = v51;
  v22 = v52;
  v23 = v53;
  v24 = v55;
  v39 = v54;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v25 = (void *)sub_1BB87345C();
  v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BA4C2DD8(a3, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v27 = (*(unsigned __int8 *)(v40 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v28 = (v11 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = v26;
  sub_1BA5193C4((uint64_t)v12, v29 + v27, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  *(_QWORD *)(v29 + v28) = v42;
  v30 = v29 + ((v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)v30 = v38;
  *(_DWORD *)(v30 + 1) = v56[0];
  *(_DWORD *)(v30 + 4) = *(_DWORD *)((char *)v56 + 3);
  *(_QWORD *)(v30 + 8) = v20;
  *(_QWORD *)(v30 + 16) = v21;
  *(_QWORD *)(v30 + 24) = v22;
  *(_QWORD *)(v30 + 32) = v23;
  *(_QWORD *)(v30 + 40) = v39;
  *(_QWORD *)(v30 + 48) = v24;
  v53 = sub_1BB2BCB08;
  v54 = v29;
  aBlock = MEMORY[0x1E0C809B0];
  v50 = 1107296256;
  v51 = sub_1BA4F1DD8;
  v52 = &block_descriptor_40_0;
  v31 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v32 = v43;
  sub_1BB872634();
  aBlock = v17;
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, v33, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A5C((unint64_t *)&qword_1ED3B9320, (uint64_t)&qword_1ED3B9310, (uint64_t)v33, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
  v34 = v46;
  v35 = v48;
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v32, v34, v31);
  _Block_release(v31);

  (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v34, v35);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v44 + 8))(v32, v45);
}

void sub_1BB2B9830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  id v42;
  _QWORD v43[3];
  uint64_t v44;
  _UNKNOWN **v45;
  _BYTE v46[40];
  _BYTE v47[40];
  _BYTE v48[40];
  _BYTE v49[56];
  _BYTE v50[24];
  uint64_t v51;

  v7 = type metadata accessor for DebugInspectViewResult();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for GroupLayoutBindingContext();
  v13 = swift_projectBox();
  swift_beginAccess();
  v14 = MEMORY[0x1BCCE5D40](a1 + 16);
  if (v14)
  {
    v15 = (char *)v14;
    v42 = *(id *)(v14 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_cloudContext);
    v16 = *(_QWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_feedPersonalizer);
    sub_1BA4C2DD8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
    sub_1BA4C010C((uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_factory], (uint64_t)v50);
    sub_1BACD5F2C();
    v18 = &v9[*(int *)(v17 + 48)];
    swift_beginAccess();
    sub_1BA4C2DD8(v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    v19 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)v18 = *(_OWORD *)a4;
    *((_OWORD *)v18 + 1) = v19;
    *((_OWORD *)v18 + 2) = *(_OWORD *)(a4 + 32);
    *((_QWORD *)v18 + 6) = *(_QWORD *)(a4 + 48);
    swift_storeEnumTagMultiPayload();
    v20 = *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter];
    v41 = *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_commandCenter + 8];
    sub_1BACD457C((uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_inventory], (uint64_t)v49);
    sub_1BA4C010C((uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_headlineService], (uint64_t)v48);
    sub_1BA4C010C((uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tagService], (uint64_t)v47);
    sub_1BA4C010C((uint64_t)&v15[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_webEmbedDataSourceService], (uint64_t)v46);
    v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v50, v51);
    v40 = &v38;
    v22 = MEMORY[0x1E0C80A78](v21);
    v39 = v12;
    v24 = (uint64_t *)((char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
    v26 = *v24;
    v44 = type metadata accessor for DebugGroupLayoutViewFactory();
    v45 = &off_1E73356D0;
    v43[0] = v26;
    v27 = (char *)objc_allocWithZone((Class)type metadata accessor for DebugInspectViewController());
    v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
    v29 = MEMORY[0x1E0C80A78](v28);
    v31 = (uint64_t *)((char *)&v38 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v32 + 16))(v31, v29);
    v33 = *v31;
    v34 = v42;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    sub_1BA6A5B0C(a4);
    v35 = sub_1BB0B473C(v34, v16, (uint64_t)v39, v33, (uint64_t)v9, v20, v41, (uint64_t)v49, (uint64_t)v48, (uint64_t)v47, (uint64_t)v46, v27);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    v36 = objc_msgSend(v15, sel_navigationController);
    if (v36)
    {
      v37 = v36;
      objc_msgSend(v36, sel_pushViewController_animated_, v35, 1);

    }
  }
}

void sub_1BB2B9CA0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v9 = a5 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1BCCE5D40](v9);
  if (v10)
  {
    v11 = (char *)v10;
    v12 = *(id *)(v10 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView);
    v13 = (void *)sub_1BB86CB8C();
    v14 = objc_msgSend(v12, sel_cellForRowAtIndexPath_, v13);

    if (v14)
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
      objc_msgSend(v14, sel_setBackgroundColor_, v15);

    }
    v16 = *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    v19 = a7[3];
    v18 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v19);
    *(_QWORD *)(inited + 32) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v18 + 8) + 8))(v19);
    *(_QWORD *)(inited + 40) = v20;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v16 + 64) + 16))
    {
      v21 = *(_QWORD *)(inited + 32);
      v22 = *(_QWORD *)(inited + 40);
      swift_bridgeObjectRetain();
      sub_1BAC75A98(v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_setDeallocating();
    swift_arrayDestroy();
    a3(1);

  }
}

void sub_1BB2B9E90(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  void (*v25)(_QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v9 = a5 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1BCCE5D40](v9);
  if (v10)
  {
    v11 = (char *)v10;
    v12 = *(id *)(v10 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView);
    v13 = (void *)sub_1BB86CB8C();
    v14 = objc_msgSend(v12, sel_cellForRowAtIndexPath_, v13);

    if (v14)
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
      v16 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.1);

      objc_msgSend(v14, sel_setBackgroundColor_, v16);
    }
    v17 = *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    v20 = a7[3];
    v19 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v20);
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
    *(_QWORD *)(inited + 32) = v22(v20, v21);
    *(_QWORD *)(inited + 40) = v23;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v17 + 56) + 16))
    {
      v24 = v11;
      v25 = a3;
      v27 = *(_QWORD *)(inited + 32);
      v26 = *(_QWORD *)(inited + 40);
      swift_bridgeObjectRetain();
      v28 = v27;
      a3 = v25;
      v11 = v24;
      sub_1BAC75A98(v28, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_retain();
    v29 = v22(v20, v21);
    v31 = v30;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BA6EE5AC(&v32, v29, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    a3(1);

  }
}

void sub_1BB2BA170(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v9 = a5 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1BCCE5D40](v9);
  if (v10)
  {
    v11 = (char *)v10;
    v12 = *(id *)(v10 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView);
    v13 = (void *)sub_1BB86CB8C();
    v14 = objc_msgSend(v12, sel_cellForRowAtIndexPath_, v13);

    if (v14)
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemBackgroundColor);
      objc_msgSend(v14, sel_setBackgroundColor_, v15);

    }
    v16 = *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    v19 = a7[3];
    v18 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v19);
    *(_QWORD *)(inited + 32) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v18 + 8) + 8))(v19);
    *(_QWORD *)(inited + 40) = v20;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v16 + 56) + 16))
    {
      v21 = *(_QWORD *)(inited + 32);
      v22 = *(_QWORD *)(inited + 40);
      swift_bridgeObjectRetain();
      sub_1BAC75A98(v21, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_setDeallocating();
    swift_arrayDestroy();
    a3(1);

  }
}

void sub_1BB2BA360(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;

  v9 = a5 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1BCCE5D40](v9);
  if (v10)
  {
    v11 = (char *)v10;
    v30 = a3;
    v12 = *(id *)(v10 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView);
    v13 = (void *)sub_1BB86CB8C();
    v14 = objc_msgSend(v12, sel_cellForRowAtIndexPath_, v13);

    if (v14)
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
      v16 = objc_msgSend(v15, sel_colorWithAlphaComponent_, 0.1);

      objc_msgSend(v14, sel_setBackgroundColor_, v16);
    }
    v17 = OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource;
    v19 = a7[3];
    v18 = a7[4];
    __swift_project_boxed_opaque_existential_1(a7, v19);
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8);
    swift_retain();
    v22 = v21(v19, v20);
    v24 = v23;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BA6EE5AC(&v31, v22, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    v25 = *(_QWORD *)&v11[v17];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(inited + 32) = v21(v19, v20);
    *(_QWORD *)(inited + 40) = v27;
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v25 + 64) + 16))
    {
      v28 = *(_QWORD *)(inited + 32);
      v29 = *(_QWORD *)(inited + 40);
      swift_bridgeObjectRetain();
      sub_1BAC75A98(v28, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_setDeallocating();
    swift_arrayDestroy();
    v30(1);

  }
}

uint64_t type metadata accessor for KeyValueTableViewCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SubtitleTableViewCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RequirementTableViewCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeedItemTableViewCell()
{
  return objc_opt_self();
}

id sub_1BB2BA950(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  objc_class *ObjectType;
  id v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  if (a4)
  {
    sub_1BB8729A0();
    a4 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v11.receiver = a1;
  v11.super_class = ObjectType;
  v9 = objc_msgSendSuper2(&v11, sel_initWithStyle_reuseIdentifier_, a5, a4);

  return v9;
}

uint64_t type metadata accessor for LayoutTableViewCell()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LoadingTableViewCell()
{
  return objc_opt_self();
}

id sub_1BB2BAC34(void *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = objc_msgSend(a1, sel_searchBar);
  v3 = objc_msgSend(v2, sel_text);

  if (v3)
  {
    v4 = sub_1BB8729A0();
    v6 = v5;

    v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource);
    v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BB2BAFB8(v9, v4, v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *v8 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_tableView), sel_reloadData);
}

void sub_1BB2BADB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a2;
  v6 = type metadata accessor for DebugInspectViewItem();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v23 = (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - v10;
  v12 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v13 = 0;
    v20 = a3;
    v21 = a1;
    while (v13 < *(_QWORD *)(a1 + 16))
    {
      v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v15 = *(_QWORD *)(v7 + 72);
      sub_1BA4C2DD8(a1 + v14 + v15 * v13, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      v16 = sub_1BACD3AF4((uint64_t)v11, v24, a3);
      if (v3)
      {
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if ((v16 & 1) != 0)
      {
        sub_1BA5193C4((uint64_t)v11, v23, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BAC7AC60(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v25;
        v18 = *(_QWORD *)(v25 + 16);
        v17 = *(_QWORD *)(v25 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BAC7AC60(v17 > 1, v18 + 1, 1);
          v12 = v25;
        }
        *(_QWORD *)(v12 + 16) = v18 + 1;
        sub_1BA5193C4(v23, v12 + v14 + v18 * v15, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
        a3 = v20;
        a1 = v21;
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      }
      if (v22 == ++v13)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB2BAFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[18];

  v12[7] = a2;
  v12[8] = a3;
  v7 = sub_1BB86BE54();
  v12[5] = *(_QWORD *)(v7 - 8);
  v12[6] = v7;
  MEMORY[0x1E0C80A78](v7);
  v12[4] = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v12[9] = v4;
    v12[3] = a4 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_allScoredCandidatesSection;
    swift_bridgeObjectRetain();
    v12[1] = a1;
    v12[10] = "or";
    v12[11] = "candidateScoredItems";
    v12[2] = 0x80000001BB95DAA0;
    v9 = *(unsigned __int8 *)(a1 + 72);
    v10 = (char *)&loc_1BB2BB0C0 + 4 * byte_1BB901E90[v9];
    v12[17] = *(_QWORD *)(a1 + 48);
    v12[13] = v9;
    __asm { BR              X8 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB2BB3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

id sub_1BB2BB3FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  void *v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t aBlock;
  uint64_t v61;
  void (*v62)(uint64_t, void *, void *, void *);
  void *v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  __int128 v66[2];
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;

  v3 = sub_1BB86CBE0();
  v58 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v58 + 64);
  MEMORY[0x1E0C80A78](v3);
  v57 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DebugInspectViewItem();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (__int128 *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v55 - v10;
  v56 = v1;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource);
  v13 = (uint64_t *)(v12 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  v14 = *v13;
  swift_bridgeObjectRetain();
  v15 = sub_1BB86CBD4();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v15 >= *(_QWORD *)(v14 + 16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v55 = v3;
  v59 = v11;
  v16 = v14 + 48 * v15;
  v11 = *(char **)(v16 + 56);
  v17 = *(_QWORD *)(v16 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = sub_1BB86CBC8();
  if ((v18 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v18 >= *(_QWORD *)(v17 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v19 = (uint64_t)v59;
  sub_1BA4C2DD8(v17+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, (uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8(v19, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1BA4CECCC(v8, (uint64_t)v67);
    swift_beginAccess();
    v20 = *(_QWORD *)(v12 + 64);
    v21 = v68;
    v22 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    v23 = *(_QWORD *)(v22 + 8);
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
    swift_bridgeObjectRetain();
    v25 = v24(v21, v23);
    LOBYTE(v21) = sub_1BA761FE4(v25, v26, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v28 = v58;
    v29 = v57;
    v30 = a1;
    v31 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v30, v55);
    v32 = v4 + 7;
    if ((v21 & 1) != 0)
    {
      sub_1BA4C010C((uint64_t)v67, (uint64_t)v66);
      v33 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v34 = (v32 + v33) & 0xFFFFFFFFFFFFFFF8;
      v35 = swift_allocObject();
      *(_QWORD *)(v35 + 16) = v27;
      (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v35 + v33, v29, v31);
      sub_1BA4CECCC(v66, v35 + v34);
      swift_retain();
      v36 = (void *)sub_1BB872970();
      v64 = sub_1BB2BC55C;
      v65 = v35;
      aBlock = MEMORY[0x1E0C809B0];
      v61 = 1107296256;
      v62 = sub_1BB2B22A4;
      v63 = &block_descriptor_27_0;
      v37 = _Block_copy(&aBlock);
      v38 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v36, v37);

      _Block_release(v37);
      swift_release();
      swift_release();
      v39 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
      objc_msgSend(v38, sel_setBackgroundColor_, v39);

      v40 = (void *)sub_1BB872970();
      v41 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v40);

      objc_msgSend(v38, sel_setImage_, v41);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1BB8856E0;
      *(_QWORD *)(v42 + 32) = v38;
      aBlock = v42;
      sub_1BB872DCC();
      sub_1BA49A224(0, (unint64_t *)&unk_1EF2BDFC0);
      v43 = (char *)v38;
      v44 = (void *)sub_1BB872D9C();
      swift_bridgeObjectRelease();
      v45 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v44);
LABEL_11:
      v46 = v45;

      sub_1BA4A2E80((uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      return v46;
    }
    sub_1BA4C010C((uint64_t)v67, (uint64_t)v66);
    v47 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v48 = (v32 + v47) & 0xFFFFFFFFFFFFFFF8;
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v49 + v47, v29, v31);
    sub_1BA4CECCC(v66, v49 + v48);
    swift_retain();
    v50 = (void *)sub_1BB872970();
    v64 = sub_1BB2BC54C;
    v65 = v49;
    aBlock = MEMORY[0x1E0C809B0];
    v61 = 1107296256;
    v62 = sub_1BB2B22A4;
    v63 = &block_descriptor_20_0;
    v51 = _Block_copy(&aBlock);
    v11 = (char *)objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v50, v51);

    _Block_release(v51);
    swift_release();
    swift_release();
    v52 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
    objc_msgSend(v11, sel_setBackgroundColor_, v52);

    if (qword_1ED39E9E0 == -1)
    {
LABEL_10:
      objc_msgSend(v11, sel_setImage_, qword_1ED39D920);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_1BB8856E0;
      *(_QWORD *)(v53 + 32) = v11;
      aBlock = v53;
      sub_1BB872DCC();
      sub_1BA49A224(0, (unint64_t *)&unk_1EF2BDFC0);
      v43 = v11;
      v44 = (void *)sub_1BB872D9C();
      swift_bridgeObjectRelease();
      v45 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v44);
      goto LABEL_11;
    }
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  sub_1BA4A2E80(v19, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  return 0;
}

id sub_1BB2BBBD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  void *v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t aBlock;
  uint64_t v61;
  void (*v62)(uint64_t, void *, void *, void *);
  void *v63;
  uint64_t (*v64)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  __int128 v66[2];
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;

  v3 = sub_1BB86CBE0();
  v58 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v58 + 64);
  MEMORY[0x1E0C80A78](v3);
  v57 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DebugInspectViewItem();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (__int128 *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v55 - v10;
  v56 = v1;
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewController_dataSource);
  v13 = (uint64_t *)(v12 + OBJC_IVAR____TtC8NewsFeed26DebugInspectViewDataSource_sections);
  swift_beginAccess();
  v14 = *v13;
  swift_bridgeObjectRetain();
  v15 = sub_1BB86CBD4();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v15 >= *(_QWORD *)(v14 + 16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v55 = v3;
  v59 = v11;
  v16 = v14 + 48 * v15;
  v11 = *(char **)(v16 + 56);
  v17 = *(_QWORD *)(v16 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = sub_1BB86CBC8();
  if ((v18 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v18 >= *(_QWORD *)(v17 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v19 = (uint64_t)v59;
  sub_1BA4C2DD8(v17+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, (uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8(v19, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1BA4CECCC(v8, (uint64_t)v67);
    swift_beginAccess();
    v20 = *(_QWORD *)(v12 + 56);
    v21 = v68;
    v22 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    v23 = *(_QWORD *)(v22 + 8);
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
    swift_bridgeObjectRetain();
    v25 = v24(v21, v23);
    LOBYTE(v21) = sub_1BA761FE4(v25, v26, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v28 = v58;
    v29 = v57;
    v30 = a1;
    v31 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v30, v55);
    v32 = v4 + 7;
    if ((v21 & 1) != 0)
    {
      sub_1BA4C010C((uint64_t)v67, (uint64_t)v66);
      v33 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v34 = (v32 + v33) & 0xFFFFFFFFFFFFFFF8;
      v35 = swift_allocObject();
      *(_QWORD *)(v35 + 16) = v27;
      (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v35 + v33, v29, v31);
      sub_1BA4CECCC(v66, v35 + v34);
      swift_retain();
      v36 = (void *)sub_1BB872970();
      v64 = sub_1BB2BC518;
      v65 = v35;
      aBlock = MEMORY[0x1E0C809B0];
      v61 = 1107296256;
      v62 = sub_1BB2B22A4;
      v63 = &block_descriptor_10_3;
      v37 = _Block_copy(&aBlock);
      v38 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v36, v37);

      _Block_release(v37);
      swift_release();
      swift_release();
      v39 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
      objc_msgSend(v38, sel_setBackgroundColor_, v39);

      v40 = (void *)sub_1BB872970();
      v41 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v40);

      objc_msgSend(v38, sel_setImage_, v41);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1BB8856E0;
      *(_QWORD *)(v42 + 32) = v38;
      aBlock = v42;
      sub_1BB872DCC();
      sub_1BA49A224(0, (unint64_t *)&unk_1EF2BDFC0);
      v43 = (char *)v38;
      v44 = (void *)sub_1BB872D9C();
      swift_bridgeObjectRelease();
      v45 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v44);
LABEL_11:
      v46 = v45;

      sub_1BA4A2E80((uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      return v46;
    }
    sub_1BA4C010C((uint64_t)v67, (uint64_t)v66);
    v47 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v48 = (v32 + v47) & 0xFFFFFFFFFFFFFFF8;
    v49 = swift_allocObject();
    *(_QWORD *)(v49 + 16) = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v49 + v47, v29, v31);
    sub_1BA4CECCC(v66, v49 + v48);
    swift_retain();
    v50 = (void *)sub_1BB872970();
    v64 = sub_1BB2BC508;
    v65 = v49;
    aBlock = MEMORY[0x1E0C809B0];
    v61 = 1107296256;
    v62 = sub_1BB2B22A4;
    v63 = &block_descriptor_60;
    v51 = _Block_copy(&aBlock);
    v11 = (char *)objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v50, v51);

    _Block_release(v51);
    swift_release();
    swift_release();
    v52 = objc_msgSend((id)objc_opt_self(), sel_systemGreenColor);
    objc_msgSend(v11, sel_setBackgroundColor_, v52);

    if (qword_1ED39E9F0 == -1)
    {
LABEL_10:
      objc_msgSend(v11, sel_setImage_, qword_1ED39BD80);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_1BB8856E0;
      *(_QWORD *)(v53 + 32) = v11;
      aBlock = v53;
      sub_1BB872DCC();
      sub_1BA49A224(0, (unint64_t *)&unk_1EF2BDFC0);
      v43 = v11;
      v44 = (void *)sub_1BB872D9C();
      swift_bridgeObjectRelease();
      v45 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v44);
      goto LABEL_11;
    }
LABEL_17:
    swift_once();
    goto LABEL_10;
  }
  sub_1BA4A2E80(v19, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugInspectViewItem);
  return 0;
}

char *sub_1BB2BC3AC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  id v7;
  char *v8;
  void *v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  objc_super v15;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OBJC_IVAR____TtC8NewsFeed20LoadingTableViewCell_activityIndicatorView;
  v7 = objc_allocWithZone(MEMORY[0x1E0DC3438]);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  if (a2)
  {
    v9 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v15.receiver = v8;
  v15.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v15, sel_initWithStyle_reuseIdentifier_, 3, v9);

  v11 = (char *)v10;
  v12 = objc_msgSend(v11, sel_contentView);
  v13 = *(id *)&v11[OBJC_IVAR____TtC8NewsFeed20LoadingTableViewCell_activityIndicatorView];
  objc_msgSend(v12, sel_addSubview_, v13);

  return v11;
}

uint64_t sub_1BB2BC4E0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB2BC508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2BC568(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, unint64_t))sub_1BB2BA360);
}

uint64_t sub_1BB2BC518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2BC568(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, unint64_t))sub_1BB2BA170);
}

uint64_t sub_1BB2BC524()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BB2BC54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2BC568(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, unint64_t))sub_1BB2B9E90);
}

uint64_t sub_1BB2BC55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2BC568(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, unint64_t))sub_1BB2B9CA0);
}

uint64_t sub_1BB2BC568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, unint64_t, unint64_t))
{
  uint64_t v5;
  uint64_t v10;
  unint64_t v11;

  v10 = *(_QWORD *)(sub_1BB86CBE0() - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return a5(a1, a2, a3, a4, *(_QWORD *)(v5 + 16), v5 + v11, v5 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1BB2BC5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1EF2AFF58, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC548], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB2BC650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1EF2AFF58, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC548], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB2BC6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = type metadata accessor for DebugGroupLayoutKey();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v3 + 16);
  v5 = v0 + v3 + *(int *)(v1 + 24);
  __swift_destroy_boxed_opaque_existential_1(v5 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  v7 = sub_1BB86D8A0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 28);
  v9 = sub_1BB86D7A4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = type metadata accessor for GroupLayoutContext();
  v11 = v8 + *(int *)(v10 + 20);
  v12 = sub_1BB86D660();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = v8 + *(int *)(v10 + 24);
  if (*(_QWORD *)(v13 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v14 = v13 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v15 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v16 = sub_1BB8705C4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BB2BC8AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1BB2B935C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB2BC8F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = type metadata accessor for DebugGroupLayoutKey();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 16);
  v3 = v0 + v2 + *(int *)(v1 + 24);
  __swift_destroy_boxed_opaque_existential_1(v3 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  v5 = sub_1BB86D8A0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v0 + v2 + *(int *)(v1 + 28);
  v7 = sub_1BB86D7A4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = v6 + *(int *)(v8 + 20);
  v10 = sub_1BB86D660();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v6 + *(int *)(v8 + 24);
  if (*(_QWORD *)(v11 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v12 = v11 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v13 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v14 = sub_1BB8705C4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB2BCB08()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BB2B9830(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));
}

void sub_1BB2BCB5C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB2B7D10(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24));
}

uint64_t sub_1BB2BCB68()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BB2BCB8C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BACD20A4(a1, v1 + 16);
}

uint64_t sub_1BB2BCBA4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB2BCBC8@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BACD2328(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BB2BCBE0()
{
  return objectdestroy_54Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB2BCBEC(void **a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BACD2720(a1, a2, (_QWORD *)(v2 + 16), *(uint64_t (**)(id))(v2 + 56));
}

uint64_t sub_1BB2BCC08(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2B7A08(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t objectdestroy_45Tm_0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void sub_1BB2BCC54(uint64_t a1)
{
  uint64_t v1;

  sub_1BB2B7B9C(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24));
}

uint64_t sub_1BB2BCC60()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB2BCC84()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB2BCCB8(void *a1)
{
  uint64_t v1;

  return sub_1BACD1F40(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24), *(void (**)(id))(v1 + 64));
}

uint64_t sub_1BB2BCCC8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BB2BCD44()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1BB3F5C54();
  swift_release();
  return v0;
}

void sub_1BB2BCD98(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BB2B3314(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_1BB2BCDB0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB2BCDDC()
{
  return objectdestroy_54Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

unint64_t sub_1BB2BCDE8()
{
  unint64_t result;

  result = qword_1EF2CD0A0;
  if (!qword_1EF2CD0A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9065BC, &type metadata for DebugInspection);
    atomic_store(result, (unint64_t *)&qword_1EF2CD0A0);
  }
  return result;
}

uint64_t sub_1BB2BCE2C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB2BCE90()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB2BCEE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t result;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t *v45;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  ValueMetadata *v70;
  unint64_t v71;

  v62 = a3;
  v54 = sub_1BB86C8E0();
  v5 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for GroupLayoutContext();
  v59 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v61 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for GroupLayoutBindingContext();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x1E0C80A78](v10);
  v55 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v49 - v13;
  v15 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v58 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v49 - v19;
  v60 = v8;
  v21 = *(int *)(v8 + 24);
  v22 = a2;
  v23 = a2 + v21;
  v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  sub_1BB2BECAC(v23 + *(int *)(v24 + 36), (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1BB2BED08((uint64_t)v14);
    sub_1BB2BED5C();
    swift_allocError();
    *v25 = 1;
    return swift_willThrow();
  }
  sub_1BA5193C4((uint64_t)v14, (uint64_t)v20, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
  v27 = sub_1BB3E0464(0, 0, 0, 0, 0);
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    v47 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v47)
      goto LABEL_5;
  }
  else if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    v28 = v55;
    sub_1BA4C2DD8(a1, v55, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    v52 = v22;
    v29 = v22;
    v30 = v61;
    sub_1BA4C2DD8(v29, v61, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BB86C8D4();
    v53 = v27;
    v51 = sub_1BB86C8C8();
    v50 = v31;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v54);
    v70 = &type metadata for PluginGroupLayoutFactory;
    v32 = sub_1BA8EDD64();
    v71 = v32;
    type metadata accessor for GroupLayoutKey();
    v33 = swift_allocObject();
    v67 = sub_1BB874734();
    v68 = v34;
    v65 = 95;
    v66 = 0xE100000000000000;
    v63 = 45;
    v64 = 0xE100000000000000;
    sub_1BA7114A0();
    v35 = sub_1BB873B04();
    v37 = v36;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v33 + 16) = v35;
    *(_QWORD *)(v33 + 24) = v37;
    v38 = (uint64_t *)(v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v39 = v50;
    *v38 = v51;
    v38[1] = v39;
    sub_1BA4C010C((uint64_t)&v69, v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    v40 = v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BA5193C4(v28, v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v40, 0, 1, v57);
    v41 = v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    v42 = v30;
    sub_1BA5193C4(v30, v33 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v41, 0, 1, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
    v43 = v58;
    sub_1BA4C2DD8((uint64_t)v20, v58, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA4C2DD8(v52, v42, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v70 = &type metadata for PluginGroupLayoutFactory;
    v71 = v32;
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    v44 = (int *)type metadata accessor for PluginGroupLayoutFactory.Bound(0);
    v45 = v62;
    v62[3] = (uint64_t)v44;
    v45[4] = sub_1BA4A2870(&qword_1ED3AD7D8, type metadata accessor for PluginGroupLayoutFactory.Bound, (uint64_t)&unk_1BB902410);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v45);
    *boxed_opaque_existential_0 = v53;
    sub_1BA5193C4(v43, (uint64_t)boxed_opaque_existential_0 + v44[5], type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA5193C4(v42, (uint64_t)boxed_opaque_existential_0 + v44[6], (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    result = sub_1BA4CECCC(&v69, (uint64_t)boxed_opaque_existential_0 + v44[7]);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + v44[8]) = v33;
    return result;
  }
  swift_bridgeObjectRelease();
  sub_1BB2BED5C();
  swift_allocError();
  *v48 = 0;
  swift_willThrow();
  return sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
}

double sub_1BB2BD470@<D0>(uint64_t a1@<X8>)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  _QWORD v19[2];
  double v20[3];
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];
  unint64_t *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v24 = v2;
  swift_bridgeObjectRetain();
  v9 = sub_1BA8A319C((void (*)(uint64_t *))sub_1BB2C0214, (uint64_t)v23, v8);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6208], v4);
  v22 = v9;
  sub_1BB2C0394(0, &qword_1ED3AD1A0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v10 = sub_1BB86DB34();
  type metadata accessor for PluginGroupLayoutFactory.Bound(0);
  v21 = v10;
  v11 = sub_1BB86DB40();
  v19[1] = v19;
  *(_OWORD *)v20 = v26;
  v12 = v27;
  v13 = v28;
  v25 = v29;
  *(_QWORD *)&v26 = v9;
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1BA4B07F0(0, &qword_1ED3AE478, type metadata accessor for PluginLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4B07F0(0, &qword_1ED39DA18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, v14);
  sub_1BA547334((unint64_t *)&unk_1ED3AE480, &qword_1ED3AE478, type metadata accessor for PluginLayout.Context);
  sub_1BA547334(&qword_1ED3AB108, &qword_1ED39DA18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect);
  swift_bridgeObjectRetain();
  v15 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v26 = v15;
  sub_1BB2C0284();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9360, (uint64_t (*)(uint64_t))sub_1BB2C0284, MEMORY[0x1E0DEAF38]);
  sub_1BA6B39A0();
  v16 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)a1 = 0;
  result = v20[0];
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v20;
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v13;
  v18 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v16;
  *(_QWORD *)(a1 + 48) = v18;
  return result;
}

uint64_t sub_1BB2BD784@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v6 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB8706D8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v14 = type metadata accessor for PluginGroupLayoutFactory.Bound(0);
  sub_1BA4C2DD8(a2 + *(int *)(v14 + 20), (uint64_t)v8, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
  sub_1BB86F5BC();
  v15 = sub_1BB8705C4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v8, v15);
  *(_QWORD *)a3 = v13;
  v16 = type metadata accessor for PluginLayout.Context(0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&a3[*(int *)(v16 + 20)], v12, v9);
  return swift_retain();
}

uint64_t sub_1BB2BD8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1ED3AD1A8, (uint64_t (*)(void))sub_1BB2C0238, (uint64_t)&type metadata for PluginLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = &v12[-v8];
  v14 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v6 + 104))(&v12[-v8], *MEMORY[0x1E0DB63C0], v5, v7);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BB2C0394(0, &qword_1ED3AD198, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB2C0344(&qword_1ED3AD190, &qword_1ED3AD198, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
}

void sub_1BB2BD9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, _QWORD *);
  uint64_t v29;
  _QWORD v30[2];
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;

  sub_1BA4CDF6C(0, &qword_1ED3AD1A8, (uint64_t (*)(void))sub_1BB2C0238, (uint64_t)&type metadata for PluginLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v30 - v7;
  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = type metadata accessor for PluginLayout.Context(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = a2 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v33 = *(_QWORD *)(v11 + 72);
    v34 = v10;
    v32 = *MEMORY[0x1E0DB5FA0];
    v31 = *MEMORY[0x1E0DB63D0];
    v30[1] = a2;
    swift_bridgeObjectRetain();
    v35 = a1;
    v13 = v32;
    do
    {
      v38 = v9;
      v39 = a1;
      KeyPath = swift_getKeyPath();
      sub_1BA71C838();
      v15 = v14;
      v36 = swift_allocBox();
      v17 = v16;
      v18 = (uint64_t *)((char *)v16 + *(int *)(v15 + 48));
      v19 = swift_allocObject();
      sub_1BB8706CC();
      *(_QWORD *)(v19 + 16) = v20;
      *v17 = v19;
      v21 = sub_1BB86D894();
      v22 = (uint64_t *)v8;
      v23 = v6;
      v24 = v5;
      v25 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104);
      v25(v17, v13, v21);
      v26 = swift_allocObject();
      sub_1BB8706CC();
      *(_QWORD *)(v26 + 16) = v27;
      *v18 = v26;
      v25(v18, v13, v21);
      v5 = v24;
      v6 = v23;
      v8 = (char *)v22;
      *v22 = v36;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v22, v31, v5);
      v28 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
      sub_1BB2C0394(0, &qword_1ED3AD188, MEMORY[0x1E0DB5A10]);
      sub_1BB2C0344(&qword_1ED3AD180, &qword_1ED3AD188, v28, MEMORY[0x1E0DB5A18]);
      sub_1BA4A2870(&qword_1ED39C2E0, (uint64_t (*)(uint64_t))sub_1BB04F4A4, MEMORY[0x1E0DB5EB8]);
      v29 = v38;
      sub_1BB86D4E0();
      a1 = v35;
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v12 += v33;
      v9 = v29 - 1;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BB2BDCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD *v24;

  v9 = *a3;
  v10 = a3[1];
  v11 = a3[2];
  v12 = a3[3];
  sub_1BB2C02D8();
  v14 = v13;
  v15 = swift_allocBox();
  v17 = v16;
  v18 = *(int *)(v14 + 48);
  sub_1BA4C2DD8(a2, v16, type metadata accessor for PluginLayout.Context);
  v19 = a4 + *(int *)(type metadata accessor for PluginGroupLayoutFactory.Bound(0) + 24);
  result = type metadata accessor for GroupLayoutContext();
  v21 = *(_QWORD *)(v19 + *(int *)(result + 28));
  v22 = __OFADD__(a1, v21);
  v23 = a1 + v21;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    v24 = (_QWORD *)(v17 + v18);
    *v24 = v9;
    v24[1] = v10;
    v24[2] = v11;
    v24[3] = v12;
    v24[4] = v23;
    *a5 = v15 | 0xA000000000000000;
  }
  return result;
}

uint64_t sub_1BB2BDD78()
{
  unint64_t *v0;

  return sub_1BA974E4C(*v0);
}

uint64_t sub_1BB2BDD80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BA4C010C(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1BB2BDD94(uint64_t a1)
{
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + *(int *)(a1 + 28)), *(_QWORD *)(v1 + *(int *)(a1 + 28) + 24));
  return sub_1BB86DEE8();
}

void sub_1BB2BDDD0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 6;
}

uint64_t sub_1BB2BDDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB2BCEE8(a1, a2, a3);
}

uint64_t PluginLayout.frame.getter()
{
  return swift_retain();
}

uint64_t PluginLayout.pluginFrames.getter()
{
  return swift_retain();
}

uint64_t PluginLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA62D7D8(0, (unint64_t *)&qword_1ED3B0628, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  swift_allocObject();
  v2 = sub_1BB86D450();
  sub_1BB04F4A4(0);
  swift_allocObject();
  result = sub_1BB86D7C8();
  *a1 = v2;
  a1[1] = result;
  return result;
}

double PluginLayout.Attributes.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t PluginLayout.Attributes.pluginFrames.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2BDEAC()
{
  _BYTE *v0;

  if (*v0)
    return 0x72466E6967756C70;
  else
    return 0x656D617266;
}

uint64_t sub_1BB2BDEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2BEDB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2BDF10()
{
  sub_1BB2BE120();
  return sub_1BB874710();
}

uint64_t sub_1BB2BDF38()
{
  sub_1BB2BE120();
  return sub_1BB87471C();
}

uint64_t PluginLayout.Attributes.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  sub_1BA4CDF6C(0, &qword_1EF2C0548, (uint64_t (*)(void))sub_1BB2BE120, (uint64_t)&type metadata for PluginLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - v7;
  v14 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v10 = *((_QWORD *)v1 + 3);
  v13 = *((_QWORD *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2BE120();
  sub_1BB8746C8();
  v15 = v14;
  v16 = v9;
  v17 = v10;
  v18 = 0;
  type metadata accessor for CGRect(0);
  sub_1BB2BE164();
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v15 = v13;
    v18 = 1;
    sub_1BA4B07F0(0, &qword_1ED39DA18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB2BE398(&qword_1EF2B9C60, sub_1BB2BE164, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BB2BE120()
{
  unint64_t result;

  result = qword_1ED3AD430;
  if (!qword_1ED3AD430)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9022D4, &type metadata for PluginLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AD430);
  }
  return result;
}

uint64_t sub_1BB2BE164()
{
  return sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
}

uint64_t PluginLayout.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3AE6A8, (uint64_t (*)(void))sub_1BB2BE120, (uint64_t)&type metadata for PluginLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2BE120();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v6;
    v10 = v18;
    type metadata accessor for CGRect(0);
    v23 = 0;
    sub_1BB2BE37C();
    sub_1BB8740D4();
    v11 = v19;
    v12 = v20;
    v13 = v21;
    v14 = v22;
    sub_1BA4B07F0(0, &qword_1ED39DA18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v23 = 1;
    sub_1BB2BE398((unint64_t *)&unk_1ED39DA20, sub_1BB2BE37C, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    v16 = v19;
    *v10 = v11;
    v10[1] = v12;
    v10[2] = v13;
    v10[3] = v14;
    v10[4] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB2BE37C()
{
  return sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
}

uint64_t sub_1BB2BE398(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4B07F0(255, &qword_1ED39DA18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB2BE414@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return PluginLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1BB2BE428(_QWORD *a1)
{
  return PluginLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1BB2BE43C()
{
  sub_1BB2BEEB4();
  return sub_1BB86D96C();
}

uint64_t PluginLayout.Context.model.getter()
{
  return swift_retain();
}

uint64_t PluginLayout.Context.layoutTransition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PluginLayout.Context(0) + 20);
  v4 = sub_1BB8706D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for PluginLayout.Context(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3D2508);
}

uint64_t PluginLayout.Metadata.visualRank.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

unint64_t sub_1BB2BE514()
{
  unint64_t result;

  result = qword_1ED3AD450;
  if (!qword_1ED3AD450)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PluginLayout.Attributes, &type metadata for PluginLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3AD450);
  }
  return result;
}

unint64_t sub_1BB2BE55C()
{
  unint64_t result;

  result = qword_1ED3AD468;
  if (!qword_1ED3AD468)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PluginLayout.Attributes, &type metadata for PluginLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3AD468);
  }
  return result;
}

unint64_t sub_1BB2BE5A4()
{
  unint64_t result;

  result = qword_1ED3AD460;
  if (!qword_1ED3AD460)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PluginLayout.Attributes, &type metadata for PluginLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3AD460);
  }
  return result;
}

unint64_t sub_1BB2BE5EC()
{
  unint64_t result;

  result = qword_1ED3AD448;
  if (!qword_1ED3AD448)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PluginLayout.Attributes, &type metadata for PluginLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3AD448);
  }
  return result;
}

uint64_t sub_1BB2BE630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA62D7D8(0, (unint64_t *)&qword_1ED3B0628, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  swift_allocObject();
  v2 = sub_1BB86D450();
  sub_1BB04F4A4(0);
  swift_allocObject();
  result = sub_1BB86D7C8();
  *a1 = v2;
  a1[1] = result;
  return result;
}

ValueMetadata *type metadata accessor for PluginLayout()
{
  return &type metadata for PluginLayout;
}

ValueMetadata *type metadata accessor for PluginLayout.Attributes()
{
  return &type metadata for PluginLayout.Attributes;
}

uint64_t *initializeBufferWithCopyOfBuffer for PluginLayout.Context(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB8706D8();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for PluginLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB8706D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for PluginLayout.Context(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB8706D8();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for PluginLayout.Context(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB8706D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *initializeWithTake for PluginLayout.Context(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB8706D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for PluginLayout.Context(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB8706D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginLayout.Context()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2BE978(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB8706D8();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PluginLayout.Context()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB2BEA00(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB8706D8();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB2BEA74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB8706D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginLayout.Metadata()
{
  return &type metadata for PluginLayout.Metadata;
}

ValueMetadata *type metadata accessor for PluginLayout.Attributes.CodingKeys()
{
  return &type metadata for PluginLayout.Attributes.CodingKeys;
}

ValueMetadata *type metadata accessor for PluginGroupLayoutFactory()
{
  return &type metadata for PluginGroupLayoutFactory;
}

unint64_t sub_1BB2BEB24()
{
  unint64_t result;

  result = qword_1EF2C0550;
  if (!qword_1EF2C0550)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9022AC, &type metadata for PluginLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0550);
  }
  return result;
}

unint64_t sub_1BB2BEB6C()
{
  unint64_t result;

  result = qword_1ED3AD440;
  if (!qword_1ED3AD440)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90221C, &type metadata for PluginLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AD440);
  }
  return result;
}

unint64_t sub_1BB2BEBB4()
{
  unint64_t result;

  result = qword_1ED3AD438;
  if (!qword_1ED3AD438)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902244, &type metadata for PluginLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AD438);
  }
  return result;
}

unint64_t sub_1BB2BEBF8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB2BEC24();
  result = sub_1BB2BEC68();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB2BEC24()
{
  unint64_t result;

  result = qword_1ED3AD7F8;
  if (!qword_1ED3AD7F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9021CC, &type metadata for PluginGroupLayoutFactory);
    atomic_store(result, (unint64_t *)&qword_1ED3AD7F8);
  }
  return result;
}

unint64_t sub_1BB2BEC68()
{
  unint64_t result;

  result = qword_1ED3AD7F0;
  if (!qword_1ED3AD7F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9021F4, &type metadata for PluginGroupLayoutFactory);
    atomic_store(result, (unint64_t *)&qword_1ED3AD7F0);
  }
  return result;
}

uint64_t sub_1BB2BECAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB2BED08(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BB2BED5C()
{
  unint64_t result;

  result = qword_1EF2C0558;
  if (!qword_1EF2C0558)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90242C, &type metadata for PluginGroupLayoutFactory.PluginGroupLayoutFactoryError);
    atomic_store(result, (unint64_t *)&qword_1EF2C0558);
  }
  return result;
}

uint64_t type metadata accessor for PluginGroupLayoutFactory.Bound(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3AD7E0);
}

uint64_t sub_1BB2BEDB4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72466E6967756C70 && a2 == 0xEC00000073656D61)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BB2BEEB4()
{
  unint64_t result;

  result = qword_1ED3AD458;
  if (!qword_1ED3AD458)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PluginLayout.Attributes, &type metadata for PluginLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3AD458);
  }
  return result;
}

_QWORD *sub_1BB2BEEF8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int128 v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *__dst;
  uint64_t v42;
  _QWORD *v43;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB8705C4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v39 = v12;
    v40 = v11;
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v7 + v13;
    v43 = a2;
    v15 = (char *)a2 + v13;
    v16 = sub_1BB86D7A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = (int *)type metadata accessor for GroupLayoutContext();
    v18 = v17[5];
    v19 = &v14[v18];
    v20 = &v15[v18];
    v21 = sub_1BB86D660();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = v17[6];
    v23 = &v14[v22];
    v24 = &v15[v22];
    *(_OWORD *)v23 = *(_OWORD *)&v15[v22];
    v23[16] = v15[v22 + 16];
    *(_WORD *)(v23 + 17) = *(_WORD *)&v15[v22 + 17];
    v23[19] = v15[v22 + 19];
    *((_DWORD *)v23 + 5) = *(_DWORD *)&v15[v22 + 20];
    v25 = *(_QWORD *)&v15[v22 + 24];
    if (v25 >= 2)
      v25 = swift_bridgeObjectRetain();
    *((_QWORD *)v23 + 3) = v25;
    v26 = type metadata accessor for FeedLayoutSolverOptions(0);
    v27 = *(int *)(v26 + 36);
    __dst = &v23[v27];
    v42 = v26;
    v28 = &v24[v27];
    v29 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v39(__dst, v28, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
    }
    *(_QWORD *)&v23[*(int *)(v42 + 40)] = *(_QWORD *)&v24[*(int *)(v42 + 40)];
    *(_QWORD *)&v14[v17[7]] = *(_QWORD *)&v15[v17[7]];
    *(_QWORD *)&v14[v17[8]] = *(_QWORD *)&v15[v17[8]];
    v14[v17[9]] = v15[v17[9]];
    *(_QWORD *)&v14[v17[10]] = *(_QWORD *)&v15[v17[10]];
    v14[v17[11]] = v15[v17[11]];
    *(_QWORD *)&v14[v17[12]] = *(_QWORD *)&v15[v17[12]];
    v32 = a3[7];
    v33 = (char *)v7 + v32;
    v34 = (char *)v43 + v32;
    v35 = *(_OWORD *)((char *)v43 + v32 + 24);
    *(_OWORD *)((char *)v7 + v32 + 24) = v35;
    v36 = v35;
    v37 = **(void (***)(char *, char *, uint64_t))(v35 - 8);
    swift_retain();
    swift_retain();
    v37(v33, v34, v36);
    *(_QWORD *)((char *)v7 + a3[8]) = *(_QWORD *)((char *)v43 + a3[8]);
  }
  swift_retain();
  return v7;
}

uint64_t sub_1BB2BF1B4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BB8705C4();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = a1 + a2[6];
  v8 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = type metadata accessor for GroupLayoutContext();
  v10 = v7 + *(int *)(v9 + 20);
  v11 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v7 + *(int *)(v9 + 24);
  if (*(_QWORD *)(v12 + 24) >= 2uLL)
    swift_bridgeObjectRelease();
  v13 = v12 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  v14 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    v6(v13, v5);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[7]);
  return swift_release();
}

_QWORD *sub_1BB2BF2F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB8705C4();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v38 = v10;
  v39 = v9;
  v10(v7, v8, v9);
  v40 = a3;
  v41 = a2;
  v11 = *(int *)(a3 + 24);
  v42 = a1;
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = (int *)type metadata accessor for GroupLayoutContext();
  v16 = v15[5];
  v17 = &v12[v16];
  v18 = &v13[v16];
  v19 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = v15[6];
  v21 = &v12[v20];
  v22 = &v13[v20];
  *(_OWORD *)v21 = *(_OWORD *)&v13[v20];
  v21[16] = v13[v20 + 16];
  *(_WORD *)(v21 + 17) = *(_WORD *)&v13[v20 + 17];
  v21[19] = v13[v20 + 19];
  *((_DWORD *)v21 + 5) = *(_DWORD *)&v13[v20 + 20];
  v23 = *(_QWORD *)&v13[v20 + 24];
  if (v23 >= 2)
    v23 = swift_bridgeObjectRetain();
  *((_QWORD *)v21 + 3) = v23;
  v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  v25 = *(int *)(v24 + 36);
  v26 = &v21[v25];
  v27 = &v22[v25];
  v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v38(v26, v27, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  *(_QWORD *)&v21[*(int *)(v24 + 40)] = *(_QWORD *)&v22[*(int *)(v24 + 40)];
  *(_QWORD *)&v12[v15[7]] = *(_QWORD *)&v13[v15[7]];
  *(_QWORD *)&v12[v15[8]] = *(_QWORD *)&v13[v15[8]];
  v12[v15[9]] = v13[v15[9]];
  *(_QWORD *)&v12[v15[10]] = *(_QWORD *)&v13[v15[10]];
  v12[v15[11]] = v13[v15[11]];
  *(_QWORD *)&v12[v15[12]] = *(_QWORD *)&v13[v15[12]];
  v31 = *(int *)(v40 + 28);
  v32 = (char *)v42 + v31;
  v33 = (char *)v41 + v31;
  v34 = *(_OWORD *)((char *)v41 + v31 + 24);
  *(_OWORD *)((char *)v42 + v31 + 24) = v34;
  v35 = v34;
  v36 = **(void (***)(char *, char *, uint64_t))(v34 - 8);
  swift_retain();
  swift_retain();
  v36(v32, v33, v35);
  *(_QWORD *)((char *)v42 + *(int *)(v40 + 32)) = *(_QWORD *)((char *)v41 + *(int *)(v40 + 32));
  swift_retain();
  return v42;
}

_QWORD *sub_1BB2BF584(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  __int128 v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  size_t v33;
  void *v34;
  uint64_t v35;
  void (*v37)(char *, char *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB8705C4();
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  v37 = *(void (**)(char *, char *))(v38 + 24);
  v37(v7, v8);
  v42 = a3;
  v43 = a2;
  v10 = *(int *)(a3 + 24);
  v44 = a1;
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = (int *)type metadata accessor for GroupLayoutContext();
  v15 = v14[5];
  v16 = &v11[v15];
  v17 = &v12[v15];
  v18 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  v19 = v14[6];
  v20 = &v11[v19];
  v21 = &v12[v19];
  v22 = *(_OWORD *)&v12[v19];
  v20[16] = v12[v19 + 16];
  *(_OWORD *)v20 = v22;
  v20[17] = v12[v19 + 17];
  v20[18] = v12[v19 + 18];
  v20[19] = v12[v19 + 19];
  v20[20] = v12[v19 + 20];
  v20[21] = v12[v19 + 21];
  v20[22] = v12[v19 + 22];
  v20[23] = v12[v19 + 23];
  v23 = (unint64_t *)&v11[v19 + 24];
  v24 = *(_QWORD *)&v12[v19 + 24];
  if (*v23 >= 2)
  {
    if (v24 >= 2)
    {
      *v23 = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(v20 + 24), (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v23 = *((_QWORD *)v21 + 3);
    }
  }
  else
  {
    *v23 = v24;
    if (v24 >= 2)
      swift_bridgeObjectRetain();
  }
  v41 = type metadata accessor for FeedLayoutSolverOptions(0);
  v25 = *(int *)(v41 + 36);
  v26 = (uint64_t)&v20[v25];
  v27 = &v21[v25];
  v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  v40 = v26;
  LODWORD(v26) = v30(v26, 1, v28);
  v31 = v30((uint64_t)v27, 1, v28);
  if ((_DWORD)v26)
  {
    if (!v31)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v40, v27, v39);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v29 + 56))(v40, 0, 1, v28);
      goto LABEL_16;
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v33 = *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64);
    v34 = (void *)v40;
  }
  else
  {
    if (!v31)
    {
      ((void (*)(uint64_t, char *, uint64_t))v37)(v40, v27, v39);
      goto LABEL_16;
    }
    sub_1BA4A2E80(v40, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v33 = *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64);
    v34 = (void *)v40;
  }
  memcpy(v34, v27, v33);
LABEL_16:
  *(_QWORD *)&v20[*(int *)(v41 + 40)] = *(_QWORD *)&v21[*(int *)(v41 + 40)];
  *(_QWORD *)&v11[v14[7]] = *(_QWORD *)&v12[v14[7]];
  *(_QWORD *)&v11[v14[8]] = *(_QWORD *)&v12[v14[8]];
  v11[v14[9]] = v12[v14[9]];
  *(_QWORD *)&v11[v14[10]] = *(_QWORD *)&v12[v14[10]];
  swift_retain();
  swift_release();
  v11[v14[11]] = v12[v14[11]];
  *(_QWORD *)&v11[v14[12]] = *(_QWORD *)&v12[v14[12]];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)v44 + *(int *)(v42 + 28)), (_QWORD *)((char *)v43 + *(int *)(v42 + 28)));
  *(_QWORD *)((char *)v44 + *(int *)(v42 + 32)) = *(_QWORD *)((char *)v43 + *(int *)(v42 + 32));
  swift_retain();
  swift_release();
  return v44;
}

_QWORD *sub_1BB2BF910(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  __int128 v32;
  void (*v34)(char *, char *);
  uint64_t v35;
  char *__dst;
  uint64_t v37;
  _QWORD *v38;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB8705C4();
  v34 = *(void (**)(char *, char *))(*(_QWORD *)(v9 - 8) + 32);
  v35 = v9;
  v34(v7, v8);
  v37 = a3;
  v38 = a2;
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = (int *)type metadata accessor for GroupLayoutContext();
  v15 = v14[5];
  v16 = &v11[v15];
  v17 = &v12[v15];
  v18 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = v14[6];
  v20 = &v11[v19];
  v21 = &v12[v19];
  *(_OWORD *)v20 = *(_OWORD *)&v12[v19];
  v20[16] = v12[v19 + 16];
  *(_WORD *)(v20 + 17) = *(_WORD *)&v12[v19 + 17];
  v20[19] = v12[v19 + 19];
  *((_DWORD *)v20 + 5) = *(_DWORD *)&v12[v19 + 20];
  *((_QWORD *)v20 + 3) = *(_QWORD *)&v12[v19 + 24];
  v22 = type metadata accessor for FeedLayoutSolverOptions(0);
  v23 = *(int *)(v22 + 36);
  __dst = &v20[v23];
  v24 = &v21[v23];
  v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v34)(__dst, v24, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
  }
  *(_QWORD *)&v20[*(int *)(v22 + 40)] = *(_QWORD *)&v21[*(int *)(v22 + 40)];
  *(_QWORD *)&v11[v14[7]] = *(_QWORD *)&v12[v14[7]];
  *(_QWORD *)&v11[v14[8]] = *(_QWORD *)&v12[v14[8]];
  v11[v14[9]] = v12[v14[9]];
  *(_QWORD *)&v11[v14[10]] = *(_QWORD *)&v12[v14[10]];
  v11[v14[11]] = v12[v14[11]];
  *(_QWORD *)&v11[v14[12]] = *(_QWORD *)&v12[v14[12]];
  v28 = *(int *)(v37 + 28);
  v29 = *(int *)(v37 + 32);
  v30 = (char *)a1 + v28;
  v31 = (char *)v38 + v28;
  v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
  *((_QWORD *)v30 + 4) = *((_QWORD *)v31 + 4);
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)v38 + v29);
  return a1;
}

_QWORD *sub_1BB2BFB68(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  size_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  __int128 v38;
  void (*v40)(char *, char *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB8705C4();
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  v40 = *(void (**)(char *, char *))(v41 + 40);
  v40(v7, v8);
  v45 = a3;
  v46 = a2;
  v10 = *(int *)(a3 + 24);
  v47 = a1;
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BB86D7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = (int *)type metadata accessor for GroupLayoutContext();
  v15 = v14[5];
  v16 = &v11[v15];
  v17 = &v12[v15];
  v18 = sub_1BB86D660();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = v14[6];
  v20 = &v11[v19];
  v21 = &v12[v19];
  *(_OWORD *)v20 = *(_OWORD *)&v12[v19];
  v20[16] = v12[v19 + 16];
  v20[17] = v12[v19 + 17];
  v20[18] = v12[v19 + 18];
  v20[19] = v12[v19 + 19];
  v20[20] = v12[v19 + 20];
  v20[21] = v12[v19 + 21];
  v20[22] = v12[v19 + 22];
  v20[23] = v12[v19 + 23];
  v22 = (unint64_t *)&v11[v19 + 24];
  v23 = *(_QWORD *)&v12[v19 + 24];
  if (*v22 < 2)
    goto LABEL_4;
  if (v23 < 2)
  {
    sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v23 = *((_QWORD *)v21 + 3);
LABEL_4:
    *v22 = v23;
    goto LABEL_6;
  }
  *v22 = v23;
  swift_bridgeObjectRelease();
LABEL_6:
  v44 = type metadata accessor for FeedLayoutSolverOptions(0);
  v24 = *(int *)(v44 + 36);
  v25 = (uint64_t)&v20[v24];
  v26 = &v21[v24];
  v27 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  v43 = v25;
  LODWORD(v25) = v29(v25, 1, v27);
  v30 = v29((uint64_t)v26, 1, v27);
  if ((_DWORD)v25)
  {
    if (!v30)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v43, v26, v42);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v43, 0, 1, v27);
      goto LABEL_14;
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v32 = *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64);
    v33 = (void *)v43;
  }
  else
  {
    if (!v30)
    {
      ((void (*)(uint64_t, char *, uint64_t))v40)(v43, v26, v42);
      goto LABEL_14;
    }
    sub_1BA4A2E80(v43, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D24E0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v32 = *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64);
    v33 = (void *)v43;
  }
  memcpy(v33, v26, v32);
LABEL_14:
  *(_QWORD *)&v20[*(int *)(v44 + 40)] = *(_QWORD *)&v21[*(int *)(v44 + 40)];
  *(_QWORD *)&v11[v14[7]] = *(_QWORD *)&v12[v14[7]];
  *(_QWORD *)&v11[v14[8]] = *(_QWORD *)&v12[v14[8]];
  v11[v14[9]] = v12[v14[9]];
  *(_QWORD *)&v11[v14[10]] = *(_QWORD *)&v12[v14[10]];
  swift_release();
  v11[v14[11]] = v12[v14[11]];
  *(_QWORD *)&v11[v14[12]] = *(_QWORD *)&v12[v14[12]];
  swift_release();
  v35 = *(int *)(v45 + 28);
  v36 = (char *)v47 + v35;
  v37 = (char *)v46 + v35;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47 + v35);
  v38 = *((_OWORD *)v37 + 1);
  *(_OWORD *)v36 = *(_OWORD *)v37;
  *((_OWORD *)v36 + 1) = v38;
  *((_QWORD *)v36 + 4) = *((_QWORD *)v37 + 4);
  *(_QWORD *)((char *)v47 + *(int *)(v45 + 32)) = *(_QWORD *)((char *)v46 + *(int *)(v45 + 32));
  swift_release();
  return v47;
}

uint64_t sub_1BB2BFEC4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2BFED0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for GroupLayoutContext();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1BB2BFF70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB2BFF7C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for GroupLayoutContext();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_1BB2C0018()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BB8705C4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for GroupLayoutContext();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t _s8NewsFeed12PluginLayoutV10AttributesV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB2C0110 + 4 * byte_1BB902035[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB2C0144 + 4 * byte_1BB902030[v4]))();
}

uint64_t sub_1BB2C0144(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2C014C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2C0154);
  return result;
}

uint64_t sub_1BB2C0160(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2C0168);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB2C016C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2C0174(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PluginGroupLayoutFactory.PluginGroupLayoutFactoryError()
{
  return &type metadata for PluginGroupLayoutFactory.PluginGroupLayoutFactoryError;
}

unint64_t sub_1BB2C0194()
{
  unint64_t result;

  result = qword_1EF2C0560;
  if (!qword_1EF2C0560)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9023C0, &type metadata for PluginGroupLayoutFactory.PluginGroupLayoutFactoryError);
    atomic_store(result, (unint64_t *)&qword_1EF2C0560);
  }
  return result;
}

uint64_t sub_1BB2C01D8(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1ED3AD7D0, type metadata accessor for PluginGroupLayoutFactory.Bound, (uint64_t)&unk_1BB9023E8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB2C0214@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB2BD784(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB2C0230(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2BD8C0(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BB2C0238()
{
  unint64_t result;

  result = qword_1ED3AD478;
  if (!qword_1ED3AD478)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PluginLayout, &type metadata for PluginLayout);
    atomic_store(result, (unint64_t *)&qword_1ED3AD478);
  }
  return result;
}

uint64_t sub_1BB2C027C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB2BDCAC(a1, a2, a3, *(_QWORD *)(v4 + 16), a4);
}

void sub_1BB2C0284()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B9350)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B9350);
  }
}

void sub_1BB2C02D8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AD470)
  {
    type metadata accessor for PluginLayout.Context(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AD470);
  }
}

void sub_1BB2C033C(uint64_t a1)
{
  uint64_t v1;

  sub_1BB2BD9F8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB2C0344(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB2C0394(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB2C0384()
{
  return swift_deallocObject();
}

void sub_1BB2C0394(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for PluginLayout;
    v8[1] = &type metadata for PluginLayout.Attributes;
    v8[2] = sub_1BB2C0238();
    v8[3] = sub_1BB2BEEB4();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

NewsFeed::FormatArticleStoryType_optional __swiftcall FormatArticleStoryType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatArticleStoryType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FormatArticleStoryType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2C0498 + 4 * byte_1BB902490[*v0]))(0x6C616D726F6ELL, 0xE600000000000000);
}

uint64_t sub_1BB2C0498()
{
  return 0x79726F7453706F74;
}

uint64_t sub_1BB2C04B0()
{
  return 0x676E696B61657262;
}

uint64_t sub_1BB2C04C8()
{
  return 0x69706F6C65766564;
}

uint64_t sub_1BB2C04E4()
{
  return 0x64657461647075;
}

uint64_t sub_1BB2C04FC()
{
  return 0x6C61636F6CLL;
}

unint64_t sub_1BB2C0514()
{
  unint64_t result;

  result = qword_1EF2C0568;
  if (!qword_1EF2C0568)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArticleStoryType, &type metadata for FormatArticleStoryType);
    atomic_store(result, (unint64_t *)&qword_1EF2C0568);
  }
  return result;
}

void sub_1BB2C0558()
{
  char *v0;

  sub_1BA8D4020(*v0);
}

void sub_1BB2C0560()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB2C0598()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB2C0624(uint64_t a1)
{
  char *v1;

  sub_1BAB090DC(a1, *v1);
}

NewsFeed::FormatArticleStoryType_optional sub_1BB2C062C(Swift::String *a1)
{
  return FormatArticleStoryType.init(rawValue:)(*a1);
}

uint64_t sub_1BB2C0638()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB2C0664 + 4 * byte_1BB90249C[*v0]))();
}

void sub_1BB2C0664(_QWORD *a1@<X8>)
{
  *a1 = 0x79726F7453706F74;
  a1[1] = 0xE800000000000000;
}

void sub_1BB2C0680(_QWORD *a1@<X8>)
{
  *a1 = 0x676E696B61657262;
  a1[1] = 0xE800000000000000;
}

void sub_1BB2C069C(_QWORD *a1@<X8>)
{
  *a1 = 0x69706F6C65766564;
  a1[1] = 0xEA0000000000676ELL;
}

void sub_1BB2C06BC(_QWORD *a1@<X8>)
{
  *a1 = 0x64657461647075;
  a1[1] = 0xE700000000000000;
}

void sub_1BB2C06D8(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61636F6CLL;
  a1[1] = 0xE500000000000000;
}

unint64_t sub_1BB2C06F0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA62A32C();
  a1[2] = sub_1BA523718();
  result = sub_1BB2C0514();
  a1[3] = result;
  return result;
}

void sub_1BB2C0724(char *a1)
{
  sub_1BB7F8268(*a1);
}

uint64_t sub_1BB2C0730()
{
  sub_1BB2C07E8();
  return sub_1BB872D60();
}

uint64_t sub_1BB2C078C()
{
  sub_1BB2C07E8();
  return sub_1BB872D0C();
}

ValueMetadata *type metadata accessor for FormatArticleStoryType()
{
  return &type metadata for FormatArticleStoryType;
}

unint64_t sub_1BB2C07E8()
{
  unint64_t result;

  result = qword_1ED3C9C88;
  if (!qword_1ED3C9C88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArticleStoryType, &type metadata for FormatArticleStoryType);
    atomic_store(result, (unint64_t *)&qword_1ED3C9C88);
  }
  return result;
}

uint64_t FCSportsLeagueType.description.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x69737365666F7270;
  switch(a1)
  {
    case 1:
      return result;
    case 2:
      result = 0x6567656C6C6F63;
      break;
    case 3:
      result = 0x6C616E6F6974616ELL;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1BB2C08B4()
{
  _QWORD *v0;
  uint64_t result;

  result = 0x69737365666F7270;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      result = 0x6567656C6C6F63;
      break;
    case 3:
      result = 0x6C616E6F6974616ELL;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t FormatColorAndExpression.bind(binder:context:)()
{
  uint64_t v0;
  uint64_t result;

  swift_retain();
  FormatColorExpression.bindChildren(binder:context:)();
  result = swift_release();
  if (!v0)
  {
    swift_retain();
    FormatColorExpression.bindChildren(binder:context:)();
    return swift_release();
  }
  return result;
}

uint64_t FormatColorAndExpression.lhsExpression.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatColorAndExpression.rhsExpression.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1BB2C0A04()
{
  return FormatColorAndExpression.bindChildren(binder:context:)();
}

uint64_t sub_1BB2C0A34(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v10;
  char v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 9);
  v6 = *(_QWORD *)(a2 + 80);
  v18 = *v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v7 = *(_OWORD *)(a2 + 32);
  v13 = *(_OWORD *)(a2 + 16);
  v14 = v7;
  v8 = *(_OWORD *)(a2 + 64);
  v15 = *(_OWORD *)(a2 + 48);
  v16 = v8;
  v17 = v6;
  return sub_1BAC58D88(a1, &v10);
}

uint64_t _s8NewsFeed24FormatColorAndExpressionV2eeoiySbAC_ACtFZ_0(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v5;

  v1 = a1[1];
  v5 = *a1;
  static FormatColorExpression.== infix(_:_:)((uint64_t)&v5);
  if ((v2 & 1) != 0)
  {
    v5 = v1;
    static FormatColorExpression.== infix(_:_:)((uint64_t)&v5);
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

unint64_t sub_1BB2C0AF8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2C0B1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2C0B1C()
{
  unint64_t result;

  result = qword_1EF2C0570;
  if (!qword_1EF2C0570)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorAndExpression, &type metadata for FormatColorAndExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C0570);
  }
  return result;
}

unint64_t sub_1BB2C0B60(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA58EFC0();
  a1[2] = sub_1BA5887CC();
  result = sub_1BB2C0B94();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2C0B94()
{
  unint64_t result;

  result = qword_1EF2C0578;
  if (!qword_1EF2C0578)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorAndExpression, &type metadata for FormatColorAndExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2C0578);
  }
  return result;
}

uint64_t destroy for FormatColorAndExpression()
{
  swift_release();
  return swift_release();
}

_QWORD *_s8NewsFeed24FormatColorAndExpressionVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FormatColorAndExpression(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FormatColorAndExpression(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatColorAndExpression()
{
  return &type metadata for FormatColorAndExpression;
}

uint64_t FormatGroupCollection.columns.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain_n();
  v2 = sub_1BA85DEDC(v1);
  swift_bridgeObjectRelease();
  v4 = v2;
  sub_1BA766EFC((uint64_t *)&v4);
  swift_bridgeObjectRelease();
  return (uint64_t)v4;
}

uint64_t FormatGroupCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      v11 = *(_QWORD *)(v5 + 56);
      sub_1BA7B06D8(0);
      v13 = v12;
      v14 = *(_QWORD *)(v12 - 8);
      sub_1BA7B0658(v11 + *(_QWORD *)(v14 + 72) * v10, a3);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
    }
    else
    {
      sub_1BA7B06D8(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA7B06D8(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
}

uint64_t FormatGroupCollection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA7B0CB8(0, (unint64_t *)&qword_1ED3B9420, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA51DF80(&qword_1ED39BE60, &qword_1ED39B170, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatGroupCollection.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

NewsFeed::FormatGroupCollection __swiftcall FormatGroupCollection.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  unint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  NewsFeed::FormatGroupCollection result;

  v1 = v0;
  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = sub_1BA5BC54C(MEMORY[0x1E0DEE9D8]);
  v4 = (void *)sub_1BA8F50B4(v2);
  *v1 = v2;
  v1[1] = v4;
  v1[2] = v3;
  result.groupsByIdentifier._rawValue = v6;
  result.groupsByColumn._rawValue = v5;
  result.groups._rawValue = v4;
  return result;
}

unint64_t sub_1BB2C0FAC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t result;

  v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v3 = sub_1BA5BC54C(MEMORY[0x1E0DEE9D8]);
  result = sub_1BA8F50B4(v2);
  *a1 = v2;
  a1[1] = result;
  a1[2] = v3;
  return result;
}

void sub_1BB2C0FF4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  _OWORD v5[5];
  uint64_t v6;

  v3 = *(_OWORD *)(a2 + 48);
  v5[2] = *(_OWORD *)(a2 + 32);
  v5[3] = v3;
  v5[4] = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v4;
  sub_1BB568FB0(a1, (uint64_t)v5, *v2);
}

ValueMetadata *type metadata accessor for FormatGroupCollection()
{
  return &type metadata for FormatGroupCollection;
}

ValueMetadata *type metadata accessor for G_V1()
{
  return &type metadata for G_V1;
}

uint64_t sub_1BB2C1058(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C06C0, (uint64_t (*)(void))sub_1BB2C3530, (uint64_t)&type metadata for G_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2C3530();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA916364(&qword_1EF2AA7D8, (uint64_t (*)(void))sub_1BA9163E0, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 40);
    v13 = 2;
    sub_1BA4B07F0(0, &qword_1ED39DA18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BB04FAFC(&qword_1EF2B9C60, &qword_1EF2A9A18, MEMORY[0x1E0C9B9C0], MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB2C1294()
{
  sub_1BB2C3530();
  return sub_1BB874710();
}

uint64_t sub_1BB2C12BC()
{
  sub_1BB2C3530();
  return sub_1BB87471C();
}

double sub_1BB2C12E4@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_1BB2C3244(a1, v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1BB2C1324(_QWORD *a1)
{
  return sub_1BB2C1058(a1);
}

uint64_t sub_1BB2C1338()
{
  sub_1BB2C2E44();
  return sub_1BB86D96C();
}

uint64_t sub_1BB2C13A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  void *v14;
  unsigned __int8 v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[8];
  void *v52;
  unsigned __int8 v53;
  ValueMetadata *v54;
  unint64_t v55;

  v42 = a2;
  v43 = a1;
  v44 = a3;
  v37 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for GroupLayoutBindingContext();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v35 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v3;
  v38 = *v3;
  v14 = (void *)*((_QWORD *)v3 + 1);
  v15 = v3[16];
  sub_1BA4C2DD8(a1, v35, v16);
  sub_1BA4C2DD8(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  sub_1BB86C8D4();
  v17 = sub_1BB86C8C8();
  v34 = v18;
  (*(void (**)(char *, unint64_t))(v6 + 8))(v8, v37);
  v54 = &type metadata for G_V1;
  v37 = sub_1BA8EDF40();
  v55 = v37;
  v51[0] = v13;
  v52 = v14;
  v53 = v15;
  type metadata accessor for GroupLayoutKey();
  v19 = swift_allocObject();
  sub_1BA7C26A0(v14, v15);
  v49 = sub_1BB874734();
  v50 = v20;
  v47 = 95;
  v48 = 0xE100000000000000;
  v45 = 45;
  v46 = 0xE100000000000000;
  sub_1BA7114A0();
  v21 = sub_1BB873B04();
  v23 = v22;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v19 + 16) = v21;
  *(_QWORD *)(v19 + 24) = v23;
  v24 = (uint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v25 = v34;
  *v24 = v17;
  v24[1] = v25;
  sub_1BA4C010C((uint64_t)v51, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v26 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v35, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v26, 0, 1, v39);
  v27 = v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v11, v19 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v27, 0, 1, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  sub_1BA7C2538(v14, v15);
  v28 = type metadata accessor for G_V1.Bound();
  v29 = v44;
  v44[3] = v28;
  v29[4] = sub_1BA4A2870(qword_1EF2C0590, (uint64_t (*)(uint64_t))type metadata accessor for G_V1.Bound, (uint64_t)&unk_1BB9028B0);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v29);
  v31 = v37;
  boxed_opaque_existential_0[4] = (uint64_t)&type metadata for G_V1;
  boxed_opaque_existential_0[5] = v31;
  *((_BYTE *)boxed_opaque_existential_0 + 8) = v38;
  boxed_opaque_existential_0[2] = (uint64_t)v14;
  *((_BYTE *)boxed_opaque_existential_0 + 24) = v15;
  sub_1BA4C2DD8(v42, (uint64_t)boxed_opaque_existential_0 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v14, v15);
  result = sub_1BB3E0828(0, 0, 0, 0, 0);
  *boxed_opaque_existential_0 = v19;
  *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v28 + 28)) = result;
  return result;
}

uint64_t sub_1BB2C1738@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[16];
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v2 = v1;
  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for G_V1.Bound();
  v9 = *(_QWORD *)(v2 + *(int *)(v8 + 28));
  v29 = v2;
  swift_bridgeObjectRetain();
  v10 = sub_1BA8A1F94((void (*)(_QWORD *__return_ptr, _OWORD *))sub_1BB2C2DD8, (uint64_t)v28, v9);
  swift_bridgeObjectRelease();
  v11 = v2 + *(int *)(v8 + 24);
  v12 = *(_QWORD *)(v11 + *(int *)(type metadata accessor for GroupLayoutContext() + 24) + 24);
  v13 = *MEMORY[0x1E0DB5D88];
  v14 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v25 = v10;
  v26 = v2;
  v27 = v12;
  sub_1BB2C3088(0, &qword_1EF2C0638, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v24 = sub_1BB86DB34();
  v15 = sub_1BB86DB40();
  v22[1] = v22;
  v35 = v32;
  v36 = v33;
  v34 = v31;
  v23 = v31;
  v16 = v32;
  v37 = v33;
  v30 = v33;
  *(_QWORD *)&v31 = v10;
  MEMORY[0x1E0C80A78](v15);
  v17 = MEMORY[0x1E0DEAEC8];
  sub_1BA4AD288(0, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))v17);
  sub_1BA6B5A14(&qword_1ED39D9E0, &qword_1ED39D9D8, (uint64_t)&type metadata for CoverIssueViewLayout.Context);
  sub_1BA6B5A14(&qword_1ED39D9C8, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes);
  swift_bridgeObjectRetain();
  v18 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v31 = v18;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6B5A14((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350, (uint64_t)&type metadata for FeedItemLayoutAttributes);
  sub_1BA6B39A0();
  v19 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  sub_1BA4F6CCC((uint64_t)&v37);
  *(_BYTE *)a1 = 0;
  *(_OWORD *)(a1 + 8) = v23;
  *(_OWORD *)(a1 + 24) = v16;
  v20 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v19;
  *(_QWORD *)(a1 + 48) = v20;
  *(_QWORD *)&v31 = *((_QWORD *)&v36 + 1);
  sub_1BA4F6CCC((uint64_t)&v31);
  return swift_release();
}

uint64_t sub_1BB2C1AFC@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t inited;
  __int128 v21[2];
  __int128 v22[2];
  uint64_t v23[5];
  _BYTE v24[10];
  __int128 v25[7];
  _OWORD v26[2];
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];
  _OWORD v34[9];

  v5 = a1[5];
  v6 = a1[7];
  v32 = a1[6];
  v33[0] = v6;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)a1 + 121);
  v7 = a1[1];
  v8 = a1[3];
  v28 = a1[2];
  v29 = v8;
  v9 = a1[3];
  v10 = a1[5];
  v30 = a1[4];
  v31 = v10;
  v11 = a1[1];
  v27[0] = *a1;
  v27[1] = v11;
  v12 = a1[7];
  v25[6] = v32;
  v26[0] = v12;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 121);
  v25[2] = v28;
  v25[3] = v9;
  v25[4] = v30;
  v25[5] = v5;
  v13 = *a2;
  v25[0] = v27[0];
  v25[1] = v7;
  sub_1BA90EFB8(v34);
  sub_1BB04F360((uint64_t)v34, (uint64_t)v24, (uint64_t)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4AD288);
  v14 = (char *)a2 + *(int *)(type metadata accessor for G_V1.Bound() + 24);
  v15 = type metadata accessor for GroupLayoutContext();
  v16 = *(_QWORD *)(*(_QWORD *)&v14[*(int *)(v15 + 40)] + 16);
  v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BA4C010C(v16 + 16, (uint64_t)v22);
  sub_1BA4C010C(v16 + 56, (uint64_t)v21);
  v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v22, inited + 16);
  sub_1BA4CECCC(v21, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_retain();
  sub_1BA8D1F08((uint64_t)v27);
  FeedLayoutStylerFactory.styler()(v23);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, v25, (uint64_t)v24, (uint64_t)v23, a3);
}

uint64_t sub_1BB2C1CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void);
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1BA4CDF6C(0, &qword_1EF2C0650, (uint64_t (*)(void))sub_1BB2C2E00, (uint64_t)&type metadata for G_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = &v21[-v12];
  v25 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v10 + 104))(&v21[-v12], *MEMORY[0x1E0DB6410], v9, v11);
  sub_1BB2C2FB8();
  sub_1BA4CDF6C(0, &qword_1EF2C0660, (uint64_t (*)(void))sub_1BB2C2E00, (uint64_t)&type metadata for G_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BB87CE70;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E0DB5C80], v15);
  v22 = a2;
  v23 = a3;
  v24 = a4;
  v19 = MEMORY[0x1E0DB5DD0];
  sub_1BB2C3088(0, &qword_1EF2C0668, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB2C3038(&qword_1EF2C0670, &qword_1EF2C0668, (uint64_t (*)(uint64_t, _QWORD *))v19, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_1BB2C1E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t *, _QWORD, uint64_t);
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD, uint64_t);
  uint64_t (*v60)(uint64_t, _QWORD *);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  void (*v68)(uint64_t *, uint64_t, uint64_t);
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, _QWORD, uint64_t);
  uint64_t v77;
  uint64_t result;
  unint64_t v79;
  uint64_t v80;
  _QWORD v81[2];
  __int128 v82;
  unsigned int v83;
  unsigned int v84;
  unint64_t v85;
  _QWORD *v86;
  uint64_t *v87;
  uint64_t v88;
  __int128 v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  uint64_t *v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int v109;
  uint64_t v110;
  void (*KeyPath)(uint64_t, _QWORD, uint64_t);
  unint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t *, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD v121[51];
  uint64_t v122;
  uint64_t v123;

  v101 = a3;
  v102 = a4;
  v117 = a1;
  sub_1BA4CDF6C(0, &qword_1EF2C0650, (uint64_t (*)(void))sub_1BB2C2E00, (uint64_t)&type metadata for G_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v114 = *(_QWORD *)(v5 - 8);
  v115 = v5;
  MEMORY[0x1E0C80A78](v5);
  v113 = (_QWORD *)((char *)v81 - v6);
  v7 = sub_1BB86DA38();
  v99 = *(_QWORD *)(v7 - 8);
  v100 = v7;
  MEMORY[0x1E0C80A78](v7);
  v98 = (char *)v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a2 + 16);
  v87 = &v120;
  v88 = a2 + 32;
  v86 = &v121[1];
  v96 = &v123;
  v10 = *MEMORY[0x1E0DB6208];
  v94 = *MEMORY[0x1E0DB5FA0];
  v95 = v10;
  v11 = *MEMORY[0x1E0DB5FB8];
  v92 = *MEMORY[0x1E0DB63D0];
  v93 = v11;
  v12 = *MEMORY[0x1E0DB5C30];
  v90 = *MEMORY[0x1E0DB5C68];
  v91 = v12;
  v85 = v9 - 1;
  v109 = *MEMORY[0x1E0DB63E8];
  v84 = *MEMORY[0x1E0DB5BA8];
  v83 = *MEMORY[0x1E0DB5B90];
  v81[1] = a2;
  swift_bridgeObjectRetain();
  v13 = 0;
  v89 = xmmword_1BB87CE70;
  v82 = xmmword_1BB87A390;
  v97 = v9;
  while (1)
  {
    if (v13 == v9)
    {
      v19 = v9;
      memset(v121, 0, 400);
      goto LABEL_8;
    }
    if (v13 >= v9)
      break;
    v20 = v87;
    sub_1BA915B28(v88 + 392 * v13, (uint64_t)v87);
    v121[0] = v13;
    memcpy(v86, v20, 0x188uLL);
    v19 = v13 + 1;
LABEL_8:
    sub_1BB04F360((uint64_t)v121, (uint64_t)&v122, (uint64_t)&unk_1EF2B9C00, (uint64_t)sub_1BB04F3B8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BA4B07F0);
    if (!v123)
      return swift_bridgeObjectRelease();
    v21 = v122;
    memcpy(v121, v96, 0x188uLL);
    v22 = v101 + *(int *)(type metadata accessor for G_V1.Bound() + 24);
    v112 = v19;
    v108 = v22;
    v110 = v21;
    if ((v121[7] & 0x10) == 0)
    {
      sub_1BB86D6FC();
      if (v23 > 703.0)
      {
        if (v23 >= 703.0 && v23 <= 818.0)
        {
          v24 = 0x4067200000000000;
          goto LABEL_19;
        }
        if (v23 < 818.0 || v23 > 1111.0)
        {
          if (v23 < 1111.0)
            v28 = 140.0;
          else
            v28 = 220.0;
        }
        else
        {
          v24 = 0x4069000000000000;
LABEL_19:
          v28 = *(double *)&v24;
        }
        v33 = type metadata accessor for GroupLayoutContext();
        v34 = *(_QWORD *)(*(_QWORD *)(v22 + *(int *)(v33 + 40)) + 24);
        v35 = MEMORY[0x1E0C80A78](v33);
        v79 = (unint64_t)v121;
        v80 = v34;
        (*(void (**)(char *, _QWORD, uint64_t, double))(v99 + 104))(v98, v95, v100, v35);
        sub_1BA915C74();
        swift_allocObject();
        swift_retain();
        goto LABEL_21;
      }
      v24 = 0x4061800000000000;
      goto LABEL_19;
    }
    v25 = (void *)sub_1BB86D738();
    v26 = objc_msgSend(v25, sel_userInterfaceIdiom);

    if ((unint64_t)v26 + 1 > 6)
      goto LABEL_39;
    if (((1 << (v26 + 1)) & 0x1B) != 0)
    {
      v27 = 0x4061800000000000;
    }
    else if (v26 == (id)1)
    {
      v27 = 0x4069000000000000;
    }
    else
    {
      if (v26 != (id)5)
        goto LABEL_39;
      v27 = 0x406B800000000000;
    }
    v28 = *(double *)&v27;
    v29 = type metadata accessor for GroupLayoutContext();
    v30 = *(_QWORD *)(*(_QWORD *)(v22 + *(int *)(v29 + 40)) + 24);
    v31 = MEMORY[0x1E0C80A78](v29);
    v81[-4] = v121;
    v81[-3] = v30;
    v79 = v32;
    (*(void (**)(char *, _QWORD, uint64_t, double))(v99 + 104))(v98, v95, v100, v31);
    sub_1BA915C74();
    swift_allocObject();
    swift_retain();
LABEL_21:
    v118 = sub_1BB86DB34();
    swift_release();
    v119 = v117;
    KeyPath = (void (*)(uint64_t, _QWORD, uint64_t))swift_getKeyPath();
    sub_1BA71C838();
    v37 = v36;
    v38 = swift_allocBox();
    v40 = v39;
    v41 = (char *)v39 + *(int *)(v37 + 48);
    v42 = swift_allocObject();
    *(double *)(v42 + 16) = v28;
    *v40 = v42;
    v43 = sub_1BB86D894();
    v44 = *(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104);
    v44(v40, v94, v43);
    v44((uint64_t *)v41, v93, v43);
    v46 = v113;
    v45 = v114;
    *v113 = v38;
    v47 = v115;
    v116 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v45 + 104);
    v116(v46, v92, v115);
    sub_1BB2C2FB8();
    v49 = v48;
    sub_1BA4CDF6C(0, &qword_1EF2C0660, (uint64_t (*)(void))sub_1BB2C2E00, (uint64_t)&type metadata for G_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v51 = v50;
    v52 = *(_QWORD *)(v50 - 8);
    v53 = *(_QWORD *)(v52 + 72);
    v54 = *(unsigned __int8 *)(v52 + 80);
    v55 = (v54 + 32) & ~v54;
    v105 = v49;
    v106 = v53;
    v103 = v54 | 7;
    v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v89;
    v104 = v55;
    v57 = v56 + v55;
    sub_1BA4CDF6C(0, &qword_1EF2C0678, (uint64_t (*)(void))sub_1BB2C2E00, (uint64_t)&type metadata for G_V1.Layout, MEMORY[0x1E0DB5C60]);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v58 - 8) + 104))(v57, v91, v58);
    v59 = *(void (**)(uint64_t, _QWORD, uint64_t))(v52 + 104);
    v107 = v51;
    v59(v57, v90, v51);
    v60 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB2C3088(0, &qword_1EF2C0680, MEMORY[0x1E0DB5A10]);
    v62 = v61;
    sub_1BB2C3038(&qword_1EF2C0688, &qword_1EF2C0680, v60, MEMORY[0x1E0DB5A18]);
    v79 = sub_1BA915DF0();
    sub_1BB86D4C8();
    swift_release();
    swift_bridgeObjectRelease();
    v63 = *(void (**)(uint64_t *, uint64_t))(v114 + 8);
    v63(v46, v47);
    if (!v102)
      goto LABEL_2;
    if (v102 == 1)
    {
      if (v110 == v85)
        goto LABEL_2;
    }
    else if (!sub_1BA79296C(v110, v102))
    {
LABEL_2:
      v14 = v117;
      v119 = v117;
      swift_getKeyPath();
      sub_1BB2C2E00();
      v15 = v113;
      sub_1BB86DB70();
      sub_1BA4A2870(&qword_1ED39C2E0, (uint64_t (*)(uint64_t))sub_1BB04F4A4, MEMORY[0x1E0DB5EB8]);
      sub_1BB86D4E0();
      swift_release();
      v16 = v115;
      v63(v15, v115);
      v119 = v14;
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = 0x403E000000000000;
      *v15 = v17;
      v116(v15, v109, v16);
      sub_1BB86D4EC();
      swift_release();
      v18 = v15;
      goto LABEL_3;
    }
    v119 = v117;
    v64 = v117;
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = 0x4034000000000000;
    KeyPath = v59;
    v66 = v113;
    *v113 = v65;
    v67 = v109;
    v16 = v115;
    v68 = v116;
    v116(v66, v109, v115);
    sub_1BB86D4EC();
    v63(v66, v16);
    v119 = v64;
    v110 = swift_getKeyPath();
    v69 = swift_allocObject();
    sub_1BB86D774();
    *(double *)(v69 + 16) = 1.0 / v70;
    *v66 = v69;
    v68(v66, v67, v16);
    v71 = v106;
    v72 = v104;
    v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = v82;
    v74 = v73 + v72;
    sub_1BB86D9A8();
    v75 = v107;
    v108 = v62;
    v76 = KeyPath;
    KeyPath(v74, v84, v107);
    v76(v74 + v71, v83, v75);
    sub_1BA4A2870(&qword_1ED39C2E0, (uint64_t (*)(uint64_t))sub_1BB04F4A4, MEMORY[0x1E0DB5EB8]);
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    v63(v66, v16);
    v119 = v117;
    v77 = swift_allocObject();
    *(_QWORD *)(v77 + 16) = 0x4034000000000000;
    *v66 = v77;
    v116(v66, v109, v16);
    sub_1BB86D4EC();
    swift_release();
    v18 = v66;
LABEL_3:
    v63(v18, v16);
    sub_1BA915C30((uint64_t)v121);
    v9 = v97;
    v13 = v112;
  }
  __break(1u);
LABEL_39:
  LODWORD(v80) = 0;
  v79 = 53;
  result = sub_1BB873EAC();
  __break(1u);
  return result;
}

uint64_t sub_1BB2C2968@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD *v25;

  v12 = swift_allocObject();
  v13 = swift_allocObject();
  sub_1BA915B28(a2, v13 + 16);
  memcpy((void *)(v13 + 408), a3, 0x180uLL);
  v14 = a4 + *(int *)(type metadata accessor for G_V1.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v16 = *(_QWORD *)(v14 + *(int *)(result + 28));
  v17 = __OFADD__(v16, a1);
  v18 = v16 + a1;
  if (v17)
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)(v13 + 792) = v18;
  *(_QWORD *)(v12 + 16) = v13 | 0x5000000000000000;
  sub_1BA4B07F0(0, &qword_1ED3B9D10, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedItemSupplementaryAttributes() - 8) + 80);
  v20 = (v19 + 32) & ~v19;
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1BB87CE70;
  if ((a1 & 0x8000000000000000) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v21 = *(_QWORD *)(a5 + 40);
  if (*(_QWORD *)(v21 + 16) > a1)
  {
    v22 = result;
    v23 = v21 + 32 * a1;
    v24 = *(_OWORD *)(v23 + 48);
    v25 = (_OWORD *)(result + v20);
    *v25 = *(_OWORD *)(v23 + 32);
    v25[1] = v24;
    result = swift_storeEnumTagMultiPayload();
    *(_QWORD *)(v12 + 24) = v22;
    *a6 = v12 | 0xB000000000000000;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BB2C2AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB2C13A0(a1, a2, a3);
}

uint64_t sub_1BB2C2B08()
{
  return sub_1BB690BFC();
}

unint64_t sub_1BB2C2B18(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB2C2B44();
  result = sub_1BB2C2B88();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB2C2B44()
{
  unint64_t result;

  result = qword_1EF2C0580;
  if (!qword_1EF2C0580)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9027F8, &type metadata for G_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2C0580);
  }
  return result;
}

unint64_t sub_1BB2C2B88()
{
  unint64_t result;

  result = qword_1EF2C0588;
  if (!qword_1EF2C0588)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902820, &type metadata for G_V1);
    atomic_store(result, (unint64_t *)&qword_1EF2C0588);
  }
  return result;
}

uint64_t type metadata accessor for G_V1.Bound()
{
  uint64_t result;

  result = qword_1EF2C05F0;
  if (!qword_1EF2C05F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB2C2C08()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2C2C14(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB2C2C90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB2C2C9C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB2C2D10()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB2C2D9C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C0630, (uint64_t (*)(uint64_t))type metadata accessor for G_V1.Bound, (uint64_t)&unk_1BB902888);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB2C2DD8@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB2C1AFC(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1BB2C2DF4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB2C1CA4(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1BB2C2E00()
{
  unint64_t result;

  result = qword_1EF2C0640;
  if (!qword_1EF2C0640)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902A00, &type metadata for G_V1.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C0640);
  }
  return result;
}

unint64_t sub_1BB2C2E44()
{
  unint64_t result;

  result = qword_1EF2C0648;
  if (!qword_1EF2C0648)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9029D0, &type metadata for G_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C0648);
  }
  return result;
}

uint64_t sub_1BB2C2E88@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB2C2968(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_1BB2C2E90()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB2C2EC0()
{
  uint64_t v0;
  void *v1;

  swift_release();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 152) >= 0x11uLL)
    swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(v0 + 296) >= 0x11uLL)
      swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB2C2FB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C0658)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C0660, (uint64_t (*)(void))sub_1BB2C2E00, (uint64_t)&type metadata for G_V1.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C0658);
  }
}

uint64_t sub_1BB2C302C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB2C1E84(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BB2C3038(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB2C3088(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB2C3078()
{
  return swift_deallocObject();
}

void sub_1BB2C3088(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for G_V1.Layout;
    v8[1] = &type metadata for G_V1.Layout.Attributes;
    v8[2] = sub_1BB2C2E00();
    v8[3] = sub_1BB2C2E44();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

ValueMetadata *type metadata accessor for G_V1.Layout.Attributes()
{
  return &type metadata for G_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for G_V1.Layout()
{
  return &type metadata for G_V1.Layout;
}

unint64_t sub_1BB2C3128()
{
  unint64_t result;

  result = qword_1EF2C0690;
  if (!qword_1EF2C0690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902970, &type metadata for G_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C0690);
  }
  return result;
}

unint64_t sub_1BB2C3170()
{
  unint64_t result;

  result = qword_1EF2C0698;
  if (!qword_1EF2C0698)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902948, &type metadata for G_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C0698);
  }
  return result;
}

unint64_t sub_1BB2C31B8()
{
  unint64_t result;

  result = qword_1EF2C06A0;
  if (!qword_1EF2C06A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902920, &type metadata for G_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C06A0);
  }
  return result;
}

unint64_t sub_1BB2C3200()
{
  unint64_t result;

  result = qword_1EF2C06A8;
  if (!qword_1EF2C06A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902998, &type metadata for G_V1.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C06A8);
  }
  return result;
}

uint64_t sub_1BB2C3244@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  sub_1BA4CDF6C(0, &qword_1EF2C06B0, (uint64_t (*)(void))sub_1BB2C3530, (uint64_t)&type metadata for G_V1.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v19 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2C3530();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  type metadata accessor for CGRect(0);
  v24 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  v10 = v19;
  sub_1BB8740D4();
  v11 = v20;
  v12 = v21;
  v13 = v22;
  v14 = v23;
  sub_1BA4AD288(0, &qword_1ED39D9C0, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v24 = 1;
  sub_1BA916364(&qword_1ED39D9D0, (uint64_t (*)(void))sub_1BA916320, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  v15 = v20;
  sub_1BA4B07F0(0, &qword_1ED39DA18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v24 = 2;
  sub_1BB04FAFC((unint64_t *)&unk_1ED39DA20, (unint64_t *)&unk_1ED3B9910, MEMORY[0x1E0C9B9E0], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  v16 = v20;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v15;
  a2[5] = v16;
  return result;
}

unint64_t sub_1BB2C3530()
{
  unint64_t result;

  result = qword_1EF2C06B8;
  if (!qword_1EF2C06B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902AF4, &type metadata for G_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C06B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for G_V1.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB2C35C0 + 4 * byte_1BB9027ED[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB2C35F4 + 4 * asc_1BB9027E8[v4]))();
}

uint64_t sub_1BB2C35F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2C35FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2C3604);
  return result;
}

uint64_t sub_1BB2C3610(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2C3618);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB2C361C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2C3624(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for G_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for G_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB2C3644()
{
  unint64_t result;

  result = qword_1EF2C06C8;
  if (!qword_1EF2C06C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902ACC, &type metadata for G_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C06C8);
  }
  return result;
}

unint64_t sub_1BB2C368C()
{
  unint64_t result;

  result = qword_1EF2C06D0;
  if (!qword_1EF2C06D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902A3C, &type metadata for G_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C06D0);
  }
  return result;
}

unint64_t sub_1BB2C36D4()
{
  unint64_t result;

  result = qword_1EF2C06D8;
  if (!qword_1EF2C06D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902A64, &type metadata for G_V1.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C06D8);
  }
  return result;
}

uint64_t FeedCachePolicy.description.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    if (*(_QWORD *)v0)
      return 0x4F20646568636143;
    else
      return 0x746C7561666544;
  }
  else
  {
    sub_1BB873CB4();
    sub_1BB872AFC(0);
    sub_1BB872FF4();
    return 0;
  }
}

uint64_t *FormatServiceCachePolicy.init(_:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  v2 = *result;
  v3 = *((_BYTE *)result + 8);
  if (v3)
    v2 = *result != 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

_BYTE *FormatServiceCachePolicy.init(_:)@<X0>(_BYTE *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *result;
  v3 = 0x4122750000000000;
  if ((_DWORD)v2 == 1)
  {
    v3 = 1;
    v4 = 1;
  }
  else
  {
    v4 = 0;
  }
  if (*result)
  {
    v2 = v3;
    v5 = v4;
  }
  else
  {
    v5 = 1;
  }
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t static FeedCachePolicy.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v5 = *(_QWORD *)&v3 == 0;
    if (v3 == 0.0)
      v6 = *(unsigned __int8 *)(a2 + 8);
    else
      v6 = 0;
    if (v5)
      v4 = 0;
    if (v2 == 0.0)
      return v6;
    else
      return v4;
  }
  else
  {
    return (v4 & 1) == 0 && v2 == v3;
  }
}

uint64_t sub_1BB2C38A8(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v5 = *(_QWORD *)&v3 == 0;
    if (v3 == 0.0)
      v6 = *(unsigned __int8 *)(a2 + 8);
    else
      v6 = 0;
    if (v5)
      v4 = 0;
    if (v2 == 0.0)
      return v6;
    else
      return v4;
  }
  else
  {
    return (v4 & 1) == 0 && v2 == v3;
  }
}

ValueMetadata *type metadata accessor for FeedCachePolicy()
{
  return &type metadata for FeedCachePolicy;
}

ValueMetadata *type metadata accessor for A18_V10()
{
  return &type metadata for A18_V10;
}

uint64_t sub_1BB2C3918(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C0818, (uint64_t (*)(void))sub_1BB2C6A30, (uint64_t)&type metadata for A18_V10.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2C6A30();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB2C3ACC()
{
  sub_1BB2C6A30();
  return sub_1BB874710();
}

uint64_t sub_1BB2C3AF4()
{
  sub_1BB2C6A30();
  return sub_1BB87471C();
}

double sub_1BB2C3B1C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB2C681C(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB2C3B60(_QWORD *a1)
{
  return sub_1BB2C3918(a1);
}

uint64_t sub_1BB2C3B74()
{
  sub_1BB2C6508();
  return sub_1BB86D96C();
}

uint64_t sub_1BB2C3BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A18_V10;
  v20 = sub_1BA8EE1E8();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A18_V10;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E726A238, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E726A260, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A18_V10.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(qword_1EF2C06F0, (uint64_t (*)(uint64_t))type metadata accessor for A18_V10.Bound, (uint64_t)&unk_1BB902C98);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

uint64_t sub_1BB2C4210@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  _BYTE *v38;
  _QWORD v39[18];
  char v40[105];
  __int128 v41[2];
  __int128 v42[2];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v38 = a1;
  v37 = sub_1BB86DA38();
  *(_QWORD *)&v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for A18_V10.Bound();
  v6 = v1 + *(int *)(v5 + 24);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = *(_QWORD *)(v6 + *(int *)(v7 + 40));
  v9 = *(_QWORD *)(v8 + 16);
  v10 = *(double *)(v6 + *(int *)(v7 + 32));
  sub_1BA4C010C(v9 + 16, (uint64_t)v42);
  sub_1BA4C010C(v9 + 56, (uint64_t)v41);
  v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v42, inited + 16);
  sub_1BA4CECCC(v41, inited + 56);
  *(double *)(inited + 96) = v11;
  v40[0] = 1;
  FeedLayoutStylerFactory.styler(withHeading:)(v40, (uint64_t *)&v43);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  sub_1BA829A4C();
  v13 = sub_1BB872E74();
  *(_QWORD *)(v13 + 16) = 4;
  sub_1BA4C010C((uint64_t)&v43, v13 + 32);
  sub_1BA4C010C((uint64_t)&v43, v13 + 72);
  sub_1BA4C010C((uint64_t)&v43, v13 + 112);
  sub_1BA4CECCC(&v43, v13 + 152);
  v14 = *(_QWORD *)(v8 + 16);
  sub_1BA4C010C(v14 + 16, (uint64_t)v42);
  sub_1BA4C010C(v14 + 56, (uint64_t)v41);
  v15 = v10 * *(double *)(v14 + 96);
  v16 = swift_initStackObject();
  sub_1BA4CECCC(v42, v16 + 16);
  sub_1BA4CECCC(v41, v16 + 56);
  *(double *)(v16 + 96) = v15;
  v40[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v40, (uint64_t *)&v43);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v16 + 16);
  __swift_destroy_boxed_opaque_existential_1(v16 + 56);
  v17 = sub_1BA6B5B08((uint64_t)&v43, *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v5 + 28)) + 16) - 4);
  *(_QWORD *)&v43 = v13;
  sub_1BA6B5BE8(v17);
  v18 = v43;
  v39[2] = v2;
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1BACB8FF0(v19, v18, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v20 + 16) < 4uLL)
  {
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v21 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    v22 = v20 + ((v21 + 32) & ~v21);
    v23 = *MEMORY[0x1E0DB5D88];
    v24 = sub_1BB86D678();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v4, v23, v24);
    v25 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v36 + 104))(v4, *MEMORY[0x1E0DB6200], v37);
    MEMORY[0x1E0C80A78](v25);
    *((_QWORD *)&v36 - 6) = v20;
    *((_QWORD *)&v36 - 5) = v20;
    *((_QWORD *)&v36 - 4) = v22;
    *(__int128 *)((char *)&v36 - 24) = xmmword_1BB902BC0;
    sub_1BB2C65B0(0, &qword_1EF2C0798, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
    swift_allocObject();
    swift_bridgeObjectRetain();
    v37 = sub_1BB86DB34();
    v26 = sub_1BB86DB40();
    v36 = v43;
    v27 = v44;
    v28 = v45;
    *(_QWORD *)&v43 = v20;
    *(_QWORD *)&v42[0] = v46;
    MEMORY[0x1E0C80A78](v26);
    sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA6B5AA8();
    v29 = sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
    swift_bridgeObjectRetain();
    v35 = v29;
    v30 = sub_1BB86ED58();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v43 = v30;
    sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
    sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
    sub_1BA6B39A0();
    v31 = sub_1BB872BBC();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v33 = v38;
    *v38 = 0;
    *(_OWORD *)(v33 + 8) = v36;
    *((_QWORD *)v33 + 3) = v27;
    *((_QWORD *)v33 + 4) = v28;
    v34 = MEMORY[0x1E0DEE9D8];
    *((_QWORD *)v33 + 5) = v31;
    *((_QWORD *)v33 + 6) = v34;
  }
  return result;
}

uint64_t sub_1BB2C4764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_1BA4CDF6C(0, &qword_1EF2C07B0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)&v20[-v15];
  v26 = a1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 18;
  *v16 = v17;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DB63F8], v13);
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v18 = MEMORY[0x1E0DB5DD0];
  sub_1BB2C65B0(0, &qword_1EF2C07B8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB2C6570(&qword_1EF2C07C0, &qword_1EF2C07B8, (uint64_t (*)(uint64_t, _QWORD *))v18, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1BB2C48E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v17)(uint64_t, _QWORD *);
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  void (*v47)(uint64_t *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t);
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v53 = a5;
  v54 = a6;
  v51 = a3;
  v52 = a4;
  v57 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C07B0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v43 - v10);
  v63 = a1;
  v12 = sub_1BB86D438();
  v13 = swift_allocBox();
  v56 = *MEMORY[0x1E0DB5A38];
  v55 = *(void (**)(uint64_t))(*(_QWORD *)(v12 - 8) + 104);
  v55(v14);
  *v11 = v13;
  v15 = *MEMORY[0x1E0DB6318];
  v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 104);
  v16(v11, v15, v8);
  v17 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB2C65B0(0, &qword_1EF2C07C8, MEMORY[0x1E0DB5A10]);
  v50 = v18;
  v49 = sub_1BB2C6570(&qword_1EF2C07D0, &qword_1EF2C07C8, v17, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v19 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  v19(v11, v8);
  v63 = a1;
  sub_1BAA71EEC();
  v21 = v20;
  v22 = swift_allocBox();
  v24 = (char *)v23 + *(int *)(v21 + 48);
  *v23 = 11;
  v25 = *MEMORY[0x1E0DB61C8];
  v26 = sub_1BB86DA20();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v25, v26);
  *v11 = v22;
  v16(v11, *MEMORY[0x1E0DB6338], v8);
  v62 = v57;
  sub_1BB86D498();
  v19(v11, v8);
  v63 = a1;
  v27 = swift_allocBox();
  v46 = v12;
  ((void (*)(uint64_t, _QWORD, uint64_t))v55)(v28, v56, v12);
  *v11 = v27;
  v45 = v15;
  v16(v11, v15, v8);
  sub_1BB86D4EC();
  v19(v11, v8);
  v48 = a1;
  v63 = a1;
  v44 = *MEMORY[0x1E0DB6410];
  v47 = v16;
  ((void (*)(uint64_t *))v16)(v11);
  sub_1BB2C6634();
  sub_1BA4CDF6C(0, &qword_1EF2C07E0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v30 = v29;
  v31 = *(_QWORD *)(v29 - 8);
  v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
  v34 = v33 + v32;
  v35 = v57;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v31 + 104))(v34, *MEMORY[0x1E0DB5C80], v30);
  v58 = v51;
  v59 = v52;
  v60 = v53;
  v61 = v54;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  result = ((uint64_t (*)(uint64_t *, uint64_t))v19)(v11, v8);
  if (*(_QWORD *)(v35 + 16) == 7)
  {
    v37 = v48;
    v63 = v48;
    v38 = v46;
    v39 = swift_allocBox();
    ((void (*)(uint64_t, _QWORD, uint64_t))v55)(v40, v56, v38);
    *v11 = v39;
    v41 = v47;
    v47(v11, v45, v8);
    sub_1BB86D4EC();
    v19(v11, v8);
    v63 = v37;
    v42 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v41)(v11, v44, v8);
    MEMORY[0x1E0C80A78](v42);
    sub_1BB86D498();
    return ((uint64_t (*)(uint64_t *, uint64_t))v19)(v11, v8);
  }
  return result;
}

uint64_t sub_1BB2C4DBC(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t (*v24)(uint64_t, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C07B0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - v14;
  v28 = a1;
  swift_getKeyPath();
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB6410], v12);
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v17 = (char *)v6 + v4[5];
    v27 = v12;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v26 = v13;
    v20 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    v22 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 1;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v22;
    v23 = v22;
    sub_1BAB62528((uint64_t)v10, (uint64_t)v6);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v24 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB2C65B0(0, &qword_1EF2C07C8, MEMORY[0x1E0DB5A10]);
    sub_1BB2C6570(&qword_1EF2C07D0, &qword_1EF2C07C8, v24, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BB2C5070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_1BA4CDF6C(0, &qword_1EF2C07B0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t *)((char *)&v25 - v13);
  v15 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (a5 >> 1) - a4;
  if (a5 >> 1 != a4)
  {
    if ((uint64_t)(a5 >> 1) <= a4)
    {
      __break(1u);
    }
    else
    {
      v20 = *(_QWORD *)(v16 + 72);
      v27 = *MEMORY[0x1E0DB63F8];
      v25 = a2;
      swift_unknownObjectRetain();
      v28 = v20;
      v29 = v11;
      v21 = a3 + v20 * a4;
      v26 = v12;
      do
      {
        sub_1BA4C2DD8(v21, (uint64_t)v18, type metadata accessor for HeadlineViewLayout.Context);
        v30 = a1;
        v22 = swift_allocObject();
        *(_QWORD *)(v22 + 16) = 6;
        *v14 = v22;
        v23 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v14, v27, v11);
        MEMORY[0x1E0C80A78](v23);
        v24 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
        sub_1BB2C65B0(0, &qword_1EF2C07C8, MEMORY[0x1E0DB5A10]);
        sub_1BB2C6570(&qword_1EF2C07D0, &qword_1EF2C07C8, v24, MEMORY[0x1E0DB5A18]);
        sub_1BB86D4BC();
        v12 = v26;
        v11 = v29;
        (*(void (**)(uint64_t *, uint64_t))(v26 + 8))(v14, v29);
        sub_1BA4A2E80((uint64_t)v18, type metadata accessor for HeadlineViewLayout.Context);
        v21 += v28;
        --v19;
      }
      while (v19);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1BB2C52C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, _QWORD *);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v33 = a2;
  v34 = sub_1BB86DA38();
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86D93C();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C07B0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v32 - v14;
  v39 = a1;
  KeyPath = swift_getKeyPath();
  v16 = *MEMORY[0x1E0DB63C0];
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v38 = v12;
  v17(v15, v16, v12);
  v18 = (char *)v10 + v8[5];
  v19 = *MEMORY[0x1E0DB61C8];
  v20 = sub_1BB86DA20();
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v18, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  v22 = (void **)MEMORY[0x1E0DC4918];
  *v10 = 0;
  *(_QWORD *)((char *)v10 + v8[6]) = 0;
  v23 = *v22;
  *(_QWORD *)((char *)v10 + v8[7]) = v23;
  v24 = qword_1ED3BC390;
  v25 = v23;
  if (v24 != -1)
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v26 = swift_release();
  v27 = MEMORY[0x1E0C80A78](v26);
  v28 = v34;
  *(&v32 - 4) = v33;
  *(&v32 - 3) = (uint64_t)v10;
  v31 = (unint64_t)v7;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v32 + 104))(v4, *MEMORY[0x1E0DB6208], v28, v27);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v37);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  v29 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB2C65B0(0, &qword_1EF2C07C8, MEMORY[0x1E0DB5A10]);
  sub_1BB2C6570(&qword_1EF2C07D0, &qword_1EF2C07C8, v29, MEMORY[0x1E0DB5A18]);
  v31 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v38);
}

uint64_t sub_1BB2C5644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C07B0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v18 - v7);
  v23 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v22 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB2C65B0(0, &qword_1EF2C07C8, MEMORY[0x1E0DB5A10]);
  sub_1BB2C6570(&qword_1EF2C07D0, &qword_1EF2C07C8, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v23 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 6;
  *v8 = v14;
  v11(v8, v10, v5);
  v15 = v19;
  v21 = v19;
  sub_1BB86D4BC();
  v13(v8, v5);
  v23 = a1;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 6;
  *v8 = v16;
  v11(v8, v10, v5);
  v20 = v15;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BB2C58AC(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C07B0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16) < 5uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for HeadlineViewLayout.Context(0);
    v15 = a2
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))
        + 4 * *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72);
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB2C65B0(0, &qword_1EF2C07C8, MEMORY[0x1E0DB5A10]);
    sub_1BB2C6570(&qword_1EF2C07D0, &qword_1EF2C07C8, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1BB2C5B6C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C07B0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16) < 6uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for HeadlineViewLayout.Context(0);
    v15 = a2
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))
        + 5 * *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72);
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB2C65B0(0, &qword_1EF2C07C8, MEMORY[0x1E0DB5A10]);
    sub_1BB2C6570(&qword_1EF2C07D0, &qword_1EF2C07C8, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1BB2C5E30(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2C07B0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16) < 7uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for HeadlineViewLayout.Context(0);
    v15 = a2
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80))
        + 6 * *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72);
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BB2C65B0(0, &qword_1EF2C07C8, MEMORY[0x1E0DB5A10]);
    sub_1BB2C6570(&qword_1EF2C07D0, &qword_1EF2C07C8, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1BB2C60F4@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A18_V10.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB2C61D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB2C3BDC(a1, a2, a3);
}

uint64_t sub_1BB2C61E8()
{
  return sub_1BB6909F8();
}

unint64_t sub_1BB2C61F8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB2C6224();
  result = sub_1BB2C6268();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB2C6224()
{
  unint64_t result;

  result = qword_1EF2C06E0;
  if (!qword_1EF2C06E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902BE4, &type metadata for A18_V10);
    atomic_store(result, (unint64_t *)&qword_1EF2C06E0);
  }
  return result;
}

unint64_t sub_1BB2C6268()
{
  unint64_t result;

  result = qword_1EF2C06E8;
  if (!qword_1EF2C06E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902C0C, &type metadata for A18_V10);
    atomic_store(result, (unint64_t *)&qword_1EF2C06E8);
  }
  return result;
}

uint64_t type metadata accessor for A18_V10.Bound()
{
  uint64_t result;

  result = qword_1EF2C0750;
  if (!qword_1EF2C0750)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB2C62E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2C62F4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB2C6370()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB2C637C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB2C63F0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB2C647C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C0790, (uint64_t (*)(uint64_t))type metadata accessor for A18_V10.Bound, (uint64_t)&unk_1BB902C70);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB2C64B8(uint64_t a1)
{
  return sub_1BAA06208(a1, sub_1BB2C4764);
}

unint64_t sub_1BB2C64C4()
{
  unint64_t result;

  result = qword_1EF2C07A0;
  if (!qword_1EF2C07A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902DC8, &type metadata for A18_V10.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C07A0);
  }
  return result;
}

unint64_t sub_1BB2C6508()
{
  unint64_t result;

  result = qword_1EF2C07A8;
  if (!qword_1EF2C07A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902D98, &type metadata for A18_V10.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C07A8);
  }
  return result;
}

uint64_t sub_1BB2C654C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB2C60F4(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB2C6554()
{
  return swift_deallocObject();
}

uint64_t sub_1BB2C6564(uint64_t a1)
{
  return sub_1BAA06208(a1, sub_1BB2C48E4);
}

uint64_t sub_1BB2C6570(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB2C65B0(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB2C65B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A18_V10.Layout;
    v8[1] = &type metadata for A18_V10.Layout.Attributes;
    v8[2] = sub_1BB2C64C4();
    v8[3] = sub_1BB2C6508();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB2C662C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2C4DBC(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BB2C6634()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C07D8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C07E0, (uint64_t (*)(void))sub_1BB2C64C4, (uint64_t)&type metadata for A18_V10.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C07D8);
  }
}

void sub_1BB2C66A8(uint64_t a1)
{
  uint64_t v1;

  sub_1BB2C5070(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BB2C66B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2C5644(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB2C66BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2C58AC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB2C66C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2C5B6C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB2C66CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2C5E30(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB2C66D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2C52C0(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A18_V10.Layout.Attributes()
{
  return &type metadata for A18_V10.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V10.Layout()
{
  return &type metadata for A18_V10.Layout;
}

unint64_t sub_1BB2C6700()
{
  unint64_t result;

  result = qword_1EF2C07E8;
  if (!qword_1EF2C07E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902D38, &type metadata for A18_V10.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C07E8);
  }
  return result;
}

unint64_t sub_1BB2C6748()
{
  unint64_t result;

  result = qword_1EF2C07F0;
  if (!qword_1EF2C07F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902D10, &type metadata for A18_V10.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C07F0);
  }
  return result;
}

unint64_t sub_1BB2C6790()
{
  unint64_t result;

  result = qword_1EF2C07F8;
  if (!qword_1EF2C07F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902CE8, &type metadata for A18_V10.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C07F8);
  }
  return result;
}

unint64_t sub_1BB2C67D8()
{
  unint64_t result;

  result = qword_1EF2C0800;
  if (!qword_1EF2C0800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902D60, &type metadata for A18_V10.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C0800);
  }
  return result;
}

uint64_t sub_1BB2C681C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C0808, (uint64_t (*)(void))sub_1BB2C6A30, (uint64_t)&type metadata for A18_V10.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2C6A30();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB2C6A30()
{
  unint64_t result;

  result = qword_1EF2C0810;
  if (!qword_1EF2C0810)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902EBC, &type metadata for A18_V10.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0810);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A18_V10.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB2C6AC0 + 4 * byte_1BB902BD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB2C6AF4 + 4 * byte_1BB902BD0[v4]))();
}

uint64_t sub_1BB2C6AF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2C6AFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2C6B04);
  return result;
}

uint64_t sub_1BB2C6B10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2C6B18);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB2C6B1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2C6B24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A18_V10.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V10.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB2C6B44()
{
  unint64_t result;

  result = qword_1EF2C0820;
  if (!qword_1EF2C0820)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902E94, &type metadata for A18_V10.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0820);
  }
  return result;
}

unint64_t sub_1BB2C6B8C()
{
  unint64_t result;

  result = qword_1EF2C0828;
  if (!qword_1EF2C0828)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902E04, &type metadata for A18_V10.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0828);
  }
  return result;
}

unint64_t sub_1BB2C6BD4()
{
  unint64_t result;

  result = qword_1EF2C0830;
  if (!qword_1EF2C0830)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB902E2C, &type metadata for A18_V10.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0830);
  }
  return result;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:reuseIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, uint64_t a14, uint64_t *a15, char a16, uint64_t *a17, uint64_t a18)
{
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  result = swift_allocObject();
  v27 = *a13;
  v28 = *a15;
  v29 = *a17;
  v30 = *((_BYTE *)a17 + 8);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a5;
  *(_QWORD *)(result + 56) = a6;
  *(_QWORD *)(result + 64) = a7;
  *(_QWORD *)(result + 72) = a8;
  *(double *)(result + 80) = a9;
  *(double *)(result + 88) = a10;
  *(double *)(result + 96) = a11;
  *(double *)(result + 104) = a12;
  *(_QWORD *)(result + 112) = v27;
  *(_QWORD *)(result + 120) = a14;
  *(_QWORD *)(result + 128) = v28;
  *(_BYTE *)(result + 136) = a16;
  *(_QWORD *)(result + 144) = v29;
  *(_BYTE *)(result + 152) = v30;
  v31 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(result + 160) = a18;
  *(_QWORD *)(result + 168) = v31;
  return result;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatShareAttributionNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

uint64_t FormatShareAttributionNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 112);
  return swift_retain();
}

uint64_t FormatShareAttributionNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

unint64_t FormatShareAttributionNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 128);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatShareAttributionNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 136);
}

void FormatShareAttributionNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 152);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 144);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatShareAttributionNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatShareAttributionNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:reuseIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, uint64_t a14, uint64_t *a15, char a16, uint64_t *a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;

  v19 = *a13;
  v20 = *a15;
  v21 = *a17;
  v22 = *((_BYTE *)a17 + 8);
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  *(_QWORD *)(v18 + 40) = a4;
  *(_QWORD *)(v18 + 48) = a5;
  *(_QWORD *)(v18 + 56) = a6;
  *(_QWORD *)(v18 + 64) = a7;
  *(_QWORD *)(v18 + 72) = a8;
  *(double *)(v18 + 80) = a9;
  *(double *)(v18 + 88) = a10;
  *(double *)(v18 + 96) = a11;
  *(double *)(v18 + 104) = a12;
  *(_QWORD *)(v18 + 112) = v19;
  *(_QWORD *)(v18 + 120) = a14;
  *(_QWORD *)(v18 + 128) = v20;
  *(_BYTE *)(v18 + 136) = a16;
  *(_QWORD *)(v18 + 144) = v21;
  *(_BYTE *)(v18 + 152) = v22;
  v23 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v18 + 160) = a18;
  *(_QWORD *)(v18 + 168) = v23;
  return v18;
}

uint64_t sub_1BB2C6E7C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2C6EB4 + 4 * byte_1BB902F10[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BB2C6EB4()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB2C6ED0()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BB2C6EF4()
{
  return 0x6564496573756572;
}

uint64_t sub_1BB2C6F18()
{
  return 0x656D617266;
}

uint64_t sub_1BB2C6F2C()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB2C6F44()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB2C6F58()
{
  return 0x696C696269736976;
}

unint64_t sub_1BB2C6F70()
{
  return 0xD000000000000018;
}

uint64_t sub_1BB2C6FD8()
{
  unsigned __int8 *v0;

  return sub_1BB2C6E7C(*v0);
}

uint64_t sub_1BB2C6FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2C7ED4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2C7004()
{
  sub_1BB2C74AC();
  return sub_1BB874710();
}

uint64_t sub_1BB2C702C()
{
  sub_1BB2C74AC();
  return sub_1BB87471C();
}

uint64_t FormatShareAttributionNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 128));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.__deallocating_deinit()
{
  FormatShareAttributionNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatShareAttributionNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  char v11;
  _OWORD v13[2];
  char v14;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C0838, (uint64_t (*)(void))sub_1BB2C74AC, (uint64_t)&type metadata for FormatShareAttributionNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2C74AC();
  sub_1BB8746C8();
  LOBYTE(v13[0]) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1BB87417C();
    LOBYTE(v13[0]) = 2;
    sub_1BB87417C();
    LOBYTE(v13[0]) = 3;
    sub_1BB87417C();
    v10 = *(_OWORD *)(v3 + 96);
    v13[0] = *(_OWORD *)(v3 + 80);
    v13[1] = v10;
    v14 = 4;
    type metadata accessor for CGRect(0);
    sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 112);
    v14 = 5;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v13[0]) = 6;
    sub_1BB8741A0();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 128);
    v14 = 7;
    sub_1BA84B088();
    sub_1BB8741AC();
    LOBYTE(v13[0]) = 8;
    sub_1BB874188();
    v11 = *(_BYTE *)(v3 + 152);
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 144);
    BYTE8(v13[0]) = v11;
    v14 = 9;
    sub_1BA5FB410();
    sub_1BB87414C();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 160);
    v14 = 10;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 168);
    v14 = 11;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA9952AC(&qword_1EF2AC0D8, (uint64_t (*)(void))sub_1BA994B84, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB2C74AC()
{
  unint64_t result;

  result = qword_1EF2C0840;
  if (!qword_1EF2C0840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9031D4, &type metadata for FormatShareAttributionNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0840);
  }
  return result;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatShareAttributionNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatShareAttributionNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  __int128 v20;
  __int128 v21;
  char v22;

  sub_1BA4CDF6C(0, &qword_1EF2C0848, (uint64_t (*)(void))sub_1BB2C74AC, (uint64_t)&type metadata for FormatShareAttributionNodeLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v18 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2C74AC();
  v17 = v6;
  v7 = v19;
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
    v15 = (uint64_t)a1;
  }
  else
  {
    v19 = a1;
    LOBYTE(v20) = 0;
    *(_QWORD *)(v1 + 16) = sub_1BB874098();
    *(_QWORD *)(v1 + 24) = v8;
    LOBYTE(v20) = 1;
    *(_QWORD *)(v1 + 32) = sub_1BB874098();
    *(_QWORD *)(v1 + 40) = v9;
    LOBYTE(v20) = 2;
    *(_QWORD *)(v1 + 48) = sub_1BB874098();
    *(_QWORD *)(v1 + 56) = v10;
    LOBYTE(v20) = 3;
    v16 = 0;
    *(_QWORD *)(v1 + 64) = sub_1BB874098();
    *(_QWORD *)(v1 + 72) = v11;
    type metadata accessor for CGRect(0);
    v22 = 4;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    sub_1BB8740D4();
    v12 = v21;
    *(_OWORD *)(v1 + 80) = v20;
    *(_OWORD *)(v1 + 96) = v12;
    v22 = 5;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v1 + 112) = v20;
    LOBYTE(v20) = 6;
    *(_QWORD *)(v1 + 120) = sub_1BB8740C8();
    v22 = 7;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 128) = v20;
    LOBYTE(v20) = 8;
    *(_BYTE *)(v1 + 136) = sub_1BB8740A4() & 1;
    v22 = 9;
    sub_1BA650BA0();
    sub_1BB874068();
    v14 = BYTE8(v20);
    *(_QWORD *)(v1 + 144) = v20;
    *(_BYTE *)(v1 + 152) = v14;
    type metadata accessor for FormatContextLayoutOptions();
    v22 = 10;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 160) = v20;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v22 = 11;
    sub_1BA9952AC(&qword_1EF2AC100, (uint64_t (*)(void))sub_1BA995330, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v18);
    v15 = (uint64_t)v19;
    *(_QWORD *)(v1 + 168) = v20;
  }
  __swift_destroy_boxed_opaque_existential_1(v15);
  return v1;
}

uint64_t sub_1BB2C7B04(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C0850, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatShareAttributionNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatShareAttributionNodeLayoutAttributes()
{
  return objc_opt_self();
}

double sub_1BB2C7B50()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)v0 + 80);
}

uint64_t sub_1BB2C7B60()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2C7B6C(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C0858, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatShareAttributionNodeLayoutAttributes);
}

uint64_t sub_1BB2C7B98(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C0860, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatShareAttributionNodeLayoutAttributes);
}

uint64_t sub_1BB2C7BC4(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2C0868, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatShareAttributionNodeLayoutAttributes);
}

uint64_t sub_1BB2C7BF0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatShareAttributionNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB2C7C44(_QWORD *a1)
{
  return FormatShareAttributionNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB2C7C64(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2C0988, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatShareAttributionNodeLayoutAttributes);
  return sub_1BB86D96C();
}

uint64_t method lookup function for FormatShareAttributionNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatShareAttributionNodeLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:reuseIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:contextLayoutOptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FormatShareAttributionNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t storeEnumTagSinglePayload for FormatShareAttributionNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB2C7D7C + 4 * byte_1BB902F21[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB2C7DB0 + 4 * byte_1BB902F1C[v4]))();
}

uint64_t sub_1BB2C7DB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2C7DB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2C7DC0);
  return result;
}

uint64_t sub_1BB2C7DCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2C7DD4);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB2C7DD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2C7DE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatShareAttributionNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatShareAttributionNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB2C7E00()
{
  unint64_t result;

  result = qword_1EF2C0970;
  if (!qword_1EF2C0970)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9031AC, &type metadata for FormatShareAttributionNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0970);
  }
  return result;
}

unint64_t sub_1BB2C7E48()
{
  unint64_t result;

  result = qword_1EF2C0978;
  if (!qword_1EF2C0978)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90311C, &type metadata for FormatShareAttributionNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0978);
  }
  return result;
}

unint64_t sub_1BB2C7E90()
{
  unint64_t result;

  result = qword_1EF2C0980;
  if (!qword_1EF2C0980)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB903144, &type metadata for FormatShareAttributionNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0980);
  }
  return result;
}

uint64_t sub_1BB2C7ED4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB961EB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB965970)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t FormatWebEmbed.Resolved.headline.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatWebEmbed.Resolved();
  sub_1BA4C2DD8(v0 + *(int *)(v4 + 36), (uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
  sub_1BA6C5A68();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v5) == 1)
  {
    sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
    return 0;
  }
  else
  {
    sub_1BB86ED1C();
    v8 = v10[1];
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
  }
  return v8;
}

uint64_t FormatWebEmbed.Resolved.init(webEmbed:indexFileURLPromise:dataURLPromise:headline:genericDataVisualization:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a4;
  v28 = a5;
  v26 = a3;
  v9 = type metadata accessor for GenericDataVisualization();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[1];
  *a6 = *a1;
  a6[1] = v16;
  v17 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  sub_1BA4C2DD8((uint64_t)a1, (uint64_t)a6 + v17[5], (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed);
  *(_QWORD *)((char *)a6 + v17[6]) = a2;
  *(_QWORD *)((char *)a6 + v17[7]) = v26;
  swift_bridgeObjectRetain();
  sub_1BA605360(v27, (uint64_t)v15);
  v18 = (uint64_t)a1;
  v19 = v28;
  sub_1BA4A2E80(v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed);
  sub_1BA5193C4((uint64_t)v15, (uint64_t)a6 + v17[9], (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v19, 1, v9) == 1)
  {
    sub_1BA4A2E80(v19, (uint64_t (*)(_QWORD))sub_1BACC4914);
    v20 = (char *)a6 + v17[8];
    v21 = type metadata accessor for WebEmbedDataVisualization();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  }
  else
  {
    sub_1BA5193C4(v19, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v23 = (uint64_t)a6 + v17[8];
    sub_1BA5193C4((uint64_t)v12, v23, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
    v24 = type metadata accessor for WebEmbedDataVisualization();
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
  }
}

uint64_t FormatWebEmbed.Resolved.init(sportsDataVisualization:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  int *v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v33 - v14);
  v35 = *a1;
  v16 = v35;
  v36 = v35;
  SportsDataVisualization.configuredEmbedUrl.getter();
  v36 = v16;
  SportsDataVisualization.identifier.getter();
  v18 = v17;
  v20 = v19;
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v33(v5, 1, 1, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v12[v10[5]], v9, v6);
  *(_QWORD *)v12 = v18;
  *((_QWORD *)v12 + 1) = v20;
  sub_1BA4C2DD8((uint64_t)v5, (uint64_t)&v12[v10[6]], (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  *(_QWORD *)&v12[v10[7]] = 0;
  v21 = &v12[v10[8]];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v12[v10[9]];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  *(_QWORD *)&v12[v10[10]] = 0;
  *(_QWORD *)&v12[v10[11]] = MEMORY[0x1E0DEE9E8];
  sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)&v12[v10[12]] = MEMORY[0x1E0DEE9D8];
  sub_1BA5193C4((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed);
  v23 = v15[1];
  v24 = v34;
  *v34 = *v15;
  v24[1] = v23;
  v25 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  sub_1BA4C2DD8((uint64_t)v15, (uint64_t)v24 + v25[5], (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed);
  v26 = v33;
  v33(v5, 1, 1, v6);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A580, (uint64_t (*)(uint64_t))sub_1BA6EF3B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(_QWORD *)((char *)v24 + v25[6]) = sub_1BB86E9E0();
  v26(v5, 1, 1, v6);
  swift_allocObject();
  v27 = sub_1BB86E9E0();
  sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed);
  *(_QWORD *)((char *)v24 + v25[7]) = v27;
  v28 = (char *)v24 + v25[9];
  sub_1BA6C5A68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v30 = (_QWORD *)((char *)v24 + v25[8]);
  *v30 = v35;
  v31 = type metadata accessor for WebEmbedDataVisualization();
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
}

uint64_t FormatWebEmbed.Resolved.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbed.Resolved.webEmbed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatWebEmbed.Resolved();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed);
}

uint64_t FormatWebEmbed.Resolved.indexFileURLPromise.getter()
{
  type metadata accessor for FormatWebEmbed.Resolved();
  return swift_retain();
}

uint64_t FormatWebEmbed.Resolved.dataURLPromise.getter()
{
  type metadata accessor for FormatWebEmbed.Resolved();
  return swift_retain();
}

uint64_t FormatWebEmbed.Resolved.dataVisualization.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatWebEmbed.Resolved();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
}

uint64_t FormatWebEmbed.Resolved.sportsDataVisualization.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;

  v3 = type metadata accessor for WebEmbedDataVisualization();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (unint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatWebEmbed.Resolved();
  sub_1BA4C2DD8(v1 + *(int *)(v10 + 32), (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    result = sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
    *a1 = 0xF000000000000007;
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v12 = 0xF000000000000007;
    }
    else
    {
      v12 = *v6;
    }
    *a1 = v12;
    return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  return result;
}

uint64_t FormatWebEmbed.Resolved.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;

  v35 = a2;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6CAB4C(0);
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v7);
  v37 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = (_QWORD *)type metadata accessor for FormatWebEmbed();
  MEMORY[0x1E0C80A78](v38);
  v10 = (uint64_t *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BB2C96E8(0, &qword_1ED39C098, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v39 = v11;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - v13;
  v15 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2C96A4();
  v40 = v14;
  v18 = v41;
  sub_1BB87468C();
  if (v18)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = (uint64_t)v37;
  v33 = a1;
  v20 = v17;
  v44 = 0;
  sub_1BA4A2870(&qword_1ED39B298, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed, (uint64_t)&protocol conformance descriptor for FormatWebEmbed);
  v21 = v39;
  sub_1BB8740D4();
  v22 = v10[1];
  *v20 = *v10;
  v20[1] = v22;
  v41 = (uint64_t)v20 + v15[5];
  sub_1BA4C2DD8((uint64_t)v10, v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed);
  sub_1BA6C5A68();
  v43 = 1;
  sub_1BA4A2870((unint64_t *)&qword_1ED39A630, (uint64_t (*)(uint64_t))sub_1BA6C5A68, MEMORY[0x1E0DB50A0]);
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v38 = v10;
  sub_1BA5193C4(v19, (uint64_t)v20 + v15[9], (uint64_t (*)(_QWORD))sub_1BA6C5ACC);
  type metadata accessor for WebEmbedDataVisualization();
  v42 = 2;
  sub_1BA4A2870(&qword_1ED3A7A68, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualization);
  v23 = (uint64_t)v36;
  sub_1BB874068();
  sub_1BA5193C4(v23, (uint64_t)v20 + v15[8], (uint64_t (*)(_QWORD))sub_1BA6CAB4C);
  v24 = sub_1BB86C67C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = (uint64_t)v20;
  v41 = v12;
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  v28 = v21;
  v29 = v34;
  v27(v34, 1, 1, v24);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED39A580, (uint64_t (*)(uint64_t))sub_1BA6EF3B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  *(_QWORD *)(v26 + v15[6]) = sub_1BB86E9E0();
  v27(v29, 1, 1, v24);
  swift_allocObject();
  v30 = sub_1BB86E9E0();
  sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v28);
  *(_QWORD *)(v26 + v15[7]) = v30;
  sub_1BA4C2DD8(v26, v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return sub_1BA4A2E80(v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
}

uint64_t FormatWebEmbed.Resolved.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BB2C96E8(0, (unint64_t *)&unk_1ED39C130, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2C96A4();
  sub_1BB8746C8();
  type metadata accessor for FormatWebEmbed.Resolved();
  v9[15] = 0;
  type metadata accessor for FormatWebEmbed();
  sub_1BA4A2870((unint64_t *)&unk_1ED39B288, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed, (uint64_t)&protocol conformance descriptor for FormatWebEmbed);
  sub_1BB8741AC();
  if (!v1)
  {
    v9[14] = 1;
    sub_1BA6C5A68();
    sub_1BA4A2870((unint64_t *)&qword_1ED39A620, (uint64_t (*)(uint64_t))sub_1BA6C5A68, MEMORY[0x1E0DB5098]);
    sub_1BB87414C();
    v9[13] = 2;
    type metadata accessor for WebEmbedDataVisualization();
    sub_1BA4A2870((unint64_t *)&unk_1ED3A7A40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t)&protocol conformance descriptor for WebEmbedDataVisualization);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB2C9348(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB80235C(*a1, *a2);
}

uint64_t sub_1BB2C9354()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2C93F8()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2C9478()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2C9518@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB2CAFCC();
  *a1 = result;
  return result;
}

void sub_1BB2C9544(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x656E696C64616568;
  if (v2 != 1)
  {
    v5 = 0xD000000000000011;
    v4 = 0x80000001BB95B610;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6465626D45626577;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB2C95A8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x656E696C64616568;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x6465626D45626577;
}

uint64_t sub_1BB2C9608@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB2CAFCC();
  *a1 = result;
  return result;
}

uint64_t sub_1BB2C962C()
{
  sub_1BB2C96A4();
  return sub_1BB874710();
}

uint64_t sub_1BB2C9654()
{
  sub_1BB2C96A4();
  return sub_1BB87471C();
}

uint64_t sub_1BB2C967C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWebEmbed.Resolved.init(from:)(a1, a2);
}

uint64_t sub_1BB2C9690(_QWORD *a1)
{
  return FormatWebEmbed.Resolved.encode(to:)(a1);
}

unint64_t sub_1BB2C96A4()
{
  unint64_t result;

  result = qword_1ED39B240;
  if (!qword_1ED39B240)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9033F4, &_s8ResolvedV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1ED39B240);
  }
  return result;
}

void sub_1BB2C96E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB2C96A4();
    v7 = a3(a1, &_s8ResolvedV10CodingKeysON_0, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *_s8ResolvedVwCP_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  int *v39;
  _QWORD *v40;
  int EnumCaseMultiPayload;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  _QWORD *__dst;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    v22 = (_QWORD *)(v21 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a3[5];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = *(_QWORD *)((char *)a2 + v6 + 8);
    *v7 = *(_QWORD *)((char *)a2 + v6);
    v7[1] = v9;
    v10 = (int *)type metadata accessor for FormatWebEmbed();
    v11 = v10[5];
    v12 = (char *)v7 + v11;
    v13 = &v8[v11];
    v14 = sub_1BB86C67C();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v12, v13, v14);
    v17 = v10[6];
    v18 = (char *)v7 + v17;
    v19 = &v8[v17];
    v57 = v16;
    v58 = v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&v8[v17], 1, v14))
    {
      sub_1BA6EF3B0();
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v16(v18, v19, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
    }
    *(_QWORD *)((char *)v7 + v10[7]) = *(_QWORD *)&v8[v10[7]];
    v23 = v10[8];
    v24 = (_QWORD *)((char *)v7 + v23);
    v25 = &v8[v23];
    v26 = *((_QWORD *)v25 + 1);
    *v24 = *(_QWORD *)v25;
    v24[1] = v26;
    v27 = v10[9];
    v28 = (_QWORD *)((char *)v7 + v27);
    v29 = &v8[v27];
    v30 = *((_QWORD *)v29 + 1);
    *v28 = *(_QWORD *)v29;
    v28[1] = v30;
    *(_QWORD *)((char *)v7 + v10[10]) = *(_QWORD *)&v8[v10[10]];
    *(_QWORD *)((char *)v7 + v10[11]) = *(_QWORD *)&v8[v10[11]];
    *(_QWORD *)((char *)v7 + v10[12]) = *(_QWORD *)&v8[v10[12]];
    v31 = a3[7];
    *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
    v32 = a3[8];
    __dst = (_QWORD *)((char *)a1 + v32);
    v33 = (_QWORD *)((char *)a2 + v32);
    v34 = type metadata accessor for WebEmbedDataVisualization();
    v35 = *(_QWORD *)(v34 - 8);
    v36 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v35 + 48);
    v37 = v34;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v36(v33, 1, v37))
    {
      sub_1BA6CAB4C(0);
      memcpy(__dst, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      v39 = a3;
      v40 = a2;
      v22 = a1;
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v42 = *v33;
      v43 = v35;
      v22 = a1;
      if (EnumCaseMultiPayload == 1)
      {
        v44 = v33[1];
        *__dst = v42;
        __dst[1] = v44;
        v45 = type metadata accessor for GenericDataVisualization();
        v46 = *(int *)(v45 + 20);
        v47 = (char *)__dst + v46;
        v48 = (char *)v33 + v46;
        swift_bridgeObjectRetain();
        v57(v47, v48, v58);
        *(_QWORD *)((char *)__dst + *(int *)(v45 + 24)) = *(uint64_t *)((char *)v33 + *(int *)(v45 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *__dst = v42;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v37);
      v39 = a3;
      v40 = a2;
    }
    v49 = v39[9];
    v50 = (char *)v22 + v49;
    v51 = (char *)v40 + v49;
    sub_1BA6C5A68();
    v53 = v52;
    v54 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v51, 1, v52))
    {
      sub_1BA6C5ACC(0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v50, v51, v53);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v50, 0, 1, v53);
    }
  }
  return v22;
}

uint64_t _s8ResolvedVwxx_0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for FormatWebEmbed();
  v6 = v4 + *(int *)(v5 + 20);
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v10 = v4 + *(int *)(v5 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7))
    v9(v10, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v11 = a1 + a2[8];
  v12 = type metadata accessor for WebEmbedDataVisualization();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for GenericDataVisualization();
      v9(v11 + *(int *)(v13 + 20), v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
  v14 = a1 + a2[9];
  sub_1BA6C5A68();
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  return result;
}

_QWORD *_s8ResolvedVwcp_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t *, uint64_t, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  _QWORD *__dst;
  char *v52;
  _QWORD *v53;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a3[5];
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(_QWORD *)((char *)a2 + v5 + 8);
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = v8;
  v9 = (int *)type metadata accessor for FormatWebEmbed();
  v10 = v9[5];
  v52 = (char *)v6 + v10;
  v11 = &v7[v10];
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14(v52, v11, v12);
  v15 = v9[6];
  v16 = (char *)v6 + v15;
  v17 = &v7[v15];
  v49 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&v7[v15], 1, v12))
  {
    sub_1BA6EF3B0();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v14(v16, v17, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  *(_QWORD *)((char *)v6 + v9[7]) = *(_QWORD *)&v7[v9[7]];
  v19 = v9[8];
  v20 = (_QWORD *)((char *)v6 + v19);
  v21 = &v7[v19];
  v22 = *((_QWORD *)v21 + 1);
  *v20 = *(_QWORD *)v21;
  v20[1] = v22;
  v23 = v9[9];
  v24 = (_QWORD *)((char *)v6 + v23);
  v25 = &v7[v23];
  v26 = *((_QWORD *)v25 + 1);
  *v24 = *(_QWORD *)v25;
  v24[1] = v26;
  *(_QWORD *)((char *)v6 + v9[10]) = *(_QWORD *)&v7[v9[10]];
  *(_QWORD *)((char *)v6 + v9[11]) = *(_QWORD *)&v7[v9[11]];
  *(_QWORD *)((char *)v6 + v9[12]) = *(_QWORD *)&v7[v9[12]];
  v27 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  v28 = a3[8];
  __dst = (_QWORD *)((char *)a1 + v28);
  v53 = a1;
  v29 = (_QWORD *)((char *)a2 + v28);
  v30 = type metadata accessor for WebEmbedDataVisualization();
  v50 = *(_QWORD *)(v30 - 8);
  v31 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v31(v29, 1, v30))
  {
    sub_1BA6CAB4C(0);
    memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    v33 = v53;
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v35 = *v29;
    v33 = v53;
    if (EnumCaseMultiPayload == 1)
    {
      v36 = v29[1];
      *__dst = v35;
      __dst[1] = v36;
      v37 = type metadata accessor for GenericDataVisualization();
      v38 = *(int *)(v37 + 20);
      v39 = (char *)__dst + v38;
      v40 = (char *)v29 + v38;
      swift_bridgeObjectRetain();
      v14(v39, v40, v49);
      *(_QWORD *)((char *)__dst + *(int *)(v37 + 24)) = *(uint64_t *)((char *)v29 + *(int *)(v37 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      *__dst = v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v30);
  }
  v41 = a3[9];
  v42 = (char *)v33 + v41;
  v43 = (char *)a2 + v41;
  sub_1BA6C5A68();
  v45 = v44;
  v46 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v43, 1, v44))
  {
    sub_1BA6C5ACC(0);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v42, v43, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v42, 0, 1, v45);
  }
  return v53;
}

_QWORD *_s8ResolvedVwca_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD *, uint64_t, uint64_t);
  int v37;
  int v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  char *v62;
  uint64_t v63;
  int *v64;
  char *v65;
  char *v66;
  _QWORD *v67;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64 = a3;
  v67 = a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  *((_QWORD *)v7 + 1) = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for FormatWebEmbed();
  v10 = v9[5];
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, char *, uint64_t))(v14 + 24);
  v15(v11, v12, v13);
  v16 = v9[6];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v63 = v14;
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v20 = v19(&v7[v16], 1, v13);
  v21 = v19(v18, 1, v13);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v17, v18, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v17, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v13);
LABEL_6:
    sub_1BA6EF3B0();
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v15(v17, v18, v13);
LABEL_7:
  v23 = v64;
  *(_QWORD *)&v7[v9[7]] = *(_QWORD *)&v8[v9[7]];
  swift_retain();
  swift_release();
  v24 = v9[8];
  v25 = &v7[v24];
  v26 = &v8[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = v9[9];
  v28 = &v7[v27];
  v29 = &v8[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v9[10]] = *(_QWORD *)&v8[v9[10]];
  *(_QWORD *)&v7[v9[11]] = *(_QWORD *)&v8[v9[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v9[12]] = *(_QWORD *)&v8[v9[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v67;
  *(_QWORD *)((char *)a1 + v64[6]) = *(_QWORD *)((char *)v67 + v64[6]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)a1 + v64[7]) = *(_QWORD *)((char *)v67 + v64[7]);
  swift_retain();
  swift_release();
  v31 = v64[8];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)v67 + v31);
  v34 = type metadata accessor for WebEmbedDataVisualization();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v32 = *v33;
      if (EnumCaseMultiPayload == 1)
      {
        v32[1] = v33[1];
        v40 = type metadata accessor for GenericDataVisualization();
        v41 = *(int *)(v40 + 20);
        v65 = (char *)v32 + v41;
        v62 = (char *)v33 + v41;
        v42 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        swift_bridgeObjectRetain();
        v42(v65, v62, v13);
        v43 = *(int *)(v40 + 24);
        v30 = v67;
        *(_QWORD *)((char *)v32 + v43) = *(_QWORD *)((char *)v33 + v43);
        swift_bridgeObjectRetain();
      }
      else
      {
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_21;
    }
LABEL_13:
    sub_1BA6CAB4C(0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_21;
  }
  if (v38)
  {
    sub_1BA4A2E80((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_13;
  }
  if (a1 != v67)
  {
    sub_1BA4A2E80((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v45 = swift_getEnumCaseMultiPayload();
    *v32 = *v33;
    if (v45 == 1)
    {
      v32[1] = v33[1];
      v46 = type metadata accessor for GenericDataVisualization();
      v47 = *(int *)(v46 + 20);
      v48 = (char *)v32 + v47;
      v66 = (char *)v33 + v47;
      v49 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
      swift_bridgeObjectRetain();
      v49(v48, v66, v13);
      v50 = *(int *)(v46 + 24);
      v30 = v67;
      *(_QWORD *)((char *)v32 + v50) = *(_QWORD *)((char *)v33 + v50);
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  v51 = v23[9];
  v52 = (char *)a1 + v51;
  v53 = (char *)v30 + v51;
  sub_1BA6C5A68();
  v55 = v54;
  v56 = *(_QWORD *)(v54 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v52, 1, v54);
  v59 = v57(v53, 1, v55);
  if (!v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v52, v53, v55);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v55);
    goto LABEL_26;
  }
  if (v59)
  {
LABEL_26:
    sub_1BA6C5ACC(0);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v52, v53, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v52, 0, 1, v55);
  return a1;
}

_OWORD *_s8ResolvedVwtk_0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *a1 = *a2;
  v5 = a3[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  *(_OWORD *)((char *)a1 + v5) = *(_OWORD *)((char *)a2 + v5);
  v8 = (int *)type metadata accessor for FormatWebEmbed();
  v9 = v8[5];
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = sub_1BB86C67C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v14(v10, v11, v12);
  v15 = v8[6];
  v16 = &v6[v15];
  v17 = &v7[v15];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(&v7[v15], 1, v12))
  {
    sub_1BA6EF3B0();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v14(v16, v17, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
  }
  *(_QWORD *)&v6[v8[7]] = *(_QWORD *)&v7[v8[7]];
  *(_OWORD *)&v6[v8[8]] = *(_OWORD *)&v7[v8[8]];
  *(_OWORD *)&v6[v8[9]] = *(_OWORD *)&v7[v8[9]];
  *(_QWORD *)&v6[v8[10]] = *(_QWORD *)&v7[v8[10]];
  *(_QWORD *)&v6[v8[11]] = *(_QWORD *)&v7[v8[11]];
  *(_QWORD *)&v6[v8[12]] = *(_QWORD *)&v7[v8[12]];
  v19 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
  v20 = a3[8];
  v21 = (_OWORD *)((char *)a1 + v20);
  v22 = (_OWORD *)((char *)a2 + v20);
  v23 = type metadata accessor for WebEmbedDataVisualization();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1BA6CAB4C(0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v21 = *v22;
      v26 = type metadata accessor for GenericDataVisualization();
      v14((char *)v21 + *(int *)(v26 + 20), (char *)v22 + *(int *)(v26 + 20), v12);
      *(_QWORD *)((char *)v21 + *(int *)(v26 + 24)) = *(_QWORD *)((char *)v22 + *(int *)(v26 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(v24 + 64));
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v27 = a3[9];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  sub_1BA6C5A68();
  v31 = v30;
  v32 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v30))
  {
    sub_1BA6C5ACC(0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v28, v29, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
  }
  return a1;
}

_QWORD *_s8ResolvedVwta_0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v58;
  int *v59;
  _QWORD *v60;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v59 = a3;
  v60 = a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)((char *)a2 + v7);
  *((_QWORD *)v8 + 1) = v10;
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for FormatWebEmbed();
  v12 = v11[5];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = sub_1BB86C67C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, char *, uint64_t))(v16 + 40);
  v17(v13, v14, v15);
  v18 = v11[6];
  v19 = &v8[v18];
  v20 = &v9[v18];
  v58 = v16;
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v22 = v21(&v8[v18], 1, v15);
  v23 = v21(v20, 1, v15);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v19, v20, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v19, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v19, v15);
LABEL_6:
    sub_1BA6EF3B0();
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  v17(v19, v20, v15);
LABEL_7:
  *(_QWORD *)&v8[v11[7]] = *(_QWORD *)&v9[v11[7]];
  swift_release();
  v25 = v11[8];
  v26 = &v8[v25];
  v27 = &v9[v25];
  v29 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  v30 = v11[9];
  v31 = &v8[v30];
  v32 = &v9[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = v34;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[v11[10]] = *(_QWORD *)&v9[v11[10]];
  *(_QWORD *)&v8[v11[11]] = *(_QWORD *)&v9[v11[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[v11[12]] = *(_QWORD *)&v9[v11[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v59[6]) = *(_QWORD *)((char *)v60 + v59[6]);
  swift_release();
  *(_QWORD *)((char *)a1 + v59[7]) = *(_QWORD *)((char *)v60 + v59[7]);
  swift_release();
  v35 = v59[8];
  v36 = (char *)a1 + v35;
  v37 = (char *)v60 + v35;
  v38 = type metadata accessor for WebEmbedDataVisualization();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      if (a1 == v60)
        goto LABEL_21;
      sub_1BA4A2E80((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)v36 = *(_OWORD *)v37;
        v46 = type metadata accessor for GenericDataVisualization();
        (*(void (**)(char *, char *, uint64_t))(v58 + 32))(&v36[*(int *)(v46 + 20)], &v37[*(int *)(v46 + 20)], v15);
        *(_QWORD *)&v36[*(int *)(v46 + 24)] = *(_QWORD *)&v37[*(int *)(v46 + 24)];
        swift_storeEnumTagMultiPayload();
        goto LABEL_21;
      }
      v45 = *(_QWORD *)(v39 + 64);
LABEL_14:
      memcpy(v36, v37, v45);
      goto LABEL_21;
    }
    sub_1BA4A2E80((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
LABEL_13:
    sub_1BA6CAB4C(0);
    v45 = *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64);
    goto LABEL_14;
  }
  if (v42)
    goto LABEL_13;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)v36 = *(_OWORD *)v37;
    v43 = type metadata accessor for GenericDataVisualization();
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(&v36[*(int *)(v43 + 20)], &v37[*(int *)(v43 + 20)], v15);
    *(_QWORD *)&v36[*(int *)(v43 + 24)] = *(_QWORD *)&v37[*(int *)(v43 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v36, v37, *(_QWORD *)(v39 + 64));
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_21:
  v47 = v59[9];
  v48 = (char *)a1 + v47;
  v49 = (char *)v60 + v47;
  sub_1BA6C5A68();
  v51 = v50;
  v52 = *(_QWORD *)(v50 - 8);
  v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  v54 = v53(v48, 1, v50);
  v55 = v53(v49, 1, v51);
  if (!v54)
  {
    if (!v55)
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 40))(v48, v49, v51);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v48, v51);
    goto LABEL_26;
  }
  if (v55)
  {
LABEL_26:
    sub_1BA6C5ACC(0);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v48, v49, v51);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v48, 0, 1, v51);
  return a1;
}

uint64_t sub_1BB2CACA4(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FormatWebEmbed();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      sub_1BA6CAB4C(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        sub_1BA6C5ACC(0);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1BB2CAD68(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for FormatWebEmbed();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_1BA6CAB4C(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        sub_1BA6C5ACC(0);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t _s8ResolvedV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB2CAE74 + 4 * byte_1BB90322D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB2CAEA8 + 4 * byte_1BB903228[v4]))();
}

uint64_t sub_1BB2CAEA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2CAEB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2CAEB8);
  return result;
}

uint64_t sub_1BB2CAEC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2CAECCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB2CAED0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2CAED8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa_0()
{
  return &_s8ResolvedV10CodingKeysON_0;
}

unint64_t sub_1BB2CAEF8()
{
  unint64_t result;

  result = qword_1EF2C0990;
  if (!qword_1EF2C0990)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9033CC, &_s8ResolvedV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2C0990);
  }
  return result;
}

unint64_t sub_1BB2CAF40()
{
  unint64_t result;

  result = qword_1ED39B268;
  if (!qword_1ED39B268)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB903304, &_s8ResolvedV10CodingKeysON_0);
    atomic_store(result, (unint64_t *)&qword_1ED39B268);
  }
  return result;
}

unint64_t sub_1BB2CAF88()
{
  unint64_t result;

  result = qword_1ED39B250[0];
  if (!qword_1ED39B250[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90332C, &_s8ResolvedV10CodingKeysON_0);
    atomic_store(result, qword_1ED39B250);
  }
  return result;
}

uint64_t sub_1BB2CAFCC()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BB2CB018()
{
  return 8;
}

_QWORD *sub_1BB2CB024(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1BB2CB030()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1BB2CB0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*(id *)(v2 + 40), sel_videoURL);
  if (v3)
  {
    v4 = v3;
    sub_1BB86C5EC();

    v5 = sub_1BB86C67C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 0, 1, v5);
  }
  else
  {
    v6 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 1, 1, v6);
  }
  return sub_1BA7F0AD4(v1, v0);
}

BOOL static FormatHeadlineBinding.URL.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_1BB2CB308(char *a1)
{
  sub_1BB7F9414(*a1);
}

void sub_1BB2CB314()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB2CB360()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB2CB3D8()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB2CB414()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB2CB478()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB2CB4C0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2CB538()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB2CB568 + 4 * byte_1BB90348C[*v0]))();
}

void sub_1BB2CB568(_QWORD *a1@<X8>)
{
  *a1 = 0x6174436F65646976;
  a1[1] = 0xEB000000004C5255;
}

void sub_1BB2CB58C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x4C52556574756F72;
  a1[1] = v1;
}

void sub_1BB2CB5A4(_QWORD *a1@<X8>)
{
  *a1 = 0x55746E65746E6F63;
  a1[1] = 0xEA00000000004C52;
}

uint64_t sub_1BB2CB5C4()
{
  sub_1BA82B094();
  return sub_1BB872D0C();
}

void sub_1BB2CB610(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252318;
}

uint64_t FormatHeadlineBinding.URL.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatHeadlineBinding.URL.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB2CB690()
{
  unint64_t result;

  result = qword_1EF2C0998;
  if (!qword_1EF2C0998)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.URL, &type metadata for FormatHeadlineBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1EF2C0998);
  }
  return result;
}

unint64_t sub_1BB2CB6D4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2CB6F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2CB6F8()
{
  unint64_t result;

  result = qword_1EF2C09A0;
  if (!qword_1EF2C09A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.URL, &type metadata for FormatHeadlineBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1EF2C09A0);
  }
  return result;
}

unint64_t sub_1BB2CB73C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82AF58();
  a1[2] = sub_1BAEE890C();
  result = sub_1BB2CB690();
  a1[3] = result;
  return result;
}

void sub_1BB2CB770(_QWORD *a1)
{
  FormatHeadlineBinding.URL.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.URL()
{
  return &type metadata for FormatHeadlineBinding.URL;
}

ValueMetadata *_s14descr1E72FBAF1C3URLO10CodingTypeOMa()
{
  return &_s14descr1E72FBAF1C3URLO10CodingTypeON;
}

unint64_t sub_1BB2CB7A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2C09A8;
  if (!qword_1EF2C09A8)
  {
    sub_1BB2CB7F0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2C09A8);
  }
  return result;
}

void sub_1BB2CB7F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C09B0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C09B0);
  }
}

unint64_t sub_1BB2CB848()
{
  unint64_t result;

  result = qword_1EF2C09B8;
  if (!qword_1EF2C09B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB903698, &_s14descr1E72FBAF1C3URLO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2C09B8);
  }
  return result;
}

void sub_1BB2CB88C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;

  v18[4] = a3;
  v18[3] = a2;
  v19 = a1;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v18[1] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v18[2] = (char *)v18 - v6;
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v18[0] = (char *)v18 - v9;
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  v14 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  __asm { BR              X10 }
}

uint64_t sub_1BB2CBA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  sub_1BA76C878(*(_QWORD *)(v3 - 104), v2);
  v4 = objc_msgSend(*(id *)(v2 + 40), sel_videoURL);
  if (v4)
  {
    v5 = v4;
    sub_1BB86C5EC();

    v6 = sub_1BB86C67C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v1, 0, 1, v6);
  }
  else
  {
    v7 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v1, 1, 1, v7);
  }
  sub_1BA7F0AD4(v1, v0);
  v8 = *(_QWORD **)(v3 - 96);
  sub_1BAAF770C(0x5255206F65646956, 0xE90000000000004CLL, v0, v8);
  sub_1BA717468(v2);
  v9 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
}

void static FormatColorModifyComponentProcessor.== infix(_:_:)(char *a1)
{
  sub_1BB7ED8CC(*a1);
  JUMPOUT(0x1BB2CBDD0);
}

unint64_t sub_1BB2CBDE4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2CBE08();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2CBE08()
{
  unint64_t result;

  result = qword_1EF2C09C0;
  if (!qword_1EF2C09C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorModifyComponentProcessor, &type metadata for FormatColorModifyComponentProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2C09C0);
  }
  return result;
}

uint64_t sub_1BB2CBE4C(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned __int8 v4;

  v2 = *(double *)(a1 + 8);
  v3 = *(double *)(a2 + 8);
  sub_1BB7ED8CC(*(_BYTE *)a1);
  return v4 & (v2 == v3);
}

unint64_t sub_1BB2CBE84(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6173BC();
  a1[2] = sub_1BA5D9B20();
  result = sub_1BB2CBEB8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2CBEB8()
{
  unint64_t result;

  result = qword_1EF2C09C8;
  if (!qword_1EF2C09C8)
  {
    result = MEMORY[0x1BCCE5B24]("턟+Ĥ\v", &type metadata for FormatColorModifyComponentProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2C09C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatColorModifyComponentProcessor()
{
  return &type metadata for FormatColorModifyComponentProcessor;
}

uint64_t FormatDateFormat.Context.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2CBF3C
                                                            + 4 * asc_1BB9037E0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1BB2CBF3C()
{
  return 0x63696D616E7964;
}

uint64_t sub_1BB2CBF50()
{
  return 0x6F6C61646E617473;
}

uint64_t sub_1BB2CBF6C()
{
  return 0x6D6574497473696CLL;
}

unint64_t sub_1BB2CBF84()
{
  return 0xD000000000000013;
}

unint64_t sub_1BB2CBFA4()
{
  return 0xD000000000000010;
}

uint64_t FormatDateFormat.Style.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2CBFE8 + 4 * byte_1BB9037E6[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1BB2CBFE8()
{
  return 0x74726F6873;
}

uint64_t sub_1BB2CBFFC()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1BB2CC010()
{
  return 1735290732;
}

uint64_t sub_1BB2CC01C()
{
  return 1819047270;
}

void static FormatDateFormat.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 1;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
}

uint64_t sub_1BB2CC03C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA49BD7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void FormatDateFormat.Custom.dateStyle.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void FormatDateFormat.Custom.timeStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

uint64_t FormatDateFormat.Custom.template.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void FormatDateFormat.Custom.context.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t FormatDateFormat.Custom.timeZone.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB2CC100@<X0>(_QWORD *a1@<X0>, unsigned __int8 *a2@<X8>)
{
  return FormatDateFormat.Custom.init(from:)(a1, a2);
}

uint64_t sub_1BB2CC114(_QWORD *a1)
{
  return FormatDateFormat.Custom.encode(to:)(a1);
}

NewsFeed::FormatDateFormat::Style_optional __swiftcall FormatDateFormat.Style.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatDateFormat::Style_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1BB2CC180()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB2CC1C4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB2CC22C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB2CC260()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB2CC2B4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB2CC2F4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatDateFormat::Style_optional sub_1BB2CC35C(Swift::String *a1)
{
  return FormatDateFormat.Style.init(rawValue:)(*a1);
}

uint64_t sub_1BB2CC368()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB2CC390 + 4 * byte_1BB9037FA[*v0]))();
}

void sub_1BB2CC390(_QWORD *a1@<X8>)
{
  *a1 = 0x74726F6873;
  a1[1] = 0xE500000000000000;
}

void sub_1BB2CC3A8(_QWORD *a1@<X8>)
{
  *a1 = 0x6D756964656DLL;
  a1[1] = 0xE600000000000000;
}

void sub_1BB2CC3C0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1735290732;
  a1[1] = v1;
}

void sub_1BB2CC3D0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1819047270;
  a1[1] = v1;
}

void sub_1BB2CC3E0(char *a1)
{
  sub_1BB807754(*a1);
}

uint64_t sub_1BB2CC3EC()
{
  sub_1BB2CCB74();
  return sub_1BB872D60();
}

uint64_t sub_1BB2CC448(_QWORD *a1)
{
  return FormatDateFormat.Style.encode(to:)(a1);
}

NewsFeed::FormatDateFormat::Context_optional __swiftcall FormatDateFormat.Context.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatDateFormat::Context_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1BB2CC4B4()
{
  char *v0;

  sub_1BA8D3A28(*v0);
}

void sub_1BB2CC4BC(uint64_t a1)
{
  char *v1;

  sub_1BA9D495C(a1, *v1);
}

void sub_1BB2CC4C4(uint64_t a1)
{
  char *v1;

  sub_1BAB0BC40(a1, *v1);
}

NewsFeed::FormatDateFormat::Context_optional sub_1BB2CC4CC(Swift::String *a1)
{
  return FormatDateFormat.Context.init(rawValue:)(*a1);
}

uint64_t sub_1BB2CC4D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatDateFormat.Context.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1BB2CC4FC(char *a1)
{
  sub_1BB807574(*a1);
}

uint64_t sub_1BB2CC508()
{
  sub_1BB2CCCDC();
  return sub_1BB872D60();
}

uint64_t sub_1BB2CC564(_QWORD *a1)
{
  return FormatDateFormat.Context.encode(to:)(a1);
}

void sub_1BB2CC578(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 1;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
}

BOOL _s8NewsFeed010FormatDateC0O6CustomV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  _BOOL8 result;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *a1;
  v5 = a1[1];
  v7 = *((_QWORD *)a1 + 1);
  v6 = *((_QWORD *)a1 + 2);
  v8 = a1[24];
  v9 = *((_QWORD *)a1 + 4);
  v10 = *((_QWORD *)a1 + 5);
  v11 = *a2;
  v12 = a2[1];
  v13 = *((_QWORD *)a2 + 1);
  v14 = *((_QWORD *)a2 + 2);
  v16 = *((_QWORD *)a2 + 4);
  v15 = *((_QWORD *)a2 + 5);
  if (v4 == 5)
  {
    if (v11 != 5)
      return 0;
  }
  else
  {
    if (v11 == 5)
      return 0;
    v32 = *((_QWORD *)a1 + 2);
    v33 = *((_QWORD *)a2 + 2);
    v17 = a1[24];
    v18 = *((_QWORD *)a2 + 4);
    v19 = *((_QWORD *)a2 + 5);
    v20 = *((_QWORD *)a1 + 5);
    v21 = *((_QWORD *)a1 + 4);
    v22 = *((_QWORD *)a2 + 1);
    sub_1BB807754(v4);
    v13 = v22;
    v9 = v21;
    v10 = v20;
    v15 = v19;
    v16 = v18;
    v8 = v17;
    v6 = v32;
    v14 = v33;
    if ((v23 & 1) == 0)
      return 0;
  }
  if (v5 == 5)
  {
    if (v12 != 5)
      return 0;
  }
  else
  {
    if (v12 == 5)
      return 0;
    v24 = v5;
    v25 = v9;
    v26 = v13;
    sub_1BB807754(v24);
    v13 = v26;
    v9 = v25;
    if ((v27 & 1) == 0)
      return 0;
  }
  if (!v6)
  {
    v28 = v9;
    if (v14)
      return 0;
    goto LABEL_18;
  }
  if (!v14)
    return 0;
  v28 = v9;
  if (v7 == v13 && v6 == v14 || (v29 = sub_1BB874398(), result = 0, (v29 & 1) != 0))
  {
LABEL_18:
    sub_1BB807574(v8);
    if ((v31 & 1) != 0)
    {
      if (v10)
        return v15 && (v28 == v16 && v10 == v15 || (sub_1BB874398() & 1) != 0);
      if (!v15)
        return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s8NewsFeed010FormatDateC0O2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  __int16 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v7 = a1[4];
  v6 = a1[5];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = a2[3];
  v12 = a2[4];
  v13 = a2[5];
  if (v5 == 1)
  {
    if (v10 != 1)
      goto LABEL_8;
    v14 = 1;
    sub_1BA7331A8(*a1, v3, 1);
    v15 = v8;
    v16 = v9;
    v17 = 1;
LABEL_10:
    sub_1BA7331A8(v15, v16, v17);
    return v14;
  }
  if (v5 != 2)
  {
    if ((unint64_t)(v10 - 1) < 2)
      goto LABEL_8;
    v28 = *a1;
    v29 = v3;
    v30 = v5;
    v31 = v4;
    v32 = v7;
    v33 = v6;
    v22 = v8;
    v23 = v9;
    v24 = v10;
    v25 = v11;
    v26 = v12;
    v27 = v13;
    v21 = v2;
    v19 = v2;
    sub_1BA7336E0(v8, v9, v10);
    sub_1BA7336E0(v19, v3, v5);
    sub_1BA7336E0(v8, v9, v10);
    sub_1BA7336E0(v21, v3, v5);
    v14 = _s8NewsFeed010FormatDateC0O6CustomV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)&v28, (unsigned __int8 *)&v22);
    sub_1BA7331A8(v21, v3, v5);
    sub_1BA7331A8(v8, v9, v10);
    sub_1BA7331A8(v8, v9, v10);
    v15 = v21;
    v16 = v3;
    v17 = v5;
    goto LABEL_10;
  }
  if (v10 != 2)
  {
LABEL_8:
    v18 = *a1;
    sub_1BA7336E0(*a2, a2[1], v10);
    sub_1BA7336E0(v18, v3, v5);
    sub_1BA7331A8(v18, v3, v5);
    sub_1BA7331A8(v8, v9, v10);
    return 0;
  }
  sub_1BA7331A8(*a1, v3, 2);
  sub_1BA7331A8(v8, v9, 2);
  return 1;
}

unint64_t sub_1BB2CCA0C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2CCA30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2CCA30()
{
  unint64_t result;

  result = qword_1EF2C09D0;
  if (!qword_1EF2C09D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Custom, &type metadata for FormatDateFormat.Custom);
    atomic_store(result, (unint64_t *)&qword_1EF2C09D0);
  }
  return result;
}

uint64_t sub_1BB2CCA74(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE8E84C, (uint64_t (*)(void))sub_1BAEF4044, (uint64_t (*)(void))sub_1BB2CCA90);
}

unint64_t sub_1BB2CCA90()
{
  unint64_t result;

  result = qword_1EF2C09D8;
  if (!qword_1EF2C09D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Custom, &type metadata for FormatDateFormat.Custom);
    atomic_store(result, (unint64_t *)&qword_1EF2C09D8);
  }
  return result;
}

unint64_t sub_1BB2CCAD8()
{
  unint64_t result;

  result = qword_1EF2C09E0;
  if (!qword_1EF2C09E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Style, &type metadata for FormatDateFormat.Style);
    atomic_store(result, (unint64_t *)&qword_1EF2C09E0);
  }
  return result;
}

uint64_t sub_1BB2CCB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA81722C(a1, a2, a3, (uint64_t (*)(void))sub_1BB2CCB30, (uint64_t (*)(void))sub_1BB2CCB74);
}

unint64_t sub_1BB2CCB30()
{
  unint64_t result;

  result = qword_1EF2C09E8;
  if (!qword_1EF2C09E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Style, &type metadata for FormatDateFormat.Style);
    atomic_store(result, (unint64_t *)&qword_1EF2C09E8);
  }
  return result;
}

unint64_t sub_1BB2CCB74()
{
  unint64_t result;

  result = qword_1EF2C09F0;
  if (!qword_1EF2C09F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Style, &type metadata for FormatDateFormat.Style);
    atomic_store(result, (unint64_t *)&qword_1EF2C09F0);
  }
  return result;
}

unint64_t sub_1BB2CCBB8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2CCBDC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2CCBDC()
{
  unint64_t result;

  result = qword_1EF2C09F8;
  if (!qword_1EF2C09F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Style, &type metadata for FormatDateFormat.Style);
    atomic_store(result, (unint64_t *)&qword_1EF2C09F8);
  }
  return result;
}

uint64_t sub_1BB2CCC20(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE8EA54, (uint64_t (*)(void))sub_1BAEF3FF4, (uint64_t (*)(void))sub_1BB2CCAD8);
}

unint64_t sub_1BB2CCC40()
{
  unint64_t result;

  result = qword_1EF2C0A00;
  if (!qword_1EF2C0A00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Context, &type metadata for FormatDateFormat.Context);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A00);
  }
  return result;
}

uint64_t sub_1BB2CCC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA81722C(a1, a2, a3, (uint64_t (*)(void))sub_1BB2CCC98, (uint64_t (*)(void))sub_1BB2CCCDC);
}

unint64_t sub_1BB2CCC98()
{
  unint64_t result;

  result = qword_1EF2C0A08;
  if (!qword_1EF2C0A08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Context, &type metadata for FormatDateFormat.Context);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A08);
  }
  return result;
}

unint64_t sub_1BB2CCCDC()
{
  unint64_t result;

  result = qword_1ED3A41D8;
  if (!qword_1ED3A41D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Context, &type metadata for FormatDateFormat.Context);
    atomic_store(result, (unint64_t *)&qword_1ED3A41D8);
  }
  return result;
}

unint64_t sub_1BB2CCD20(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2CCD44();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2CCD44()
{
  unint64_t result;

  result = qword_1EF2C0A10;
  if (!qword_1EF2C0A10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Context, &type metadata for FormatDateFormat.Context);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A10);
  }
  return result;
}

uint64_t sub_1BB2CCD88(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAE8EA98, (uint64_t (*)(void))sub_1BAEF3F34, (uint64_t (*)(void))sub_1BB2CCC40);
}

unint64_t sub_1BB2CCDA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2CCDC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2CCDC8()
{
  unint64_t result;

  result = qword_1EF2C0A18;
  if (!qword_1EF2C0A18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat, &type metadata for FormatDateFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A18);
  }
  return result;
}

uint64_t sub_1BB2CCE0C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA60D7B4, (uint64_t (*)(void))sub_1BA5FC9C4, (uint64_t (*)(void))sub_1BB2CCE28);
}

unint64_t sub_1BB2CCE28()
{
  unint64_t result;

  result = qword_1EF2C0A20;
  if (!qword_1EF2C0A20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat, &type metadata for FormatDateFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A20);
  }
  return result;
}

unint64_t destroy for FormatDateFormat(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 16);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FormatDateFormat(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 16);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = *(_QWORD *)(a2 + 16);
  if ((int)v4 - 1 < 0)
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v3;
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for FormatDateFormat(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  __int128 v8;
  __int128 v9;

  LODWORD(v4) = -1;
  if (*(_QWORD *)(a1 + 16) >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = *(_QWORD *)(a1 + 16);
  v6 = v5 - 1;
  if (*((_QWORD *)a2 + 2) < 0xFFFFFFFFuLL)
    v4 = *((_QWORD *)a2 + 2);
  v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      *(_BYTE *)(a1 + 1) = *((_BYTE *)a2 + 1);
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    v8 = *a2;
    v9 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v9;
    *(_OWORD *)a1 = v8;
    return a1;
  }
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *((_BYTE *)a2 + 1);
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for FormatDateFormat(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = *(_QWORD *)(a2 + 16);
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = *(_QWORD *)(a2 + 16);
    if ((int)v7 - 1 < 0)
    {
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      v10 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v10;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  return a1;
}

uint64_t sub_1BB2CD0E8(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

double sub_1BB2CD10C(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(a1 + 40) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDateFormat()
{
  return &type metadata for FormatDateFormat;
}

uint64_t destroy for FormatDateFormat.Custom()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDateFormat.Custom(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatDateFormat.Custom(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatDateFormat.Custom(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDateFormat.Custom(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatDateFormat.Custom(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDateFormat.Custom()
{
  return &type metadata for FormatDateFormat.Custom;
}

uint64_t storeEnumTagSinglePayload for FormatDateFormat.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB2CD3BC + 4 * byte_1BB903804[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB2CD3F0 + 4 * byte_1BB9037FF[v4]))();
}

uint64_t sub_1BB2CD3F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2CD3F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2CD400);
  return result;
}

uint64_t sub_1BB2CD40C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2CD414);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB2CD418(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2CD420(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDateFormat.Style()
{
  return &type metadata for FormatDateFormat.Style;
}

uint64_t storeEnumTagSinglePayload for FormatDateFormat.Context(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB2CD488 + 4 * byte_1BB90380E[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB2CD4BC + 4 * byte_1BB903809[v4]))();
}

uint64_t sub_1BB2CD4BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2CD4C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2CD4CCLL);
  return result;
}

uint64_t sub_1BB2CD4D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2CD4E0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB2CD4E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2CD4EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDateFormat.Context()
{
  return &type metadata for FormatDateFormat.Context;
}

uint64_t FormatLayoutViewDebugger.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_1BA6B0504;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t FormatLayoutViewDebugger.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = sub_1BA6B0504;
  *(_QWORD *)(v0 + 24) = 0;
  return result;
}

uint64_t FormatLayoutViewDebugger.__allocating_init(block:)(uint64_t a1, uint64_t a2)
{
  return sub_1BB2CD618(a1, a2, (uint64_t)&unk_1E72FC030, (uint64_t)sub_1BB2CD5FC);
}

{
  return sub_1BB2CD618(a1, a2, (uint64_t)&unk_1E72FC080, (uint64_t)sub_1BB2CD774);
}

uint64_t sub_1BB2CD55C(__int128 *a1, uint64_t (*a2)(__int128 *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *a1;
  v2 = a2(&v6);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v3 = v2;
  sub_1BA65E330();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)&v6 = v4;
  sub_1BB872DCC();
  return v6;
}

uint64_t sub_1BB2CD5D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB2CD5FC(__int128 *a1)
{
  uint64_t v1;

  return sub_1BB2CD55C(a1, *(uint64_t (**)(__int128 *))(v1 + 16));
}

uint64_t sub_1BB2CD618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = swift_allocObject();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v7 + 16) = a4;
  *(_QWORD *)(v7 + 24) = v8;
  return v7;
}

uint64_t sub_1BB2CD680(__int128 *a1, uint64_t (*a2)(__int128 *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  __int128 v8;

  v8 = *a1;
  v2 = a2(&v8);
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v8 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v4; ++i)
    {
      if (*(_QWORD *)(v2 + 8 * i + 32))
      {
        v6 = swift_retain();
        MEMORY[0x1BCCE36AC](v6);
        if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
    }
    swift_bridgeObjectRelease();
    v3 = v8;
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BB2CD774(__int128 *a1)
{
  uint64_t v1;

  return sub_1BB2CD680(a1, *(uint64_t (**)(__int128 *))(v1 + 16));
}

uint64_t sub_1BB2CD77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(__int128 *);
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;

  v5 = v4;
  v46 = a4;
  v9 = sub_1BB86FD90();
  v44 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v16, a1, a2, v14);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, a2);
  v20 = *(uint64_t (**)(__int128 *))(v5 + 16);
  *(_QWORD *)&v47 = v17;
  *((_QWORD *)&v47 + 1) = v19;
  swift_retain();
  v21 = v20(&v47);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BAC88310(0);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BB87CE70;
  v23 = (void *)sub_1BB872970();
  v43 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v23);

  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1BB87FC80;
  v25 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 8);
  v26 = v25(a2, a3);
  v49 = 0;
  v47 = 0u;
  v48 = 0u;
  v27 = sub_1BB8119E8(v26, (uint64_t)&v47);
  swift_release();
  sub_1BA8999A0((uint64_t)&v47);
  v28 = 0;
  if (v27)
  {
    v28 = sub_1BB86FB38();
    v29 = MEMORY[0x1E0DB77B0];
  }
  else
  {
    v29 = 0;
    *(_QWORD *)(v24 + 40) = 0;
    *(_QWORD *)(v24 + 48) = 0;
  }
  *(_QWORD *)(v24 + 32) = v27;
  *(_QWORD *)(v24 + 56) = v28;
  *(_QWORD *)(v24 + 64) = v29;
  v30 = v25(a2, a3);
  v49 = 0;
  v47 = 0u;
  v48 = 0u;
  v31 = _s5TeaUI15ContextMenuItemC8NewsFeedE05debugG6Editor14groupLayoutKey19rendererEnvironmentACSgAD05GroupkL0CSg_AA08RendererN4Type_pSgtFZ_0(v30, (uint64_t)&v47);
  swift_release();
  sub_1BA8999A0((uint64_t)&v47);
  v32 = 0;
  if (v31)
  {
    v32 = sub_1BB86FB38();
    v33 = MEMORY[0x1E0DB77B0];
  }
  else
  {
    v33 = 0;
    *(_QWORD *)(v24 + 80) = 0;
    *(_QWORD *)(v24 + 88) = 0;
  }
  *(_QWORD *)(v24 + 72) = v31;
  *(_QWORD *)(v24 + 96) = v32;
  *(_QWORD *)(v24 + 104) = v33;
  v34 = v25(a2, a3);
  v49 = 0;
  v47 = 0u;
  v48 = 0u;
  v35 = sub_1BB811E64(v34, (uint64_t)&v47);
  swift_release();
  sub_1BA8999A0((uint64_t)&v47);
  v36 = 0;
  if (v35)
  {
    v36 = sub_1BB86FB38();
    v37 = MEMORY[0x1E0DB77B0];
  }
  else
  {
    v37 = 0;
    *(_QWORD *)(v24 + 120) = 0;
    *(_QWORD *)(v24 + 128) = 0;
  }
  *(_QWORD *)(v24 + 112) = v35;
  *(_QWORD *)(v24 + 136) = v36;
  *(_QWORD *)(v24 + 144) = v37;
  v38 = sub_1BB86FD84();
  v39 = sub_1BA975EB4(v21);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v47 = v24;
  sub_1BB386EF8(v39);
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v11, *MEMORY[0x1E0DB7CF0], v45);
  swift_allocObject();
  v40 = sub_1BB86FD6C();
  v41 = MEMORY[0x1E0DB7CC8];
  *(_QWORD *)(v22 + 56) = v38;
  *(_QWORD *)(v22 + 64) = v41;
  *(_QWORD *)(v22 + 32) = v40;
  sub_1BB86FD78();
  return swift_bridgeObjectRelease();
}

uint64_t FormatLayoutViewDebugger.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t FormatLayoutViewDebuggerContext.itemIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutViewDebuggerContext.sectionIdentifier<A, B>(blueprint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v33 = a1;
  v34 = a2;
  v35 = a3;
  v36 = a4;
  v37 = a5;
  v32 = sub_1BB86FD0C();
  v31 = sub_1BB873A2C();
  v10 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v12 = (char *)&v30 - v11;
  v34 = a2;
  v35 = a3;
  v36 = a4;
  v37 = a5;
  v13 = sub_1BB871680();
  v14 = sub_1BB873A2C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v30 - v16;
  v18 = *(_QWORD *)(v13 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v30 - v21;
  v23 = *(_QWORD *)(v5 + 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v17, v33, v14, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    v24 = v10;
    v25 = v31;
    v26 = v32;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v17, v13);
    if (!v23)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v13);
      return v23;
    }
    sub_1BB871644();
    v27 = v26;
    v28 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v12, 1, v27) != 1)
    {
      v23 = sub_1BB86FCC4();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v13);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v27);
      return v23;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v13);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
  }
  return 0;
}

uint64_t method lookup function for FormatLayoutViewDebugger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatLayoutViewDebugger.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of FormatLayoutViewDebugger.__allocating_init(block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for FormatLayoutViewDebuggerContext()
{
  return &type metadata for FormatLayoutViewDebuggerContext;
}

uint64_t static FormatMicaNodeContent.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB15DC70();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FormatMicaNodeArchive();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v32 - v15;
  v17 = *a1;
  v18 = *a2;
  if (v17 >> 62)
  {
    if (v17 >> 62 == 1)
    {
      if (v18 >> 62 != 1)
        goto LABEL_16;
      v19 = *(_QWORD *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      v20 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v18 + 24);
      v34 = *(_QWORD *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      v35 = v19;
      v32 = v20;
      v33 = v21;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if ((static FormatMicaNodeContent.== infix(_:_:)(&v34, &v32) & 1) != 0)
      {
        v22 = static FormatMicaNodeContent.== infix(_:_:)(&v35, &v33);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        if ((v22 & 1) != 0)
          goto LABEL_12;
        goto LABEL_16;
      }
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      if (v18 >> 62 != 2)
        goto LABEL_16;
      v27 = *(_QWORD *)(v17 + 24);
      v28 = *(_QWORD *)(v18 + 16);
      v29 = *(_QWORD *)(v18 + 24);
      v34 = *(_QWORD *)((v17 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      v35 = v27;
      v32 = v28;
      v33 = v29;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatMicaNodeContent.== infix(_:_:)(&v34, &v32) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30 = sub_1BA8916A0(v27, v29);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if ((v30 & 1) != 0)
        {
LABEL_12:
          v26 = 1;
          return v26 & 1;
        }
LABEL_16:
        v26 = 0;
        return v26 & 1;
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_release();
    goto LABEL_16;
  }
  if (v18 >> 62)
    goto LABEL_16;
  v23 = swift_projectBox();
  v24 = swift_projectBox();
  sub_1BB15DD0C(v23, (uint64_t)v16);
  sub_1BB15DD0C(v24, (uint64_t)v13);
  v25 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1BB15DD0C((uint64_t)v16, (uint64_t)v10);
  sub_1BB15DD0C((uint64_t)v13, v25);
  sub_1BB0428DC((uint64_t)v10, (uint64_t)v6);
  swift_retain();
  swift_retain();
  v26 = _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)v6, v25);
  sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
  sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatMicaNodeArchive);
  swift_release();
  swift_release();
  return v26 & 1;
}

uint64_t sub_1BB2CE1D8@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatMicaNodeContent.init(from:)(a1, a2);
}

uint64_t sub_1BB2CE1EC(_QWORD *a1)
{
  return FormatMicaNodeContent.encode(to:)(a1);
}

unint64_t sub_1BB2CE204(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAEA5790();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2CE228(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEA25C8();
  a1[2] = sub_1BAEEF8E0();
  result = sub_1BB2CE25C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2CE25C()
{
  unint64_t result;

  result = qword_1EF2C0A28;
  if (!qword_1EF2C0A28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaNodeContent, &type metadata for FormatMicaNodeContent);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A28);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMicaNodeContent()
{
  return &type metadata for FormatMicaNodeContent;
}

float static FormatPercentage.default.getter@<S0>(_DWORD *a1@<X8>)
{
  float result;

  swift_beginAccess();
  result = *(float *)&dword_1EF2C0A30;
  *a1 = dword_1EF2C0A30;
  return result;
}

uint64_t static FormatPercentage.default.setter(int *a1)
{
  int v1;
  uint64_t result;

  v1 = *a1;
  result = swift_beginAccess();
  dword_1EF2C0A30 = v1;
  return result;
}

uint64_t (*static FormatPercentage.default.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL static FormatPercentage.== infix(_:_:)(float *a1, float *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1BB2CE398(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2CE3BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2CE3BC()
{
  unint64_t result;

  result = qword_1EF2C0A38;
  if (!qword_1EF2C0A38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPercentage, &type metadata for FormatPercentage);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A38);
  }
  return result;
}

float sub_1BB2CE400@<S0>(_DWORD *a1@<X8>)
{
  float result;

  swift_beginAccess();
  result = *(float *)&dword_1EF2C0A30;
  *a1 = dword_1EF2C0A30;
  return result;
}

unint64_t sub_1BB2CE448(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4E1F8C();
  a1[2] = sub_1BAEECAEC();
  result = sub_1BB2CE47C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2CE47C()
{
  unint64_t result;

  result = qword_1EF2C0A40;
  if (!qword_1EF2C0A40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPercentage, &type metadata for FormatPercentage);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A40);
  }
  return result;
}

uint64_t sub_1BB2CE4C0(_QWORD *a1)
{
  return FormatPercentage.encode(to:)(a1);
}

BOOL sub_1BB2CE4D4(float *a1, float *a2)
{
  return *a1 == *a2;
}

ValueMetadata *type metadata accessor for FormatPercentage()
{
  return &type metadata for FormatPercentage;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceRootNode()
{
  return &type metadata for SportsTaxonomyGraphResourceRootNode;
}

uint64_t sub_1BB2CE508(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  sub_1BB2CE8BC(0, &qword_1EF2B0288, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB12C54();
  sub_1BB8746C8();
  v10[1] = a2;
  sub_1BAB12C98();
  sub_1BB2CE918((unint64_t *)&qword_1EF2B0290, (uint64_t (*)(void))sub_1BAB12D4C, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB2CE628()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1BB2CE640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E6572646C696863 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB2CE6D4()
{
  sub_1BAB12C54();
  return sub_1BB874710();
}

uint64_t sub_1BB2CE6FC()
{
  sub_1BAB12C54();
  return sub_1BB87471C();
}

_QWORD *sub_1BB2CE724@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BB2CE764(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB2CE74C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BB2CE508(a1, *v1);
}

_QWORD *sub_1BB2CE764(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  _QWORD v10[2];

  sub_1BB2CE8BC(0, &qword_1ED3AB570, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB12C54();
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BAB12C98();
    sub_1BB2CE918(&qword_1ED3AB048, (uint64_t (*)(void))sub_1BB2CE97C, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v8 = (_QWORD *)v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

void sub_1BB2CE8BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAB12C54();
    v7 = a3(a1, &type metadata for SportsTaxonomyGraphResourceRootNode.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB2CE918(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BAB12C98();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB2CE97C()
{
  unint64_t result;

  result = qword_1ED3A9520;
  if (!qword_1ED3A9520)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89E830, &type metadata for SportsTaxonomyGraphResourceNode);
    atomic_store(result, (unint64_t *)&qword_1ED3A9520);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResourceRootNode.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB2CEA00 + 4 * asc_1BB903EF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB2CEA20 + 4 * byte_1BB903EF5[v4]))();
}

_BYTE *sub_1BB2CEA00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB2CEA20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2CEA28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2CEA30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2CEA38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2CEA40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceRootNode.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceRootNode.CodingKeys;
}

unint64_t sub_1BB2CEA60()
{
  unint64_t result;

  result = qword_1EF2C0A48;
  if (!qword_1EF2C0A48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904010, &type metadata for SportsTaxonomyGraphResourceRootNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A48);
  }
  return result;
}

unint64_t sub_1BB2CEAA8()
{
  unint64_t result;

  result = qword_1ED3AA288;
  if (!qword_1ED3AA288)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB903F80, &type metadata for SportsTaxonomyGraphResourceRootNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA288);
  }
  return result;
}

unint64_t sub_1BB2CEAF0()
{
  unint64_t result;

  result = qword_1ED3AA280;
  if (!qword_1ED3AA280)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB903FA8, &type metadata for SportsTaxonomyGraphResourceRootNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA280);
  }
  return result;
}

uint64_t sub_1BB2CEB34()
{
  _QWORD *v0;

  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  *v0 = 0xD00000000000006ELL;
  v0[1] = 0x80000001BB9648B0;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BB2CEBAC()
{
  return sub_1BB2CEB34();
}

uint64_t initializeWithCopy for FormatPrefetchContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = a2 + 32;
  v5 = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    v8 = *(void **)(a2 + 40);
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = v8;
    v9 = *(_QWORD *)(a2 + 56);
    v10 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 64) = v10;
    swift_bridgeObjectRetain();
    v11 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v6 + 32);
  }
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatPrefetchContext(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v6 = (_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v5)
    {
      *(_QWORD *)(a1 + 32) = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7 = *(void **)(a1 + 40);
      v8 = *(void **)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v8;
      v9 = v8;

      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAB52240(a1 + 32);
      v12 = *(_QWORD *)(a2 + 64);
      v13 = *(_OWORD *)(a2 + 48);
      *v4 = *v6;
      *(_OWORD *)(a1 + 48) = v13;
      *(_QWORD *)(a1 + 64) = v12;
    }
  }
  else if (v5)
  {
    *(_QWORD *)(a1 + 32) = v5;
    v10 = *(void **)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    v11 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v14 = *v6;
    v15 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *v4 = v14;
    *(_OWORD *)(a1 + 48) = v15;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatPrefetchContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  if (!v5)
  {
    sub_1BAB52240(a1 + 32);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  return a1;
}

uint64_t sub_1BB2CEF34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;

  v4 = type metadata accessor for FormatOptionsNodeStatementResult();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3D2588, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementEvaluation, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v78 - v11;
  v13 = type metadata accessor for FormatOptionsNodeStatement();
  sub_1BB46ED84(a1, (uint64_t)v12);
  if (!v2)
  {
    sub_1BA5E01A4((uint64_t)v12, v9, &qword_1ED3D2588, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementEvaluation);
    v14 = type metadata accessor for FormatOptionsNodeStatementEvaluation();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v9, 1, v14) == 1)
    {
      sub_1BB2D0460((uint64_t)v12);
      return MEMORY[0x1E0DEE9D8];
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((_DWORD)EnumCaseMultiPayload == 1)
      {
        v16 = *(_QWORD *)v9;
        MEMORY[0x1E0C80A78](EnumCaseMultiPayload);
        v78[-2] = v1;
        v9 = sub_1BB2D04BC(v16, (void (*)(_QWORD, _QWORD, char *))sub_1BB2D04B4, (uint64_t)&v78[-4]);
        sub_1BB2D0460((uint64_t)v12);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BA5193C4(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementResult);
        sub_1BA4B07F0(0, &qword_1ED3B9E20, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v17 = type metadata accessor for FormatOption();
        v18 = *(unsigned __int8 *)(*(_QWORD *)(v17 - 8) + 80);
        v80 = (v18 + 32) & ~v18;
        v81 = v17;
        v19 = swift_allocObject();
        v83 = 0;
        v84 = (uint64_t *)v19;
        *(_OWORD *)(v19 + 16) = xmmword_1BB87CE70;
        v20 = v1[1];
        v21 = *(uint64_t *)((char *)v1 + *(int *)(v13 + 24));
        v9 = *(_QWORD *)v6;
        v22 = *(_QWORD *)(v21 + 16);
        v82 = *v1;
        if (v22)
        {
          v23 = v21 + 32;
          v78[1] = v9 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain_n();
          v78[2] = v21;
          swift_bridgeObjectRetain_n();
          v79 = v20;
          swift_bridgeObjectRetain();
          v24 = 0;
          v87 = v6;
          v88 = v12;
          v89 = v4;
          v90 = v21 + 32;
          v86 = v22;
          do
          {
            v27 = *(unsigned __int8 *)(v23 + v24);
            if (v27 >> 6)
            {
              v28 = (unint64_t)v9 >> 60;
              if (v27 >> 6 == 1)
              {
                if (v28 != 5)
                  goto LABEL_46;
                v94 = v24;
                v29 = v9 & 0xFFFFFFFFFFFFFFFLL;
                v30 = *(_QWORD *)(v9 + 16);
                v31 = *(_QWORD *)(v9 + 24);
                v32 = *(_QWORD *)(v9 + 32);
                if ((v27 & 1) != 0)
                {
                  v61 = HIBYTE(v31) & 0xF;
                  if ((v31 & 0x2000000000000000) == 0)
                    v61 = v30 & 0xFFFFFFFFFFFFLL;
                  v93 = v61;
                  v62 = *(_QWORD *)(v32 + 16);
                  if (v62)
                  {
                    v96 = v29;
                    v97 = MEMORY[0x1E0DEE9D8];
                    swift_bridgeObjectRetain();
                    sub_1BAC79F1C(0, v62, 0);
                    v63 = v97;
                    v95 = v32;
                    v64 = (_QWORD *)(v32 + 56);
                    do
                    {
                      v66 = *(v64 - 3);
                      v65 = *(v64 - 2);
                      if ((*v64 & 0x2000000000000000) != 0)
                        v67 = HIBYTE(*v64) & 0xFLL;
                      else
                        v67 = *(v64 - 1) & 0xFFFFFFFFFFFFLL;
                      v97 = v63;
                      v69 = *(_QWORD *)(v63 + 16);
                      v68 = *(_QWORD *)(v63 + 24);
                      swift_bridgeObjectRetain();
                      if (v69 >= v68 >> 1)
                      {
                        sub_1BAC79F1C(v68 > 1, v69 + 1, 1);
                        v63 = v97;
                      }
                      v64 += 4;
                      *(_QWORD *)(v63 + 16) = v69 + 1;
                      v70 = v63 + 24 * v69;
                      *(_QWORD *)(v70 + 32) = v66;
                      *(_QWORD *)(v70 + 40) = v65;
                      *(_BYTE *)(v70 + 48) = v67 == 0;
                      --v62;
                    }
                    while (v62);
                    swift_bridgeObjectRelease();
                    v6 = v87;
                    v12 = v88;
                    v22 = v86;
                    v23 = v90;
                  }
                  else
                  {
                    v63 = MEMORY[0x1E0DEE9D8];
                  }
                  v9 = swift_allocObject();
                  *(_BYTE *)(v9 + 16) = v93 == 0;
                  *(_QWORD *)(v9 + 24) = v63;
                  swift_release();
                  v24 = v94;
                }
                else
                {
                  v96 = v29;
                  v33 = sub_1BB872AB4();
                  v34 = v33;
                  v35 = *(_QWORD *)(v32 + 16);
                  if (v35)
                  {
                    v93 = v33;
                    v97 = MEMORY[0x1E0DEE9D8];
                    swift_bridgeObjectRetain();
                    sub_1BAC79F70(0, v35, 0);
                    v36 = v97;
                    v95 = v32;
                    v37 = v32 + 56;
                    do
                    {
                      v39 = *(_QWORD *)(v37 - 24);
                      v38 = *(_QWORD *)(v37 - 16);
                      swift_bridgeObjectRetain_n();
                      swift_bridgeObjectRetain();
                      v40 = sub_1BB872AB4();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      v97 = v36;
                      v42 = *(_QWORD *)(v36 + 16);
                      v41 = *(_QWORD *)(v36 + 24);
                      if (v42 >= v41 >> 1)
                      {
                        sub_1BAC79F70(v41 > 1, v42 + 1, 1);
                        v36 = v97;
                      }
                      v37 += 32;
                      *(_QWORD *)(v36 + 16) = v42 + 1;
                      v43 = (_QWORD *)(v36 + 24 * v42);
                      v43[4] = v39;
                      v43[5] = v38;
                      v43[6] = v40;
                      --v35;
                    }
                    while (v35);
                    swift_bridgeObjectRelease();
                    v6 = v87;
                    v12 = v88;
                    v4 = v89;
                    v22 = v86;
                    v34 = v93;
                  }
                  else
                  {
                    v36 = MEMORY[0x1E0DEE9D8];
                  }
                  v71 = swift_allocObject();
                  *(_QWORD *)(v71 + 16) = v34;
                  *(_QWORD *)(v71 + 24) = v36;
                  swift_release();
                  v9 = v71 | 0x4000000000000000;
                  v23 = v90;
                  v24 = v94;
                }
              }
              else
              {
                if (v28 != 4)
                {
LABEL_46:
                  type metadata accessor for FormatLayoutError();
                  sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
                  swift_allocError();
                  *(_BYTE *)v73 = v27;
                  *(_QWORD *)(v73 + 8) = v9;
                  swift_storeEnumTagMultiPayload();
                  swift_retain();
                  swift_willThrow();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease_n();
                  v84[2] = 0;
                  swift_release();
                  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementResult);
                  sub_1BB2D0460((uint64_t)v12);
                  return v9;
                }
                v46 = *(_QWORD *)(v9 + 16);
                v47 = *(_QWORD *)(v9 + 24);
                v93 = v9;
                v97 = v46;
                v48 = sub_1BA6F0168();
                swift_bridgeObjectRetain();
                v95 = v48;
                v49 = sub_1BB873B58();
                v91 = v50;
                v92 = v49;
                v51 = *(_QWORD *)(v47 + 16);
                if (v51)
                {
                  v94 = v24;
                  v97 = MEMORY[0x1E0DEE9D8];
                  swift_bridgeObjectRetain();
                  sub_1BAC79F38(0, v51, 0);
                  v52 = v97;
                  v85 = v47;
                  v53 = (uint64_t *)(v47 + 48);
                  do
                  {
                    v54 = *(v53 - 1);
                    v96 = *(v53 - 2);
                    v99 = *v53;
                    swift_bridgeObjectRetain();
                    v55 = sub_1BB873B58();
                    v57 = v56;
                    v97 = v52;
                    v59 = *(_QWORD *)(v52 + 16);
                    v58 = *(_QWORD *)(v52 + 24);
                    if (v59 >= v58 >> 1)
                    {
                      sub_1BAC79F38(v58 > 1, v59 + 1, 1);
                      v52 = v97;
                    }
                    v53 += 3;
                    *(_QWORD *)(v52 + 16) = v59 + 1;
                    v60 = (_QWORD *)(v52 + 32 * v59);
                    v60[4] = v96;
                    v60[5] = v54;
                    v60[6] = v55;
                    v60[7] = v57;
                    --v51;
                  }
                  while (v51);
                  swift_bridgeObjectRelease();
                  v6 = v87;
                  v12 = v88;
                  v22 = v86;
                  v23 = v90;
                  v24 = v94;
                }
                else
                {
                  v52 = MEMORY[0x1E0DEE9D8];
                }
                v25 = swift_allocObject();
                v26 = v91;
                *(_QWORD *)(v25 + 16) = v92;
                *(_QWORD *)(v25 + 24) = v26;
                *(_QWORD *)(v25 + 32) = v52;
                swift_release();
                swift_bridgeObjectRelease();
                v9 = v25 | 0x5000000000000000;
                v4 = v89;
              }
            }
            else
            {
              if ((unint64_t)v9 >> 60 != 3)
                goto LABEL_46;
              v44 = *(_QWORD *)(v9 + 16);
              v45 = *(_QWORD *)(v9 + 24);
              LOBYTE(v99) = *(_BYTE *)(v23 + v24);
              v97 = v44;
              v98 = v45;
              sub_1BB40787C();
              swift_release();
              v9 = (uint64_t)v100;
            }
            ++v24;
          }
          while (v24 != v22);
          swift_release();
          swift_bridgeObjectRelease_n();
          v72 = v79;
        }
        else
        {
          v72 = v20;
          swift_retain();
          swift_bridgeObjectRetain();
        }
        v74 = v9;
        v9 = (uint64_t)v84;
        v75 = (uint64_t *)((char *)v84 + v80);
        v76 = *((_QWORD *)v6 + 1);
        sub_1BA5E01A4((uint64_t)&v6[*(int *)(v4 + 24)], (uint64_t)v84 + v80 + *(int *)(v81 + 28), (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
        *v75 = v82;
        v75[1] = v72;
        v75[2] = v74;
        v75[3] = v76;
        sub_1BA6E9BC8(v76);
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementResult);
        sub_1BB2D0460((uint64_t)v12);
      }
    }
  }
  return v9;
}

uint64_t FormatOptionsNodeStatement.modifiers.getter()
{
  type metadata accessor for FormatOptionsNodeStatement();
  return swift_bridgeObjectRetain();
}

uint64_t FormatOptionsNodeStatement.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatOptionsNodeStatement.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatOptionsNodeStatement();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
}

uint64_t sub_1BB2CF878(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatOptionsNodeStatement() + 24);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatOptionsNodeStatement.modifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatOptionsNodeStatement() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatOptionsNodeStatement.modifiers.modify())()
{
  type metadata accessor for FormatOptionsNodeStatement();
  return nullsub_1;
}

uint64_t sub_1BB2CF928@<X0>(uint64_t *a1@<X2>, uint64_t *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v12 = *a2;
  v13 = a2[1];
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v5);
  sub_1BB872AFC(v6);
  v8 = *a1;
  v7 = a1[1];
  v9 = (uint64_t)a1 + *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
  v10 = type metadata accessor for FormatOption();
  sub_1BA5E01A4(v9, (uint64_t)a3 + *(int *)(v10 + 28), (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
  *a3 = v12;
  a3[1] = v13;
  a3[2] = v8;
  a3[3] = v7;
  swift_retain();
  return sub_1BA6E9BC8(v7);
}

uint64_t _s8NewsFeed26FormatOptionsNodeStatementV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  uint64_t v5;
  char v6;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if ((v4 || (sub_1BB874398() & 1) != 0)
    && (v5 = type metadata accessor for FormatOptionsNodeStatement(),
        static FormatOptionsNodeStatementValue.== infix(_:_:)((uint64_t)a1 + *(int *)(v5 + 20), (uint64_t)a2 + *(int *)(v5 + 20)), (v6 & 1) != 0))
  {
    return sub_1BA88312C(*(_QWORD *)((char *)a1 + *(int *)(v5 + 24)), *(_QWORD *)((char *)a2 + *(int *)(v5 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1BB2CFA7C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C0A50, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatement);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB2CFAB8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3B7E18, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatement);
  a1[2] = sub_1BA4A2870(&qword_1ED3B01D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatement);
  result = sub_1BA4A2870(&qword_1EF2C0A58, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatement, (uint64_t)&protocol conformance descriptor for FormatOptionsNodeStatement);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB2CFB30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatOptionsNodeStatement() + 24));
  return swift_bridgeObjectRetain();
}

uint64_t initializeBufferWithCopyOfBuffer for FormatOptionsNodeStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    type metadata accessor for FormatOptionsNodeStatementValue();
    swift_bridgeObjectRetain();
    v6 = (char *)&loc_1BB2CFBF4 + 4 * byte_1BB9040C0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = *a2;
  *a1 = *a2;
  v8 = v7 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v8;
}

_QWORD *assignWithCopy for FormatOptionsNodeStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  char *v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1 + *(int *)(a3 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
    type metadata accessor for FormatOptionsNodeStatementValue();
    v6 = (char *)&loc_1BB2CFECC + 4 * byte_1BB9040ED[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FormatOptionsNodeStatement(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for FormatOptionsNodeStatementValue();
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    v10 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
      v12 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v7[*(int *)(v12 + 20)] = *(_QWORD *)&v8[*(int *)(v12 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for FormatOptionsNodeStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1BA4A2E80((uint64_t)a1 + v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementValue);
    v10 = type metadata accessor for FormatOptionsNodeStatementValue();
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      v11 = type metadata accessor for FormatURL();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v12 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v8, v9, v12);
        v13 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v8[*(int *)(v13 + 20)] = *(_QWORD *)&v9[*(int *)(v13 + 20)];
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB2D0370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FormatOptionsNodeStatementValue();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB2D03EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FormatOptionsNodeStatementValue();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB2D0460(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3D2588, (uint64_t (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementEvaluation, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB2D04B4@<X0>(uint64_t *a1@<X2>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB2CF928(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1BB2D04BC(uint64_t a1, void (*a2)(_QWORD, _QWORD, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(_QWORD, _QWORD, char *);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v55 = a2;
  v56 = a3;
  sub_1BB2D08D4();
  v54 = v5;
  MEMORY[0x1E0C80A78](v5);
  v53 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v52 = (uint64_t *)((char *)&v43 - v8);
  MEMORY[0x1E0C80A78](v9);
  v51 = (char *)&v43 - v10;
  v11 = type metadata accessor for FormatOption();
  v50 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v43 = v3;
  v59 = MEMORY[0x1E0DEE9D8];
  sub_1BAC7A10C(0, v14, 0);
  result = sub_1BA6AFD6C(a1);
  v18 = result;
  v19 = 0;
  v20 = a1 + 64;
  v44 = a1 + 80;
  v45 = v14;
  v48 = v13;
  v49 = a1;
  v46 = v17;
  v47 = a1 + 64;
  while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(_BYTE *)(a1 + 32))
  {
    v23 = (unint64_t)v18 >> 6;
    if ((*(_QWORD *)(v20 + 8 * ((unint64_t)v18 >> 6)) & (1 << v18)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v17)
      goto LABEL_26;
    v57 = v19;
    v58 = 1 << v18;
    v24 = v54;
    v25 = v51;
    v26 = (uint64_t)&v51[*(int *)(v54 + 48)];
    v27 = *(_QWORD *)(a1 + 56);
    v28 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v18);
    v30 = *v28;
    v29 = v28[1];
    v31 = type metadata accessor for FormatOptionsNodeStatementResult();
    sub_1BA4C2DD8(v27 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v18, v26, (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementResult);
    *v25 = v30;
    v25[1] = v29;
    v32 = (uint64_t)v52;
    *v52 = v30;
    *(_QWORD *)(v32 + 8) = v29;
    sub_1BA4C2DD8(v26, v32 + *(int *)(v24 + 48), (uint64_t (*)(_QWORD))type metadata accessor for FormatOptionsNodeStatementResult);
    v33 = v53;
    sub_1BA5193C4(v32, (uint64_t)v53, (uint64_t (*)(_QWORD))sub_1BB2D08D4);
    swift_bridgeObjectRetain_n();
    v34 = (uint64_t)v25;
    v35 = (uint64_t)v48;
    sub_1BA4A2E80(v34, (uint64_t (*)(_QWORD))sub_1BB2D08D4);
    v55(*(_QWORD *)v33, *((_QWORD *)v33 + 1), &v33[*(int *)(v24 + 48)]);
    sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))sub_1BB2D08D4);
    v15 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC7A10C(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v59;
    }
    v37 = *(_QWORD *)(v15 + 16);
    v36 = *(_QWORD *)(v15 + 24);
    a1 = v49;
    if (v37 >= v36 >> 1)
    {
      sub_1BAC7A10C(v36 > 1, v37 + 1, 1);
      v15 = v59;
    }
    *(_QWORD *)(v15 + 16) = v37 + 1;
    result = sub_1BA5193C4(v35, v15+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v37, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v21 = 1 << *(_BYTE *)(a1 + 32);
    if (v18 >= v21)
      goto LABEL_27;
    v20 = v47;
    v38 = *(_QWORD *)(v47 + 8 * v23);
    if ((v38 & v58) == 0)
      goto LABEL_28;
    LODWORD(v17) = v46;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v46)
      goto LABEL_29;
    v39 = v38 & (-2 << (v18 & 0x3F));
    if (v39)
    {
      v21 = __clz(__rbit64(v39)) | v18 & 0xFFFFFFFFFFFFFFC0;
      v22 = v45;
    }
    else
    {
      v40 = v23 + 1;
      v41 = (unint64_t)(v21 + 63) >> 6;
      v22 = v45;
      if (v23 + 1 < v41)
      {
        v42 = *(_QWORD *)(v47 + 8 * v40);
        if (v42)
        {
LABEL_22:
          v21 = __clz(__rbit64(v42)) + (v40 << 6);
        }
        else
        {
          while (v41 - 2 != v23)
          {
            v42 = *(_QWORD *)(v44 + 8 * v23++);
            if (v42)
            {
              v40 = v23 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v19 = v57 + 1;
    v18 = v21;
    if (v57 + 1 == v22)
      return v15;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BB2D0884()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB2D08B0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB2D08D4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2C0A60)
  {
    type metadata accessor for FormatOptionsNodeStatementResult();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2C0A60);
  }
}

uint64_t FormatImageResize.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2D096C + 4 * byte_1BB904200[*v0]))(0x656C616373, 0xE500000000000000);
}

uint64_t sub_1BB2D096C()
{
  return 1886351971;
}

uint64_t sub_1BB2D097C()
{
  return 1701603700;
}

uint64_t sub_1BB2D098C()
{
  return 0x69736E6972746E69;
}

uint64_t FormatImageResize.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2D09D4 + 4 * byte_1BB904204[*v0]))(0x656C616373, 0xE500000000000000);
}

uint64_t sub_1BB2D09D4()
{
  return 1886351971;
}

uint64_t sub_1BB2D09E4()
{
  return 1701603700;
}

uint64_t sub_1BB2D09F4()
{
  return 0x69736E6972746E69;
}

unint64_t sub_1BB2D0A14()
{
  unint64_t result;

  result = qword_1EF2C0A68;
  if (!qword_1EF2C0A68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageResize, &type metadata for FormatImageResize);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A68);
  }
  return result;
}

void sub_1BB2D0A58()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB2D0AA0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BB2D0B04()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB2D0B3C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB2D0B8C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BB2D0BD0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2D0C34()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB2D0C60 + 4 * byte_1BB904214[*v0]))();
}

void sub_1BB2D0C60(_QWORD *a1@<X8>)
{
  *a1 = 1886351971;
  a1[1] = 0xE400000000000000;
}

void sub_1BB2D0C74(_QWORD *a1@<X8>)
{
  *a1 = 1701603700;
  a1[1] = 0xE400000000000000;
}

void sub_1BB2D0C88(_QWORD *a1@<X8>)
{
  *a1 = 0x69736E6972746E69;
  a1[1] = 0xE900000000000063;
}

unint64_t sub_1BB2D0CA8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB2D0CD4();
  result = sub_1BA4E49D4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB2D0CD4()
{
  unint64_t result;

  result = qword_1EF2C0A70;
  if (!qword_1EF2C0A70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageResize, &type metadata for FormatImageResize);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A70);
  }
  return result;
}

void sub_1BB2D0D18(char *a1)
{
  sub_1BB7FB4A8(*a1);
}

unint64_t sub_1BB2D0D24(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2D0D48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2D0D48()
{
  unint64_t result;

  result = qword_1EF2C0A78;
  if (!qword_1EF2C0A78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageResize, &type metadata for FormatImageResize);
    atomic_store(result, (unint64_t *)&qword_1EF2C0A78);
  }
  return result;
}

unint64_t sub_1BB2D0D8C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA699198();
  a1[2] = sub_1BA665CD0();
  result = sub_1BB2D0A14();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatImageResize()
{
  return &type metadata for FormatImageResize;
}

id sub_1BB2D0DD0()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  char *v3;
  char *v4;
  uint64_t v5;
  Class v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v13;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = &v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_identifier];
  *(_QWORD *)v3 = 0;
  *((_QWORD *)v3 + 1) = 0xE000000000000000;
  v4 = &v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_reuseIdentifier];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_onReuse;
  sub_1BA563554();
  v7 = objc_allocWithZone(v6);
  v8 = v0;
  *(_QWORD *)&v1[v5] = objc_msgSend(v7, sel_init);
  v9 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_placeholderView;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoPlaceholderView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_isLiveIconHidden] = 0;
  v11 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v13.receiver = v8;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, 0, 0);
}

id sub_1BB2D0F84()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  if (MEMORY[0x1BCCE5D40](&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate]))
  {
    sub_1BB283D3C();
    swift_unknownObjectRelease();
  }
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1BB2D10F8()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v16[6];
  objc_super v17;

  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, sel_viewDidLoad);
  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  objc_msgSend(v1, sel_setClipsToBounds_, 1);

  v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v4 = v3;
  objc_msgSend(v3, sel_setAutoresizingMask_, 0);

  v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v6 = v5;
  objc_msgSend(v5, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView]);

  v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v8 = v7;
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame];
  objc_msgSend(v7, sel_addSubview_, v9);

  v10 = objc_msgSend(v0, sel_view);
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, sel_addSubview_, *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_placeholderView]);

    v12 = *(void **)(v9 + qword_1ED476878);
    v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v16[4] = sub_1BB2D2208;
    v16[5] = v13;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_1BA4F1DD8;
    v16[3] = &block_descriptor_61;
    v14 = _Block_copy(v16);
    v15 = v12;
    swift_release();
    objc_msgSend(v15, sel_onTouchUpInside_, v14);
    _Block_release(v14);

    return;
  }
LABEL_11:
  __break(1u);
}

void sub_1BB2D130C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (void *)v2;
    if (MEMORY[0x1BCCE5D40](v2 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate))
    {
      sub_1BB2826C0(v3);

      swift_unknownObjectRelease();
    }
    else
    {

    }
  }
}

id sub_1BB2D1550()
{
  char *v0;
  void *v1;
  void *v2;
  id result;
  void *v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  objc_super v15;

  v1 = v0;
  v15.receiver = v0;
  v15.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v15, sel_viewDidLayoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView];
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v4 = result;
  objc_msgSend(result, sel_bounds);

  sub_1BB8736F0();
  v5 = objc_msgSend(v2, sel_subviews);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9950);
  v6 = sub_1BB872DB4();

  if (v6 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    v7 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_4:
      v8 = 4;
      while (1)
      {
        if ((v6 & 0xC000000000000001) != 0)
          v9 = (id)MEMORY[0x1BCCE4630](v8 - 4, v6);
        else
          v9 = *(id *)(v6 + 8 * v8);
        v10 = v9;
        v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
          goto LABEL_15;
        }
        result = objc_msgSend(v1, sel_view);
        if (!result)
          break;
        v12 = result;
        objc_msgSend(result, sel_bounds);

        sub_1BB8736F0();
        ++v8;
        if (v11 == v7)
          goto LABEL_11;
      }
      __break(1u);
      goto LABEL_18;
    }
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v7)
      goto LABEL_4;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = result;
  objc_msgSend(result, sel_bounds);

  sub_1BB8736F0();
  result = objc_msgSend(v1, sel_view);
  if (result)
  {
    v14 = result;
    objc_msgSend(result, sel_bounds);

    return (id)sub_1BB8736F0();
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1BB2D186C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB2D18A8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_reuseIdentifier);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BB2D1900(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_reuseIdentifier);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BB2D1960())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1BB2D19A8()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  id result;
  void *v9;
  id v10;
  void *v11;

  v1 = objc_msgSend(v0, sel_childViewControllers);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3C0420);
  v2 = sub_1BB872DB4();

  if (v2 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    v3 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
    return (id)swift_bridgeObjectRelease();
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v3)
    return (id)swift_bridgeObjectRelease();
LABEL_3:
  for (i = 4; ; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)MEMORY[0x1BCCE4630](i - 4, v2);
    else
      v5 = *(id *)(v2 + 8 * i);
    v6 = v5;
    v7 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
    objc_opt_self();
    if (!swift_dynamicCastObjCClass())
      goto LABEL_4;
    result = objc_msgSend(v6, sel_view);
    if (!result)
      break;
    v9 = result;
    v10 = objc_msgSend(result, sel_constraints);

    if (!v10)
    {
      sub_1BA49A224(0, (unint64_t *)&qword_1EF2C1570);
      sub_1BB872DB4();
      v10 = (id)sub_1BB872D9C();
      swift_bridgeObjectRelease();
    }
    objc_msgSend((id)objc_opt_self(), sel_deactivateConstraints_, v10);

    objc_msgSend(v6, sel_willMoveToParentViewController_, 0);
    result = objc_msgSend(v6, sel_view);
    if (!result)
      goto LABEL_19;
    v11 = result;
    objc_msgSend(result, sel_removeFromSuperview);

    objc_msgSend(v6, sel_removeFromParentViewController);
LABEL_4:

    if (v7 == v3)
      return (id)swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

id sub_1BB2D1BD0()
{
  return sub_1BB2D1EB4();
}

void sub_1BB2D1BD8()
{
  MEMORY[0x1BCCE1C6C]();

}

void sub_1BB2D1C08()
{
  sub_1BB2D21A8(&qword_1EF2C0AC8, (uint64_t)&unk_1BB904480);
  JUMPOUT(0x1BCCE1E7CLL);
}

uint64_t sub_1BB2D1C40()
{
  return sub_1BB2D21A8(&qword_1EF2C0AC0, (uint64_t)&unk_1BB904448);
}

void sub_1BB2D1C64(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  unsigned __int8 v18;

  v2 = v1;
  v4 = (char *)objc_msgSend(a1, sel_parentViewController);
  if (!v4
    || (v5 = v4, v4, v5 != v2)
    || (v16 = objc_msgSend(a1, sel_viewIfLoaded)) == 0
    || (v17 = v16,
        v18 = objc_msgSend(v16, sel_isDescendantOfView_, *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView]), v17, (v18 & 1) == 0))
  {
    sub_1BB2D19A8();
    v6 = objc_msgSend(a1, sel_view);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend(v6, sel_constraints);

      if (!v8)
      {
        sub_1BA49A224(0, (unint64_t *)&qword_1EF2C1570);
        sub_1BB872DB4();
        v8 = (id)sub_1BB872D9C();
        swift_bridgeObjectRelease();
      }
      objc_msgSend((id)objc_opt_self(), sel_deactivateConstraints_, v8);

      objc_msgSend(a1, sel_willMoveToParentViewController_, 0);
      v9 = objc_msgSend(a1, sel_view);
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, sel_removeFromSuperview);

        objc_msgSend(a1, sel_removeFromParentViewController);
        objc_msgSend(v2, sel_addChildViewController_, a1);
        v11 = *(void **)&v2[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView];
        v12 = objc_msgSend(a1, sel_view);
        if (v12)
        {
          v13 = v12;
          objc_msgSend(v11, sel_addSubview_, v12);

          v14 = objc_msgSend(a1, sel_view);
          if (v14)
          {
            v15 = v14;
            objc_msgSend(v11, sel_bounds);
            sub_1BB8736F0();

            objc_msgSend(a1, sel_didMoveToParentViewController_, v2);
            return;
          }
          goto LABEL_16;
        }
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
}

id sub_1BB2D1EB4()
{
  char *v0;
  char *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  double v12;
  double v13;
  void *v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  void *v26;
  id result;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v50;
  double v51;
  void *v52;
  double v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  CGFloat v58;
  double v59;
  CGFloat v60;
  double v61;
  double v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;

  v1 = v0;
  v2 = (void *)sub_1BB870C0C();
  objc_msgSend(v2, sel_bounds);
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v11 = (void *)sub_1BB870C0C();
  objc_msgSend(v11, sel_contentSize);
  v13 = v12;

  v14 = (void *)sub_1BB870C0C();
  objc_msgSend(v14, sel_contentSize);
  v16 = v15;

  if (v16 < v13)
  {
    v17 = (void *)sub_1BB870C0C();
    v18 = objc_msgSend(v17, sel_window);

    if (v18)
    {
      objc_msgSend(v18, sel_safeAreaInsets);
      v20 = v19;
      v22 = v21;

    }
    else
    {
      v20 = *MEMORY[0x1E0DC49E8];
      v22 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    }
    v4 = UIEdgeInsetsInsetRect(v4, v6, v8, v10, v20, v22);
    v6 = v23;
    v8 = v24;
    v10 = v25;
  }
  v26 = (void *)sub_1BB870C0C();
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v28 = result;
  objc_msgSend(result, sel_bounds);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;

  v37 = objc_msgSend(v1, sel_view);
  objc_msgSend(v26, sel_convertRect_fromView_, v37, v30, v32, v34, v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  v45 = v44;

  v63.origin.x = v4;
  v63.origin.y = v6;
  v63.size.width = v8;
  v63.size.height = v10;
  v68.origin.x = v39;
  v68.origin.y = v41;
  v68.size.width = v43;
  v68.size.height = v45;
  v64 = CGRectIntersection(v63, v68);
  x = v64.origin.x;
  y = v64.origin.y;
  width = v64.size.width;
  height = v64.size.height;
  v50 = CGRectGetWidth(v64);
  v65.origin.x = x;
  v65.origin.y = y;
  v65.size.width = width;
  v65.size.height = height;
  v51 = CGRectGetHeight(v65);
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v52 = result;
  objc_msgSend(result, sel_bounds);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;

  v66.origin.x = v54;
  v66.origin.y = v56;
  v66.size.width = v58;
  v66.size.height = v60;
  v61 = CGRectGetWidth(v66);
  v67.origin.x = v54;
  v67.origin.y = v56;
  v67.size.width = v58;
  v67.size.height = v60;
  v62 = CGRectGetHeight(v67);
  result = (id)MEMORY[0x1BCCE5D40](&v1[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate]);
  if (result)
  {
    sub_1BB284280(v50 * v51 / (v61 * v62));
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BB2D21A8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatVideoPlayerViewController();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB2D21E4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB2D2208()
{
  uint64_t v0;

  sub_1BB2D130C(v0);
}

void sub_1BB2D2210()
{
  _BYTE *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  Class v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1 = &v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_identifier];
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_reuseIdentifier];
  *v2 = 0;
  v2[1] = 0;
  v3 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_onReuse;
  sub_1BA563554();
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(v4), sel_init);
  v5 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_posterFrame;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_placeholderView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for VideoPlaceholderView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_isLiveIconHidden] = 0;
  v7 = OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_videoContainerView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1BB873EAC();
  __break(1u);
}

void FormatSourceItem.tipSource(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v20 = a2;
  v14 = sub_1BB8717AC();
  v5 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v10 = *((_QWORD *)v2 + 1);
  v9 = *((_QWORD *)v2 + 2);
  v11 = v2[24];
  v16 = *v2;
  v15 = a1;
  sub_1BB6FABC4(a1, (uint64_t)v7);
  if (!v3)
  {
    v16 = v8;
    v17 = v10;
    v18 = v9;
    v19 = v11;
    v12 = type metadata accessor for FormatSourceItemTipSource();
    v13 = v20;
    sub_1BB553F18(v15, v20 + *(int *)(v12 + 20));
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v13, v7, v14);
  }
}

BOOL static FormatSourceItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  unsigned __int8 v3;
  char v4;
  unsigned __int8 v6[8];
  __int128 v7;
  char v8;
  unsigned __int8 v9[8];
  __int128 v10;
  char v11;

  v2 = *(_BYTE *)(a1 + 24);
  v3 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 24);
  v9[0] = *(_BYTE *)a1;
  v10 = *(_OWORD *)(a1 + 8);
  v11 = v2;
  v6[0] = v3;
  v7 = *(_OWORD *)(a2 + 8);
  v8 = v4;
  return _s8NewsFeed19FormatSourceItemTipV2eeoiySbAC_ACtFZ_0(v9, v6);
}

uint64_t sub_1BB2D24C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSourceItem.init(from:)(a1, a2);
}

uint64_t sub_1BB2D24D4(_QWORD *a1)
{
  return FormatSourceItem.encode(to:)(a1);
}

BOOL sub_1BB2D24E8(uint64_t a1, uint64_t a2)
{
  char v2;
  unsigned __int8 v3;
  char v4;
  unsigned __int8 v6[8];
  __int128 v7;
  char v8;
  unsigned __int8 v9[8];
  __int128 v10;
  char v11;

  v2 = *(_BYTE *)(a1 + 24);
  v3 = *(_BYTE *)a2;
  v4 = *(_BYTE *)(a2 + 24);
  v9[0] = *(_BYTE *)a1;
  v10 = *(_OWORD *)(a1 + 8);
  v11 = v2;
  v6[0] = v3;
  v7 = *(_OWORD *)(a2 + 8);
  v8 = v4;
  return _s8NewsFeed19FormatSourceItemTipV2eeoiySbAC_ACtFZ_0(v9, v6);
}

unint64_t sub_1BB2D2540(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2D2564();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2D2564()
{
  unint64_t result;

  result = qword_1EF2C0AD0;
  if (!qword_1EF2C0AD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItem, &type metadata for FormatSourceItem);
    atomic_store(result, (unint64_t *)&qword_1EF2C0AD0);
  }
  return result;
}

unint64_t sub_1BB2D25A8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEF0B18();
  a1[2] = sub_1BAEF0A38();
  result = sub_1BB2D25DC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2D25DC()
{
  unint64_t result;

  result = qword_1EF2C0AD8;
  if (!qword_1EF2C0AD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItem, &type metadata for FormatSourceItem);
    atomic_store(result, (unint64_t *)&qword_1EF2C0AD8);
  }
  return result;
}

uint64_t destroy for FormatSourceItemTip(uint64_t a1)
{
  return sub_1BA896BE0(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatSourceItemTip(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_1BA896BB8(v3, v4, v5);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatSourceItemTip(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_1BA896BB8(v3, v4, v5);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1BA896BE0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatSourceItemTip(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v3;
  sub_1BA896BE0(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSourceItem()
{
  return &type metadata for FormatSourceItem;
}

uint64_t sub_1BB2D2738(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_1BB2D2774(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t aBlock;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  __int128 v25[2];

  v8 = (void *)objc_opt_self();
  sub_1BA4C010C(a2, (uint64_t)v25);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a1;
  sub_1BA4CECCC(v25, (uint64_t)(v9 + 3));
  v9[8] = a3;
  v9[9] = a4;
  v23 = sub_1BB2D3CF0;
  v24 = v9;
  v10 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v20 = 1107296256;
  v21 = sub_1BA4F1DD8;
  v22 = &block_descriptor_62;
  v11 = _Block_copy(&aBlock);
  swift_retain();
  v12 = a3;
  v13 = a4;
  swift_release();
  v14 = swift_allocObject();
  swift_weakInit();
  sub_1BA4C010C(a2, (uint64_t)v25);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = v13;
  v15[4] = v12;
  sub_1BA4CECCC(v25, (uint64_t)(v15 + 5));
  v23 = sub_1BB2D3D60;
  v24 = v15;
  aBlock = v10;
  v20 = 1107296256;
  v21 = sub_1BB2D2738;
  v22 = &block_descriptor_12_3;
  v16 = _Block_copy(&aBlock);
  v17 = v12;
  v18 = v13;
  swift_release();
  objc_msgSend(v8, sel_animateWithDuration_animations_completion_, v11, v16, 0.2);
  _Block_release(v16);
  _Block_release(v11);
}

id sub_1BB2D2948(uint64_t a1, _QWORD *a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v15;
  id v16;

  v16 = a4;
  v6 = type metadata accessor for FeedItemDimmingType();
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(_QWORD *)(a1 + 120);
  v10 = *(_QWORD *)(a1 + 128);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 96), v9);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  *v8 = sub_1BB86DEE8();
  v8[1] = v11;
  swift_storeEnumTagMultiPayload();
  v12 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 8))(v8, v9, v10);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemDimmingType);
  v13 = (void *)sub_1BB8700FC();
  sub_1BB2D3D74(v13, v12 & 1, *(double *)(a1 + 144));

  return objc_msgSend(v16, sel_setAlpha_, 0.0);
}

uint64_t sub_1BB2D2A74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, _QWORD *a5)
{
  uint64_t result;
  void *v8;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    objc_msgSend(a3, sel_removeFromSuperview);
    v8 = (void *)sub_1BB8700FC();
    objc_msgSend(v8, sel_setIsAccessibilityElement_, 1);

    sub_1BB2D2B10(a5);
    return swift_release();
  }
  return result;
}

unint64_t sub_1BB2D2B10(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  uint64_t v12;
  int v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  _OWORD v18[2];
  char v19;
  unint64_t v20;

  v2 = sub_1BB8709F0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3B2A50, (void (*)(uint64_t))type metadata accessor for FeedItem);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v17 - v7;
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 48))(&v20, v9, v10);
  result = v20;
  if (v20 != 2)
  {
    if (v20)
    {
      return sub_1BB009A80(v20);
    }
    else
    {
      sub_1BA4C010C((uint64_t)a1, (uint64_t)v18);
      sub_1BA7C2A4C();
      v12 = type metadata accessor for FeedItem(0);
      v13 = swift_dynamicCast();
      v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
      if (v13)
      {
        v14(v8, 0, 1, v12);
        FeedItem.headline.getter();
        v16 = v15;
        result = sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FeedItem);
        if (v16)
        {
          if (qword_1ED3BA8D8 != -1)
            swift_once();
          v17[1] = v16;
          (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB9EF8], v2);
          memset(v18, 0, sizeof(v18));
          v19 = 1;
          swift_unknownObjectRetain();
          sub_1BB8709D8();
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          return swift_unknownObjectRelease();
        }
      }
      else
      {
        v14(v8, 1, 1, v12);
        return sub_1BA502AD0((uint64_t)v8, &qword_1ED3B2A50, (void (*)(uint64_t))type metadata accessor for FeedItem);
      }
    }
  }
  return result;
}

uint64_t sub_1BB2D2D90()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  return swift_deallocClassInstance();
}

_QWORD *sub_1BB2D2DCC(_QWORD *a1, void *a2, double a3, double a4, CGFloat a5, CGFloat a6)
{
  return sub_1BB2D3628(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1BB2D2DEC(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  _QWORD v14[3];

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*((void (**)(_QWORD *__return_ptr, uint64_t, double))a1 + 3))(v14, a2, v6);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  v10 = *(void **)&a1[v9];
  *(_QWORD *)&a1[v9] = v14[0];

  sub_1BB86C8A4();
  v11 = &a1[*(_QWORD *)(*(_QWORD *)a1 + 128)];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(v11, v8, v4);
  swift_endAccess();
  return *(_QWORD *)&a1[v9];
}

uint64_t sub_1BB2D2ECC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t result;
  int v18;
  char *v19;
  double v20;
  double v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - v10;
  v12 = sub_1BB8726B8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA657D64();
  *v15 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v16 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    sub_1BA76D70C((uint64_t)&v2[qword_1ED3B2F90], (uint64_t)v11);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4);
    sub_1BA502AD0((uint64_t)v11, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v18 == 1)
      return *(_QWORD *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 120)];
    v19 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 128)];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v19, v4);
    sub_1BB86C844();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v21 >= -60.0)
      return *(_QWORD *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 120)];
    else
      return sub_1BB2D2DEC(v2, a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB2D30E8(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  _OWORD v12[2];

  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*((void (**)(_OWORD *__return_ptr, uint64_t, double))a1 + 3))(v12, a2, v6);
  v9 = &a1[*(_QWORD *)(*(_QWORD *)a1 + 120)];
  *(_OWORD *)v9 = v12[0];
  swift_bridgeObjectRelease();
  sub_1BB86C8A4();
  v10 = &a1[*(_QWORD *)(*(_QWORD *)a1 + 128)];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 40))(v10, v8, v4);
  swift_endAccess();
  return *(_QWORD *)v9;
}

uint64_t sub_1BB2D31CC(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char v16;
  uint64_t result;
  int v18;
  char *v19;
  double v20;
  double v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_1BB86C8B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - v10;
  v12 = sub_1BB8726B8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA657D64();
  *v15 = sub_1BB87345C();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v16 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    sub_1BA76D70C((uint64_t)&v2[qword_1ED3B2F90], (uint64_t)v11);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4);
    sub_1BA502AD0((uint64_t)v11, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v18 == 1)
      return *(_QWORD *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 120)];
    v19 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 128)];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v19, v4);
    sub_1BB86C844();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v21 >= -60.0)
      return *(_QWORD *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 120)];
    else
      return sub_1BB2D30E8(v2, a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BB2D33EC(_QWORD *a1, double *a2, char *a3)
{
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *boxed_opaque_existential_0;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  id v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  id v21;
  _BYTE v22[40];
  uint64_t v23[3];
  double v24;
  char v25;

  objc_msgSend(a3, sel_setFrame_, *a2, a2[1], a2[2], a2[3]);
  v6 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_titleLabel];
  objc_msgSend(v6, sel_setNumberOfLines_, 0);
  v7 = a1 + 1;
  v8 = a1[4];
  v9 = __swift_project_boxed_opaque_existential_1(a1 + 1, v8);
  v24 = *(double *)&v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v23);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, v9, v8);
  v11 = (id)sub_1BB2D2ECC((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  objc_msgSend(v6, sel_setAttributedText_, v11);

  objc_msgSend(v6, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  if (!a1[7])
    goto LABEL_4;
  v12 = a1[4];
  v13 = __swift_project_boxed_opaque_existential_1(v7, v12);
  v24 = *(double *)&v12;
  v14 = __swift_allocate_boxed_opaque_existential_0(v23);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v14, v13, v12);
  v15 = (id)sub_1BB2D2ECC((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  sub_1BA739A14((uint64_t)(a2 + 8), (uint64_t)v22);
  sub_1BA739A14((uint64_t)v22, (uint64_t)v23);
  if (v25 == 1)
  {

LABEL_4:
    objc_msgSend(*(id *)&a3[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton], sel_setHidden_, 1);
    return;
  }
  v16 = *(double *)v23;
  v17 = *(double *)&v23[1];
  v18 = *(double *)&v23[2];
  v19 = v24;
  v20 = *(void **)&a3[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_dismissalButton];
  v21 = objc_msgSend(v20, sel_titleLabel);
  objc_msgSend(v21, sel_setNumberOfLines_, 0);

  objc_msgSend(v20, sel_setAttributedTitle_forState_, v15, 0);
  objc_msgSend(v20, sel_setFrame_, v16, v17, v18, v19);

}

_QWORD *sub_1BB2D3628(_QWORD *a1, void *a2, double a3, double a4, CGFloat a5, CGFloat a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  CGFloat v15;
  void *v16;
  void *v17;
  id v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double Width;
  double v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *boxed_opaque_existential_0;
  id v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  double v39;
  CGFloat v40;
  double v41;
  double v42;
  double v43;
  double Height;
  double v45;
  double v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  id v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  CGFloat v55;
  double v56;
  double v57;
  CGFloat x;
  CGFloat y;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  id v64;
  CGFloat v65;
  double v66;
  CGFloat v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  double v72;
  double v73;
  double v74;
  double v75;
  double v76;
  CGFloat v77;
  double v78;
  CGFloat v79;
  CGFloat v80;
  CGFloat v81;
  CGFloat v82;
  CGFloat v83;
  char *v84;
  void *v85;
  _QWORD *v86;
  id v87;
  id v88;
  char *v89;
  id v90;
  CGFloat rect;
  CGRect v92;
  unint64_t v93;
  _QWORD v94[3];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97[3];
  CGFloat v98;
  CGFloat v99;
  CGFloat v100;
  CGFloat v101;
  CGFloat v102;
  CGFloat v103;
  CGFloat v104;
  CGFloat v105;
  CGFloat v106;
  BOOL v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;
  CGRect v125;

  v7 = v6;
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v13 + 48))(v97, v12, v13);
  v15 = *(double *)v97;
  if (v97[0] != 2)
  {
    if ((sub_1BB873660() & 1) != 0)
    {
      return (_QWORD *)sub_1BB009A80(*(unint64_t *)&v15);
    }
    else
    {
      v16 = (void *)sub_1BB8700FC();
      sub_1BB8736E4();

      v17 = (void *)sub_1BB8700FC();
      objc_msgSend(v17, sel_setIsAccessibilityElement_, 0);

      v92.size.height = v15;
      sub_1BA4C010C(v7 + 56, (uint64_t)v97);
      sub_1BA9057BC(*(unint64_t *)&v15);
      sub_1BB739720((unint64_t *)&v92.size.height, (uint64_t)v97, &v93);
      v18 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
      objc_msgSend(v18, sel_bounds);
      v20 = v19;
      v22 = v21;
      v24 = v23;
      v26 = v25;

      v108.origin.x = v20;
      v108.origin.y = v22;
      v108.size.width = v24;
      v108.size.height = v26;
      Width = CGRectGetWidth(v108);
      v109.origin.x = 0.0;
      v109.origin.y = 0.0;
      v109.size.width = a5;
      v109.size.height = a6;
      if (CGRectGetWidth(v109) / Width <= 0.5)
        v28 = 0.85;
      else
        v28 = 0.6;
      v29 = v95;
      v30 = __swift_project_boxed_opaque_existential_1(v94, v95);
      v98 = *(double *)&v29;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v97);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(boxed_opaque_existential_0, v30, v29);
      v32 = (id)sub_1BB2D2ECC((uint64_t)v97);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
      v110.origin.x = 0.0;
      v110.origin.y = 0.0;
      v110.size.width = a5;
      v110.size.height = a6;
      v92.origin.x = v28;
      objc_msgSend(v32, sel_boundingRectWithSize_options_context_, 3, 0, v28 * CGRectGetWidth(v110), 1.79769313e308);
      v34 = v33;
      v36 = v35;
      v38 = v37;
      v40 = v39;
      v111.origin.x = 0.0;
      v111.origin.y = 0.0;
      v111.size.width = a5;
      v111.size.height = a6;
      v41 = CGRectGetWidth(v111);
      v112.origin.x = v34;
      v112.origin.y = v36;
      v112.size.width = v38;
      v112.size.height = v40;
      v42 = v41 - CGRectGetWidth(v112);
      v43 = v42 * 0.5;
      if (v93 == 1)
      {
        v113.origin.x = 0.0;
        v113.origin.y = 0.0;
        v113.size.width = a5;
        v113.size.height = a6;
        Height = CGRectGetHeight(v113);
        v114.origin.x = v34;
        v114.origin.y = v36;
        v114.size.width = v38;
        v114.size.height = v40;
        v45 = Height - CGRectGetHeight(v114);
      }
      else
      {
        v92.size.width = v42 * 0.5;
        v46 = 0.0;
        if (v96)
        {
          v47 = v95;
          v48 = __swift_project_boxed_opaque_existential_1(v94, v95);
          v98 = *(double *)&v47;
          v49 = __swift_allocate_boxed_opaque_existential_0(v97);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v49, v48, v47);
          v50 = (id)sub_1BB2D2ECC((uint64_t)v97);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
          sub_1BB87363C();
          sub_1BB8734D4();
          v52 = v51;
          v54 = v53;
          v92.origin.y = v55;
          rect = v56;

          v115.origin.x = v52;
          v115.origin.y = v54;
          v115.size.width = v92.origin.y;
          v115.size.height = rect;
          v46 = CGRectGetHeight(v115);
        }
        v116.origin.x = 0.0;
        v116.origin.y = 0.0;
        v116.size.width = a5;
        v116.size.height = a6;
        v57 = CGRectGetHeight(v116);
        v117.origin.x = v34;
        v117.origin.y = v36;
        v117.size.width = v38;
        v117.size.height = v40;
        v45 = v57 - CGRectGetHeight(v117) - v46 + -16.0;
        v43 = v92.size.width;
      }
      v118.origin.y = v45 * 0.5;
      v118.origin.x = v43;
      v118.size.width = v38;
      v118.size.height = v40;
      v119 = CGRectIntegral(v118);
      x = v119.origin.x;
      y = v119.origin.y;
      v92.origin.y = v119.size.height;
      v92.size.width = v119.size.width;

      v60 = v96;
      if (v96)
      {
        v61 = v95;
        v62 = __swift_project_boxed_opaque_existential_1(v94, v95);
        v98 = *(double *)&v61;
        v63 = __swift_allocate_boxed_opaque_existential_0(v97);
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v63, v62, v61);
        v64 = (id)sub_1BB2D2ECC((uint64_t)v97);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
        v120.origin.x = 0.0;
        v120.origin.y = 0.0;
        v120.size.width = a5;
        v120.size.height = a6;
        objc_msgSend(v64, sel_boundingRectWithSize_options_context_, 3, 0, v92.origin.x * CGRectGetWidth(v120), 1.79769313e308);
        v92.origin.x = v65;
        v67 = v66;
        v69 = v68;
        v71 = v70;
        v121.origin.x = 0.0;
        v121.origin.y = 0.0;
        v121.size.width = a5;
        v121.size.height = a6;
        v72 = a5;
        v73 = a6;
        v74 = y;
        v75 = x;
        v76 = CGRectGetWidth(v121);
        v122.origin.x = v92.origin.x;
        v122.origin.y = v67;
        v122.size.width = v69;
        v122.size.height = v71;
        v77 = v71;
        v78 = v76 - CGRectGetWidth(v122);
        x = v75;
        y = v74;
        a6 = v73;
        a5 = v72;
        v79 = v78 * 0.5;
        v123.origin.x = x;
        v123.origin.y = y;
        v123.size.height = v92.origin.y;
        v123.size.width = v92.size.width;
        v124.origin.y = CGRectGetMaxY(v123) + 16.0;
        v124.origin.x = v79;
        v124.size.width = v69;
        v124.size.height = v77;
        v125 = CGRectIntegral(v124);
        v80 = v125.origin.x;
        v81 = v125.origin.y;
        v82 = v125.size.width;
        v83 = v125.size.height;

      }
      else
      {
        v80 = 0.0;
        v81 = 0.0;
        v82 = 0.0;
        v83 = 0.0;
      }
      v97[0] = 0;
      v97[1] = 0;
      *(CGFloat *)&v97[2] = a5;
      v98 = a6;
      v99 = x;
      v100 = y;
      v101 = v92.size.width;
      v102 = v92.origin.y;
      v103 = v80;
      v104 = v81;
      v105 = v82;
      v106 = v83;
      v107 = v60 == 0;
      v84 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HiddenContentPlacardView()), sel_initWithFrame_, 0.0, 0.0, a5, a6);
      sub_1BB2D33EC(&v93, (double *)v97, v84);
      v85 = *(void **)&v84[OBJC_IVAR____TtC8NewsFeed24HiddenContentPlacardView_onTap];
      sub_1BA4C010C((uint64_t)a1, (uint64_t)&v92.size.height);
      v86 = (_QWORD *)swift_allocObject();
      v86[2] = v7;
      sub_1BA4CECCC((__int128 *)&v92.size.height, (uint64_t)(v86 + 3));
      v86[8] = a2;
      v86[9] = v84;
      v87 = v85;
      swift_retain();
      v88 = a2;
      v89 = v84;

      swift_release();
      v90 = objc_msgSend(v88, sel_contentView);
      objc_msgSend(v90, sel_addSubview_, v89);

      sub_1BB009A80(*(unint64_t *)&v15);
      return sub_1BB2D3CB8(&v93);
    }
  }
  return result;
}

void sub_1BB2D3CA8()
{
  uint64_t v0;

  sub_1BB2D2774(*(_QWORD *)(v0 + 16), v0 + 24, *(void **)(v0 + 64), *(void **)(v0 + 72));
}

_QWORD *sub_1BB2D3CB8(_QWORD *a1)
{
  destroy for HiddenContentPlacardViewLayout.Context(a1);
  return a1;
}

id sub_1BB2D3CF0()
{
  uint64_t v0;

  return sub_1BB2D2948(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72));
}

uint64_t sub_1BB2D3D00()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB2D3D24()
{
  uint64_t v0;

  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_1BB2D3D60(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2D2A74(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), (_QWORD *)(v1 + 40));
}

void sub_1BB2D3D74(id a1, char a2, double a3)
{
  id v5;
  id v6;
  double v7;
  double v8;
  id v9;
  id v10;

  if ((a2 & 1) != 0)
  {
    v5 = objc_msgSend(a1, sel_layer);
    v6 = objc_msgSend(a1, sel_traitCollection);
    objc_msgSend(v6, sel_displayScale);
    v8 = v7;

    objc_msgSend(v5, sel_setRasterizationScale_, v8);
    v9 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v9, sel_setShouldRasterize_, 1);

    objc_msgSend(a1, sel_setAlpha_, a3);
  }
  else
  {
    objc_msgSend(a1, sel_setAlpha_, 1.0);
    v10 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v10, sel_setShouldRasterize_, 0);

  }
}

uint64_t static FormatImageAdjustmentMask.== infix(_:_:)(__int128 *a1, __int128 *a2)
{
  __int128 v4[8];
  __int128 v5[8];
  __int128 v6[8];
  __int128 v7[8];
  __int128 v8[8];
  __int128 v9[8];

  sub_1BA896178(a1, (uint64_t)v6);
  sub_1BA896178(a2, (uint64_t)v7);
  sub_1BA896178(v6, (uint64_t)v8);
  sub_1BA896178(v7, (uint64_t)v9);
  sub_1BA895FE8(v8, (uint64_t)v5);
  sub_1BA895FE8(v9, (uint64_t)v4);
  return _s8NewsFeed25FormatDirectionalGradientO2eeoiySbAC_ACtFZ_0(v5, v4) & 1;
}

uint64_t sub_1BB2D3F24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatImageAdjustmentMask.init(from:)(a1, a2);
}

uint64_t sub_1BB2D3F38(_QWORD *a1)
{
  return FormatImageAdjustmentMask.encode(to:)(a1);
}

uint64_t sub_1BB2D3F4C(__int128 *a1, __int128 *a2)
{
  __int128 v4[8];
  __int128 v5[8];
  __int128 v6[8];
  __int128 v7[8];
  __int128 v8[8];
  __int128 v9[8];

  sub_1BA896178(a1, (uint64_t)v6);
  sub_1BA896178(a2, (uint64_t)v7);
  sub_1BA896178(v6, (uint64_t)v8);
  sub_1BA896178(v7, (uint64_t)v9);
  sub_1BA895FE8(v8, (uint64_t)v5);
  sub_1BA895FE8(v9, (uint64_t)v4);
  return _s8NewsFeed25FormatDirectionalGradientO2eeoiySbAC_ACtFZ_0(v5, v4) & 1;
}

unint64_t sub_1BB2D3FC4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2D3FE8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2D3FE8()
{
  unint64_t result;

  result = qword_1EF2C0AE0;
  if (!qword_1EF2C0AE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentMask, &type metadata for FormatImageAdjustmentMask);
    atomic_store(result, (unint64_t *)&qword_1EF2C0AE0);
  }
  return result;
}

unint64_t sub_1BB2D402C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE73B60();
  a1[2] = sub_1BAEFAD40();
  result = sub_1BB2D4060();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2D4060()
{
  unint64_t result;

  result = qword_1EF2C0AE8[0];
  if (!qword_1EF2C0AE8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentMask, &type metadata for FormatImageAdjustmentMask);
    atomic_store(result, qword_1EF2C0AE8);
  }
  return result;
}

uint64_t *initializeWithCopy for FormatDirectionalGradient(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  sub_1BA895C14(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  return a1;
}

uint64_t assignWithCopy for FormatDirectionalGradient(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v24 = a2[9];
  v25 = a2[10];
  v26 = a2[11];
  v27 = a2[12];
  v28 = a2[13];
  v29 = a2[14];
  v30 = a2[15];
  sub_1BA895C14(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v26;
  *(_QWORD *)(a1 + 96) = v27;
  *(_QWORD *)(a1 + 104) = v28;
  *(_QWORD *)(a1 + 112) = v29;
  *(_QWORD *)(a1 + 120) = v30;
  sub_1BA895D94(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1));
  return a1;
}

uint64_t assignWithTake for FormatDirectionalGradient(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 96);
  v14 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v15;
  v16 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v16;
  v17 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v17;
  sub_1BA895D94(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1));
  return a1;
}

ValueMetadata *type metadata accessor for FormatImageAdjustmentMask()
{
  return &type metadata for FormatImageAdjustmentMask;
}

uint64_t SharingPuzzleActivityTypeProvider.supportedActivityTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SharingPuzzleActivityTypeProvider.__allocating_init(supportedActivityTypes:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t SharingPuzzleActivityTypeProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SharingPuzzleActivityTypeProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of SharingPuzzleActivityTypeProviderType.supportedActivityTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for SharingPuzzleActivityTypeProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingPuzzleActivityTypeProvider.__allocating_init(supportedActivityTypes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t FormatFileReferenceCollection.init(references:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static FormatFileReferenceCollection.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatFileReference(0, a3, a4, a4);
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReference<A>, v4);
  return sub_1BB872EEC();
}

uint64_t FormatFileReferenceCollection.references.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatFileReferenceCollection.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v4 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v9[1] = v4;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  v6 = type metadata accessor for FormatFileReference(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v5);
  v7 = sub_1BB872EE0();
  v9[0] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReference<A>, v6);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v7, v9);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_1BB2D452C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1BB2D45B0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v5 = type metadata accessor for FormatFileReferenceCollection.MetadataContainer.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x1BCCE5B24](&unk_1BB904AC0, v5);
  v6 = sub_1BB8741D0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746C8();
  type metadata accessor for FormatMetadata();
  sub_1BA6BE2A8(&qword_1ED39CBE8, (uint64_t)&protocol conformance descriptor for FormatMetadata);
  sub_1BB87414C();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB2D46E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v25 = a4;
  sub_1BA4A3FB4(0, &qword_1ED3B40F8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  MEMORY[0x1E0C80A78](v7);
  v29 = (char *)&v24 - v8;
  v10 = type metadata accessor for FormatFileReferenceCollection.MetadataContainer.CodingKeys(255, a2, a3, v9);
  MEMORY[0x1BCCE5B24](&unk_1BB904AC0, v10);
  v28 = sub_1BB874104();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v12 = (char *)&v24 - v11;
  v24 = type metadata accessor for FormatFileReferenceCollection.MetadataContainer(0, a2, a3, v13);
  v14 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v16 = (char *)&v24 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v27 = v12;
  v17 = v30;
  sub_1BB87468C();
  if (!v17)
  {
    v18 = v14;
    v19 = v26;
    type metadata accessor for FormatMetadata();
    sub_1BA6BE2A8(&qword_1ED3B40A0, (uint64_t)&protocol conformance descriptor for FormatMetadata);
    v21 = v28;
    v20 = (uint64_t)v29;
    v22 = v27;
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v21);
    sub_1BAF63CFC(v20, (uint64_t)v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v25, v16, v24);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB2D48FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2D452C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BB2D492C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA647E00();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BB2D4958(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB904AC0, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB2D498C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB904AC0, a1);
  return sub_1BB87471C();
}

uint64_t sub_1BB2D49C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB2D46E0(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1BB2D49DC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2D45B0(a1, a2, a3, a4);
}

uint64_t sub_1BB2D49F0(_QWORD *a1, uint64_t a2)
{
  return FormatFileReferenceCollection.encode(to:)(a1, a2);
}

uint64_t sub_1BB2D4A04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatFileReferenceCollection.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1BB2D4A10(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>);
  a1[2] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, a2);
  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, a2);
  a1[3] = result;
  return result;
}

uint64_t *sub_1BB2D4A68(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t *, _QWORD, uint64_t, int *);

  sub_1BA4A3FB4(0, &qword_1ED3B40F8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for FormatMetadata();
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = v7[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1BB86EB84();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
      swift_bridgeObjectRetain();
      v16(v12, v13, v14);
      v16((char *)a1 + v7[6], (char *)a2 + v7[6], v14);
      v17 = v7[7];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))((char *)a2 + v17, 1, v14))
      {
        sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v16(v18, v19, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      }
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      *(uint64_t *)((char *)a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      *(uint64_t *)((char *)a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
      v21 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(a1, 0, 1, v7);
    }
  }
  return a1;
}

_QWORD *sub_1BB2D4C60(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(_QWORD *, _QWORD, uint64_t, int *);

  v4 = (int *)type metadata accessor for FormatMetadata();
  v5 = *((_QWORD *)v4 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    sub_1BA4A3FB4(0, &qword_1ED3B40F8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = v4[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86EB84();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v13((char *)a1 + v4[6], (char *)a2 + v4[6], v11);
    v14 = v4[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v14, 1, v11))
    {
      sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
    *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
    *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
    *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
    v18 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v5 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(a1, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_1BB2D4E30(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t, int *);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  void (*v32)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v33;

  v4 = (int *)type metadata accessor for FormatMetadata();
  v5 = *((_QWORD *)v4 - 1);
  v6 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
LABEL_6:
      sub_1BA4A3FB4(0, &qword_1ED3B40F8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      return a1;
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20 = v4[5];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_1BB86EB84();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(void (**)(char *, char *, uint64_t))(v24 + 24);
    v25(v21, v22, v23);
    v25((char *)a1 + v4[6], (char *)a2 + v4[6], v23);
    v26 = v4[7];
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    v30 = v29((char *)a1 + v26, 1, v23);
    v31 = v29(v28, 1, v23);
    if (v30)
    {
      if (!v31)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v28, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v23);
LABEL_17:
        *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v31)
      {
        v25(v27, v28, v23);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
    }
    sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_17;
  }
  if (v8)
    goto LABEL_6;
  *a1 = *a2;
  a1[1] = a2[1];
  v10 = v4[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BB86EB84();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  v15(v11, v12, v13);
  v15((char *)a1 + v4[6], (char *)a2 + v4[6], v13);
  v16 = v4[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))((char *)a2 + v16, 1, v13))
  {
    sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v15(v17, v18, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
  }
  *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
  *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
  *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
  *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
  v32 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v5 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32(a1, 0, 1, v4);
  return a1;
}

_OWORD *sub_1BB2D51E4(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = (int *)type metadata accessor for FormatMetadata();
  v5 = *((_QWORD *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    sub_1BA4A3FB4(0, &qword_1ED3B40F8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v4[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86EB84();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v12(v8, v9, v10);
    v12((char *)a1 + v4[6], (char *)a2 + v4[6], v10);
    v13 = v4[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v13, 1, v10))
    {
      sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
    *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
    *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
    *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
    *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

_QWORD *sub_1BB2D5390(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD *, uint64_t, int *);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;

  v4 = (int *)type metadata accessor for FormatMetadata();
  v5 = *((_QWORD *)v4 - 1);
  v6 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
LABEL_6:
      sub_1BA4A3FB4(0, &qword_1ED3B40F8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      return a1;
    }
    v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    swift_bridgeObjectRelease();
    v21 = v4[5];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_1BB86EB84();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(void (**)(char *, char *, uint64_t))(v25 + 40);
    v26(v22, v23, v24);
    v26((char *)a1 + v4[6], (char *)a2 + v4[6], v24);
    v27 = v4[7];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    v31 = v30((char *)a1 + v27, 1, v24);
    v32 = v30(v29, 1, v24);
    if (v31)
    {
      if (!v32)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v28, v29, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v28, 0, 1, v24);
LABEL_17:
        *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v32)
      {
        v26(v28, v29, v24);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
    }
    sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_17;
  }
  if (v8)
    goto LABEL_6;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v10 = v4[5];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1BB86EB84();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v15(v11, v12, v13);
  v15((char *)a1 + v4[6], (char *)a2 + v4[6], v13);
  v16 = v4[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))((char *)a2 + v16, 1, v13))
  {
    sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v15(v17, v18, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
  }
  *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
  *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
  *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
  *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1BB2D56E8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2D56F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3B40F8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BB2D5740()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2D574C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1ED3B40F8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FormatFileReferenceCollection.MetadataContainer.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFileReferenceCollection.MetadataContainer.CodingKeys);
}

uint64_t sub_1BB2D57A8(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB2D57E8 + 4 * byte_1BB904880[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB2D5808 + 4 * byte_1BB904885[v4]))();
}

_BYTE *sub_1BB2D57E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB2D5808(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2D5810(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2D5818(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2D5820(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2D5828(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1BB2D5834()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB2D5844()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB2D5854()
{
  JUMPOUT(0x1BCCE5B24);
}

ValueMetadata *type metadata accessor for A12_V15()
{
  return &type metadata for A12_V15;
}

uint64_t sub_1BB2D5874(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2C0CA8, (uint64_t (*)(void))sub_1BB2D7C2C, (uint64_t)&type metadata for A12_V15.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2D7C2C();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB2D5A28()
{
  sub_1BB2D7C2C();
  return sub_1BB874710();
}

uint64_t sub_1BB2D5A50()
{
  sub_1BB2D7C2C();
  return sub_1BB87471C();
}

double sub_1BB2D5A78@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB2D7A18(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB2D5ABC(_QWORD *a1)
{
  return sub_1BB2D5874(a1);
}

uint64_t sub_1BB2D5AD0()
{
  sub_1BB2D772C();
  return sub_1BB86D96C();
}

uint64_t sub_1BB2D5B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  void *v22;
  void *v23;
  unsigned __int8 v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  __int128 v70;
  unsigned __int8 v71;
  ValueMetadata *v72;
  unint64_t v73;
  uint64_t v74;

  v74 = a2;
  v61 = a3;
  v5 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v59 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  MEMORY[0x1E0C80A78](v9);
  v62 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v51 - v12;
  v14 = type metadata accessor for GroupLayoutBindingContext();
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = *v3;
  v17 = (void *)*((_QWORD *)v3 + 1);
  v18 = v3[16];
  *(_QWORD *)&v70 = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)&v70))
  {
    sub_1BA7E415C();
    swift_allocError();
    *(_OWORD *)v19 = 0u;
    *(_OWORD *)(v19 + 16) = 0u;
    *(_QWORD *)(v19 + 32) = 0;
    *(_BYTE *)(v19 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    v55 = a1;
    v54 = v16;
    sub_1BA4C2DD8(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    v21 = (uint64_t)v13;
    sub_1BA4C2DD8(v74, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v22 = v17;
    v23 = v17;
    v24 = v18;
    sub_1BA7C26A0(v23, v18);
    sub_1BB86C8D4();
    v53 = sub_1BB86C8C8();
    v52 = v25;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v72 = &type metadata for A12_V15;
    v26 = sub_1BA8EE804();
    v73 = v26;
    v27 = v56;
    LOBYTE(v70) = v56;
    *((_QWORD *)&v70 + 1) = v22;
    v71 = v24;
    type metadata accessor for GroupLayoutKey();
    v28 = swift_allocObject();
    sub_1BA7C26A0(v22, v24);
    v64 = sub_1BB874734();
    v65 = v29;
    v68 = 95;
    v69 = 0xE100000000000000;
    v66 = 45;
    v67 = 0xE100000000000000;
    sub_1BA7114A0();
    v30 = sub_1BB873B04();
    v32 = v31;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 16) = v30;
    *(_QWORD *)(v28 + 24) = v32;
    v33 = (uint64_t *)(v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v34 = v52;
    *v33 = v53;
    v33[1] = v34;
    sub_1BA4C010C((uint64_t)&v70, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    v35 = v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BA5193C4((uint64_t)v54, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v35, 0, 1, v58);
    v36 = v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BA5193C4(v21, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v36, 0, 1, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    sub_1BA7C2538(v22, v24);
    v72 = &type metadata for A12_V15;
    v73 = v26;
    LOBYTE(v70) = v27;
    *((_QWORD *)&v70 + 1) = v22;
    v71 = v24;
    v37 = v62;
    sub_1BA4C2DD8(v74, v62, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = MEMORY[0x1E0DEE9D8];
    v39 = (_QWORD *)(v38 + 16);
    swift_beginAccess();
    v40 = *(_QWORD **)(v38 + 16);
    sub_1BA7C26A0(v22, v24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v38 + 16) = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v40 = sub_1BA7892A0(0, v40[2] + 1, 1, v40);
      *v39 = v40;
    }
    v42 = v61;
    v43 = v63;
    v45 = v40[2];
    v44 = v40[3];
    if (v45 >= v44 >> 1)
    {
      v40 = sub_1BA7892A0((_QWORD *)(v44 > 1), v45 + 1, 1, v40);
      *v39 = v40;
    }
    v40[2] = v45 + 1;
    v46 = &v40[2 * v45];
    v46[4] = sub_1BACB8D7C;
    v46[5] = 0;
    swift_endAccess();
    v47 = sub_1BA7E1F18((uint64_t)&unk_1E726A0B0, 0, 0, v38, 0, 0, 0, 0);
    if (v43)
    {
      swift_release();
      swift_release();
      sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    }
    else
    {
      v48 = v47;
      swift_release();
      v49 = type metadata accessor for A12_V15.Bound();
      v42[3] = v49;
      v42[4] = sub_1BA4A2870(qword_1EF2C0B80, (uint64_t (*)(uint64_t))type metadata accessor for A12_V15.Bound, (uint64_t)&unk_1BB904BD8);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v42);
      *boxed_opaque_existential_0 = v28;
      sub_1BA4CECCC(&v70, (uint64_t)(boxed_opaque_existential_0 + 1));
      result = sub_1BA5193C4(v37, (uint64_t)boxed_opaque_existential_0 + *(int *)(v49 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v49 + 28)) = v48;
    }
  }
  return result;
}

double sub_1BB2D60C4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  double v19[3];
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v2 = v1;
  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for A12_V15.Bound() + 28));
  v23 = v2;
  swift_bridgeObjectRetain();
  v9 = sub_1BA8A1BE4((void (*)(uint64_t))sub_1BB2D76C4, (uint64_t)v22, v8, (uint64_t)v29);
  swift_bridgeObjectRelease();
  v10 = *MEMORY[0x1E0DB5D88];
  v11 = sub_1BB86D678();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v7, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6200], v4);
  v21 = v9;
  sub_1BB2D77D0(0, &qword_1EF2C0C28, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v20 = sub_1BB86DB34();
  v12 = sub_1BB86DB40();
  *(_OWORD *)v19 = v25;
  v13 = v26;
  v14 = v27;
  v24 = v28;
  *(_QWORD *)&v25 = v9;
  MEMORY[0x1E0C80A78](v12);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v15 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v25 = v15;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v16 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_BYTE *)a1 = 0;
  result = v19[0];
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v19;
  *(_QWORD *)(a1 + 24) = v13;
  *(_QWORD *)(a1 + 32) = v14;
  v18 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 40) = v16;
  *(_QWORD *)(a1 + 48) = v18;
  return result;
}

uint64_t sub_1BB2D63E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t inited;
  _BYTE v18[104];
  __int128 v19[2];
  __int128 v20[2];
  uint64_t v21[5];
  char v22;

  v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *a2;
  sub_1BA4C2DD8(a1, (uint64_t)v8, v10);
  v11 = (char *)a2 + *(int *)(type metadata accessor for A12_V15.Bound() + 24);
  v12 = type metadata accessor for GroupLayoutContext();
  v13 = *(_QWORD *)(*(_QWORD *)&v11[*(int *)(v12 + 40)] + 16);
  v14 = *(double *)&v11[*(int *)(v12 + 32)];
  sub_1BA4C010C(v13 + 16, (uint64_t)v20);
  sub_1BA4C010C(v13 + 56, (uint64_t)v19);
  v15 = v14 * *(double *)(v13 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  inited = swift_initStackObject();
  sub_1BA4CECCC(v20, inited + 16);
  sub_1BA4CECCC(v19, inited + 56);
  *(double *)(inited + 96) = v15;
  v22 = 2;
  swift_retain();
  FeedLayoutStylerFactory.styler(withHeading:)(&v22, v21);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v21, a3);
}

uint64_t sub_1BB2D6554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  _BYTE v12[16];
  uint64_t v13;
  uint64_t v14;

  sub_1BA4CDF6C(0, &qword_1EF2C0C40, (uint64_t (*)(void))sub_1BB2D76E8, (uint64_t)&type metadata for A12_V15.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v12[-v7];
  v14 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 12;
  *v8 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB63F8], v5);
  v13 = a2;
  v10 = MEMORY[0x1E0DB5DD0];
  sub_1BB2D77D0(0, &qword_1EF2C0C48, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB2D7790(&qword_1EF2C0C50, &qword_1EF2C0C48, (uint64_t (*)(uint64_t, _QWORD *))v10, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BB2D66AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C0C40, (uint64_t (*)(void))sub_1BB2D76E8, (uint64_t)&type metadata for A12_V15.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (uint64_t *)((char *)&v20 - v6);
  v23 = a1;
  v8 = sub_1BB86D438();
  v9 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v10, *MEMORY[0x1E0DB5A38], v8);
  *v7 = v9;
  v11 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v5 + 104);
  v11(v7, *MEMORY[0x1E0DB6318], v4);
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB2D77D0(0, &qword_1EF2C0C58, MEMORY[0x1E0DB5A10]);
  sub_1BB2D7790(&qword_1EF2C0C60, &qword_1EF2C0C58, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v13(v7, v4);
  v23 = a1;
  v11(v7, *MEMORY[0x1E0DB6410], v4);
  sub_1BB2D784C();
  sub_1BA4CDF6C(0, &qword_1EF2C0C70, (uint64_t (*)(void))sub_1BB2D76E8, (uint64_t)&type metadata for A12_V15.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BB87CE70;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x1E0DB5C80], v15);
  v22 = v21;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v7, v4);
}

uint64_t sub_1BB2D6904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2C0C40, (uint64_t (*)(void))sub_1BB2D76E8, (uint64_t)&type metadata for A12_V15.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB2D77D0(0, &qword_1EF2C0C58, MEMORY[0x1E0DB5A10]);
  sub_1BB2D7790(&qword_1EF2C0C60, &qword_1EF2C0C58, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 6;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BB2D6AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C0C40, (uint64_t (*)(void))sub_1BB2D76E8, (uint64_t)&type metadata for A12_V15.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 2;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB2D77D0(0, &qword_1EF2C0C58, MEMORY[0x1E0DB5A10]);
  sub_1BB2D7790(&qword_1EF2C0C60, &qword_1EF2C0C58, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BB2D6EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2C0C40, (uint64_t (*)(void))sub_1BB2D76E8, (uint64_t)&type metadata for A12_V15.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 2;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB2D77D0(0, &qword_1EF2C0C58, MEMORY[0x1E0DB5A10]);
  sub_1BB2D7790(&qword_1EF2C0C60, &qword_1EF2C0C58, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BB2D7300@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V15.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB2D73E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB2D5B38(a1, a2, a3);
}

uint64_t sub_1BB2D73F4()
{
  return sub_1BB690A58();
}

unint64_t sub_1BB2D7404(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB2D7430();
  result = sub_1BB2D7474();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB2D7430()
{
  unint64_t result;

  result = qword_1EF2C0B70;
  if (!qword_1EF2C0B70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904B24, &type metadata for A12_V15);
    atomic_store(result, (unint64_t *)&qword_1EF2C0B70);
  }
  return result;
}

unint64_t sub_1BB2D7474()
{
  unint64_t result;

  result = qword_1EF2C0B78;
  if (!qword_1EF2C0B78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904B4C, &type metadata for A12_V15);
    atomic_store(result, (unint64_t *)&qword_1EF2C0B78);
  }
  return result;
}

uint64_t type metadata accessor for A12_V15.Bound()
{
  uint64_t result;

  result = qword_1EF2C0BE0;
  if (!qword_1EF2C0BE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB2D74F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2D7500(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB2D757C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB2D7588(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB2D75FC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB2D7688(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2C0C20, (uint64_t (*)(uint64_t))type metadata accessor for A12_V15.Bound, (uint64_t)&unk_1BB904BB0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB2D76C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BB2D63E8(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1BB2D76E0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2D6554(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1BB2D76E8()
{
  unint64_t result;

  result = qword_1EF2C0C30;
  if (!qword_1EF2C0C30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904D08, &type metadata for A12_V15.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2C0C30);
  }
  return result;
}

unint64_t sub_1BB2D772C()
{
  unint64_t result;

  result = qword_1EF2C0C38;
  if (!qword_1EF2C0C38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904CD8, &type metadata for A12_V15.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C0C38);
  }
  return result;
}

uint64_t sub_1BB2D7770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB2D7300(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB2D7778()
{
  return swift_deallocObject();
}

uint64_t sub_1BB2D7788(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2D66AC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB2D7790(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB2D77D0(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB2D77D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V15.Layout;
    v8[1] = &type metadata for A12_V15.Layout.Attributes;
    v8[2] = sub_1BB2D76E8();
    v8[3] = sub_1BB2D772C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BB2D784C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C0C68)
  {
    sub_1BA4CDF6C(255, &qword_1EF2C0C70, (uint64_t (*)(void))sub_1BB2D76E8, (uint64_t)&type metadata for A12_V15.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C0C68);
  }
}

uint64_t sub_1BB2D78C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2D6904(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB2D78C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2D6AEC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB2D78D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2D6EF0(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V15.Layout.Attributes()
{
  return &type metadata for A12_V15.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V15.Layout()
{
  return &type metadata for A12_V15.Layout;
}

unint64_t sub_1BB2D78FC()
{
  unint64_t result;

  result = qword_1EF2C0C78;
  if (!qword_1EF2C0C78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904C78, &type metadata for A12_V15.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C0C78);
  }
  return result;
}

unint64_t sub_1BB2D7944()
{
  unint64_t result;

  result = qword_1EF2C0C80;
  if (!qword_1EF2C0C80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904C50, &type metadata for A12_V15.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C0C80);
  }
  return result;
}

unint64_t sub_1BB2D798C()
{
  unint64_t result;

  result = qword_1EF2C0C88;
  if (!qword_1EF2C0C88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904C28, &type metadata for A12_V15.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C0C88);
  }
  return result;
}

unint64_t sub_1BB2D79D4()
{
  unint64_t result;

  result = qword_1EF2C0C90;
  if (!qword_1EF2C0C90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904CA0, &type metadata for A12_V15.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2C0C90);
  }
  return result;
}

uint64_t sub_1BB2D7A18@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2C0C98, (uint64_t (*)(void))sub_1BB2D7C2C, (uint64_t)&type metadata for A12_V15.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2D7C2C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB2D7C2C()
{
  unint64_t result;

  result = qword_1EF2C0CA0;
  if (!qword_1EF2C0CA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904DFC, &type metadata for A12_V15.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0CA0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V15.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB2D7CBC + 4 * byte_1BB904B15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB2D7CF0 + 4 * byte_1BB904B10[v4]))();
}

uint64_t sub_1BB2D7CF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2D7CF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2D7D00);
  return result;
}

uint64_t sub_1BB2D7D0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2D7D14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB2D7D18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2D7D20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V15.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V15.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB2D7D40()
{
  unint64_t result;

  result = qword_1EF2C0CB0;
  if (!qword_1EF2C0CB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904DD4, &type metadata for A12_V15.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0CB0);
  }
  return result;
}

unint64_t sub_1BB2D7D88()
{
  unint64_t result;

  result = qword_1EF2C0CB8;
  if (!qword_1EF2C0CB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904D44, &type metadata for A12_V15.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0CB8);
  }
  return result;
}

unint64_t sub_1BB2D7DD0()
{
  unint64_t result;

  result = qword_1EF2C0CC0;
  if (!qword_1EF2C0CC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904D6C, &type metadata for A12_V15.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0CC0);
  }
  return result;
}

uint64_t initializeWithCopy for DebugInspectionAggregate(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectionAggregate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v5 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v5;
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for DebugInspectionAggregate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionAggregate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionAggregate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionAggregate()
{
  return &type metadata for DebugInspectionAggregate;
}

uint64_t sub_1BB2D80A4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  char v12[8];
  _BYTE v13[8];

  v3 = v1;
  sub_1BB2D8948(0, &qword_1EF2C0CD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2D8904();
  sub_1BB8746C8();
  v12[0] = 0;
  sub_1BB87417C();
  if (!v2)
  {
    sub_1BB2D89A4(v3 + 16, (uint64_t)v13);
    sub_1BB2D89A4((uint64_t)v13, (uint64_t)v12);
    v11[15] = 1;
    sub_1BA6D249C();
    sub_1BA585B78((unint64_t *)&qword_1ED39DA10, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1BB87414C();
    v12[0] = 2;
    sub_1BB87417C();
    v12[0] = 3;
    sub_1BB874194();
    v12[0] = 4;
    sub_1BB874134();
    v12[0] = 5;
    sub_1BB874194();
    v12[0] = 6;
    sub_1BB874194();
    v12[0] = 7;
    sub_1BB874170();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB2D8300()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2D8328 + 4 * byte_1BB904E50[*v0]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1BB2D8328()
{
  return 1936154996;
}

uint64_t sub_1BB2D8334()
{
  return 0x696669746E656469;
}

uint64_t sub_1BB2D8350()
{
  return 7500899;
}

uint64_t sub_1BB2D8360()
{
  return 0x6B63696C43776172;
}

uint64_t sub_1BB2D837C()
{
  return 0x736B63696C63;
}

uint64_t sub_1BB2D8390()
{
  return 0x6973736572706D69;
}

uint64_t sub_1BB2D83B0()
{
  return 0x756F43746E657665;
}

uint64_t sub_1BB2D83D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2D8BE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2D83F4()
{
  sub_1BB2D8904();
  return sub_1BB874710();
}

uint64_t sub_1BB2D841C()
{
  sub_1BB2D8904();
  return sub_1BB87471C();
}

double sub_1BB2D8444@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[4];
  _OWORD v8[2];

  sub_1BB2D84DC(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v7[3];
    a2[2] = v7[2];
    a2[3] = v5;
    a2[4] = v8[0];
    *(_OWORD *)((char *)a2 + 73) = *(_OWORD *)((char *)v8 + 9);
    result = *(double *)v7;
    v6 = v7[1];
    *a2 = v7[0];
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1BB2D8494(_QWORD *a1)
{
  return sub_1BB2D80A4(a1);
}

uint64_t sub_1BB2D84DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  sub_1BB2D8948(0, &qword_1EF2C0CC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2D8904();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v39) = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  sub_1BA6D249C();
  v38 = 1;
  sub_1BA585B78((unint64_t *)&qword_1ED3B95F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v36 = v10;
  v13 = v39;
  LOBYTE(v39) = 2;
  swift_bridgeObjectRetain();
  v34 = sub_1BB874098();
  v35 = v13;
  LOBYTE(v39) = 3;
  v15 = v14;
  swift_bridgeObjectRetain();
  sub_1BB8740B0();
  v37 = v15;
  v17 = v16;
  LOBYTE(v39) = 4;
  v18 = sub_1BB874044();
  HIDWORD(v32) = v19;
  v33 = v18;
  LOBYTE(v39) = 5;
  sub_1BB8740B0();
  v21 = v20;
  LOBYTE(v39) = 6;
  sub_1BB8740B0();
  v23 = v22;
  LOBYTE(v39) = 7;
  v24 = sub_1BB87408C();
  v25 = v9;
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v25, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = v37;
  swift_bridgeObjectRelease();
  v29 = v35;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = v12;
  v31 = v34;
  *(_QWORD *)(a2 + 16) = v29;
  *(_QWORD *)(a2 + 24) = v31;
  *(_QWORD *)(a2 + 32) = v28;
  *(_QWORD *)(a2 + 40) = v17;
  *(_QWORD *)(a2 + 48) = v33;
  *(_BYTE *)(a2 + 56) = BYTE4(v32) & 1;
  *(_QWORD *)(a2 + 64) = v21;
  *(_QWORD *)(a2 + 72) = v23;
  *(_QWORD *)(a2 + 80) = v24;
  *(_BYTE *)(a2 + 88) = v27 & 1;
  return result;
}

unint64_t sub_1BB2D8904()
{
  unint64_t result;

  result = qword_1EF2C0CD0;
  if (!qword_1EF2C0CD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904FA0, &type metadata for DebugInspectionAggregate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0CD0);
  }
  return result;
}

void sub_1BB2D8948(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB2D8904();
    v7 = a3(a1, &type metadata for DebugInspectionAggregate.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB2D89A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB2D89E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BB2D89E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C0CE0)
  {
    sub_1BA6D249C();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C0CE0);
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectionAggregate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BB2D8A88 + 4 * byte_1BB904E5D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BB2D8ABC + 4 * byte_1BB904E58[v4]))();
}

uint64_t sub_1BB2D8ABC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2D8AC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2D8ACCLL);
  return result;
}

uint64_t sub_1BB2D8AD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2D8AE0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BB2D8AE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2D8AEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionAggregate.CodingKeys()
{
  return &type metadata for DebugInspectionAggregate.CodingKeys;
}

unint64_t sub_1BB2D8B0C()
{
  unint64_t result;

  result = qword_1EF2C0CE8;
  if (!qword_1EF2C0CE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904F78, &type metadata for DebugInspectionAggregate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0CE8);
  }
  return result;
}

unint64_t sub_1BB2D8B54()
{
  unint64_t result;

  result = qword_1EF2C0CF0;
  if (!qword_1EF2C0CF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904EE8, &type metadata for DebugInspectionAggregate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0CF0);
  }
  return result;
}

unint64_t sub_1BB2D8B9C()
{
  unint64_t result;

  result = qword_1EF2C0CF8;
  if (!qword_1EF2C0CF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904F10, &type metadata for DebugInspectionAggregate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0CF8);
  }
  return result;
}

uint64_t sub_1BB2D8BE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1936154996 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7500899 && a2 == 0xE300000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6B63696C43776172 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736B63696C63 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x756F43746E657665 && a2 == 0xEA0000000000746ELL)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t storeEnumTagSinglePayload for DebugFormatBackgroundColor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB2D8F70 + 4 * byte_1BB904FF5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB2D8FA4 + 4 * byte_1BB904FF0[v4]))();
}

uint64_t sub_1BB2D8FA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2D8FAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2D8FB4);
  return result;
}

uint64_t sub_1BB2D8FC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2D8FC8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB2D8FCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2D8FD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatBackgroundColor()
{
  return &type metadata for DebugFormatBackgroundColor;
}

unint64_t sub_1BB2D8FF4()
{
  unint64_t result;

  result = qword_1EF2C0D00;
  if (!qword_1EF2C0D00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9050F0, &type metadata for DebugFormatBackgroundColor);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D00);
  }
  return result;
}

void sub_1BB2D9038(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

void sub_1BB2D9070()
{
  swift_retain();
  sub_1BB86E494();
  swift_release();
  sub_1BB2D92C8();
}

void sub_1BB2D92C8()
{
  __asm { BR              X10 }
}

id sub_1BB2D92F8()
{
  return _sSo7UIColorC8NewsFeedE09secondaryC10BackgroundABvgZ_0();
}

id sub_1BB2D930C()
{
  int v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  if (qword_1ED3D5150 != -1)
    swift_once();
  v0 = byte_1ED3D5168;
  v1 = (void *)objc_opt_self();
  v2 = v1;
  if (v0 != 1)
    return objc_msgSend(v1, sel_systemBackgroundColor);
  v3 = objc_msgSend(v1, sel_secondarySystemBackgroundColor);
  v4 = objc_msgSend(v2, sel_systemBackgroundColor);
  v5 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v3, v4);

  return v5;
}

uint64_t sub_1BB2DA058(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2DA090 + 4 * byte_1BB904FFA[a1]))(0x6574697265686E69, 0xE900000000000064);
}

uint64_t sub_1BB2DA090()
{
  return 0x6B63614264656566;
}

unint64_t sub_1BB2DA0B4()
{
  return 0xD000000000000017;
}

uint64_t sub_1BB2DA10C()
{
  return 0x6D6F74737563;
}

void sub_1BB2DA120(char *a1)
{
  sub_1BB7F39EC(*a1);
}

void sub_1BB2DA12C()
{
  char *v0;

  sub_1BA8D43DC(*v0);
}

void sub_1BB2DA134(uint64_t a1)
{
  char *v1;

  sub_1BA9D2068(a1, *v1);
}

void sub_1BB2DA13C(uint64_t a1)
{
  char *v1;

  sub_1BAB08530(a1, *v1);
}

uint64_t sub_1BB2DA144@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB2DA5D4();
  *a1 = result;
  return result;
}

uint64_t sub_1BB2DA170@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB2DA058(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB2DA198()
{
  sub_1BB1B040C();
  return sub_1BB872CDC();
}

uint64_t sub_1BB2DA1D8()
{
  sub_1BB1B040C();
  return sub_1BB872CD0();
}

uint64_t sub_1BB2DA220()
{
  sub_1BB1B040C();
  return sub_1BB872CC4();
}

id sub_1BB2DA260()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  id v28;
  id v29;
  id v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v0 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v3 = *((_QWORD *)v2 + 8);
  swift_bridgeObjectRetain();
  sub_1BA752890((uint64_t)v2);
  if (*(_QWORD *)(v3 + 16) && (v4 = sub_1BA6E35A8(0x6373654464656546, 0xEE00726F74706972), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(v3 + 56) + 40 * v4, (uint64_t)&v32);
  }
  else
  {
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v33 + 1))
  {
    sub_1BA7EF1BC((uint64_t)&v32);
    return 0;
  }
  sub_1BA83CC6C();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v6 = v31;
  v7 = FCFeedDescriptor.feedTag.getter();

  v8 = objc_msgSend(v7, sel_theme);
  swift_unknownObjectRelease();
  if (!v8)
  {
LABEL_13:

    return 0;
  }
  v9 = objc_msgSend(v8, sel_feedBackgroundColor);
  v10 = objc_msgSend(v8, sel_darkStyleFeedBackgroundColor);
  if (!v9)
  {

    swift_unknownObjectRelease();
    goto LABEL_13;
  }
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v9, sel_red);
    v13 = v12;
    objc_msgSend(v9, sel_green);
    v15 = v14;
    objc_msgSend(v9, sel_blue);
    v17 = v16;
    objc_msgSend(v9, sel_alpha);
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v13, v15, v17, v18);
    v20 = v11;
    objc_msgSend(v20, sel_red);
    v22 = v21;
    objc_msgSend(v20, sel_green);
    v24 = v23;
    objc_msgSend(v20, sel_blue);
    v26 = v25;
    objc_msgSend(v20, sel_alpha);
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v22, v24, v26, v27);
    v29 = objc_msgSend((id)objc_opt_self(), sel_ts_dynamicColor_withDarkStyleVariant_, v19, v28);

    swift_unknownObjectRelease();
  }
  else
  {
    v29 = objc_msgSend(v9, sel_ne_color);

    swift_unknownObjectRelease();
  }
  return v29;
}

uint64_t sub_1BB2DA5D4()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1BB2DA61C()
{
  uint64_t v0;

  sub_1BA4B07F0(0, &qword_1EF2C0D08, (uint64_t (*)(uint64_t))sub_1BB2DA868, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BB2DA868();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BB898AA0;
  sub_1BB86D384();
  sub_1BB86D384();
  sub_1BB86D384();
  sub_1BB86D384();
  sub_1BB86D384();
  sub_1BB86D384();
  return v0;
}

void sub_1BB2DA868()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C0D10)
  {
    v0 = sub_1BB86D390();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C0D10);
  }
}

uint64_t dispatch thunk of HeadlineViewRendererType.presentingViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HeadlineViewRendererType.presentingViewController.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HeadlineViewRendererType.presentingViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of HeadlineViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of HeadlineViewRendererType.render(for:with:in:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 40))();
}

void (*sub_1BB2DA8E4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCE5D40](v1 + 16);
  return sub_1BB2DA94C;
}

void sub_1BB2DA94C(uint64_t *a1, char a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = *a1;
  v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 32) + 16;
    swift_endAccess();

    v6 = (void *)MEMORY[0x1BCCE5D40](v5);
    swift_beginAccess();
    swift_unknownObjectWeakAssign();

  }
  free((void *)v3);
}

uint64_t sub_1BB2DA9F4(_QWORD *a1, double *a2, _QWORD *a3, char *a4)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  char *v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  void *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *boxed_opaque_existential_0;
  void (*v50)(uint64_t *, _QWORD *, uint64_t);
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  void *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id *v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t *v78;
  _QWORD *v79;
  id *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  char *v87;
  void *v88;
  id v89;
  uint64_t v90;
  id v91;
  id v92;
  BOOL IsEmpty;
  id v94;
  void *v95;
  uint64_t v96;
  CGFloat v97;
  CGFloat v98;
  CGFloat v99;
  CGFloat v100;
  id v101;
  int v102;
  uint64_t v103;
  id v104;
  void *v105;
  id v106;
  void *v107;
  void *v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  unint64_t v120;
  _UNKNOWN **v121;
  uint64_t v122;
  _UNKNOWN **v123;
  uint64_t v124;
  _UNKNOWN **v125;
  uint64_t v126;
  _UNKNOWN **v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  _QWORD *v132;
  char *v133;
  _QWORD *v134;
  void *v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t *v141;
  void (*v142)(char *, uint64_t *, uint64_t, double);
  uint64_t v143;
  void *v144;
  double v145;
  uint64_t v146;
  char *v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  void *v163;
  id v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v170;
  void (*v171)(uint64_t, _QWORD, uint64_t);
  uint64_t v172;
  char *v173;
  uint64_t v174;
  id *v175;
  uint64_t *v176;
  id *v177;
  void **v178;
  _QWORD *v179;
  void *v180;
  uint64_t v181;
  void *v182;
  id *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  void *v188;
  void *v189;
  _QWORD *v190;
  uint64_t v191;
  char *v192;
  id v193;
  void *v194;
  void *v195;
  uint64_t *v196;
  uint64_t v197;
  id v198;
  uint64_t v199;
  char *v200;
  _QWORD *v201;
  uint64_t v202[39];
  __int128 v203;
  uint64_t v204;
  uint64_t v205;
  __int128 v206;
  _QWORD v207[5];
  id v208;
  unint64_t v209;
  _UNKNOWN **v210;
  uint64_t v211;
  unint64_t v212;
  _UNKNOWN **v213;
  id v214;
  unint64_t v215;
  _UNKNOWN **v216;
  void *v217;
  unint64_t v218;
  _UNKNOWN **v219;
  CGRect v220;

  v190 = a3;
  v201 = a1;
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v187 = (char *)&v170 - v8;
  v199 = type metadata accessor for HeadlineViewLayout.Context(0);
  v185 = *(_QWORD *)(v199 - 8);
  MEMORY[0x1E0C80A78](v199);
  v174 = v9;
  v186 = (uint64_t)&v170 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1E0C80A78](v184);
  v196 = (uint64_t *)((char *)&v170 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v192 = (char *)&v170 - v12;
  sub_1BA4B07F0(0, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State, v6);
  v14 = MEMORY[0x1E0C80A78](v13);
  v191 = (uint64_t)&v170 - v15;
  v193 = *(id *)&a4[qword_1ED3B3810];
  v16 = v193;
  objc_msgSend(v193, sel_setNumberOfLines_, 0, v14);
  v17 = *(void **)&a4[qword_1ED3B3820];
  objc_msgSend(v17, sel_setNumberOfLines_, 0);
  v18 = *(void **)&a4[qword_1ED3B3830];
  objc_msgSend(v18, sel_setAttributedText_, 0);
  v19 = *(void **)&a4[qword_1ED3B3800];
  sub_1BB871710();
  v20 = *(char **)&a4[qword_1ED3B3808];
  sub_1BB871710();
  v21 = *(void **)&a4[qword_1ED3B3828];
  objc_msgSend(v21, sel_setHidden_, 1);
  objc_msgSend(*(id *)&v20[qword_1ED476878], sel_setHidden_, 1);
  v22 = v16;
  v23 = v190;
  objc_msgSend(v22, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  v24 = a2[16];
  v25 = a2[17];
  v26 = a2[18];
  v27 = a2[19];
  v198 = v17;
  objc_msgSend(v17, sel_setFrame_, v24, v25, v26, v27);
  v28 = a2[28];
  v29 = a2[29];
  v30 = a2[30];
  v31 = a2[31];
  v195 = v20;
  objc_msgSend(v20, sel_setFrame_, v28, v29, v30, v31);
  v32 = a2[34];
  v33 = a2[35];
  v34 = a2[36];
  v35 = a2[37];
  v189 = v19;
  objc_msgSend(v19, sel_setFrame_, v32, v33, v34, v35);
  v36 = a2[8];
  v37 = a2[9];
  v38 = a2[10];
  v39 = a2[11];
  v182 = v18;
  objc_msgSend(v18, sel_setFrame_, v36, v37, v38, v39);
  v40 = a2[12];
  v41 = a2[13];
  v42 = a2[14];
  v43 = a2[15];
  v188 = v21;
  objc_msgSend(v21, sel_setFrame_, v40, v41, v42, v43);
  v200 = a4;
  v44 = *(void **)&a4[qword_1ED3B37F8];
  objc_msgSend(v44, sel_setFrame_, a2[24], a2[25], a2[26], a2[27]);
  v45 = v199;
  v46 = v201;
  v47 = v23[3];
  v48 = __swift_project_boxed_opaque_existential_1(v23, v47);
  v202[3] = v47;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v202);
  v50 = *(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
  v51 = v47;
  v52 = v193;
  v50(boxed_opaque_existential_0, v48, v51);
  v53 = (id)sub_1BB2D2ECC((uint64_t)v202);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v202);
  objc_msgSend(v52, sel_setAttributedText_, v53);

  v54 = *(id *)((char *)v46 + *(int *)(v45 + 32));
  v194 = v44;
  if (v54)
  {
    v55 = v23[3];
    v56 = __swift_project_boxed_opaque_existential_1(v23, v55);
    v202[3] = v55;
    v57 = __swift_allocate_boxed_opaque_existential_0(v202);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v57, v56, v55);
    v54 = (id)sub_1BB2D2ECC((uint64_t)v202);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v202);
  }
  v58 = v188;
  objc_msgSend(v198, sel_setAttributedText_, v54);

  v59 = v199;
  v60 = v201;
  v61 = v23[3];
  v62 = __swift_project_boxed_opaque_existential_1(v23, v61);
  v202[3] = v61;
  v63 = __swift_allocate_boxed_opaque_existential_0(v202);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v63, v62, v61);
  v64 = (id)sub_1BB2D2ECC((uint64_t)v202);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v202);
  objc_msgSend(v58, sel_setAttributedText_, v64);

  objc_msgSend(v58, sel_setHidden_, 0);
  v65 = v23[3];
  v66 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v65);
  (*(void (**)(void *, uint64_t, uint64_t, double))(v66 + 80))(v195, v65, v66, a2[33]);
  v67 = v23[3];
  v68 = v23[4];
  __swift_project_boxed_opaque_existential_1(v23, v67);
  v69 = (id *)((char *)v60 + *(int *)(v59 + 20));
  v173 = (char *)v69 + *(int *)(type metadata accessor for FeedHeadline(0) + 40);
  v70 = v191;
  sub_1BA4C2DD8((uint64_t)v173, v191, type metadata accessor for FeedHeadline.State);
  v71 = type metadata accessor for FeedHeadline.State(0);
  v171 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
  v172 = v71;
  v171(v70, 0, 1);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v68 + 88))(v194, v70, v67, v68);
  sub_1BA6580B0(v70);
  v72 = objc_msgSend(v69[5], sel_articleID);
  v73 = v200;
  objc_msgSend(v200, sel_setAccessibilityIdentifier_, v72);

  MEMORY[0x1E0C80A78](v74);
  sub_1BA6592E4(0);
  sub_1BA4A2870(&qword_1ED3B3EB8, (uint64_t (*)(uint64_t))sub_1BA6592E4, (uint64_t)&protocol conformance descriptor for CellAutomation<A>);
  sub_1BB873750();
  objc_msgSend(v73, sel_setIsAccessibilityElement_, 1);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FB0, (uint64_t (*)(uint64_t))sub_1BA76D834, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_1BB87A390;
  v76 = v23[3];
  v77 = __swift_project_boxed_opaque_existential_1(v23, v76);
  v202[3] = v76;
  v78 = __swift_allocate_boxed_opaque_existential_0(v202);
  v79 = v77;
  v80 = v69;
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v78, v79, v76);
  *(_QWORD *)(v75 + 32) = sub_1BB2D31CC((uint64_t)v202);
  *(_QWORD *)(v75 + 40) = v81;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v202);
  LOBYTE(v202[0]) = *((_BYTE *)v69 + 56);
  sub_1BA65933C();
  *(_QWORD *)(v75 + 48) = v82;
  *(_QWORD *)(v75 + 56) = v83;
  sub_1BB86F748();
  v85 = v84;
  swift_bridgeObjectRelease();
  if (v85)
  {
    v86 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v86 = 0;
  }
  v87 = v200;
  v88 = v189;
  v90 = v197;
  v89 = v198;
  objc_msgSend(v200, sel_setAccessibilityLabel_, v86);

  v91 = v80[5];
  v92 = objc_msgSend(v91, sel_language);
  objc_msgSend(v87, sel_setAccessibilityLanguage_, v92);

  objc_msgSend(v89, sel_frame);
  IsEmpty = CGRectIsEmpty(v220);
  v180 = v91;
  if (IsEmpty)
  {
    v94 = 0;
  }
  else
  {
    v94 = objc_msgSend(v91, sel_shortExcerpt);
    if (v94)
    {
      sub_1BB8729A0();

      v94 = (id)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
  }
  objc_msgSend(v87, sel_setAccessibilityValue_, v94);

  v95 = *(void **)&v87[qword_1ED3B3818];
  v96 = *v201;
  v97 = *a2;
  v98 = a2[1];
  v99 = a2[2];
  v100 = a2[3];
  v181 = *(_QWORD *)(v90 + 112);
  sub_1BB7D9DB8(v95, v96, v181, v97, v98, v99, v100);
  v101 = v80[2];
  v183 = v80;
  v102 = *((unsigned __int8 *)v80 + 24);
  v206 = xmmword_1BB8827B0;
  v179 = v207;
  v103 = sub_1BB87171C();
  v207[4] = &off_1E7336058;
  v207[3] = v103;
  v207[0] = v88;
  v175 = &v208;
  v209 = sub_1BA6581D4();
  v104 = v193;
  v208 = v193;
  v212 = v209;
  v213 = &off_1E7336048;
  v210 = &off_1E7336048;
  v105 = v188;
  v211 = (uint64_t)v188;
  v176 = &v211;
  v177 = &v214;
  v215 = v209;
  v106 = v198;
  v214 = v198;
  v178 = &v217;
  v218 = v209;
  v219 = &off_1E7336048;
  v216 = &off_1E7336048;
  v107 = v182;
  v217 = v182;
  if (v102 == 1)
  {
    v108 = (void *)objc_opt_self();
    v109 = v88;
    v110 = v104;
    v111 = v105;
    v112 = v106;
    v113 = v107;
    v114 = v200;
    v101 = objc_msgSend(v108, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(v200, sel_semanticContentAttribute));
  }
  else
  {
    v115 = v88;
    v116 = v104;
    v117 = v105;
    v118 = v106;
    v119 = v107;
    v114 = v200;
  }
  __swift_project_boxed_opaque_existential_1(v179, v103);
  sub_1BA6597E0((uint64_t)v101);
  v120 = v209;
  v121 = v210;
  __swift_project_boxed_opaque_existential_1(v175, v209);
  ((void (*)(id, unint64_t, _UNKNOWN **))v121[1])(v101, v120, v121);
  v122 = v212;
  v123 = v213;
  __swift_project_boxed_opaque_existential_1(v176, v212);
  ((void (*)(id, uint64_t, _UNKNOWN **))v123[1])(v101, v122, v123);
  v124 = v215;
  v125 = v216;
  __swift_project_boxed_opaque_existential_1(v177, v215);
  ((void (*)(id, uint64_t, _UNKNOWN **))v125[1])(v101, v124, v125);
  v126 = v218;
  v127 = v219;
  __swift_project_boxed_opaque_existential_1(v178, v218);
  ((void (*)(id, uint64_t, _UNKNOWN **))v127[1])(v101, v126, v127);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B29F8);
  swift_arrayDestroy();
  v128 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v128, sel_scale);
  v130 = v129;

  v131 = objc_msgSend(v114, sel_traitCollection);
  v132 = v192;
  v133 = &v192[*(int *)(v184 + 24)];
  v134 = (_QWORD *)sub_1BB86F550();
  v135 = *(void **)(*(v134 - 1) + 56);
  v198 = v134;
  v193 = v135;
  ((void (*)(char *, uint64_t, uint64_t))v135)(v133, 1, 1);
  *v132 = v130;
  v132[1] = v131;
  v188 = (void *)type metadata accessor for PublisherLogoProcessorRequest(0);
  v136 = (_QWORD *)((char *)v201 + *(int *)(v199 + 24));
  v137 = v136[3];
  v138 = v136[4];
  v139 = __swift_project_boxed_opaque_existential_1(v136, v137);
  v204 = v137;
  v205 = *(_QWORD *)(v138 + 8);
  v140 = v205;
  v141 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v203);
  v142 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(_QWORD *)(v137 - 8) + 16);
  ((void (*)(uint64_t *, _QWORD *, uint64_t))v142)(v141, v139, v137);
  v143 = (uint64_t)v196;
  sub_1BA4C2DD8((uint64_t)v132, (uint64_t)v196, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
  v144 = memcpy(v202, a2, 0x130uLL);
  v145 = MEMORY[0x1E0C80A78](v144);
  v147 = (char *)&v170 - v146;
  v142((char *)&v170 - v146, v141, v137, v145);
  v148 = (void *)swift_unknownObjectRetain();
  v149 = v143;
  v150 = (uint64_t)v188;
  v151 = sub_1BA658260(v148, (uint64_t)v202, (uint64_t)v147, v149, (uint64_t)v188, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, v137, (uint64_t)&protocol witness table for HeadlineViewLayout.Attributes, v140);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v203);
  if (v151)
  {
    v202[3] = v150;
    v202[4] = sub_1BA4A2870(&qword_1ED3D20F0, type metadata accessor for PublisherLogoProcessorRequest, (uint64_t)&protocol conformance descriptor for PublisherLogoProcessorRequest);
    v202[0] = v151;
  }
  else
  {
    memset(v202, 0, 40);
  }
  v153 = v191;
  v152 = (uint64_t)v192;
  v154 = (uint64_t)v190;
  v155 = v174;
  v156 = (_QWORD *)(v197 + 72);
  v157 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v158 = v186;
  sub_1BA4C2DD8((uint64_t)v201, v186, type metadata accessor for HeadlineViewLayout.Context);
  sub_1BA4C010C(v154, (uint64_t)&v203);
  v159 = (*(unsigned __int8 *)(v185 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v185 + 80);
  v160 = swift_allocObject();
  *(_QWORD *)(v160 + 16) = v157;
  sub_1BA656690(v158, v160 + v159);
  sub_1BA4CECCC(&v203, v160 + ((v155 + v159 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_retain();
  sub_1BA657DA0((uint64_t)v202, v156, v189, (void (*)(uint64_t))sub_1BA658DDC, v160);
  swift_release();
  swift_release();
  sub_1BA4A2E80((uint64_t)v202, (uint64_t (*)(_QWORD))sub_1BB2DCBE0);
  v161 = v196;
  sub_1BA4C2DD8(v152, (uint64_t)v196, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
  v162 = (uint64_t)v187;
  ((void (*)(char *, uint64_t, uint64_t, id))v193)(v187, 1, 1, v198);
  memset(v202, 0, 40);
  v163 = (void *)swift_unknownObjectRetain();
  v164 = sub_1BA65852C(v163, a2, v161, v162, (uint64_t)v202);
  if (v164)
  {
    v165 = (uint64_t)v164;
    v202[3] = type metadata accessor for ThumbnailProcessorRequest();
    v202[4] = sub_1BA4A2870((unint64_t *)&qword_1ED3CFF58, (uint64_t (*)(uint64_t))type metadata accessor for ThumbnailProcessorRequest, (uint64_t)&protocol conformance descriptor for ThumbnailProcessorRequest);
    v202[0] = v165;
  }
  else
  {
    memset(v202, 0, 40);
  }
  v167 = v172;
  v166 = (uint64_t)v173;
  v168 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v171;
  sub_1BA657DA0((uint64_t)v202, (_QWORD *)(v197 + 32), v195, 0, 0);
  sub_1BA4A2E80((uint64_t)v202, (uint64_t (*)(_QWORD))sub_1BB2DCBE0);
  sub_1BA4C2DD8(v166, v153, type metadata accessor for FeedHeadline.State);
  v168(v153, 0, 1, v167);
  sub_1BA659580((uint64_t)v194, v153);
  sub_1BA6580B0(v153);
  return sub_1BA4A2E80(v152, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
}

uint64_t sub_1BB2DB844(_QWORD *a1, double *a2, _QWORD *a3, char *a4)
{
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t *boxed_opaque_existential_0;
  id v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  id v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  id v78;
  id v79;
  BOOL IsEmpty;
  id v81;
  void *v82;
  uint64_t v83;
  CGFloat v84;
  CGFloat v85;
  CGFloat v86;
  CGFloat v87;
  id v88;
  int v89;
  uint64_t v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  id v95;
  void *v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  unint64_t v108;
  _UNKNOWN **v109;
  uint64_t v110;
  _UNKNOWN **v111;
  uint64_t v112;
  _UNKNOWN **v113;
  uint64_t v114;
  _UNKNOWN **v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  _QWORD *v120;
  char *v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t *v128;
  void (*v129)(char *, uint64_t *, uint64_t, double);
  uint64_t v130;
  void *v131;
  double v132;
  uint64_t v133;
  char *v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  void *v150;
  id v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v157;
  void (*v158)(uint64_t, _QWORD, uint64_t);
  uint64_t v159;
  char *v160;
  uint64_t v161;
  _QWORD *v162;
  id *v163;
  id *v164;
  id *v165;
  id *v166;
  _QWORD *v167;
  void *v168;
  uint64_t v169;
  id *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  void *v175;
  uint64_t v176;
  char *v177;
  id v178;
  id v179;
  id v180;
  void *v181;
  uint64_t *v182;
  uint64_t v183;
  id v184;
  id v185;
  uint64_t v186;
  char *v187;
  _QWORD *v188;
  uint64_t v189[39];
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  __int128 v193;
  _QWORD v194[5];
  id v195;
  unint64_t v196;
  _UNKNOWN **v197;
  id v198;
  unint64_t v199;
  _UNKNOWN **v200;
  id v201;
  unint64_t v202;
  _UNKNOWN **v203;
  id v204;
  unint64_t v205;
  _UNKNOWN **v206;
  CGRect v207;

  v188 = a1;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0940, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A60], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v174 = (char *)&v157 - v9;
  v186 = type metadata accessor for HeadlineViewLayout.Context(0);
  v172 = *(_QWORD *)(v186 - 8);
  MEMORY[0x1E0C80A78](v186);
  v161 = v10;
  v173 = (uint64_t)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for ImageRequestOptions();
  MEMORY[0x1E0C80A78](v171);
  v182 = (uint64_t *)((char *)&v157 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v177 = (char *)&v157 - v13;
  sub_1BA4B07F0(0, &qword_1ED3BBC48, type metadata accessor for FeedHeadline.State, v7);
  v15 = MEMORY[0x1E0C80A78](v14);
  v176 = (uint64_t)&v157 - v16;
  v178 = *(id *)&a4[qword_1ED3B3810];
  objc_msgSend(v178, sel_setNumberOfLines_, 0, v15);
  v17 = *(void **)&a4[qword_1ED3B3820];
  objc_msgSend(v17, sel_setNumberOfLines_, 0);
  v179 = *(id *)&a4[qword_1ED3B3830];
  objc_msgSend(v179, sel_setAttributedText_, 0);
  v18 = *(void **)&a4[qword_1ED3B3800];
  sub_1BB871710();
  v19 = *(void **)&a4[qword_1ED3B3808];
  sub_1BB871710();
  v184 = *(id *)&a4[qword_1ED3B3828];
  objc_msgSend(v184, sel_setHidden_, 1);
  type metadata accessor for VideoView();
  v20 = swift_dynamicCastClass();
  if (v20)
    objc_msgSend(*(id *)(v20 + qword_1ED476878), sel_setHidden_, 1);
  v21 = v178;
  objc_msgSend(v178, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  v22 = a2[16];
  v23 = a2[17];
  v24 = a2[18];
  v25 = a2[19];
  v185 = v17;
  objc_msgSend(v17, sel_setFrame_, v22, v23, v24, v25);
  v26 = a2[28];
  v27 = a2[29];
  v28 = a2[30];
  v29 = a2[31];
  v175 = v19;
  objc_msgSend(v19, sel_setFrame_, v26, v27, v28, v29);
  v30 = a2[34];
  v31 = a2[35];
  v32 = a2[36];
  v33 = a2[37];
  v181 = v18;
  objc_msgSend(v18, sel_setFrame_, v30, v31, v32, v33);
  objc_msgSend(v179, sel_setFrame_, a2[8], a2[9], a2[10], a2[11]);
  objc_msgSend(v184, sel_setFrame_, a2[12], a2[13], a2[14], a2[15]);
  v187 = a4;
  v34 = a2[24];
  v35 = a2[25];
  v36 = a2[26];
  v37 = a2[27];
  v180 = *(id *)&a4[qword_1ED3B37F8];
  objc_msgSend(v180, sel_setFrame_, v34, v35, v36, v37);
  v38 = v186;
  v39 = v188;
  v40 = a3[3];
  v41 = a3;
  v42 = __swift_project_boxed_opaque_existential_1(a3, v40);
  v189[3] = v40;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v189);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(boxed_opaque_existential_0, v42, v40);
  v44 = (id)sub_1BB2D2ECC((uint64_t)v189);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v189);
  objc_msgSend(v21, sel_setAttributedText_, v44);

  v45 = *(id *)((char *)v39 + *(int *)(v38 + 32));
  if (v45)
  {
    v46 = v41[3];
    v47 = __swift_project_boxed_opaque_existential_1(v41, v46);
    v189[3] = v46;
    v48 = __swift_allocate_boxed_opaque_existential_0(v189);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v48, v47, v46);
    v45 = (id)sub_1BB2D2ECC((uint64_t)v189);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v189);
  }
  v49 = v184;
  objc_msgSend(v185, sel_setAttributedText_, v45);

  v50 = v186;
  v51 = v188;
  v52 = v41[3];
  v53 = __swift_project_boxed_opaque_existential_1(v41, v52);
  v189[3] = v52;
  v54 = __swift_allocate_boxed_opaque_existential_0(v189);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v54, v53, v52);
  v55 = (id)sub_1BB2D2ECC((uint64_t)v189);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v189);
  objc_msgSend(v49, sel_setAttributedText_, v55);

  objc_msgSend(v49, sel_setHidden_, 0);
  v56 = v41[3];
  v57 = v41[4];
  __swift_project_boxed_opaque_existential_1(v41, v56);
  (*(void (**)(void *, uint64_t, uint64_t, double))(v57 + 80))(v175, v56, v57, a2[33]);
  v58 = v41[3];
  v59 = v41[4];
  __swift_project_boxed_opaque_existential_1(v41, v58);
  v60 = (id *)((char *)v51 + *(int *)(v50 + 20));
  v160 = (char *)v60 + *(int *)(type metadata accessor for FeedHeadline(0) + 40);
  v61 = v176;
  sub_1BA4C2DD8((uint64_t)v160, v176, type metadata accessor for FeedHeadline.State);
  v62 = type metadata accessor for FeedHeadline.State(0);
  v158 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
  v159 = v62;
  v158(v61, 0, 1);
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v59 + 88))(v180, v61, v58, v59);
  sub_1BA6580B0(v61);
  v63 = objc_msgSend(v60[5], sel_articleID);
  v64 = v187;
  objc_msgSend(v187, sel_setAccessibilityIdentifier_, v63);

  MEMORY[0x1E0C80A78](v65);
  sub_1BA6592E4(0);
  sub_1BA4A2870(&qword_1ED3B3EB8, (uint64_t (*)(uint64_t))sub_1BA6592E4, (uint64_t)&protocol conformance descriptor for CellAutomation<A>);
  sub_1BB873750();
  objc_msgSend(v64, sel_setIsAccessibilityElement_, 1);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FB0, (uint64_t (*)(uint64_t))sub_1BA76D834, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_1BB87A390;
  v67 = v41[3];
  v162 = v41;
  v68 = __swift_project_boxed_opaque_existential_1(v41, v67);
  v189[3] = v67;
  v69 = __swift_allocate_boxed_opaque_existential_0(v189);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v69, v68, v67);
  *(_QWORD *)(v66 + 32) = sub_1BB2D31CC((uint64_t)v189);
  *(_QWORD *)(v66 + 40) = v70;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v189);
  LOBYTE(v189[0]) = *((_BYTE *)v60 + 56);
  sub_1BA65933C();
  *(_QWORD *)(v66 + 48) = v71;
  *(_QWORD *)(v66 + 56) = v72;
  sub_1BB86F748();
  v74 = v73;
  swift_bridgeObjectRelease();
  if (v74)
  {
    v75 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v75 = 0;
  }
  v76 = v187;
  v77 = v183;
  objc_msgSend(v187, sel_setAccessibilityLabel_, v75);

  v78 = v60[5];
  v79 = objc_msgSend(v78, sel_language);
  objc_msgSend(v76, sel_setAccessibilityLanguage_, v79);

  objc_msgSend(v185, sel_frame);
  IsEmpty = CGRectIsEmpty(v207);
  v168 = v78;
  if (IsEmpty)
  {
    v81 = 0;
  }
  else
  {
    v81 = objc_msgSend(v78, sel_shortExcerpt);
    if (v81)
    {
      sub_1BB8729A0();

      v81 = (id)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
  }
  objc_msgSend(v76, sel_setAccessibilityValue_, v81);

  v82 = *(void **)&v76[qword_1ED3B3818];
  v83 = *v188;
  v84 = *a2;
  v85 = a2[1];
  v86 = a2[2];
  v87 = a2[3];
  v169 = *(_QWORD *)(v77 + 112);
  sub_1BB7D9DB8(v82, v83, v169, v84, v85, v86, v87);
  v88 = v60[2];
  v170 = v60;
  v89 = *((unsigned __int8 *)v60 + 24);
  v193 = xmmword_1BB8827B0;
  v167 = v194;
  v90 = sub_1BB87171C();
  v194[4] = &off_1E7336058;
  v194[3] = v90;
  v91 = v181;
  v194[0] = v181;
  v163 = &v195;
  v196 = sub_1BA6581D4();
  v92 = v178;
  v195 = v178;
  v199 = v196;
  v200 = &off_1E7336048;
  v197 = &off_1E7336048;
  v93 = v184;
  v94 = v185;
  v198 = v184;
  v164 = &v198;
  v165 = &v201;
  v202 = v196;
  v201 = v185;
  v166 = &v204;
  v205 = v196;
  v206 = &off_1E7336048;
  v203 = &off_1E7336048;
  v95 = v179;
  v204 = v179;
  if (v89 == 1)
  {
    v96 = (void *)objc_opt_self();
    v97 = v91;
    v98 = v92;
    v99 = v93;
    v100 = v94;
    v101 = v95;
    v102 = v187;
    v88 = objc_msgSend(v96, sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, objc_msgSend(v187, sel_semanticContentAttribute));
  }
  else
  {
    v103 = v91;
    v104 = v92;
    v105 = v93;
    v106 = v94;
    v107 = v95;
    v102 = v187;
  }
  __swift_project_boxed_opaque_existential_1(v167, v90);
  sub_1BA6597E0((uint64_t)v88);
  v108 = v196;
  v109 = v197;
  __swift_project_boxed_opaque_existential_1(v163, v196);
  ((void (*)(id, unint64_t, _UNKNOWN **))v109[1])(v88, v108, v109);
  v110 = v199;
  v111 = v200;
  __swift_project_boxed_opaque_existential_1(v164, v199);
  ((void (*)(id, uint64_t, _UNKNOWN **))v111[1])(v88, v110, v111);
  v112 = v202;
  v113 = v203;
  __swift_project_boxed_opaque_existential_1(v165, v202);
  ((void (*)(id, uint64_t, _UNKNOWN **))v113[1])(v88, v112, v113);
  v114 = v205;
  v115 = v206;
  __swift_project_boxed_opaque_existential_1(v166, v205);
  ((void (*)(id, uint64_t, _UNKNOWN **))v115[1])(v88, v114, v115);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3B29F8);
  swift_arrayDestroy();
  v116 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v116, sel_scale);
  v118 = v117;

  v119 = objc_msgSend(v102, sel_traitCollection);
  v120 = v177;
  v121 = &v177[*(int *)(v171 + 24)];
  v122 = (_QWORD *)sub_1BB86F550();
  v184 = *(id *)(*(v122 - 1) + 56);
  v185 = v122;
  ((void (*)(char *, uint64_t, uint64_t))v184)(v121, 1, 1);
  *v120 = v118;
  v120[1] = v119;
  v179 = (id)type metadata accessor for PublisherLogoProcessorRequest(0);
  v123 = (_QWORD *)((char *)v188 + *(int *)(v186 + 24));
  v124 = v123[3];
  v125 = v123[4];
  v126 = __swift_project_boxed_opaque_existential_1(v123, v124);
  v191 = v124;
  v192 = *(_QWORD *)(v125 + 8);
  v127 = v192;
  v128 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v190);
  v129 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(_QWORD *)(v124 - 8) + 16);
  ((void (*)(uint64_t *, _QWORD *, uint64_t))v129)(v128, v126, v124);
  v130 = (uint64_t)v182;
  sub_1BA4C2DD8((uint64_t)v120, (uint64_t)v182, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
  v131 = memcpy(v189, a2, 0x130uLL);
  v132 = MEMORY[0x1E0C80A78](v131);
  v134 = (char *)&v157 - v133;
  v129((char *)&v157 - v133, v128, v124, v132);
  v135 = (void *)swift_unknownObjectRetain();
  v136 = v130;
  v137 = (uint64_t)v179;
  v138 = sub_1BA658260(v135, (uint64_t)v189, (uint64_t)v134, v136, (uint64_t)v179, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, v124, (uint64_t)&protocol witness table for HeadlineViewLayout.Attributes, v127);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v190);
  if (v138)
  {
    v189[3] = v137;
    v189[4] = sub_1BA4A2870(&qword_1ED3D20F0, type metadata accessor for PublisherLogoProcessorRequest, (uint64_t)&protocol conformance descriptor for PublisherLogoProcessorRequest);
    v189[0] = v138;
  }
  else
  {
    memset(v189, 0, 40);
  }
  v140 = v176;
  v139 = (uint64_t)v177;
  v142 = v161;
  v141 = (uint64_t)v162;
  v143 = (_QWORD *)(v183 + 72);
  v144 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v145 = v173;
  sub_1BA4C2DD8((uint64_t)v188, v173, type metadata accessor for HeadlineViewLayout.Context);
  sub_1BA4C010C(v141, (uint64_t)&v190);
  v146 = (*(unsigned __int8 *)(v172 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80);
  v147 = swift_allocObject();
  *(_QWORD *)(v147 + 16) = v144;
  sub_1BA656690(v145, v147 + v146);
  sub_1BA4CECCC(&v190, v147 + ((v142 + v146 + 7) & 0xFFFFFFFFFFFFFFF8));
  swift_retain();
  sub_1BA657DA0((uint64_t)v189, v143, v181, (void (*)(uint64_t))sub_1BA658DDC, v147);
  swift_release();
  swift_release();
  sub_1BA4A2E80((uint64_t)v189, (uint64_t (*)(_QWORD))sub_1BB2DCBE0);
  v148 = v182;
  sub_1BA4C2DD8(v139, (uint64_t)v182, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
  v149 = (uint64_t)v174;
  ((void (*)(char *, uint64_t, uint64_t, id))v184)(v174, 1, 1, v185);
  memset(v189, 0, 40);
  v150 = (void *)swift_unknownObjectRetain();
  v151 = sub_1BA65852C(v150, a2, v148, v149, (uint64_t)v189);
  if (v151)
  {
    v152 = (uint64_t)v151;
    v189[3] = type metadata accessor for ThumbnailProcessorRequest();
    v189[4] = sub_1BA4A2870((unint64_t *)&qword_1ED3CFF58, (uint64_t (*)(uint64_t))type metadata accessor for ThumbnailProcessorRequest, (uint64_t)&protocol conformance descriptor for ThumbnailProcessorRequest);
    v189[0] = v152;
  }
  else
  {
    memset(v189, 0, 40);
  }
  v154 = v159;
  v153 = (uint64_t)v160;
  v155 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v158;
  sub_1BA657DA0((uint64_t)v189, (_QWORD *)(v183 + 32), v175, 0, 0);
  sub_1BA4A2E80((uint64_t)v189, (uint64_t (*)(_QWORD))sub_1BB2DCBE0);
  sub_1BA4C2DD8(v153, v140, type metadata accessor for FeedHeadline.State);
  v155(v140, 0, 1, v154);
  sub_1BA659580((uint64_t)v180, v140);
  sub_1BA6580B0(v140);
  return sub_1BA4A2E80(v139, (uint64_t (*)(_QWORD))type metadata accessor for ImageRequestOptions);
}

void sub_1BB2DC67C(_QWORD *a1, const void *a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  id v19;
  CGFloat v20;
  CGFloat MinY;
  void *v22;
  _QWORD *v23;
  void *v24;
  id v25;
  char *v26;
  CGRect rect;
  void *v28;
  uint64_t (*v29)();
  _QWORD *v30;
  double __dst[38];
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  memcpy(__dst, a2, sizeof(__dst));
  v9 = type metadata accessor for HeadlineViewLayout.Context(0);
  sub_1BB2DA9F4(a1, __dst, (_QWORD *)((char *)a1 + *(int *)(v9 + 24)), a3);
  v10 = *(_QWORD *)&a3[qword_1ED3B3808];
  objc_msgSend(*(id *)(v10 + qword_1ED476B40), sel_setHidden_, 1);
  objc_msgSend(*(id *)(v10 + qword_1ED476B30), sel_setHidden_, 1);
  objc_msgSend(*(id *)(v10 + qword_1ED476B38), sel_setHidden_, 1);
  v11 = qword_1ED476878;
  v12 = __dst[21];
  rect.origin.x = __dst[20];
  v13 = __dst[22];
  v14 = __dst[23];
  v15 = __dst[28];
  v16 = __dst[29];
  v17 = __dst[30];
  v18 = __dst[31];
  v19 = *(id *)(v10 + qword_1ED476878);
  v32.origin.x = v15;
  v32.origin.y = v16;
  v32.size.width = v17;
  v32.size.height = v18;
  v20 = -CGRectGetMinX(v32);
  v33.origin.x = v15;
  v33.origin.y = v16;
  v33.size.width = v17;
  v33.size.height = v18;
  MinY = CGRectGetMinY(v33);
  v34.origin.x = rect.origin.x;
  v34.origin.y = v12;
  v34.size.width = v13;
  v34.size.height = v14;
  v35 = CGRectOffset(v34, v20, MinY);
  objc_msgSend(v19, sel_setFrame_, v35.origin.x, v35.origin.y, v35.size.width, v35.size.height);

  v22 = *(void **)(v10 + v11);
  objc_msgSend(v22, sel_setHidden_, 0);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a4;
  v23[3] = a5;
  v23[4] = a3;
  v29 = sub_1BB2DCBA4;
  v30 = v23;
  *(_QWORD *)&rect.origin.y = MEMORY[0x1E0C809B0];
  *(_QWORD *)&rect.size.width = 1107296256;
  *(_QWORD *)&rect.size.height = sub_1BA4F1DD8;
  v28 = &block_descriptor_63;
  v24 = _Block_copy(&rect.origin.y);
  v25 = v22;
  swift_retain();
  v26 = a3;
  swift_release();
  objc_msgSend(v25, sel_onTouchUpInside_, v24);
  _Block_release(v24);

}

uint64_t sub_1BB2DC8B4(void (*a1)(_BYTE *), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  id v9;
  uint64_t v11;

  v5 = type metadata accessor for FeedActionSender();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v7 = 0;
  type metadata accessor for FeedAction(0);
  swift_storeEnumTagMultiPayload();
  v8 = *(void **)(a3 + qword_1ED3B3808);
  *(_QWORD *)&v7[*(int *)(v5 + 20)] = v8;
  v9 = v8;
  a1(v7);
  return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FeedActionSender);
}

uint64_t sub_1BB2DC978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  _QWORD v17[2];
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  sub_1BA4C2DD8(a1 + *(int *)(v7 + 20), (uint64_t)v6, type metadata accessor for FeedHeadline);
  v8 = (void *)swift_unknownObjectRetain();
  ArticleAutomation.init(headline:)(v8, (uint64_t)v17);
  result = sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedHeadline);
  v10 = v17[1];
  v11 = v18;
  v12 = v19;
  v13 = v20;
  v14 = v21;
  v15 = v22;
  *(_QWORD *)(a2 + 16) = v17[0];
  *(_QWORD *)(a2 + 24) = v10;
  *(_BYTE *)(a2 + 32) = v11;
  *(_BYTE *)(a2 + 33) = v12;
  *(_BYTE *)(a2 + 34) = v13;
  *(_BYTE *)(a2 + 35) = v14;
  *(_BYTE *)(a2 + 36) = v15;
  *(_QWORD *)a2 = 0x656C6369747261;
  *(_QWORD *)(a2 + 8) = 0xE700000000000000;
  return result;
}

uint64_t sub_1BB2DCA64()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1BB2DCAA8(void *a1)
{
  uint64_t v2;
  void *v3;

  swift_beginAccess();
  v2 = swift_unknownObjectWeakAssign();
  v3 = (void *)MEMORY[0x1BCCE5D40](v2);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

}

void (*sub_1BB2DCB30(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BB2DA8E4(v2);
  return sub_1BA9D68C8;
}

uint64_t sub_1BB2DCB78()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BB2DCBA4()
{
  uint64_t v0;

  return sub_1BB2DC8B4(*(void (**)(_BYTE *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BB2DCBB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BB2DC978(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1BB2DCBB8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB2DCBE0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3C2258)
  {
    sub_1BA4D9CE8(255, (unint64_t *)&qword_1ED3B0A08);
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3C2258);
  }
}

uint64_t objectdestroy_5Tm_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = type metadata accessor for HeadlineViewLayout.Context(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v16 = *(_QWORD *)(v2 + 64);
  swift_release();
  swift_release();
  v4 = v0 + v3 + *(int *)(v1 + 20);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v5 = (int *)type metadata accessor for FeedHeadline(0);
  v6 = v5[10];
  v7 = v4 + v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v8 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = sub_1BB86C8B0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);

    v10 = v7 + *(int *)(v8 + 28);
    v11 = sub_1BB86C67C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = v4 + v5[11];
  v13 = sub_1BB871B24();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v12, v13);
  if (*(_QWORD *)(v4 + v5[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + v5[13]) >= 3uLL)
    swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + v3 + *(int *)(v1 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + ((v16 + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t TraversalOnlyEncoder.codingPath.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TraversalOnlyEncoder.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TraversalOnlyEncoder.userInfo.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t sub_1BB2DCEA4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *v2;
  v5 = v2[1];
  sub_1BA6ECE94();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v8 = sub_1BB87420C();
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for TraversalOnlyEncoder.AnyCodingKey;
  *(_QWORD *)(inited + 64) = sub_1BA69FB70();
  v11 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(v11 + 16) = v8;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = a1;
  *(_BYTE *)(v11 + 40) = 0;
  swift_bridgeObjectRetain();
  sub_1BA6ECFFC(inited);
  *a2 = v6;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t TraversalOnlyEncoder.unkeyedContainer()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  a1[3] = &type metadata for TraversalOnlyEncoder.UnkeyedContainer;
  a1[4] = sub_1BA5EB0DC();
  *a1 = v4;
  a1[1] = v3;
  a1[2] = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t TraversalOnlyEncoder.singleValueContainer()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  a1[3] = &type metadata for TraversalOnlyEncoder.SingleValueContainer;
  a1[4] = sub_1BA69DC7C();
  *a1 = v4;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2DD054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  __int128 v10;

  v7 = sub_1BA6ECAE4(a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), &v10);
  TraversalOnlyEncoder.container<A>(keyedBy:)(v7, a4, a5, v8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double sub_1BB2DD0D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double result;
  __int128 v5;

  sub_1BA6ECAE4(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), &v5);
  *(_QWORD *)(a3 + 24) = &type metadata for TraversalOnlyEncoder.UnkeyedContainer;
  *(_QWORD *)(a3 + 32) = sub_1BA5EB0DC();
  result = *(double *)&v5;
  *(_OWORD *)a3 = v5;
  *(_QWORD *)(a3 + 16) = 0;
  return result;
}

uint64_t sub_1BB2DD134@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  a1[3] = &type metadata for TraversalOnlyEncoder;
  a1[4] = sub_1BA6ECAA0();
  sub_1BA6ECE94();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 56) = &type metadata for TraversalOnlyEncoder.AnyCodingKey;
  *(_QWORD *)(inited + 64) = sub_1BA69FB70();
  v6 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(v6 + 16) = 0x7265707573;
  *(_QWORD *)(v6 + 24) = 0xE500000000000000;
  *(_QWORD *)(v6 + 32) = 0;
  *(_BYTE *)(v6 + 40) = 1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1BA6ECFFC(inited);
  *a1 = v3;
  a1[1] = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2DD24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  a3[3] = &type metadata for TraversalOnlyEncoder;
  a3[4] = sub_1BA6ECAA0();
  return sub_1BA6ECAE4(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1BB2DD2B0()
{
  return sub_1BB8744F4();
}

uint64_t sub_1BB2DD2C4()
{
  return sub_1BB874500();
}

uint64_t sub_1BB2DD2D8()
{
  return sub_1BB8744E8();
}

uint64_t sub_1BB2DD300()
{
  return sub_1BB874488();
}

uint64_t sub_1BB2DD318(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2DD464(a1, a2, a3, a4, MEMORY[0x1E0DED8E8]);
}

uint64_t sub_1BB2DD334(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2DD3EC(a1, a2, a3, a4, MEMORY[0x1E0DED908]);
}

uint64_t sub_1BB2DD350(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2DD428(a1, a2, a3, a4, MEMORY[0x1E0DED910]);
}

uint64_t sub_1BB2DD36C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2DD464(a1, a2, a3, a4, MEMORY[0x1E0DED918]);
}

uint64_t sub_1BB2DD388()
{
  return sub_1BB8744B8();
}

uint64_t sub_1BB2DD3A0()
{
  return sub_1BB8744C4();
}

uint64_t sub_1BB2DD3B8()
{
  return sub_1BB8744A0();
}

uint64_t sub_1BB2DD3D0(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2DD3EC(a1, a2, a3, a4, MEMORY[0x1E0DED928]);
}

uint64_t sub_1BB2DD3EC(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(a1 & 0x1FF);
}

uint64_t sub_1BB2DD40C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2DD428(a1, a2, a3, a4, MEMORY[0x1E0DED938]);
}

uint64_t sub_1BB2DD428(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(a1 & 0x1FFFF);
}

uint64_t sub_1BB2DD448(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB2DD464(a1, a2, a3, a4, MEMORY[0x1E0DED940]);
}

uint64_t sub_1BB2DD464(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_1BB2DD48C()
{
  return sub_1BB8744D0();
}

uint64_t sub_1BB2DD4A4()
{
  return sub_1BB8744DC();
}

uint64_t sub_1BB2DD4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BB2DD054(a1, a2, a5, a3, a4);
}

uint64_t sub_1BB2DD4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(v3 + 16);
  if (__OFADD__(v4, 1))
    __break(1u);
  *(_QWORD *)(v3 + 16) = v4 + 1;
  sub_1BA6ECE94();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1BB87420C();
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for TraversalOnlyEncoder.AnyCodingKey;
  *(_QWORD *)(inited + 64) = sub_1BA69FB70();
  v11 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(v11 + 16) = v8;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v4;
  *(_BYTE *)(v11 + 40) = 0;
  swift_bridgeObjectRetain();
  sub_1BA6ECFFC(inited);
  v12 = swift_bridgeObjectRelease();
  TraversalOnlyEncoder.container<A>(keyedBy:)(v12, a2, a3, v13);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BB2DD644@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;

  v3 = v1[2];
  if (__OFADD__(v3, 1))
    __break(1u);
  v5 = *v1;
  v4 = v1[1];
  v1[2] = v3 + 1;
  sub_1BA6ECE94();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1BB87420C();
  v9 = v8;
  *(_QWORD *)(inited + 56) = &type metadata for TraversalOnlyEncoder.AnyCodingKey;
  *(_QWORD *)(inited + 64) = sub_1BA69FB70();
  v10 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v3;
  *(_BYTE *)(v10 + 40) = 0;
  swift_bridgeObjectRetain();
  sub_1BA6ECFFC(inited);
  swift_bridgeObjectRelease();
  a1[3] = &type metadata for TraversalOnlyEncoder.UnkeyedContainer;
  result = sub_1BA5EB0DC();
  a1[4] = result;
  *a1 = v5;
  a1[1] = v4;
  a1[2] = 0;
  return result;
}

uint64_t sub_1BB2DD790()
{
  return sub_1BB87432C();
}

uint64_t sub_1BB2DD7A4()
{
  return sub_1BB874338();
}

uint64_t sub_1BB2DD7B8()
{
  return sub_1BB874254();
}

uint64_t sub_1BB2DD7E0()
{
  return sub_1BB874278();
}

uint64_t sub_1BB2DD808()
{
  return sub_1BB87426C();
}

uint64_t sub_1BB2DD830()
{
  return sub_1BB874284();
}

uint64_t sub_1BB2DD858()
{
  return sub_1BB874290();
}

uint64_t sub_1BB2DD880()
{
  return sub_1BB87429C();
}

uint64_t sub_1BB2DD8A8()
{
  return sub_1BB8742B4();
}

uint64_t sub_1BB2DD8D0()
{
  return sub_1BB8742C0();
}

uint64_t sub_1BB2DD8F8()
{
  return sub_1BB8742CC();
}

uint64_t sub_1BB2DD920()
{
  return sub_1BB8742D8();
}

uint64_t sub_1BB2DD948()
{
  return sub_1BB8742F0();
}

uint64_t sub_1BB2DD970()
{
  return sub_1BB8742A8();
}

uint64_t sub_1BB2DD998()
{
  return sub_1BB8742E4();
}

uint64_t sub_1BB2DD9C0()
{
  return sub_1BB8742FC();
}

uint64_t sub_1BB2DD9E8()
{
  return sub_1BB874308();
}

uint64_t sub_1BB2DDA10()
{
  return sub_1BB874314();
}

uint64_t sub_1BB2DDA38()
{
  return sub_1BB874320();
}

uint64_t sub_1BB2DDA60()
{
  return sub_1BB874260();
}

void sub_1BB2DDA98(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 16) = v3 + 1;
    a1[3] = &type metadata for TraversalOnlyEncoder;
    a1[4] = sub_1BA6ECAA0();
    sub_1BB2DCEA4(v3, a1);
  }
}

uint64_t sub_1BB2DDB04()
{
  return sub_1BB874410();
}

uint64_t sub_1BB2DDB18()
{
  return sub_1BB87441C();
}

uint64_t sub_1BB2DDB2C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745E4();
  if (v1 != 1)
    sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB2DDBB4()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1BB872A90();
  if (v1 == 1)
    return sub_1BB8745E4();
  sub_1BB8745E4();
  return sub_1BB8745D8();
}

uint64_t sub_1BB2DDC14()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 24);
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745E4();
  if (v1 != 1)
    sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB2DDC98@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_1BB2DDCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1BB87420C();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = a1;
  *(_BYTE *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_1BB2DDD04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  char v7;
  uint64_t result;
  char v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(unsigned __int8 *)(a2 + 24);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_1BB874398(), result = 0, (v7 & 1) != 0))
  {
    if ((v3 & 1) != 0)
    {
      if (v5)
        return 1;
    }
    else
    {
      if (v2 == v4)
        v9 = v5;
      else
        v9 = 1;
      if ((v9 & 1) == 0)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BB2DDD84()
{
  sub_1BA69FB70();
  return sub_1BB874710();
}

uint64_t sub_1BB2DDDAC()
{
  sub_1BA69FB70();
  return sub_1BB87471C();
}

ValueMetadata *type metadata accessor for TraversalOnlyEncoder.SingleValueContainer()
{
  return &type metadata for TraversalOnlyEncoder.SingleValueContainer;
}

ValueMetadata *type metadata accessor for TraversalOnlyEncoder.UnkeyedContainer()
{
  return &type metadata for TraversalOnlyEncoder.UnkeyedContainer;
}

uint64_t sub_1BB2DDE04()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for TraversalOnlyEncoder.AnyCodingKey()
{
  return &type metadata for TraversalOnlyEncoder.AnyCodingKey;
}

unint64_t sub_1BB2DDE3C()
{
  unint64_t result;

  result = qword_1EF2C0D18;
  if (!qword_1EF2C0D18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9056B0, &type metadata for TraversalOnlyEncoder.AnyCodingKey);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D18);
  }
  return result;
}

uint64_t UILegibilityWeight.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 1684828002;
  v2 = 0x6E776F6E6B6E75;
  if (!a1)
    v2 = 0x72616C75676572;
  if (a1 != 1)
    v1 = v2;
  if (a1 == -1)
    return 0x6669636570736E75;
  else
    return v1;
}

unint64_t UILegibilityWeight.isBoldTextEnabled.getter(unint64_t result)
{
  if (result >= 2)
    return UIAccessibilityIsBoldTextEnabled();
  return result;
}

uint64_t sub_1BB2DDF24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = 1684828002;
  v3 = 0x6E776F6E6B6E75;
  if (!*v0)
    v3 = 0x72616C75676572;
  if (v1 != 1)
    v2 = v3;
  if (v1 == -1)
    return 0x6669636570736E75;
  else
    return v2;
}

uint64_t FormatImageGravity.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2DDFCC + 4 * byte_1BB9057A0[*v0]))(0x7265746E6563, 0xE600000000000000);
}

uint64_t sub_1BB2DDFCC()
{
  return 7368564;
}

uint64_t sub_1BB2DDFDC()
{
  return 0x6D6F74746F62;
}

uint64_t sub_1BB2DDFEC()
{
  return 1952867692;
}

uint64_t sub_1BB2DDFFC()
{
  return 0x7468676972;
}

uint64_t sub_1BB2DE010()
{
  return 0x7466654C706F74;
}

uint64_t sub_1BB2DE028()
{
  return 0x7468676952706F74;
}

uint64_t sub_1BB2DE040()
{
  return 0x654C6D6F74746F62;
}

uint64_t sub_1BB2DE05C()
{
  return 0x69526D6F74746F62;
}

uint64_t sub_1BB2DE07C()
{
  return 0x657A69736572;
}

uint64_t sub_1BB2DE08C()
{
  return 0x7341657A69736572;
}

unint64_t sub_1BB2DE0AC()
{
  return 0xD000000000000010;
}

NewsFeed::FormatImageGravity_optional __swiftcall FormatImageGravity.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatImageGravity_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BB2DE120(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB80193C(*a1, *a2);
}

uint64_t sub_1BB2DE12C()
{
  sub_1BB8745CC();
  FormatImageGravity.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2DE190()
{
  FormatImageGravity.rawValue.getter();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2DE1E0()
{
  sub_1BB8745CC();
  FormatImageGravity.rawValue.getter();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatImageGravity_optional sub_1BB2DE240(Swift::String *a1)
{
  return FormatImageGravity.init(rawValue:)(*a1);
}

uint64_t sub_1BB2DE24C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatImageGravity.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BB2DE270()
{
  sub_1BB2DE4C0();
  return sub_1BB872D60();
}

uint64_t sub_1BB2DE2CC(_QWORD *a1)
{
  return FormatImageGravity.encode(to:)(a1);
}

uint64_t FormatImageGravity.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2DE30C + 4 * byte_1BB9057AC[*v0]))(0x7265746E6563, 0xE600000000000000);
}

uint64_t sub_1BB2DE30C()
{
  return 7368564;
}

uint64_t sub_1BB2DE31C()
{
  return 0x6D6F74746F62;
}

uint64_t sub_1BB2DE32C()
{
  return 1952867692;
}

uint64_t sub_1BB2DE33C()
{
  return 0x7468676972;
}

uint64_t sub_1BB2DE350()
{
  return 0x7466654C706F74;
}

uint64_t sub_1BB2DE368()
{
  return 0x7468676952706F74;
}

uint64_t sub_1BB2DE380()
{
  return 0x654C6D6F74746F62;
}

uint64_t sub_1BB2DE39C()
{
  return 0x69526D6F74746F62;
}

uint64_t sub_1BB2DE3BC()
{
  return 0x657A69736572;
}

uint64_t sub_1BB2DE3CC()
{
  return 0x7341657A69736572;
}

unint64_t sub_1BB2DE3EC()
{
  return 0xD000000000000010;
}

unint64_t sub_1BB2DE40C()
{
  unint64_t result;

  result = qword_1EF2C0D20;
  if (!qword_1EF2C0D20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageGravity, &type metadata for FormatImageGravity);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D20);
  }
  return result;
}

unint64_t sub_1BB2DE450(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB2DE47C();
  result = sub_1BB2DE4C0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB2DE47C()
{
  unint64_t result;

  result = qword_1EF2C0D28;
  if (!qword_1EF2C0D28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageGravity, &type metadata for FormatImageGravity);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D28);
  }
  return result;
}

unint64_t sub_1BB2DE4C0()
{
  unint64_t result;

  result = qword_1EF2C0D30;
  if (!qword_1EF2C0D30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageGravity, &type metadata for FormatImageGravity);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D30);
  }
  return result;
}

unint64_t sub_1BB2DE504(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2DE528();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2DE528()
{
  unint64_t result;

  result = qword_1EF2C0D38;
  if (!qword_1EF2C0D38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageGravity, &type metadata for FormatImageGravity);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D38);
  }
  return result;
}

unint64_t sub_1BB2DE56C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE7AEA4();
  a1[2] = sub_1BAEF8420();
  result = sub_1BB2DE40C();
  a1[3] = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatImageGravity(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB2DE5F0 + 4 * byte_1BB9057BD[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB2DE624 + 4 * byte_1BB9057B8[v4]))();
}

uint64_t sub_1BB2DE624(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2DE62C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2DE634);
  return result;
}

uint64_t sub_1BB2DE640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2DE648);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB2DE64C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2DE654(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatImageGravity()
{
  return &type metadata for FormatImageGravity;
}

uint64_t sub_1BB2DE670(char *a1)
{
  return **((_QWORD **)&unk_1E72FDCF8 + *a1);
}

uint64_t static Commands.Sports.ReportScore.inaccurate.getter()
{
  return sub_1BA499934(&qword_1ED3C4B80);
}

uint64_t static Commands.Sports.ReportScore.delayed.getter()
{
  return sub_1BA499934(&qword_1ED3C4BC8);
}

uint64_t static Commands.Sports.ReportScore.teamInfo.getter()
{
  return sub_1BA499934(&qword_1ED3C4C00);
}

uint64_t static Commands.Sports.ReportScore.gameTime.getter()
{
  return sub_1BA499934(&qword_1ED3C4BE8);
}

uint64_t static Commands.Sports.ReportScore.streamingProvider.getter()
{
  return sub_1BA499934(&qword_1ED3C4BB0);
}

uint64_t static Commands.Sports.ReportScore.somethingElse.getter()
{
  return sub_1BA499934(&qword_1ED3C4B98);
}

uint64_t sub_1BB2DE730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4AD288(0, &qword_1EF2C0D50, (uint64_t)&type metadata for SportsStandingConcern, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4AD288(0, &qword_1EF2C0D58, (uint64_t)&type metadata for SportsStandingConcern, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1EF2C0D40 = result;
  return result;
}

uint64_t static Commands.Sports.ReportStanding.inaccurate.getter()
{
  return sub_1BA499934(&qword_1EF2A70E0);
}

uint64_t sub_1BB2DE828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4AD288(0, &qword_1EF2C0D50, (uint64_t)&type metadata for SportsStandingConcern, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4AD288(0, &qword_1EF2C0D58, (uint64_t)&type metadata for SportsStandingConcern, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1EF2C0D48 = result;
  return result;
}

uint64_t static Commands.Sports.ReportStanding.somethingElse.getter()
{
  return sub_1BA499934(&qword_1EF2A70E8);
}

uint64_t static Commands.Sports.ReportStanding.all.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BB8856F0;
  if (qword_1EF2A70E0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = qword_1EF2C0D40;
  v1 = qword_1EF2A70E8;
  swift_retain();
  if (v1 != -1)
    swift_once();
  *(_QWORD *)(v0 + 40) = qword_1EF2C0D48;
  sub_1BB872DCC();
  swift_retain();
  return v0;
}

uint64_t static Commands.Sports.Event.tapToRadar.getter()
{
  return sub_1BA499934(&qword_1ED3C4C18);
}

uint64_t static Commands.Sports.Event.copyUmcId.getter()
{
  return sub_1BA499934(&qword_1ED3C4C30);
}

uint64_t static ContextMenuItem.report(scoreConcern:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;

  v4 = sub_1BB870150();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((1 << a2) & 9) != 0)
  {
    if (qword_1ED3C4B80 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (((1 << a2) & 0x12) != 0)
  {
    if (qword_1ED3C4BC8 == -1)
      goto LABEL_8;
    goto LABEL_9;
  }
  if (qword_1ED3C4B98 != -1)
LABEL_9:
    swift_once();
LABEL_8:
  swift_retain();
  sub_1BB2A07FC(a1, a2);
  sub_1BB2A0910();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8530], v4);
  v9 = a1;
  v10 = a2;
  swift_allocObject();
  return sub_1BB86FB20();
}

uint64_t static ContextMenuItem.report(standingConcern:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v7[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0x8000000000000000) == 0)
  {
    if (qword_1EF2A70E0 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  if (qword_1EF2A70E8 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  swift_retain();
  swift_retain();
  sub_1BB46BCAC();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v7[1] = a1;
  swift_allocObject();
  return sub_1BB86FB20();
}

uint64_t static UIActivityType.openSportsEvent.getter()
{
  return sub_1BB872970();
}

uint64_t sub_1BB2DED90()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;

  v0 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v0);
  if (qword_1ED3A4150 != -1)
    swift_once();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_init);
  sub_1BB8703D8();
  sub_1BB86FCA0();
  swift_allocObject();
  return sub_1BB86FC94();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE14manageMySportsACyFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t ObjCClassFromMetadata;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v10;

  v0 = sub_1BB870150();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A4130 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v7 = (void *)sub_1BB872970();
  v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v7);

  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB8530], v0);
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE15openSportsEvent3forAcD0I22ScoreDataVisualizationC_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  uint64_t v10;
  char v11;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A4150 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  swift_retain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v10 = a1;
  v11 = 0;
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE15openSportsEvent3forACSo19FCHeadlineProviding_p_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  uint64_t v10;
  char v11;

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3A4150 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v10 = a1;
  v11 = 1;
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB20();
}

uint64_t initializeBufferWithCopyOfBuffer for OpenSportEventContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BB2DF500(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1BB2DF500(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_unknownObjectRetain();
  else
    return swift_retain();
}

uint64_t destroy for OpenSportEventContext(uint64_t a1)
{
  return sub_1BB2DF51C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1BB2DF51C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_unknownObjectRelease();
  else
    return swift_release();
}

uint64_t assignWithCopy for OpenSportEventContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BB2DF500(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BB2DF51C(v5, v6);
  return a1;
}

uint64_t assignWithTake for OpenSportEventContext(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  v4 = *((_BYTE *)a2 + 8);
  v5 = *(_QWORD *)a1;
  v6 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BB2DF51C(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for Commands.Sports()
{
  return &type metadata for Commands.Sports;
}

ValueMetadata *type metadata accessor for Commands.Sports.ReportScore()
{
  return &type metadata for Commands.Sports.ReportScore;
}

ValueMetadata *type metadata accessor for Commands.Sports.ReportStanding()
{
  return &type metadata for Commands.Sports.ReportStanding;
}

ValueMetadata *type metadata accessor for Commands.Sports.Event()
{
  return &type metadata for Commands.Sports.Event;
}

uint64_t sub_1BB2DF5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  void *v11;
  id v12;
  _QWORD v14[2];

  v4 = sub_1BB870150();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3C4C30 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v11 = (void *)sub_1BB872970();
  v12 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v11);

  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8530], v4);
  v14[0] = a1;
  v14[1] = a2;
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB20();
}

uint64_t sub_1BB2DF80C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatResizing.init(from:)(a1, a2);
}

uint64_t sub_1BB2DF820(_QWORD *a1)
{
  return FormatResizing.encode(to:)(a1);
}

uint64_t _s8NewsFeed14FormatResizingO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA8583F8(v4, v5);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

unint64_t sub_1BB2DF8F4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2DF918();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2DF918()
{
  unint64_t result;

  result = qword_1EF2C0D60;
  if (!qword_1EF2C0D60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizing, &type metadata for FormatResizing);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D60);
  }
  return result;
}

unint64_t sub_1BB2DF95C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA995268();
  a1[2] = sub_1BA994B40();
  result = sub_1BB2DF990();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2DF990()
{
  unint64_t result;

  result = qword_1EF2C0D68;
  if (!qword_1EF2C0D68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizing, &type metadata for FormatResizing);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D68);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatResizing()
{
  return &type metadata for FormatResizing;
}

uint64_t FormatProgressCircleOptions.radius.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressCircleOptions.clockwise.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA69C808(v2, v3, v4);
}

uint64_t FormatProgressCircleOptions.stepPercentage.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressCircleOptions.minPercentage.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressCircleOptions.maxPercentage.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
  return swift_bridgeObjectRetain();
}

void FormatProgressCircleOptions.lineCap.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

uint64_t FormatProgressCircleOptions.radius.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  return result;
}

uint64_t (*FormatProgressCircleOptions.radius.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptions.clockwise.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = sub_1BA69C828(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 24) = v4;
  return result;
}

uint64_t (*FormatProgressCircleOptions.clockwise.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptions.stepPercentage.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  return result;
}

uint64_t (*FormatProgressCircleOptions.stepPercentage.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptions.minPercentage.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  return result;
}

uint64_t (*FormatProgressCircleOptions.minPercentage.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptions.maxPercentage.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*FormatProgressCircleOptions.maxPercentage.modify())(_QWORD)
{
  return nullsub_1;
}

_BYTE *FormatProgressCircleOptions.lineCap.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = *result;
  return result;
}

uint64_t (*FormatProgressCircleOptions.lineCap.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptions.value(contextLayoutOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t result;
  char v13;
  double v14;
  double v15;
  double v16;
  char v17;
  uint64_t v19;

  v5 = *(_QWORD *)v2;
  v6 = *(_QWORD *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_BYTE *)(v2 + 24);
  v10 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 40);
  v19 = *(_QWORD *)(v2 + 48);
  v17 = *(_BYTE *)(v2 + 56);
  swift_bridgeObjectRetain();
  v11 = sub_1BA72BED4(a1, v5);
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_1BA69C808(v6, v7, v8);
    v13 = FormatBoolean.value(contextLayoutOptions:)(a1);
    sub_1BA69C828(v6, v7, v8);
    swift_bridgeObjectRetain();
    v14 = sub_1BA72BED4(a1, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v15 = sub_1BA72BED4(a1, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v16 = sub_1BA72BED4(a1, v19);
    result = swift_bridgeObjectRelease();
    *(double *)a2 = v11;
    *(_BYTE *)(a2 + 8) = v13 & 1;
    *(double *)(a2 + 16) = v14;
    *(double *)(a2 + 24) = v15;
    *(double *)(a2 + 32) = v16;
    *(_BYTE *)(a2 + 40) = v17;
  }
  return result;
}

uint64_t sub_1BB2DFD0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatProgressCircleOptions.init(from:)(a1, a2);
}

uint64_t sub_1BB2DFD20(_QWORD *a1)
{
  return FormatProgressCircleOptions.encode(to:)(a1);
}

double FormatProgressCircleOptionsResolved.radius.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void FormatProgressCircleOptionsResolved.radius.setter(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*FormatProgressCircleOptionsResolved.radius.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatProgressCircleOptionsResolved.clockwise.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FormatProgressCircleOptionsResolved.clockwise.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*FormatProgressCircleOptionsResolved.clockwise.modify())(_QWORD)
{
  return nullsub_1;
}

double FormatProgressCircleOptionsResolved.stepPercentage.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void FormatProgressCircleOptionsResolved.stepPercentage.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*FormatProgressCircleOptionsResolved.stepPercentage.modify())(_QWORD)
{
  return nullsub_1;
}

double FormatProgressCircleOptionsResolved.minPercentage.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void FormatProgressCircleOptionsResolved.minPercentage.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*FormatProgressCircleOptionsResolved.minPercentage.modify())(_QWORD)
{
  return nullsub_1;
}

double FormatProgressCircleOptionsResolved.maxPercentage.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void FormatProgressCircleOptionsResolved.maxPercentage.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*FormatProgressCircleOptionsResolved.maxPercentage.modify())(_QWORD)
{
  return nullsub_1;
}

void FormatProgressCircleOptionsResolved.lineCap.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

_BYTE *FormatProgressCircleOptionsResolved.lineCap.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = *result;
  return result;
}

uint64_t (*FormatProgressCircleOptionsResolved.lineCap.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB2DFE04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2DFE30
                                                            + 4 * asc_1BB905AB0[*v0]))(0x737569646172, 0xE600000000000000);
}

uint64_t sub_1BB2DFE30()
{
  return 0x7369776B636F6C63;
}

uint64_t sub_1BB2DFE4C()
{
  return 0x6372655070657473;
}

uint64_t sub_1BB2DFE70()
{
  return 0x65637265506E696DLL;
}

uint64_t sub_1BB2DFEA0()
{
  return 0x706143656E696CLL;
}

uint64_t sub_1BB2DFEB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2E0EB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2DFEDC()
{
  sub_1BB2E06F8();
  return sub_1BB874710();
}

uint64_t sub_1BB2DFF04()
{
  sub_1BB2E06F8();
  return sub_1BB87471C();
}

uint64_t FormatProgressCircleOptionsResolved.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  _DWORD v11[4];
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  sub_1BB2E073C(0, &qword_1EF2C0D70, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v11[3] = *(unsigned __int8 *)(v1 + 8);
  v9 = *(_BYTE *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2E06F8();
  sub_1BB8746C8();
  v18 = 0;
  sub_1BB874194();
  if (!v2)
  {
    v17 = 1;
    sub_1BB874188();
    v16 = 2;
    sub_1BB874194();
    v15 = 3;
    sub_1BB874194();
    v14 = 4;
    sub_1BB874194();
    v13 = v9;
    v12 = 5;
    sub_1BA618BDC();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FormatProgressCircleOptionsResolved.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  sub_1BB2E073C(0, &qword_1EF2C0D80, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2E06F8();
  sub_1BB87468C();
  if (!v2)
  {
    v28 = 0;
    sub_1BB8740B0();
    v11 = v10;
    v27 = 1;
    v12 = sub_1BB8740A4();
    v26 = 2;
    sub_1BB8740B0();
    v14 = v13;
    v25 = 3;
    sub_1BB8740B0();
    v16 = v15;
    v24 = 4;
    sub_1BB8740B0();
    v18 = v17;
    v22 = 5;
    sub_1BA61CE00();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v20 = v23;
    *(_QWORD *)a2 = v11;
    *(_BYTE *)(a2 + 8) = v12 & 1;
    *(_QWORD *)(a2 + 16) = v14;
    *(_QWORD *)(a2 + 24) = v16;
    *(_QWORD *)(a2 + 32) = v18;
    *(_BYTE *)(a2 + 40) = v20;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BB2E0354@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatProgressCircleOptionsResolved.init(from:)(a1, a2);
}

uint64_t sub_1BB2E0368(_QWORD *a1)
{
  return FormatProgressCircleOptionsResolved.encode(to:)(a1);
}

uint64_t _s8NewsFeed27FormatProgressCircleOptionsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  v25 = *(_QWORD *)(a1 + 48);
  v26 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 40);
  v24 = *(_QWORD *)(a2 + 48);
  v22 = *(unsigned __int8 *)(a1 + 56);
  v23 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BA881EAC(v2, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0)
    return 0;
  if ((v5 & 1) == 0)
  {
    if ((v9 & 1) == 0)
    {
      sub_1BA69C808(v7, v8, 0);
      sub_1BA69C828(v3, v4, 0);
      sub_1BA69C828(v7, v8, 0);
      sub_1BA69C828(v3, v4, 0);
      result = 0;
      if (((((v3 & 1) == 0) ^ v7) & 1) == 0)
        return result;
      goto LABEL_13;
    }
LABEL_11:
    sub_1BA69C808(v7, v8, v9);
    sub_1BA69C828(v3, v4, v5);
    sub_1BA69C828(v7, v8, v9);
    sub_1BA69C828(v3, v4, v5);
    return 0;
  }
  if ((v9 & 1) == 0)
  {
    sub_1BA69C808(v3, v4, 1);
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v3 == v7 && v4 == v8)
  {
    sub_1BA69C808(v3, v4, 1);
    sub_1BA69C808(v3, v4, 1);
    sub_1BA69C828(v3, v4, 1);
    sub_1BA69C828(v3, v4, 1);
  }
  else
  {
    v13 = sub_1BB874398();
    sub_1BA69C808(v7, v8, 1);
    sub_1BA69C808(v3, v4, 1);
    sub_1BA69C828(v3, v4, 1);
    sub_1BA69C828(v7, v8, 1);
    result = 0;
    if ((v13 & 1) == 0)
      return result;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BA881EAC(v26, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1BA881EAC(v25, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
    return 0;
  v16 = 1953789282;
  if (v22)
  {
    v17 = v23;
    if (v22 == 1)
    {
      v18 = 0xE500000000000000;
      v19 = 0x646E756F72;
    }
    else
    {
      v18 = 0xE600000000000000;
      v19 = 0x657261757173;
    }
  }
  else
  {
    v18 = 0xE400000000000000;
    v19 = 1953789282;
    v17 = v23;
  }
  if (v17)
  {
    if (v17 == 1)
    {
      v20 = 0xE500000000000000;
      v16 = 0x646E756F72;
    }
    else
    {
      v20 = 0xE600000000000000;
      v16 = 0x657261757173;
    }
  }
  else
  {
    v20 = 0xE400000000000000;
  }
  if (v19 == v16 && v18 == v20)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    v21 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v21 & 1;
  }
}

unint64_t sub_1BB2E06F8()
{
  unint64_t result;

  result = qword_1EF2C0D78;
  if (!qword_1EF2C0D78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905CE8, &type metadata for FormatProgressCircleOptionsResolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D78);
  }
  return result;
}

void sub_1BB2E073C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB2E06F8();
    v7 = a3(a1, &type metadata for FormatProgressCircleOptionsResolved.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB2E0798(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2E07BC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2E07BC()
{
  unint64_t result;

  result = qword_1EF2C0D88;
  if (!qword_1EF2C0D88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressCircleOptions, &type metadata for FormatProgressCircleOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D88);
  }
  return result;
}

unint64_t sub_1BB2E0800(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEADBCC();
  a1[2] = sub_1BAEEE17C();
  result = sub_1BB2E0834();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2E0834()
{
  unint64_t result;

  result = qword_1EF2C0D90;
  if (!qword_1EF2C0D90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressCircleOptions, &type metadata for FormatProgressCircleOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D90);
  }
  return result;
}

uint64_t sub_1BB2E0878@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2E0884(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1BB2E08C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = v4;
  return sub_1BA69C808(v3, v2, v4);
}

uint64_t sub_1BB2E08E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2E08EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_1BB2E092C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2E0938(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1BB2E0978@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2E0984(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 48) = v3;
  return result;
}

uint64_t sub_1BB2E09C4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 56);
  return result;
}

_BYTE *sub_1BB2E09D0(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 56) = *result;
  return result;
}

uint64_t initializeWithCopy for FormatProgressCircleOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_1BA69C808(v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatProgressCircleOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA69C808(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BA69C828(v7, v8, v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for FormatProgressCircleOptions(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BA69C828(v5, v6, v7);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatProgressCircleOptions(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatProgressCircleOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressCircleOptions()
{
  return &type metadata for FormatProgressCircleOptions;
}

uint64_t getEnumTagSinglePayload for FormatProgressCircleOptionsResolved(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatProgressCircleOptionsResolved(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressCircleOptionsResolved()
{
  return &type metadata for FormatProgressCircleOptionsResolved;
}

uint64_t storeEnumTagSinglePayload for FormatProgressCircleOptionsResolved.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB2E0D58 + 4 * byte_1BB905ABB[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB2E0D8C + 4 * byte_1BB905AB6[v4]))();
}

uint64_t sub_1BB2E0D8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2E0D94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2E0D9CLL);
  return result;
}

uint64_t sub_1BB2E0DA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2E0DB0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB2E0DB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2E0DBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatProgressCircleOptionsResolved.CodingKeys()
{
  return &type metadata for FormatProgressCircleOptionsResolved.CodingKeys;
}

unint64_t sub_1BB2E0DDC()
{
  unint64_t result;

  result = qword_1EF2C0D98;
  if (!qword_1EF2C0D98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905CC0, &type metadata for FormatProgressCircleOptionsResolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0D98);
  }
  return result;
}

unint64_t sub_1BB2E0E24()
{
  unint64_t result;

  result = qword_1EF2C0DA0;
  if (!qword_1EF2C0DA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905C30, &type metadata for FormatProgressCircleOptionsResolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0DA0);
  }
  return result;
}

unint64_t sub_1BB2E0E6C()
{
  unint64_t result;

  result = qword_1EF2C0DA8;
  if (!qword_1EF2C0DA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905C58, &type metadata for FormatProgressCircleOptionsResolved.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0DA8);
  }
  return result;
}

uint64_t sub_1BB2E0EB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737569646172 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7369776B636F6C63 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6372655070657473 && a2 == 0xEE00656761746E65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65637265506E696DLL && a2 == 0xED0000656761746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656372655078616DLL && a2 == 0xED0000656761746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x706143656E696CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

double FeedGroupGlobalBundleArticleQuota.ratio.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

BOOL static FeedGroupGlobalBundleArticleQuota.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BB2E11B4()
{
  return 0x6F69746172;
}

uint64_t sub_1BB2E11C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6F69746172 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BB2E1254()
{
  sub_1BB2E1394();
  return sub_1BB874710();
}

uint64_t sub_1BB2E127C()
{
  sub_1BB2E1394();
  return sub_1BB87471C();
}

uint64_t FeedGroupGlobalBundleArticleQuota.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB2E1500(0, &qword_1EF2C0DB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2E1394();
  sub_1BB8746C8();
  sub_1BB874194();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BB2E1394()
{
  unint64_t result;

  result = qword_1EF2C0DB8;
  if (!qword_1EF2C0DB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905EB8, &type metadata for FeedGroupGlobalBundleArticleQuota.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0DB8);
  }
  return result;
}

uint64_t FeedGroupGlobalBundleArticleQuota.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1BB2E1500(0, &qword_1EF2C0DC0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2E1394();
  sub_1BB87468C();
  if (!v2)
  {
    sub_1BB8740B0();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB2E1500(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB2E1394();
    v7 = a3(a1, &type metadata for FeedGroupGlobalBundleArticleQuota.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB2E155C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FeedGroupGlobalBundleArticleQuota.init(from:)(a1, a2);
}

uint64_t sub_1BB2E1570(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BB2E1500(0, &qword_1EF2C0DB0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2E1394();
  sub_1BB8746C8();
  sub_1BB874194();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

BOOL sub_1BB2E1660(double *a1, double *a2)
{
  return *a1 == *a2;
}

ValueMetadata *type metadata accessor for FeedGroupGlobalBundleArticleQuota()
{
  return &type metadata for FeedGroupGlobalBundleArticleQuota;
}

uint64_t storeEnumTagSinglePayload for FeedGroupGlobalBundleArticleQuota.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB2E16C4 + 4 * byte_1BB905D40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB2E16E4 + 4 * byte_1BB905D45[v4]))();
}

_BYTE *sub_1BB2E16C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB2E16E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2E16EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2E16F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2E16FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2E1704(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupGlobalBundleArticleQuota.CodingKeys()
{
  return &type metadata for FeedGroupGlobalBundleArticleQuota.CodingKeys;
}

unint64_t sub_1BB2E1724()
{
  unint64_t result;

  result = qword_1EF2C0DC8;
  if (!qword_1EF2C0DC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905E90, &type metadata for FeedGroupGlobalBundleArticleQuota.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0DC8);
  }
  return result;
}

unint64_t sub_1BB2E176C()
{
  unint64_t result;

  result = qword_1EF2C0DD0;
  if (!qword_1EF2C0DD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905E00, &type metadata for FeedGroupGlobalBundleArticleQuota.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0DD0);
  }
  return result;
}

unint64_t sub_1BB2E17B4()
{
  unint64_t result;

  result = qword_1EF2C0DD8;
  if (!qword_1EF2C0DD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB905E28, &type metadata for FeedGroupGlobalBundleArticleQuota.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0DD8);
  }
  return result;
}

uint64_t FormatMenuItemData.title.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BAB5EC7C(v2, v3, v4);
}

id FormatMenuItemData.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = *(void **)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  return sub_1BA92F754(v2, v3);
}

uint64_t FormatMenuItemData.action.getter()
{
  return swift_retain();
}

uint64_t destroy for FormatMenuItemData(uint64_t a1)
{
  sub_1BAB5EC9C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  sub_1BA92F770(*(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
  return swift_release();
}

uint64_t initializeWithCopy for FormatMenuItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1BAB5EC7C(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(void **)(a2 + 24);
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  sub_1BA92F754(v7, v5);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatMenuItemData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  void *v11;
  char v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_1BAB5EC7C(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1BAB5EC9C(v7, v8, v9);
  v10 = *(void **)(a2 + 24);
  LOBYTE(v5) = *(_BYTE *)(a2 + 32);
  sub_1BA92F754(v10, v5);
  v11 = *(void **)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 32) = v5;
  sub_1BA92F770(v11, v12);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatMenuItemData(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  void *v9;
  char v10;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_1BAB5EC9C(v5, v6, v7);
  v8 = *(_BYTE *)(a2 + 32);
  v9 = *(void **)(a1 + 24);
  v10 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v8;
  sub_1BA92F770(v9, v10);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMenuItemData(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatMenuItemData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuItemData()
{
  return &type metadata for FormatMenuItemData;
}

uint64_t sub_1BB2E1ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 56))(a3, a4, a5);
}

uint64_t FeedGroupDebuggable.debugCandidates.getter()
{
  return 0;
}

uint64_t FeedGroupDebuggable.debugFormat.getter()
{
  return 0;
}

uint64_t dispatch thunk of FeedGroupDebuggable.debugIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedGroupDebuggable.debugTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedGroupDebuggable.debugCandidates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1BB2E1C58()
{
  char *v0;

  return sub_1BA961ABC(*v0);
}

uint64_t sub_1BB2E1C60()
{
  char *v0;

  return sub_1BA95F23C(*v0);
}

uint64_t sub_1BB2E1C68(uint64_t a1, uint64_t a2)
{
  return sub_1BB2E1F5C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1BA9615C4);
}

uint64_t sub_1BB2E1C74(uint64_t a1, uint64_t a2)
{
  return sub_1BB2E1D78(a1, a2, sub_1BA95D774);
}

uint64_t sub_1BB2E1C80()
{
  uint64_t v0;

  return sub_1BA95C7C4(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_1BB2E1C8C()
{
  char *v0;

  return sub_1BA95D6A8(*v0);
}

uint64_t sub_1BB2E1C94()
{
  char *v0;

  return sub_1BA9615AC(*v0);
}

uint64_t sub_1BB2E1C9C()
{
  uint64_t v0;
  _BYTE v2[56];

  sub_1BA968270(v0, (uint64_t)v2);
  return sub_1BA95F254();
}

uint64_t sub_1BB2E1CD0()
{
  uint64_t v0;

  return sub_1BA96106C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1BB2E1CE4()
{
  char *v0;

  return sub_1BA961080(*v0);
}

uint64_t sub_1BB2E1CEC()
{
  char *v0;

  return sub_1BA95D6E4(*v0);
}

uint64_t sub_1BB2E1CF4()
{
  char *v0;

  return sub_1BA960114(*v0);
}

uint64_t sub_1BB2E1CFC()
{
  char *v0;

  return sub_1BA95BD70(*v0);
}

uint64_t sub_1BB2E1D04()
{
  char *v0;

  return sub_1BA95DCB4(*v0);
}

uint64_t sub_1BB2E1D0C()
{
  char *v0;

  return sub_1BA95E254(*v0);
}

uint64_t sub_1BB2E1D14()
{
  uint64_t v0;

  return sub_1BA95E7B8(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1BB2E1D28()
{
  char *v0;

  return sub_1BA95E278(*v0);
}

uint64_t sub_1BB2E1D30()
{
  char *v0;

  return sub_1BA95D6CC(*v0);
}

uint64_t sub_1BB2E1D38()
{
  char *v0;

  return sub_1BA95DD10(*v0);
}

uint64_t sub_1BB2E1D40()
{
  char *v0;

  return sub_1BA95B898(*v0);
}

uint64_t sub_1BB2E1D48()
{
  char *v0;

  return sub_1BA95B88C(*v0);
}

uint64_t sub_1BB2E1D50()
{
  uint64_t v0;

  return sub_1BA95C2E4(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_1BB2E1D60()
{
  uint64_t v0;

  return sub_1BA96108C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int8 *)(v0 + 16));
}

uint64_t sub_1BB2E1D6C(uint64_t a1, uint64_t a2)
{
  return sub_1BB2E1D78(a1, a2, sub_1BA95D788);
}

uint64_t sub_1BB2E1D78(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;

  return a3(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(unsigned __int16 *)(v3 + 16));
}

uint64_t sub_1BB2E1D88()
{
  char *v0;

  return sub_1BA95B880(*v0);
}

uint64_t sub_1BB2E1D94()
{
  char *v0;

  return sub_1BA95DCE0(*v0);
}

uint64_t sub_1BB2E1D9C()
{
  uint64_t v0;
  _BYTE v2[56];

  sub_1BA968134(v0, (uint64_t)v2);
  return sub_1BA95DD1C();
}

uint64_t sub_1BB2E1DD0()
{
  uint64_t v0;

  return sub_1BA960120(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int8 *)(v0 + 16));
}

uint64_t sub_1BB2E1DDC()
{
  uint64_t v0;

  return sub_1BA95DCC0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int8 *)(v0 + 16));
}

uint64_t sub_1BB2E1DE8()
{
  uint64_t v0;

  return sub_1BA95F748(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(unsigned __int16 *)(v0 + 16) | (*(unsigned __int8 *)(v0 + 18) << 16));
}

uint64_t sub_1BB2E1E00()
{
  char *v0;

  return sub_1BA95E248(*v0);
}

uint64_t sub_1BB2E1E0C()
{
  char *v0;

  return sub_1BA95D690(*v0);
}

uint64_t sub_1BB2E1E14()
{
  char *v0;

  return sub_1BA95D188(*v0);
}

uint64_t sub_1BB2E1E1C(uint64_t a1, uint64_t a2)
{
  return sub_1BB2E1F04(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1BA95F248);
}

uint64_t sub_1BB2E1E28()
{
  uint64_t v0;

  return sub_1BA9610A0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB2E1E34()
{
  uint64_t v0;

  return sub_1BA95C2D8(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_1BB2E1E40()
{
  char *v0;

  return sub_1BA95E284(*v0);
}

uint64_t sub_1BB2E1E48()
{
  char *v0;

  return sub_1BA95E26C(*v0);
}

uint64_t sub_1BB2E1E50()
{
  uint64_t v0;

  return sub_1BA95CCA0(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_1BB2E1E5C()
{
  char *v0;

  return sub_1BA95E77C(*v0);
}

uint64_t sub_1BB2E1E68()
{
  char *v0;

  return sub_1BA95D72C(*v0);
}

uint64_t sub_1BB2E1E70()
{
  char *v0;

  return sub_1BA96062C(*v0);
}

uint64_t sub_1BB2E1E78()
{
  char *v0;

  return sub_1BA961AB0(*v0);
}

uint64_t sub_1BB2E1E80()
{
  char *v0;

  return sub_1BA95D6B4(*v0);
}

uint64_t sub_1BB2E1E88()
{
  char *v0;

  return sub_1BA95D6D8(*v0);
}

uint64_t sub_1BB2E1E94()
{
  char *v0;

  return sub_1BA95DCD4(*v0);
}

uint64_t sub_1BB2E1E9C()
{
  char *v0;

  return sub_1BA95DCF8(*v0);
}

uint64_t sub_1BB2E1EA8()
{
  uint64_t v0;

  return sub_1BA95C298(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1BB2E1EB8()
{
  char *v0;

  return sub_1BA9615B8(*v0);
}

uint64_t sub_1BB2E1EC0()
{
  uint64_t v0;
  _BYTE v2[56];

  sub_1BA968048(v0, (uint64_t)v2);
  return sub_1BA95D6F0();
}

uint64_t sub_1BB2E1EF8(uint64_t a1, uint64_t a2)
{
  return sub_1BB2E1F04(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_1BA95FC2C);
}

uint64_t sub_1BB2E1F04(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  uint64_t v3;

  return a3(*(_QWORD *)v3, *(unsigned __int16 *)(v3 + 8));
}

uint64_t sub_1BB2E1F10()
{
  uint64_t v0;

  return sub_1BA95BD7C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1BB2E1F20()
{
  char *v0;

  return sub_1BA95E7AC(*v0);
}

uint64_t sub_1BB2E1F28()
{
  char *v0;

  return sub_1BA95D66C(*v0);
}

uint64_t sub_1BB2E1F30()
{
  char *v0;

  return sub_1BA95D69C(*v0);
}

uint64_t sub_1BB2E1F38()
{
  uint64_t v0;

  return sub_1BA95CCAC(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_1BB2E1F50(uint64_t a1, uint64_t a2)
{
  return sub_1BB2E1F5C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1BA95D714);
}

uint64_t sub_1BB2E1F5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;

  return a3(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(unsigned __int16 *)(v3 + 16) | (*(unsigned __int8 *)(v3 + 18) << 16));
}

uint64_t sub_1BB2E1F78()
{
  char *v0;

  return sub_1BA95D744(*v0);
}

uint64_t sub_1BB2E1F80()
{
  char *v0;

  return sub_1BA95D6C0(*v0);
}

uint64_t sub_1BB2E1F90()
{
  uint64_t v0;

  return sub_1BA960638(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1BB2E1FA0()
{
  uint64_t v0;

  return sub_1BA95E290(*(_QWORD *)(v0 + 8), *(_WORD *)(v0 + 16), *(double *)v0);
}

uint64_t sub_1BB2E1FB0()
{
  uint64_t v0;
  uint64_t v2;

  sub_1BA967F98(v0, (uint64_t)&v2);
  return sub_1BA95C2B4();
}

uint64_t sub_1BB2E1FE4()
{
  char *v0;

  return sub_1BA95D678(*v0);
}

uint64_t sub_1BB2E1FEC()
{
  uint64_t v0;

  return sub_1BA960B94(*(_QWORD *)v0, *(_WORD *)(v0 + 8));
}

uint64_t sub_1BB2E1FF8()
{
  char *v0;

  return sub_1BA95D720(*v0);
}

uint64_t sub_1BB2E2000()
{
  uint64_t v0;
  uint64_t v2;

  sub_1BA967DF0(v0, (uint64_t)&v2);
  return sub_1BA95ED20();
}

void sub_1BB2E2034()
{
  sub_1BB2E207C(&OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView, &OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame, &OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_selectionFrame, &OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame);
}

void sub_1BB2E2058()
{
  sub_1BB2E207C(&OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView, &OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame, &OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_metricSelectionFrame, &OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame);
}

void sub_1BB2E207C(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v4;
  void *v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  __int128 v20;
  CGAffineTransform v21;
  CGRect v22;
  CGRect v23;

  v7 = *(void **)(v4 + *a1);
  v22 = *(CGRect *)(v4 + *a2);
  v8 = *(_OWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 16);
  *(_OWORD *)&v21.a = *(_OWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation);
  *(_OWORD *)&v21.c = v8;
  *(_OWORD *)&v21.tx = *(_OWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 32);
  v23 = CGRectApplyAffineTransform(v22, &v21);
  objc_msgSend(v7, sel_setFrame_, v23.origin.x, v23.origin.y, v23.size.width, v23.size.height);
  v9 = MEMORY[0x1BCCE5D40](v4 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_rulerView);
  if (v9)
  {
    v10 = (char *)v9;
    objc_msgSend(v7, sel_frame);
    v11 = &v10[*a3];
    *(_QWORD *)v11 = v12;
    *((_QWORD *)v11 + 1) = v13;
    *((_QWORD *)v11 + 2) = v14;
    *((_QWORD *)v11 + 3) = v15;
    v16 = *(char **)&v10[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
    v17 = &v16[*a4];
    *(_QWORD *)v17 = v12;
    *((_QWORD *)v17 + 1) = v13;
    *((_QWORD *)v17 + 2) = v14;
    *((_QWORD *)v17 + 3) = v15;
    objc_msgSend(v16, sel_setNeedsLayout);
    v18 = *(char **)&v10[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
    v19 = &v18[*a4];
    v20 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v19 = *(_OWORD *)v11;
    *((_OWORD *)v19 + 1) = v20;
    objc_msgSend(v18, sel_setNeedsLayout);

  }
}

void sub_1BB2E2188(char *a1)
{
  char *v2;
  __int128 v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  __int128 v19;
  void *v20;
  __int128 v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  __int128 v33;
  CGAffineTransform v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v35 = CGRectOffset(*(CGRect *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentFrame], *(CGFloat *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset], *(CGFloat *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset + 8]);
  v2 = &a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  v3 = *(_OWORD *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 16];
  *(_OWORD *)&v34.a = *(_OWORD *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  *(_OWORD *)&v34.c = v3;
  *(_OWORD *)&v34.tx = *(_OWORD *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 32];
  v36 = CGRectApplyAffineTransform(v35, &v34);
  objc_msgSend(a1, sel_setFrame_, v36.origin.x, v36.origin.y, v36.size.width, v36.size.height);
  v4 = *(char **)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView];
  v37 = *(CGRect *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
  v5 = *((_OWORD *)v2 + 1);
  *(_OWORD *)&v34.a = *(_OWORD *)v2;
  *(_OWORD *)&v34.c = v5;
  *(_OWORD *)&v34.tx = *((_OWORD *)v2 + 2);
  v38 = CGRectApplyAffineTransform(v37, &v34);
  objc_msgSend(v4, sel_setFrame_, v38.origin.x, v38.origin.y, v38.size.width, v38.size.height);
  v39 = *(CGRect *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionContentFrame];
  v6 = *((_OWORD *)v2 + 1);
  *(_OWORD *)&v34.a = *(_OWORD *)v2;
  *(_OWORD *)&v34.c = v6;
  *(_OWORD *)&v34.tx = *((_OWORD *)v2 + 2);
  *(CGRect *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentFrame] = CGRectApplyAffineTransform(v39, &v34);
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentView], sel_setFrame_);
  v7 = &a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_rulerView];
  v8 = MEMORY[0x1BCCE5D40](&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_rulerView]);
  if (v8)
  {
    v9 = (char *)v8;
    objc_msgSend(v4, sel_frame);
    v10 = &v9[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_selectionFrame];
    *(_QWORD *)v10 = v11;
    *((_QWORD *)v10 + 1) = v12;
    *((_QWORD *)v10 + 2) = v13;
    *((_QWORD *)v10 + 3) = v14;
    v15 = *(char **)&v9[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
    v16 = &v15[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame];
    *(_QWORD *)v16 = v11;
    *((_QWORD *)v16 + 1) = v12;
    *((_QWORD *)v16 + 2) = v13;
    *((_QWORD *)v16 + 3) = v14;
    objc_msgSend(v15, sel_setNeedsLayout);
    v17 = *(char **)&v9[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
    v18 = &v17[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame];
    v19 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v10;
    *((_OWORD *)v18 + 1) = v19;
    objc_msgSend(v17, sel_setNeedsLayout);

  }
  v20 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView];
  v40 = *(CGRect *)&a1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame];
  v21 = *((_OWORD *)v2 + 1);
  *(_OWORD *)&v34.a = *(_OWORD *)v2;
  *(_OWORD *)&v34.c = v21;
  *(_OWORD *)&v34.tx = *((_OWORD *)v2 + 2);
  v41 = CGRectApplyAffineTransform(v40, &v34);
  objc_msgSend(v20, sel_setFrame_, v41.origin.x, v41.origin.y, v41.size.width, v41.size.height);
  v22 = MEMORY[0x1BCCE5D40](v7);
  if (v22)
  {
    v23 = (char *)v22;
    objc_msgSend(v20, sel_frame);
    v24 = &v23[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_metricSelectionFrame];
    *(_QWORD *)v24 = v25;
    *((_QWORD *)v24 + 1) = v26;
    *((_QWORD *)v24 + 2) = v27;
    *((_QWORD *)v24 + 3) = v28;
    v29 = *(char **)&v23[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_verticalRulerEdgeView];
    v30 = &v29[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame];
    *(_QWORD *)v30 = v25;
    *((_QWORD *)v30 + 1) = v26;
    *((_QWORD *)v30 + 2) = v27;
    *((_QWORD *)v30 + 3) = v28;
    objc_msgSend(v29, sel_setNeedsLayout);
    v31 = *(char **)&v23[OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_horizontalRulerEdgeView];
    v32 = &v31[OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame];
    v33 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v32 = *(_OWORD *)v24;
    *((_OWORD *)v32 + 1) = v33;
    objc_msgSend(v31, sel_setNeedsLayout);

  }
}

char *sub_1BB2E254C(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  objc_class *v11;
  id v12;
  char *v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  objc_super v22;
  objc_super v23;
  objc_super v24;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v5 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionContentFrame];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v6 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame];
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  v7 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v8 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentFrame];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v9 = &v1[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  *(_QWORD *)v9 = 0x3FF0000000000000;
  *((_QWORD *)v9 + 1) = 0;
  *((_QWORD *)v9 + 2) = 0;
  *((_QWORD *)v9 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v9 + 4) = 0;
  *((_QWORD *)v9 + 5) = 0;
  v10 = OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView;
  v11 = (objc_class *)type metadata accessor for DebugFormatSelectionView();
  v12 = objc_allocWithZone(v11);
  v13 = v1;
  *(_QWORD *)&v1[v10] = sub_1BB78E0F8(0, 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView;
  v15 = objc_allocWithZone(v11);
  *(_QWORD *)&v13[v14] = sub_1BB78E0F8(1, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();

  v24.receiver = v13;
  v24.super_class = ObjectType;
  v16 = (char *)objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView];
  v18 = v16;
  objc_msgSend(v18, sel_addSubview_, v17);
  objc_msgSend(v18, sel_addSubview_, *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView]);
  v23.receiver = v18;
  v23.super_class = ObjectType;
  objc_msgSendSuper2(&v23, sel_setUserInteractionEnabled_, 1);
  v22.receiver = v18;
  v22.super_class = ObjectType;
  if ((objc_msgSendSuper2(&v22, sel_isUserInteractionEnabled) & 1) == 0)
  {
    v19 = &v18[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
    *(_OWORD *)v19 = 0u;
    *((_OWORD *)v19 + 1) = 0u;
    sub_1BB2E207C(&OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView, &OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame, &OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_selectionFrame, &OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_selectionFrame);
    v20 = &v18[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame];
    *(_OWORD *)v20 = 0u;
    *((_OWORD *)v20 + 1) = 0u;
    sub_1BB2E207C(&OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView, &OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame, &OBJC_IVAR____TtC8NewsFeed20DebugFormatRulerView_metricSelectionFrame, &OBJC_IVAR____TtC8NewsFeed24DebugFormatRulerEdgeView_metricSelectionFrame);
  }

  return v18;
}

uint64_t type metadata accessor for DebugFormatOverlayView()
{
  return objc_opt_self();
}

void sub_1BB2E284C()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  objc_class *v8;
  id v9;
  uint64_t v10;
  id v11;

  v1 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  v2 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionContentFrame];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v3 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionFrame];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v4 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentOffset];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentFrame];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  v6 = &v0[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  *(_QWORD *)v6 = 0x3FF0000000000000;
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *((_QWORD *)v6 + 3) = 0x3FF0000000000000;
  *((_QWORD *)v6 + 4) = 0;
  *((_QWORD *)v6 + 5) = 0;
  v7 = OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView;
  v8 = (objc_class *)type metadata accessor for DebugFormatSelectionView();
  v9 = objc_allocWithZone(v8);
  *(_QWORD *)&v0[v7] = sub_1BB78E0F8(0, 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_metricSelectionView;
  v11 = objc_allocWithZone(v8);
  *(_QWORD *)&v0[v10] = sub_1BB78E0F8(1, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit();

  sub_1BB873EAC();
  __break(1u);
}

__n128 ArticleThumbnailViewLayoutOptions.init(origin:sizeConstraint:aspectRatio:shadowRadius:cornerRadius:roundedCorners:layeredMedia:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unsigned __int8 a3@<W2>, __n128 *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>)
{
  unsigned __int8 v9;
  __n128 result;

  v9 = a1[1].n128_u8[0];
  a4->n128_f64[0] = a5;
  a4->n128_f64[1] = a6;
  result = *a1;
  a4[1] = *a1;
  a4[2].n128_u8[0] = v9;
  a4[2].n128_f64[1] = a7;
  a4[3].n128_f64[0] = a8;
  a4[3].n128_f64[1] = a9;
  a4[4].n128_u64[0] = a2;
  a4[4].n128_u8[8] = a3;
  return result;
}

double ArticleThumbnailViewLayoutOptions.origin.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

__n128 ArticleThumbnailViewLayoutOptions.sizeConstraint.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[2].n128_u8[0];
  result = v1[1];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

double ArticleThumbnailViewLayoutOptions.aspectRatio.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

double ArticleThumbnailViewLayoutOptions.shadowRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double ArticleThumbnailViewLayoutOptions.cornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

uint64_t ArticleThumbnailViewLayoutOptions.roundedCorners.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t ArticleThumbnailViewLayoutOptions.layeredMedia.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t getEnumTagSinglePayload for ArticleThumbnailViewLayoutOptions(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 72);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ArticleThumbnailViewLayoutOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_BYTE *)(result + 72) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArticleThumbnailViewLayoutOptions()
{
  return &type metadata for ArticleThumbnailViewLayoutOptions;
}

ValueMetadata *type metadata accessor for ArticleThumbnailViewLayoutOptions.SizeConstraint()
{
  return &type metadata for ArticleThumbnailViewLayoutOptions.SizeConstraint;
}

double FeedLowFlowEstimationConfiguration.exponent.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double FeedLowFlowEstimationConfiguration.padding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double FeedLowFlowEstimationConfiguration.prior.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t sub_1BB2E2AF0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E6964646170;
  if (*v0 != 1)
    v1 = 0x726F697270;
  if (*v0)
    return v1;
  else
    return 0x746E656E6F707865;
}

uint64_t sub_1BB2E2B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2E3180(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2E2B6C()
{
  sub_1BB2E2D10();
  return sub_1BB874710();
}

uint64_t sub_1BB2E2B94()
{
  sub_1BB2E2D10();
  return sub_1BB87471C();
}

uint64_t FeedLowFlowEstimationConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;

  sub_1BB2E2EE4(0, &qword_1EF2C0E50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2E2D10();
  sub_1BB8746C8();
  v12 = 0;
  sub_1BB874194();
  if (!v1)
  {
    v11 = 1;
    sub_1BB874194();
    v10 = 2;
    sub_1BB874194();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB2E2D10()
{
  unint64_t result;

  result = qword_1EF2C0E58;
  if (!qword_1EF2C0E58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB906198, &type metadata for FeedLowFlowEstimationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0E58);
  }
  return result;
}

uint64_t FeedLowFlowEstimationConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[16];

  sub_1BB2E2EE4(0, &qword_1EF2C0E60, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v17[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2E2D10();
  sub_1BB87468C();
  if (!v2)
  {
    v17[15] = 0;
    sub_1BB8740B0();
    v11 = v10;
    v17[14] = 1;
    sub_1BB8740B0();
    v13 = v12;
    v17[13] = 2;
    sub_1BB8740B0();
    v16 = v15;
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11;
    a2[1] = v13;
    a2[2] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB2E2EE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB2E2D10();
    v7 = a3(a1, &type metadata for FeedLowFlowEstimationConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BB2E2F40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FeedLowFlowEstimationConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BB2E2F54(_QWORD *a1)
{
  return FeedLowFlowEstimationConfiguration.encode(to:)(a1);
}

id lowFlowEstimationConfiguration(from:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  uint64_t v9;

  objc_msgSend(a1, sel_exponent);
  v5 = v4;
  objc_msgSend(a1, sel_padding);
  v7 = v6;
  result = objc_msgSend(a1, sel_prior);
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  return result;
}

ValueMetadata *type metadata accessor for FeedLowFlowEstimationConfiguration()
{
  return &type metadata for FeedLowFlowEstimationConfiguration;
}

uint64_t storeEnumTagSinglePayload for FeedLowFlowEstimationConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB2E3028 + 4 * byte_1BB906045[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB2E305C + 4 * byte_1BB906040[v4]))();
}

uint64_t sub_1BB2E305C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2E3064(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2E306CLL);
  return result;
}

uint64_t sub_1BB2E3078(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2E3080);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB2E3084(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2E308C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedLowFlowEstimationConfiguration.CodingKeys()
{
  return &type metadata for FeedLowFlowEstimationConfiguration.CodingKeys;
}

unint64_t sub_1BB2E30AC()
{
  unint64_t result;

  result = qword_1EF2C0E68;
  if (!qword_1EF2C0E68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB906170, &type metadata for FeedLowFlowEstimationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0E68);
  }
  return result;
}

unint64_t sub_1BB2E30F4()
{
  unint64_t result;

  result = qword_1EF2C0E70;
  if (!qword_1EF2C0E70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9060E0, &type metadata for FeedLowFlowEstimationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0E70);
  }
  return result;
}

unint64_t sub_1BB2E313C()
{
  unint64_t result;

  result = qword_1EF2C0E78;
  if (!qword_1EF2C0E78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB906108, &type metadata for FeedLowFlowEstimationConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0E78);
  }
  return result;
}

uint64_t sub_1BB2E3180(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E656E6F707865 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6964646170 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F697270 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

char *initializeBufferWithCopyOfBuffer for FormatAction(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  id *v7;
  unsigned int v8;
  char *v9;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unsigned __int8 v17;
  char *v18;
  unsigned __int8 v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char __dsta;
  char *__dst;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *a2;
        v7 = (id *)(a2 + 1);
        v8 = *((unsigned __int8 *)a2 + 16);
        swift_bridgeObjectRetain();
        if (v8 <= 0xFD)
        {
          v39 = *v7;
          sub_1BA727178(*v7, v8);
          *((_QWORD *)a1 + 1) = v39;
          a1[16] = v8;
        }
        else
        {
          *((_QWORD *)a1 + 1) = *v7;
          a1[16] = *((_BYTE *)a2 + 16);
        }
        goto LABEL_16;
      case 1u:
        v11 = *a2;
        v12 = (uint64_t)a2[1];
        v13 = (uint64_t)a2[2];
        v14 = (uint64_t)a2[3];
        v15 = (uint64_t)a2[4];
        v16 = *((_BYTE *)a2 + 41);
        v17 = *((_BYTE *)a2 + 40);
        sub_1BA7271AC(*a2, v12, v13, v14, v15, v17, v16);
        *(_QWORD *)a1 = v11;
        *((_QWORD *)a1 + 1) = v12;
        *((_QWORD *)a1 + 2) = v13;
        *((_QWORD *)a1 + 3) = v14;
        *((_QWORD *)a1 + 4) = v15;
        a1[40] = v17;
        a1[41] = v16;
        v18 = a2[7];
        *((_QWORD *)a1 + 6) = a2[6];
        v19 = *((_BYTE *)a2 + 64);
        swift_bridgeObjectRetain();
        sub_1BA727178(v18, v19);
        *((_QWORD *)a1 + 7) = v18;
        a1[64] = v19;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 2u:
        *(_QWORD *)a1 = *a2;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        v20 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v20;
        v21 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v21;
        v22 = a2[5];
        *((_QWORD *)a1 + 4) = a2[4];
        *((_QWORD *)a1 + 5) = v22;
        v23 = (uint64_t)a2[6];
        v24 = (uint64_t)a2[7];
        v25 = (uint64_t)a2[8];
        v26 = (uint64_t)a2[9];
        __dsta = *((_BYTE *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA7261E0(v23, v24, v25, v26, __dsta);
        *((_QWORD *)a1 + 6) = v23;
        *((_QWORD *)a1 + 7) = v24;
        *((_QWORD *)a1 + 8) = v25;
        *((_QWORD *)a1 + 9) = v26;
        a1[80] = __dsta;
        v27 = a2[12];
        *((_QWORD *)a1 + 11) = a2[11];
        *((_QWORD *)a1 + 12) = v27;
        v28 = a2[14];
        *((_QWORD *)a1 + 13) = a2[13];
        *((_QWORD *)a1 + 14) = v28;
        *((_QWORD *)a1 + 15) = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        v29 = type metadata accessor for FormatPurchaseData(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v40 = type metadata accessor for FormatPurchaseLandingPageData();
          v41 = *(_QWORD *)(v40 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v41 + 48))(a2, 1, v40))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          }
          else
          {
            v45 = a2[1];
            *(_QWORD *)a1 = *a2;
            *((_QWORD *)a1 + 1) = v45;
            v46 = *(int *)(v40 + 20);
            __dst = &a1[v46];
            v47 = (char *)a2 + v46;
            v48 = type metadata accessor for FormatPostPurchaseData();
            v49 = *(_QWORD *)(v48 - 8);
            v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
            swift_bridgeObjectRetain();
            if (v50(v47, 1, v48))
            {
              sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(__dst, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
            }
            else
            {
              v52 = sub_1BB86C67C();
              v53 = *(_QWORD *)(v52 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v47, 2, v52))
              {
                v54 = v49;
                memcpy(__dst, v47, *(_QWORD *)(v49 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v53 + 16))(__dst, v47, v52);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(__dst, 0, 2, v52);
                v54 = v49;
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v48);
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(a1, 0, 1, v40);
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
            goto LABEL_16;
          }
          v31 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v31;
          v32 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          v33 = &a1[v32];
          v34 = (char *)a2 + v32;
          v35 = type metadata accessor for FormatPostPurchaseData();
          v36 = *(_QWORD *)(v35 - 8);
          v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
          swift_bridgeObjectRetain();
          if (v37(v34, 1, v35))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            v43 = sub_1BB86C67C();
            v44 = *(_QWORD *)(v43 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v34, 2, v43))
            {
              memcpy(v33, v34, *(_QWORD *)(v36 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v33, v34, v43);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v33, 0, 2, v43);
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  return a1;
}

void destroy for FormatAction(uint64_t a1)
{
  unsigned int v2;
  void *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v2 = *(unsigned __int8 *)(a1 + 16);
      if (v2 <= 0xFD)
      {
        v3 = *(void **)(a1 + 8);
        goto LABEL_5;
      }
      return;
    case 1u:
      sub_1BA726DD8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(_BYTE *)(a1 + 41));
      swift_bridgeObjectRelease();
      v3 = *(void **)(a1 + 56);
      LOBYTE(v2) = *(_BYTE *)(a1 + 64);
LABEL_5:
      sub_1BA726DA4(v3, v2);
      return;
    case 2u:
      swift_release();
      return;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6C1F54(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    case 5u:
      type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v6 = type metadata accessor for FormatPurchaseLandingPageData();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6))
          return;
        swift_bridgeObjectRelease();
        v5 = *(int *)(v6 + 20);
      }
      else
      {
        if (EnumCaseMultiPayload)
          return;
        swift_bridgeObjectRelease();
        v5 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      }
      v7 = a1 + v5;
      v8 = type metadata accessor for FormatPostPurchaseData();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
      {
        v9 = sub_1BB86C67C();
        v10 = *(_QWORD *)(v9 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 2, v9))
          (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
      }
      return;
    default:
      return;
  }
}

uint64_t *assignWithCopy for FormatAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  id *v6;
  unsigned int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned __int8 v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  if (a1 != a2)
  {
    sub_1BB26D3A4((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        v6 = (id *)(a2 + 1);
        v7 = *((unsigned __int8 *)a2 + 16);
        swift_bridgeObjectRetain();
        if (v7 <= 0xFD)
        {
          v32 = *v6;
          sub_1BA727178(*v6, v7);
          a1[1] = (uint64_t)v32;
          *((_BYTE *)a1 + 16) = v7;
        }
        else
        {
          v8 = *v6;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          a1[1] = (uint64_t)v8;
        }
        goto LABEL_31;
      case 1u:
        v9 = *a2;
        v10 = a2[1];
        v11 = a2[2];
        v12 = a2[3];
        v13 = a2[4];
        v14 = *((_BYTE *)a2 + 41);
        v15 = *((_BYTE *)a2 + 40);
        sub_1BA7271AC((id)*a2, v10, v11, v12, v13, v15, v14);
        *a1 = v9;
        a1[1] = v10;
        a1[2] = v11;
        a1[3] = v12;
        a1[4] = v13;
        *((_BYTE *)a1 + 40) = v15;
        *((_BYTE *)a1 + 41) = v14;
        a1[6] = a2[6];
        v16 = (void *)a2[7];
        v17 = *((_BYTE *)a2 + 64);
        swift_bridgeObjectRetain();
        sub_1BA727178(v16, v17);
        a1[7] = (uint64_t)v16;
        *((_BYTE *)a1 + 64) = v17;
        goto LABEL_31;
      case 2u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_31;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        v18 = a2[6];
        v19 = a2[7];
        v20 = a2[8];
        v21 = a2[9];
        v22 = *((_BYTE *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA7261E0(v18, v19, v20, v21, v22);
        a1[6] = v18;
        a1[7] = v19;
        a1[8] = v20;
        a1[9] = v21;
        *((_BYTE *)a1 + 80) = v22;
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 5u:
        v23 = type metadata accessor for FormatPurchaseData(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v33 = type metadata accessor for FormatPurchaseLandingPageData();
          v34 = *(_QWORD *)(v33 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v34 + 48))(a2, 1, v33))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            a1[1] = a2[1];
            v38 = *(int *)(v33 + 20);
            v39 = (char *)a1 + v38;
            v40 = (char *)a2 + v38;
            v41 = type metadata accessor for FormatPostPurchaseData();
            v42 = *(_QWORD *)(v41 - 8);
            v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
            swift_bridgeObjectRetain();
            if (v43(v40, 1, v41))
            {
              sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
            }
            else
            {
              v45 = sub_1BB86C67C();
              v46 = *(_QWORD *)(v45 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v40, 2, v45))
              {
                memcpy(v39, v40, *(_QWORD *)(v42 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v39, v40, v45);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v39, 0, 2, v45);
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
            }
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v33);
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
            goto LABEL_31;
          }
          *a1 = *a2;
          a1[1] = a2[1];
          v25 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          v26 = (char *)a1 + v25;
          v27 = (char *)a2 + v25;
          v28 = type metadata accessor for FormatPostPurchaseData();
          v29 = *(_QWORD *)(v28 - 8);
          v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
          swift_bridgeObjectRetain();
          if (v30(v27, 1, v28))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
          }
          else
          {
            v36 = sub_1BB86C67C();
            v37 = *(_QWORD *)(v36 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v27, 2, v36))
            {
              memcpy(v26, v27, *(_QWORD *)(v29 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v26, v27, v36);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v26, 0, 2, v36);
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_31:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for FormatAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void (*v28)(void *, _QWORD, uint64_t, uint64_t);
  void *__dst;

  if (swift_getEnumCaseMultiPayload() == 5)
  {
    v6 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for FormatPurchaseLandingPageData();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v19 = *(int *)(v14 + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = type metadata accessor for FormatPostPurchaseData();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          __dst = v20;
          v25 = sub_1BB86C67C();
          v26 = *(_QWORD *)(v25 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 2, v25))
          {
            v27 = __dst;
            memcpy(__dst, v21, *(_QWORD *)(v23 + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v26 + 32))(__dst, v21, v25);
            v28 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56);
            v27 = __dst;
            v28(__dst, 0, 2, v25);
          }
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for FormatPostPurchaseData();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v17 = sub_1BB86C67C();
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 2, v17))
        {
          memcpy(v9, v10, *(_QWORD *)(v12 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v10, v17);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 2, v17);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void (*v28)(void *, _QWORD, uint64_t, uint64_t);
  void *__dst;

  if (a1 != a2)
  {
    sub_1BB26D3A4((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      v6 = type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v14 = type metadata accessor for FormatPurchaseLandingPageData();
        v15 = *(_QWORD *)(v14 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v19 = *(int *)(v14 + 20);
          v20 = (char *)a1 + v19;
          v21 = (char *)a2 + v19;
          v22 = type metadata accessor for FormatPostPurchaseData();
          v23 = *(_QWORD *)(v22 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          }
          else
          {
            __dst = v20;
            v25 = sub_1BB86C67C();
            v26 = *(_QWORD *)(v25 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 2, v25))
            {
              v27 = __dst;
              memcpy(__dst, v21, *(_QWORD *)(v23 + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v26 + 32))(__dst, v21, v25);
              v28 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56);
              v27 = __dst;
              v28(__dst, 0, 2, v25);
            }
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_24:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *a1 = *a2;
        v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = type metadata accessor for FormatPostPurchaseData();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          v17 = sub_1BB86C67C();
          v18 = *(_QWORD *)(v17 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 2, v17))
          {
            memcpy(v9, v10, *(_QWORD *)(v12 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v10, v17);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v9, 0, 2, v17);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t FormatStateViewNodeState.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateViewNodeState.state.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeState.children.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatStateViewNodeState.children.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB2E4654(_QWORD *a1)
{
  return FormatStateViewNodeState.encode(to:)(a1);
}

uint64_t FormatStateViewNodeState.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - v6;
  sub_1BAEE4FF4(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1[2];
  v12 = v1[3];
  v25 = v1[4];
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA4FB65C();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatStateViewNodeState, v16, v13, (uint64_t)&type metadata for FormatStateViewNodeState, (uint64_t)&type metadata for FormatStateViewNodeState.CodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v14, (uint64_t)v10, v15, (uint64_t)&off_1E734BD00);
  v17 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v17 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C38);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v7, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v21 = v27;
  sub_1BAD25264(v11, v12, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v21)
  {
    v22 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v23 = v25;
    swift_bridgeObjectRetain();
    if ((sub_1BAE5892C(v22, 1, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v29 = 1;
      v28 = v23;
      sub_1BA4FB600(0, &qword_1ED39C0E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE5074();
      sub_1BB2E4CC0();
      sub_1BA653FC0();
      sub_1BB874464();
    }
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAEE4FF4);
}

uint64_t sub_1BB2E495C(char *a1, char *a2)
{
  return sub_1BB806D0C(*a1, *a2);
}

uint64_t sub_1BB2E4968()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2E49E4()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2E4A3C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2E4AB4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB2E4B10(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6574617473;
  if (*v1)
    v2 = 0x6E6572646C696863;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB2E4B4C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BB2E4BAC()
{
  sub_1BA4FB65C();
  return sub_1BB874710();
}

uint64_t sub_1BB2E4BD4()
{
  sub_1BA4FB65C();
  return sub_1BB87471C();
}

uint64_t _s8NewsFeed019FormatStateViewNodeD0V2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  BOOL v9;
  char v10;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_1BB874398() & 1) == 0)
    return 0;
  v9 = v2 == v5 && v4 == v6;
  if (!v9 && (sub_1BB874398() & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1BA883A18(v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 & 1;
}

void sub_1BB2E4CC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A2F48)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A2F48);
  }
}

unint64_t sub_1BB2E4D14(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA83EF24();
  a1[2] = sub_1BAEEAD5C();
  result = sub_1BB2E4D48();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB2E4D48()
{
  unint64_t result;

  result = qword_1EF2C0E80;
  if (!qword_1EF2C0E80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateViewNodeState, &type metadata for FormatStateViewNodeState);
    atomic_store(result, (unint64_t *)&qword_1EF2C0E80);
  }
  return result;
}

uint64_t sub_1BB2E4D8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2E4D98(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatStateViewNodeState()
{
  return &type metadata for FormatStateViewNodeState;
}

uint64_t storeEnumTagSinglePayload for FormatStateViewNodeState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB2E4E34 + 4 * byte_1BB906295[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB2E4E68 + 4 * byte_1BB906290[v4]))();
}

uint64_t sub_1BB2E4E68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2E4E70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2E4E78);
  return result;
}

uint64_t sub_1BB2E4E84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2E4E8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB2E4E90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2E4E98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatStateViewNodeState.CodingKeys()
{
  return &type metadata for FormatStateViewNodeState.CodingKeys;
}

unint64_t sub_1BB2E4EB8()
{
  unint64_t result;

  result = qword_1EF2C0E88;
  if (!qword_1EF2C0E88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90642C, &type metadata for FormatStateViewNodeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0E88);
  }
  return result;
}

uint64_t static AssetManagerReference.identifier.getter()
{
  return 0x6E614D7465737361;
}

ValueMetadata *type metadata accessor for AssetManagerReference()
{
  return &type metadata for AssetManagerReference;
}

uint64_t sub_1BB2E4F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  int v15;
  int v16;
  char v17;
  int v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD v28[2];
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  id v40;
  uint64_t v41;

  v5 = sub_1BB86E008();
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3A3B10, (uint64_t (*)(uint64_t))sub_1BA81D390, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  MEMORY[0x1E0C80A78](v7);
  v35 = (char *)v28 - v8;
  v9 = sub_1BB86DEAC();
  v33 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x1E0C80A78](v9);
  v32 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
    return v12;
  v28[1] = v2;
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1BA81C3B0(0, v11, 0);
  v12 = v41;
  result = sub_1BA580CE4(a1);
  v14 = result;
  v16 = v15;
  v18 = v17 & 1;
  v30 = a1;
  v31 = a1 + 56;
  v29 = *(id *)(a2 + 16);
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(v31 + (((unint64_t)v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(a1 + 36) != v16)
      goto LABEL_16;
    v39 = v18;
    v40 = v29;
    v19 = qword_1ED3A38B0;
    v20 = v29;
    swift_bridgeObjectRetain();
    if (v19 != -1)
      swift_once();
    v21 = v38;
    v22 = __swift_project_value_buffer(v38, (uint64_t)qword_1ED3A3890);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v22, v21);
    sub_1BA81D390();
    sub_1BB86ECF8();

    v23 = v32;
    sub_1BB86DEA0();
    swift_bridgeObjectRelease();
    v41 = v12;
    v25 = *(_QWORD *)(v12 + 16);
    v24 = *(_QWORD *)(v12 + 24);
    if (v25 >= v24 >> 1)
    {
      sub_1BA81C3B0(v24 > 1, v25 + 1, 1);
      v12 = v41;
    }
    *(_QWORD *)(v12 + 16) = v25 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v12+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(_QWORD *)(v33 + 72) * v25, v23, v34);
    a1 = v30;
    result = sub_1BA57FFE8(v14, v16, v39 & 1, v30);
    v14 = result;
    v16 = v26;
    v18 = v27 & 1;
    if (!--v11)
    {
      sub_1BA8CA884(result, v26, v18);
      return v12;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t FeedCatalogItem.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[32];
  char v12;
  _OWORD v13[7];
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[32];
  _BYTE v23[137];
  char v24;

  sub_1BA982FE4(v0, (uint64_t)&v15);
  if (v24)
  {
    if (v24 != 1)
    {
      v10 = v21;
      *(_OWORD *)v11 = *(_OWORD *)v22;
      *(_OWORD *)&v11[16] = *(_OWORD *)&v22[16];
      v12 = v23[0];
      v6 = v17;
      v7 = v18;
      v8 = v19;
      v9 = v20;
      v4 = v15;
      v5 = v16;
      v1 = v15;
      swift_bridgeObjectRetain();
      sub_1BA6A94C4((uint64_t)&v4);
      return v1;
    }
    v13[6] = v21;
    v14[0] = *(_OWORD *)v22;
    *(_OWORD *)((char *)v14 + 9) = *(_OWORD *)&v22[9];
    v13[2] = v17;
    v13[3] = v18;
    v13[4] = v19;
    v13[5] = v20;
    v13[0] = v15;
    v13[1] = v16;
    sub_1BA8EDBB0((uint64_t)v23, (uint64_t)&v4);
    sub_1BA90EECC((uint64_t)&v4);
    v1 = *((_QWORD *)&v13[0] + 1);
    swift_bridgeObjectRetain();
    v2 = v13;
  }
  else
  {
    v4 = v15;
    v5 = v16;
    v10 = v21;
    *(_OWORD *)v11 = *(_OWORD *)v22;
    *(_OWORD *)&v11[9] = *(_OWORD *)&v22[9];
    v6 = v17;
    v7 = v18;
    v8 = v19;
    v9 = v20;
    v1 = *((_QWORD *)&v15 + 1);
    swift_bridgeObjectRetain();
    v2 = &v4;
  }
  sub_1BA8D1FE4((uint64_t)v2);
  return v1;
}

void FeedCatalogItem.traits.getter(_QWORD *a1@<X8>)
{
  *a1 = 64;
}

uint64_t FeedCatalogItem.layoutDirection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[32];
  char v16;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[32];
  _BYTE v32[137];
  char v33;

  sub_1BA982FE4(v1, (uint64_t)&v24);
  if (!v33)
  {
    v14 = v30;
    *(_OWORD *)v15 = *(_OWORD *)v31;
    *(_OWORD *)&v15[9] = *(_OWORD *)&v31[9];
    v10 = v26;
    v11 = v27;
    v12 = v28;
    v13 = v29;
    v8 = v24;
    v9 = v25;
    result = sub_1BA8D1FE4((uint64_t)&v8);
    v4 = v10;
    v5 = BYTE8(v10);
    goto LABEL_5;
  }
  if (v33 == 1)
  {
    v22 = v30;
    v23[0] = *(_OWORD *)v31;
    *(_OWORD *)((char *)v23 + 9) = *(_OWORD *)&v31[9];
    v18 = v26;
    v19 = v27;
    v20 = v28;
    v21 = v29;
    v17[0] = v24;
    v17[1] = v25;
    sub_1BA8EDBB0((uint64_t)v32, (uint64_t)&v8);
    sub_1BA90EECC((uint64_t)&v8);
    result = sub_1BA8D1FE4((uint64_t)v17);
    v4 = v18;
    v5 = BYTE8(v18);
LABEL_5:
    *(_QWORD *)a1 = v4;
    *(_BYTE *)(a1 + 8) = v5;
    return result;
  }
  v14 = v30;
  *(_OWORD *)v15 = *(_OWORD *)v31;
  *(_OWORD *)&v15[16] = *(_OWORD *)&v31[16];
  v16 = v32[0];
  v10 = v26;
  v11 = v27;
  v12 = v28;
  v13 = v29;
  v8 = v24;
  v9 = v25;
  v6 = v26;
  v7 = BYTE8(v26);
  result = sub_1BA6A94C4((uint64_t)&v8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  return result;
}

uint64_t FeedCatalogItem.debugIdentifier.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  __int128 *v4;
  void *v5;
  id v6;
  id v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[25];
  uint64_t v17;
  _OWORD v18[7];
  _OWORD v19[2];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[32];
  _BYTE v28[137];
  char v29;

  sub_1BA982FE4(v0, (uint64_t)&v20);
  if (v29)
  {
    if (v29 != 1)
    {
      LOBYTE(v17) = v28[0];
      v7 = objc_msgSend((id)v21, sel_identifier, v20, v21, v22, v23, v24, v25, v26, *(_OWORD *)v27, *(_OWORD *)&v27[16], v17);
      v3 = sub_1BB8729A0();

      sub_1BA6A94C4((uint64_t)&v9);
      return v3;
    }
    v18[6] = v26;
    v19[0] = *(_OWORD *)v27;
    *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)&v27[9];
    v18[2] = v22;
    v18[3] = v23;
    v18[4] = v24;
    v18[5] = v25;
    v18[0] = v20;
    v18[1] = v21;
    sub_1BA8EDBB0((uint64_t)v28, (uint64_t)&v9);
    sub_1BA90EECC((uint64_t)&v9);
    v1 = *(void **)&v18[0];
    sub_1BA8D1F08((uint64_t)v18);
    v2 = objc_msgSend(v1, sel_identifier);
    v3 = sub_1BB8729A0();

    sub_1BA8D1FE4((uint64_t)v18);
    v4 = v18;
  }
  else
  {
    v15 = v26;
    *(_OWORD *)v16 = *(_OWORD *)v27;
    *(_OWORD *)&v16[9] = *(_OWORD *)&v27[9];
    v9 = v20;
    v10 = v21;
    v11 = v22;
    v12 = v23;
    v13 = v24;
    v14 = v25;
    v5 = (void *)v20;
    sub_1BA8D1F08((uint64_t)&v9);
    v6 = objc_msgSend(v5, sel_identifier);
    v3 = sub_1BB8729A0();

    sub_1BA8D1FE4((uint64_t)&v9);
    v4 = &v9;
  }
  sub_1BA8D1FE4((uint64_t)v4);
  return v3;
}

uint64_t FeedCatalogItem.debugSourceName.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  _OWORD *v4;
  void *v5;
  id v6;
  _OWORD v8[7];
  _OWORD v9[2];
  _OWORD v10[7];
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[2];
  uint64_t v20;
  char v21;

  sub_1BA982FE4(v0, (uint64_t)&v12);
  if (v21)
  {
    if (v21 != 1)
    {
      sub_1BA9831B8((uint64_t)&v12);
      return 0;
    }
    v8[6] = v18;
    v9[0] = v19[0];
    *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v19 + 9);
    v8[2] = v14;
    v8[3] = v15;
    v8[4] = v16;
    v8[5] = v17;
    v8[0] = v12;
    v8[1] = v13;
    sub_1BA8EDBB0((uint64_t)&v20, (uint64_t)v10);
    sub_1BA90EECC((uint64_t)v10);
    v1 = *(void **)&v8[0];
    sub_1BA8D1F08((uint64_t)v8);
    v2 = objc_msgSend(objc_msgSend(v1, sel_sourceChannel), sel_name);
    swift_unknownObjectRelease();
    v3 = sub_1BB8729A0();

    sub_1BA8D1FE4((uint64_t)v8);
    v4 = v8;
  }
  else
  {
    v10[6] = v18;
    v11[0] = v19[0];
    *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v19 + 9);
    v10[0] = v12;
    v10[1] = v13;
    v10[2] = v14;
    v10[3] = v15;
    v10[4] = v16;
    v10[5] = v17;
    v5 = (void *)v12;
    sub_1BA8D1F08((uint64_t)v10);
    v6 = objc_msgSend(objc_msgSend(v5, sel_sourceChannel), sel_name);
    swift_unknownObjectRelease();
    v3 = sub_1BB8729A0();

    sub_1BA8D1FE4((uint64_t)v10);
    v4 = v10;
  }
  sub_1BA8D1FE4((uint64_t)v4);
  return v3;
}

uint64_t FeedCatalogItem.debugTitle.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  __int128 *v4;
  void *v5;
  id v6;
  id v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[25];
  uint64_t v17;
  _OWORD v18[7];
  _OWORD v19[2];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[32];
  _BYTE v28[137];
  char v29;

  sub_1BA982FE4(v0, (uint64_t)&v20);
  if (v29)
  {
    if (v29 != 1)
    {
      LOBYTE(v17) = v28[0];
      v7 = objc_msgSend((id)v21, sel_name, v20, v21, v22, v23, v24, v25, v26, *(_OWORD *)v27, *(_OWORD *)&v27[16], v17);
      v3 = sub_1BB8729A0();

      sub_1BA6A94C4((uint64_t)&v9);
      return v3;
    }
    v18[6] = v26;
    v19[0] = *(_OWORD *)v27;
    *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)&v27[9];
    v18[2] = v22;
    v18[3] = v23;
    v18[4] = v24;
    v18[5] = v25;
    v18[0] = v20;
    v18[1] = v21;
    sub_1BA8EDBB0((uint64_t)v28, (uint64_t)&v9);
    sub_1BA90EECC((uint64_t)&v9);
    v1 = *(void **)&v18[0];
    sub_1BA8D1F08((uint64_t)v18);
    v2 = objc_msgSend(v1, sel_coverDate);
    v3 = sub_1BB8729A0();

    sub_1BA8D1FE4((uint64_t)v18);
    v4 = v18;
  }
  else
  {
    v15 = v26;
    *(_OWORD *)v16 = *(_OWORD *)v27;
    *(_OWORD *)&v16[9] = *(_OWORD *)&v27[9];
    v9 = v20;
    v10 = v21;
    v11 = v22;
    v12 = v23;
    v13 = v24;
    v14 = v25;
    v5 = (void *)v20;
    sub_1BA8D1F08((uint64_t)&v9);
    v6 = objc_msgSend(v5, sel_coverDate);
    v3 = sub_1BB8729A0();

    sub_1BA8D1FE4((uint64_t)&v9);
    v4 = &v9;
  }
  sub_1BA8D1FE4((uint64_t)v4);
  return v3;
}

id FeedCatalogItem.debugAssetHandle.getter()
{
  uint64_t v0;
  id v1;
  id *v2;
  id v4[2];
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[32];
  char v12;
  id v13[2];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[32];
  _BYTE v29[137];
  char v30;

  sub_1BA982FE4(v0, (uint64_t)&v21);
  if (v30)
  {
    if (v30 != 1)
    {
      v10 = v27;
      *(_OWORD *)v11 = *(_OWORD *)v28;
      *(_OWORD *)&v11[16] = *(_OWORD *)&v28[16];
      v12 = v29[0];
      v6 = v23;
      v7 = v24;
      v8 = v25;
      v9 = v26;
      *(_OWORD *)v4 = v21;
      v5 = v22;
      v1 = FeedTag.debugAssetHandle.getter();
      sub_1BA6A94C4((uint64_t)v4);
      return v1;
    }
    v19 = v27;
    v20[0] = *(_OWORD *)v28;
    *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)&v28[9];
    v15 = v23;
    v16 = v24;
    v17 = v25;
    v18 = v26;
    *(_OWORD *)v13 = v21;
    v14 = v22;
    sub_1BA8EDBB0((uint64_t)v29, (uint64_t)v4);
    sub_1BA90EECC((uint64_t)v4);
    v1 = objc_msgSend(v13[0], sel_coverImageAssetHandle);
    v2 = v13;
  }
  else
  {
    v11[8] = v28[8];
    *(_OWORD *)&v11[9] = *(_OWORD *)&v28[9];
    v1 = objc_msgSend((id)v21, sel_coverImageAssetHandle, v21, v22, v23, v24, v25, v26, v27, *(_QWORD *)v28, *(_QWORD *)&v11[8], (unint64_t)(*(_OWORD *)&v28[9] >> 56), *(_QWORD *)&v11[24]);
    v2 = v4;
  }
  sub_1BA8D1FE4((uint64_t)v2);
  return v1;
}

uint64_t FeedCatalogItem.debugScoreProfile.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _OWORD *v3;
  id v4;
  _OWORD v6[3];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[2];
  _OWORD v12[7];
  _OWORD v13[2];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[2];
  uint64_t v22;
  char v23;

  sub_1BA982FE4(v0, (uint64_t)&v14);
  if (v23)
  {
    if (v23 != 1)
    {
      sub_1BA9831B8((uint64_t)&v14);
      return 0;
    }
    v10 = v20;
    v11[0] = v21[0];
    *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v21 + 9);
    v6[2] = v16;
    v7 = v17;
    v8 = v18;
    v9 = v19;
    v6[0] = v14;
    v6[1] = v15;
    sub_1BA8EDBB0((uint64_t)&v22, (uint64_t)v12);
    sub_1BA90EECC((uint64_t)v12);
    v1 = *((_QWORD *)&v7 + 1);
    v2 = *((id *)&v7 + 1);
    v3 = v6;
  }
  else
  {
    v12[6] = v20;
    v13[0] = v21[0];
    *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)((char *)v21 + 9);
    v12[2] = v16;
    v12[3] = v17;
    v12[4] = v18;
    v12[5] = v19;
    v12[0] = v14;
    v12[1] = v15;
    v1 = *((_QWORD *)&v17 + 1);
    v4 = *((id *)&v17 + 1);
    v3 = v12;
  }
  sub_1BA8D1FE4((uint64_t)v3);
  return v1;
}

double FeedCatalogItem.kind.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BB8E2860;
  return result;
}

void sub_1BB2E5C18(_QWORD *a1@<X8>)
{
  *a1 = 64;
}

unint64_t sub_1BB2E5C44(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2E5C68();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB2E5C68()
{
  unint64_t result;

  result = qword_1EF2C0E90;
  if (!qword_1EF2C0E90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedCatalogItem, &type metadata for FeedCatalogItem);
    atomic_store(result, (unint64_t *)&qword_1EF2C0E90);
  }
  return result;
}

unint64_t destroy for FeedCatalogItem(uint64_t a1)
{
  unsigned int v2;
  unint64_t result;
  void *v4;

  v2 = *(unsigned __int8 *)(a1 + 281);
  if (v2 >= 3)
    v2 = *(_DWORD *)a1 + 3;
  if (v2 == 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + 88);
    if (result != 1)
    {
      result = swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 120))
        return __swift_destroy_boxed_opaque_existential_1(a1 + 96);
    }
  }
  else if (v2 == 1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    result = *(_QWORD *)(a1 + 128);
    if (result >= 0x11)
      result = swift_bridgeObjectRelease();
    v4 = *(void **)(a1 + 144);
    if (v4)
    {

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 224) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      result = *(_QWORD *)(a1 + 272);
      if (result >= 0x11)
        return swift_bridgeObjectRelease();
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    result = *(_QWORD *)(a1 + 128);
    if (result >= 0x11)
      return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FeedCatalogItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  _QWORD *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  _QWORD *v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  __int128 v46;
  char v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  _QWORD *v56;
  unint64_t v57;
  __int128 v58;

  v4 = *(unsigned __int8 *)(a2 + 281);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    v12 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v13;
    v14 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v14;
    v15 = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      v16 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v16;
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      v17 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v17;
    }
    else
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v15;
      v31 = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      if (v31)
      {
        v32 = *(_QWORD *)(a2 + 128);
        *(_QWORD *)(a1 + 120) = v31;
        *(_QWORD *)(a1 + 128) = v32;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))(a1 + 96, a2 + 96, v31);
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      }
      else
      {
        v58 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v58;
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      }
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    }
    v47 = 2;
  }
  else if (v4 == 1)
  {
    v5 = *(void **)a2;
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v7 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v8 = *(_QWORD *)(a2 + 80);
    v9 = v5;
    swift_bridgeObjectRetain();
    v10 = v7;
    if (v8 == 1)
    {
      v11 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v11;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    }
    else
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v8;
      v25 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v25;
      v27 = *(void **)(a2 + 104);
      v26 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = v27;
      *(_QWORD *)(a1 + 112) = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = v27;
    }
    v29 = (_QWORD *)(a2 + 120);
    v30 = *(_QWORD *)(a2 + 128);
    if (v30 >= 0x11)
    {
      *(_QWORD *)(a1 + 120) = *v29;
      *(_QWORD *)(a1 + 128) = v30;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 120) = *(_OWORD *)v29;
    }
    v39 = *(void **)(a2 + 144);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    if (v39)
    {
      v40 = *(_QWORD *)(a2 + 152);
      v41 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 144) = v39;
      *(_QWORD *)(a1 + 152) = v40;
      *(_QWORD *)(a1 + 160) = v41;
      *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      v42 = *(void **)(a2 + 200);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v42;
      *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
      v43 = *(_QWORD *)(a2 + 224);
      v44 = v39;
      swift_bridgeObjectRetain();
      v45 = v42;
      if (v43 == 1)
      {
        v46 = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 232) = v46;
        *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      }
      else
      {
        *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
        *(_QWORD *)(a1 + 224) = v43;
        v52 = *(_QWORD *)(a2 + 240);
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        *(_QWORD *)(a1 + 240) = v52;
        v54 = *(void **)(a2 + 248);
        v53 = *(_QWORD *)(a2 + 256);
        *(_QWORD *)(a1 + 248) = v54;
        *(_QWORD *)(a1 + 256) = v53;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55 = v54;
      }
      v56 = (_QWORD *)(a2 + 264);
      v57 = *(_QWORD *)(a2 + 272);
      if (v57 >= 0x11)
      {
        *(_QWORD *)(a1 + 264) = *v56;
        *(_QWORD *)(a1 + 272) = v57;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 264) = *(_OWORD *)v56;
      }
      *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
      v47 = 1;
    }
    else
    {
      v48 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 256) = v48;
      *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
      v49 = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v49;
      v50 = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 224) = v50;
      v51 = *(_OWORD *)(a2 + 160);
      v47 = 1;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v51;
    }
  }
  else
  {
    v18 = *(void **)a2;
    v19 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v19;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v20 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v20;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v21 = *(_QWORD *)(a2 + 80);
    v22 = v18;
    swift_bridgeObjectRetain();
    v23 = v20;
    if (v21 == 1)
    {
      v24 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v24;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    }
    else
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v21;
      v33 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v33;
      v35 = *(void **)(a2 + 104);
      v34 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = v35;
      *(_QWORD *)(a1 + 112) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = v35;
    }
    v37 = (_QWORD *)(a2 + 120);
    v38 = *(_QWORD *)(a2 + 128);
    if (v38 >= 0x11)
    {
      *(_QWORD *)(a1 + 120) = *v37;
      *(_QWORD *)(a1 + 128) = v38;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 120) = *(_OWORD *)v37;
    }
    v47 = 0;
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  }
  *(_BYTE *)(a1 + 281) = v47;
  return a1;
}

uint64_t assignWithCopy for FeedCatalogItem(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  void *v5;
  unsigned int v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  __int128 v26;
  __int128 v27;
  void *v28;
  id v29;
  uint64_t v30;
  char v31;
  void *v32;
  id v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  __int128 v40;
  __int128 v41;
  char v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  void *v49;
  id v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;

  if (a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 281);
  if (v4 >= 3)
    v4 = *(_DWORD *)a1 + 3;
  if (v4 == 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 120))
        __swift_destroy_boxed_opaque_existential_1(a1 + 96);
    }
    goto LABEL_22;
  }
  if (v4 == 1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
      swift_bridgeObjectRelease();
    v5 = *(void **)(a1 + 144);
    if (!v5)
      goto LABEL_22;

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 224) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(a1 + 272) < 0x11uLL)
      goto LABEL_22;
  }
  else
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(a1 + 128) < 0x11uLL)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease();
LABEL_22:
  v6 = *(unsigned __int8 *)(a2 + 281);
  if (v6 >= 3)
    v6 = *(_DWORD *)a2 + 3;
  if (v6 == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v15 = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v15;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    v16 = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 == 1)
    {
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      v17 = *(_OWORD *)(a2 + 96);
      v18 = *(_OWORD *)(a2 + 112);
      v19 = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v18;
      *(_OWORD *)(a1 + 128) = v19;
      *(_OWORD *)(a1 + 96) = v17;
    }
    else
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v30 = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      if (v30)
      {
        *(_QWORD *)(a1 + 120) = v30;
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))(a1 + 96, a2 + 96, v30);
        v31 = *(_BYTE *)(a2 + 144);
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        *(_BYTE *)(a1 + 144) = v31;
      }
      else
      {
        v51 = *(_OWORD *)(a2 + 96);
        v52 = *(_OWORD *)(a2 + 112);
        v53 = *(_OWORD *)(a2 + 128);
        *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
        *(_OWORD *)(a1 + 112) = v52;
        *(_OWORD *)(a1 + 128) = v53;
        *(_OWORD *)(a1 + 96) = v51;
      }
    }
    v42 = 2;
  }
  else if (v6 == 1)
  {
    v7 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
    v8 = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    v9 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v9;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v10 = *(_QWORD *)(a2 + 80);
    v11 = v7;
    swift_bridgeObjectRetain();
    v12 = v9;
    if (v10 == 1)
    {
      v13 = *(_OWORD *)(a2 + 72);
      v14 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v14;
      *(_OWORD *)(a1 + 72) = v13;
    }
    else
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      v28 = *(void **)(a2 + 104);
      *(_QWORD *)(a1 + 104) = v28;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29 = v28;
    }
    if (*(_QWORD *)(a2 + 128) >= 0x11uLL)
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    }
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    v34 = *(void **)(a2 + 144);
    if (v34)
    {
      *(_QWORD *)(a1 + 144) = v34;
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
      *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
      v35 = *(_QWORD *)(a2 + 176);
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = v35;
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      v36 = *(void **)(a2 + 200);
      *(_QWORD *)(a1 + 200) = v36;
      *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
      v37 = *(_QWORD *)(a2 + 224);
      v38 = v34;
      swift_bridgeObjectRetain();
      v39 = v36;
      if (v37 == 1)
      {
        v40 = *(_OWORD *)(a2 + 216);
        v41 = *(_OWORD *)(a2 + 248);
        *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 248) = v41;
        *(_OWORD *)(a1 + 216) = v40;
      }
      else
      {
        *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
        v49 = *(void **)(a2 + 248);
        *(_QWORD *)(a1 + 248) = v49;
        *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v50 = v49;
      }
      if (*(_QWORD *)(a2 + 272) >= 0x11uLL)
      {
        *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
        *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
      }
      *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
      v42 = 1;
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      v43 = *(_OWORD *)(a2 + 160);
      v44 = *(_OWORD *)(a2 + 176);
      v45 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v45;
      *(_OWORD *)(a1 + 160) = v43;
      *(_OWORD *)(a1 + 176) = v44;
      v46 = *(_OWORD *)(a2 + 224);
      v47 = *(_OWORD *)(a2 + 240);
      v48 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
      *(_OWORD *)(a1 + 240) = v47;
      *(_OWORD *)(a1 + 256) = v48;
      *(_OWORD *)(a1 + 224) = v46;
      v42 = 1;
    }
  }
  else
  {
    v20 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
    v21 = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v21;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    v22 = *(void **)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v22;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    v23 = *(_QWORD *)(a2 + 80);
    v24 = v20;
    swift_bridgeObjectRetain();
    v25 = v22;
    if (v23 == 1)
    {
      v26 = *(_OWORD *)(a2 + 72);
      v27 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v27;
      *(_OWORD *)(a1 + 72) = v26;
    }
    else
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      v32 = *(void **)(a2 + 104);
      *(_QWORD *)(a1 + 104) = v32;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    if (*(_QWORD *)(a2 + 128) >= 0x11uLL)
    {
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    }
    v42 = 0;
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  }
  *(_BYTE *)(a1 + 281) = v42;
  return a1;
}

void *__swift_memcpy282_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x11AuLL);
}

uint64_t assignWithTake for FeedCatalogItem(uint64_t a1, _OWORD *a2)
{
  unsigned int v4;
  void *v5;
  unsigned int v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  if ((_OWORD *)a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 281);
  if (v4 >= 3)
    v4 = *(_DWORD *)a1 + 3;
  if (v4 == 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 120))
        __swift_destroy_boxed_opaque_existential_1(a1 + 96);
    }
    goto LABEL_22;
  }
  if (v4 == 1)
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
      swift_bridgeObjectRelease();
    v5 = *(void **)(a1 + 144);
    if (!v5)
      goto LABEL_22;

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 224) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(a1 + 272) < 0x11uLL)
      goto LABEL_22;
  }
  else
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 80) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(a1 + 128) < 0x11uLL)
      goto LABEL_22;
  }
  swift_bridgeObjectRelease();
LABEL_22:
  v6 = *((unsigned __int8 *)a2 + 281);
  if (v6 >= 3)
    v6 = *(_DWORD *)a2 + 3;
  if (v6 == 2)
  {
    v8 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v8;
    *(_OWORD *)(a1 + 128) = a2[8];
    *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
    v9 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v9;
    v10 = a2[5];
    *(_OWORD *)(a1 + 64) = a2[4];
    *(_OWORD *)(a1 + 80) = v10;
    v11 = a2[1];
    v7 = 2;
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v11;
  }
  else if (v6 == 1)
  {
    memcpy((void *)a1, a2, 0x119uLL);
    v7 = 1;
  }
  else
  {
    v7 = 0;
    v12 = a2[7];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 121) = *(_OWORD *)((char *)a2 + 121);
    v13 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v13;
    v14 = a2[5];
    *(_OWORD *)(a1 + 64) = a2[4];
    *(_OWORD *)(a1 + 80) = v14;
    v15 = a2[1];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v15;
  }
  *(_BYTE *)(a1 + 281) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedCatalogItem(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 282))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 281);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeedCatalogItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 266) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 282) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 282) = 0;
    if (a2)
      *(_BYTE *)(result + 281) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB2E6B10(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 281);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_1BB2E6B2C(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 2)
  {
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    v2 = a2 - 3;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 265) = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 281) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeedCatalogItem()
{
  return &type metadata for FeedCatalogItem;
}

uint64_t destroy for DebugInspection()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DebugInspection(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DebugInspection(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugInspection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspection()
{
  return &type metadata for DebugInspection;
}

uint64_t sub_1BB2E6F0C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2E6F3C + 4 * byte_1BB906598[a1]))(0x70756F7267, 0xE500000000000000);
}

uint64_t sub_1BB2E6F3C()
{
  return 0x736D657469;
}

unint64_t sub_1BB2E6F4C()
{
  return 0xD000000000000016;
}

unint64_t sub_1BB2E6F8C()
{
  return 0xD000000000000013;
}

void sub_1BB2E6FA4()
{
  JUMPOUT(0x1BB2E6FB8);
}

uint64_t sub_1BB2E6FC4()
{
  return 0x6F636E4572657375;
}

uint64_t sub_1BB2E6FE4(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  sub_1BB2E7BA4(0, &qword_1EF2C0EC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v20 - v6;
  v27 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  v10 = *((_QWORD *)v1 + 4);
  v25 = *((_QWORD *)v1 + 5);
  v26 = v10;
  v11 = *((_QWORD *)v1 + 6);
  v23 = *((_QWORD *)v1 + 7);
  v24 = v11;
  v12 = *((_QWORD *)v1 + 8);
  v21 = *((_QWORD *)v1 + 9);
  v22 = v12;
  v13 = *((_QWORD *)v1 + 10);
  v20[0] = *((_QWORD *)v1 + 11);
  v20[1] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2E7AC8();
  sub_1BB8746C8();
  v29 = v27;
  v30 = v8;
  v31 = v9;
  v32 = 0;
  sub_1BB2E7C00();
  v14 = v28;
  sub_1BB8741AC();
  if (!v14)
  {
    v15 = v24;
    v16 = v25;
    v18 = v22;
    v17 = v23;
    *(_QWORD *)&v29 = v26;
    v32 = 1;
    sub_1BB2E7B50();
    sub_1BB2E7C44(&qword_1EF2C0ED8, (unint64_t *)&qword_1EF2C2930, (uint64_t)&unk_1BB948D50, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    *(_QWORD *)&v29 = v16;
    v32 = 2;
    sub_1BA6BCC84();
    sub_1BA64D3D4((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    *(_QWORD *)&v29 = v15;
    v32 = 3;
    sub_1BB8741AC();
    *(_QWORD *)&v29 = v17;
    v32 = 4;
    sub_1BB8741AC();
    *(_QWORD *)&v29 = v18;
    v32 = 5;
    sub_1BAACF73C();
    sub_1BAACF964(&qword_1EF2AFB70, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1BB8741AC();
    *(_QWORD *)&v29 = v21;
    v32 = 6;
    sub_1BB8741AC();
    LOBYTE(v29) = 7;
    sub_1BB87411C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB2E7318@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  sub_1BB2E7BA4(0, &qword_1EF2C0E98, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2E7AC8();
  sub_1BB87468C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v41 = 0;
    sub_1BB2E7B0C();
    sub_1BB8740D4();
    v11 = v38;
    v12 = v40;
    v31 = v39;
    v32 = v37;
    sub_1BB2E7B50();
    v41 = 1;
    sub_1BB2E7C44(&qword_1EF2C0EB8, &qword_1EF2C0EC0, (uint64_t)&unk_1BB948D78, MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB8740D4();
    v36 = v12;
    v27 = a2;
    v29 = v11;
    v13 = v37;
    sub_1BA6BCC84();
    v41 = 2;
    v14 = sub_1BA64D3D4((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    swift_bridgeObjectRetain();
    v28 = 0;
    sub_1BB8740D4();
    v30 = v13;
    v41 = 3;
    v35 = v37;
    swift_bridgeObjectRetain();
    sub_1BB8740D4();
    v41 = 4;
    v34 = v37;
    swift_bridgeObjectRetain();
    sub_1BB8740D4();
    v33 = v14;
    v15 = v37;
    sub_1BAACF73C();
    v41 = 5;
    sub_1BAACF964((unint64_t *)&qword_1EF2AFB50, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    swift_bridgeObjectRetain();
    sub_1BB8740D4();
    v16 = v37;
    v41 = 6;
    swift_bridgeObjectRetain();
    sub_1BB8740D4();
    v17 = v37;
    LOBYTE(v37) = 7;
    v33 = v17;
    swift_bridgeObjectRetain();
    v18 = sub_1BB87402C();
    v20 = v19;
    v21 = *(void (**)(char *, uint64_t))(v7 + 8);
    v28 = v18;
    v21(v9, v6);
    swift_bridgeObjectRetain();
    v22 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v23 = v27;
    v24 = v33;
    *v27 = v32;
    v23[1] = v22;
    v26 = v35;
    v25 = v36;
    v23[2] = v31;
    v23[3] = v25;
    v23[4] = v30;
    v23[5] = v26;
    v23[6] = v34;
    v23[7] = v15;
    v23[8] = v16;
    v23[9] = v24;
    v23[10] = v28;
    v23[11] = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2E7A24()
{
  unsigned __int8 *v0;

  return sub_1BB2E6F0C(*v0);
}

uint64_t sub_1BB2E7A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2E7EA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2E7A50()
{
  sub_1BB2E7AC8();
  return sub_1BB874710();
}

uint64_t sub_1BB2E7A78()
{
  sub_1BB2E7AC8();
  return sub_1BB87471C();
}

uint64_t sub_1BB2E7AA0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BB2E7318(a1, a2);
}

uint64_t sub_1BB2E7AB4(_QWORD *a1)
{
  return sub_1BB2E6FE4(a1);
}

unint64_t sub_1BB2E7AC8()
{
  unint64_t result;

  result = qword_1EF2C0EA0;
  if (!qword_1EF2C0EA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9066D0, &type metadata for DebugInspection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0EA0);
  }
  return result;
}

unint64_t sub_1BB2E7B0C()
{
  unint64_t result;

  result = qword_1EF2C0EA8;
  if (!qword_1EF2C0EA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugInspectionGroup, &type metadata for DebugInspectionGroup);
    atomic_store(result, (unint64_t *)&qword_1EF2C0EA8);
  }
  return result;
}

void sub_1BB2E7B50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C0EB0)
  {
    type metadata accessor for DebugInspectionItem();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C0EB0);
  }
}

void sub_1BB2E7BA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB2E7AC8();
    v7 = a3(a1, &type metadata for DebugInspection.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB2E7C00()
{
  unint64_t result;

  result = qword_1EF2C0ED0;
  if (!qword_1EF2C0ED0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for DebugInspectionGroup, &type metadata for DebugInspectionGroup);
    atomic_store(result, (unint64_t *)&qword_1EF2C0ED0);
  }
  return result;
}

uint64_t sub_1BB2E7C44(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BB2E7B50();
    v10 = v9;
    v11 = sub_1BB2E7CBC(a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB2E7CBC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DebugInspectionItem();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugInspection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BB2E7D48 + 4 * byte_1BB9065A5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BB2E7D7C + 4 * byte_1BB9065A0[v4]))();
}

uint64_t sub_1BB2E7D7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2E7D84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2E7D8CLL);
  return result;
}

uint64_t sub_1BB2E7D98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2E7DA0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BB2E7DA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2E7DAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspection.CodingKeys()
{
  return &type metadata for DebugInspection.CodingKeys;
}

unint64_t sub_1BB2E7DCC()
{
  unint64_t result;

  result = qword_1EF2C0EE0;
  if (!qword_1EF2C0EE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9066A8, &type metadata for DebugInspection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0EE0);
  }
  return result;
}

unint64_t sub_1BB2E7E14()
{
  unint64_t result;

  result = qword_1EF2C0EE8;
  if (!qword_1EF2C0EE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB906618, &type metadata for DebugInspection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0EE8);
  }
  return result;
}

unint64_t sub_1BB2E7E5C()
{
  unint64_t result;

  result = qword_1EF2C0EF0;
  if (!qword_1EF2C0EF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB906640, &type metadata for DebugInspection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0EF0);
  }
  return result;
}

uint64_t sub_1BB2E7EA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x70756F7267 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736D657469 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB970FB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB970FD0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB971010 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB984F90 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BB984FB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F636E4572657375 && a2 == 0xEC000000676E6964)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BB2E81BC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1)
        sub_1BA7447E8(v7 > 1, v8 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v6;
      *(_QWORD *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t FormatContentSubgroup.Resolved.init(identifier:pluginIdentifier:layout:options:selectors:contents:sections:filters:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  a9[9] = a11;
  return result;
}

uint64_t FormatContentSubgroup.Resolved.feedItemIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v3 = sub_1BB4A4184(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v1 + 56;
    do
    {
      v5 += 64;
      v6 = FormatContentSlot.Resolved.feedItemIdentifiers.getter();
      sub_1BA67FB48(v6);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease_n();
    v7 = v10;
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  v8 = sub_1BA6E43EC(v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t FormatContentSubgroup.Resolved.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSubgroup.Resolved.pluginIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatContentSubgroup.Resolved.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.Resolved.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.Resolved.contents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.Resolved.sections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.Resolved.filters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatContentSubgroup.Resolved.headlines.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v1);
  v27[2] = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v39);
  v40 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v35 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v0[4];
  v6 = v0[7];
  v7 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v8 = sub_1BB4A4184(v7);
  swift_bridgeObjectRelease();
  v43 = v6;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v43;
  v10 = MEMORY[0x1E0DEE9D8];
  v43 = MEMORY[0x1E0DEE9D8];
  v29 = *(_QWORD *)(v9 + 16);
  if (v29)
  {
    v28 = v9 + 32;
    v27[1] = v9;
    swift_bridgeObjectRetain();
    v11 = 0;
    do
    {
      v37 = v11;
      v12 = (_QWORD *)(v28 + (v11 << 6));
      v13 = v12[1];
      v14 = v12[2];
      v16 = v12[3];
      v15 = v12[4];
      v17 = v12[5];
      v18 = v12[6];
      v19 = v12[7];
      v42 = v10;
      v20 = *(_QWORD *)(v15 + 16);
      v38 = v13;
      if (v20)
      {
        v36 = v19;
        v21 = v15;
        v22 = v15 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
        swift_bridgeObjectRetain_n();
        v33 = v14;
        swift_bridgeObjectRetain_n();
        v32 = v16;
        swift_bridgeObjectRetain_n();
        v34 = v21;
        swift_bridgeObjectRetain_n();
        v31 = v17;
        swift_bridgeObjectRetain_n();
        v30 = v18;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_1BA4C2DD8(v22, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
        v23 = (char *)&loc_1BB2E8800 + 4 * byte_1BB906720[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v24 = MEMORY[0x1E0DEE9D8];
      v25 = v37;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v11 = v25 + 1;
      sub_1BA66293C(v24);
      v10 = MEMORY[0x1E0DEE9D8];
    }
    while (v11 != v29);
    swift_bridgeObjectRelease_n();
    return v43;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.Resolved.issues.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v25 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v0[3];
  v4 = v0[7];
  v3 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v5 = sub_1BB4A4184(v3);
  swift_bridgeObjectRelease();
  v32 = v4;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v32;
  v7 = MEMORY[0x1E0DEE9D8];
  v32 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(v6 + 16);
  if (v22)
  {
    v20 = v6;
    v21 = v6 + 32;
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = (uint64_t)v28;
    do
    {
      v26 = v8;
      v11 = (_QWORD *)(v21 + (v8 << 6));
      v12 = v11[1];
      v13 = v11[4];
      v14 = v11[6];
      v27 = v11[7];
      v31 = v7;
      v15 = *(_QWORD *)(v13 + 16);
      if (v15)
      {
        v16 = v13;
        v17 = v13 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
        v24 = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23 = v16;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = *(_QWORD *)(v25 + 72);
        v29 = v18;
        v30 = v14;
        do
        {
          sub_1BA4C2DD8(v17, v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            MEMORY[0x1BCCE36AC]();
            if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
            v9 = (uint64_t)v28;
            v18 = v29;
          }
          else
          {
            sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v17 += v18;
          --v15;
        }
        while (v15);
        v10 = v31;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10 = MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v8 = v26 + 1;
      sub_1BB384000(v10);
      v7 = MEMORY[0x1E0DEE9D8];
    }
    while (v8 != v22);
    swift_bridgeObjectRelease_n();
    return v32;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.Resolved.tags.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v25 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v0[3];
  v4 = v0[7];
  v3 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v5 = sub_1BB4A4184(v3);
  swift_bridgeObjectRelease();
  v32 = v4;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v32;
  v7 = MEMORY[0x1E0DEE9D8];
  v32 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(v6 + 16);
  if (v22)
  {
    v20 = v6;
    v21 = v6 + 32;
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = (uint64_t)v28;
    do
    {
      v26 = v8;
      v11 = (_QWORD *)(v21 + (v8 << 6));
      v12 = v11[1];
      v13 = v11[4];
      v14 = v11[6];
      v27 = v11[7];
      v31 = v7;
      v15 = *(_QWORD *)(v13 + 16);
      if (v15)
      {
        v16 = v13;
        v17 = v13 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
        v24 = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23 = v16;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = *(_QWORD *)(v25 + 72);
        v29 = v18;
        v30 = v14;
        do
        {
          sub_1BA4C2DD8(v17, v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 2)
          {
            MEMORY[0x1BCCE36AC]();
            if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
            v9 = (uint64_t)v28;
            v18 = v29;
          }
          else
          {
            sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v17 += v18;
          --v15;
        }
        while (v15);
        v10 = v31;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10 = MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v8 = v26 + 1;
      sub_1BB383FF4(v10);
      v7 = MEMORY[0x1E0DEE9D8];
    }
    while (v8 != v22);
    swift_bridgeObjectRelease_n();
    return v32;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.Resolved.webEmbeds.getter()
{
  return sub_1BB2E9DE4(sub_1BB4A4338);
}

uint64_t FormatContentSubgroup.Resolved.puzzles.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v25 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v0[3];
  v4 = v0[7];
  v3 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v5 = sub_1BB4A4184(v3);
  swift_bridgeObjectRelease();
  v32 = v4;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v32;
  v7 = MEMORY[0x1E0DEE9D8];
  v32 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(v6 + 16);
  if (v22)
  {
    v20 = v6;
    v21 = v6 + 32;
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = (uint64_t)v28;
    do
    {
      v26 = v8;
      v11 = (_QWORD *)(v21 + (v8 << 6));
      v12 = v11[1];
      v13 = v11[4];
      v14 = v11[6];
      v27 = v11[7];
      v31 = v7;
      v15 = *(_QWORD *)(v13 + 16);
      if (v15)
      {
        v16 = v13;
        v17 = v13 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
        v24 = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23 = v16;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = *(_QWORD *)(v25 + 72);
        v29 = v18;
        v30 = v14;
        do
        {
          sub_1BA4C2DD8(v17, v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 4)
          {
            MEMORY[0x1BCCE36AC]();
            if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
            v9 = (uint64_t)v28;
            v18 = v29;
          }
          else
          {
            sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v17 += v18;
          --v15;
        }
        while (v15);
        v10 = v31;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10 = MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v8 = v26 + 1;
      sub_1BA4AF900(v10);
      v7 = MEMORY[0x1E0DEE9D8];
    }
    while (v8 != v22);
    swift_bridgeObjectRelease_n();
    return v32;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.Resolved.puzzleTypes.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v25 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v0[3];
  v4 = v0[7];
  v3 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v5 = sub_1BB4A4184(v3);
  swift_bridgeObjectRelease();
  v32 = v4;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v32;
  v7 = MEMORY[0x1E0DEE9D8];
  v32 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(v6 + 16);
  if (v22)
  {
    v20 = v6;
    v21 = v6 + 32;
    swift_bridgeObjectRetain();
    v8 = 0;
    v9 = (uint64_t)v28;
    do
    {
      v26 = v8;
      v11 = (_QWORD *)(v21 + (v8 << 6));
      v12 = v11[1];
      v13 = v11[4];
      v14 = v11[6];
      v27 = v11[7];
      v31 = v7;
      v15 = *(_QWORD *)(v13 + 16);
      if (v15)
      {
        v16 = v13;
        v17 = v13 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
        v24 = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23 = v16;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = *(_QWORD *)(v25 + 72);
        v29 = v18;
        v30 = v14;
        do
        {
          sub_1BA4C2DD8(v17, v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 5)
          {
            MEMORY[0x1BCCE36AC]();
            if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1BB872E44();
            sub_1BB872E8C();
            sub_1BB872DCC();
            v9 = (uint64_t)v28;
            v18 = v29;
          }
          else
          {
            sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          v17 += v18;
          --v15;
        }
        while (v15);
        v10 = v31;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10 = MEMORY[0x1E0DEE9D8];
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v8 = v26 + 1;
      sub_1BB387084(v10);
      v7 = MEMORY[0x1E0DEE9D8];
    }
    while (v8 != v22);
    swift_bridgeObjectRelease_n();
    return v32;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.Resolved.puzzleStatistics.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v43 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8CAA04(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v36 - v8;
  v51 = type metadata accessor for PuzzleStatistic();
  v10 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v50 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v48 = v0[1];
  v49 = (uint64_t)&v36 - v13;
  v14 = v0[3];
  v46 = v0[4];
  v47 = v14;
  v15 = v0[6];
  v52 = v0[5];
  v16 = v0[8];
  v44 = v0[7];
  v45 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v18 = sub_1BB4A4184(v16);
  swift_bridgeObjectRelease();
  v53 = v17;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = v53;
  v53 = MEMORY[0x1E0DEE9D8];
  v38 = *(_QWORD *)(v19 + 16);
  if (v38)
  {
    v36 = v19;
    v37 = v19 + 32;
    swift_bridgeObjectRetain();
    v20 = 0;
    v48 = v1;
    do
    {
      v21 = (_QWORD *)(v37 + (v20 << 6));
      v22 = v21[4];
      v23 = *(_QWORD *)(v22 + 16);
      if (v23)
      {
        v42 = v20;
        v24 = v21[1];
        v25 = v21[2];
        v26 = v21[3];
        v46 = v21[5];
        v47 = v26;
        v27 = v21[6];
        v44 = v21[7];
        v45 = v27;
        v28 = v22 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
        v40 = v24;
        swift_bridgeObjectRetain();
        v39 = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v41 = v22;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v52 = *(_QWORD *)(v43 + 72);
        v29 = MEMORY[0x1E0DEE9D8];
        do
        {
          sub_1BA4C2DD8(v28, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() == 6)
          {
            sub_1BA5193C4((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
            v30 = 0;
          }
          else
          {
            sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
            v30 = 1;
          }
          v31 = v51;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, v30, 1, v51);
          sub_1BA5193C4((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA8CAA04);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v31) == 1)
          {
            sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA8CAA04);
          }
          else
          {
            v32 = v49;
            sub_1BA5193C4((uint64_t)v9, v49, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
            sub_1BA5193C4(v32, v50, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v29 = sub_1BB38D310(0, *(_QWORD *)(v29 + 16) + 1, 1, v29);
            v34 = *(_QWORD *)(v29 + 16);
            v33 = *(_QWORD *)(v29 + 24);
            if (v34 >= v33 >> 1)
              v29 = sub_1BB38D310(v33 > 1, v34 + 1, 1, v29);
            *(_QWORD *)(v29 + 16) = v34 + 1;
            sub_1BA5193C4(v50, v29+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v34, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
          }
          v28 += v52;
          --v23;
        }
        while (v23);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v20 = v42;
      }
      else
      {
        v29 = MEMORY[0x1E0DEE9D8];
      }
      ++v20;
      sub_1BB387090(v29);
    }
    while (v20 != v38);
    swift_bridgeObjectRelease_n();
    return v53;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.Resolved.customItems.getter()
{
  return sub_1BB2E9DE4(sub_1BB4A47D0);
}

uint64_t sub_1BB2E9DE4(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v4 = sub_1BB4A4184(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1(v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t FormatContentSubgroup.Resolved.placeholders.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;

  v1 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v30 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v40 = v0[3];
  v41 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[7];
  v3 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v5 = sub_1BB4A4184(v3);
  swift_bridgeObjectRelease();
  v42 = v4;
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = v42;
  v42 = MEMORY[0x1E0DEE9D8];
  v32 = *(_QWORD *)(v6 + 16);
  if (v32)
  {
    v31 = v6 + 32;
    v29[1] = v6;
    swift_bridgeObjectRetain();
    v7 = 0;
    do
    {
      v8 = (_QWORD *)(v31 + (v7 << 6));
      v9 = v8[4];
      v10 = *(_QWORD *)(v9 + 16);
      if (v10)
      {
        v39 = v7;
        v11 = v8[1];
        v12 = v8[2];
        v13 = v8[3];
        v15 = v8[5];
        v14 = v8[6];
        v40 = v8[7];
        v16 = v30;
        v17 = v9 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
        v37 = v11;
        swift_bridgeObjectRetain();
        v36 = v12;
        swift_bridgeObjectRetain();
        v35 = v13;
        swift_bridgeObjectRetain();
        v38 = v9;
        swift_bridgeObjectRetain_n();
        v34 = v15;
        swift_bridgeObjectRetain();
        v33 = v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = *(_QWORD *)(v16 + 72);
        v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v20 = (uint64_t)v41;
        do
        {
          sub_1BA4C2DD8(v17, v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() <= 7)
          {
            sub_1BA4A2E80(v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          else
          {
            v21 = v1;
            v23 = *(_QWORD *)v20;
            v22 = *(_QWORD *)(v20 + 8);
            v24 = *(_BYTE *)(v20 + 16);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v19 = sub_1BB38F5F4(0, v19[2] + 1, 1, v19);
            v26 = v19[2];
            v25 = v19[3];
            if (v26 >= v25 >> 1)
              v19 = sub_1BB38F5F4((_QWORD *)(v25 > 1), v26 + 1, 1, v19);
            v19[2] = v26 + 1;
            v27 = &v19[3 * v26];
            v27[4] = v23;
            v27[5] = v22;
            *((_BYTE *)v27 + 48) = v24;
            v1 = v21;
            v20 = (uint64_t)v41;
          }
          v17 += v18;
          --v10;
        }
        while (v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v7 = v39;
      }
      else
      {
        v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      ++v7;
      sub_1BA6C5F88((uint64_t)v19);
    }
    while (v7 != v32);
    swift_bridgeObjectRelease_n();
    return v42;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.Resolved.itemAuxiliaries.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v3 = sub_1BB4A4184(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BA6D74C4(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v8 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = v1 + 48;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA604764(v7);
      v5 += 64;
      --v4;
    }
    while (v4);
    swift_release();
    swift_bridgeObjectRelease_n();
    return v8;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
}

uint64_t FormatContentSubgroup.Resolved.compilerOptionIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BAB483C4(v0);
  swift_bridgeObjectRelease();
  v2 = sub_1BA6E43EC(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BB2EA528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2EA8F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2EA54C()
{
  sub_1BA7E5FF0();
  return sub_1BB874710();
}

uint64_t sub_1BB2EA574()
{
  sub_1BA7E5FF0();
  return sub_1BB87471C();
}

uint64_t sub_1BB2EA59C()
{
  return MEMORY[0x1E0DEA978];
}

_QWORD *_s8ResolvedVwcp_1(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s8ResolvedVwca_1(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8ResolvedVwta_1(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8ResolvedV10CodingKeysOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BB2EA828 + 4 * byte_1BB906736[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BB2EA85C + 4 * byte_1BB906731[v4]))();
}

uint64_t sub_1BB2EA85C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2EA864(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2EA86CLL);
  return result;
}

uint64_t sub_1BB2EA878(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2EA880);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BB2EA884(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2EA88C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8ResolvedV10CodingKeysOMa_1()
{
  return &_s8ResolvedV10CodingKeysON_1;
}

unint64_t sub_1BB2EA8AC()
{
  unint64_t result;

  result = qword_1EF2C0F00;
  if (!qword_1EF2C0F00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90689C, &_s8ResolvedV10CodingKeysON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2C0F00);
  }
  return result;
}

uint64_t sub_1BB2EA8F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB984FD0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74756F79616CLL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73746E65746E6F63 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x737265746C6966 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t FormatVideoData.Assets.videoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FormatVideoData.Assets.stillImageURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FormatVideoData.Assets(0);
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
}

id FormatVideoData.Properties.videoGravity.getter()
{
  id *v0;

  return *v0;
}

uint64_t FormatVideoData.Properties.isLooping.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FormatVideoData.Properties.playback.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t FormatVideoData.Properties.isPreventingDisplaySleep.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t FormatVideoData.Properties.isMuted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

id FormatVideoData.Properties.imageGravity.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t FormatVideoData.Properties.endAction.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t FormatVideoData.assets.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA4C2DD8(v1, a1, type metadata accessor for FormatVideoData.Assets);
}

id FormatVideoData.properties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v13;

  v3 = v1 + *(int *)(type metadata accessor for FormatVideoData(0) + 20);
  v4 = *(void **)v3;
  v5 = *(_BYTE *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_BYTE *)(v3 + 24);
  v8 = *(_BYTE *)(v3 + 25);
  v9 = *(void **)(v3 + 32);
  v10 = *(_QWORD *)(v3 + 40);
  v13 = v9;
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  v11 = v4;
  return v13;
}

char *initializeBufferWithCopyOfBuffer for FormatVideoData(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C67C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      sub_1BA6EF3B0();
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = *(int *)(a3 + 20);
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *(void **)v17;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    *((_WORD *)v16 + 12) = *((_WORD *)v17 + 12);
    v20 = (void *)*((_QWORD *)v17 + 4);
    v19 = *((_QWORD *)v17 + 5);
    *((_QWORD *)v16 + 4) = v20;
    *((_QWORD *)v16 + 5) = v19;
    v21 = v18;
    v22 = v20;
  }
  return a1;
}

void destroy for FormatVideoData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  id *v8;

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  v8 = (id *)(a1 + *(int *)(a2 + 20));

}

char *initializeWithCopy for FormatVideoData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_1BA6EF3B0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(void **)v15;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  *((_WORD *)v14 + 12) = *((_WORD *)v15 + 12);
  v18 = (void *)*((_QWORD *)v15 + 4);
  v17 = *((_QWORD *)v15 + 5);
  *((_QWORD *)v14 + 4) = v18;
  *((_QWORD *)v14 + 5) = v17;
  v19 = v16;
  v20 = v18;
  return a1;
}

char *assignWithCopy for FormatVideoData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BA6EF3B0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(void **)v18;
  v20 = *(void **)v17;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v21 = v19;

  v17[8] = v18[8];
  *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
  v17[24] = v18[24];
  v17[25] = v18[25];
  v22 = (void *)*((_QWORD *)v18 + 4);
  v23 = (void *)*((_QWORD *)v17 + 4);
  *((_QWORD *)v17 + 4) = v22;
  v24 = v22;

  *((_QWORD *)v17 + 5) = *((_QWORD *)v18 + 5);
  return a1;
}

char *initializeWithTake for FormatVideoData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_1BA6EF3B0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
  return a1;
}

char *assignWithTake for FormatVideoData(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void *v19;
  void *v20;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BA6EF3B0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(void **)&a1[v16];
  *(_QWORD *)&a1[v16] = *(_QWORD *)v18;

  v17[8] = v18[8];
  *((_QWORD *)v17 + 2) = *((_QWORD *)v18 + 2);
  v17[24] = v18[24];
  v17[25] = v18[25];
  v20 = (void *)*((_QWORD *)v17 + 4);
  *((_QWORD *)v17 + 4) = *((_QWORD *)v18 + 4);

  *((_QWORD *)v17 + 5) = *((_QWORD *)v18 + 5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2EB464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FormatVideoData.Assets(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatVideoData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2EB4EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatVideoData.Assets(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatVideoData.Assets(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C67C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      sub_1BA6EF3B0();
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for FormatVideoData.Assets(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  return result;
}

char *initializeWithCopy for FormatVideoData.Assets(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    sub_1BA6EF3B0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for FormatVideoData.Assets(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BA6EF3B0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *initializeWithTake for FormatVideoData.Assets(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    sub_1BA6EF3B0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for FormatVideoData.Assets(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(&a1[v9], 1, v6);
  v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BA6EF3B0();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoData.Assets()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2EBAB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1BA6EF3B0();
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FormatVideoData.Assets()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2EBB30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1BA6EF3B0();
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void destroy for FormatVideoData.Properties(id *a1)
{

}

uint64_t initializeWithCopy for FormatVideoData.Properties(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v5 = *(void **)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v4;
  v6 = v3;
  v7 = v5;
  return a1;
}

uint64_t assignWithCopy for FormatVideoData.Properties(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FormatVideoData.Properties(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v5 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FormatVideoData.Properties()
{
  return &type metadata for FormatVideoData.Properties;
}

_QWORD *sub_1BB2EBD1C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  char v51;
  uint64_t (*v52)(_QWORD);
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  id v64;
  uint64_t (*v65)(_QWORD);
  unsigned int v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  _QWORD *v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t inited;
  char *v85;
  uint64_t v86;
  _OWORD v87[2];
  uint64_t v88;

  v75 = type metadata accessor for FormatVideoData.Assets(0);
  MEMORY[0x1E0C80A78](v75);
  v3 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB24F2F0(0);
  MEMORY[0x1E0C80A78](v4);
  v85 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v81 = (uint64_t)&v74 - v7;
  MEMORY[0x1E0C80A78](v8);
  v80 = (uint64_t)&v74 - v9;
  MEMORY[0x1E0C80A78](v10);
  v79 = (uint64_t)&v74 - v11;
  MEMORY[0x1E0C80A78](v12);
  v78 = (uint64_t)&v74 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (uint64_t)&v74 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v74 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v74 - v20;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v74 - v23;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v25);
  v76 = (uint64_t)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v74 - v28;
  v30 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v30);
  sub_1BA8C88C8(0);
  v83 = v31;
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(_QWORD *)(v32 + 72);
  v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BB887E50;
  v82 = v35;
  v36 = (_QWORD *)(v35 + v34);
  v86 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
  v37 = type metadata accessor for FormatVideoData(0);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48);
  if (v38(v24, 1, v37) == 1)
  {
    sub_1BA4A2E80((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
    v39 = sub_1BB86C67C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v29, 1, 1, v39);
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v24, (uint64_t)v3, type metadata accessor for FormatVideoData.Assets);
    sub_1BA4A2E80((uint64_t)v24, type metadata accessor for FormatVideoData);
    v40 = sub_1BB86C67C();
    v41 = *(_QWORD *)(v40 - 8);
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v29, v3, v40);
    sub_1BA4A2E80((uint64_t)v3, type metadata accessor for FormatVideoData.Assets);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v29, 0, 1, v40);
  }
  sub_1BAAF770C(5001813, 0xE300000000000000, (uint64_t)v29, v36);
  v42 = type metadata accessor for FormatInspectionItem(0);
  v43 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
  v43(v36, 0, 1, v42);
  sub_1BA4C2DD8(v86, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
  if (v38(v21, 1, v37) == 1)
  {
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
    v44 = sub_1BB86C67C();
    v45 = v76;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v76, 1, 1, v44);
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v3, type metadata accessor for FormatVideoData.Assets);
    sub_1BA4A2E80((uint64_t)v21, type metadata accessor for FormatVideoData);
    v45 = v76;
    sub_1BA4C2DD8((uint64_t)&v3[*(int *)(v75 + 20)], v76, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    sub_1BA4A2E80((uint64_t)v3, type metadata accessor for FormatVideoData.Assets);
  }
  sub_1BAAF770C(0x6D492D6C6C697453, 0xEF4C525520656761, v45, (_QWORD *)((char *)v36 + v33));
  v43((_QWORD *)((char *)v36 + v33), 0, 1, v42);
  v46 = v86;
  sub_1BA4C2DD8(v86, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
  if (v38(v18, 1, v37) == 1)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
    v47 = 0;
  }
  else
  {
    v47 = *(id *)&v18[*(int *)(v37 + 20)];
    sub_1BA4A2E80((uint64_t)v18, type metadata accessor for FormatVideoData);
  }
  sub_1BAAFF858(0x79746976617247, 0xE700000000000000, v47, (_QWORD *)((char *)v36 + 2 * v33));
  v43((_QWORD *)((char *)v36 + 2 * v33), 0, 1, v42);
  v48 = v77;
  sub_1BA4C2DD8(v46, v77, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
  v49 = v38((char *)v48, 1, v37);
  v50 = (uint64_t)v85;
  if (v49 == 1)
  {
    sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
    v51 = 2;
  }
  else
  {
    v51 = *(_BYTE *)(v48 + *(int *)(v37 + 20) + 8);
    sub_1BA4A2E80(v48, type metadata accessor for FormatVideoData);
  }
  sub_1BAAF6B38(0x6E69706F6F4C7369, 0xE900000000000067, v51, (_QWORD *)((char *)v36 + 3 * v33));
  v43((_QWORD *)((char *)v36 + 3 * v33), 0, 1, v42);
  v52 = (uint64_t (*)(_QWORD))sub_1BB24F2F0;
  v53 = v78;
  sub_1BA4C2DD8(v46, v78, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
  v54 = v38((char *)v53, 1, v37);
  if (v54 == 1)
  {
    v55 = 0;
  }
  else
  {
    v55 = *(_QWORD *)(v53 + *(int *)(v37 + 20) + 16);
    v52 = type metadata accessor for FormatVideoData;
  }
  v56 = v53;
  v57 = v54 == 1;
  sub_1BA4A2E80(v56, v52);
  sub_1BAAFF864(0x6B63616279616C50, 0xE800000000000000, v55, v57, (_QWORD *)((char *)v36 + 4 * v33));
  v43((_QWORD *)((char *)v36 + 4 * v33), 0, 1, v42);
  v58 = v86;
  v59 = v79;
  sub_1BA4C2DD8(v86, v79, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
  if (v38((char *)v59, 1, v37) == 1)
  {
    sub_1BA4A2E80(v59, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
    v60 = 2;
  }
  else
  {
    v60 = *(_BYTE *)(v59 + *(int *)(v37 + 20) + 24);
    sub_1BA4A2E80(v59, type metadata accessor for FormatVideoData);
  }
  sub_1BAAF6B38(0xD000000000000018, 0x80000001BB984FF0, v60, (_QWORD *)((char *)v36 + 5 * v33));
  v43((_QWORD *)((char *)v36 + 5 * v33), 0, 1, v42);
  v61 = v80;
  sub_1BA4C2DD8(v58, v80, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
  if (v38((char *)v61, 1, v37) == 1)
  {
    sub_1BA4A2E80(v61, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
    v62 = 2;
  }
  else
  {
    v62 = *(_BYTE *)(v61 + *(int *)(v37 + 20) + 25);
    sub_1BA4A2E80(v61, type metadata accessor for FormatVideoData);
  }
  sub_1BAAF6B38(0x646574754D7369, 0xE700000000000000, v62, (_QWORD *)((char *)v36 + 6 * v33));
  v43((_QWORD *)((char *)v36 + 6 * v33), 0, 1, v42);
  v63 = v81;
  sub_1BA4C2DD8(v58, v81, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
  if (v38((char *)v63, 1, v37) == 1)
  {
    sub_1BA4A2E80(v63, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
    v64 = 0;
  }
  else
  {
    v64 = *(id *)(v63 + *(int *)(v37 + 20) + 32);
    sub_1BA4A2E80(v63, type metadata accessor for FormatVideoData);
  }
  sub_1BAAFF870(0xD000000000000013, 0x80000001BB985010, v64, (_QWORD *)((char *)&v36[v33] - v33));
  v43((_QWORD *)((char *)&v36[v33] - v33), 0, 1, v42);
  v65 = (uint64_t (*)(_QWORD))sub_1BB24F2F0;
  sub_1BA4C2DD8(v58, v50, (uint64_t (*)(_QWORD))sub_1BB24F2F0);
  v66 = v38((char *)v50, 1, v37);
  if (v66 == 1)
  {
    v67 = 0;
  }
  else
  {
    v67 = *(_QWORD *)(v50 + *(int *)(v37 + 20) + 40);
    v65 = type metadata accessor for FormatVideoData;
  }
  v68 = v66 == 1;
  sub_1BA4A2E80(v50, v65);
  sub_1BAAFFBB0(0x6974634120646E45, 0xEA00000000006E6FLL, v67, v68, &v36[v33]);
  v43(&v36[v33], 0, 1, v42);
  sub_1BAF89090(0x6F65646956, 0xE500000000000000, 0, 0, v82, v87);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v69 = inited;
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v69 + 64) = &off_1E72D2F60;
  v70 = swift_allocObject();
  *(_QWORD *)(v69 + 32) = v70;
  *(_QWORD *)(v70 + 48) = v88;
  v71 = v87[1];
  *(_OWORD *)(v70 + 16) = v87[0];
  *(_OWORD *)(v70 + 32) = v71;
  v72 = sub_1BB6DF010(v69);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v72;
}

uint64_t sub_1BB2EC760()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void __swiftcall FeedGroupEmitterSettings.init(fastTimeout:discardTimeout:onscreenDiscardTimeout:isDeferredUntilOnscreen:)(NewsFeed::FeedGroupEmitterSettings *__return_ptr retstr, Swift::Double_optional fastTimeout, Swift::Double_optional discardTimeout, Swift::Double_optional onscreenDiscardTimeout, Swift::Bool isDeferredUntilOnscreen)
{
  Swift::Double v5;
  char v6;
  Swift::Bool v7;

  retstr->fastTimeout.value = *(Swift::Double *)&fastTimeout.is_nil;
  retstr->fastTimeout.is_nil = discardTimeout.is_nil;
  retstr->discardTimeout.value = *(Swift::Double *)&onscreenDiscardTimeout.is_nil;
  retstr->discardTimeout.is_nil = isDeferredUntilOnscreen;
  retstr->onscreenDiscardTimeout.value = v5;
  retstr->onscreenDiscardTimeout.is_nil = v6 & 1;
  retstr->isDeferredUntilOnscreen = v7;
}

void sub_1BB2EC7C4(_QWORD *a1@<X8>)
{
  FeedGroupEmitterType.groupKnobs.getter(a1);
}

void FeedGroupEmitterType.groupKnobs.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEA9A0];
  a1[3] = MEMORY[0x1E0DEA968];
  a1[4] = v1;
  a1[5] = MEMORY[0x1E0DEA970];
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

void sub_1BB2EC808(_BYTE *a1@<X8>)
{
  FeedGroupEmitterType.repooling.getter(a1);
}

void FeedGroupEmitterType.repooling.getter(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t FeedGroupEmitterType.canExpand.getter()
{
  return 0;
}

void sub_1BB2EC830(uint64_t a1@<X8>)
{
  FeedGroupEmitterType.emitSettings(with:)(a1);
}

uint64_t FeedGroupEmitterInitialCursorContext.feedContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;

  v2 = *(void **)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 17);
  v5 = *(_BYTE *)(v1 + 18);
  v6 = *(_BYTE *)(v1 + 19);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  v11 = *(_BYTE *)(v1 + 56);
  v13 = *(void **)(v1 + 64);
  v12 = *(_QWORD *)(v1 + 72);
  v14 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4;
  *(_BYTE *)(a1 + 10) = v5;
  *(_BYTE *)(a1 + 11) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v14;
  v15 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v9, v10);
  v16 = v13;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2EC8F4()
{
  return swift_deallocObject();
}

uint64_t FeedGroupEmitterPriority.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C616D726F6ELL;
  else
    return 7827308;
}

void sub_1BB2EC934(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7827308;
  if (*v1)
    v2 = 0x6C616D726F6ELL;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB2EC968()
{
  sub_1BA4D8D14();
  return sub_1BB872D0C();
}

uint64_t sub_1BB2EC9B4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2ECA28()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t FeedGroupEmitterSettings.fastTimeout.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FeedGroupEmitterSettings.discardTimeout.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t FeedGroupEmitterSettings.onscreenDiscardTimeout.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t FeedGroupEmitterSettings.isDeferredUntilOnscreen.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 41);
}

uint64_t *FeedGroupEmitter.__allocating_init<A>(emitter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;

  swift_allocObject();
  v6 = sub_1BA56ED10(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v6;
}

uint64_t sub_1BB2ECB10()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t sub_1BB2ECB30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BB2ECB50()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))() & 1;
}

uint64_t sub_1BB2ECB74()
{
  return sub_1BA4F5ADC();
}

uint64_t sub_1BB2ECB94()
{
  return sub_1BB2ECB10();
}

uint64_t sub_1BB2ECBB4()
{
  return sub_1BA5F3754();
}

uint64_t sub_1BB2ECBD4()
{
  return sub_1BB2ECB30();
}

uint64_t sub_1BB2ECBF4()
{
  return sub_1BB2ECB50() & 1;
}

uint64_t sub_1BB2ECC18()
{
  return sub_1BA653BE4();
}

uint64_t sub_1BB2ECC38()
{
  return sub_1BA5F39AC();
}

uint64_t sub_1BB2ECC58()
{
  return sub_1BA5F3734();
}

uint64_t sub_1BB2ECC78()
{
  return sub_1BA4A3CD4();
}

uint64_t static FeedGroupEmitter.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v3 = (*(uint64_t (**)(void))(a1 + 16))();
  v5 = v4;
  if (v3 == (*(uint64_t (**)(void))(a2 + 16))() && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BB2ECD20(uint64_t *a1, uint64_t *a2)
{
  return static FeedGroupEmitter.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t dispatch thunk of FeedGroupEmitterType.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedGroupEmitterType.groupConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedGroupEmitterType.groupKnobs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeedGroupEmitterType.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FeedGroupEmitterType.repooling.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedGroupEmitterType.canExpand.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeedGroupEmitterType.initialCursor(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of FeedGroupEmitterType.emitSettings(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of FeedGroupEmitterType.emitRules(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of FeedGroupEmitterType.emitNextGroup(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t *sub_1BB2ECD90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  unint64_t v15;
  id v16;
  void *v17;
  void (*v18)(unint64_t, unint64_t, uint64_t);
  id v19;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 88) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v12 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
    v13 = ((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8;
    v14 = *(void **)v13;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
    *(_BYTE *)(v12 + 9) = *(_BYTE *)(v13 + 9);
    *(_BYTE *)(v12 + 10) = *(_BYTE *)(v13 + 10);
    *(_BYTE *)(v12 + 11) = *(_BYTE *)(v13 + 11);
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
    v15 = *(_QWORD *)(v13 + 40) - 1;
    swift_retain();
    v16 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15 >= 3)
    {
      *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
      *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
    }
    *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
    v17 = *(void **)(v13 + 56);
    *(_QWORD *)(v12 + 56) = v17;
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 72) = *(_QWORD *)(v13 + 72);
    v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    v19 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18((v12 + v6 + 80) & ~v6, (v13 + v6 + 80) & ~v6, v4);
  }
  return a1;
}

_QWORD *sub_1BB2ECF34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;
  unint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;

  v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  v8 = *(void **)(v5 & 0xFFFFFFFFFFFFFFF8);
  v9 = *(void **)v6;
  *(_QWORD *)v6 = v8;
  v10 = v8;

  *(_BYTE *)(v6 + 8) = *(_BYTE *)(v7 + 8);
  *(_BYTE *)(v6 + 9) = *(_BYTE *)(v7 + 9);
  *(_BYTE *)(v6 + 10) = *(_BYTE *)(v7 + 10);
  *(_BYTE *)(v6 + 11) = *(_BYTE *)(v7 + 11);
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 24) = *(_QWORD *)(v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v7 + 40) - 1;
  if ((unint64_t)(*(_QWORD *)(v6 + 40) - 1) >= 3)
  {
    if (v11 >= 3)
    {
      *(_QWORD *)(v6 + 32) = *(_QWORD *)(v7 + 32);
      *(_QWORD *)(v6 + 40) = *(_QWORD *)(v7 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BB1E4E14(v6 + 32);
    goto LABEL_6;
  }
  if (v11 < 3)
  {
LABEL_6:
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(v7 + 32);
    goto LABEL_8;
  }
  *(_QWORD *)(v6 + 32) = *(_QWORD *)(v7 + 32);
  *(_QWORD *)(v6 + 40) = *(_QWORD *)(v7 + 40);
  swift_bridgeObjectRetain();
LABEL_8:
  *(_BYTE *)(v6 + 48) = *(_BYTE *)(v7 + 48);
  v12 = *(void **)(v6 + 56);
  v13 = *(void **)(v7 + 56);
  *(_QWORD *)(v6 + 56) = v13;
  v14 = v13;

  *(_QWORD *)(v6 + 64) = *(_QWORD *)(v7 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v15 + 24))((v6 + *(unsigned __int8 *)(v15 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80), (v7 + *(unsigned __int8 *)(v15 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  return a1;
}

_QWORD *sub_1BB2ED0EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = v5[4];
  v8 = v5[1];
  v7 = v5[2];
  v4[3] = v5[3];
  v4[4] = v6;
  v4[1] = v8;
  v4[2] = v7;
  *v4 = *v5;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v9 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v9 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_QWORD *sub_1BB2ED160(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  v6 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = v5 & 0xFFFFFFFFFFFFFFF8;
  v8 = *(void **)v6;
  *(_QWORD *)v6 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);

  *(_BYTE *)(v6 + 8) = *(_BYTE *)((v5 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_BYTE *)(v6 + 9) = *(_BYTE *)((v5 & 0xFFFFFFFFFFFFFFF8) + 9);
  *(_BYTE *)(v6 + 10) = *(_BYTE *)((v5 & 0xFFFFFFFFFFFFFFF8) + 10);
  *(_BYTE *)(v6 + 11) = *(_BYTE *)((v5 & 0xFFFFFFFFFFFFFFF8) + 11);
  *(_QWORD *)(v6 + 16) = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 24) = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + 24);
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v6 + 40) - 1) >= 3)
  {
    if ((unint64_t)(*(_QWORD *)(v7 + 40) - 1) >= 3)
    {
      *(_QWORD *)(v6 + 32) = *(_QWORD *)(v7 + 32);
      *(_QWORD *)(v6 + 40) = *(_QWORD *)(v7 + 40);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BB1E4E14(v6 + 32);
  }
  *(_OWORD *)(v6 + 32) = *(_OWORD *)((v5 & 0xFFFFFFFFFFFFFFF8) + 32);
LABEL_6:
  *(_BYTE *)(v6 + 48) = *(_BYTE *)(v7 + 48);
  v9 = *(void **)(v6 + 56);
  *(_QWORD *)(v6 + 56) = *(_QWORD *)(v7 + 56);

  *(_QWORD *)(v6 + 64) = *(_QWORD *)(v7 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 + 72);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))((v6 + *(unsigned __int8 *)(v10 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (v7 + *(unsigned __int8 *)(v10 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_1BB2ED2B8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 88) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + v7
                                                                      + 80) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB2ED38C + 4 * byte_1BB9069B0[(v9 - 1)]))();
}

void sub_1BB2ED404(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for FeedGroupEmitterSettings(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 41);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FeedGroupEmitterSettings()
{
  return &type metadata for FeedGroupEmitterSettings;
}

uint64_t method lookup function for FeedGroupEmitter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedGroupEmitter.__allocating_init<A>(emitter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of FeedGroupEmitter.identifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of FeedGroupEmitter.name.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of FeedGroupEmitter.shortDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of FeedGroupEmitter.groupConfig.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of FeedGroupEmitter.groupKnobs.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of FeedGroupEmitter.priority.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of FeedGroupEmitter.repooling.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of FeedGroupEmitter.canExpand.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of FeedGroupEmitter.initialCursor(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of FeedGroupEmitter.emitSettings(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of FeedGroupEmitter.emitRules(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of FeedGroupEmitter.emitNextGroup(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t sub_1BB2ED72C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 56))();
}

uint64_t sub_1BB2ED76C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 72))();
}

uint64_t sub_1BB2ED7AC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 32) + 80))() & 1;
}

unint64_t sub_1BB2ED7F8()
{
  unint64_t result;

  result = qword_1ED3B1DF8;
  if (!qword_1ED3B1DF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitterError, &type metadata for FeedGroupEmitterError);
    atomic_store(result, (unint64_t *)&qword_1ED3B1DF8);
  }
  return result;
}

uint64_t FormatFontWidth.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2ED878
                                                            + 4 * asc_1BB906D04[*v0]))(0x6D6F436172746C75, 0xEF64657373657270);
}

uint64_t sub_1BB2ED878(uint64_t a1)
{
  return a1 + 3056;
}

uint64_t sub_1BB2ED880()
{
  return 0x73736572706D6F63;
}

uint64_t sub_1BB2ED89C()
{
  return 0x6E6F436172747865;
}

uint64_t sub_1BB2ED8C0()
{
  return 0x65736E65646E6F63;
}

uint64_t sub_1BB2ED8DC()
{
  return 0x646E6F43696D6573;
}

uint64_t sub_1BB2ED900()
{
  return 0x647261646E617473;
}

uint64_t sub_1BB2ED918()
{
  return 0x61707845696D6573;
}

uint64_t sub_1BB2ED938()
{
  return 0x6465646E61707865;
}

uint64_t sub_1BB2ED950()
{
  return 0x7078456172747865;
}

void sub_1BB2ED974(char *a1)
{
  sub_1BB803F88(*a1);
}

unint64_t sub_1BB2ED984()
{
  unint64_t result;

  result = qword_1EF2C0F80;
  if (!qword_1EF2C0F80)
  {
    result = MEMORY[0x1BCCE5B24]("ሟ+X{\v", &type metadata for FormatFontWidth);
    atomic_store(result, (unint64_t *)&qword_1EF2C0F80);
  }
  return result;
}

uint64_t sub_1BB2ED9C8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D40C0((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB2EDA0C(uint64_t a1)
{
  char *v1;

  sub_1BA9D40C0(a1, *v1);
}

uint64_t sub_1BB2EDA14()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D40C0((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BB2EDA54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatFontWidth.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1BB2EDA78(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB2EDAA4();
  result = sub_1BA4A05E4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB2EDAA4()
{
  unint64_t result;

  result = qword_1EF2C0F88;
  if (!qword_1EF2C0F88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWidth, &type metadata for FormatFontWidth);
    atomic_store(result, (unint64_t *)&qword_1EF2C0F88);
  }
  return result;
}

unint64_t sub_1BB2EDAE8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2EDB0C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2EDB0C()
{
  unint64_t result;

  result = qword_1EF2C0F90;
  if (!qword_1EF2C0F90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWidth, &type metadata for FormatFontWidth);
    atomic_store(result, (unint64_t *)&qword_1EF2C0F90);
  }
  return result;
}

unint64_t sub_1BB2EDB50(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4E6A04();
  a1[2] = sub_1BAEF361C();
  result = sub_1BB2ED984();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB2EDB84(_QWORD *a1)
{
  return FormatFontWidth.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatFontWidth()
{
  return &type metadata for FormatFontWidth;
}

uint64_t FormatGroupNodeDataLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeDataLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeDataLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeDataLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

double FormatGroupNodeDataLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

uint64_t FormatGroupNodeDataLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 104);
  return swift_retain();
}

uint64_t FormatGroupNodeDataLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

unint64_t FormatGroupNodeDataLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatGroupNodeDataLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t FormatGroupNodeDataLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatGroupNodeDataLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 152);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 144);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatGroupNodeDataLayoutAttributes.maskLayoutAttributes.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1[20];
  v3 = v1[21];
  v4 = v1[22];
  v5 = v1[23];
  v6 = v1[24];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_1BAB48054(v2, v3, v4, v5);
}

uint64_t FormatGroupNodeDataLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatGroupNodeDataLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeDataLayoutAttributes.__allocating_init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17;

  v17 = swift_allocObject();
  FormatGroupNodeDataLayoutAttributes.init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  return v17;
}

uint64_t FormatGroupNodeDataLayoutAttributes.init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, char a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;

  v10 = *a2;
  v11 = *a4;
  v12 = *a7;
  v13 = *((_BYTE *)a7 + 8);
  v14 = *(_QWORD *)(a8 + 32);
  v15 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v9 + 24) = v15;
  v16 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(v9 + 40) = v16;
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(v9 + 56) = v17;
  *(_QWORD *)(v9 + 64) = a1;
  v18 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v9 + 88) = v18;
  *(_QWORD *)(v9 + 104) = v10;
  *(_QWORD *)(v9 + 112) = a3;
  *(_QWORD *)(v9 + 120) = v11;
  *(_BYTE *)(v9 + 128) = a5;
  *(_QWORD *)(v9 + 136) = a6;
  *(_QWORD *)(v9 + 144) = v12;
  *(_BYTE *)(v9 + 152) = v13;
  v19 = *(_OWORD *)(a8 + 16);
  *(_OWORD *)(v9 + 160) = *(_OWORD *)a8;
  *(_OWORD *)(v9 + 176) = v19;
  *(_QWORD *)(v9 + 192) = v14;
  *(_QWORD *)(v9 + 200) = a9;
  *(_QWORD *)(v9 + 208) = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t FormatGroupNodeDataLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 120));
  swift_release();
  sub_1BAB480B0(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatGroupNodeDataLayoutAttributes.__deallocating_deinit()
{
  FormatGroupNodeDataLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB2EDE88()
{
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatGroupNodeDataLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatGroupNodeDataLayoutAttributes.__allocating_init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1BB2EDEB0(char *a1, char *a2)
{
  return sub_1BB802D00(*a1, *a2);
}

uint64_t sub_1BB2EDEBC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2EDF28()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2EDF68()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2EDFD0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB2EE02C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x6567616D69;
  if (*v1)
    v2 = 0x6F65646976;
  *a1 = v2;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1BB2EE05C()
{
  sub_1BB2F35D0();
  return sub_1BB872D60();
}

uint64_t sub_1BB2EE0B8()
{
  sub_1BB2F35D0();
  return sub_1BB872D0C();
}

uint64_t sub_1BB2EE104()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73746365666665;
  if (*v0 != 1)
    v1 = 0x6165724165666173;
  if (*v0)
    return v1;
  else
    return 0x6564496567616D69;
}

uint64_t sub_1BB2EE16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2F38DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2EE190()
{
  sub_1BB2F2120();
  return sub_1BB874710();
}

uint64_t sub_1BB2EE1B8()
{
  sub_1BB2F2120();
  return sub_1BB87471C();
}

double sub_1BB2EE1E0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  _OWORD v7[2];

  sub_1BB2F16E0(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    a2[2] = v7[0];
    result = *(double *)((char *)v7 + 9);
    *(_OWORD *)((char *)a2 + 41) = *(_OWORD *)((char *)v7 + 9);
  }
  return result;
}

uint64_t sub_1BB2EE228()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2EE264 + 4 * byte_1BB906FB8[*v0]))(0x6564496F65646976, 0xEF7265696669746ELL);
}

unint64_t sub_1BB2EE264()
{
  return 0xD000000000000014;
}

uint64_t sub_1BB2EE280()
{
  return 0x73746365666665;
}

uint64_t sub_1BB2EE298()
{
  return 0x6165724165666173;
}

uint64_t sub_1BB2EE2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2F3A54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2EE2D4()
{
  sub_1BB2F21A8();
  return sub_1BB874710();
}

uint64_t sub_1BB2EE2FC()
{
  sub_1BB2F21A8();
  return sub_1BB87471C();
}

__n128 sub_1BB2EE324@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[3];
  _OWORD v7[2];

  sub_1BB2F1928(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v7[0];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 57) = *(_OWORD *)((char *)v7 + 9);
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1BB2EE370()
{
  sub_1BB2F2098();
  return sub_1BB874710();
}

uint64_t sub_1BB2EE398()
{
  sub_1BB2F2098();
  return sub_1BB87471C();
}

_OWORD *sub_1BB2EE3C0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _OWORD *result;
  _OWORD v5[5];

  result = (_OWORD *)sub_1BB2F1BFC(a1, (uint64_t)v5);
  if (!v2)
    return sub_1BB2F2070(v5, a2);
  return result;
}

uint64_t sub_1BB2EE404()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB2EE450()
{
  return sub_1BB872A90();
}

uint64_t sub_1BB2EE464()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB2EE4AC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BB2EE4FC(_QWORD *a1@<X8>)
{
  *a1 = 0x6567616D69;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1BB2EE514()
{
  sub_1BB2F3C28();
  return sub_1BB872D60();
}

uint64_t sub_1BB2EE570()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2EE5AC + 4 * byte_1BB906FBC[*v0]))(0x6564496567616D69, 0xEF7265696669746ELL);
}

uint64_t sub_1BB2EE5AC()
{
  return 0x73746365666665;
}

uint64_t sub_1BB2EE5C4()
{
  return 0x6F697469646E6F63;
}

uint64_t sub_1BB2EE5E0()
{
  return 0x6165724165666173;
}

uint64_t sub_1BB2EE5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2F36F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2EE61C()
{
  sub_1BB2F22A4();
  return sub_1BB874710();
}

uint64_t sub_1BB2EE644()
{
  sub_1BB2F22A4();
  return sub_1BB87471C();
}

double sub_1BB2EE66C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[2];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v13[2];

  sub_1BB2F10D4(a1, v8);
  if (!v2)
  {
    v5 = v12;
    a2[4] = v11;
    a2[5] = v5;
    a2[6] = v13[0];
    *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)((char *)v13 + 9);
    v6 = v8[1];
    *a2 = v8[0];
    a2[1] = v6;
    result = *(double *)&v9;
    v7 = v10;
    a2[2] = v9;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1BB2EE6C4()
{
  sub_1BB2F221C();
  return sub_1BB874710();
}

uint64_t sub_1BB2EE6EC()
{
  sub_1BB2F221C();
  return sub_1BB87471C();
}

_OWORD *sub_1BB2EE714@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  _OWORD *result;
  __int128 v5[8];

  result = sub_1BB2F1504(a1, v5);
  if (!v2)
    return sub_1BB2F21EC(v5, a2);
  return result;
}

uint64_t sub_1BB2EE758()
{
  _BYTE *v0;

  if (*v0)
    return 0x746867696568;
  else
    return 0x6874646977;
}

uint64_t sub_1BB2EE78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2F3614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2EE7B0()
{
  sub_1BB2F3CC4();
  return sub_1BB874710();
}

uint64_t sub_1BB2EE7D8()
{
  sub_1BB2F3CC4();
  return sub_1BB87471C();
}

void sub_1BB2EE800(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = sub_1BB2F0F34(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

uint64_t sub_1BB2EE828(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB802FB4(*a1, *a2);
}

uint64_t sub_1BB2EE834()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2EE8CC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2EE940()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2EE9D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

void sub_1BB2EEA08(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE400000000000000;
  v5 = 1702521203;
  if (v2 != 1)
  {
    v5 = 0x617053726F6C6F63;
    v4 = 0xEA00000000006563;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7465737361;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB2EEA60()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1702521203;
  if (*v0 != 1)
    v1 = 0x617053726F6C6F63;
  if (*v0)
    return v1;
  else
    return 0x7465737361;
}

uint64_t sub_1BB2EEAB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BB2EEAE0()
{
  sub_1BB2F248C();
  return sub_1BB874710();
}

uint64_t sub_1BB2EEB08()
{
  sub_1BB2F248C();
  return sub_1BB87471C();
}

uint64_t sub_1BB2EEB30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  char v38;

  v29 = a2;
  sub_1BA4B07F0(0, &qword_1ED39C398, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB67F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v29 - v4;
  v32 = sub_1BB86F43C();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v31 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB2F3C6C(0, &qword_1ED39DB50, (void (*)(void))sub_1BB2F248C);
  v35 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - v8;
  v10 = type metadata accessor for LayeredMedia.ImageResource();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2F248C();
  v34 = v9;
  v13 = v36;
  sub_1BB87468C();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = v7;
  v36 = v10;
  v15 = (uint64_t)a1;
  v17 = v32;
  v16 = v33;
  v18 = v31;
  LOBYTE(v37) = 0;
  v19 = v34;
  *(_QWORD *)v12 = sub_1BB874098();
  *((_QWORD *)v12 + 1) = v21;
  v38 = 1;
  sub_1BB2F24D0();
  sub_1BB8740D4();
  *((_OWORD *)v12 + 1) = v37;
  LOBYTE(v37) = 2;
  sub_1BA4A2870(&qword_1ED39C390, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB67F8], MEMORY[0x1E0DB6808]);
  v22 = v35;
  sub_1BB874020();
  v23 = v22;
  v24 = (uint64_t)v16;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v23);
  v25 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v16, 1, v17) == 1)
  {
    v26 = v18;
    (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v18, *MEMORY[0x1E0DB67F0], v17);
    sub_1BB2F2514(v24);
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 32);
    v26 = v18;
    v27(v18, v24, v17);
  }
  v28 = v29;
  v27(&v12[*(int *)(v36 + 24)], (uint64_t)v26, v17);
  sub_1BB2F2568((uint64_t)v12, v28);
  __swift_destroy_boxed_opaque_existential_1(v15);
  return sub_1BB2F25AC((uint64_t)v12);
}

uint64_t sub_1BB2EEE88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB2EEB30(a1, a2);
}

uint64_t sub_1BB2EEE9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB802D74(*a1, *a2);
}

uint64_t sub_1BB2EEEA8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2EEF60()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2EEFF4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2EF0A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

void sub_1BB2EF0DC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB0000000076346DLL;
  v4 = 0xE900000000000034;
  v5 = 0x706D2F6F65646976;
  if (v2 != 1)
  {
    v5 = 0x75712F6F65646976;
    v4 = 0xEF656D69746B6369;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x2D782F6F65646976;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB2EF154()
{
  sub_1BB2F3D08();
  return sub_1BB872D60();
}

uint64_t sub_1BB2EF1B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB802EB4(*a1, *a2);
}

uint64_t sub_1BB2EF1BC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2EF250()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2EF2C0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB2EF350@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

void sub_1BB2EF384(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE400000000000000;
  v5 = 1702521203;
  if (v2 != 1)
  {
    v5 = 0x65707954656D696DLL;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7465737361;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BB2EF3D8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1702521203;
  if (*v0 != 1)
    v1 = 0x65707954656D696DLL;
  if (*v0)
    return v1;
  else
    return 0x7465737361;
}

uint64_t sub_1BB2EF428@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

uint64_t sub_1BB2EF454()
{
  sub_1BB2F25E8();
  return sub_1BB874710();
}

uint64_t sub_1BB2EF47C()
{
  sub_1BB2F25E8();
  return sub_1BB87471C();
}

double sub_1BB2EF4A4@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  char v7;

  sub_1BB2F0D5C(a1, (uint64_t)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_BYTE *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB2EF4E8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB2EF510 + 4 * byte_1BB906FC0[*v0]))(1702060386, 0xE400000000000000);
}

uint64_t sub_1BB2EF510()
{
  return 0x73726579616CLL;
}

uint64_t sub_1BB2EF524()
{
  return 0x7365526567616D69;
}

uint64_t sub_1BB2EF558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB2F1E90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2EF57C()
{
  sub_1BB2EFBF0();
  return sub_1BB874710();
}

uint64_t sub_1BB2EF5A4()
{
  sub_1BB2EFBF0();
  return sub_1BB87471C();
}

uint64_t LayeredMedia.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  int v61;
  char v62;

  v49 = a2;
  sub_1BB2F3C6C(0, &qword_1ED39DB48, (void (*)(void))sub_1BB2EFBF0);
  v50 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v35 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2EFBF0();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v47 = a1;
  v48 = v5;
  v62 = 0;
  sub_1BB2EFC34();
  v8 = v7;
  sub_1BB8740D4();
  v9 = v52;
  v10 = v53;
  v43 = v54;
  v12 = v55;
  v11 = v56;
  v45 = v51;
  v46 = v57;
  v13 = v59;
  v41 = v58;
  v14 = v60;
  sub_1BA4C576C(0, &qword_1ED39D988);
  v62 = 1;
  v61 = v14;
  v42 = v13;
  v33 = v13;
  v15 = v50;
  v39 = v9;
  v40 = v10;
  v44 = v11;
  sub_1BB2EFC78(v45, v9, v10, v43, v12, v11, v46, v41, v33, v14);
  sub_1BA4C5708((unint64_t *)&unk_1ED39D990, &qword_1ED39D988, (uint64_t)&type metadata for LayeredMedia.Layer, (uint64_t (*)(void))sub_1BB2EFCA8);
  sub_1BB8740D4();
  v36 = v12;
  v16 = v45;
  v17 = v51;
  sub_1BB2EFCEC();
  v62 = 2;
  sub_1BB2EFDA4();
  swift_bridgeObjectRetain();
  v35[1] = 0;
  sub_1BB874068();
  v37 = v17;
  v18 = v51;
  sub_1BB2EFE9C();
  v62 = 3;
  sub_1BB2EFF10();
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v38 = v18;
  (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v15);
  v50 = v51;
  v20 = v42;
  v21 = v16;
  v22 = v39;
  v23 = v40;
  v24 = v43;
  v25 = v36;
  v26 = v46;
  sub_1BB2EFC78(v21, v39, v40, v43, v36, v44, v46, v41, v42, v61);
  swift_bridgeObjectRetain();
  v34 = v20;
  v27 = v44;
  v28 = v45;
  sub_1BAF7582C(v45, v22, v23, v24, v25, v44, v26, v41, v34, v61);
  v29 = v18;
  v30 = v49;
  *v49 = v28;
  v30[1] = v22;
  v30[2] = v23;
  v30[3] = v24;
  v30[4] = v25;
  v30[5] = v27;
  v30[6] = v26;
  v31 = v41;
  v32 = v42;
  v30[7] = v41;
  v30[8] = v32;
  LOBYTE(v27) = v61;
  *((_BYTE *)v30 + 72) = v61;
  v30[10] = v37;
  v30[11] = v29;
  v30[12] = v50;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  sub_1BAF7582C(v45, v22, v40, v24, v25, v44, v46, v31, v32, v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BB2EFBF0()
{
  unint64_t result;

  result = qword_1ED39C9F0;
  if (!qword_1ED39C9F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9071E4, &type metadata for LayeredMedia.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39C9F0);
  }
  return result;
}

unint64_t sub_1BB2EFC34()
{
  unint64_t result;

  result = qword_1ED39CB98;
  if (!qword_1ED39CB98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9071BC, &type metadata for LayeredMedia.BaseLayer);
    atomic_store(result, (unint64_t *)&qword_1ED39CB98);
  }
  return result;
}

uint64_t sub_1BB2EFC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10 < 0)
    swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BB2EFCA8()
{
  unint64_t result;

  result = qword_1ED39CB50;
  if (!qword_1ED39CB50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907194, &type metadata for LayeredMedia.Layer);
    atomic_store(result, (unint64_t *)&qword_1ED39CB50);
  }
  return result;
}

void sub_1BB2EFCEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39D928)
  {
    sub_1BA4B07F0(255, &qword_1ED39D968, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMedia.ImageResource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39D928);
  }
}

uint64_t type metadata accessor for LayeredMedia.ImageResource()
{
  uint64_t result;

  result = qword_1ED39CA28;
  if (!qword_1ED39CA28)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BB2EFDA4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_1ED39D930;
  if (!qword_1ED39D930)
  {
    sub_1BB2EFCEC();
    v2 = v1;
    v3 = sub_1BB2EFE0C();
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED39D930);
  }
  return result;
}

unint64_t sub_1BB2EFE0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED39D970;
  if (!qword_1ED39D970)
  {
    sub_1BA4B07F0(255, &qword_1ED39D968, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMedia.ImageResource, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED39CA20, (uint64_t (*)(uint64_t))type metadata accessor for LayeredMedia.ImageResource, (uint64_t)&unk_1BB90716C);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39D970);
  }
  return result;
}

void sub_1BB2EFE9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39D940)
  {
    sub_1BA4C576C(255, &qword_1ED39D978);
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39D940);
  }
}

unint64_t sub_1BB2EFF10()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1ED39D948;
  if (!qword_1ED39D948)
  {
    sub_1BB2EFE9C();
    v2 = v1;
    v3 = sub_1BA4C5708(&qword_1ED39D980, &qword_1ED39D978, (uint64_t)&type metadata for LayeredMedia.VideoResource, (uint64_t (*)(void))sub_1BB2EFF98);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1ED39D948);
  }
  return result;
}

unint64_t sub_1BB2EFF98()
{
  unint64_t result;

  result = qword_1ED39CAE8;
  if (!qword_1ED39CAE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907144, &type metadata for LayeredMedia.VideoResource);
    atomic_store(result, (unint64_t *)&qword_1ED39CAE8);
  }
  return result;
}

uint64_t sub_1BB2EFFDC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return LayeredMedia.init(from:)(a1, a2);
}

uint64_t destroy for LayeredMedia(uint64_t a1)
{
  sub_1BAF7582C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayeredMedia(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a2 + 64);
  v15 = *(_BYTE *)(a2 + 72);
  sub_1BB2EFC78(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v14, v15);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v14;
  *(_BYTE *)(a1 + 72) = v15;
  v12 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMedia(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  char v24;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v23 = *(_QWORD *)(a2 + 64);
  v24 = *(_BYTE *)(a2 + 72);
  sub_1BB2EFC78(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v23, v24);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v23;
  *(_BYTE *)(a1 + 72) = v24;
  sub_1BAF7582C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LayeredMedia(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_QWORD *)(a2 + 64);
  v5 = *(_BYTE *)(a2 + 72);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_BYTE *)(a1 + 72);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_QWORD *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 72) = v5;
  sub_1BAF7582C(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayeredMedia(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 57);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for LayeredMedia(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 48) = 0;
      *(_QWORD *)(a1 + 56) = (unint64_t)-a2 << 8;
      *(_QWORD *)(a1 + 64) = 0;
      *(_BYTE *)(a1 + 72) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia()
{
  return &type metadata for LayeredMedia;
}

uint64_t initializeWithCopy for LayeredMedia.VideoResource(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMedia.VideoResource(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for LayeredMedia.VideoResource(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMedia.VideoResource()
{
  return &type metadata for LayeredMedia.VideoResource;
}

_QWORD *sub_1BB2F04A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v6 = *(int *)(a3 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1BB86F43C();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1BB2F0548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BB86F43C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1BB2F0590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1BB86F43C();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_1BB2F0608(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86F43C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1BB2F0694(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86F43C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1BB2F06F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86F43C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1BB2F0764()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2F0770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86F43C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BB2F07EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2F07F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86F43C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB2F086C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86F43C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB2F08F4(uint64_t a1)
{
  destroy for LayeredMediaConditions();
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMedia.Layer()
{
  return &type metadata for LayeredMedia.Layer;
}

uint64_t destroy for LayeredMedia.BaseLayer(uint64_t a1)
{
  return sub_1BAF7582C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
}

uint64_t initializeWithCopy for LayeredMedia.BaseLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  sub_1BB2EFC78(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(_BYTE *)(a2 + 72));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v13;
  return a1;
}

uint64_t assignWithCopy for LayeredMedia.BaseLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v23;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  sub_1BB2EFC78(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(_BYTE *)(a2 + 72));
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v23;
  sub_1BAF7582C(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

uint64_t assignWithTake for LayeredMedia.BaseLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v3 = *(_QWORD *)(a2 + 64);
  v4 = *(_BYTE *)(a2 + 72);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_BYTE *)(a1 + 72);
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 64) = v3;
  *(_BYTE *)(a1 + 72) = v4;
  sub_1BAF7582C(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayeredMedia.BaseLayer(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 73))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 57);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for LayeredMedia.BaseLayer(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_BYTE *)(a1 + 72) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_QWORD *)(a1 + 48) = 0;
      *(_QWORD *)(a1 + 56) = (unint64_t)-a2 << 8;
      *(_QWORD *)(a1 + 64) = 0;
      *(_BYTE *)(a1 + 72) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BB2F0C28(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 72) >> 7;
}

uint64_t sub_1BB2F0C34(uint64_t result)
{
  *(_BYTE *)(result + 72) &= ~0x80u;
  return result;
}

uint64_t sub_1BB2F0C44(uint64_t result, char a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 72) & 1 | (a2 << 7);
  *(_QWORD *)(result + 56) = *(unsigned __int8 *)(result + 56);
  *(_BYTE *)(result + 72) = v2;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer()
{
  return &type metadata for LayeredMedia.BaseLayer;
}

ValueMetadata *type metadata accessor for LayeredMedia.CodingKeys()
{
  return &type metadata for LayeredMedia.CodingKeys;
}

unint64_t sub_1BB2F0C88()
{
  unint64_t result;

  result = qword_1EF2C0F98;
  if (!qword_1EF2C0F98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90711C, &type metadata for LayeredMedia.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0F98);
  }
  return result;
}

unint64_t sub_1BB2F0CD0()
{
  unint64_t result;

  result = qword_1ED39CA00;
  if (!qword_1ED39CA00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90708C, &type metadata for LayeredMedia.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CA00);
  }
  return result;
}

unint64_t sub_1BB2F0D18()
{
  unint64_t result;

  result = qword_1ED39C9F8;
  if (!qword_1ED39C9F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9070B4, &type metadata for LayeredMedia.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39C9F8);
  }
  return result;
}

uint64_t sub_1BB2F0D5C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  char v17;
  uint64_t v18;
  double v19;
  double v20;
  char v21;
  char v22;

  v18 = a2;
  sub_1BB2F3C6C(0, &qword_1ED39DB58, (void (*)(void))sub_1BB2F25E8);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2F25E8();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  LOBYTE(v19) = 0;
  v12 = sub_1BB874098();
  v14 = v13;
  v22 = 1;
  sub_1BB2F24D0();
  sub_1BB874020();
  if (v21)
    v15 = 1.79769313e308;
  else
    v15 = v19;
  if (v21)
    v16 = 1.79769313e308;
  else
    v16 = v20;
  v22 = 2;
  sub_1BB2F262C();
  sub_1BB874020();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v17 = LOBYTE(v19);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)v10 = v12;
  *(_QWORD *)(v10 + 8) = v14;
  *(double *)(v10 + 16) = v15;
  *(double *)(v10 + 24) = v16;
  *(_BYTE *)(v10 + 32) = v17;
  return result;
}

double sub_1BB2F0F34(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  double v12;

  sub_1BB2F3C6C(0, &qword_1ED39DB60, (void (*)(void))sub_1BB2F3CC4);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2F3CC4();
  sub_1BB87468C();
  if (!v1)
  {
    v11 = 0;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v2 = v12;
    v11 = 1;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

_QWORD *sub_1BB2F10D4@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *result;
  __int128 v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _OWORD *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD v49[2];
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  char v66;
  char v67;
  _DWORD v68[3];
  uint64_t v69;

  v42 = a2;
  sub_1BB2F3C6C(0, &qword_1ED39DB68, (void (*)(void))sub_1BB2F22A4);
  v69 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2F22A4();
  sub_1BB87468C();
  if (v2)
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v41 = a1;
  v8 = v5;
  LOBYTE(v50) = 0;
  v9 = sub_1BB874098();
  v11 = v10;
  LOBYTE(v43) = 1;
  sub_1BB2F2164();
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v12 = v51;
  v38 = v50;
  v13 = BYTE8(v51);
  LOBYTE(v43) = 2;
  sub_1BB2F231C();
  sub_1BB874068();
  v31 = v13;
  v14 = v52;
  v64 = 3;
  v36 = *((_QWORD *)&v50 + 1);
  v37 = v50;
  v34 = *((_QWORD *)&v51 + 1);
  v35 = v51;
  v39 = v54;
  v40 = v53;
  v32 = v12;
  v33 = v55;
  sub_1BB2F2360(v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, v53);
  sub_1BA689CD8();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v69);
  v69 = v65;
  v67 = v66;
  *(_QWORD *)&v43 = v9;
  *((_QWORD *)&v43 + 1) = v11;
  v15 = v37;
  v16 = v39;
  v44 = v38;
  *(_QWORD *)&v45 = v32;
  BYTE8(v45) = v31;
  v17 = v35;
  *(_QWORD *)&v46 = v37;
  *((_QWORD *)&v46 + 1) = v36;
  v18 = v34;
  *(_QWORD *)&v47 = v35;
  *((_QWORD *)&v47 + 1) = v34;
  *(_QWORD *)&v48 = v14;
  *((_QWORD *)&v48 + 1) = v40;
  *(_QWORD *)&v49[0] = v39;
  *((_QWORD *)&v49[0] + 1) = v33;
  *(_QWORD *)&v49[1] = v65;
  BYTE8(v49[1]) = v66;
  sub_1BB2F2394(&v43);
  v19 = v15;
  v20 = v36;
  v21 = v17;
  v22 = v18;
  v23 = v40;
  v24 = v33;
  sub_1BB2F22E8(v19, v36, v21, v22, v14, v40);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  *(_QWORD *)&v50 = v9;
  *((_QWORD *)&v50 + 1) = v11;
  v51 = v38;
  v52 = v32;
  LOBYTE(v53) = v31;
  *(_DWORD *)((char *)&v53 + 1) = v68[0];
  HIDWORD(v53) = *(_DWORD *)((char *)v68 + 3);
  v54 = v37;
  v55 = v20;
  v56 = v35;
  v57 = v34;
  v58 = v14;
  v59 = v23;
  v60 = v16;
  v61 = v24;
  v62 = v69;
  v63 = v67;
  result = sub_1BB2F2410(&v50);
  v26 = v48;
  v27 = v42;
  v42[4] = v47;
  v27[5] = v26;
  v27[6] = v49[0];
  *(_OWORD *)((char *)v27 + 105) = *(_OWORD *)((char *)v49 + 9);
  v28 = v44;
  *v27 = v43;
  v27[1] = v28;
  v29 = v46;
  v27[2] = v45;
  v27[3] = v29;
  return result;
}

_OWORD *sub_1BB2F1504@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v19[2];
  __int128 v20[6];
  _OWORD v21[2];
  _QWORD v22[5];
  _OWORD v23[6];
  _OWORD v24[2];
  uint64_t v25;

  v12 = a2;
  sub_1BB2F3C6C(0, &qword_1ED39DB70, (void (*)(void))sub_1BB2F221C);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2F221C();
  v8 = v25;
  sub_1BB87468C();
  if (v8)
    return (_OWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v12;
  sub_1BB2F2260();
  sub_1BB8740D4();
  sub_1BA4C010C((uint64_t)a1, (uint64_t)v22);
  sub_1BB2F10D4(v22, v23);
  v17 = v23[4];
  v18 = v23[5];
  v19[0] = v24[0];
  *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v24 + 9);
  v13 = v23[0];
  v14 = v23[1];
  v15 = v23[2];
  v16 = v23[3];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20[4] = v17;
  v20[5] = v18;
  v21[0] = v19[0];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v19 + 9);
  v20[0] = v13;
  v20[1] = v14;
  v20[2] = v15;
  v20[3] = v16;
  nullsub_1();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BB2F21EC(v20, v9);
}

uint64_t sub_1BB2F16E0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  int v28;
  char v29;

  v23 = a2;
  sub_1BB2F3C6C(0, &qword_1ED39EBB8, (void (*)(void))sub_1BB2F2120);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2F2120();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  LOBYTE(v24) = 0;
  v10 = v5;
  v11 = sub_1BB874098();
  v13 = v12;
  v29 = 1;
  sub_1BB2F2164();
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v14 = v24;
  v21 = v26;
  v22 = v25;
  v28 = v27;
  v29 = 2;
  sub_1BA689CD8();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  v15 = v24;
  LOBYTE(v10) = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  result = swift_bridgeObjectRelease();
  v17 = v14;
  v18 = v23;
  *v23 = v11;
  v18[1] = v13;
  v18[2] = v17;
  v19 = v21;
  v18[3] = v22;
  v18[4] = v19;
  *((_BYTE *)v18 + 40) = v28;
  v18[6] = v15;
  *((_BYTE *)v18 + 56) = v10;
  return result;
}

uint64_t sub_1BB2F1928@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  int v32;
  char v33;

  v27 = a2;
  sub_1BB2F3C6C(0, &qword_1ED39DB78, (void (*)(void))sub_1BB2F21A8);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2F21A8();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  LOBYTE(v28) = 0;
  v10 = v5;
  v11 = sub_1BB874098();
  v13 = v12;
  LOBYTE(v28) = 1;
  swift_bridgeObjectRetain();
  v14 = sub_1BB874098();
  v16 = v15;
  v25 = v14;
  v33 = 2;
  sub_1BB2F2164();
  swift_bridgeObjectRetain();
  v26 = v16;
  sub_1BB874068();
  v23 = v29;
  v24 = v28;
  v22 = v30;
  v32 = v31;
  v33 = 3;
  sub_1BA689CD8();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  v17 = v28;
  LOBYTE(v10) = v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = v26;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v20 = v27;
  *v27 = v11;
  v20[1] = v13;
  v20[2] = v25;
  v20[3] = v18;
  v21 = v23;
  v20[4] = v24;
  v20[5] = v21;
  v20[6] = v22;
  *((_BYTE *)v20 + 56) = v32;
  v20[8] = v17;
  *((_BYTE *)v20 + 72) = v10;
  return result;
}

uint64_t sub_1BB2F1BFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  uint64_t v32[5];
  unsigned __int8 v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36[7];
  unsigned __int8 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v40 = a2;
  sub_1BB2F3C6C(0, &qword_1ED39DB80, (void (*)(void))sub_1BB2F2098);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2F2098();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v40;
  sub_1BB2F20DC();
  sub_1BB8740D4();
  v10 = v5;
  if ((v31[0] & 1) != 0)
  {
    sub_1BA4C010C((uint64_t)a1, (uint64_t)v31);
    sub_1BB2F1928(v31, v36);
    v26 = v36[1];
    v30 = v36[2];
    v29 = v36[3];
    v28 = v36[4];
    v12 = v36[6];
    v27 = v36[5];
    v13 = v37;
    v14 = v38;
    v15 = v10;
    v16 = v39;
    v17 = v8;
    v18 = v36[0];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v15);
    v19 = v16 | 0x80;
    v20 = v26;
  }
  else
  {
    sub_1BA4C010C((uint64_t)a1, (uint64_t)v31);
    sub_1BB2F16E0(v31, v32);
    v30 = v32[2];
    v29 = v32[3];
    v28 = v32[4];
    v27 = v33;
    v12 = v34;
    v13 = v35;
    v21 = v8;
    v18 = v32[0];
    v22 = v10;
    v20 = v32[1];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v21, v22);
    v14 = 0;
    v19 = 0;
  }
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(_QWORD *)v9 = v18;
  *(_QWORD *)(v9 + 8) = v20;
  v23 = v29;
  *(_QWORD *)(v9 + 16) = v30;
  *(_QWORD *)(v9 + 24) = v23;
  v24 = v27;
  *(_QWORD *)(v9 + 32) = v28;
  *(_QWORD *)(v9 + 40) = v24;
  *(_QWORD *)(v9 + 48) = v12;
  *(_QWORD *)(v9 + 56) = v13;
  *(_QWORD *)(v9 + 64) = v14;
  *(_BYTE *)(v9 + 72) = v19;
  return result;
}

uint64_t sub_1BB2F1E90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702060386 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726579616CLL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7365526567616D69 && a2 == 0xEE0073656372756FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365526F65646976 && a2 == 0xEE0073656372756FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

_OWORD *sub_1BB2F2070(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *a2 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *(_OWORD *)((char *)a2 + 57) = *(_OWORD *)((char *)a1 + 57);
  a2[2] = v3;
  a2[3] = v4;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1BB2F2098()
{
  unint64_t result;

  result = qword_1ED39CB80;
  if (!qword_1ED39CB80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907CDC, &type metadata for LayeredMedia.BaseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB80);
  }
  return result;
}

unint64_t sub_1BB2F20DC()
{
  unint64_t result;

  result = qword_1ED39CB78;
  if (!qword_1ED39CB78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907CB4, &type metadata for LayeredMedia.BaseLayer.LayerType);
    atomic_store(result, (unint64_t *)&qword_1ED39CB78);
  }
  return result;
}

unint64_t sub_1BB2F2120()
{
  unint64_t result;

  result = qword_1ED39EB18;
  if (!qword_1ED39EB18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907C64, &type metadata for LayeredMedia.BaseLayer.ImageLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39EB18);
  }
  return result;
}

unint64_t sub_1BB2F2164()
{
  unint64_t result;

  result = qword_1ED39CF00;
  if (!qword_1ED39CF00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90E034, &type metadata for LayeredMediaEffects);
    atomic_store(result, (unint64_t *)&qword_1ED39CF00);
  }
  return result;
}

unint64_t sub_1BB2F21A8()
{
  unint64_t result;

  result = qword_1ED39CB58;
  if (!qword_1ED39CB58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907C14, &type metadata for LayeredMedia.BaseLayer.VideoLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB58);
  }
  return result;
}

_OWORD *sub_1BB2F21EC(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[3];
  a2[2] = a1[2];
  a2[3] = v4;
  *a2 = v2;
  a2[1] = v3;
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  *(_OWORD *)((char *)a2 + 105) = *(__int128 *)((char *)a1 + 105);
  a2[5] = v6;
  a2[6] = v7;
  a2[4] = v5;
  return a2;
}

unint64_t sub_1BB2F221C()
{
  unint64_t result;

  result = qword_1ED39CB38;
  if (!qword_1ED39CB38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907BC4, &type metadata for LayeredMedia.Layer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB38);
  }
  return result;
}

unint64_t sub_1BB2F2260()
{
  unint64_t result;

  result = qword_1ED39CB30;
  if (!qword_1ED39CB30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907B9C, &type metadata for LayeredMedia.Layer.LayerType);
    atomic_store(result, (unint64_t *)&qword_1ED39CB30);
  }
  return result;
}

unint64_t sub_1BB2F22A4()
{
  unint64_t result;

  result = qword_1ED39CB10;
  if (!qword_1ED39CB10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907B4C, &type metadata for LayeredMedia.Layer.ImageLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB10);
  }
  return result;
}

uint64_t sub_1BB2F22E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BB2F231C()
{
  unint64_t result;

  result = qword_1ED39D1F8;
  if (!qword_1ED39D1F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9531D8, &type metadata for LayeredMediaConditions);
    atomic_store(result, (unint64_t *)&qword_1ED39D1F8);
  }
  return result;
}

uint64_t sub_1BB2F2360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

_QWORD *sub_1BB2F2394(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  v5 = a1[9];
  v6 = a1[10];
  v7 = a1[11];
  swift_bridgeObjectRetain();
  sub_1BB2F2360(v2, v3, v4, v5, v6, v7);
  return a1;
}

_QWORD *sub_1BB2F2410(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  v5 = a1[9];
  v6 = a1[10];
  v7 = a1[11];
  swift_bridgeObjectRelease();
  sub_1BB2F22E8(v2, v3, v4, v5, v6, v7);
  return a1;
}

unint64_t sub_1BB2F248C()
{
  unint64_t result;

  result = qword_1ED39CA08;
  if (!qword_1ED39CA08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907AFC, &type metadata for LayeredMedia.ImageResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CA08);
  }
  return result;
}

unint64_t sub_1BB2F24D0()
{
  unint64_t result;

  result = qword_1ED39CB08;
  if (!qword_1ED39CB08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907AD4, &type metadata for LayeredMedia.Size);
    atomic_store(result, (unint64_t *)&qword_1ED39CB08);
  }
  return result;
}

uint64_t sub_1BB2F2514(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED39C398, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB67F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB2F2568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LayeredMedia.ImageResource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB2F25AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LayeredMedia.ImageResource();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BB2F25E8()
{
  unint64_t result;

  result = qword_1ED39CAC0;
  if (!qword_1ED39CAC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907A84, &type metadata for LayeredMedia.VideoResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CAC0);
  }
  return result;
}

unint64_t sub_1BB2F262C()
{
  unint64_t result;

  result = qword_1ED39CAE0;
  if (!qword_1ED39CAE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907A5C, &type metadata for LayeredMedia.VideoResource.MIMEType);
    atomic_store(result, (unint64_t *)&qword_1ED39CAE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.VideoResource.CodingKeys()
{
  return &type metadata for LayeredMedia.VideoResource.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMedia.ImageResource.CodingKeys()
{
  return &type metadata for LayeredMedia.ImageResource.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMedia.Layer.ImageLayer.CodingKeys()
{
  return &type metadata for LayeredMedia.Layer.ImageLayer.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMedia.Layer.LayerType()
{
  return &type metadata for LayeredMedia.Layer.LayerType;
}

ValueMetadata *type metadata accessor for LayeredMedia.Layer.CodingKeys()
{
  return &type metadata for LayeredMedia.Layer.CodingKeys;
}

uint64_t _s8NewsFeed12LayeredMediaV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BB2F2714 + 4 * byte_1BB906FC9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BB2F2748 + 4 * byte_1BB906FC4[v4]))();
}

uint64_t sub_1BB2F2748(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2F2750(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2F2758);
  return result;
}

uint64_t sub_1BB2F2764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2F276CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BB2F2770(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2F2778(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.VideoLayer.CodingKeys()
{
  return &type metadata for LayeredMedia.BaseLayer.VideoLayer.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.ImageLayer.CodingKeys()
{
  return &type metadata for LayeredMedia.BaseLayer.ImageLayer.CodingKeys;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.LayerType()
{
  return &type metadata for LayeredMedia.BaseLayer.LayerType;
}

uint64_t _s8NewsFeed12LayeredMediaV5LayerO9LayerTypeOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB2F27F8 + 4 * byte_1BB906FCE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB2F2818 + 4 * byte_1BB906FD3[v4]))();
}

_BYTE *sub_1BB2F27F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB2F2818(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2F2820(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2F2828(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2F2830(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2F2838(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.CodingKeys()
{
  return &type metadata for LayeredMedia.BaseLayer.CodingKeys;
}

uint64_t _s8NewsFeed12LayeredMediaV13VideoResourceV8MIMETypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB2F28A0 + 4 * byte_1BB906FDD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB2F28D4 + 4 * byte_1BB906FD8[v4]))();
}

uint64_t sub_1BB2F28D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2F28DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2F28E4);
  return result;
}

uint64_t sub_1BB2F28F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2F28F8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB2F28FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2F2904(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.VideoResource.MIMEType()
{
  return &type metadata for LayeredMedia.VideoResource.MIMEType;
}

ValueMetadata *type metadata accessor for LayeredMedia.Size()
{
  return &type metadata for LayeredMedia.Size;
}

uint64_t _s8NewsFeed12LayeredMediaV5LayerO10ImageLayerVwxx_0(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 88);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8NewsFeed12LayeredMediaV5LayerO10ImageLayerVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  v5 = (_OWORD *)(a1 + 48);
  v6 = a2 + 48;
  v7 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v8 = *(_OWORD *)(v6 + 16);
    *v5 = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 64) = v8;
    v9 = *(_OWORD *)(v6 + 48);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(v6 + 32);
    *(_OWORD *)(a1 + 96) = v9;
  }
  else
  {
    *(_QWORD *)v5 = *(_QWORD *)v6;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(v6 + 8);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v7;
    v10 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

uint64_t _s8NewsFeed12LayeredMediaV5LayerO10ImageLayerVwca_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _OWORD *v5;
  __int128 *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 16) = v4;
  v5 = (_OWORD *)(a1 + 48);
  v6 = (__int128 *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88) == 1)
  {
    if (v7 == 1)
    {
      v8 = *v6;
      v9 = *(_OWORD *)(a2 + 64);
      v10 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v10;
      *v5 = v8;
      *(_OWORD *)(a1 + 64) = v9;
    }
    else
    {
      v14 = *(_QWORD *)v6;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)v5 = v14;
      v15 = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v15;
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_1BB2F08F4(a1 + 48);
    v11 = *(_OWORD *)(a2 + 96);
    v13 = *v6;
    v12 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v11;
    *v5 = v13;
    *(_OWORD *)(a1 + 64) = v12;
  }
  else
  {
    v16 = *(_QWORD *)v6;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)v5 = v16;
    v17 = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v17;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v18 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v18;
  return a1;
}

uint64_t _s8NewsFeed12LayeredMediaV5LayerO10ImageLayerVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  v5 = (_QWORD *)(a1 + 48);
  v6 = (_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 88) != 1)
  {
    v7 = *(_QWORD *)(a2 + 88);
    if (v7 != 1)
    {
      *v5 = *v6;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v7;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BB2F08F4(a1 + 48);
  }
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)v5 = *(_OWORD *)v6;
  *(_OWORD *)(a1 + 64) = v8;
  v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
LABEL_6:
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMedia.Layer.ImageLayer()
{
  return &type metadata for LayeredMedia.Layer.ImageLayer;
}

uint64_t initializeWithCopy for LayeredMedia.BaseLayer.VideoLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMedia.BaseLayer.VideoLayer(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v5;
  return a1;
}

uint64_t assignWithTake for LayeredMedia.BaseLayer.VideoLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.VideoLayer()
{
  return &type metadata for LayeredMedia.BaseLayer.VideoLayer;
}

uint64_t initializeWithCopy for LayeredMedia.BaseLayer.ImageLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayeredMedia.BaseLayer.ImageLayer(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  return a1;
}

uint64_t assignWithTake for LayeredMedia.BaseLayer.ImageLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for LayeredMedia.BaseLayer.ImageLayer()
{
  return &type metadata for LayeredMedia.BaseLayer.ImageLayer;
}

unint64_t sub_1BB2F2F14()
{
  unint64_t result;

  result = qword_1EF2C0FA0;
  if (!qword_1EF2C0FA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907354, &type metadata for LayeredMedia.VideoResource.MIMEType);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FA0);
  }
  return result;
}

unint64_t sub_1BB2F2F5C()
{
  unint64_t result;

  result = qword_1EF2C0FA8;
  if (!qword_1EF2C0FA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90740C, &type metadata for LayeredMedia.BaseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FA8);
  }
  return result;
}

unint64_t sub_1BB2F2FA4()
{
  unint64_t result;

  result = qword_1EF2C0FB0;
  if (!qword_1EF2C0FB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9074D4, &type metadata for LayeredMedia.BaseLayer.LayerType);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FB0);
  }
  return result;
}

unint64_t sub_1BB2F2FEC()
{
  unint64_t result;

  result = qword_1EF2C0FB8;
  if (!qword_1EF2C0FB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90758C, &type metadata for LayeredMedia.BaseLayer.ImageLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FB8);
  }
  return result;
}

unint64_t sub_1BB2F3034()
{
  unint64_t result;

  result = qword_1EF2C0FC0;
  if (!qword_1EF2C0FC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907644, &type metadata for LayeredMedia.BaseLayer.VideoLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FC0);
  }
  return result;
}

unint64_t sub_1BB2F307C()
{
  unint64_t result;

  result = qword_1EF2C0FC8;
  if (!qword_1EF2C0FC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9076FC, &type metadata for LayeredMedia.Layer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FC8);
  }
  return result;
}

unint64_t sub_1BB2F30C4()
{
  unint64_t result;

  result = qword_1EF2C0FD0;
  if (!qword_1EF2C0FD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90779C, &type metadata for LayeredMedia.Layer.LayerType);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FD0);
  }
  return result;
}

unint64_t sub_1BB2F310C()
{
  unint64_t result;

  result = qword_1EF2C0FD8;
  if (!qword_1EF2C0FD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907854, &type metadata for LayeredMedia.Layer.ImageLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FD8);
  }
  return result;
}

unint64_t sub_1BB2F3154()
{
  unint64_t result;

  result = qword_1EF2C0FE0;
  if (!qword_1EF2C0FE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907944, &type metadata for LayeredMedia.ImageResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FE0);
  }
  return result;
}

unint64_t sub_1BB2F319C()
{
  unint64_t result;

  result = qword_1EF2C0FE8;
  if (!qword_1EF2C0FE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907A34, &type metadata for LayeredMedia.VideoResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FE8);
  }
  return result;
}

unint64_t sub_1BB2F31E4()
{
  unint64_t result;

  result = qword_1ED39CAD0;
  if (!qword_1ED39CAD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90796C, &type metadata for LayeredMedia.VideoResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CAD0);
  }
  return result;
}

unint64_t sub_1BB2F322C()
{
  unint64_t result;

  result = qword_1ED39CAC8;
  if (!qword_1ED39CAC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907994, &type metadata for LayeredMedia.VideoResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CAC8);
  }
  return result;
}

unint64_t sub_1BB2F3274()
{
  unint64_t result;

  result = qword_1ED39CA18;
  if (!qword_1ED39CA18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90787C, &type metadata for LayeredMedia.ImageResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CA18);
  }
  return result;
}

unint64_t sub_1BB2F32BC()
{
  unint64_t result;

  result = qword_1ED39CA10;
  if (!qword_1ED39CA10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9078A4, &type metadata for LayeredMedia.ImageResource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CA10);
  }
  return result;
}

unint64_t sub_1BB2F3304()
{
  unint64_t result;

  result = qword_1ED39CB20;
  if (!qword_1ED39CB20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9077C4, &type metadata for LayeredMedia.Layer.ImageLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB20);
  }
  return result;
}

unint64_t sub_1BB2F334C()
{
  unint64_t result;

  result = qword_1ED39CB18;
  if (!qword_1ED39CB18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9077EC, &type metadata for LayeredMedia.Layer.ImageLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB18);
  }
  return result;
}

unint64_t sub_1BB2F3394()
{
  unint64_t result;

  result = qword_1ED39CB48;
  if (!qword_1ED39CB48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90766C, &type metadata for LayeredMedia.Layer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB48);
  }
  return result;
}

unint64_t sub_1BB2F33DC()
{
  unint64_t result;

  result = qword_1ED39CB40;
  if (!qword_1ED39CB40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907694, &type metadata for LayeredMedia.Layer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB40);
  }
  return result;
}

unint64_t sub_1BB2F3424()
{
  unint64_t result;

  result = qword_1ED39CB68;
  if (!qword_1ED39CB68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9075B4, &type metadata for LayeredMedia.BaseLayer.VideoLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB68);
  }
  return result;
}

unint64_t sub_1BB2F346C()
{
  unint64_t result;

  result = qword_1ED39CB60;
  if (!qword_1ED39CB60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9075DC, &type metadata for LayeredMedia.BaseLayer.VideoLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB60);
  }
  return result;
}

unint64_t sub_1BB2F34B4()
{
  unint64_t result;

  result = qword_1ED39EB28;
  if (!qword_1ED39EB28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9074FC, &type metadata for LayeredMedia.BaseLayer.ImageLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39EB28);
  }
  return result;
}

unint64_t sub_1BB2F34FC()
{
  unint64_t result;

  result = qword_1ED39EB20;
  if (!qword_1ED39EB20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907524, &type metadata for LayeredMedia.BaseLayer.ImageLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39EB20);
  }
  return result;
}

unint64_t sub_1BB2F3544()
{
  unint64_t result;

  result = qword_1ED39CB90;
  if (!qword_1ED39CB90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90737C, &type metadata for LayeredMedia.BaseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB90);
  }
  return result;
}

unint64_t sub_1BB2F358C()
{
  unint64_t result;

  result = qword_1ED39CB88;
  if (!qword_1ED39CB88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9073A4, &type metadata for LayeredMedia.BaseLayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB88);
  }
  return result;
}

unint64_t sub_1BB2F35D0()
{
  unint64_t result;

  result = qword_1ED39CB70;
  if (!qword_1ED39CB70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB90745C, &type metadata for LayeredMedia.BaseLayer.LayerType);
    atomic_store(result, (unint64_t *)&qword_1ED39CB70);
  }
  return result;
}

uint64_t sub_1BB2F3614(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696568 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BB2F36F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6564496567616D69 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746365666665 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F697469646E6F63 && a2 == 0xEA0000000000736ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BB2F38DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6564496567616D69 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73746365666665 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BB2F3A54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6564496F65646976 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB9851A0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746365666665 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1BB2F3C28()
{
  unint64_t result;

  result = qword_1ED39CB28;
  if (!qword_1ED39CB28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907724, &type metadata for LayeredMedia.Layer.LayerType);
    atomic_store(result, (unint64_t *)&qword_1ED39CB28);
  }
  return result;
}

void sub_1BB2F3C6C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_1BB874104();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BB2F3CC4()
{
  unint64_t result;

  result = qword_1ED39CAF0;
  if (!qword_1ED39CAF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907DE4, &type metadata for LayeredMedia.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CAF0);
  }
  return result;
}

unint64_t sub_1BB2F3D08()
{
  unint64_t result;

  result = qword_1ED39CAD8;
  if (!qword_1ED39CAD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9072DC, &type metadata for LayeredMedia.VideoResource.MIMEType);
    atomic_store(result, (unint64_t *)&qword_1ED39CAD8);
  }
  return result;
}

uint64_t _s8NewsFeed12LayeredMediaV9BaseLayerO9LayerTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB2F3D98 + 4 * byte_1BB906FE7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB2F3DCC + 4 * byte_1BB906FE2[v4]))();
}

uint64_t sub_1BB2F3DCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2F3DD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2F3DDCLL);
  return result;
}

uint64_t sub_1BB2F3DE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2F3DF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB2F3DF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2F3DFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMedia.Size.CodingKeys()
{
  return &type metadata for LayeredMedia.Size.CodingKeys;
}

unint64_t sub_1BB2F3E1C()
{
  unint64_t result;

  result = qword_1EF2C0FF0;
  if (!qword_1EF2C0FF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907DBC, &type metadata for LayeredMedia.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2C0FF0);
  }
  return result;
}

unint64_t sub_1BB2F3E64()
{
  unint64_t result;

  result = qword_1ED39CB00;
  if (!qword_1ED39CB00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907D2C, &type metadata for LayeredMedia.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CB00);
  }
  return result;
}

unint64_t sub_1BB2F3EAC()
{
  unint64_t result;

  result = qword_1ED39CAF8;
  if (!qword_1ED39CAF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB907D54, &type metadata for LayeredMedia.Size.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED39CAF8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatLayoutViewRoute(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  char *v105;
  int *v106;
  unsigned int (*v107)(char *, uint64_t, int *);
  uint64_t v108;
  void *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  id v113;
  id v114;
  __int128 v115;
  int v116;
  void *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  id v121;
  id v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  const void *v138;
  uint64_t v139;
  unsigned int (*v140)(const void *, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  int *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  unint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _BYTE *v168;
  uint64_t v169;
  int *v170;
  uint64_t v171;
  char *v172;
  int *v173;
  unsigned int (*v174)(char *, uint64_t, int *);
  uint64_t v175;
  void *v176;
  uint64_t v177;
  void *v178;
  uint64_t v179;
  id v180;
  id v181;
  __int128 v182;
  int v183;
  void *v184;
  uint64_t v185;
  void *v186;
  uint64_t v187;
  id v188;
  id v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  __int128 v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  const void *v205;
  uint64_t v206;
  uint64_t v207;
  unsigned int (*v208)(const void *, uint64_t, uint64_t);
  uint64_t v209;
  uint64_t v210;
  int *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void (*v216)(uint64_t, uint64_t, uint64_t);
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  unint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  unint64_t v226;
  uint64_t v227;
  int *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void (*v234)(uint64_t, uint64_t, uint64_t);
  uint64_t v235;
  void *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  int *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  void (*v247)(uint64_t, uint64_t, uint64_t);
  uint64_t v248;
  void *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void *v255;
  id v256;
  _QWORD *v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  void *v262;
  uint64_t v263;
  id v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  void *v271;
  id v272;
  _QWORD *v273;
  unint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  void *v278;
  uint64_t v279;
  id v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  __int128 v285;
  _OWORD *v286;
  _OWORD *v287;
  uint64_t v288;
  uint64_t v289;
  __int128 v290;
  _OWORD *v291;
  _OWORD *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  _QWORD *v296;
  _QWORD *v297;
  uint64_t v298;
  uint64_t v299;
  unsigned int (*v300)(_QWORD *, uint64_t, uint64_t);
  uint64_t v301;
  uint64_t v302;
  _QWORD *v303;
  _QWORD *v304;
  uint64_t v305;
  uint64_t v306;
  unsigned int (*v307)(_QWORD *, uint64_t, uint64_t);
  uint64_t v308;
  __int128 v309;
  _OWORD *v310;
  _OWORD *v311;
  uint64_t v312;
  uint64_t v313;
  __int128 v314;
  _OWORD *v315;
  _OWORD *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  _BYTE *v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  int *v327;
  unsigned int (*v328)(char *, uint64_t, int *);
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  _BYTE *v333;
  char *v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  int *v338;
  unsigned int (*v339)(char *, uint64_t, int *);
  uint64_t v340;
  __int128 v341;
  __int128 v342;
  uint64_t v343;
  uint64_t v344;
  void *v345;
  uint64_t v346;
  uint64_t v347;
  void (*v348)(char *, char *, uint64_t);
  id v349;
  uint64_t v350;
  void *v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  void *v359;
  uint64_t v360;
  uint64_t v361;
  void (*v362)(char *, char *, uint64_t);
  id v363;
  uint64_t v364;
  void *v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  __int128 v371;
  _OWORD *v372;
  _OWORD *v373;
  uint64_t v374;
  uint64_t v375;
  __int128 v376;
  _OWORD *v377;
  _OWORD *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  _QWORD *v382;
  _QWORD *v383;
  unint64_t v384;
  uint64_t v385;
  unint64_t v386;
  uint64_t v387;
  _QWORD *v388;
  _QWORD *v389;
  unint64_t v390;
  uint64_t v391;
  unint64_t v392;
  __int128 v393;
  __int128 v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  _OWORD *v399;
  _OWORD *v400;
  __int128 v401;
  void *v402;
  uint64_t v403;
  void *v404;
  uint64_t v405;
  id v406;
  id v407;
  __int128 v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  _OWORD *v413;
  _OWORD *v414;
  __int128 v415;
  void *v416;
  uint64_t v417;
  void *v418;
  uint64_t v419;
  id v420;
  id v421;
  __int128 v422;
  uint64_t v423;
  void *v424;
  id v425;
  uint64_t v426;
  void *v427;
  id v428;
  __int128 v429;
  __int128 v430;
  uint64_t v431;
  uint64_t v432;
  void *v433;
  id v434;
  _QWORD *v435;
  unint64_t v436;
  uint64_t v437;
  uint64_t v438;
  void *v439;
  id v440;
  _QWORD *v441;
  unint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  void *v447;
  id v448;
  _QWORD *v449;
  unint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  void *v455;
  id v456;
  _QWORD *v457;
  unint64_t v458;
  void *v459;
  uint64_t v460;
  uint64_t v461;
  void *v462;
  uint64_t v463;
  id v464;
  id v465;
  __int128 v466;
  void *v467;
  uint64_t v468;
  uint64_t v469;
  void *v470;
  uint64_t v471;
  id v472;
  id v473;
  __int128 v474;
  uint64_t v475;
  uint64_t v476;
  void *v477;
  uint64_t v478;
  char *v479;
  char *v480;
  id v481;
  uint64_t v482;
  char *v483;
  char *v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  void *v490;
  uint64_t v491;
  char *v492;
  char *v493;
  id v494;
  uint64_t v495;
  char *v496;
  char *v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  _QWORD *v502;
  _QWORD *v503;
  unint64_t v504;
  uint64_t v505;
  unint64_t v506;
  uint64_t v507;
  _QWORD *v508;
  _QWORD *v509;
  unint64_t v510;
  uint64_t v511;
  unint64_t v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  uint64_t v521;
  uint64_t v522;
  void *v523;
  id v524;
  _QWORD *v525;
  unint64_t v526;
  uint64_t v527;
  uint64_t v528;
  void *v529;
  id v530;
  _QWORD *v531;
  unint64_t v532;
  uint64_t v533;
  void *v534;
  void (*v535)(_QWORD *, _QWORD, uint64_t, int *);
  id v536;
  uint64_t v537;
  _QWORD *v538;
  uint64_t *v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  int v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  char *v548;
  char *v549;
  char *v550;
  uint64_t v551;
  void *v552;
  void (*v553)(_QWORD *, _QWORD, uint64_t, int *);
  id v554;
  uint64_t v555;
  _QWORD *v556;
  uint64_t *v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  int v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  char *v566;
  char *v567;
  __int128 v568;
  __int128 v569;
  uint64_t v570;
  uint64_t v571;
  char *v572;
  char *v573;
  uint64_t v574;
  uint64_t v575;
  _QWORD *v576;
  unint64_t v577;
  uint64_t v578;
  int *v579;
  uint64_t v580;
  char *v581;
  char *v582;
  uint64_t v583;
  void (*v584)(char *, char *, uint64_t);
  uint64_t v585;
  char *v586;
  char *v587;
  uint64_t v588;
  char *v589;
  char *v590;
  unint64_t v591;
  uint64_t v592;
  _QWORD *v593;
  unint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  _QWORD *v602;
  unint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  unint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  _QWORD *v619;
  unint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  char *v624;
  char *v625;
  int *v626;
  uint64_t v627;
  char *v628;
  int *v629;
  unsigned int (*v630)(char *, uint64_t, int *);
  uint64_t v631;
  void *v632;
  uint64_t v633;
  void *v634;
  uint64_t v635;
  id v636;
  id v637;
  __int128 v638;
  int v639;
  void *v640;
  uint64_t v641;
  void *v642;
  uint64_t v643;
  id v644;
  id v645;
  __int128 v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  __int128 v651;
  __int128 v652;
  uint64_t v653;
  uint64_t v654;
  char *v655;
  char *v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  char *v661;
  uint64_t v662;
  unsigned int (*v663)(char *, uint64_t, uint64_t);
  uint64_t v664;
  uint64_t v665;
  int *v666;
  uint64_t v667;
  char *v668;
  char *v669;
  uint64_t v670;
  void (*v671)(char *, char *, uint64_t);
  uint64_t v672;
  char *v673;
  char *v674;
  uint64_t v675;
  uint64_t v676;
  _QWORD *v677;
  unint64_t v678;
  uint64_t v679;
  _QWORD *v680;
  unint64_t v681;
  uint64_t v682;
  int *v683;
  uint64_t v684;
  char *v685;
  char *v686;
  uint64_t v687;
  uint64_t v688;
  void (*v689)(char *, char *, void *);
  void *v690;
  uint64_t v691;
  char *v692;
  char *v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  void *v698;
  id v699;
  _QWORD *v700;
  unint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  void *v705;
  uint64_t v706;
  id v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  char *v711;
  __int128 v712;
  _OWORD *v713;
  _OWORD *v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  char *v718;
  char *v719;
  uint64_t v720;
  uint64_t v721;
  unsigned int (*v722)(char *, uint64_t, uint64_t);
  uint64_t v723;
  __int128 v724;
  _OWORD *v725;
  _OWORD *v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  char *v732;
  char *v733;
  uint64_t v734;
  uint64_t v735;
  char *v736;
  int *v737;
  unsigned int (*v738)(char *, uint64_t, int *);
  uint64_t v739;
  __int128 v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  void (*v745)(char *, char *, uint64_t);
  id v746;
  uint64_t v747;
  char *v748;
  char *v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  __int128 v754;
  _OWORD *v755;
  _OWORD *v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  char *v760;
  char *v761;
  unint64_t v762;
  uint64_t v763;
  unint64_t v764;
  __int128 v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  _OWORD *v770;
  _OWORD *v771;
  __int128 v772;
  void *v773;
  uint64_t v774;
  void *v775;
  uint64_t v776;
  id v777;
  id v778;
  __int128 v779;
  uint64_t v780;
  void *v781;
  id v782;
  __int128 v783;
  uint64_t v784;
  uint64_t v785;
  void *v786;
  id v787;
  _QWORD *v788;
  unint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  void *v794;
  id v795;
  _QWORD *v796;
  unint64_t v797;
  void *v798;
  uint64_t v799;
  uint64_t v800;
  void *v801;
  uint64_t v802;
  id v803;
  id v804;
  __int128 v805;
  uint64_t v806;
  uint64_t v807;
  void *v808;
  uint64_t v809;
  char *v810;
  char *v811;
  id v812;
  uint64_t v813;
  char *v814;
  char *v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  char *v820;
  _QWORD *v821;
  unint64_t v822;
  uint64_t v823;
  unint64_t v824;
  __int128 v825;
  __int128 v826;
  __int128 v827;
  __int128 v828;
  uint64_t v829;
  uint64_t v830;
  void *v831;
  id v832;
  _QWORD *v833;
  unint64_t v834;
  uint64_t v835;
  void *v836;
  void (*v837)(char *, _QWORD, uint64_t, int *);
  id v838;
  uint64_t v839;
  char *v840;
  char *v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  int v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  char *v850;
  __int128 v851;
  uint64_t result;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  char *v856;
  char *v857;
  char *v858;
  int *v859;
  int *v860;
  int *v861;
  _QWORD *v862;
  void *v863;
  uint64_t v864;
  uint64_t v865;
  char *v866;
  char *v867;
  uint64_t v868;
  uint64_t v869;
  _QWORD *v870;
  _QWORD *v871;
  int *v872;
  int *v873;
  _QWORD *v874;
  char *v875;
  int *v876;
  char *v877;
  _QWORD *__dst;
  _QWORD *__dsta;
  char *__dstb;
  _QWORD *__dstc;
  char *__dstd;
  void (*__dste)(char *, char *, void *);
  void (*__dstf)(char *, char *, void *);
  _QWORD *__dstg;
  void (*__dsth)(char *, char *, void *);
  char *__dsti;
  char *v888;
  char *v889;
  void *v890;
  void *v891;
  char *v892;
  char *v893;
  char *v894;
  void *v895;
  char *v896;
  int *v897;
  uint64_t v898;
  int *v899;
  uint64_t v900;
  int *v901;
  int *v902;
  int *v903;
  uint64_t v904;
  int *v905;
  uint64_t v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = type metadata accessor for FeedItem(0);
    v8 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      switch(v8)
      {
        case 0:
          v9 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v9;
          v10 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v10;
          *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
          v11 = a2 + 5;
          v12 = a2[6];
          swift_bridgeObjectRetain();
          if (v12 >= 0x11)
          {
            *(_QWORD *)(a1 + 40) = *v11;
            *(_QWORD *)(a1 + 48) = v12;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 40) = *(_OWORD *)v11;
          }
          goto LABEL_283;
        case 1:
          v92 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v92;
          v93 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v93;
          *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
          v94 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v94;
          v95 = a2[8];
          *(_QWORD *)(a1 + 56) = a2[7];
          *(_QWORD *)(a1 + 64) = v95;
          v96 = a2 + 9;
          v97 = a2[10];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v97 >= 0x11)
          {
            *(_QWORD *)(a1 + 72) = *v96;
            *(_QWORD *)(a1 + 80) = v97;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 72) = *(_OWORD *)v96;
          }
          goto LABEL_283;
        case 2:
          v18 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v18;
          v19 = (int *)type metadata accessor for FeedBannerAd();
          v20 = v19[5];
          v21 = a1 + v20;
          v22 = (uint64_t)a2 + v20;
          v23 = sub_1BB8721C0();
          v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
          *(_QWORD *)(a1 + v19[6]) = *(uint64_t *)((char *)a2 + v19[6]);
          v25 = v19[7];
          v26 = a1 + v25;
          v27 = (uint64_t)a2 + v25;
          *(_QWORD *)v26 = *(_QWORD *)v27;
          *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
          v28 = v19[8];
          v29 = a1 + v28;
          v30 = (uint64_t)a2 + v28;
          v31 = *(_QWORD *)(v30 + 8);
          if (v31 >= 0x11)
            goto LABEL_76;
          *(_OWORD *)v29 = *(_OWORD *)v30;
          goto LABEL_283;
        case 3:
          v907 = v7;
          v98 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v98;
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
          v99 = a2[5];
          *(_QWORD *)(a1 + 32) = a2[4];
          *(_QWORD *)(a1 + 40) = v99;
          *(_QWORD *)(a1 + 48) = a2[6];
          *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
          v897 = (int *)type metadata accessor for FeedHeadline(0);
          v100 = v897[10];
          v101 = (_BYTE *)(a1 + v100);
          v102 = (uint64_t)a2 + v100;
          *v101 = *((_BYTE *)a2 + v100);
          v101[1] = *((_BYTE *)a2 + v100 + 1);
          v103 = (int *)type metadata accessor for FeedHeadline.State(0);
          v104 = v103[6];
          __dstb = &v101[v104];
          v105 = (char *)(v102 + v104);
          v106 = (int *)type metadata accessor for SharedItem();
          v870 = (_QWORD *)*((_QWORD *)v106 - 1);
          v107 = (unsigned int (*)(char *, uint64_t, int *))v870[6];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v107(v105, 1, v106))
          {
            v108 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dstb, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          else
          {
            v343 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v343 - 8) + 16))(__dstb, v105, v343);
            __dstb[v106[5]] = v105[v106[5]];
            v344 = v106[6];
            v345 = *(void **)&v105[v344];
            *(_QWORD *)&__dstb[v344] = v345;
            v346 = v106[7];
            v892 = &__dstb[v346];
            v866 = &v105[v346];
            v347 = sub_1BB86C67C();
            v348 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v347 - 8) + 16);
            v349 = v345;
            v348(v892, v866, v347);
            ((void (*)(char *, _QWORD, uint64_t, int *))v870[7])(__dstb, 0, 1, v106);
          }
          v101[v103[7]] = *(_BYTE *)(v102 + v103[7]);
          v101[v103[8]] = *(_BYTE *)(v102 + v103[8]);
          v101[v103[9]] = *(_BYTE *)(v102 + v103[9]);
          v101[v103[10]] = *(_BYTE *)(v102 + v103[10]);
          v350 = v897[11];
          v351 = (void *)(a1 + v350);
          v352 = (char *)a2 + v350;
          v353 = sub_1BB871B24();
          v354 = *(_QWORD *)(v353 - 8);
          v7 = v907;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v354 + 48))(v352, 1, v353))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v351, v352, *(_QWORD *)(*(_QWORD *)(v355 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v354 + 16))(v351, v352, v353);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v354 + 56))(v351, 0, 1, v353);
          }
          v381 = v897[12];
          v382 = (_QWORD *)(a1 + v381);
          v383 = (uint64_t *)((char *)a2 + v381);
          v384 = v383[1];
          if (v384 >= 0x11)
          {
            *v382 = *v383;
            v382[1] = v384;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v382 = *(_OWORD *)v383;
          }
          v385 = v897[13];
          v386 = *(uint64_t *)((char *)a2 + v385);
          if (v386 >= 2)
          {
            if (v386 == 2)
            {
              *(_QWORD *)(a1 + v385) = 2;
            }
            else
            {
              *(_QWORD *)(a1 + v385) = v386;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)(a1 + v385) = v386;
          }
          v423 = v897[14];
          v424 = *(void **)((char *)a2 + v423);
          *(_QWORD *)(a1 + v423) = v424;
          v425 = v424;
          goto LABEL_283;
        case 4:
          v32 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v32;
          *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
          v33 = a2 + 3;
          v34 = a2[4];
          if (v34 >= 0x11)
          {
            *(_QWORD *)(a1 + 24) = *v33;
            *(_QWORD *)(a1 + 32) = v34;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v33;
          }
          v227 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v227;
          v228 = (int *)type metadata accessor for FeedWebEmbed();
          v229 = v228[8];
          v230 = a1 + v229;
          v231 = (uint64_t)a2 + v229;
          v232 = sub_1BB86C67C();
          v233 = *(_QWORD *)(v232 - 8);
          v234 = *(void (**)(uint64_t, uint64_t, uint64_t))(v233 + 16);
          swift_bridgeObjectRetain();
          v234(v230, v231, v232);
          v901 = v228;
          v235 = v228[9];
          v236 = (void *)(a1 + v235);
          v237 = (char *)a2 + v235;
          __dste = (void (*)(char *, char *, void *))v234;
          v890 = (void *)v232;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v233 + 48))((uint64_t)a2 + v235, 1, v232))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
          }
          else
          {
            v234((uint64_t)v236, (uint64_t)v237, v232);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v233 + 56))(v236, 0, 1, v232);
          }
          *(_QWORD *)(a1 + v228[10]) = *(uint64_t *)((char *)a2 + v228[10]);
          *(_QWORD *)(a1 + v228[11]) = *(uint64_t *)((char *)a2 + v228[11]);
          v295 = v228[12];
          v296 = (_QWORD *)(a1 + v295);
          v297 = (uint64_t *)((char *)a2 + v295);
          v298 = type metadata accessor for FeedHeadline(0);
          v299 = *(_QWORD *)(v298 - 8);
          v300 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v299 + 48);
          swift_retain();
          swift_retain();
          if (v300(v297, 1, v298))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v296, v297, *(_QWORD *)(*(_QWORD *)(v301 - 8) + 64));
          }
          else
          {
            v864 = v299;
            v909 = v7;
            v319 = v297[1];
            *v296 = *v297;
            v296[1] = v319;
            v296[2] = v297[2];
            *((_BYTE *)v296 + 24) = *((_BYTE *)v297 + 24);
            v320 = v297[5];
            v296[4] = v297[4];
            v296[5] = v320;
            v296[6] = v297[6];
            *((_BYTE *)v296 + 56) = *((_BYTE *)v297 + 56);
            v872 = (int *)v298;
            v321 = *(int *)(v298 + 40);
            v322 = (char *)v296 + v321;
            v323 = (char *)v297 + v321;
            *v322 = *((_BYTE *)v297 + v321);
            v322[1] = *((_BYTE *)v297 + v321 + 1);
            v324 = type metadata accessor for FeedHeadline.State(0);
            v325 = *(int *)(v324 + 24);
            v857 = &v322[v325];
            v860 = (int *)v324;
            v326 = &v323[v325];
            v327 = (int *)type metadata accessor for SharedItem();
            v854 = *((_QWORD *)v327 - 1);
            v328 = *(unsigned int (**)(char *, uint64_t, int *))(v854 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v328(v326, 1, v327))
            {
              v329 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v857, v326, *(_QWORD *)(*(_QWORD *)(v329 - 8) + 64));
            }
            else
            {
              v475 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v475 - 8) + 16))(v857, v326, v475);
              v857[v327[5]] = v326[v327[5]];
              v476 = v327[6];
              v477 = *(void **)&v326[v476];
              *(_QWORD *)&v857[v476] = v477;
              v478 = v327[7];
              v479 = &v857[v478];
              v480 = &v326[v478];
              v481 = v477;
              __dste(v479, v480, v890);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v854 + 56))(v857, 0, 1, v327);
            }
            v322[v860[7]] = v323[v860[7]];
            v322[v860[8]] = v323[v860[8]];
            v322[v860[9]] = v323[v860[9]];
            v322[v860[10]] = v323[v860[10]];
            v482 = v872[11];
            v483 = (char *)v296 + v482;
            v484 = (char *)v297 + v482;
            v485 = sub_1BB871B24();
            v486 = *(_QWORD *)(v485 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v486 + 48))(v484, 1, v485))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v483, v484, *(_QWORD *)(*(_QWORD *)(v487 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v486 + 16))(v483, v484, v485);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v486 + 56))(v483, 0, 1, v485);
            }
            v7 = v909;
            v501 = v872[12];
            v502 = (_QWORD *)((char *)v296 + v501);
            v503 = (_QWORD *)((char *)v297 + v501);
            v504 = v503[1];
            if (v504 >= 0x11)
            {
              *v502 = *v503;
              v502[1] = v504;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v502 = *(_OWORD *)v503;
            }
            v505 = v872[13];
            v506 = *(_QWORD *)((char *)v297 + v505);
            if (v506 >= 2)
            {
              if (v506 == 2)
              {
                *(_QWORD *)((char *)v296 + v505) = 2;
              }
              else
              {
                *(_QWORD *)((char *)v296 + v505) = v506;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(_QWORD *)((char *)v296 + v505) = v506;
            }
            v533 = v872[14];
            v534 = *(void **)((char *)v297 + v533);
            *(_QWORD *)((char *)v296 + v533) = v534;
            v535 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v864 + 56);
            v536 = v534;
            v535(v296, 0, 1, v872);
          }
          v537 = v901[13];
          v538 = (_QWORD *)(a1 + v537);
          v539 = (uint64_t *)((char *)a2 + v537);
          v540 = type metadata accessor for WebEmbedDataVisualization();
          v541 = *(_QWORD *)(v540 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v541 + 48))(v539, 1, v540))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v538, v539, *(_QWORD *)(*(_QWORD *)(v542 - 8) + 64));
          }
          else
          {
            v543 = swift_getEnumCaseMultiPayload();
            v544 = *v539;
            if (v543 == 1)
            {
              v545 = v539[1];
              *v538 = v544;
              v538[1] = v545;
              v546 = type metadata accessor for GenericDataVisualization();
              v547 = *(int *)(v546 + 20);
              v548 = (char *)v538 + v547;
              v910 = v7;
              v549 = (char *)v539 + v547;
              swift_bridgeObjectRetain();
              v550 = v549;
              v7 = v910;
              __dste(v548, v550, v890);
              *(_QWORD *)((char *)v538 + *(int *)(v546 + 24)) = *(uint64_t *)((char *)v539 + *(int *)(v546 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              *v538 = v544;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v541 + 56))(v538, 0, 1, v540);
          }
          *(_BYTE *)(a1 + v901[14]) = *((_BYTE *)a2 + v901[14]);
          goto LABEL_283;
        case 5:
          v109 = (void *)*a2;
          v110 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v110;
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
          *(_QWORD *)(a1 + 32) = a2[4];
          *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
          v111 = (void *)a2[7];
          *(_QWORD *)(a1 + 48) = a2[6];
          *(_QWORD *)(a1 + 56) = v111;
          *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
          v112 = a2[10];
          v113 = v109;
          swift_bridgeObjectRetain();
          v114 = v111;
          if (v112 == 1)
          {
            v115 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 88) = v115;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            *(_QWORD *)(a1 + 72) = a2[9];
            *(_QWORD *)(a1 + 80) = v112;
            v253 = a2[12];
            *(_QWORD *)(a1 + 88) = a2[11];
            *(_QWORD *)(a1 + 96) = v253;
            v255 = (void *)a2[13];
            v254 = a2[14];
            *(_QWORD *)(a1 + 104) = v255;
            *(_QWORD *)(a1 + 112) = v254;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v256 = v255;
          }
          v257 = a2 + 15;
          v258 = a2[16];
          if (v258 >= 0x11)
          {
            *(_QWORD *)(a1 + 120) = *v257;
            *(_QWORD *)(a1 + 128) = v258;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v257;
          }
          *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
          goto LABEL_283;
        case 6:
          v116 = *((unsigned __int8 *)a2 + 281);
          if (v116 == 2)
          {
            v395 = a2[1];
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = v395;
            *(_QWORD *)(a1 + 16) = a2[2];
            *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
            *(_QWORD *)(a1 + 32) = a2[4];
            *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
            v396 = a2[7];
            *(_QWORD *)(a1 + 48) = a2[6];
            *(_QWORD *)(a1 + 56) = v396;
            v397 = a2[9];
            *(_QWORD *)(a1 + 64) = a2[8];
            *(_QWORD *)(a1 + 72) = v397;
            v398 = a2[11];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v398 == 1)
            {
              v399 = (_OWORD *)(a1 + 80);
              v400 = a2 + 10;
              v401 = *((_OWORD *)a2 + 8);
              *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
              *(_OWORD *)(a1 + 128) = v401;
              *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
              goto LABEL_250;
            }
            *(_QWORD *)(a1 + 80) = a2[10];
            *(_QWORD *)(a1 + 88) = v398;
            v443 = a2[15];
            swift_bridgeObjectRetain();
            if (v443)
            {
              v444 = a2[16];
              *(_QWORD *)(a1 + 120) = v443;
              *(_QWORD *)(a1 + 128) = v444;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v443 - 8))(a1 + 96, (uint64_t)(a2 + 12), v443);
              *(_QWORD *)(a1 + 136) = a2[17];
            }
            else
            {
              v568 = *((_OWORD *)a2 + 7);
              *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
              *(_OWORD *)(a1 + 112) = v568;
              *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
            }
            *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
          }
          else
          {
            if (v116 == 1)
            {
              v117 = (void *)*a2;
              v118 = a2[1];
              *(_QWORD *)a1 = *a2;
              *(_QWORD *)(a1 + 8) = v118;
              *(_QWORD *)(a1 + 16) = a2[2];
              *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
              *(_QWORD *)(a1 + 32) = a2[4];
              *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
              v119 = (void *)a2[7];
              *(_QWORD *)(a1 + 48) = a2[6];
              *(_QWORD *)(a1 + 56) = v119;
              *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
              v120 = a2[10];
              v121 = v117;
              swift_bridgeObjectRetain();
              v122 = v119;
              if (v120 == 1)
              {
                v123 = *(_OWORD *)(a2 + 11);
                *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
                *(_OWORD *)(a1 + 88) = v123;
                *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
              }
              else
              {
                *(_QWORD *)(a1 + 72) = a2[9];
                *(_QWORD *)(a1 + 80) = v120;
                v431 = a2[12];
                *(_QWORD *)(a1 + 88) = a2[11];
                *(_QWORD *)(a1 + 96) = v431;
                v433 = (void *)a2[13];
                v432 = a2[14];
                *(_QWORD *)(a1 + 104) = v433;
                *(_QWORD *)(a1 + 112) = v432;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v434 = v433;
              }
              v435 = a2 + 15;
              v436 = a2[16];
              if (v436 >= 0x11)
              {
                *(_QWORD *)(a1 + 120) = *v435;
                *(_QWORD *)(a1 + 128) = v436;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 120) = *(_OWORD *)v435;
              }
              v400 = a2 + 18;
              v459 = (void *)a2[18];
              *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
              if (v459)
              {
                v460 = a2[19];
                v461 = a2[20];
                *(_QWORD *)(a1 + 144) = v459;
                *(_QWORD *)(a1 + 152) = v460;
                *(_QWORD *)(a1 + 160) = v461;
                *(_WORD *)(a1 + 168) = *((_WORD *)a2 + 84);
                *(_QWORD *)(a1 + 176) = a2[22];
                *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
                v462 = (void *)a2[25];
                *(_QWORD *)(a1 + 192) = a2[24];
                *(_QWORD *)(a1 + 200) = v462;
                *(_BYTE *)(a1 + 208) = *((_BYTE *)a2 + 208);
                v463 = a2[28];
                v464 = v459;
                swift_bridgeObjectRetain();
                v465 = v462;
                if (v463 == 1)
                {
                  v466 = *(_OWORD *)(a2 + 29);
                  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
                  *(_OWORD *)(a1 + 232) = v466;
                  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
                }
                else
                {
                  *(_QWORD *)(a1 + 216) = a2[27];
                  *(_QWORD *)(a1 + 224) = v463;
                  v521 = a2[30];
                  *(_QWORD *)(a1 + 232) = a2[29];
                  *(_QWORD *)(a1 + 240) = v521;
                  v523 = (void *)a2[31];
                  v522 = a2[32];
                  *(_QWORD *)(a1 + 248) = v523;
                  *(_QWORD *)(a1 + 256) = v522;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v524 = v523;
                }
                v525 = a2 + 33;
                v526 = a2[34];
                if (v526 >= 0x11)
                {
                  *(_QWORD *)(a1 + 264) = *v525;
                  *(_QWORD *)(a1 + 272) = v526;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(a1 + 264) = *(_OWORD *)v525;
                }
                *(_BYTE *)(a1 + 280) = *((_BYTE *)a2 + 280);
                goto LABEL_280;
              }
              v399 = (_OWORD *)(a1 + 144);
              v513 = *((_OWORD *)a2 + 16);
              *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
              *(_OWORD *)(a1 + 256) = v513;
              *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)a2 + 265);
              v514 = *((_OWORD *)a2 + 12);
              *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
              *(_OWORD *)(a1 + 192) = v514;
              v515 = *((_OWORD *)a2 + 14);
              *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
              *(_OWORD *)(a1 + 224) = v515;
LABEL_250:
              v516 = v400[1];
              *v399 = *v400;
              v399[1] = v516;
              goto LABEL_280;
            }
            v402 = (void *)*a2;
            v403 = a2[1];
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = v403;
            *(_QWORD *)(a1 + 16) = a2[2];
            *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
            *(_QWORD *)(a1 + 32) = a2[4];
            *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
            v404 = (void *)a2[7];
            *(_QWORD *)(a1 + 48) = a2[6];
            *(_QWORD *)(a1 + 56) = v404;
            *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
            v405 = a2[10];
            v406 = v402;
            swift_bridgeObjectRetain();
            v407 = v404;
            if (v405 == 1)
            {
              v408 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 88) = v408;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              *(_QWORD *)(a1 + 72) = a2[9];
              *(_QWORD *)(a1 + 80) = v405;
              v445 = a2[12];
              *(_QWORD *)(a1 + 88) = a2[11];
              *(_QWORD *)(a1 + 96) = v445;
              v447 = (void *)a2[13];
              v446 = a2[14];
              *(_QWORD *)(a1 + 104) = v447;
              *(_QWORD *)(a1 + 112) = v446;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v448 = v447;
            }
            v449 = a2 + 15;
            v450 = a2[16];
            if (v450 >= 0x11)
            {
              *(_QWORD *)(a1 + 120) = *v449;
              *(_QWORD *)(a1 + 128) = v450;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v449;
            }
            *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
          }
LABEL_280:
          *(_BYTE *)(a1 + 281) = v116;
LABEL_283:
          swift_storeEnumTagMultiPayload();
LABEL_284:
          sub_1BAB4832C();
          v571 = *(int *)(v570 + 48);
          v572 = (char *)(a1 + v571);
          v573 = (char *)a2 + v571;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v574 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v574;
              v575 = *((_QWORD *)v573 + 3);
              *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
              *((_QWORD *)v572 + 3) = v575;
              v572[32] = v573[32];
              v576 = v573 + 40;
              v577 = *((_QWORD *)v573 + 6);
              swift_bridgeObjectRetain();
              if (v577 >= 0x11)
              {
                *((_QWORD *)v572 + 5) = *v576;
                *((_QWORD *)v572 + 6) = v577;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v572 + 40) = *(_OWORD *)v576;
              }
              goto LABEL_425;
            case 1u:
              v615 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v615;
              v616 = *((_QWORD *)v573 + 3);
              *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
              *((_QWORD *)v572 + 3) = v616;
              v572[32] = v573[32];
              v617 = *((_QWORD *)v573 + 6);
              *((_QWORD *)v572 + 5) = *((_QWORD *)v573 + 5);
              *((_QWORD *)v572 + 6) = v617;
              v618 = *((_QWORD *)v573 + 8);
              *((_QWORD *)v572 + 7) = *((_QWORD *)v573 + 7);
              *((_QWORD *)v572 + 8) = v618;
              v619 = v573 + 72;
              v620 = *((_QWORD *)v573 + 10);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v620 >= 0x11)
              {
                *((_QWORD *)v572 + 9) = *v619;
                *((_QWORD *)v572 + 10) = v620;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v572 + 72) = *(_OWORD *)v619;
              }
              goto LABEL_425;
            case 2u:
              v578 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v578;
              v579 = (int *)type metadata accessor for FeedBannerAd();
              v580 = v579[5];
              v581 = &v572[v580];
              v582 = &v573[v580];
              v583 = sub_1BB8721C0();
              v584 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v583 - 8) + 16);
              swift_bridgeObjectRetain();
              v584(v581, v582, v583);
              *(_QWORD *)&v572[v579[6]] = *(_QWORD *)&v573[v579[6]];
              v585 = v579[7];
              v586 = &v572[v585];
              v587 = &v573[v585];
              *(_QWORD *)v586 = *(_QWORD *)v587;
              v586[8] = v587[8];
              v588 = v579[8];
              v589 = &v572[v588];
              v590 = &v573[v588];
              v591 = *((_QWORD *)v590 + 1);
              if (v591 >= 0x11)
                goto LABEL_320;
              *(_OWORD *)v589 = *(_OWORD *)v590;
              goto LABEL_425;
            case 3u:
              v621 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v621;
              *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
              v572[24] = v573[24];
              v622 = *((_QWORD *)v573 + 5);
              *((_QWORD *)v572 + 4) = *((_QWORD *)v573 + 4);
              *((_QWORD *)v572 + 5) = v622;
              *((_QWORD *)v572 + 6) = *((_QWORD *)v573 + 6);
              v572[56] = v573[56];
              v903 = (int *)type metadata accessor for FeedHeadline(0);
              v623 = v903[10];
              v624 = &v572[v623];
              v625 = &v573[v623];
              *v624 = v573[v623];
              v624[1] = v573[v623 + 1];
              v626 = (int *)type metadata accessor for FeedHeadline.State(0);
              v627 = v626[6];
              v875 = &v624[v627];
              v628 = &v625[v627];
              v629 = (int *)type metadata accessor for SharedItem();
              v868 = *((_QWORD *)v629 - 1);
              v630 = *(unsigned int (**)(char *, uint64_t, int *))(v868 + 48);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              if (v630(v628, 1, v629))
              {
                v631 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v875, v628, *(_QWORD *)(*(_QWORD *)(v631 - 8) + 64));
              }
              else
              {
                v741 = sub_1BB86C8B0();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v741 - 8) + 16))(v875, v628, v741);
                v875[v629[5]] = v628[v629[5]];
                v742 = v629[6];
                v863 = *(void **)&v628[v742];
                *(_QWORD *)&v875[v742] = v863;
                v743 = v629[7];
                __dsti = &v628[v743];
                v896 = &v875[v743];
                v744 = sub_1BB86C67C();
                v745 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v744 - 8) + 16);
                v746 = v863;
                v745(v896, __dsti, v744);
                (*(void (**)(char *, _QWORD, uint64_t, int *))(v868 + 56))(v875, 0, 1, v629);
              }
              v624[v626[7]] = v625[v626[7]];
              v624[v626[8]] = v625[v626[8]];
              v624[v626[9]] = v625[v626[9]];
              v624[v626[10]] = v625[v626[10]];
              v747 = v903[11];
              v748 = &v572[v747];
              v749 = &v573[v747];
              v750 = sub_1BB871B24();
              v751 = *(_QWORD *)(v750 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v751 + 48))(v749, 1, v750))
              {
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
                memcpy(v748, v749, *(_QWORD *)(*(_QWORD *)(v752 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v751 + 16))(v748, v749, v750);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v748, 0, 1, v750);
              }
              v759 = v903[12];
              v760 = &v572[v759];
              v761 = &v573[v759];
              v762 = *((_QWORD *)v761 + 1);
              if (v762 >= 0x11)
              {
                *(_QWORD *)v760 = *(_QWORD *)v761;
                *((_QWORD *)v760 + 1) = v762;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)v760 = *(_OWORD *)v761;
              }
              v763 = v903[13];
              v764 = *(_QWORD *)&v573[v763];
              if (v764 >= 2)
              {
                if (v764 == 2)
                {
                  *(_QWORD *)&v572[v763] = 2;
                }
                else
                {
                  *(_QWORD *)&v572[v763] = v764;
                  swift_unknownObjectRetain();
                }
              }
              else
              {
                *(_QWORD *)&v572[v763] = v764;
              }
              v780 = v903[14];
              v781 = *(void **)&v573[v780];
              *(_QWORD *)&v572[v780] = v781;
              v782 = v781;
              goto LABEL_425;
            case 4u:
              v592 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v592;
              v572[16] = v573[16];
              v593 = v573 + 24;
              v594 = *((_QWORD *)v573 + 4);
              if (v594 >= 0x11)
              {
                *((_QWORD *)v572 + 3) = *v593;
                *((_QWORD *)v572 + 4) = v594;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v572 + 24) = *(_OWORD *)v593;
              }
              v682 = *((_QWORD *)v573 + 6);
              *((_QWORD *)v572 + 5) = *((_QWORD *)v573 + 5);
              *((_QWORD *)v572 + 6) = v682;
              v683 = (int *)type metadata accessor for FeedWebEmbed();
              v684 = v683[8];
              v685 = &v572[v684];
              v686 = &v573[v684];
              v687 = sub_1BB86C67C();
              v688 = *(_QWORD *)(v687 - 8);
              v689 = *(void (**)(char *, char *, void *))(v688 + 16);
              v690 = (void *)v687;
              swift_bridgeObjectRetain();
              v689(v685, v686, v690);
              v905 = v683;
              v691 = v683[9];
              v692 = &v572[v691];
              v693 = &v573[v691];
              __dsth = v689;
              v895 = v690;
              if ((*(unsigned int (**)(char *, uint64_t, void *))(v688 + 48))(&v573[v691], 1, v690))
              {
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
                memcpy(v692, v693, *(_QWORD *)(*(_QWORD *)(v694 - 8) + 64));
              }
              else
              {
                v689(v692, v693, v690);
                (*(void (**)(char *, _QWORD, uint64_t, void *))(v688 + 56))(v692, 0, 1, v690);
              }
              *(_QWORD *)&v572[v683[10]] = *(_QWORD *)&v573[v683[10]];
              *(_QWORD *)&v572[v683[11]] = *(_QWORD *)&v573[v683[11]];
              v717 = v683[12];
              v718 = &v572[v717];
              v719 = &v573[v717];
              v720 = type metadata accessor for FeedHeadline(0);
              v721 = *(_QWORD *)(v720 - 8);
              v722 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v721 + 48);
              swift_retain();
              swift_retain();
              if (v722(v719, 1, v720))
              {
                sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
                memcpy(v718, v719, *(_QWORD *)(*(_QWORD *)(v723 - 8) + 64));
              }
              else
              {
                v869 = v721;
                v876 = (int *)v720;
                v729 = *((_QWORD *)v719 + 1);
                *(_QWORD *)v718 = *(_QWORD *)v719;
                *((_QWORD *)v718 + 1) = v729;
                *((_QWORD *)v718 + 2) = *((_QWORD *)v719 + 2);
                v718[24] = v719[24];
                v730 = *((_QWORD *)v719 + 5);
                *((_QWORD *)v718 + 4) = *((_QWORD *)v719 + 4);
                *((_QWORD *)v718 + 5) = v730;
                *((_QWORD *)v718 + 6) = *((_QWORD *)v719 + 6);
                v718[56] = v719[56];
                v731 = *(int *)(v720 + 40);
                v732 = &v718[v731];
                v862 = v719;
                v733 = &v719[v731];
                *v732 = v719[v731];
                v732[1] = v719[v731 + 1];
                v734 = type metadata accessor for FeedHeadline.State(0);
                v735 = *(int *)(v734 + 24);
                v856 = &v732[v735];
                v859 = (int *)v734;
                v736 = &v733[v735];
                v737 = (int *)type metadata accessor for SharedItem();
                v853 = *((_QWORD *)v737 - 1);
                v738 = *(unsigned int (**)(char *, uint64_t, int *))(v853 + 48);
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                swift_unknownObjectRetain();
                if (v738(v736, 1, v737))
                {
                  v739 = type metadata accessor for FeedItem.SharedState(0);
                  memcpy(v856, v736, *(_QWORD *)(*(_QWORD *)(v739 - 8) + 64));
                }
                else
                {
                  v806 = sub_1BB86C8B0();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v806 - 8) + 16))(v856, v736, v806);
                  v856[v737[5]] = v736[v737[5]];
                  v807 = v737[6];
                  v808 = *(void **)&v736[v807];
                  *(_QWORD *)&v856[v807] = v808;
                  v809 = v737[7];
                  v810 = &v856[v809];
                  v811 = &v736[v809];
                  v812 = v808;
                  __dsth(v810, v811, v895);
                  (*(void (**)(char *, _QWORD, uint64_t, int *))(v853 + 56))(v856, 0, 1, v737);
                }
                v732[v859[7]] = v733[v859[7]];
                v732[v859[8]] = v733[v859[8]];
                v732[v859[9]] = v733[v859[9]];
                v732[v859[10]] = v733[v859[10]];
                v813 = v876[11];
                v814 = &v718[v813];
                v815 = (char *)v862 + v813;
                v816 = sub_1BB871B24();
                v817 = *(_QWORD *)(v816 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v817 + 48))(v815, 1, v816))
                {
                  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
                  memcpy(v814, v815, *(_QWORD *)(*(_QWORD *)(v818 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(v817 + 16))(v814, v815, v816);
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v817 + 56))(v814, 0, 1, v816);
                }
                v819 = v876[12];
                v820 = &v718[v819];
                v821 = (_QWORD *)((char *)v862 + v819);
                v822 = v821[1];
                if (v822 >= 0x11)
                {
                  *(_QWORD *)v820 = *v821;
                  *((_QWORD *)v820 + 1) = v822;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)v820 = *(_OWORD *)v821;
                }
                v823 = v876[13];
                v824 = *(_QWORD *)((char *)v862 + v823);
                if (v824 >= 2)
                {
                  if (v824 == 2)
                  {
                    *(_QWORD *)&v718[v823] = 2;
                  }
                  else
                  {
                    *(_QWORD *)&v718[v823] = v824;
                    swift_unknownObjectRetain();
                  }
                }
                else
                {
                  *(_QWORD *)&v718[v823] = v824;
                }
                v835 = v876[14];
                v836 = *(void **)((char *)v862 + v835);
                *(_QWORD *)&v718[v835] = v836;
                v837 = *(void (**)(char *, _QWORD, uint64_t, int *))(v869 + 56);
                v838 = v836;
                v837(v718, 0, 1, v876);
              }
              v839 = v905[13];
              v840 = &v572[v839];
              v841 = &v573[v839];
              v842 = type metadata accessor for WebEmbedDataVisualization();
              v843 = *(_QWORD *)(v842 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v843 + 48))(v841, 1, v842))
              {
                sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
                memcpy(v840, v841, *(_QWORD *)(*(_QWORD *)(v844 - 8) + 64));
              }
              else
              {
                v845 = swift_getEnumCaseMultiPayload();
                v846 = *(_QWORD *)v841;
                if (v845 == 1)
                {
                  v847 = *((_QWORD *)v841 + 1);
                  *(_QWORD *)v840 = v846;
                  *((_QWORD *)v840 + 1) = v847;
                  v848 = type metadata accessor for GenericDataVisualization();
                  v849 = *(int *)(v848 + 20);
                  v877 = &v840[v849];
                  v850 = &v841[v849];
                  swift_bridgeObjectRetain();
                  __dsth(v877, v850, v895);
                  *(_QWORD *)&v840[*(int *)(v848 + 24)] = *(_QWORD *)&v841[*(int *)(v848 + 24)];
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_QWORD *)v840 = v846;
                  swift_retain();
                }
                swift_storeEnumTagMultiPayload();
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v843 + 56))(v840, 0, 1, v842);
              }
              v572[v905[14]] = v573[v905[14]];
              goto LABEL_425;
            case 5u:
              v632 = *(void **)v573;
              v633 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v633;
              *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
              *((_WORD *)v572 + 12) = *((_WORD *)v573 + 12);
              *((_QWORD *)v572 + 4) = *((_QWORD *)v573 + 4);
              v572[40] = v573[40];
              v634 = (void *)*((_QWORD *)v573 + 7);
              *((_QWORD *)v572 + 6) = *((_QWORD *)v573 + 6);
              *((_QWORD *)v572 + 7) = v634;
              v572[64] = v573[64];
              v635 = *((_QWORD *)v573 + 10);
              v636 = v632;
              swift_bridgeObjectRetain();
              v637 = v634;
              if (v635 == 1)
              {
                v638 = *(_OWORD *)(v573 + 88);
                *(_OWORD *)(v572 + 72) = *(_OWORD *)(v573 + 72);
                *(_OWORD *)(v572 + 88) = v638;
                *(_OWORD *)(v572 + 104) = *(_OWORD *)(v573 + 104);
              }
              else
              {
                *((_QWORD *)v572 + 9) = *((_QWORD *)v573 + 9);
                *((_QWORD *)v572 + 10) = v635;
                v696 = *((_QWORD *)v573 + 12);
                *((_QWORD *)v572 + 11) = *((_QWORD *)v573 + 11);
                *((_QWORD *)v572 + 12) = v696;
                v698 = (void *)*((_QWORD *)v573 + 13);
                v697 = *((_QWORD *)v573 + 14);
                *((_QWORD *)v572 + 13) = v698;
                *((_QWORD *)v572 + 14) = v697;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v699 = v698;
              }
              v700 = v573 + 120;
              v701 = *((_QWORD *)v573 + 16);
              if (v701 >= 0x11)
              {
                *((_QWORD *)v572 + 15) = *v700;
                *((_QWORD *)v572 + 16) = v701;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v572 + 120) = *(_OWORD *)v700;
              }
              v572[136] = v573[136];
              goto LABEL_425;
            case 6u:
              v639 = v573[281];
              if (v639 == 2)
              {
                v766 = *((_QWORD *)v573 + 1);
                *(_QWORD *)v572 = *(_QWORD *)v573;
                *((_QWORD *)v572 + 1) = v766;
                *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
                v572[24] = v573[24];
                *((_QWORD *)v572 + 4) = *((_QWORD *)v573 + 4);
                v572[40] = v573[40];
                v767 = *((_QWORD *)v573 + 7);
                *((_QWORD *)v572 + 6) = *((_QWORD *)v573 + 6);
                *((_QWORD *)v572 + 7) = v767;
                v768 = *((_QWORD *)v573 + 9);
                *((_QWORD *)v572 + 8) = *((_QWORD *)v573 + 8);
                *((_QWORD *)v572 + 9) = v768;
                v769 = *((_QWORD *)v573 + 11);
                swift_bridgeObjectRetain();
                swift_unknownObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v769 == 1)
                {
                  v770 = v572 + 80;
                  v771 = v573 + 80;
                  v772 = *((_OWORD *)v573 + 8);
                  *((_OWORD *)v572 + 7) = *((_OWORD *)v573 + 7);
                  *((_OWORD *)v572 + 8) = v772;
                  v572[144] = v573[144];
                  goto LABEL_407;
                }
                *((_QWORD *)v572 + 10) = *((_QWORD *)v573 + 10);
                *((_QWORD *)v572 + 11) = v769;
                v790 = *((_QWORD *)v573 + 15);
                swift_bridgeObjectRetain();
                if (v790)
                {
                  v791 = *((_QWORD *)v573 + 16);
                  *((_QWORD *)v572 + 15) = v790;
                  *((_QWORD *)v572 + 16) = v791;
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v790 - 8))((uint64_t)(v572 + 96), (uint64_t)(v573 + 96), v790);
                  *((_QWORD *)v572 + 17) = *((_QWORD *)v573 + 17);
                }
                else
                {
                  v851 = *((_OWORD *)v573 + 7);
                  *((_OWORD *)v572 + 6) = *((_OWORD *)v573 + 6);
                  *((_OWORD *)v572 + 7) = v851;
                  *((_OWORD *)v572 + 8) = *((_OWORD *)v573 + 8);
                }
                v572[144] = v573[144];
              }
              else
              {
                if (v639 == 1)
                {
                  v640 = *(void **)v573;
                  v641 = *((_QWORD *)v573 + 1);
                  *(_QWORD *)v572 = *(_QWORD *)v573;
                  *((_QWORD *)v572 + 1) = v641;
                  *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
                  *((_WORD *)v572 + 12) = *((_WORD *)v573 + 12);
                  *((_QWORD *)v572 + 4) = *((_QWORD *)v573 + 4);
                  v572[40] = v573[40];
                  v642 = (void *)*((_QWORD *)v573 + 7);
                  *((_QWORD *)v572 + 6) = *((_QWORD *)v573 + 6);
                  *((_QWORD *)v572 + 7) = v642;
                  v572[64] = v573[64];
                  v643 = *((_QWORD *)v573 + 10);
                  v644 = v640;
                  swift_bridgeObjectRetain();
                  v645 = v642;
                  if (v643 == 1)
                  {
                    v646 = *(_OWORD *)(v573 + 88);
                    *(_OWORD *)(v572 + 72) = *(_OWORD *)(v573 + 72);
                    *(_OWORD *)(v572 + 88) = v646;
                    *(_OWORD *)(v572 + 104) = *(_OWORD *)(v573 + 104);
                  }
                  else
                  {
                    *((_QWORD *)v572 + 9) = *((_QWORD *)v573 + 9);
                    *((_QWORD *)v572 + 10) = v643;
                    v784 = *((_QWORD *)v573 + 12);
                    *((_QWORD *)v572 + 11) = *((_QWORD *)v573 + 11);
                    *((_QWORD *)v572 + 12) = v784;
                    v786 = (void *)*((_QWORD *)v573 + 13);
                    v785 = *((_QWORD *)v573 + 14);
                    *((_QWORD *)v572 + 13) = v786;
                    *((_QWORD *)v572 + 14) = v785;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v787 = v786;
                  }
                  v788 = v573 + 120;
                  v789 = *((_QWORD *)v573 + 16);
                  if (v789 >= 0x11)
                  {
                    *((_QWORD *)v572 + 15) = *v788;
                    *((_QWORD *)v572 + 16) = v789;
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v572 + 120) = *(_OWORD *)v788;
                  }
                  v771 = v573 + 144;
                  v798 = (void *)*((_QWORD *)v573 + 18);
                  v572[136] = v573[136];
                  if (v798)
                  {
                    v799 = *((_QWORD *)v573 + 19);
                    v800 = *((_QWORD *)v573 + 20);
                    *((_QWORD *)v572 + 18) = v798;
                    *((_QWORD *)v572 + 19) = v799;
                    *((_QWORD *)v572 + 20) = v800;
                    *((_WORD *)v572 + 84) = *((_WORD *)v573 + 84);
                    *((_QWORD *)v572 + 22) = *((_QWORD *)v573 + 22);
                    v572[184] = v573[184];
                    v801 = (void *)*((_QWORD *)v573 + 25);
                    *((_QWORD *)v572 + 24) = *((_QWORD *)v573 + 24);
                    *((_QWORD *)v572 + 25) = v801;
                    v572[208] = v573[208];
                    v802 = *((_QWORD *)v573 + 28);
                    v803 = v798;
                    swift_bridgeObjectRetain();
                    v804 = v801;
                    if (v802 == 1)
                    {
                      v805 = *(_OWORD *)(v573 + 232);
                      *(_OWORD *)(v572 + 216) = *(_OWORD *)(v573 + 216);
                      *(_OWORD *)(v572 + 232) = v805;
                      *(_OWORD *)(v572 + 248) = *(_OWORD *)(v573 + 248);
                    }
                    else
                    {
                      *((_QWORD *)v572 + 27) = *((_QWORD *)v573 + 27);
                      *((_QWORD *)v572 + 28) = v802;
                      v829 = *((_QWORD *)v573 + 30);
                      *((_QWORD *)v572 + 29) = *((_QWORD *)v573 + 29);
                      *((_QWORD *)v572 + 30) = v829;
                      v831 = (void *)*((_QWORD *)v573 + 31);
                      v830 = *((_QWORD *)v573 + 32);
                      *((_QWORD *)v572 + 31) = v831;
                      *((_QWORD *)v572 + 32) = v830;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v832 = v831;
                    }
                    v833 = v573 + 264;
                    v834 = *((_QWORD *)v573 + 34);
                    if (v834 >= 0x11)
                    {
                      *((_QWORD *)v572 + 33) = *v833;
                      *((_QWORD *)v572 + 34) = v834;
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)(v572 + 264) = *(_OWORD *)v833;
                    }
                    v572[280] = v573[280];
                    goto LABEL_422;
                  }
                  v770 = v572 + 144;
                  v825 = *((_OWORD *)v573 + 16);
                  *((_OWORD *)v572 + 15) = *((_OWORD *)v573 + 15);
                  *((_OWORD *)v572 + 16) = v825;
                  *(_OWORD *)(v572 + 265) = *(_OWORD *)(v573 + 265);
                  v826 = *((_OWORD *)v573 + 12);
                  *((_OWORD *)v572 + 11) = *((_OWORD *)v573 + 11);
                  *((_OWORD *)v572 + 12) = v826;
                  v827 = *((_OWORD *)v573 + 14);
                  *((_OWORD *)v572 + 13) = *((_OWORD *)v573 + 13);
                  *((_OWORD *)v572 + 14) = v827;
LABEL_407:
                  v828 = v771[1];
                  *v770 = *v771;
                  v770[1] = v828;
                  goto LABEL_422;
                }
                v773 = *(void **)v573;
                v774 = *((_QWORD *)v573 + 1);
                *(_QWORD *)v572 = *(_QWORD *)v573;
                *((_QWORD *)v572 + 1) = v774;
                *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
                *((_WORD *)v572 + 12) = *((_WORD *)v573 + 12);
                *((_QWORD *)v572 + 4) = *((_QWORD *)v573 + 4);
                v572[40] = v573[40];
                v775 = (void *)*((_QWORD *)v573 + 7);
                *((_QWORD *)v572 + 6) = *((_QWORD *)v573 + 6);
                *((_QWORD *)v572 + 7) = v775;
                v572[64] = v573[64];
                v776 = *((_QWORD *)v573 + 10);
                v777 = v773;
                swift_bridgeObjectRetain();
                v778 = v775;
                if (v776 == 1)
                {
                  v779 = *(_OWORD *)(v573 + 88);
                  *(_OWORD *)(v572 + 72) = *(_OWORD *)(v573 + 72);
                  *(_OWORD *)(v572 + 88) = v779;
                  *(_OWORD *)(v572 + 104) = *(_OWORD *)(v573 + 104);
                }
                else
                {
                  *((_QWORD *)v572 + 9) = *((_QWORD *)v573 + 9);
                  *((_QWORD *)v572 + 10) = v776;
                  v792 = *((_QWORD *)v573 + 12);
                  *((_QWORD *)v572 + 11) = *((_QWORD *)v573 + 11);
                  *((_QWORD *)v572 + 12) = v792;
                  v794 = (void *)*((_QWORD *)v573 + 13);
                  v793 = *((_QWORD *)v573 + 14);
                  *((_QWORD *)v572 + 13) = v794;
                  *((_QWORD *)v572 + 14) = v793;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v795 = v794;
                }
                v796 = v573 + 120;
                v797 = *((_QWORD *)v573 + 16);
                if (v797 >= 0x11)
                {
                  *((_QWORD *)v572 + 15) = *v796;
                  *((_QWORD *)v572 + 16) = v797;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v572 + 120) = *(_OWORD *)v796;
                }
                v572[136] = v573[136];
              }
LABEL_422:
              v572[281] = v639;
LABEL_425:
              swift_storeEnumTagMultiPayload();
LABEL_426:
              swift_storeEnumTagMultiPayload();
              return a1;
            case 7u:
              v647 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v647;
              *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
              v572[24] = v573[24];
              *((_QWORD *)v572 + 4) = *((_QWORD *)v573 + 4);
              v572[40] = v573[40];
              v648 = *((_QWORD *)v573 + 7);
              *((_QWORD *)v572 + 6) = *((_QWORD *)v573 + 6);
              *((_QWORD *)v572 + 7) = v648;
              v649 = *((_QWORD *)v573 + 9);
              *((_QWORD *)v572 + 8) = *((_QWORD *)v573 + 8);
              *((_QWORD *)v572 + 9) = v649;
              v650 = *((_QWORD *)v573 + 11);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v650 == 1)
              {
                v651 = *((_OWORD *)v573 + 8);
                *((_OWORD *)v572 + 7) = *((_OWORD *)v573 + 7);
                *((_OWORD *)v572 + 8) = v651;
                v572[144] = v573[144];
                v652 = *((_OWORD *)v573 + 6);
                *((_OWORD *)v572 + 5) = *((_OWORD *)v573 + 5);
                *((_OWORD *)v572 + 6) = v652;
              }
              else
              {
                *((_QWORD *)v572 + 10) = *((_QWORD *)v573 + 10);
                *((_QWORD *)v572 + 11) = v650;
                v702 = *((_QWORD *)v573 + 15);
                swift_bridgeObjectRetain();
                if (v702)
                {
                  v703 = *((_QWORD *)v573 + 16);
                  *((_QWORD *)v572 + 15) = v702;
                  *((_QWORD *)v572 + 16) = v703;
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v702 - 8))((uint64_t)(v572 + 96), (uint64_t)(v573 + 96), v702);
                  *((_QWORD *)v572 + 17) = *((_QWORD *)v573 + 17);
                }
                else
                {
                  v783 = *((_OWORD *)v573 + 7);
                  *((_OWORD *)v572 + 6) = *((_OWORD *)v573 + 6);
                  *((_OWORD *)v572 + 7) = v783;
                  *((_OWORD *)v572 + 8) = *((_OWORD *)v573 + 8);
                }
                v572[144] = v573[144];
              }
              goto LABEL_425;
            case 8u:
              v653 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v653;
              v654 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
              v655 = &v572[v654];
              v656 = &v573[v654];
              v657 = *(_QWORD *)&v573[v654 + 8];
              *(_QWORD *)v655 = *(_QWORD *)&v573[v654];
              *((_QWORD *)v655 + 1) = v657;
              v658 = *(_QWORD *)&v573[v654 + 24];
              *((_QWORD *)v655 + 2) = *(_QWORD *)&v573[v654 + 16];
              *((_QWORD *)v655 + 3) = v658;
              v659 = type metadata accessor for FormatCustomItem.Resolved();
              v660 = *(int *)(v659 + 24);
              v894 = &v655[v660];
              v904 = v659;
              v661 = &v656[v660];
              v662 = type metadata accessor for FormatCustomItem.Action();
              __dstg = *(_QWORD **)(v662 - 8);
              v663 = (unsigned int (*)(char *, uint64_t, uint64_t))__dstg[6];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v663(v661, 1, v662))
              {
                sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
                memcpy(v894, v661, *(_QWORD *)(*(_QWORD *)(v664 - 8) + 64));
              }
              else
              {
                v753 = sub_1BB86C67C();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v753 - 8) + 16))(v894, v661, v753);
                ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstg[7])(v894, 0, 1, v662);
              }
              *(_QWORD *)&v655[*(int *)(v904 + 28)] = *(_QWORD *)&v656[*(int *)(v904 + 28)];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              goto LABEL_426;
            case 9u:
              v595 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v595;
              v596 = *((_QWORD *)v573 + 3);
              *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
              *((_QWORD *)v572 + 3) = v596;
              v597 = *((_QWORD *)v573 + 7);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v597)
              {
                v598 = *((_QWORD *)v573 + 8);
                *((_QWORD *)v572 + 7) = v597;
                *((_QWORD *)v572 + 8) = v598;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v597 - 8))((uint64_t)(v572 + 32), (uint64_t)(v573 + 32), v597);
              }
              else
              {
                v712 = *((_OWORD *)v573 + 3);
                *((_OWORD *)v572 + 2) = *((_OWORD *)v573 + 2);
                *((_OWORD *)v572 + 3) = v712;
                *((_QWORD *)v572 + 8) = *((_QWORD *)v573 + 8);
              }
              v713 = v572 + 72;
              v714 = v573 + 72;
              v715 = *((_QWORD *)v573 + 12);
              if (v715)
              {
                v716 = *((_QWORD *)v573 + 13);
                *((_QWORD *)v572 + 12) = v715;
                *((_QWORD *)v572 + 13) = v716;
                (**(void (***)(_OWORD *, _OWORD *))(v715 - 8))(v713, v714);
              }
              else
              {
                v724 = *(_OWORD *)(v573 + 88);
                *v713 = *v714;
                *(_OWORD *)(v572 + 88) = v724;
                *((_QWORD *)v572 + 13) = *((_QWORD *)v573 + 13);
              }
              v725 = v572 + 112;
              v726 = v573 + 112;
              v727 = *((_QWORD *)v573 + 17);
              if (v727)
              {
                v728 = *((_QWORD *)v573 + 18);
                *((_QWORD *)v572 + 17) = v727;
                *((_QWORD *)v572 + 18) = v728;
                (**(void (***)(_OWORD *, _OWORD *))(v727 - 8))(v725, v726);
              }
              else
              {
                v740 = *((_OWORD *)v573 + 8);
                *v725 = *v726;
                *((_OWORD *)v572 + 8) = v740;
                *((_QWORD *)v572 + 18) = *((_QWORD *)v573 + 18);
              }
              goto LABEL_425;
            case 0xAu:
              v665 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v665;
              v666 = (int *)type metadata accessor for FeedEngagementBanner();
              v667 = v666[5];
              v668 = &v572[v667];
              v669 = &v573[v667];
              v670 = sub_1BB86EDAC();
              v671 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v670 - 8) + 16);
              swift_bridgeObjectRetain();
              v671(v668, v669, v670);
              *(_QWORD *)&v572[v666[6]] = *(_QWORD *)&v573[v666[6]];
              v672 = v666[7];
              v673 = &v572[v672];
              v674 = &v573[v672];
              *(_QWORD *)v673 = *(_QWORD *)v674;
              v673[8] = v674[8];
              v675 = v666[8];
              v589 = &v572[v675];
              v590 = &v573[v675];
              v591 = *((_QWORD *)v590 + 1);
              if (v591 >= 0x11)
              {
LABEL_320:
                *(_QWORD *)v589 = *(_QWORD *)v590;
                *((_QWORD *)v589 + 1) = v591;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)v589 = *(_OWORD *)v590;
              }
              goto LABEL_425;
            case 0xBu:
              *(_QWORD *)v572 = *(_QWORD *)v573;
              swift_retain();
              goto LABEL_425;
            case 0xCu:
              v599 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v599;
              v600 = *((_QWORD *)v573 + 3);
              *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
              *((_QWORD *)v572 + 3) = v600;
              v572[32] = v573[32];
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              goto LABEL_425;
            case 0xDu:
              v676 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v676;
              v572[16] = v573[16];
              v677 = v573 + 24;
              v678 = *((_QWORD *)v573 + 4);
              if (v678 >= 0x11)
              {
                *((_QWORD *)v572 + 3) = *v677;
                *((_QWORD *)v572 + 4) = v678;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v572 + 24) = *(_OWORD *)v677;
              }
              v704 = *((_QWORD *)v573 + 6);
              *((_QWORD *)v572 + 5) = *((_QWORD *)v573 + 5);
              *((_QWORD *)v572 + 6) = v704;
              v705 = (void *)*((_QWORD *)v573 + 8);
              *((_QWORD *)v572 + 7) = *((_QWORD *)v573 + 7);
              *((_QWORD *)v572 + 8) = v705;
              v572[72] = v573[72];
              *((_QWORD *)v572 + 10) = *((_QWORD *)v573 + 10);
              v706 = *((_QWORD *)v573 + 14);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              v707 = v705;
              swift_bridgeObjectRetain();
              if (v706)
              {
                v708 = *((_QWORD *)v573 + 15);
                *((_QWORD *)v572 + 14) = v706;
                *((_QWORD *)v572 + 15) = v708;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v706 - 8))((uint64_t)(v572 + 88), (uint64_t)(v573 + 88), v706);
              }
              else
              {
                v754 = *(_OWORD *)(v573 + 104);
                *(_OWORD *)(v572 + 88) = *(_OWORD *)(v573 + 88);
                *(_OWORD *)(v572 + 104) = v754;
                *((_QWORD *)v572 + 15) = *((_QWORD *)v573 + 15);
              }
              v755 = v572 + 128;
              v756 = v573 + 128;
              v757 = *((_QWORD *)v573 + 19);
              if (v757)
              {
                v758 = *((_QWORD *)v573 + 20);
                *((_QWORD *)v572 + 19) = v757;
                *((_QWORD *)v572 + 20) = v758;
                (**(void (***)(_OWORD *, _OWORD *))(v757 - 8))(v755, v756);
              }
              else
              {
                v765 = *((_OWORD *)v573 + 9);
                *v755 = *v756;
                *((_OWORD *)v572 + 9) = v765;
                *((_QWORD *)v572 + 20) = *((_QWORD *)v573 + 20);
              }
              goto LABEL_425;
            case 0xEu:
              v601 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v601;
              v572[16] = v573[16];
              v602 = v573 + 24;
              v603 = *((_QWORD *)v573 + 4);
              if (v603 >= 0x11)
              {
                *((_QWORD *)v572 + 3) = *v602;
                *((_QWORD *)v572 + 4) = v603;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v572 + 24) = *(_OWORD *)v602;
              }
              v695 = *((_QWORD *)v573 + 6);
              *((_QWORD *)v572 + 5) = *((_QWORD *)v573 + 5);
              *((_QWORD *)v572 + 6) = v695;
              *((_QWORD *)v572 + 7) = *((_QWORD *)v573 + 7);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              goto LABEL_425;
            case 0xFu:
              v679 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v679;
              v572[16] = v573[16];
              v680 = v573 + 24;
              v681 = *((_QWORD *)v573 + 4);
              if (v681 >= 0x11)
              {
                *((_QWORD *)v572 + 3) = *v680;
                *((_QWORD *)v572 + 4) = v681;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v572 + 24) = *(_OWORD *)v680;
              }
              v709 = *((_QWORD *)v573 + 6);
              *((_QWORD *)v572 + 5) = *((_QWORD *)v573 + 5);
              *((_QWORD *)v572 + 6) = v709;
              v710 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
              *(_QWORD *)&v572[v710] = *(_QWORD *)&v573[v710];
              type metadata accessor for PuzzleStatistic();
              type metadata accessor for PuzzleStatisticCategory(0);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              v711 = (char *)&loc_1BB2F88B0 + 4 * word_1BB907EB6[swift_getEnumCaseMultiPayload()];
              __asm { BR              X10 }
              return result;
            case 0x10u:
              v604 = *((_QWORD *)v573 + 1);
              *(_QWORD *)v572 = *(_QWORD *)v573;
              *((_QWORD *)v572 + 1) = v604;
              v605 = *((_QWORD *)v573 + 3);
              *((_QWORD *)v572 + 2) = *((_QWORD *)v573 + 2);
              *((_QWORD *)v572 + 3) = v605;
              v606 = *((_QWORD *)v573 + 5);
              *((_QWORD *)v572 + 4) = *((_QWORD *)v573 + 4);
              *((_QWORD *)v572 + 5) = v606;
              *((_WORD *)v572 + 24) = *((_WORD *)v573 + 24);
              *(_OWORD *)(v572 + 56) = *(_OWORD *)(v573 + 56);
              v607 = *((_QWORD *)v573 + 10);
              *((_QWORD *)v572 + 9) = *((_QWORD *)v573 + 9);
              *((_QWORD *)v572 + 10) = v607;
              v608 = *((_QWORD *)v573 + 12);
              *((_QWORD *)v572 + 11) = *((_QWORD *)v573 + 11);
              *((_QWORD *)v572 + 12) = v608;
              *((_QWORD *)v572 + 13) = *((_QWORD *)v573 + 13);
              v572[112] = v573[112];
              v609 = *((_QWORD *)v573 + 16);
              *((_QWORD *)v572 + 15) = *((_QWORD *)v573 + 15);
              *((_QWORD *)v572 + 16) = v609;
              v572[136] = v573[136];
              v610 = *((_QWORD *)v573 + 19);
              *((_QWORD *)v572 + 18) = *((_QWORD *)v573 + 18);
              *((_QWORD *)v572 + 19) = v610;
              v611 = *((_QWORD *)v573 + 21);
              *((_QWORD *)v572 + 20) = *((_QWORD *)v573 + 20);
              *((_QWORD *)v572 + 21) = v611;
              v572[184] = v573[184];
              *((_QWORD *)v572 + 22) = *((_QWORD *)v573 + 22);
              v612 = *((_QWORD *)v573 + 25);
              *((_QWORD *)v572 + 24) = *((_QWORD *)v573 + 24);
              *((_QWORD *)v572 + 25) = v612;
              v572[224] = v573[224];
              v613 = *((_QWORD *)v573 + 27);
              *((_QWORD *)v572 + 26) = *((_QWORD *)v573 + 26);
              *((_QWORD *)v572 + 27) = v613;
              v874 = v573 + 232;
              v614 = *((_QWORD *)v573 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v614 >= 0x11)
              {
                *((_QWORD *)v572 + 29) = *v874;
                *((_QWORD *)v572 + 30) = v614;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v572 + 232) = *(_OWORD *)v874;
              }
              goto LABEL_425;
            default:
              memcpy(v572, v573, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
              goto LABEL_426;
          }
        case 7:
          v124 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v124;
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
          *(_QWORD *)(a1 + 32) = a2[4];
          *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
          v125 = a2[7];
          *(_QWORD *)(a1 + 48) = a2[6];
          *(_QWORD *)(a1 + 56) = v125;
          v126 = a2[9];
          *(_QWORD *)(a1 + 64) = a2[8];
          *(_QWORD *)(a1 + 72) = v126;
          v127 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v127 == 1)
          {
            v128 = *((_OWORD *)a2 + 8);
            *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
            *(_OWORD *)(a1 + 128) = v128;
            *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
            v129 = *((_OWORD *)a2 + 6);
            *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
            *(_OWORD *)(a1 + 96) = v129;
          }
          else
          {
            *(_QWORD *)(a1 + 80) = a2[10];
            *(_QWORD *)(a1 + 88) = v127;
            v259 = a2[15];
            swift_bridgeObjectRetain();
            if (v259)
            {
              v260 = a2[16];
              *(_QWORD *)(a1 + 120) = v259;
              *(_QWORD *)(a1 + 128) = v260;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v259 - 8))(a1 + 96, (uint64_t)(a2 + 12), v259);
              *(_QWORD *)(a1 + 136) = a2[17];
            }
            else
            {
              v429 = *((_OWORD *)a2 + 7);
              *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
              *(_OWORD *)(a1 + 112) = v429;
              *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
            }
            *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
          }
          goto LABEL_283;
        case 8:
          v908 = v7;
          v130 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v130;
          v131 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v132 = (_QWORD *)(a1 + v131);
          v133 = (uint64_t)a2 + v131;
          v134 = *(uint64_t *)((char *)a2 + v131 + 8);
          *v132 = *(uint64_t *)((char *)a2 + v131);
          v132[1] = v134;
          v135 = *(uint64_t *)((char *)a2 + v131 + 24);
          v132[2] = *(uint64_t *)((char *)a2 + v131 + 16);
          v132[3] = v135;
          v136 = type metadata accessor for FormatCustomItem.Resolved();
          v137 = *(int *)(v136 + 24);
          v888 = (char *)v132 + v137;
          v898 = v136;
          v138 = (const void *)(v133 + v137);
          v139 = type metadata accessor for FormatCustomItem.Action();
          __dstc = *(_QWORD **)(v139 - 8);
          v140 = (unsigned int (*)(const void *, uint64_t, uint64_t))__dstc[6];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v140(v138, 1, v139))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v888, v138, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
          }
          else
          {
            v356 = sub_1BB86C67C();
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(v888, v138, v356);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v888, 0, 1, v139);
          }
          v7 = v908;
          *(_QWORD *)((char *)v132 + *(int *)(v898 + 28)) = *(_QWORD *)(v133 + *(int *)(v898 + 28));
          swift_bridgeObjectRetain();
          goto LABEL_283;
        case 9:
          v35 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v35;
          v36 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v36;
          v37 = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v37)
          {
            v38 = a2[8];
            *(_QWORD *)(a1 + 56) = v37;
            *(_QWORD *)(a1 + 64) = v38;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v37 - 8))(a1 + 32, (uint64_t)(a2 + 4), v37);
          }
          else
          {
            v285 = *((_OWORD *)a2 + 3);
            *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
            *(_OWORD *)(a1 + 48) = v285;
            *(_QWORD *)(a1 + 64) = a2[8];
          }
          v286 = (_OWORD *)(a1 + 72);
          v287 = a2 + 9;
          v288 = a2[12];
          if (v288)
          {
            v289 = a2[13];
            *(_QWORD *)(a1 + 96) = v288;
            *(_QWORD *)(a1 + 104) = v289;
            (**(void (***)(_OWORD *, _OWORD *))(v288 - 8))(v286, v287);
          }
          else
          {
            v309 = *(_OWORD *)(a2 + 11);
            *v286 = *v287;
            *(_OWORD *)(a1 + 88) = v309;
            *(_QWORD *)(a1 + 104) = a2[13];
          }
          v310 = (_OWORD *)(a1 + 112);
          v311 = a2 + 14;
          v312 = a2[17];
          if (v312)
          {
            v313 = a2[18];
            *(_QWORD *)(a1 + 136) = v312;
            *(_QWORD *)(a1 + 144) = v313;
            (**(void (***)(_OWORD *, _OWORD *))(v312 - 8))(v310, v311);
          }
          else
          {
            v341 = *((_OWORD *)a2 + 8);
            *v310 = *v311;
            *(_OWORD *)(a1 + 128) = v341;
            *(_QWORD *)(a1 + 144) = a2[18];
          }
          goto LABEL_283;
        case 10:
          v142 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v142;
          v143 = (int *)type metadata accessor for FeedEngagementBanner();
          v144 = v143[5];
          v145 = a1 + v144;
          v146 = (uint64_t)a2 + v144;
          v147 = sub_1BB86EDAC();
          v148 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 16);
          swift_bridgeObjectRetain();
          v148(v145, v146, v147);
          *(_QWORD *)(a1 + v143[6]) = *(uint64_t *)((char *)a2 + v143[6]);
          v149 = v143[7];
          v150 = a1 + v149;
          v151 = (uint64_t)a2 + v149;
          *(_QWORD *)v150 = *(_QWORD *)v151;
          *(_BYTE *)(v150 + 8) = *(_BYTE *)(v151 + 8);
          v152 = v143[8];
          v29 = a1 + v152;
          v30 = (uint64_t)a2 + v152;
          v31 = *(_QWORD *)(v30 + 8);
          if (v31 >= 0x11)
          {
LABEL_76:
            *(_QWORD *)v29 = *(_QWORD *)v30;
            *(_QWORD *)(v29 + 8) = v31;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v29 = *(_OWORD *)v30;
          }
          goto LABEL_283;
        case 11:
          *(_QWORD *)a1 = *a2;
          swift_retain();
          goto LABEL_283;
        case 12:
          v39 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v39;
          v40 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v40;
          *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_283;
        case 13:
          v153 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v153;
          *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
          v154 = a2 + 3;
          v155 = a2[4];
          if (v155 >= 0x11)
          {
            *(_QWORD *)(a1 + 24) = *v154;
            *(_QWORD *)(a1 + 32) = v155;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v154;
          }
          v261 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v261;
          v262 = (void *)a2[8];
          *(_QWORD *)(a1 + 56) = a2[7];
          *(_QWORD *)(a1 + 64) = v262;
          *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
          *(_QWORD *)(a1 + 80) = a2[10];
          v263 = a2[14];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v264 = v262;
          swift_bridgeObjectRetain();
          if (v263)
          {
            v265 = a2[15];
            *(_QWORD *)(a1 + 112) = v263;
            *(_QWORD *)(a1 + 120) = v265;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v263 - 8))(a1 + 88, (uint64_t)(a2 + 11), v263);
          }
          else
          {
            v371 = *(_OWORD *)(a2 + 13);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 104) = v371;
            *(_QWORD *)(a1 + 120) = a2[15];
          }
          v372 = (_OWORD *)(a1 + 128);
          v373 = a2 + 16;
          v374 = a2[19];
          if (v374)
          {
            v375 = a2[20];
            *(_QWORD *)(a1 + 152) = v374;
            *(_QWORD *)(a1 + 160) = v375;
            (**(void (***)(_OWORD *, _OWORD *))(v374 - 8))(v372, v373);
          }
          else
          {
            v393 = *((_OWORD *)a2 + 9);
            *v372 = *v373;
            *(_OWORD *)(a1 + 144) = v393;
            *(_QWORD *)(a1 + 160) = a2[20];
          }
          goto LABEL_283;
        case 14:
          v41 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v41;
          *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
          v42 = a2 + 3;
          v43 = a2[4];
          if (v43 >= 0x11)
          {
            *(_QWORD *)(a1 + 24) = *v42;
            *(_QWORD *)(a1 + 32) = v43;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v42;
          }
          v239 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v239;
          *(_QWORD *)(a1 + 56) = a2[7];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_283;
        case 15:
          v156 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v156;
          *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
          v157 = a2 + 3;
          v158 = a2[4];
          if (v158 >= 0x11)
          {
            *(_QWORD *)(a1 + 24) = *v157;
            *(_QWORD *)(a1 + 32) = v158;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v157;
          }
          v266 = a2[6];
          *(_QWORD *)(a1 + 40) = a2[5];
          *(_QWORD *)(a1 + 48) = v266;
          v267 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)(a1 + v267) = *(uint64_t *)((char *)a2 + v267);
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v268 = (char *)&loc_1BB2F531C + 4 * word_1BB907E8C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 16:
          v906 = v7;
          v44 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v44;
          v45 = a2[3];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = v45;
          v46 = a2[5];
          *(_QWORD *)(a1 + 32) = a2[4];
          *(_QWORD *)(a1 + 40) = v46;
          *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
          v47 = a2[10];
          *(_QWORD *)(a1 + 72) = a2[9];
          *(_QWORD *)(a1 + 80) = v47;
          v48 = a2[12];
          *(_QWORD *)(a1 + 88) = a2[11];
          *(_QWORD *)(a1 + 96) = v48;
          *(_QWORD *)(a1 + 104) = a2[13];
          *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
          v49 = a2[16];
          *(_QWORD *)(a1 + 120) = a2[15];
          *(_QWORD *)(a1 + 128) = v49;
          *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
          v50 = a2[19];
          *(_QWORD *)(a1 + 144) = a2[18];
          *(_QWORD *)(a1 + 152) = v50;
          v51 = a2[21];
          *(_QWORD *)(a1 + 160) = a2[20];
          *(_QWORD *)(a1 + 168) = v51;
          *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
          *(_QWORD *)(a1 + 176) = a2[22];
          v52 = a2[25];
          *(_QWORD *)(a1 + 192) = a2[24];
          *(_QWORD *)(a1 + 200) = v52;
          *(_BYTE *)(a1 + 224) = *((_BYTE *)a2 + 224);
          v53 = a2[27];
          *(_QWORD *)(a1 + 208) = a2[26];
          *(_QWORD *)(a1 + 216) = v53;
          __dst = a2 + 29;
          v54 = a2[30];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v54 >= 0x11)
          {
            *(_QWORD *)(a1 + 232) = *__dst;
            *(_QWORD *)(a1 + 240) = v54;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 232) = *(_OWORD *)__dst;
          }
          v7 = v906;
          goto LABEL_283;
        default:
          memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          goto LABEL_284;
      }
    }
    switch(v8)
    {
      case 0:
        v14 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v14;
        v15 = a2[3];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = v15;
        *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
        v16 = a2 + 5;
        v17 = a2[6];
        swift_bridgeObjectRetain();
        if (v17 >= 0x11)
        {
          *(_QWORD *)(a1 + 40) = *v16;
          *(_QWORD *)(a1 + 48) = v17;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)v16;
        }
        goto LABEL_423;
      case 1:
        v159 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v159;
        v160 = a2[3];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = v160;
        *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
        v161 = a2[6];
        *(_QWORD *)(a1 + 40) = a2[5];
        *(_QWORD *)(a1 + 48) = v161;
        v162 = a2[8];
        *(_QWORD *)(a1 + 56) = a2[7];
        *(_QWORD *)(a1 + 64) = v162;
        v163 = a2 + 9;
        v164 = a2[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v164 >= 0x11)
        {
          *(_QWORD *)(a1 + 72) = *v163;
          *(_QWORD *)(a1 + 80) = v164;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v163;
        }
        goto LABEL_423;
      case 2:
        v55 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v55;
        v56 = (int *)type metadata accessor for FeedBannerAd();
        v57 = v56[5];
        v58 = a1 + v57;
        v59 = (uint64_t)a2 + v57;
        v60 = sub_1BB8721C0();
        v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
        swift_bridgeObjectRetain();
        v61(v58, v59, v60);
        *(_QWORD *)(a1 + v56[6]) = *(uint64_t *)((char *)a2 + v56[6]);
        v62 = v56[7];
        v63 = a1 + v62;
        v64 = (uint64_t)a2 + v62;
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *(_BYTE *)(v63 + 8) = *(_BYTE *)(v64 + 8);
        v65 = v56[8];
        v66 = a1 + v65;
        v67 = (uint64_t)a2 + v65;
        v68 = *(_QWORD *)(v67 + 8);
        if (v68 >= 0x11)
          goto LABEL_84;
        *(_OWORD *)v66 = *(_OWORD *)v67;
        goto LABEL_423;
      case 3:
        v165 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v165;
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
        v166 = a2[5];
        *(_QWORD *)(a1 + 32) = a2[4];
        *(_QWORD *)(a1 + 40) = v166;
        *(_QWORD *)(a1 + 48) = a2[6];
        *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
        v899 = (int *)type metadata accessor for FeedHeadline(0);
        v167 = v899[10];
        v168 = (_BYTE *)(a1 + v167);
        v169 = (uint64_t)a2 + v167;
        *v168 = *((_BYTE *)a2 + v167);
        v168[1] = *((_BYTE *)a2 + v167 + 1);
        v170 = (int *)type metadata accessor for FeedHeadline.State(0);
        v171 = v170[6];
        __dstd = &v168[v171];
        v172 = (char *)(v169 + v171);
        v173 = (int *)type metadata accessor for SharedItem();
        v871 = (_QWORD *)*((_QWORD *)v173 - 1);
        v174 = (unsigned int (*)(char *, uint64_t, int *))v871[6];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v174(v172, 1, v173))
        {
          v175 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dstd, v172, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
        }
        else
        {
          v357 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v357 - 8) + 16))(__dstd, v172, v357);
          __dstd[v173[5]] = v172[v173[5]];
          v358 = v173[6];
          v359 = *(void **)&v172[v358];
          *(_QWORD *)&__dstd[v358] = v359;
          v360 = v173[7];
          v893 = &__dstd[v360];
          v867 = &v172[v360];
          v361 = sub_1BB86C67C();
          v362 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v361 - 8) + 16);
          v363 = v359;
          v362(v893, v867, v361);
          ((void (*)(char *, _QWORD, uint64_t, int *))v871[7])(__dstd, 0, 1, v173);
        }
        v168[v170[7]] = *(_BYTE *)(v169 + v170[7]);
        v168[v170[8]] = *(_BYTE *)(v169 + v170[8]);
        v168[v170[9]] = *(_BYTE *)(v169 + v170[9]);
        v168[v170[10]] = *(_BYTE *)(v169 + v170[10]);
        v364 = v899[11];
        v365 = (void *)(a1 + v364);
        v366 = (char *)a2 + v364;
        v367 = sub_1BB871B24();
        v368 = *(_QWORD *)(v367 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v368 + 48))(v366, 1, v367))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v365, v366, *(_QWORD *)(*(_QWORD *)(v369 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v368 + 16))(v365, v366, v367);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v368 + 56))(v365, 0, 1, v367);
        }
        v387 = v899[12];
        v388 = (_QWORD *)(a1 + v387);
        v389 = (uint64_t *)((char *)a2 + v387);
        v390 = v389[1];
        if (v390 >= 0x11)
        {
          *v388 = *v389;
          v388[1] = v390;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v388 = *(_OWORD *)v389;
        }
        v391 = v899[13];
        v392 = *(uint64_t *)((char *)a2 + v391);
        if (v392 >= 2)
        {
          if (v392 == 2)
          {
            *(_QWORD *)(a1 + v391) = 2;
          }
          else
          {
            *(_QWORD *)(a1 + v391) = v392;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)(a1 + v391) = v392;
        }
        v426 = v899[14];
        v427 = *(void **)((char *)a2 + v426);
        *(_QWORD *)(a1 + v426) = v427;
        v428 = v427;
        goto LABEL_423;
      case 4:
        v69 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v69;
        *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
        v70 = a2 + 3;
        v71 = a2[4];
        if (v71 >= 0x11)
        {
          *(_QWORD *)(a1 + 24) = *v70;
          *(_QWORD *)(a1 + 32) = v71;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v70;
        }
        v240 = a2[6];
        *(_QWORD *)(a1 + 40) = a2[5];
        *(_QWORD *)(a1 + 48) = v240;
        v241 = (int *)type metadata accessor for FeedWebEmbed();
        v242 = v241[8];
        v243 = a1 + v242;
        v244 = (uint64_t)a2 + v242;
        v245 = sub_1BB86C67C();
        v246 = *(_QWORD *)(v245 - 8);
        v247 = *(void (**)(uint64_t, uint64_t, uint64_t))(v246 + 16);
        swift_bridgeObjectRetain();
        v247(v243, v244, v245);
        v902 = v241;
        v248 = v241[9];
        v249 = (void *)(a1 + v248);
        v250 = (char *)a2 + v248;
        __dstf = (void (*)(char *, char *, void *))v247;
        v891 = (void *)v245;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v246 + 48))((uint64_t)a2 + v248, 1, v245))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v249, v250, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
        }
        else
        {
          v247((uint64_t)v249, (uint64_t)v250, v245);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v246 + 56))(v249, 0, 1, v245);
        }
        *(_QWORD *)(a1 + v241[10]) = *(uint64_t *)((char *)a2 + v241[10]);
        *(_QWORD *)(a1 + v241[11]) = *(uint64_t *)((char *)a2 + v241[11]);
        v302 = v241[12];
        v303 = (_QWORD *)(a1 + v302);
        v304 = (uint64_t *)((char *)a2 + v302);
        v305 = type metadata accessor for FeedHeadline(0);
        v306 = *(_QWORD *)(v305 - 8);
        v307 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v306 + 48);
        swift_retain();
        swift_retain();
        if (v307(v304, 1, v305))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v303, v304, *(_QWORD *)(*(_QWORD *)(v308 - 8) + 64));
        }
        else
        {
          v865 = v306;
          v330 = v304[1];
          *v303 = *v304;
          v303[1] = v330;
          v303[2] = v304[2];
          *((_BYTE *)v303 + 24) = *((_BYTE *)v304 + 24);
          v331 = v304[5];
          v303[4] = v304[4];
          v303[5] = v331;
          v303[6] = v304[6];
          *((_BYTE *)v303 + 56) = *((_BYTE *)v304 + 56);
          v873 = (int *)v305;
          v332 = *(int *)(v305 + 40);
          v333 = (char *)v303 + v332;
          v334 = (char *)v304 + v332;
          *v333 = *((_BYTE *)v304 + v332);
          v333[1] = *((_BYTE *)v304 + v332 + 1);
          v335 = type metadata accessor for FeedHeadline.State(0);
          v336 = *(int *)(v335 + 24);
          v858 = &v333[v336];
          v861 = (int *)v335;
          v337 = &v334[v336];
          v338 = (int *)type metadata accessor for SharedItem();
          v855 = *((_QWORD *)v338 - 1);
          v339 = *(unsigned int (**)(char *, uint64_t, int *))(v855 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v339(v337, 1, v338))
          {
            v340 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v858, v337, *(_QWORD *)(*(_QWORD *)(v340 - 8) + 64));
          }
          else
          {
            v488 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v488 - 8) + 16))(v858, v337, v488);
            v858[v338[5]] = v337[v338[5]];
            v489 = v338[6];
            v490 = *(void **)&v337[v489];
            *(_QWORD *)&v858[v489] = v490;
            v491 = v338[7];
            v492 = &v858[v491];
            v493 = &v337[v491];
            v494 = v490;
            __dstf(v492, v493, v891);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v855 + 56))(v858, 0, 1, v338);
          }
          v333[v861[7]] = v334[v861[7]];
          v333[v861[8]] = v334[v861[8]];
          v333[v861[9]] = v334[v861[9]];
          v333[v861[10]] = v334[v861[10]];
          v495 = v873[11];
          v496 = (char *)v303 + v495;
          v497 = (char *)v304 + v495;
          v498 = sub_1BB871B24();
          v499 = *(_QWORD *)(v498 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v499 + 48))(v497, 1, v498))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v496, v497, *(_QWORD *)(*(_QWORD *)(v500 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v499 + 16))(v496, v497, v498);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v499 + 56))(v496, 0, 1, v498);
          }
          v507 = v873[12];
          v508 = (_QWORD *)((char *)v303 + v507);
          v509 = (_QWORD *)((char *)v304 + v507);
          v510 = v509[1];
          if (v510 >= 0x11)
          {
            *v508 = *v509;
            v508[1] = v510;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v508 = *(_OWORD *)v509;
          }
          v511 = v873[13];
          v512 = *(_QWORD *)((char *)v304 + v511);
          if (v512 >= 2)
          {
            if (v512 == 2)
            {
              *(_QWORD *)((char *)v303 + v511) = 2;
            }
            else
            {
              *(_QWORD *)((char *)v303 + v511) = v512;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)((char *)v303 + v511) = v512;
          }
          v551 = v873[14];
          v552 = *(void **)((char *)v304 + v551);
          *(_QWORD *)((char *)v303 + v551) = v552;
          v553 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v865 + 56);
          v554 = v552;
          v553(v303, 0, 1, v873);
        }
        v555 = v902[13];
        v556 = (_QWORD *)(a1 + v555);
        v557 = (uint64_t *)((char *)a2 + v555);
        v558 = type metadata accessor for WebEmbedDataVisualization();
        v559 = *(_QWORD *)(v558 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v559 + 48))(v557, 1, v558))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v556, v557, *(_QWORD *)(*(_QWORD *)(v560 - 8) + 64));
        }
        else
        {
          v561 = swift_getEnumCaseMultiPayload();
          v562 = *v557;
          if (v561 == 1)
          {
            v563 = v557[1];
            *v556 = v562;
            v556[1] = v563;
            v564 = type metadata accessor for GenericDataVisualization();
            v565 = *(int *)(v564 + 20);
            v566 = (char *)v556 + v565;
            v567 = (char *)v557 + v565;
            swift_bridgeObjectRetain();
            __dstf(v566, v567, v891);
            *(_QWORD *)((char *)v556 + *(int *)(v564 + 24)) = *(uint64_t *)((char *)v557 + *(int *)(v564 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            *v556 = v562;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v559 + 56))(v556, 0, 1, v558);
        }
        *(_BYTE *)(a1 + v902[14]) = *((_BYTE *)a2 + v902[14]);
        goto LABEL_425;
      case 5:
        v176 = (void *)*a2;
        v177 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v177;
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
        *(_QWORD *)(a1 + 32) = a2[4];
        *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
        v178 = (void *)a2[7];
        *(_QWORD *)(a1 + 48) = a2[6];
        *(_QWORD *)(a1 + 56) = v178;
        *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
        v179 = a2[10];
        v180 = v176;
        swift_bridgeObjectRetain();
        v181 = v178;
        if (v179 == 1)
        {
          v182 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 88) = v182;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          *(_QWORD *)(a1 + 72) = a2[9];
          *(_QWORD *)(a1 + 80) = v179;
          v269 = a2[12];
          *(_QWORD *)(a1 + 88) = a2[11];
          *(_QWORD *)(a1 + 96) = v269;
          v271 = (void *)a2[13];
          v270 = a2[14];
          *(_QWORD *)(a1 + 104) = v271;
          *(_QWORD *)(a1 + 112) = v270;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v272 = v271;
        }
        v273 = a2 + 15;
        v274 = a2[16];
        if (v274 >= 0x11)
        {
          *(_QWORD *)(a1 + 120) = *v273;
          *(_QWORD *)(a1 + 128) = v274;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v273;
        }
        *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
        goto LABEL_423;
      case 6:
        v183 = *((unsigned __int8 *)a2 + 281);
        if (v183 == 2)
        {
          v409 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v409;
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
          *(_QWORD *)(a1 + 32) = a2[4];
          *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
          v410 = a2[7];
          *(_QWORD *)(a1 + 48) = a2[6];
          *(_QWORD *)(a1 + 56) = v410;
          v411 = a2[9];
          *(_QWORD *)(a1 + 64) = a2[8];
          *(_QWORD *)(a1 + 72) = v411;
          v412 = a2[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v412 == 1)
          {
            v413 = (_OWORD *)(a1 + 80);
            v414 = a2 + 10;
            v415 = *((_OWORD *)a2 + 8);
            *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
            *(_OWORD *)(a1 + 128) = v415;
            *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
            goto LABEL_252;
          }
          *(_QWORD *)(a1 + 80) = a2[10];
          *(_QWORD *)(a1 + 88) = v412;
          v451 = a2[15];
          swift_bridgeObjectRetain();
          if (v451)
          {
            v452 = a2[16];
            *(_QWORD *)(a1 + 120) = v451;
            *(_QWORD *)(a1 + 128) = v452;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v451 - 8))(a1 + 96, (uint64_t)(a2 + 12), v451);
            *(_QWORD *)(a1 + 136) = a2[17];
          }
          else
          {
            v569 = *((_OWORD *)a2 + 7);
            *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
            *(_OWORD *)(a1 + 112) = v569;
            *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
          }
          *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
        }
        else
        {
          if (v183 == 1)
          {
            v184 = (void *)*a2;
            v185 = a2[1];
            *(_QWORD *)a1 = *a2;
            *(_QWORD *)(a1 + 8) = v185;
            *(_QWORD *)(a1 + 16) = a2[2];
            *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
            *(_QWORD *)(a1 + 32) = a2[4];
            *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
            v186 = (void *)a2[7];
            *(_QWORD *)(a1 + 48) = a2[6];
            *(_QWORD *)(a1 + 56) = v186;
            *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
            v187 = a2[10];
            v188 = v184;
            swift_bridgeObjectRetain();
            v189 = v186;
            if (v187 == 1)
            {
              v190 = *(_OWORD *)(a2 + 11);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
              *(_OWORD *)(a1 + 88) = v190;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
            }
            else
            {
              *(_QWORD *)(a1 + 72) = a2[9];
              *(_QWORD *)(a1 + 80) = v187;
              v437 = a2[12];
              *(_QWORD *)(a1 + 88) = a2[11];
              *(_QWORD *)(a1 + 96) = v437;
              v439 = (void *)a2[13];
              v438 = a2[14];
              *(_QWORD *)(a1 + 104) = v439;
              *(_QWORD *)(a1 + 112) = v438;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v440 = v439;
            }
            v441 = a2 + 15;
            v442 = a2[16];
            if (v442 >= 0x11)
            {
              *(_QWORD *)(a1 + 120) = *v441;
              *(_QWORD *)(a1 + 128) = v442;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v441;
            }
            v414 = a2 + 18;
            v467 = (void *)a2[18];
            *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
            if (v467)
            {
              v468 = a2[19];
              v469 = a2[20];
              *(_QWORD *)(a1 + 144) = v467;
              *(_QWORD *)(a1 + 152) = v468;
              *(_QWORD *)(a1 + 160) = v469;
              *(_WORD *)(a1 + 168) = *((_WORD *)a2 + 84);
              *(_QWORD *)(a1 + 176) = a2[22];
              *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
              v470 = (void *)a2[25];
              *(_QWORD *)(a1 + 192) = a2[24];
              *(_QWORD *)(a1 + 200) = v470;
              *(_BYTE *)(a1 + 208) = *((_BYTE *)a2 + 208);
              v471 = a2[28];
              v472 = v467;
              swift_bridgeObjectRetain();
              v473 = v470;
              if (v471 == 1)
              {
                v474 = *(_OWORD *)(a2 + 29);
                *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
                *(_OWORD *)(a1 + 232) = v474;
                *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
              }
              else
              {
                *(_QWORD *)(a1 + 216) = a2[27];
                *(_QWORD *)(a1 + 224) = v471;
                v527 = a2[30];
                *(_QWORD *)(a1 + 232) = a2[29];
                *(_QWORD *)(a1 + 240) = v527;
                v529 = (void *)a2[31];
                v528 = a2[32];
                *(_QWORD *)(a1 + 248) = v529;
                *(_QWORD *)(a1 + 256) = v528;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v530 = v529;
              }
              v531 = a2 + 33;
              v532 = a2[34];
              if (v532 >= 0x11)
              {
                *(_QWORD *)(a1 + 264) = *v531;
                *(_QWORD *)(a1 + 272) = v532;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 264) = *(_OWORD *)v531;
              }
              *(_BYTE *)(a1 + 280) = *((_BYTE *)a2 + 280);
              goto LABEL_282;
            }
            v413 = (_OWORD *)(a1 + 144);
            v517 = *((_OWORD *)a2 + 16);
            *(_OWORD *)(a1 + 240) = *((_OWORD *)a2 + 15);
            *(_OWORD *)(a1 + 256) = v517;
            *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)a2 + 265);
            v518 = *((_OWORD *)a2 + 12);
            *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
            *(_OWORD *)(a1 + 192) = v518;
            v519 = *((_OWORD *)a2 + 14);
            *(_OWORD *)(a1 + 208) = *((_OWORD *)a2 + 13);
            *(_OWORD *)(a1 + 224) = v519;
LABEL_252:
            v520 = v414[1];
            *v413 = *v414;
            v413[1] = v520;
            goto LABEL_282;
          }
          v416 = (void *)*a2;
          v417 = a2[1];
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = v417;
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
          *(_QWORD *)(a1 + 32) = a2[4];
          *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
          v418 = (void *)a2[7];
          *(_QWORD *)(a1 + 48) = a2[6];
          *(_QWORD *)(a1 + 56) = v418;
          *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
          v419 = a2[10];
          v420 = v416;
          swift_bridgeObjectRetain();
          v421 = v418;
          if (v419 == 1)
          {
            v422 = *(_OWORD *)(a2 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
            *(_OWORD *)(a1 + 88) = v422;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
          }
          else
          {
            *(_QWORD *)(a1 + 72) = a2[9];
            *(_QWORD *)(a1 + 80) = v419;
            v453 = a2[12];
            *(_QWORD *)(a1 + 88) = a2[11];
            *(_QWORD *)(a1 + 96) = v453;
            v455 = (void *)a2[13];
            v454 = a2[14];
            *(_QWORD *)(a1 + 104) = v455;
            *(_QWORD *)(a1 + 112) = v454;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v456 = v455;
          }
          v457 = a2 + 15;
          v458 = a2[16];
          if (v458 >= 0x11)
          {
            *(_QWORD *)(a1 + 120) = *v457;
            *(_QWORD *)(a1 + 128) = v458;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v457;
          }
          *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
        }
LABEL_282:
        *(_BYTE *)(a1 + 281) = v183;
LABEL_423:
        swift_storeEnumTagMultiPayload();
        goto LABEL_426;
      case 7:
        v191 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v191;
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
        *(_QWORD *)(a1 + 32) = a2[4];
        *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
        v192 = a2[7];
        *(_QWORD *)(a1 + 48) = a2[6];
        *(_QWORD *)(a1 + 56) = v192;
        v193 = a2[9];
        *(_QWORD *)(a1 + 64) = a2[8];
        *(_QWORD *)(a1 + 72) = v193;
        v194 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v194 == 1)
        {
          v195 = *((_OWORD *)a2 + 8);
          *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
          *(_OWORD *)(a1 + 128) = v195;
          *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
          v196 = *((_OWORD *)a2 + 6);
          *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
          *(_OWORD *)(a1 + 96) = v196;
        }
        else
        {
          *(_QWORD *)(a1 + 80) = a2[10];
          *(_QWORD *)(a1 + 88) = v194;
          v275 = a2[15];
          swift_bridgeObjectRetain();
          if (v275)
          {
            v276 = a2[16];
            *(_QWORD *)(a1 + 120) = v275;
            *(_QWORD *)(a1 + 128) = v276;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v275 - 8))(a1 + 96, (uint64_t)(a2 + 12), v275);
            *(_QWORD *)(a1 + 136) = a2[17];
          }
          else
          {
            v430 = *((_OWORD *)a2 + 7);
            *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
            *(_OWORD *)(a1 + 112) = v430;
            *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
          }
          *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
        }
        goto LABEL_423;
      case 8:
        v197 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v197;
        v198 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v199 = (_QWORD *)(a1 + v198);
        v200 = (uint64_t)a2 + v198;
        v201 = *(uint64_t *)((char *)a2 + v198 + 8);
        *v199 = *(uint64_t *)((char *)a2 + v198);
        v199[1] = v201;
        v202 = *(uint64_t *)((char *)a2 + v198 + 24);
        v199[2] = *(uint64_t *)((char *)a2 + v198 + 16);
        v199[3] = v202;
        v203 = type metadata accessor for FormatCustomItem.Resolved();
        v204 = *(int *)(v203 + 24);
        v889 = (char *)v199 + v204;
        v900 = v203;
        v205 = (const void *)(v200 + v204);
        v206 = type metadata accessor for FormatCustomItem.Action();
        v207 = *(_QWORD *)(v206 - 8);
        v208 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v207 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v208(v205, 1, v206))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v889, v205, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
        }
        else
        {
          v370 = sub_1BB86C67C();
          (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(v889, v205, v370);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v889, 0, 1, v206);
        }
        *(_QWORD *)((char *)v199 + *(int *)(v900 + 28)) = *(_QWORD *)(v200 + *(int *)(v900 + 28));
        swift_bridgeObjectRetain();
        goto LABEL_425;
      case 9:
        v72 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v72;
        v73 = a2[3];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = v73;
        v74 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v74)
        {
          v75 = a2[8];
          *(_QWORD *)(a1 + 56) = v74;
          *(_QWORD *)(a1 + 64) = v75;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v74 - 8))(a1 + 32, (uint64_t)(a2 + 4), v74);
        }
        else
        {
          v290 = *((_OWORD *)a2 + 3);
          *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
          *(_OWORD *)(a1 + 48) = v290;
          *(_QWORD *)(a1 + 64) = a2[8];
        }
        v291 = (_OWORD *)(a1 + 72);
        v292 = a2 + 9;
        v293 = a2[12];
        if (v293)
        {
          v294 = a2[13];
          *(_QWORD *)(a1 + 96) = v293;
          *(_QWORD *)(a1 + 104) = v294;
          (**(void (***)(_OWORD *, _OWORD *))(v293 - 8))(v291, v292);
        }
        else
        {
          v314 = *(_OWORD *)(a2 + 11);
          *v291 = *v292;
          *(_OWORD *)(a1 + 88) = v314;
          *(_QWORD *)(a1 + 104) = a2[13];
        }
        v315 = (_OWORD *)(a1 + 112);
        v316 = a2 + 14;
        v317 = a2[17];
        if (v317)
        {
          v318 = a2[18];
          *(_QWORD *)(a1 + 136) = v317;
          *(_QWORD *)(a1 + 144) = v318;
          (**(void (***)(_OWORD *, _OWORD *))(v317 - 8))(v315, v316);
        }
        else
        {
          v342 = *((_OWORD *)a2 + 8);
          *v315 = *v316;
          *(_OWORD *)(a1 + 128) = v342;
          *(_QWORD *)(a1 + 144) = a2[18];
        }
        goto LABEL_423;
      case 10:
        v210 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v210;
        v211 = (int *)type metadata accessor for FeedEngagementBanner();
        v212 = v211[5];
        v213 = a1 + v212;
        v214 = (uint64_t)a2 + v212;
        v215 = sub_1BB86EDAC();
        v216 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v215 - 8) + 16);
        swift_bridgeObjectRetain();
        v216(v213, v214, v215);
        *(_QWORD *)(a1 + v211[6]) = *(uint64_t *)((char *)a2 + v211[6]);
        v217 = v211[7];
        v218 = a1 + v217;
        v219 = (uint64_t)a2 + v217;
        *(_QWORD *)v218 = *(_QWORD *)v219;
        *(_BYTE *)(v218 + 8) = *(_BYTE *)(v219 + 8);
        v220 = v211[8];
        v66 = a1 + v220;
        v67 = (uint64_t)a2 + v220;
        v68 = *(_QWORD *)(v67 + 8);
        if (v68 >= 0x11)
        {
LABEL_84:
          *(_QWORD *)v66 = *(_QWORD *)v67;
          *(_QWORD *)(v66 + 8) = v68;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v66 = *(_OWORD *)v67;
        }
        goto LABEL_423;
      case 11:
        *(_QWORD *)a1 = *a2;
        swift_retain();
        goto LABEL_423;
      case 12:
        v76 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v76;
        v77 = a2[3];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = v77;
        *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_423;
      case 13:
        v221 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v221;
        *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
        v222 = a2 + 3;
        v223 = a2[4];
        if (v223 >= 0x11)
        {
          *(_QWORD *)(a1 + 24) = *v222;
          *(_QWORD *)(a1 + 32) = v223;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v222;
        }
        v277 = a2[6];
        *(_QWORD *)(a1 + 40) = a2[5];
        *(_QWORD *)(a1 + 48) = v277;
        v278 = (void *)a2[8];
        *(_QWORD *)(a1 + 56) = a2[7];
        *(_QWORD *)(a1 + 64) = v278;
        *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
        *(_QWORD *)(a1 + 80) = a2[10];
        v279 = a2[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v280 = v278;
        swift_bridgeObjectRetain();
        if (v279)
        {
          v281 = a2[15];
          *(_QWORD *)(a1 + 112) = v279;
          *(_QWORD *)(a1 + 120) = v281;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v279 - 8))(a1 + 88, (uint64_t)(a2 + 11), v279);
        }
        else
        {
          v376 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 104) = v376;
          *(_QWORD *)(a1 + 120) = a2[15];
        }
        v377 = (_OWORD *)(a1 + 128);
        v378 = a2 + 16;
        v379 = a2[19];
        if (v379)
        {
          v380 = a2[20];
          *(_QWORD *)(a1 + 152) = v379;
          *(_QWORD *)(a1 + 160) = v380;
          (**(void (***)(_OWORD *, _OWORD *))(v379 - 8))(v377, v378);
        }
        else
        {
          v394 = *((_OWORD *)a2 + 9);
          *v377 = *v378;
          *(_OWORD *)(a1 + 144) = v394;
          *(_QWORD *)(a1 + 160) = a2[20];
        }
        goto LABEL_423;
      case 14:
        v78 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v78;
        *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
        v79 = a2 + 3;
        v80 = a2[4];
        if (v80 >= 0x11)
        {
          *(_QWORD *)(a1 + 24) = *v79;
          *(_QWORD *)(a1 + 32) = v80;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v79;
        }
        v252 = a2[6];
        *(_QWORD *)(a1 + 40) = a2[5];
        *(_QWORD *)(a1 + 48) = v252;
        *(_QWORD *)(a1 + 56) = a2[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_423;
      case 15:
        v224 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v224;
        *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
        v225 = a2 + 3;
        v226 = a2[4];
        if (v226 >= 0x11)
        {
          *(_QWORD *)(a1 + 24) = *v225;
          *(_QWORD *)(a1 + 32) = v226;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v225;
        }
        v282 = a2[6];
        *(_QWORD *)(a1 + 40) = a2[5];
        *(_QWORD *)(a1 + 48) = v282;
        v283 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)(a1 + v283) = *(uint64_t *)((char *)a2 + v283);
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v284 = (char *)&loc_1BB2F557C + 4 * word_1BB907E62[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 16:
        v81 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v81;
        v82 = a2[3];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = v82;
        v83 = a2[5];
        *(_QWORD *)(a1 + 32) = a2[4];
        *(_QWORD *)(a1 + 40) = v83;
        *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
        v84 = a2[10];
        *(_QWORD *)(a1 + 72) = a2[9];
        *(_QWORD *)(a1 + 80) = v84;
        v85 = a2[12];
        *(_QWORD *)(a1 + 88) = a2[11];
        *(_QWORD *)(a1 + 96) = v85;
        *(_QWORD *)(a1 + 104) = a2[13];
        *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
        v86 = a2[16];
        *(_QWORD *)(a1 + 120) = a2[15];
        *(_QWORD *)(a1 + 128) = v86;
        *(_BYTE *)(a1 + 136) = *((_BYTE *)a2 + 136);
        v87 = a2[19];
        *(_QWORD *)(a1 + 144) = a2[18];
        *(_QWORD *)(a1 + 152) = v87;
        v88 = a2[21];
        *(_QWORD *)(a1 + 160) = a2[20];
        *(_QWORD *)(a1 + 168) = v88;
        *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
        *(_QWORD *)(a1 + 176) = a2[22];
        v89 = a2[25];
        *(_QWORD *)(a1 + 192) = a2[24];
        *(_QWORD *)(a1 + 200) = v89;
        *(_BYTE *)(a1 + 224) = *((_BYTE *)a2 + 224);
        v90 = a2[27];
        *(_QWORD *)(a1 + 208) = a2[26];
        *(_QWORD *)(a1 + 216) = v90;
        __dsta = a2 + 29;
        v91 = a2[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v91 >= 0x11)
        {
          *(_QWORD *)(a1 + 232) = *__dsta;
          *(_QWORD *)(a1 + 240) = v91;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)__dsta;
        }
        goto LABEL_423;
      default:
        memcpy((void *)a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_426;
    }
  }
  v13 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

void destroy for FormatLayoutViewRoute(uint64_t a1)
{
  int EnumCaseMultiPayload;
  int v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int (*v103)(uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void *v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int (*v125)(uint64_t, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  type metadata accessor for FeedItem(0);
  v3 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v3)
    {
      case 0:
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 48) < 0x11uLL)
          goto LABEL_74;
        goto LABEL_73;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 80) < 0x11uLL)
          goto LABEL_74;
        goto LABEL_73;
      case 2:
        swift_bridgeObjectRelease();
        v7 = type metadata accessor for FeedBannerAd();
        v8 = a1 + *(int *)(v7 + 20);
        v9 = sub_1BB8721C0();
        goto LABEL_56;
      case 3:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v10 = (int *)type metadata accessor for FeedHeadline(0);
        v11 = a1 + v10[10];
        v12 = v11 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v13 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
        {
          v14 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);

          v15 = v12 + *(int *)(v13 + 28);
          v16 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
        }
        v17 = a1 + v10[11];
        v18 = sub_1BB871B24();
        v19 = *(_QWORD *)(v18 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
        if (*(_QWORD *)(a1 + v10[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + v10[13]) >= 3uLL)
          swift_unknownObjectRelease();

        goto LABEL_74;
      case 4:
        if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = (int *)type metadata accessor for FeedWebEmbed();
        v21 = a1 + v20[8];
        v22 = sub_1BB86C67C();
        v23 = *(_QWORD *)(v22 - 8);
        v24 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
        v24(v21, v22);
        v25 = a1 + v20[9];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v25, 1, v22))
          v24(v25, v22);
        swift_release();
        swift_release();
        v26 = a1 + v20[12];
        v27 = (int *)type metadata accessor for FeedHeadline(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v27 - 1) + 48))(v26, 1, v27))
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v28 = v27[10];
          v29 = v26 + v28 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          v30 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30))
          {
            v31 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v29, v31);

            v24(v29 + *(int *)(v30 + 28), v22);
          }
          v32 = v26 + v27[11];
          v33 = sub_1BB871B24();
          v34 = *(_QWORD *)(v33 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
            (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v33);
          if (*(_QWORD *)(v26 + v27[12] + 8) >= 0x11uLL)
            swift_bridgeObjectRelease();
          if (*(_QWORD *)(v26 + v27[13]) >= 3uLL)
            swift_unknownObjectRelease();

        }
        v35 = a1 + v20[13];
        v36 = type metadata accessor for WebEmbedDataVisualization();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36))
          goto LABEL_74;
        if (swift_getEnumCaseMultiPayload() != 1)
          goto LABEL_58;
        swift_bridgeObjectRelease();
        v37 = type metadata accessor for GenericDataVisualization();
        v24(v35 + *(int *)(v37 + 20), v22);
        goto LABEL_73;
      case 5:
        goto LABEL_39;
      case 6:
        v38 = *(unsigned __int8 *)(a1 + 281);
        if (v38 == 2)
          goto LABEL_43;
        if (v38 == 1)
        {

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
            swift_bridgeObjectRelease();
          v106 = *(void **)(a1 + 144);
          if (!v106)
            goto LABEL_74;

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 224) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(a1 + 272) < 0x11uLL)
            goto LABEL_74;
        }
        else
        {
          if (*(_BYTE *)(a1 + 281))
            goto LABEL_74;
LABEL_39:

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(a1 + 128) < 0x11uLL)
          {
LABEL_74:
            sub_1BAB4832C();
            a1 += *(int *)(v45 + 48);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                goto LABEL_75;
              case 1u:
                goto LABEL_77;
              case 2u:
                goto LABEL_79;
              case 3u:
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                swift_unknownObjectRelease();
                v4 = (int *)type metadata accessor for FeedHeadline(0);
                v76 = v4[10];
                v6 = a1 + v76 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
                goto LABEL_136;
              case 4u:
                goto LABEL_80;
              case 5u:
                goto LABEL_148;
              case 6u:
                v72 = *(unsigned __int8 *)(a1 + 281);
                if (v72 == 2)
                  goto LABEL_152;
                if (v72 != 1)
                  goto LABEL_147;
                goto LABEL_123;
              case 7u:
                goto LABEL_152;
              case 8u:
                goto LABEL_97;
              case 9u:
                goto LABEL_100;
              case 0xAu:
                goto LABEL_106;
              case 0xBu:
                goto LABEL_109;
              case 0xCu:
                goto LABEL_118;
              case 0xDu:
                goto LABEL_110;
              case 0xEu:
                goto LABEL_116;
              case 0xFu:
                if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
                  swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v84 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
                swift_unknownObjectRelease();
                v75 = v84 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
                type metadata accessor for PuzzleStatisticCategory(0);
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 0u:
                    goto LABEL_159;
                  case 1u:
                    goto LABEL_160;
                  case 2u:
                    goto LABEL_173;
                  case 3u:
                    goto LABEL_177;
                  default:
                    return;
                }
                return;
              case 0x10u:
                goto LABEL_119;
              default:
                return;
            }
          }
        }
LABEL_73:
        swift_bridgeObjectRelease();
        goto LABEL_74;
      case 7:
LABEL_43:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 88) != 1)
        {
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 120))
            __swift_destroy_boxed_opaque_existential_1(a1 + 96);
        }
        goto LABEL_74;
      case 8:
        swift_bridgeObjectRelease();
        v39 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40 = v39 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
        v41 = type metadata accessor for FormatCustomItem.Action();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
        {
          v42 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v40, v42);
        }
        goto LABEL_73;
      case 9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 56))
          __swift_destroy_boxed_opaque_existential_1(a1 + 32);
        if (*(_QWORD *)(a1 + 96))
          __swift_destroy_boxed_opaque_existential_1(a1 + 72);
        if (*(_QWORD *)(a1 + 136))
          __swift_destroy_boxed_opaque_existential_1(a1 + 112);
        goto LABEL_74;
      case 10:
        swift_bridgeObjectRelease();
        v7 = type metadata accessor for FeedEngagementBanner();
        v8 = a1 + *(int *)(v7 + 20);
        v9 = sub_1BB86EDAC();
LABEL_56:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        if (*(_QWORD *)(a1 + *(int *)(v7 + 32) + 8) < 0x11uLL)
          goto LABEL_74;
        goto LABEL_73;
      case 11:
LABEL_58:
        swift_release();
        goto LABEL_74;
      case 12:
        goto LABEL_67;
      case 13:
        if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 112))
          __swift_destroy_boxed_opaque_existential_1(a1 + 88);
        if (*(_QWORD *)(a1 + 152))
          __swift_destroy_boxed_opaque_existential_1(a1 + 128);
        goto LABEL_74;
      case 14:
        if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
LABEL_67:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_74;
      case 15:
        if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        swift_unknownObjectRelease();
        v44 = v43 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            type metadata accessor for PuzzleStatisticValue(0);
            goto LABEL_201;
          case 1u:
            type metadata accessor for PuzzleStatisticValue(0);
            v107 = swift_getEnumCaseMultiPayload();
            if (v107 == 5 || v107 == 4)
            {
              v108 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 48))(v44, 1, v108))
              {
                v109 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 8))(v44, v109);
              }
            }
            v110 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            v111 = v44 + *(int *)(v110 + 20);
            v112 = swift_getEnumCaseMultiPayload();
            if (v112 == 5 || v112 == 4)
            {
              v113 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 48))(v111, 1, v113))
              {
                v114 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 8))(v111, v114);
              }
            }
            v44 += *(int *)(v110 + 24);
LABEL_201:
            v115 = swift_getEnumCaseMultiPayload();
            if (v115 == 5 || v115 == 4)
            {
              v116 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 48))(v44, 1, v116))goto LABEL_212;
            }
            goto LABEL_74;
          case 2u:
            v117 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 48))(v44, 1, v117))
            {
              goto LABEL_74;
            }
            v118 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 8))(v44, v118);
            v119 = type metadata accessor for PuzzleLeaderboardEntry();
            swift_bridgeObjectRelease();
            v120 = v44 + *(int *)(v119 + 24);
            swift_bridgeObjectRelease();
            v121 = *(_QWORD *)(v120 + 24);
            if (v121 >> 60 != 15)
              sub_1BA69D314(*(_QWORD *)(v120 + 16), v121);
            goto LABEL_73;
          case 3u:
            v122 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
            v123 = v44 + *(int *)(v122 + 24);
            v124 = type metadata accessor for PuzzleStreak();
            v125 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 48);
            if (!v125(v123, 1, v124))
            {
              v126 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 8))(v123, v126);
            }
            v44 += *(int *)(v122 + 28);
            if (!v125(v44, 1, v124))
            {
LABEL_212:
              v127 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 8))(v44, v127);
            }
            goto LABEL_74;
          default:
            goto LABEL_74;
        }
      case 16:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 240) >= 0x11uLL)
          goto LABEL_73;
        goto LABEL_74;
      default:
        goto LABEL_74;
    }
  }
  switch(v3)
  {
    case 0:
LABEL_75:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 48) < 0x11uLL)
        return;
      goto LABEL_151;
    case 1:
LABEL_77:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80) < 0x11uLL)
        return;
      goto LABEL_151;
    case 2:
LABEL_79:
      swift_bridgeObjectRelease();
      v46 = type metadata accessor for FeedBannerAd();
      v47 = a1 + *(int *)(v46 + 20);
      v48 = sub_1BB8721C0();
      goto LABEL_107;
    case 3:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v4 = (int *)type metadata accessor for FeedHeadline(0);
      v5 = a1 + v4[10];
      v6 = v5 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
LABEL_136:
      v77 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v6, 1, v77))
      {
        v78 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v6, v78);

        v79 = v6 + *(int *)(v77 + 28);
        v80 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v79, v80);
      }
      v81 = a1 + v4[11];
      v82 = sub_1BB871B24();
      v83 = *(_QWORD *)(v82 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
        (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v82);
      if (*(_QWORD *)(a1 + v4[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v4[13]) >= 3uLL)
        swift_unknownObjectRelease();

      return;
    case 4:
LABEL_80:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = (int *)type metadata accessor for FeedWebEmbed();
      v50 = a1 + v49[8];
      v51 = sub_1BB86C67C();
      v52 = *(_QWORD *)(v51 - 8);
      v53 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v53(v50, v51);
      v54 = a1 + v49[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v54, 1, v51))
        v53(v54, v51);
      swift_release();
      swift_release();
      v55 = a1 + v49[12];
      v56 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v56 - 1) + 48))(v55, 1, v56))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v57 = v56[10];
        v58 = v55 + v57 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v59 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59))
        {
          v60 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v58, v60);

          v53(v58 + *(int *)(v59 + 28), v51);
        }
        v61 = v55 + v56[11];
        v62 = sub_1BB871B24();
        v63 = *(_QWORD *)(v62 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
          (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
        if (*(_QWORD *)(v55 + v56[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(v55 + v56[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v64 = a1 + v49[13];
      v65 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v64, 1, v65))
        return;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_109;
      swift_bridgeObjectRelease();
      v66 = type metadata accessor for GenericDataVisualization();
      v53(v64 + *(int *)(v66 + 20), v51);
      goto LABEL_151;
    case 5:
      goto LABEL_148;
    case 6:
      v72 = *(unsigned __int8 *)(a1 + 281);
      if (v72 == 2)
        goto LABEL_152;
      if (v72 == 1)
      {
LABEL_123:

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v73 = *(void **)(a1 + 144);
        if (!v73)
          return;

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(a1 + 272) < 0x11uLL)
          return;
LABEL_151:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_147:
      if (v72)
        return;
LABEL_148:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
        goto LABEL_151;
      return;
    case 7:
LABEL_152:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 88) == 1)
        return;
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(a1 + 120))
        return;
      v71 = a1 + 96;
      goto LABEL_155;
    case 8:
LABEL_97:
      swift_bridgeObjectRelease();
      v67 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v68 = v67 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v69 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48))(v68, 1, v69))
      {
        v70 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v68, v70);
      }
      goto LABEL_151;
    case 9:
LABEL_100:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 56))
        __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      if (*(_QWORD *)(a1 + 96))
        __swift_destroy_boxed_opaque_existential_1(a1 + 72);
      if (!*(_QWORD *)(a1 + 136))
        return;
      v71 = a1 + 112;
      goto LABEL_155;
    case 10:
LABEL_106:
      swift_bridgeObjectRelease();
      v46 = type metadata accessor for FeedEngagementBanner();
      v47 = a1 + *(int *)(v46 + 20);
      v48 = sub_1BB86EDAC();
LABEL_107:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
      if (*(_QWORD *)(a1 + *(int *)(v46 + 32) + 8) < 0x11uLL)
        return;
      goto LABEL_151;
    case 11:
LABEL_109:
      swift_release();
      return;
    case 12:
      goto LABEL_118;
    case 13:
LABEL_110:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 112))
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      if (!*(_QWORD *)(a1 + 152))
        return;
      v71 = a1 + 128;
LABEL_155:
      __swift_destroy_boxed_opaque_existential_1(v71);
      return;
    case 14:
LABEL_116:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_118:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    case 15:
      if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v74 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v75 = v74 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
LABEL_159:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_169;
        case 1u:
LABEL_160:
          type metadata accessor for PuzzleStatisticValue(0);
          v85 = swift_getEnumCaseMultiPayload();
          if (v85 == 5 || v85 == 4)
          {
            v86 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 48))(v75, 1, v86))
            {
              v87 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 8))(v75, v87);
            }
          }
          v88 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v89 = v75 + *(int *)(v88 + 20);
          v90 = swift_getEnumCaseMultiPayload();
          if (v90 == 5 || v90 == 4)
          {
            v91 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 48))(v89, 1, v91))
            {
              v92 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 8))(v89, v92);
            }
          }
          v75 += *(int *)(v88 + 24);
LABEL_169:
          v93 = swift_getEnumCaseMultiPayload();
          if (v93 == 5 || v93 == 4)
          {
            v94 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 48))(v75, 1, v94))goto LABEL_182;
          }
          return;
        case 2u:
LABEL_173:
          v95 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 48))(v75, 1, v95))
            return;
          v96 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 8))(v75, v96);
          v97 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v98 = v75 + *(int *)(v97 + 24);
          swift_bridgeObjectRelease();
          v99 = *(_QWORD *)(v98 + 24);
          if (v99 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v98 + 16), v99);
          goto LABEL_151;
        case 3u:
LABEL_177:
          v100 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v101 = v75 + *(int *)(v100 + 24);
          v102 = type metadata accessor for PuzzleStreak();
          v103 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 48);
          if (!v103(v101, 1, v102))
          {
            v104 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 8))(v101, v104);
          }
          v75 += *(int *)(v100 + 28);
          if (v103(v75, 1, v102))
            return;
LABEL_182:
          v105 = sub_1BB86BEC0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 8))(v75, v105);
          return;
        default:
          return;
      }
    case 16:
LABEL_119:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 240) < 0x11uLL)
        return;
      goto LABEL_151;
    default:
      return;
  }
}

uint64_t initializeWithCopy for FormatLayoutViewRoute(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  char *v102;
  int *v103;
  unsigned int (*v104)(char *, uint64_t, int *);
  uint64_t v105;
  void *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  id v110;
  id v111;
  __int128 v112;
  int v113;
  void *v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  id v118;
  id v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  const void *v135;
  uint64_t v136;
  unsigned int (*v137)(const void *, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  int *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  unint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _BYTE *v165;
  uint64_t v166;
  int *v167;
  uint64_t v168;
  char *v169;
  int *v170;
  unsigned int (*v171)(char *, uint64_t, int *);
  uint64_t v172;
  void *v173;
  uint64_t v174;
  void *v175;
  uint64_t v176;
  id v177;
  id v178;
  __int128 v179;
  int v180;
  void *v181;
  uint64_t v182;
  void *v183;
  uint64_t v184;
  id v185;
  id v186;
  __int128 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  __int128 v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  const void *v202;
  uint64_t v203;
  uint64_t v204;
  unsigned int (*v205)(const void *, uint64_t, uint64_t);
  uint64_t v206;
  uint64_t v207;
  int *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void (*v213)(uint64_t, uint64_t, uint64_t);
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  unint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  unint64_t v223;
  uint64_t v224;
  int *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void (*v231)(uint64_t, uint64_t, uint64_t);
  uint64_t v232;
  void *v233;
  const void *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  int *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void (*v244)(uint64_t, uint64_t, uint64_t);
  uint64_t v245;
  void *v246;
  const void *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  void *v252;
  id v253;
  _QWORD *v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  void *v259;
  uint64_t v260;
  id v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  void *v268;
  id v269;
  _QWORD *v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  uint64_t v276;
  id v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  __int128 v282;
  _OWORD *v283;
  _OWORD *v284;
  uint64_t v285;
  uint64_t v286;
  __int128 v287;
  _OWORD *v288;
  _OWORD *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  _QWORD *v293;
  _QWORD *v294;
  uint64_t v295;
  uint64_t v296;
  unsigned int (*v297)(_QWORD *, uint64_t, uint64_t);
  uint64_t v298;
  int *v299;
  uint64_t v300;
  _QWORD *v301;
  _QWORD *v302;
  uint64_t v303;
  uint64_t v304;
  unsigned int (*v305)(_QWORD *, uint64_t, uint64_t);
  uint64_t v306;
  int *v307;
  __int128 v308;
  _OWORD *v309;
  _OWORD *v310;
  uint64_t v311;
  uint64_t v312;
  __int128 v313;
  _OWORD *v314;
  _OWORD *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  _BYTE *v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  int *v326;
  unsigned int (*v327)(char *, uint64_t, int *);
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  _BYTE *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  int *v337;
  unsigned int (*v338)(char *, uint64_t, int *);
  uint64_t v339;
  __int128 v340;
  __int128 v341;
  uint64_t v342;
  uint64_t v343;
  void *v344;
  uint64_t v345;
  uint64_t v346;
  void (*v347)(char *, char *, uint64_t);
  id v348;
  uint64_t v349;
  void *v350;
  const void *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  void *v358;
  uint64_t v359;
  uint64_t v360;
  void (*v361)(char *, char *, uint64_t);
  id v362;
  uint64_t v363;
  void *v364;
  const void *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  __int128 v370;
  _OWORD *v371;
  _OWORD *v372;
  uint64_t v373;
  uint64_t v374;
  __int128 v375;
  _OWORD *v376;
  _OWORD *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  _QWORD *v381;
  _QWORD *v382;
  unint64_t v383;
  uint64_t v384;
  unint64_t v385;
  uint64_t v386;
  _QWORD *v387;
  _QWORD *v388;
  unint64_t v389;
  uint64_t v390;
  unint64_t v391;
  __int128 v392;
  __int128 v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  _OWORD *v398;
  _OWORD *v399;
  __int128 v400;
  void *v401;
  uint64_t v402;
  void *v403;
  uint64_t v404;
  id v405;
  id v406;
  __int128 v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  _OWORD *v412;
  _OWORD *v413;
  __int128 v414;
  void *v415;
  uint64_t v416;
  void *v417;
  uint64_t v418;
  id v419;
  id v420;
  __int128 v421;
  uint64_t v422;
  void *v423;
  id v424;
  uint64_t v425;
  void *v426;
  id v427;
  __int128 v428;
  __int128 v429;
  uint64_t v430;
  uint64_t v431;
  void *v432;
  id v433;
  _QWORD *v434;
  unint64_t v435;
  uint64_t v436;
  uint64_t v437;
  void *v438;
  id v439;
  _QWORD *v440;
  unint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  void *v446;
  id v447;
  _QWORD *v448;
  unint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  void *v454;
  id v455;
  _QWORD *v456;
  unint64_t v457;
  void *v458;
  uint64_t v459;
  uint64_t v460;
  void *v461;
  uint64_t v462;
  id v463;
  id v464;
  __int128 v465;
  void *v466;
  uint64_t v467;
  uint64_t v468;
  void *v469;
  uint64_t v470;
  id v471;
  id v472;
  __int128 v473;
  uint64_t v474;
  uint64_t v475;
  void *v476;
  uint64_t v477;
  char *v478;
  char *v479;
  id v480;
  uint64_t v481;
  char *v482;
  char *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  void *v489;
  uint64_t v490;
  char *v491;
  char *v492;
  id v493;
  uint64_t v494;
  char *v495;
  char *v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  _QWORD *v501;
  _QWORD *v502;
  unint64_t v503;
  uint64_t v504;
  unint64_t v505;
  uint64_t v506;
  _QWORD *v507;
  _QWORD *v508;
  unint64_t v509;
  uint64_t v510;
  unint64_t v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  uint64_t v520;
  uint64_t v521;
  void *v522;
  id v523;
  _QWORD *v524;
  unint64_t v525;
  uint64_t v526;
  uint64_t v527;
  void *v528;
  id v529;
  _QWORD *v530;
  unint64_t v531;
  uint64_t v532;
  void *v533;
  void (*v534)(_QWORD *, _QWORD, uint64_t, int *);
  id v535;
  uint64_t v536;
  _QWORD *v537;
  uint64_t *v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  int v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  char *v547;
  char *v548;
  char *v549;
  char *v550;
  uint64_t v551;
  void *v552;
  void (*v553)(_QWORD *, _QWORD, uint64_t, int *);
  id v554;
  uint64_t v555;
  _QWORD *v556;
  uint64_t *v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  int v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  char *v566;
  char *v567;
  char *v568;
  __int128 v569;
  __int128 v570;
  uint64_t v571;
  uint64_t v572;
  char *v573;
  char *v574;
  uint64_t v575;
  uint64_t v576;
  _QWORD *v577;
  unint64_t v578;
  uint64_t v579;
  int *v580;
  uint64_t v581;
  char *v582;
  char *v583;
  uint64_t v584;
  void (*v585)(char *, char *, uint64_t);
  uint64_t v586;
  char *v587;
  char *v588;
  uint64_t v589;
  uint64_t v590;
  _QWORD *v591;
  unint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  _QWORD *v600;
  unint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  unint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  _QWORD *v617;
  unint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  char *v622;
  char *v623;
  int *v624;
  uint64_t v625;
  char *v626;
  int *v627;
  unsigned int (*v628)(char *, uint64_t, int *);
  uint64_t v629;
  void *v630;
  uint64_t v631;
  void *v632;
  uint64_t v633;
  id v634;
  id v635;
  __int128 v636;
  int v637;
  void *v638;
  uint64_t v639;
  void *v640;
  uint64_t v641;
  id v642;
  id v643;
  __int128 v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  __int128 v649;
  __int128 v650;
  uint64_t v651;
  uint64_t v652;
  char *v653;
  char *v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  char *v659;
  uint64_t v660;
  unsigned int (*v661)(char *, uint64_t, uint64_t);
  uint64_t v662;
  uint64_t v663;
  int *v664;
  uint64_t v665;
  char *v666;
  char *v667;
  uint64_t v668;
  void (*v669)(char *, char *, uint64_t);
  uint64_t v670;
  char *v671;
  char *v672;
  uint64_t v673;
  uint64_t v674;
  _QWORD *v675;
  unint64_t v676;
  uint64_t v677;
  _QWORD *v678;
  unint64_t v679;
  uint64_t v680;
  int *v681;
  uint64_t v682;
  char *v683;
  char *v684;
  uint64_t v685;
  uint64_t v686;
  void (*v687)(char *, char *, uint64_t);
  uint64_t v688;
  char *v689;
  char *v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  void *v695;
  id v696;
  _QWORD *v697;
  unint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  void *v702;
  uint64_t v703;
  id v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  char *v708;
  __int128 v709;
  _OWORD *v710;
  _OWORD *v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  char *v715;
  char *v716;
  uint64_t v717;
  uint64_t v718;
  unsigned int (*v719)(char *, uint64_t, uint64_t);
  uint64_t v720;
  int *v721;
  __int128 v722;
  _OWORD *v723;
  _OWORD *v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  char *v730;
  char *v731;
  int *v732;
  uint64_t v733;
  char *v734;
  int *v735;
  uint64_t (*v736)(char *, uint64_t, int *);
  int v737;
  _QWORD *v738;
  uint64_t v739;
  __int128 v740;
  uint64_t v741;
  uint64_t v742;
  void *v743;
  uint64_t v744;
  uint64_t v745;
  id v746;
  uint64_t v747;
  char *v748;
  char *v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  __int128 v754;
  _OWORD *v755;
  _OWORD *v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  char *v760;
  char *v761;
  unint64_t v762;
  uint64_t v763;
  unint64_t v764;
  __int128 v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  _OWORD *v770;
  _OWORD *v771;
  __int128 v772;
  void *v773;
  uint64_t v774;
  void *v775;
  uint64_t v776;
  id v777;
  id v778;
  __int128 v779;
  uint64_t v780;
  void *v781;
  id v782;
  __int128 v783;
  uint64_t v784;
  uint64_t v785;
  void *v786;
  id v787;
  _QWORD *v788;
  unint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  void *v794;
  id v795;
  _QWORD *v796;
  unint64_t v797;
  void *v798;
  uint64_t v799;
  uint64_t v800;
  void *v801;
  uint64_t v802;
  id v803;
  id v804;
  __int128 v805;
  uint64_t v806;
  uint64_t v807;
  void *v808;
  uint64_t v809;
  char *v810;
  char *v811;
  char *v812;
  id v813;
  char *v814;
  uint64_t v815;
  char *v816;
  char *v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  char *v822;
  _QWORD *v823;
  unint64_t v824;
  uint64_t v825;
  unint64_t v826;
  __int128 v827;
  __int128 v828;
  __int128 v829;
  __int128 v830;
  uint64_t v831;
  uint64_t v832;
  void *v833;
  id v834;
  _QWORD *v835;
  unint64_t v836;
  uint64_t v837;
  void *v838;
  void (*v839)(char *, _QWORD, uint64_t, int *);
  id v840;
  int *v841;
  uint64_t v842;
  char *v843;
  char *v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  int v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  char *v852;
  __int128 v853;
  uint64_t result;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  char *v858;
  char *v859;
  int *v860;
  int *v861;
  int *v862;
  char *v863;
  _QWORD *v864;
  _QWORD *v865;
  uint64_t v866;
  void (*v867)(char *, char *, uint64_t);
  uint64_t v868;
  uint64_t v869;
  char *v870;
  char *v871;
  uint64_t v872;
  int *v873;
  _QWORD *v874;
  _QWORD *v875;
  int *v876;
  int *v877;
  _QWORD *v878;
  char *v879;
  char *v880;
  char *v881;
  _QWORD *__dst;
  _QWORD *__dsta;
  char *__dstb;
  _QWORD *__dstc;
  char *__dstd;
  void (*__dste)(char *, char *, void *);
  void (*__dstf)(char *, char *, void *);
  int *__dstg;
  _QWORD *__dsth;
  void (*__dsti)(char *, char *, void *);
  int *v892;
  char *v893;
  int *v894;
  char *v895;
  void *v896;
  void *v897;
  char *v898;
  void *v899;
  char *v900;
  uint64_t v901;
  uint64_t v902;
  int *v903;
  int *v904;
  char *v905;
  char *v906;
  uint64_t v907;
  int *v908;
  char *v909;
  uint64_t v910;
  uint64_t v911;
  uint64_t v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = type metadata accessor for FeedItem(0);
  v6 = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    switch(v6)
    {
      case 0:
        v7 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v7;
        v8 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v8;
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        v9 = (_QWORD *)(a2 + 40);
        v10 = *(_QWORD *)(a2 + 48);
        swift_bridgeObjectRetain();
        if (v10 >= 0x11)
        {
          *(_QWORD *)(a1 + 40) = *v9;
          *(_QWORD *)(a1 + 48) = v10;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)v9;
        }
        goto LABEL_281;
      case 1:
        v89 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v89;
        v90 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v90;
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        v91 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = v91;
        v92 = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = v92;
        v93 = (_QWORD *)(a2 + 72);
        v94 = *(_QWORD *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v94 >= 0x11)
        {
          *(_QWORD *)(a1 + 72) = *v93;
          *(_QWORD *)(a1 + 80) = v94;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v93;
        }
        goto LABEL_281;
      case 2:
        v15 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v15;
        v16 = (int *)type metadata accessor for FeedBannerAd();
        v17 = v16[5];
        v18 = a1 + v17;
        v19 = a2 + v17;
        v20 = sub_1BB8721C0();
        v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        *(_QWORD *)(a1 + v16[6]) = *(_QWORD *)(a2 + v16[6]);
        v22 = v16[7];
        v23 = a1 + v22;
        v24 = a2 + v22;
        *(_QWORD *)v23 = *(_QWORD *)v24;
        *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
        v25 = v16[8];
        v26 = a1 + v25;
        v27 = a2 + v25;
        v28 = *(_QWORD *)(v27 + 8);
        if (v28 >= 0x11)
          goto LABEL_74;
        *(_OWORD *)v26 = *(_OWORD *)v27;
        goto LABEL_281;
      case 3:
        v912 = v5;
        v95 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v95;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        v96 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = v96;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        v892 = (int *)type metadata accessor for FeedHeadline(0);
        v97 = v892[10];
        v98 = (_BYTE *)(a1 + v97);
        v99 = a2 + v97;
        *v98 = *(_BYTE *)(a2 + v97);
        v98[1] = *(_BYTE *)(a2 + v97 + 1);
        v100 = (int *)type metadata accessor for FeedHeadline.State(0);
        v101 = v100[6];
        __dstb = &v98[v101];
        v102 = (char *)(v99 + v101);
        v103 = (int *)type metadata accessor for SharedItem();
        v874 = (_QWORD *)*((_QWORD *)v103 - 1);
        v104 = (unsigned int (*)(char *, uint64_t, int *))v874[6];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v104(v102, 1, v103))
        {
          v105 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dstb, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
        }
        else
        {
          v342 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(__dstb, v102, v342);
          __dstb[v103[5]] = v102[v103[5]];
          v343 = v103[6];
          v344 = *(void **)&v102[v343];
          *(_QWORD *)&__dstb[v343] = v344;
          v345 = v103[7];
          v905 = &__dstb[v345];
          v870 = &v102[v345];
          v346 = sub_1BB86C67C();
          v347 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v346 - 8) + 16);
          v348 = v344;
          v347(v905, v870, v346);
          ((void (*)(char *, _QWORD, uint64_t, int *))v874[7])(__dstb, 0, 1, v103);
        }
        v5 = v912;
        v98[v100[7]] = *(_BYTE *)(v99 + v100[7]);
        v98[v100[8]] = *(_BYTE *)(v99 + v100[8]);
        v98[v100[9]] = *(_BYTE *)(v99 + v100[9]);
        v98[v100[10]] = *(_BYTE *)(v99 + v100[10]);
        v349 = v892[11];
        v350 = (void *)(a1 + v349);
        v351 = (const void *)(a2 + v349);
        v352 = sub_1BB871B24();
        v353 = *(_QWORD *)(v352 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v353 + 48))(v351, 1, v352))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v350, v351, *(_QWORD *)(*(_QWORD *)(v354 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v353 + 16))(v350, v351, v352);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v353 + 56))(v350, 0, 1, v352);
        }
        v380 = v892[12];
        v381 = (_QWORD *)(a1 + v380);
        v382 = (_QWORD *)(a2 + v380);
        v383 = v382[1];
        if (v383 >= 0x11)
        {
          *v381 = *v382;
          v381[1] = v383;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v381 = *(_OWORD *)v382;
        }
        v384 = v892[13];
        v385 = *(_QWORD *)(a2 + v384);
        if (v385 >= 2)
        {
          if (v385 == 2)
          {
            *(_QWORD *)(a1 + v384) = 2;
          }
          else
          {
            *(_QWORD *)(a1 + v384) = v385;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)(a1 + v384) = v385;
        }
        v422 = v892[14];
        v423 = *(void **)(a2 + v422);
        *(_QWORD *)(a1 + v422) = v423;
        v424 = v423;
        goto LABEL_281;
      case 4:
        v29 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v29;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v30 = (_QWORD *)(a2 + 24);
        v31 = *(_QWORD *)(a2 + 32);
        if (v31 >= 0x11)
        {
          *(_QWORD *)(a1 + 24) = *v30;
          *(_QWORD *)(a1 + 32) = v31;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v30;
        }
        v224 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = v224;
        v225 = (int *)type metadata accessor for FeedWebEmbed();
        v226 = v225[8];
        v227 = a1 + v226;
        v228 = a2 + v226;
        v229 = sub_1BB86C67C();
        v230 = *(_QWORD *)(v229 - 8);
        v231 = *(void (**)(uint64_t, uint64_t, uint64_t))(v230 + 16);
        swift_bridgeObjectRetain();
        v231(v227, v228, v229);
        v232 = v225[9];
        v233 = (void *)(a1 + v232);
        v234 = (const void *)(a2 + v232);
        __dste = (void (*)(char *, char *, void *))v231;
        v896 = (void *)v229;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v230 + 48))(a2 + v232, 1, v229))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
        }
        else
        {
          v231((uint64_t)v233, (uint64_t)v234, v229);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v230 + 56))(v233, 0, 1, v229);
        }
        *(_QWORD *)(a1 + v225[10]) = *(_QWORD *)(a2 + v225[10]);
        *(_QWORD *)(a1 + v225[11]) = *(_QWORD *)(a2 + v225[11]);
        v292 = v225[12];
        v293 = (_QWORD *)(a1 + v292);
        v903 = v225;
        v294 = (_QWORD *)(a2 + v292);
        v295 = type metadata accessor for FeedHeadline(0);
        v296 = *(_QWORD *)(v295 - 8);
        v297 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v296 + 48);
        swift_retain();
        swift_retain();
        if (v297(v294, 1, v295))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v293, v294, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
          v299 = v903;
        }
        else
        {
          v868 = v296;
          v876 = (int *)v295;
          v914 = v5;
          v318 = v294[1];
          *v293 = *v294;
          v293[1] = v318;
          v293[2] = v294[2];
          *((_BYTE *)v293 + 24) = *((_BYTE *)v294 + 24);
          v319 = v294[5];
          v293[4] = v294[4];
          v293[5] = v319;
          v293[6] = v294[6];
          *((_BYTE *)v293 + 56) = *((_BYTE *)v294 + 56);
          v320 = *(int *)(v295 + 40);
          v321 = (char *)v293 + v320;
          v864 = v294;
          v322 = (char *)v294 + v320;
          *v321 = *((_BYTE *)v294 + v320);
          v321[1] = *((_BYTE *)v294 + v320 + 1);
          v323 = type metadata accessor for FeedHeadline.State(0);
          v324 = *(int *)(v323 + 24);
          v858 = &v321[v324];
          v861 = (int *)v323;
          v325 = &v322[v324];
          v326 = (int *)type metadata accessor for SharedItem();
          v856 = *((_QWORD *)v326 - 1);
          v327 = *(unsigned int (**)(char *, uint64_t, int *))(v856 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v327(v325, 1, v326))
          {
            v328 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v858, v325, *(_QWORD *)(*(_QWORD *)(v328 - 8) + 64));
          }
          else
          {
            v474 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v474 - 8) + 16))(v858, v325, v474);
            v858[v326[5]] = v325[v326[5]];
            v475 = v326[6];
            v476 = *(void **)&v325[v475];
            *(_QWORD *)&v858[v475] = v476;
            v477 = v326[7];
            v478 = &v858[v477];
            v479 = &v325[v477];
            v480 = v476;
            __dste(v478, v479, v896);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v856 + 56))(v858, 0, 1, v326);
          }
          v321[v861[7]] = v322[v861[7]];
          v321[v861[8]] = v322[v861[8]];
          v321[v861[9]] = v322[v861[9]];
          v321[v861[10]] = v322[v861[10]];
          v481 = v876[11];
          v482 = (char *)v293 + v481;
          v483 = (char *)v864 + v481;
          v484 = sub_1BB871B24();
          v485 = *(_QWORD *)(v484 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v485 + 48))(v483, 1, v484))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v482, v483, *(_QWORD *)(*(_QWORD *)(v486 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v485 + 16))(v482, v483, v484);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v485 + 56))(v482, 0, 1, v484);
          }
          v299 = v903;
          v5 = v914;
          v500 = v876[12];
          v501 = (_QWORD *)((char *)v293 + v500);
          v502 = (_QWORD *)((char *)v864 + v500);
          v503 = v502[1];
          if (v503 >= 0x11)
          {
            *v501 = *v502;
            v501[1] = v503;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v501 = *(_OWORD *)v502;
          }
          v504 = v876[13];
          v505 = *(_QWORD *)((char *)v864 + v504);
          if (v505 >= 2)
          {
            if (v505 == 2)
            {
              *(_QWORD *)((char *)v293 + v504) = 2;
            }
            else
            {
              *(_QWORD *)((char *)v293 + v504) = v505;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)((char *)v293 + v504) = v505;
          }
          v532 = v876[14];
          v533 = *(void **)((char *)v864 + v532);
          *(_QWORD *)((char *)v293 + v532) = v533;
          v534 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v868 + 56);
          v535 = v533;
          v534(v293, 0, 1, v876);
        }
        v536 = v299[13];
        v537 = (_QWORD *)(a1 + v536);
        v538 = (uint64_t *)(a2 + v536);
        v539 = type metadata accessor for WebEmbedDataVisualization();
        v540 = *(_QWORD *)(v539 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v540 + 48))(v538, 1, v539))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v537, v538, *(_QWORD *)(*(_QWORD *)(v541 - 8) + 64));
        }
        else
        {
          v542 = swift_getEnumCaseMultiPayload();
          v543 = *v538;
          if (v542 == 1)
          {
            v544 = v538[1];
            *v537 = v543;
            v537[1] = v544;
            v545 = type metadata accessor for GenericDataVisualization();
            v546 = *(int *)(v545 + 20);
            v547 = (char *)v537 + v546;
            v915 = v5;
            v548 = (char *)v538 + v546;
            swift_bridgeObjectRetain();
            v549 = v547;
            v550 = v548;
            v299 = v903;
            v5 = v915;
            __dste(v549, v550, v896);
            *(_QWORD *)((char *)v537 + *(int *)(v545 + 24)) = *(uint64_t *)((char *)v538 + *(int *)(v545 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            *v537 = v543;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v540 + 56))(v537, 0, 1, v539);
        }
        *(_BYTE *)(a1 + v299[14]) = *(_BYTE *)(a2 + v299[14]);
        goto LABEL_281;
      case 5:
        v106 = *(void **)a2;
        v107 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v107;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        v108 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v108;
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        v109 = *(_QWORD *)(a2 + 80);
        v110 = v106;
        swift_bridgeObjectRetain();
        v111 = v108;
        if (v109 == 1)
        {
          v112 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v112;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        }
        else
        {
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 80) = v109;
          v250 = *(_QWORD *)(a2 + 96);
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          *(_QWORD *)(a1 + 96) = v250;
          v252 = *(void **)(a2 + 104);
          v251 = *(_QWORD *)(a2 + 112);
          *(_QWORD *)(a1 + 104) = v252;
          *(_QWORD *)(a1 + 112) = v251;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v253 = v252;
        }
        v254 = (_QWORD *)(a2 + 120);
        v255 = *(_QWORD *)(a2 + 128);
        if (v255 >= 0x11)
        {
          *(_QWORD *)(a1 + 120) = *v254;
          *(_QWORD *)(a1 + 128) = v255;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v254;
        }
        *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
        goto LABEL_281;
      case 6:
        v113 = *(unsigned __int8 *)(a2 + 281);
        if (v113 == 2)
        {
          v394 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v394;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
          v395 = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = v395;
          v396 = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = v396;
          v397 = *(_QWORD *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v397 == 1)
          {
            v398 = (_OWORD *)(a1 + 80);
            v399 = (_OWORD *)(a2 + 80);
            v400 = *(_OWORD *)(a2 + 128);
            *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 128) = v400;
            *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
            goto LABEL_248;
          }
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 88) = v397;
          v442 = *(_QWORD *)(a2 + 120);
          swift_bridgeObjectRetain();
          if (v442)
          {
            v443 = *(_QWORD *)(a2 + 128);
            *(_QWORD *)(a1 + 120) = v442;
            *(_QWORD *)(a1 + 128) = v443;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v442 - 8))(a1 + 96, a2 + 96, v442);
            *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
          }
          else
          {
            v569 = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 112) = v569;
            *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
          }
          *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
        }
        else
        {
          if (v113 == 1)
          {
            v114 = *(void **)a2;
            v115 = *(_QWORD *)(a2 + 8);
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = v115;
            *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
            *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
            *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
            *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
            v116 = *(void **)(a2 + 56);
            *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
            *(_QWORD *)(a1 + 56) = v116;
            *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
            v117 = *(_QWORD *)(a2 + 80);
            v118 = v114;
            swift_bridgeObjectRetain();
            v119 = v116;
            if (v117 == 1)
            {
              v120 = *(_OWORD *)(a2 + 88);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
              *(_OWORD *)(a1 + 88) = v120;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
            }
            else
            {
              *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
              *(_QWORD *)(a1 + 80) = v117;
              v430 = *(_QWORD *)(a2 + 96);
              *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
              *(_QWORD *)(a1 + 96) = v430;
              v432 = *(void **)(a2 + 104);
              v431 = *(_QWORD *)(a2 + 112);
              *(_QWORD *)(a1 + 104) = v432;
              *(_QWORD *)(a1 + 112) = v431;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v433 = v432;
            }
            v434 = (_QWORD *)(a2 + 120);
            v435 = *(_QWORD *)(a2 + 128);
            if (v435 >= 0x11)
            {
              *(_QWORD *)(a1 + 120) = *v434;
              *(_QWORD *)(a1 + 128) = v435;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v434;
            }
            v399 = (_OWORD *)(a2 + 144);
            v458 = *(void **)(a2 + 144);
            *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
            if (v458)
            {
              v459 = *(_QWORD *)(a2 + 152);
              v460 = *(_QWORD *)(a2 + 160);
              *(_QWORD *)(a1 + 144) = v458;
              *(_QWORD *)(a1 + 152) = v459;
              *(_QWORD *)(a1 + 160) = v460;
              *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
              *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
              *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
              v461 = *(void **)(a2 + 200);
              *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
              *(_QWORD *)(a1 + 200) = v461;
              *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
              v462 = *(_QWORD *)(a2 + 224);
              v463 = v458;
              swift_bridgeObjectRetain();
              v464 = v461;
              if (v462 == 1)
              {
                v465 = *(_OWORD *)(a2 + 232);
                *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
                *(_OWORD *)(a1 + 232) = v465;
                *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
              }
              else
              {
                *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
                *(_QWORD *)(a1 + 224) = v462;
                v520 = *(_QWORD *)(a2 + 240);
                *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
                *(_QWORD *)(a1 + 240) = v520;
                v522 = *(void **)(a2 + 248);
                v521 = *(_QWORD *)(a2 + 256);
                *(_QWORD *)(a1 + 248) = v522;
                *(_QWORD *)(a1 + 256) = v521;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v523 = v522;
              }
              v524 = (_QWORD *)(a2 + 264);
              v525 = *(_QWORD *)(a2 + 272);
              if (v525 >= 0x11)
              {
                *(_QWORD *)(a1 + 264) = *v524;
                *(_QWORD *)(a1 + 272) = v525;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 264) = *(_OWORD *)v524;
              }
              *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
              goto LABEL_278;
            }
            v398 = (_OWORD *)(a1 + 144);
            v512 = *(_OWORD *)(a2 + 256);
            *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
            *(_OWORD *)(a1 + 256) = v512;
            *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
            v513 = *(_OWORD *)(a2 + 192);
            *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
            *(_OWORD *)(a1 + 192) = v513;
            v514 = *(_OWORD *)(a2 + 224);
            *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
            *(_OWORD *)(a1 + 224) = v514;
LABEL_248:
            v515 = v399[1];
            *v398 = *v399;
            v398[1] = v515;
            goto LABEL_278;
          }
          v401 = *(void **)a2;
          v402 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v402;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
          v403 = *(void **)(a2 + 56);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = v403;
          *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
          v404 = *(_QWORD *)(a2 + 80);
          v405 = v401;
          swift_bridgeObjectRetain();
          v406 = v403;
          if (v404 == 1)
          {
            v407 = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
            *(_OWORD *)(a1 + 88) = v407;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
          }
          else
          {
            *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
            *(_QWORD *)(a1 + 80) = v404;
            v444 = *(_QWORD *)(a2 + 96);
            *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
            *(_QWORD *)(a1 + 96) = v444;
            v446 = *(void **)(a2 + 104);
            v445 = *(_QWORD *)(a2 + 112);
            *(_QWORD *)(a1 + 104) = v446;
            *(_QWORD *)(a1 + 112) = v445;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v447 = v446;
          }
          v448 = (_QWORD *)(a2 + 120);
          v449 = *(_QWORD *)(a2 + 128);
          if (v449 >= 0x11)
          {
            *(_QWORD *)(a1 + 120) = *v448;
            *(_QWORD *)(a1 + 128) = v449;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v448;
          }
          *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
        }
LABEL_278:
        *(_BYTE *)(a1 + 281) = v113;
LABEL_281:
        swift_storeEnumTagMultiPayload();
LABEL_282:
        sub_1BAB4832C();
        v572 = *(int *)(v571 + 48);
        v573 = (char *)(a1 + v572);
        v574 = (char *)(a2 + v572);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v575 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v575;
            v576 = *((_QWORD *)v574 + 3);
            *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
            *((_QWORD *)v573 + 3) = v576;
            v573[32] = v574[32];
            v577 = v574 + 40;
            v578 = *((_QWORD *)v574 + 6);
            swift_bridgeObjectRetain();
            if (v578 >= 0x11)
            {
              *((_QWORD *)v573 + 5) = *v577;
              *((_QWORD *)v573 + 6) = v578;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v573 + 40) = *(_OWORD *)v577;
            }
            goto LABEL_421;
          case 1u:
            v613 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v613;
            v614 = *((_QWORD *)v574 + 3);
            *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
            *((_QWORD *)v573 + 3) = v614;
            v573[32] = v574[32];
            v615 = *((_QWORD *)v574 + 6);
            *((_QWORD *)v573 + 5) = *((_QWORD *)v574 + 5);
            *((_QWORD *)v573 + 6) = v615;
            v616 = *((_QWORD *)v574 + 8);
            *((_QWORD *)v573 + 7) = *((_QWORD *)v574 + 7);
            *((_QWORD *)v573 + 8) = v616;
            v617 = v574 + 72;
            v618 = *((_QWORD *)v574 + 10);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v618 >= 0x11)
            {
              *((_QWORD *)v573 + 9) = *v617;
              *((_QWORD *)v573 + 10) = v618;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v573 + 72) = *(_OWORD *)v617;
            }
            goto LABEL_421;
          case 2u:
            v579 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v579;
            v580 = (int *)type metadata accessor for FeedBannerAd();
            v581 = v580[5];
            v582 = &v573[v581];
            v583 = &v574[v581];
            v584 = sub_1BB8721C0();
            v585 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v584 - 8) + 16);
            swift_bridgeObjectRetain();
            v585(v582, v583, v584);
            *(_QWORD *)&v573[v580[6]] = *(_QWORD *)&v574[v580[6]];
            v586 = v580[7];
            v587 = &v573[v586];
            v588 = &v574[v586];
            *(_QWORD *)v587 = *(_QWORD *)v588;
            v587[8] = v588[8];
            v589 = v580[8];
            v63 = &v573[v589];
            v64 = &v574[v589];
            v65 = *((_QWORD *)v64 + 1);
            if (v65 >= 0x11)
              goto LABEL_318;
            *(_OWORD *)v63 = *(_OWORD *)v64;
            goto LABEL_421;
          case 3u:
            v619 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v619;
            *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
            v573[24] = v574[24];
            v620 = *((_QWORD *)v574 + 5);
            *((_QWORD *)v573 + 4) = *((_QWORD *)v574 + 4);
            *((_QWORD *)v573 + 5) = v620;
            *((_QWORD *)v573 + 6) = *((_QWORD *)v574 + 6);
            v573[56] = v574[56];
            __dstg = (int *)type metadata accessor for FeedHeadline(0);
            v621 = __dstg[10];
            v622 = &v573[v621];
            v623 = &v574[v621];
            *v622 = v574[v621];
            v622[1] = v574[v621 + 1];
            v624 = (int *)type metadata accessor for FeedHeadline.State(0);
            v625 = v624[6];
            v879 = &v622[v625];
            v626 = &v623[v625];
            v627 = (int *)type metadata accessor for SharedItem();
            v872 = *((_QWORD *)v627 - 1);
            v628 = *(unsigned int (**)(char *, uint64_t, int *))(v872 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v628(v626, 1, v627))
            {
              v629 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v879, v626, *(_QWORD *)(*(_QWORD *)(v629 - 8) + 64));
            }
            else
            {
              v741 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v741 - 8) + 16))(v879, v626, v741);
              v879[v627[5]] = v626[v627[5]];
              v742 = v627[6];
              v743 = *(void **)&v626[v742];
              *(_QWORD *)&v879[v742] = v743;
              v744 = v627[7];
              v900 = &v626[v744];
              v909 = &v879[v744];
              v745 = sub_1BB86C67C();
              v867 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v745 - 8) + 16);
              v746 = v743;
              v867(v909, v900, v745);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v872 + 56))(v879, 0, 1, v627);
            }
            v622[v624[7]] = v623[v624[7]];
            v622[v624[8]] = v623[v624[8]];
            v622[v624[9]] = v623[v624[9]];
            v622[v624[10]] = v623[v624[10]];
            v747 = __dstg[11];
            v748 = &v573[v747];
            v749 = &v574[v747];
            v750 = sub_1BB871B24();
            v751 = *(_QWORD *)(v750 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v751 + 48))(v749, 1, v750))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v748, v749, *(_QWORD *)(*(_QWORD *)(v752 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v751 + 16))(v748, v749, v750);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v748, 0, 1, v750);
            }
            v759 = __dstg[12];
            v760 = &v573[v759];
            v761 = &v574[v759];
            v762 = *((_QWORD *)v761 + 1);
            if (v762 >= 0x11)
            {
              *(_QWORD *)v760 = *(_QWORD *)v761;
              *((_QWORD *)v760 + 1) = v762;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v760 = *(_OWORD *)v761;
            }
            v763 = __dstg[13];
            v764 = *(_QWORD *)&v574[v763];
            if (v764 >= 2)
            {
              if (v764 == 2)
              {
                *(_QWORD *)&v573[v763] = 2;
              }
              else
              {
                *(_QWORD *)&v573[v763] = v764;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(_QWORD *)&v573[v763] = v764;
            }
            v780 = __dstg[14];
            v781 = *(void **)&v574[v780];
            *(_QWORD *)&v573[v780] = v781;
            v782 = v781;
            goto LABEL_421;
          case 4u:
            v590 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v590;
            v573[16] = v574[16];
            v591 = v574 + 24;
            v592 = *((_QWORD *)v574 + 4);
            if (v592 >= 0x11)
            {
              *((_QWORD *)v573 + 3) = *v591;
              *((_QWORD *)v573 + 4) = v592;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v573 + 24) = *(_OWORD *)v591;
            }
            v680 = *((_QWORD *)v574 + 6);
            *((_QWORD *)v573 + 5) = *((_QWORD *)v574 + 5);
            *((_QWORD *)v573 + 6) = v680;
            v681 = (int *)type metadata accessor for FeedWebEmbed();
            v682 = v681[8];
            v683 = &v573[v682];
            v684 = &v574[v682];
            v685 = sub_1BB86C67C();
            v686 = *(_QWORD *)(v685 - 8);
            v687 = *(void (**)(char *, char *, uint64_t))(v686 + 16);
            swift_bridgeObjectRetain();
            v687(v683, v684, v685);
            v688 = v681[9];
            v689 = &v573[v688];
            v690 = &v574[v688];
            __dsti = (void (*)(char *, char *, void *))v687;
            v899 = (void *)v685;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v686 + 48))(&v574[v688], 1, v685))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
              memcpy(v689, v690, *(_QWORD *)(*(_QWORD *)(v691 - 8) + 64));
            }
            else
            {
              v687(v689, v690, v685);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v686 + 56))(v689, 0, 1, v685);
            }
            *(_QWORD *)&v573[v681[10]] = *(_QWORD *)&v574[v681[10]];
            *(_QWORD *)&v573[v681[11]] = *(_QWORD *)&v574[v681[11]];
            v714 = v681[12];
            v715 = &v573[v714];
            v908 = v681;
            v716 = &v574[v714];
            v717 = type metadata accessor for FeedHeadline(0);
            v718 = *(_QWORD *)(v717 - 8);
            v719 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v718 + 48);
            swift_retain();
            swift_retain();
            if (v719(v716, 1, v717))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
              memcpy(v715, v716, *(_QWORD *)(*(_QWORD *)(v720 - 8) + 64));
              v721 = v908;
            }
            else
            {
              v866 = v718;
              v873 = (int *)v717;
              v727 = *((_QWORD *)v716 + 1);
              *(_QWORD *)v715 = *(_QWORD *)v716;
              *((_QWORD *)v715 + 1) = v727;
              *((_QWORD *)v715 + 2) = *((_QWORD *)v716 + 2);
              v715[24] = v716[24];
              v728 = *((_QWORD *)v716 + 5);
              *((_QWORD *)v715 + 4) = *((_QWORD *)v716 + 4);
              *((_QWORD *)v715 + 5) = v728;
              *((_QWORD *)v715 + 6) = *((_QWORD *)v716 + 6);
              v715[56] = v716[56];
              v729 = *(int *)(v717 + 40);
              v880 = v715;
              v730 = &v715[v729];
              v731 = &v716[v729];
              *v730 = v716[v729];
              v730[1] = v716[v729 + 1];
              v732 = (int *)type metadata accessor for FeedHeadline.State(0);
              v733 = v732[6];
              v863 = &v730[v733];
              v734 = &v731[v733];
              v735 = (int *)type metadata accessor for SharedItem();
              v855 = *((_QWORD *)v735 - 1);
              v736 = *(uint64_t (**)(char *, uint64_t, int *))(v855 + 48);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_unknownObjectRetain();
              v737 = v736(v734, 1, v735);
              v738 = v716;
              if (v737)
              {
                v739 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v863, v734, *(_QWORD *)(*(_QWORD *)(v739 - 8) + 64));
              }
              else
              {
                v806 = sub_1BB86C8B0();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v806 - 8) + 16))(v863, v734, v806);
                v863[v735[5]] = v734[v735[5]];
                v807 = v735[6];
                v808 = *(void **)&v734[v807];
                *(_QWORD *)&v863[v807] = v808;
                v809 = v735[7];
                v810 = v734;
                v811 = &v863[v809];
                v860 = v732;
                v812 = &v810[v809];
                v813 = v808;
                v814 = v812;
                v732 = v860;
                __dsti(v811, v814, v899);
                (*(void (**)(char *, _QWORD, uint64_t, int *))(v855 + 56))(v863, 0, 1, v735);
              }
              v730[v732[7]] = v731[v732[7]];
              v730[v732[8]] = v731[v732[8]];
              v730[v732[9]] = v731[v732[9]];
              v730[v732[10]] = v731[v732[10]];
              v815 = v873[11];
              v816 = &v880[v815];
              v817 = &v716[v815];
              v818 = sub_1BB871B24();
              v819 = *(_QWORD *)(v818 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v819 + 48))(v817, 1, v818))
              {
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
                memcpy(v816, v817, *(_QWORD *)(*(_QWORD *)(v820 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v819 + 16))(v816, v817, v818);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v819 + 56))(v816, 0, 1, v818);
              }
              v721 = v908;
              v821 = v873[12];
              v822 = &v880[v821];
              v823 = (_QWORD *)((char *)v738 + v821);
              v824 = v823[1];
              if (v824 >= 0x11)
              {
                *(_QWORD *)v822 = *v823;
                *((_QWORD *)v822 + 1) = v824;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)v822 = *(_OWORD *)v823;
              }
              v825 = v873[13];
              v826 = *(_QWORD *)((char *)v738 + v825);
              if (v826 >= 2)
              {
                if (v826 == 2)
                {
                  *(_QWORD *)&v880[v825] = 2;
                }
                else
                {
                  *(_QWORD *)&v880[v825] = v826;
                  swift_unknownObjectRetain();
                }
              }
              else
              {
                *(_QWORD *)&v880[v825] = v826;
              }
              v837 = v873[14];
              v838 = *(void **)((char *)v738 + v837);
              *(_QWORD *)&v880[v837] = v838;
              v839 = *(void (**)(char *, _QWORD, uint64_t, int *))(v866 + 56);
              v840 = v838;
              v839(v880, 0, 1, v873);
            }
            v841 = v721;
            v842 = v721[13];
            v843 = &v573[v842];
            v844 = &v574[v842];
            v845 = type metadata accessor for WebEmbedDataVisualization();
            v846 = *(_QWORD *)(v845 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v846 + 48))(v844, 1, v845))
            {
              sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
              memcpy(v843, v844, *(_QWORD *)(*(_QWORD *)(v847 - 8) + 64));
            }
            else
            {
              v848 = swift_getEnumCaseMultiPayload();
              v849 = *(_QWORD *)v844;
              if (v848 == 1)
              {
                v850 = *((_QWORD *)v844 + 1);
                *(_QWORD *)v843 = v849;
                *((_QWORD *)v843 + 1) = v850;
                v910 = type metadata accessor for GenericDataVisualization();
                v851 = *(int *)(v910 + 20);
                v881 = &v843[v851];
                v852 = &v844[v851];
                swift_bridgeObjectRetain();
                __dsti(v881, v852, v899);
                *(_QWORD *)&v843[*(int *)(v910 + 24)] = *(_QWORD *)&v844[*(int *)(v910 + 24)];
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_QWORD *)v843 = v849;
                swift_retain();
              }
              swift_storeEnumTagMultiPayload();
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v846 + 56))(v843, 0, 1, v845);
            }
            v573[v841[14]] = v574[v841[14]];
            goto LABEL_421;
          case 5u:
            v630 = *(void **)v574;
            v631 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v631;
            *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
            *((_WORD *)v573 + 12) = *((_WORD *)v574 + 12);
            *((_QWORD *)v573 + 4) = *((_QWORD *)v574 + 4);
            v573[40] = v574[40];
            v632 = (void *)*((_QWORD *)v574 + 7);
            *((_QWORD *)v573 + 6) = *((_QWORD *)v574 + 6);
            *((_QWORD *)v573 + 7) = v632;
            v573[64] = v574[64];
            v633 = *((_QWORD *)v574 + 10);
            v634 = v630;
            swift_bridgeObjectRetain();
            v635 = v632;
            if (v633 == 1)
            {
              v636 = *(_OWORD *)(v574 + 88);
              *(_OWORD *)(v573 + 72) = *(_OWORD *)(v574 + 72);
              *(_OWORD *)(v573 + 88) = v636;
              *(_OWORD *)(v573 + 104) = *(_OWORD *)(v574 + 104);
            }
            else
            {
              *((_QWORD *)v573 + 9) = *((_QWORD *)v574 + 9);
              *((_QWORD *)v573 + 10) = v633;
              v693 = *((_QWORD *)v574 + 12);
              *((_QWORD *)v573 + 11) = *((_QWORD *)v574 + 11);
              *((_QWORD *)v573 + 12) = v693;
              v695 = (void *)*((_QWORD *)v574 + 13);
              v694 = *((_QWORD *)v574 + 14);
              *((_QWORD *)v573 + 13) = v695;
              *((_QWORD *)v573 + 14) = v694;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v696 = v695;
            }
            v697 = v574 + 120;
            v698 = *((_QWORD *)v574 + 16);
            if (v698 >= 0x11)
            {
              *((_QWORD *)v573 + 15) = *v697;
              *((_QWORD *)v573 + 16) = v698;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v573 + 120) = *(_OWORD *)v697;
            }
            v573[136] = v574[136];
            goto LABEL_421;
          case 6u:
            v637 = v574[281];
            if (v637 == 2)
            {
              v766 = *((_QWORD *)v574 + 1);
              *(_QWORD *)v573 = *(_QWORD *)v574;
              *((_QWORD *)v573 + 1) = v766;
              *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
              v573[24] = v574[24];
              *((_QWORD *)v573 + 4) = *((_QWORD *)v574 + 4);
              v573[40] = v574[40];
              v767 = *((_QWORD *)v574 + 7);
              *((_QWORD *)v573 + 6) = *((_QWORD *)v574 + 6);
              *((_QWORD *)v573 + 7) = v767;
              v768 = *((_QWORD *)v574 + 9);
              *((_QWORD *)v573 + 8) = *((_QWORD *)v574 + 8);
              *((_QWORD *)v573 + 9) = v768;
              v769 = *((_QWORD *)v574 + 11);
              swift_bridgeObjectRetain();
              swift_unknownObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v769 != 1)
              {
                *((_QWORD *)v573 + 10) = *((_QWORD *)v574 + 10);
                *((_QWORD *)v573 + 11) = v769;
                v790 = *((_QWORD *)v574 + 15);
                swift_bridgeObjectRetain();
                if (v790)
                {
                  v791 = *((_QWORD *)v574 + 16);
                  *((_QWORD *)v573 + 15) = v790;
                  *((_QWORD *)v573 + 16) = v791;
                  (**(void (***)(uint64_t, uint64_t, uint64_t))(v790 - 8))((uint64_t)(v573 + 96), (uint64_t)(v574 + 96), v790);
                  *((_QWORD *)v573 + 17) = *((_QWORD *)v574 + 17);
                }
                else
                {
                  v853 = *((_OWORD *)v574 + 7);
                  *((_OWORD *)v573 + 6) = *((_OWORD *)v574 + 6);
                  *((_OWORD *)v573 + 7) = v853;
                  *((_OWORD *)v573 + 8) = *((_OWORD *)v574 + 8);
                }
                v573[144] = v574[144];
                goto LABEL_420;
              }
              v770 = v573 + 80;
              v771 = v574 + 80;
              v772 = *((_OWORD *)v574 + 8);
              *((_OWORD *)v573 + 7) = *((_OWORD *)v574 + 7);
              *((_OWORD *)v573 + 8) = v772;
              v573[144] = v574[144];
            }
            else
            {
              if (v637 != 1)
              {
                v773 = *(void **)v574;
                v774 = *((_QWORD *)v574 + 1);
                *(_QWORD *)v573 = *(_QWORD *)v574;
                *((_QWORD *)v573 + 1) = v774;
                *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
                *((_WORD *)v573 + 12) = *((_WORD *)v574 + 12);
                *((_QWORD *)v573 + 4) = *((_QWORD *)v574 + 4);
                v573[40] = v574[40];
                v775 = (void *)*((_QWORD *)v574 + 7);
                *((_QWORD *)v573 + 6) = *((_QWORD *)v574 + 6);
                *((_QWORD *)v573 + 7) = v775;
                v573[64] = v574[64];
                v776 = *((_QWORD *)v574 + 10);
                v777 = v773;
                swift_bridgeObjectRetain();
                v778 = v775;
                if (v776 == 1)
                {
                  v779 = *(_OWORD *)(v574 + 88);
                  *(_OWORD *)(v573 + 72) = *(_OWORD *)(v574 + 72);
                  *(_OWORD *)(v573 + 88) = v779;
                  *(_OWORD *)(v573 + 104) = *(_OWORD *)(v574 + 104);
                }
                else
                {
                  *((_QWORD *)v573 + 9) = *((_QWORD *)v574 + 9);
                  *((_QWORD *)v573 + 10) = v776;
                  v792 = *((_QWORD *)v574 + 12);
                  *((_QWORD *)v573 + 11) = *((_QWORD *)v574 + 11);
                  *((_QWORD *)v573 + 12) = v792;
                  v794 = (void *)*((_QWORD *)v574 + 13);
                  v793 = *((_QWORD *)v574 + 14);
                  *((_QWORD *)v573 + 13) = v794;
                  *((_QWORD *)v573 + 14) = v793;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v795 = v794;
                }
                v796 = v574 + 120;
                v797 = *((_QWORD *)v574 + 16);
                if (v797 >= 0x11)
                {
                  *((_QWORD *)v573 + 15) = *v796;
                  *((_QWORD *)v573 + 16) = v797;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v573 + 120) = *(_OWORD *)v796;
                }
                v573[136] = v574[136];
                goto LABEL_420;
              }
              v638 = *(void **)v574;
              v639 = *((_QWORD *)v574 + 1);
              *(_QWORD *)v573 = *(_QWORD *)v574;
              *((_QWORD *)v573 + 1) = v639;
              *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
              *((_WORD *)v573 + 12) = *((_WORD *)v574 + 12);
              *((_QWORD *)v573 + 4) = *((_QWORD *)v574 + 4);
              v573[40] = v574[40];
              v640 = (void *)*((_QWORD *)v574 + 7);
              *((_QWORD *)v573 + 6) = *((_QWORD *)v574 + 6);
              *((_QWORD *)v573 + 7) = v640;
              v573[64] = v574[64];
              v641 = *((_QWORD *)v574 + 10);
              v642 = v638;
              swift_bridgeObjectRetain();
              v643 = v640;
              if (v641 == 1)
              {
                v644 = *(_OWORD *)(v574 + 88);
                *(_OWORD *)(v573 + 72) = *(_OWORD *)(v574 + 72);
                *(_OWORD *)(v573 + 88) = v644;
                *(_OWORD *)(v573 + 104) = *(_OWORD *)(v574 + 104);
              }
              else
              {
                *((_QWORD *)v573 + 9) = *((_QWORD *)v574 + 9);
                *((_QWORD *)v573 + 10) = v641;
                v784 = *((_QWORD *)v574 + 12);
                *((_QWORD *)v573 + 11) = *((_QWORD *)v574 + 11);
                *((_QWORD *)v573 + 12) = v784;
                v786 = (void *)*((_QWORD *)v574 + 13);
                v785 = *((_QWORD *)v574 + 14);
                *((_QWORD *)v573 + 13) = v786;
                *((_QWORD *)v573 + 14) = v785;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v787 = v786;
              }
              v788 = v574 + 120;
              v789 = *((_QWORD *)v574 + 16);
              if (v789 >= 0x11)
              {
                *((_QWORD *)v573 + 15) = *v788;
                *((_QWORD *)v573 + 16) = v789;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v573 + 120) = *(_OWORD *)v788;
              }
              v771 = v574 + 144;
              v798 = (void *)*((_QWORD *)v574 + 18);
              v573[136] = v574[136];
              if (v798)
              {
                v799 = *((_QWORD *)v574 + 19);
                v800 = *((_QWORD *)v574 + 20);
                *((_QWORD *)v573 + 18) = v798;
                *((_QWORD *)v573 + 19) = v799;
                *((_QWORD *)v573 + 20) = v800;
                *((_WORD *)v573 + 84) = *((_WORD *)v574 + 84);
                *((_QWORD *)v573 + 22) = *((_QWORD *)v574 + 22);
                v573[184] = v574[184];
                v801 = (void *)*((_QWORD *)v574 + 25);
                *((_QWORD *)v573 + 24) = *((_QWORD *)v574 + 24);
                *((_QWORD *)v573 + 25) = v801;
                v573[208] = v574[208];
                v802 = *((_QWORD *)v574 + 28);
                v803 = v798;
                swift_bridgeObjectRetain();
                v804 = v801;
                if (v802 == 1)
                {
                  v805 = *(_OWORD *)(v574 + 232);
                  *(_OWORD *)(v573 + 216) = *(_OWORD *)(v574 + 216);
                  *(_OWORD *)(v573 + 232) = v805;
                  *(_OWORD *)(v573 + 248) = *(_OWORD *)(v574 + 248);
                }
                else
                {
                  *((_QWORD *)v573 + 27) = *((_QWORD *)v574 + 27);
                  *((_QWORD *)v573 + 28) = v802;
                  v831 = *((_QWORD *)v574 + 30);
                  *((_QWORD *)v573 + 29) = *((_QWORD *)v574 + 29);
                  *((_QWORD *)v573 + 30) = v831;
                  v833 = (void *)*((_QWORD *)v574 + 31);
                  v832 = *((_QWORD *)v574 + 32);
                  *((_QWORD *)v573 + 31) = v833;
                  *((_QWORD *)v573 + 32) = v832;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v834 = v833;
                }
                v835 = v574 + 264;
                v836 = *((_QWORD *)v574 + 34);
                if (v836 >= 0x11)
                {
                  *((_QWORD *)v573 + 33) = *v835;
                  *((_QWORD *)v573 + 34) = v836;
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v573 + 264) = *(_OWORD *)v835;
                }
                v573[280] = v574[280];
LABEL_420:
                v573[281] = v637;
                goto LABEL_421;
              }
              v770 = v573 + 144;
              v827 = *((_OWORD *)v574 + 16);
              *((_OWORD *)v573 + 15) = *((_OWORD *)v574 + 15);
              *((_OWORD *)v573 + 16) = v827;
              *(_OWORD *)(v573 + 265) = *(_OWORD *)(v574 + 265);
              v828 = *((_OWORD *)v574 + 12);
              *((_OWORD *)v573 + 11) = *((_OWORD *)v574 + 11);
              *((_OWORD *)v573 + 12) = v828;
              v829 = *((_OWORD *)v574 + 14);
              *((_OWORD *)v573 + 13) = *((_OWORD *)v574 + 13);
              *((_OWORD *)v573 + 14) = v829;
            }
            v830 = v771[1];
            *v770 = *v771;
            v770[1] = v830;
            goto LABEL_420;
          case 7u:
            v645 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v645;
            *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
            v573[24] = v574[24];
            *((_QWORD *)v573 + 4) = *((_QWORD *)v574 + 4);
            v573[40] = v574[40];
            v646 = *((_QWORD *)v574 + 7);
            *((_QWORD *)v573 + 6) = *((_QWORD *)v574 + 6);
            *((_QWORD *)v573 + 7) = v646;
            v647 = *((_QWORD *)v574 + 9);
            *((_QWORD *)v573 + 8) = *((_QWORD *)v574 + 8);
            *((_QWORD *)v573 + 9) = v647;
            v648 = *((_QWORD *)v574 + 11);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v648 == 1)
            {
              v649 = *((_OWORD *)v574 + 8);
              *((_OWORD *)v573 + 7) = *((_OWORD *)v574 + 7);
              *((_OWORD *)v573 + 8) = v649;
              v573[144] = v574[144];
              v650 = *((_OWORD *)v574 + 6);
              *((_OWORD *)v573 + 5) = *((_OWORD *)v574 + 5);
              *((_OWORD *)v573 + 6) = v650;
            }
            else
            {
              *((_QWORD *)v573 + 10) = *((_QWORD *)v574 + 10);
              *((_QWORD *)v573 + 11) = v648;
              v699 = *((_QWORD *)v574 + 15);
              swift_bridgeObjectRetain();
              if (v699)
              {
                v700 = *((_QWORD *)v574 + 16);
                *((_QWORD *)v573 + 15) = v699;
                *((_QWORD *)v573 + 16) = v700;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v699 - 8))((uint64_t)(v573 + 96), (uint64_t)(v574 + 96), v699);
                *((_QWORD *)v573 + 17) = *((_QWORD *)v574 + 17);
              }
              else
              {
                v783 = *((_OWORD *)v574 + 7);
                *((_OWORD *)v573 + 6) = *((_OWORD *)v574 + 6);
                *((_OWORD *)v573 + 7) = v783;
                *((_OWORD *)v573 + 8) = *((_OWORD *)v574 + 8);
              }
              v573[144] = v574[144];
            }
            goto LABEL_421;
          case 8u:
            v651 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v651;
            v652 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
            v653 = &v573[v652];
            v654 = &v574[v652];
            v655 = *((_QWORD *)v654 + 1);
            *(_QWORD *)v653 = *(_QWORD *)v654;
            *((_QWORD *)v653 + 1) = v655;
            v656 = *((_QWORD *)v654 + 3);
            *((_QWORD *)v653 + 2) = *((_QWORD *)v654 + 2);
            *((_QWORD *)v653 + 3) = v656;
            v657 = type metadata accessor for FormatCustomItem.Resolved();
            v658 = *(int *)(v657 + 24);
            v898 = &v653[v658];
            v907 = v657;
            v659 = &v654[v658];
            v660 = type metadata accessor for FormatCustomItem.Action();
            __dsth = *(_QWORD **)(v660 - 8);
            v661 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsth[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v661(v659, 1, v660))
            {
              sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
              memcpy(v898, v659, *(_QWORD *)(*(_QWORD *)(v662 - 8) + 64));
            }
            else
            {
              v753 = sub_1BB86C67C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v753 - 8) + 16))(v898, v659, v753);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsth[7])(v898, 0, 1, v660);
            }
            *(_QWORD *)&v653[*(int *)(v907 + 28)] = *(_QWORD *)&v654[*(int *)(v907 + 28)];
            swift_bridgeObjectRetain();
            goto LABEL_421;
          case 9u:
            v593 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v593;
            v594 = *((_QWORD *)v574 + 3);
            *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
            *((_QWORD *)v573 + 3) = v594;
            v595 = *((_QWORD *)v574 + 7);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v595)
            {
              v596 = *((_QWORD *)v574 + 8);
              *((_QWORD *)v573 + 7) = v595;
              *((_QWORD *)v573 + 8) = v596;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v595 - 8))((uint64_t)(v573 + 32), (uint64_t)(v574 + 32), v595);
            }
            else
            {
              v709 = *((_OWORD *)v574 + 3);
              *((_OWORD *)v573 + 2) = *((_OWORD *)v574 + 2);
              *((_OWORD *)v573 + 3) = v709;
              *((_QWORD *)v573 + 8) = *((_QWORD *)v574 + 8);
            }
            v710 = v573 + 72;
            v711 = v574 + 72;
            v712 = *((_QWORD *)v574 + 12);
            if (v712)
            {
              v713 = *((_QWORD *)v574 + 13);
              *((_QWORD *)v573 + 12) = v712;
              *((_QWORD *)v573 + 13) = v713;
              (**(void (***)(_OWORD *, _OWORD *))(v712 - 8))(v710, v711);
            }
            else
            {
              v722 = *(_OWORD *)(v574 + 88);
              *v710 = *v711;
              *(_OWORD *)(v573 + 88) = v722;
              *((_QWORD *)v573 + 13) = *((_QWORD *)v574 + 13);
            }
            v723 = v573 + 112;
            v724 = v574 + 112;
            v725 = *((_QWORD *)v574 + 17);
            if (v725)
            {
              v726 = *((_QWORD *)v574 + 18);
              *((_QWORD *)v573 + 17) = v725;
              *((_QWORD *)v573 + 18) = v726;
              (**(void (***)(_OWORD *, _OWORD *))(v725 - 8))(v723, v724);
            }
            else
            {
              v740 = *((_OWORD *)v574 + 8);
              *v723 = *v724;
              *((_OWORD *)v573 + 8) = v740;
              *((_QWORD *)v573 + 18) = *((_QWORD *)v574 + 18);
            }
            goto LABEL_421;
          case 0xAu:
            v663 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v663;
            v664 = (int *)type metadata accessor for FeedEngagementBanner();
            v665 = v664[5];
            v666 = &v573[v665];
            v667 = &v574[v665];
            v668 = sub_1BB86EDAC();
            v669 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v668 - 8) + 16);
            swift_bridgeObjectRetain();
            v669(v666, v667, v668);
            *(_QWORD *)&v573[v664[6]] = *(_QWORD *)&v574[v664[6]];
            v670 = v664[7];
            v671 = &v573[v670];
            v672 = &v574[v670];
            *(_QWORD *)v671 = *(_QWORD *)v672;
            v671[8] = v672[8];
            v673 = v664[8];
            v63 = &v573[v673];
            v64 = &v574[v673];
            v65 = *((_QWORD *)v64 + 1);
            if (v65 >= 0x11)
              goto LABEL_318;
            *(_OWORD *)v63 = *(_OWORD *)v64;
            goto LABEL_421;
          case 0xBu:
            *(_QWORD *)v573 = *(_QWORD *)v574;
            swift_retain();
            goto LABEL_421;
          case 0xCu:
            v597 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v597;
            v598 = *((_QWORD *)v574 + 3);
            *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
            *((_QWORD *)v573 + 3) = v598;
            v573[32] = v574[32];
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_421;
          case 0xDu:
            v674 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v674;
            v573[16] = v574[16];
            v675 = v574 + 24;
            v676 = *((_QWORD *)v574 + 4);
            if (v676 >= 0x11)
            {
              *((_QWORD *)v573 + 3) = *v675;
              *((_QWORD *)v573 + 4) = v676;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v573 + 24) = *(_OWORD *)v675;
            }
            v701 = *((_QWORD *)v574 + 6);
            *((_QWORD *)v573 + 5) = *((_QWORD *)v574 + 5);
            *((_QWORD *)v573 + 6) = v701;
            v702 = (void *)*((_QWORD *)v574 + 8);
            *((_QWORD *)v573 + 7) = *((_QWORD *)v574 + 7);
            *((_QWORD *)v573 + 8) = v702;
            v573[72] = v574[72];
            *((_QWORD *)v573 + 10) = *((_QWORD *)v574 + 10);
            v703 = *((_QWORD *)v574 + 14);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            v704 = v702;
            swift_bridgeObjectRetain();
            if (v703)
            {
              v705 = *((_QWORD *)v574 + 15);
              *((_QWORD *)v573 + 14) = v703;
              *((_QWORD *)v573 + 15) = v705;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v703 - 8))((uint64_t)(v573 + 88), (uint64_t)(v574 + 88), v703);
            }
            else
            {
              v754 = *(_OWORD *)(v574 + 104);
              *(_OWORD *)(v573 + 88) = *(_OWORD *)(v574 + 88);
              *(_OWORD *)(v573 + 104) = v754;
              *((_QWORD *)v573 + 15) = *((_QWORD *)v574 + 15);
            }
            v755 = v573 + 128;
            v756 = v574 + 128;
            v757 = *((_QWORD *)v574 + 19);
            if (v757)
            {
              v758 = *((_QWORD *)v574 + 20);
              *((_QWORD *)v573 + 19) = v757;
              *((_QWORD *)v573 + 20) = v758;
              (**(void (***)(_OWORD *, _OWORD *))(v757 - 8))(v755, v756);
            }
            else
            {
              v765 = *((_OWORD *)v574 + 9);
              *v755 = *v756;
              *((_OWORD *)v573 + 9) = v765;
              *((_QWORD *)v573 + 20) = *((_QWORD *)v574 + 20);
            }
            goto LABEL_421;
          case 0xEu:
            v599 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v599;
            v573[16] = v574[16];
            v600 = v574 + 24;
            v601 = *((_QWORD *)v574 + 4);
            if (v601 >= 0x11)
            {
              *((_QWORD *)v573 + 3) = *v600;
              *((_QWORD *)v573 + 4) = v601;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v573 + 24) = *(_OWORD *)v600;
            }
            v692 = *((_QWORD *)v574 + 6);
            *((_QWORD *)v573 + 5) = *((_QWORD *)v574 + 5);
            *((_QWORD *)v573 + 6) = v692;
            *((_QWORD *)v573 + 7) = *((_QWORD *)v574 + 7);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            goto LABEL_421;
          case 0xFu:
            v677 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v677;
            v573[16] = v574[16];
            v678 = v574 + 24;
            v679 = *((_QWORD *)v574 + 4);
            if (v679 >= 0x11)
            {
              *((_QWORD *)v573 + 3) = *v678;
              *((_QWORD *)v573 + 4) = v679;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v573 + 24) = *(_OWORD *)v678;
            }
            v706 = *((_QWORD *)v574 + 6);
            *((_QWORD *)v573 + 5) = *((_QWORD *)v574 + 5);
            *((_QWORD *)v573 + 6) = v706;
            v707 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            *(_QWORD *)&v573[v707] = *(_QWORD *)&v574[v707];
            type metadata accessor for PuzzleStatistic();
            type metadata accessor for PuzzleStatisticCategory(0);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            v708 = (char *)&loc_1BB2FFE74 + 4 * word_1BB907FAA[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
            return result;
          case 0x10u:
            v602 = *((_QWORD *)v574 + 1);
            *(_QWORD *)v573 = *(_QWORD *)v574;
            *((_QWORD *)v573 + 1) = v602;
            v603 = *((_QWORD *)v574 + 3);
            *((_QWORD *)v573 + 2) = *((_QWORD *)v574 + 2);
            *((_QWORD *)v573 + 3) = v603;
            v604 = *((_QWORD *)v574 + 5);
            *((_QWORD *)v573 + 4) = *((_QWORD *)v574 + 4);
            *((_QWORD *)v573 + 5) = v604;
            *((_WORD *)v573 + 24) = *((_WORD *)v574 + 24);
            *(_OWORD *)(v573 + 56) = *(_OWORD *)(v574 + 56);
            v605 = *((_QWORD *)v574 + 10);
            *((_QWORD *)v573 + 9) = *((_QWORD *)v574 + 9);
            *((_QWORD *)v573 + 10) = v605;
            v606 = *((_QWORD *)v574 + 12);
            *((_QWORD *)v573 + 11) = *((_QWORD *)v574 + 11);
            *((_QWORD *)v573 + 12) = v606;
            *((_QWORD *)v573 + 13) = *((_QWORD *)v574 + 13);
            v573[112] = v574[112];
            v607 = *((_QWORD *)v574 + 16);
            *((_QWORD *)v573 + 15) = *((_QWORD *)v574 + 15);
            *((_QWORD *)v573 + 16) = v607;
            v573[136] = v574[136];
            v608 = *((_QWORD *)v574 + 19);
            *((_QWORD *)v573 + 18) = *((_QWORD *)v574 + 18);
            *((_QWORD *)v573 + 19) = v608;
            v609 = *((_QWORD *)v574 + 21);
            *((_QWORD *)v573 + 20) = *((_QWORD *)v574 + 20);
            *((_QWORD *)v573 + 21) = v609;
            v573[184] = v574[184];
            *((_QWORD *)v573 + 22) = *((_QWORD *)v574 + 22);
            v610 = *((_QWORD *)v574 + 25);
            *((_QWORD *)v573 + 24) = *((_QWORD *)v574 + 24);
            *((_QWORD *)v573 + 25) = v610;
            v573[224] = v574[224];
            v611 = *((_QWORD *)v574 + 27);
            *((_QWORD *)v573 + 26) = *((_QWORD *)v574 + 26);
            *((_QWORD *)v573 + 27) = v611;
            v878 = v574 + 232;
            v612 = *((_QWORD *)v574 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v612 >= 0x11)
            {
              *((_QWORD *)v573 + 29) = *v878;
              *((_QWORD *)v573 + 30) = v612;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v573 + 232) = *(_OWORD *)v878;
            }
            goto LABEL_421;
          default:
            memcpy(v573, v574, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
            goto LABEL_422;
        }
      case 7:
        v121 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v121;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        v122 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v122;
        v123 = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = v123;
        v124 = *(_QWORD *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v124 == 1)
        {
          v125 = *(_OWORD *)(a2 + 128);
          *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 128) = v125;
          *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
          v126 = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
          *(_OWORD *)(a1 + 96) = v126;
        }
        else
        {
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 88) = v124;
          v256 = *(_QWORD *)(a2 + 120);
          swift_bridgeObjectRetain();
          if (v256)
          {
            v257 = *(_QWORD *)(a2 + 128);
            *(_QWORD *)(a1 + 120) = v256;
            *(_QWORD *)(a1 + 128) = v257;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v256 - 8))(a1 + 96, a2 + 96, v256);
            *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
          }
          else
          {
            v428 = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 112) = v428;
            *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
          }
          *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
        }
        goto LABEL_281;
      case 8:
        v913 = v5;
        v127 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v127;
        v128 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v129 = (_QWORD *)(a1 + v128);
        v130 = a2 + v128;
        v131 = *(_QWORD *)(a2 + v128 + 8);
        *v129 = *(_QWORD *)(a2 + v128);
        v129[1] = v131;
        v132 = *(_QWORD *)(a2 + v128 + 24);
        v129[2] = *(_QWORD *)(a2 + v128 + 16);
        v129[3] = v132;
        v133 = type metadata accessor for FormatCustomItem.Resolved();
        v134 = *(int *)(v133 + 24);
        v893 = (char *)v129 + v134;
        v901 = v133;
        v135 = (const void *)(v130 + v134);
        v136 = type metadata accessor for FormatCustomItem.Action();
        __dstc = *(_QWORD **)(v136 - 8);
        v137 = (unsigned int (*)(const void *, uint64_t, uint64_t))__dstc[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v137(v135, 1, v136))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v893, v135, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
        }
        else
        {
          v355 = sub_1BB86C67C();
          (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v355 - 8) + 16))(v893, v135, v355);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dstc[7])(v893, 0, 1, v136);
        }
        v5 = v913;
        *(_QWORD *)((char *)v129 + *(int *)(v901 + 28)) = *(_QWORD *)(v130 + *(int *)(v901 + 28));
        swift_bridgeObjectRetain();
        goto LABEL_281;
      case 9:
        v32 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v32;
        v33 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v33;
        v34 = *(_QWORD *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v34)
        {
          v35 = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 56) = v34;
          *(_QWORD *)(a1 + 64) = v35;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v34 - 8))(a1 + 32, a2 + 32, v34);
        }
        else
        {
          v282 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v282;
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        }
        v283 = (_OWORD *)(a1 + 72);
        v284 = (_OWORD *)(a2 + 72);
        v285 = *(_QWORD *)(a2 + 96);
        if (v285)
        {
          v286 = *(_QWORD *)(a2 + 104);
          *(_QWORD *)(a1 + 96) = v285;
          *(_QWORD *)(a1 + 104) = v286;
          (**(void (***)(_OWORD *, _OWORD *))(v285 - 8))(v283, v284);
        }
        else
        {
          v308 = *(_OWORD *)(a2 + 88);
          *v283 = *v284;
          *(_OWORD *)(a1 + 88) = v308;
          *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        }
        v309 = (_OWORD *)(a1 + 112);
        v310 = (_OWORD *)(a2 + 112);
        v311 = *(_QWORD *)(a2 + 136);
        if (v311)
        {
          v312 = *(_QWORD *)(a2 + 144);
          *(_QWORD *)(a1 + 136) = v311;
          *(_QWORD *)(a1 + 144) = v312;
          (**(void (***)(_OWORD *, _OWORD *))(v311 - 8))(v309, v310);
        }
        else
        {
          v340 = *(_OWORD *)(a2 + 128);
          *v309 = *v310;
          *(_OWORD *)(a1 + 128) = v340;
          *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        }
        goto LABEL_281;
      case 10:
        v139 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v139;
        v140 = (int *)type metadata accessor for FeedEngagementBanner();
        v141 = v140[5];
        v142 = a1 + v141;
        v143 = a2 + v141;
        v144 = sub_1BB86EDAC();
        v145 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v144 - 8) + 16);
        swift_bridgeObjectRetain();
        v145(v142, v143, v144);
        *(_QWORD *)(a1 + v140[6]) = *(_QWORD *)(a2 + v140[6]);
        v146 = v140[7];
        v147 = a1 + v146;
        v148 = a2 + v146;
        *(_QWORD *)v147 = *(_QWORD *)v148;
        *(_BYTE *)(v147 + 8) = *(_BYTE *)(v148 + 8);
        v149 = v140[8];
        v26 = a1 + v149;
        v27 = a2 + v149;
        v28 = *(_QWORD *)(v27 + 8);
        if (v28 >= 0x11)
        {
LABEL_74:
          *(_QWORD *)v26 = *(_QWORD *)v27;
          *(_QWORD *)(v26 + 8) = v28;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v26 = *(_OWORD *)v27;
        }
        goto LABEL_281;
      case 11:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_retain();
        goto LABEL_281;
      case 12:
        v36 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v36;
        v37 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v37;
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_281;
      case 13:
        v150 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v150;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v151 = (_QWORD *)(a2 + 24);
        v152 = *(_QWORD *)(a2 + 32);
        if (v152 >= 0x11)
        {
          *(_QWORD *)(a1 + 24) = *v151;
          *(_QWORD *)(a1 + 32) = v152;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v151;
        }
        v258 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = v258;
        v259 = *(void **)(a2 + 64);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = v259;
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        v260 = *(_QWORD *)(a2 + 112);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v261 = v259;
        swift_bridgeObjectRetain();
        if (v260)
        {
          v262 = *(_QWORD *)(a2 + 120);
          *(_QWORD *)(a1 + 112) = v260;
          *(_QWORD *)(a1 + 120) = v262;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v260 - 8))(a1 + 88, a2 + 88, v260);
        }
        else
        {
          v370 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v370;
          *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        }
        v371 = (_OWORD *)(a1 + 128);
        v372 = (_OWORD *)(a2 + 128);
        v373 = *(_QWORD *)(a2 + 152);
        if (v373)
        {
          v374 = *(_QWORD *)(a2 + 160);
          *(_QWORD *)(a1 + 152) = v373;
          *(_QWORD *)(a1 + 160) = v374;
          (**(void (***)(_OWORD *, _OWORD *))(v373 - 8))(v371, v372);
        }
        else
        {
          v392 = *(_OWORD *)(a2 + 144);
          *v371 = *v372;
          *(_OWORD *)(a1 + 144) = v392;
          *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        }
        goto LABEL_281;
      case 14:
        v38 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v38;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v39 = (_QWORD *)(a2 + 24);
        v40 = *(_QWORD *)(a2 + 32);
        if (v40 >= 0x11)
        {
          *(_QWORD *)(a1 + 24) = *v39;
          *(_QWORD *)(a1 + 32) = v40;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v39;
        }
        v236 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = v236;
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_281;
      case 15:
        v153 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v153;
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        v154 = (_QWORD *)(a2 + 24);
        v155 = *(_QWORD *)(a2 + 32);
        if (v155 >= 0x11)
        {
          *(_QWORD *)(a1 + 24) = *v154;
          *(_QWORD *)(a1 + 32) = v155;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v154;
        }
        v263 = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = v263;
        v264 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)(a1 + v264) = *(_QWORD *)(a2 + v264);
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v265 = (char *)&loc_1BB2FC8A8 + 4 * word_1BB907F80[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 16:
        v911 = v5;
        v41 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v41;
        v42 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v42;
        v43 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = v43;
        *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        v44 = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = v44;
        v45 = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = v45;
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
        v46 = *(_QWORD *)(a2 + 128);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        *(_QWORD *)(a1 + 128) = v46;
        *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
        v47 = *(_QWORD *)(a2 + 152);
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        *(_QWORD *)(a1 + 152) = v47;
        v48 = *(_QWORD *)(a2 + 168);
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = v48;
        *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        v49 = *(_QWORD *)(a2 + 200);
        *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
        *(_QWORD *)(a1 + 200) = v49;
        *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
        v50 = *(_QWORD *)(a2 + 216);
        *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
        *(_QWORD *)(a1 + 216) = v50;
        __dst = (_QWORD *)(a2 + 232);
        v51 = *(_QWORD *)(a2 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v51 >= 0x11)
        {
          *(_QWORD *)(a1 + 232) = *__dst;
          *(_QWORD *)(a1 + 240) = v51;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)__dst;
        }
        v5 = v911;
        goto LABEL_281;
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        goto LABEL_282;
    }
  }
  switch(v6)
  {
    case 0:
      v11 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v11;
      v12 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v12;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v13 = (_QWORD *)(a2 + 40);
      v14 = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      if (v14 >= 0x11)
      {
        *(_QWORD *)(a1 + 40) = *v13;
        *(_QWORD *)(a1 + 48) = v14;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)v13;
      }
      goto LABEL_421;
    case 1:
      v156 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v156;
      v157 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v157;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v158 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v158;
      v159 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v159;
      v160 = (_QWORD *)(a2 + 72);
      v161 = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v161 >= 0x11)
      {
        *(_QWORD *)(a1 + 72) = *v160;
        *(_QWORD *)(a1 + 80) = v161;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v160;
      }
      goto LABEL_421;
    case 2:
      v52 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v52;
      v53 = (int *)type metadata accessor for FeedBannerAd();
      v54 = v53[5];
      v55 = a1 + v54;
      v56 = a2 + v54;
      v57 = sub_1BB8721C0();
      v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
      swift_bridgeObjectRetain();
      v58(v55, v56, v57);
      *(_QWORD *)(a1 + v53[6]) = *(_QWORD *)(a2 + v53[6]);
      v59 = v53[7];
      v60 = a1 + v59;
      v61 = a2 + v59;
      *(_QWORD *)v60 = *(_QWORD *)v61;
      *(_BYTE *)(v60 + 8) = *(_BYTE *)(v61 + 8);
      v62 = v53[8];
      v63 = (char *)(a1 + v62);
      v64 = (char *)(a2 + v62);
      v65 = *((_QWORD *)v64 + 1);
      if (v65 >= 0x11)
        goto LABEL_318;
      *(_OWORD *)v63 = *(_OWORD *)v64;
      goto LABEL_421;
    case 3:
      v162 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v162;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      v163 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v163;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      v894 = (int *)type metadata accessor for FeedHeadline(0);
      v164 = v894[10];
      v165 = (_BYTE *)(a1 + v164);
      v166 = a2 + v164;
      *v165 = *(_BYTE *)(a2 + v164);
      v165[1] = *(_BYTE *)(a2 + v164 + 1);
      v167 = (int *)type metadata accessor for FeedHeadline.State(0);
      v168 = v167[6];
      __dstd = &v165[v168];
      v169 = (char *)(v166 + v168);
      v170 = (int *)type metadata accessor for SharedItem();
      v875 = (_QWORD *)*((_QWORD *)v170 - 1);
      v171 = (unsigned int (*)(char *, uint64_t, int *))v875[6];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v171(v169, 1, v170))
      {
        v172 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dstd, v169, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
      }
      else
      {
        v356 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v356 - 8) + 16))(__dstd, v169, v356);
        __dstd[v170[5]] = v169[v170[5]];
        v357 = v170[6];
        v358 = *(void **)&v169[v357];
        *(_QWORD *)&__dstd[v357] = v358;
        v359 = v170[7];
        v906 = &__dstd[v359];
        v871 = &v169[v359];
        v360 = sub_1BB86C67C();
        v361 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v360 - 8) + 16);
        v362 = v358;
        v361(v906, v871, v360);
        ((void (*)(char *, _QWORD, uint64_t, int *))v875[7])(__dstd, 0, 1, v170);
      }
      v165[v167[7]] = *(_BYTE *)(v166 + v167[7]);
      v165[v167[8]] = *(_BYTE *)(v166 + v167[8]);
      v165[v167[9]] = *(_BYTE *)(v166 + v167[9]);
      v165[v167[10]] = *(_BYTE *)(v166 + v167[10]);
      v363 = v894[11];
      v364 = (void *)(a1 + v363);
      v365 = (const void *)(a2 + v363);
      v366 = sub_1BB871B24();
      v367 = *(_QWORD *)(v366 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v367 + 48))(v365, 1, v366))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v364, v365, *(_QWORD *)(*(_QWORD *)(v368 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v367 + 16))(v364, v365, v366);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v367 + 56))(v364, 0, 1, v366);
      }
      v386 = v894[12];
      v387 = (_QWORD *)(a1 + v386);
      v388 = (_QWORD *)(a2 + v386);
      v389 = v388[1];
      if (v389 >= 0x11)
      {
        *v387 = *v388;
        v387[1] = v389;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v387 = *(_OWORD *)v388;
      }
      v390 = v894[13];
      v391 = *(_QWORD *)(a2 + v390);
      if (v391 >= 2)
      {
        if (v391 == 2)
        {
          *(_QWORD *)(a1 + v390) = 2;
        }
        else
        {
          *(_QWORD *)(a1 + v390) = v391;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(_QWORD *)(a1 + v390) = v391;
      }
      v425 = v894[14];
      v426 = *(void **)(a2 + v425);
      *(_QWORD *)(a1 + v425) = v426;
      v427 = v426;
      goto LABEL_421;
    case 4:
      v66 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v66;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v67 = (_QWORD *)(a2 + 24);
      v68 = *(_QWORD *)(a2 + 32);
      if (v68 >= 0x11)
      {
        *(_QWORD *)(a1 + 24) = *v67;
        *(_QWORD *)(a1 + 32) = v68;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v67;
      }
      v237 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v237;
      v238 = (int *)type metadata accessor for FeedWebEmbed();
      v239 = v238[8];
      v240 = a1 + v239;
      v241 = a2 + v239;
      v242 = sub_1BB86C67C();
      v243 = *(_QWORD *)(v242 - 8);
      v244 = *(void (**)(uint64_t, uint64_t, uint64_t))(v243 + 16);
      swift_bridgeObjectRetain();
      v244(v240, v241, v242);
      v245 = v238[9];
      v246 = (void *)(a1 + v245);
      v247 = (const void *)(a2 + v245);
      __dstf = (void (*)(char *, char *, void *))v244;
      v897 = (void *)v242;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v243 + 48))(a2 + v245, 1, v242))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v246, v247, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
      }
      else
      {
        v244((uint64_t)v246, (uint64_t)v247, v242);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v246, 0, 1, v242);
      }
      *(_QWORD *)(a1 + v238[10]) = *(_QWORD *)(a2 + v238[10]);
      *(_QWORD *)(a1 + v238[11]) = *(_QWORD *)(a2 + v238[11]);
      v300 = v238[12];
      v301 = (_QWORD *)(a1 + v300);
      v904 = v238;
      v302 = (_QWORD *)(a2 + v300);
      v303 = type metadata accessor for FeedHeadline(0);
      v304 = *(_QWORD *)(v303 - 8);
      v305 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v304 + 48);
      swift_retain();
      swift_retain();
      if (v305(v302, 1, v303))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v301, v302, *(_QWORD *)(*(_QWORD *)(v306 - 8) + 64));
        v307 = v904;
      }
      else
      {
        v869 = v304;
        v877 = (int *)v303;
        v329 = v302[1];
        *v301 = *v302;
        v301[1] = v329;
        v301[2] = v302[2];
        *((_BYTE *)v301 + 24) = *((_BYTE *)v302 + 24);
        v330 = v302[5];
        v301[4] = v302[4];
        v301[5] = v330;
        v301[6] = v302[6];
        *((_BYTE *)v301 + 56) = *((_BYTE *)v302 + 56);
        v331 = *(int *)(v303 + 40);
        v332 = (char *)v301 + v331;
        v865 = v302;
        v333 = (char *)v302 + v331;
        *v332 = *((_BYTE *)v302 + v331);
        v332[1] = *((_BYTE *)v302 + v331 + 1);
        v334 = type metadata accessor for FeedHeadline.State(0);
        v335 = *(int *)(v334 + 24);
        v859 = &v332[v335];
        v862 = (int *)v334;
        v336 = &v333[v335];
        v337 = (int *)type metadata accessor for SharedItem();
        v857 = *((_QWORD *)v337 - 1);
        v338 = *(unsigned int (**)(char *, uint64_t, int *))(v857 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v338(v336, 1, v337))
        {
          v339 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v859, v336, *(_QWORD *)(*(_QWORD *)(v339 - 8) + 64));
        }
        else
        {
          v487 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v487 - 8) + 16))(v859, v336, v487);
          v859[v337[5]] = v336[v337[5]];
          v488 = v337[6];
          v489 = *(void **)&v336[v488];
          *(_QWORD *)&v859[v488] = v489;
          v490 = v337[7];
          v491 = &v859[v490];
          v492 = &v336[v490];
          v493 = v489;
          __dstf(v491, v492, v897);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v857 + 56))(v859, 0, 1, v337);
        }
        v332[v862[7]] = v333[v862[7]];
        v332[v862[8]] = v333[v862[8]];
        v332[v862[9]] = v333[v862[9]];
        v332[v862[10]] = v333[v862[10]];
        v494 = v877[11];
        v495 = (char *)v301 + v494;
        v496 = (char *)v865 + v494;
        v497 = sub_1BB871B24();
        v498 = *(_QWORD *)(v497 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v498 + 48))(v496, 1, v497))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v495, v496, *(_QWORD *)(*(_QWORD *)(v499 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v498 + 16))(v495, v496, v497);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v498 + 56))(v495, 0, 1, v497);
        }
        v307 = v904;
        v506 = v877[12];
        v507 = (_QWORD *)((char *)v301 + v506);
        v508 = (_QWORD *)((char *)v865 + v506);
        v509 = v508[1];
        if (v509 >= 0x11)
        {
          *v507 = *v508;
          v507[1] = v509;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v507 = *(_OWORD *)v508;
        }
        v510 = v877[13];
        v511 = *(_QWORD *)((char *)v865 + v510);
        if (v511 >= 2)
        {
          if (v511 == 2)
          {
            *(_QWORD *)((char *)v301 + v510) = 2;
          }
          else
          {
            *(_QWORD *)((char *)v301 + v510) = v511;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)((char *)v301 + v510) = v511;
        }
        v551 = v877[14];
        v552 = *(void **)((char *)v865 + v551);
        *(_QWORD *)((char *)v301 + v551) = v552;
        v553 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v869 + 56);
        v554 = v552;
        v553(v301, 0, 1, v877);
      }
      v555 = v307[13];
      v556 = (_QWORD *)(a1 + v555);
      v557 = (uint64_t *)(a2 + v555);
      v558 = type metadata accessor for WebEmbedDataVisualization();
      v559 = *(_QWORD *)(v558 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v559 + 48))(v557, 1, v558))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v556, v557, *(_QWORD *)(*(_QWORD *)(v560 - 8) + 64));
      }
      else
      {
        v561 = swift_getEnumCaseMultiPayload();
        v562 = *v557;
        if (v561 == 1)
        {
          v563 = v557[1];
          *v556 = v562;
          v556[1] = v563;
          v564 = type metadata accessor for GenericDataVisualization();
          v565 = *(int *)(v564 + 20);
          v566 = (char *)v556 + v565;
          v567 = (char *)v557 + v565;
          swift_bridgeObjectRetain();
          v568 = v566;
          v307 = v904;
          __dstf(v568, v567, v897);
          *(_QWORD *)((char *)v556 + *(int *)(v564 + 24)) = *(uint64_t *)((char *)v557 + *(int *)(v564 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *v556 = v562;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v559 + 56))(v556, 0, 1, v558);
      }
      *(_BYTE *)(a1 + v307[14]) = *(_BYTE *)(a2 + v307[14]);
      goto LABEL_421;
    case 5:
      v173 = *(void **)a2;
      v174 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v174;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v175 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v175;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      v176 = *(_QWORD *)(a2 + 80);
      v177 = v173;
      swift_bridgeObjectRetain();
      v178 = v175;
      if (v176 == 1)
      {
        v179 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v179;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = v176;
        v266 = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = v266;
        v268 = *(void **)(a2 + 104);
        v267 = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 104) = v268;
        *(_QWORD *)(a1 + 112) = v267;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v269 = v268;
      }
      v270 = (_QWORD *)(a2 + 120);
      v271 = *(_QWORD *)(a2 + 128);
      if (v271 >= 0x11)
      {
        *(_QWORD *)(a1 + 120) = *v270;
        *(_QWORD *)(a1 + 128) = v271;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v270;
      }
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      goto LABEL_421;
    case 6:
      v180 = *(unsigned __int8 *)(a2 + 281);
      if (v180 == 2)
      {
        v408 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v408;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        v409 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v409;
        v410 = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = v410;
        v411 = *(_QWORD *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v411 != 1)
        {
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 88) = v411;
          v450 = *(_QWORD *)(a2 + 120);
          swift_bridgeObjectRetain();
          if (v450)
          {
            v451 = *(_QWORD *)(a2 + 128);
            *(_QWORD *)(a1 + 120) = v450;
            *(_QWORD *)(a1 + 128) = v451;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v450 - 8))(a1 + 96, a2 + 96, v450);
            *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
          }
          else
          {
            v570 = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 112) = v570;
            *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
          }
          *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
          goto LABEL_280;
        }
        v412 = (_OWORD *)(a1 + 80);
        v413 = (_OWORD *)(a2 + 80);
        v414 = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 128) = v414;
        *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
LABEL_250:
        v519 = v413[1];
        *v412 = *v413;
        v412[1] = v519;
        goto LABEL_280;
      }
      if (v180 != 1)
      {
        v415 = *(void **)a2;
        v416 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v416;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        v417 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v417;
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        v418 = *(_QWORD *)(a2 + 80);
        v419 = v415;
        swift_bridgeObjectRetain();
        v420 = v417;
        if (v418 == 1)
        {
          v421 = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          *(_OWORD *)(a1 + 88) = v421;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        }
        else
        {
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 80) = v418;
          v452 = *(_QWORD *)(a2 + 96);
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          *(_QWORD *)(a1 + 96) = v452;
          v454 = *(void **)(a2 + 104);
          v453 = *(_QWORD *)(a2 + 112);
          *(_QWORD *)(a1 + 104) = v454;
          *(_QWORD *)(a1 + 112) = v453;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v455 = v454;
        }
        v456 = (_QWORD *)(a2 + 120);
        v457 = *(_QWORD *)(a2 + 128);
        if (v457 >= 0x11)
        {
          *(_QWORD *)(a1 + 120) = *v456;
          *(_QWORD *)(a1 + 128) = v457;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v456;
        }
        *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
        goto LABEL_280;
      }
      v181 = *(void **)a2;
      v182 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v182;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v183 = *(void **)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v183;
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      v184 = *(_QWORD *)(a2 + 80);
      v185 = v181;
      swift_bridgeObjectRetain();
      v186 = v183;
      if (v184 == 1)
      {
        v187 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v187;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = v184;
        v436 = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = v436;
        v438 = *(void **)(a2 + 104);
        v437 = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 104) = v438;
        *(_QWORD *)(a1 + 112) = v437;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v439 = v438;
      }
      v440 = (_QWORD *)(a2 + 120);
      v441 = *(_QWORD *)(a2 + 128);
      if (v441 >= 0x11)
      {
        *(_QWORD *)(a1 + 120) = *v440;
        *(_QWORD *)(a1 + 128) = v441;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v440;
      }
      v413 = (_OWORD *)(a2 + 144);
      v466 = *(void **)(a2 + 144);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      if (!v466)
      {
        v412 = (_OWORD *)(a1 + 144);
        v516 = *(_OWORD *)(a2 + 256);
        *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 256) = v516;
        *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
        v517 = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 192) = v517;
        v518 = *(_OWORD *)(a2 + 224);
        *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
        *(_OWORD *)(a1 + 224) = v518;
        goto LABEL_250;
      }
      v467 = *(_QWORD *)(a2 + 152);
      v468 = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 144) = v466;
      *(_QWORD *)(a1 + 152) = v467;
      *(_QWORD *)(a1 + 160) = v468;
      *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      v469 = *(void **)(a2 + 200);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v469;
      *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
      v470 = *(_QWORD *)(a2 + 224);
      v471 = v466;
      swift_bridgeObjectRetain();
      v472 = v469;
      if (v470 == 1)
      {
        v473 = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 232) = v473;
        *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      }
      else
      {
        *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
        *(_QWORD *)(a1 + 224) = v470;
        v526 = *(_QWORD *)(a2 + 240);
        *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
        *(_QWORD *)(a1 + 240) = v526;
        v528 = *(void **)(a2 + 248);
        v527 = *(_QWORD *)(a2 + 256);
        *(_QWORD *)(a1 + 248) = v528;
        *(_QWORD *)(a1 + 256) = v527;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v529 = v528;
      }
      v530 = (_QWORD *)(a2 + 264);
      v531 = *(_QWORD *)(a2 + 272);
      if (v531 >= 0x11)
      {
        *(_QWORD *)(a1 + 264) = *v530;
        *(_QWORD *)(a1 + 272) = v531;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 264) = *(_OWORD *)v530;
      }
      *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
LABEL_280:
      *(_BYTE *)(a1 + 281) = v180;
LABEL_421:
      swift_storeEnumTagMultiPayload();
LABEL_422:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 7:
      v188 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v188;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      v189 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v189;
      v190 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v190;
      v191 = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v191 == 1)
      {
        v192 = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 128) = v192;
        *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
        v193 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v193;
      }
      else
      {
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = v191;
        v272 = *(_QWORD *)(a2 + 120);
        swift_bridgeObjectRetain();
        if (v272)
        {
          v273 = *(_QWORD *)(a2 + 128);
          *(_QWORD *)(a1 + 120) = v272;
          *(_QWORD *)(a1 + 128) = v273;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v272 - 8))(a1 + 96, a2 + 96, v272);
          *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        }
        else
        {
          v429 = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 112) = v429;
          *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
        }
        *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      }
      goto LABEL_421;
    case 8:
      v194 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v194;
      v195 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v196 = (_QWORD *)(a1 + v195);
      v197 = a2 + v195;
      v198 = *(_QWORD *)(a2 + v195 + 8);
      *v196 = *(_QWORD *)(a2 + v195);
      v196[1] = v198;
      v199 = *(_QWORD *)(a2 + v195 + 24);
      v196[2] = *(_QWORD *)(a2 + v195 + 16);
      v196[3] = v199;
      v200 = type metadata accessor for FormatCustomItem.Resolved();
      v201 = *(int *)(v200 + 24);
      v895 = (char *)v196 + v201;
      v902 = v200;
      v202 = (const void *)(v197 + v201);
      v203 = type metadata accessor for FormatCustomItem.Action();
      v204 = *(_QWORD *)(v203 - 8);
      v205 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v204 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v205(v202, 1, v203))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v895, v202, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
      }
      else
      {
        v369 = sub_1BB86C67C();
        (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v369 - 8) + 16))(v895, v202, v369);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v204 + 56))(v895, 0, 1, v203);
      }
      *(_QWORD *)((char *)v196 + *(int *)(v902 + 28)) = *(_QWORD *)(v197 + *(int *)(v902 + 28));
      swift_bridgeObjectRetain();
      goto LABEL_421;
    case 9:
      v69 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v69;
      v70 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v70;
      v71 = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v71)
      {
        v72 = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 56) = v71;
        *(_QWORD *)(a1 + 64) = v72;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v71 - 8))(a1 + 32, a2 + 32, v71);
      }
      else
      {
        v287 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v287;
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      }
      v288 = (_OWORD *)(a1 + 72);
      v289 = (_OWORD *)(a2 + 72);
      v290 = *(_QWORD *)(a2 + 96);
      if (v290)
      {
        v291 = *(_QWORD *)(a2 + 104);
        *(_QWORD *)(a1 + 96) = v290;
        *(_QWORD *)(a1 + 104) = v291;
        (**(void (***)(_OWORD *, _OWORD *))(v290 - 8))(v288, v289);
      }
      else
      {
        v313 = *(_OWORD *)(a2 + 88);
        *v288 = *v289;
        *(_OWORD *)(a1 + 88) = v313;
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      }
      v314 = (_OWORD *)(a1 + 112);
      v315 = (_OWORD *)(a2 + 112);
      v316 = *(_QWORD *)(a2 + 136);
      if (v316)
      {
        v317 = *(_QWORD *)(a2 + 144);
        *(_QWORD *)(a1 + 136) = v316;
        *(_QWORD *)(a1 + 144) = v317;
        (**(void (***)(_OWORD *, _OWORD *))(v316 - 8))(v314, v315);
      }
      else
      {
        v341 = *(_OWORD *)(a2 + 128);
        *v314 = *v315;
        *(_OWORD *)(a1 + 128) = v341;
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      }
      goto LABEL_421;
    case 10:
      v207 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v207;
      v208 = (int *)type metadata accessor for FeedEngagementBanner();
      v209 = v208[5];
      v210 = a1 + v209;
      v211 = a2 + v209;
      v212 = sub_1BB86EDAC();
      v213 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v212 - 8) + 16);
      swift_bridgeObjectRetain();
      v213(v210, v211, v212);
      *(_QWORD *)(a1 + v208[6]) = *(_QWORD *)(a2 + v208[6]);
      v214 = v208[7];
      v215 = a1 + v214;
      v216 = a2 + v214;
      *(_QWORD *)v215 = *(_QWORD *)v216;
      *(_BYTE *)(v215 + 8) = *(_BYTE *)(v216 + 8);
      v217 = v208[8];
      v63 = (char *)(a1 + v217);
      v64 = (char *)(a2 + v217);
      v65 = *((_QWORD *)v64 + 1);
      if (v65 >= 0x11)
      {
LABEL_318:
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *((_QWORD *)v63 + 1) = v65;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v63 = *(_OWORD *)v64;
      }
      goto LABEL_421;
    case 11:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain();
      goto LABEL_421;
    case 12:
      v73 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v73;
      v74 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v74;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_421;
    case 13:
      v218 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v218;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v219 = (_QWORD *)(a2 + 24);
      v220 = *(_QWORD *)(a2 + 32);
      if (v220 >= 0x11)
      {
        *(_QWORD *)(a1 + 24) = *v219;
        *(_QWORD *)(a1 + 32) = v220;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v219;
      }
      v274 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v274;
      v275 = *(void **)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v275;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      v276 = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v277 = v275;
      swift_bridgeObjectRetain();
      if (v276)
      {
        v278 = *(_QWORD *)(a2 + 120);
        *(_QWORD *)(a1 + 112) = v276;
        *(_QWORD *)(a1 + 120) = v278;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v276 - 8))(a1 + 88, a2 + 88, v276);
      }
      else
      {
        v375 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v375;
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      }
      v376 = (_OWORD *)(a1 + 128);
      v377 = (_OWORD *)(a2 + 128);
      v378 = *(_QWORD *)(a2 + 152);
      if (v378)
      {
        v379 = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 152) = v378;
        *(_QWORD *)(a1 + 160) = v379;
        (**(void (***)(_OWORD *, _OWORD *))(v378 - 8))(v376, v377);
      }
      else
      {
        v393 = *(_OWORD *)(a2 + 144);
        *v376 = *v377;
        *(_OWORD *)(a1 + 144) = v393;
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      }
      goto LABEL_421;
    case 14:
      v75 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v75;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v76 = (_QWORD *)(a2 + 24);
      v77 = *(_QWORD *)(a2 + 32);
      if (v77 >= 0x11)
      {
        *(_QWORD *)(a1 + 24) = *v76;
        *(_QWORD *)(a1 + 32) = v77;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v76;
      }
      v249 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v249;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_421;
    case 15:
      v221 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v221;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v222 = (_QWORD *)(a2 + 24);
      v223 = *(_QWORD *)(a2 + 32);
      if (v223 >= 0x11)
      {
        *(_QWORD *)(a1 + 24) = *v222;
        *(_QWORD *)(a1 + 32) = v223;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v222;
      }
      v279 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v279;
      v280 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)(a1 + v280) = *(_QWORD *)(a2 + v280);
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v281 = (char *)&loc_1BB2FCB0C + 4 * word_1BB907F56[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 16:
      v78 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v78;
      v79 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v79;
      v80 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v80;
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      v81 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v81;
      v82 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v82;
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      v83 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v83;
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      v84 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v84;
      v85 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v85;
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      v86 = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = v86;
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
      v87 = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = v87;
      __dsta = (_QWORD *)(a2 + 232);
      v88 = *(_QWORD *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v88 >= 0x11)
      {
        *(_QWORD *)(a1 + 232) = *__dsta;
        *(_QWORD *)(a1 + 240) = v88;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 232) = *(_OWORD *)__dsta;
      }
      goto LABEL_421;
    default:
      memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      goto LABEL_422;
  }
}

uint64_t assignWithCopy for FormatLayoutViewRoute(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  char *v57;
  int *v58;
  unsigned int (*v59)(char *, uint64_t, int *);
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  id v66;
  __int128 v67;
  __int128 v68;
  int v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  id v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  const void *v88;
  uint64_t v89;
  unsigned int (*v90)(const void *, uint64_t, uint64_t);
  uint64_t v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  char *v113;
  int *v114;
  unsigned int (*v115)(char *, uint64_t, int *);
  uint64_t v116;
  void *v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  id v121;
  id v122;
  __int128 v123;
  __int128 v124;
  int v125;
  void *v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  id v130;
  id v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  const void *v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int (*v147)(const void *, uint64_t, uint64_t);
  uint64_t v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  int *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t, uint64_t);
  uint64_t v169;
  int *v170;
  uint64_t v171;
  void *v172;
  const void *v173;
  uint64_t v174;
  int *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(uint64_t, uint64_t, uint64_t);
  uint64_t v182;
  int *v183;
  uint64_t v184;
  void *v185;
  const void *v186;
  uint64_t v187;
  void *v188;
  id v189;
  uint64_t v190;
  char v191;
  void *v192;
  uint64_t v193;
  id v194;
  uint64_t v195;
  char *v196;
  void *v197;
  id v198;
  uint64_t v199;
  char v200;
  void *v201;
  uint64_t v202;
  id v203;
  uint64_t v204;
  char *v205;
  __int128 v206;
  __int128 v207;
  _OWORD *v208;
  __int128 *v209;
  uint64_t v210;
  __int128 v211;
  __int128 v212;
  _OWORD *v213;
  __int128 *v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  _QWORD *v218;
  uint64_t v219;
  uint64_t v220;
  unsigned int (*v221)(_QWORD *, uint64_t, uint64_t);
  uint64_t v222;
  uint64_t v223;
  _QWORD *v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  unsigned int (*v228)(_QWORD *, uint64_t, uint64_t);
  uint64_t v229;
  __int128 v230;
  __int128 v231;
  _OWORD *v232;
  __int128 *v233;
  uint64_t v234;
  __int128 v235;
  __int128 v236;
  _OWORD *v237;
  __int128 *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  _BYTE *v242;
  char *v243;
  int *v244;
  uint64_t v245;
  char *v246;
  int *v247;
  unsigned int (*v248)(char *, uint64_t, int *);
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _BYTE *v252;
  char *v253;
  int *v254;
  uint64_t v255;
  char *v256;
  int *v257;
  unsigned int (*v258)(char *, uint64_t, int *);
  uint64_t v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  uint64_t v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  uint64_t v268;
  void (*v269)(char *, char *, uint64_t);
  id v270;
  uint64_t v271;
  void *v272;
  const void *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void *v280;
  uint64_t v281;
  uint64_t v282;
  void (*v283)(char *, char *, uint64_t);
  id v284;
  uint64_t v285;
  void *v286;
  const void *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  __int128 v292;
  __int128 v293;
  _OWORD *v294;
  __int128 *v295;
  uint64_t v296;
  __int128 v297;
  __int128 v298;
  _OWORD *v299;
  __int128 *v300;
  uint64_t v301;
  uint64_t v302;
  _QWORD *v303;
  _QWORD *v304;
  uint64_t v305;
  unint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  _QWORD *v309;
  uint64_t v310;
  unint64_t v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  uint64_t v316;
  uint64_t v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  void *v321;
  uint64_t v322;
  void *v323;
  uint64_t v324;
  id v325;
  id v326;
  __int128 v327;
  __int128 v328;
  uint64_t v329;
  uint64_t v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  void *v334;
  uint64_t v335;
  void *v336;
  uint64_t v337;
  id v338;
  id v339;
  __int128 v340;
  __int128 v341;
  uint64_t v342;
  void *v343;
  id v344;
  uint64_t v345;
  void *v346;
  id v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  void *v354;
  id v355;
  void *v356;
  id v357;
  uint64_t v358;
  char v359;
  void *v360;
  id v361;
  uint64_t v362;
  char v363;
  void *v364;
  id v365;
  void *v366;
  uint64_t v367;
  void *v368;
  uint64_t v369;
  id v370;
  id v371;
  __int128 v372;
  __int128 v373;
  void *v374;
  uint64_t v375;
  void *v376;
  uint64_t v377;
  id v378;
  id v379;
  __int128 v380;
  __int128 v381;
  uint64_t v382;
  uint64_t v383;
  void *v384;
  uint64_t v385;
  char *v386;
  char *v387;
  id v388;
  uint64_t v389;
  char *v390;
  char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  void *v397;
  uint64_t v398;
  char *v399;
  char *v400;
  id v401;
  uint64_t v402;
  char *v403;
  char *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  _QWORD *v409;
  _QWORD *v410;
  uint64_t v411;
  unint64_t v412;
  uint64_t v413;
  _QWORD *v414;
  _QWORD *v415;
  uint64_t v416;
  unint64_t v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  void *v430;
  id v431;
  void *v432;
  id v433;
  uint64_t v434;
  void *v435;
  void (*v436)(_QWORD *, _QWORD, uint64_t, int *);
  id v437;
  int *v438;
  uint64_t v439;
  _QWORD *v440;
  _QWORD *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  int v445;
  uint64_t v446;
  uint64_t v447;
  char *v448;
  char *v449;
  uint64_t v450;
  void *v451;
  void (*v452)(_QWORD *, _QWORD, uint64_t, int *);
  id v453;
  int *v454;
  uint64_t v455;
  _QWORD *v456;
  _QWORD *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  int v461;
  uint64_t v462;
  uint64_t v463;
  char *v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  __int128 v470;
  uint64_t v471;
  uint64_t v472;
  char *v473;
  char *v474;
  uint64_t v475;
  unint64_t v476;
  int *v477;
  uint64_t v478;
  char *v479;
  char *v480;
  uint64_t v481;
  void (*v482)(char *, char *, uint64_t);
  uint64_t v483;
  char *v484;
  char *v485;
  char v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  unint64_t v495;
  uint64_t v496;
  uint64_t v497;
  char *v498;
  char *v499;
  int *v500;
  uint64_t v501;
  char *v502;
  int *v503;
  unsigned int (*v504)(char *, uint64_t, int *);
  uint64_t v505;
  void *v506;
  uint64_t v507;
  void *v508;
  uint64_t v509;
  id v510;
  id v511;
  __int128 v512;
  __int128 v513;
  int v514;
  void *v515;
  uint64_t v516;
  void *v517;
  uint64_t v518;
  id v519;
  id v520;
  __int128 v521;
  __int128 v522;
  uint64_t v523;
  uint64_t v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  uint64_t v528;
  char *v529;
  char *v530;
  uint64_t v531;
  uint64_t v532;
  char *v533;
  uint64_t v534;
  unsigned int (*v535)(char *, uint64_t, uint64_t);
  uint64_t v536;
  int *v537;
  uint64_t v538;
  char *v539;
  char *v540;
  uint64_t v541;
  void (*v542)(char *, char *, uint64_t);
  uint64_t v543;
  char *v544;
  char *v545;
  char v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  int *v550;
  uint64_t v551;
  char *v552;
  char *v553;
  uint64_t v554;
  uint64_t v555;
  void (*v556)(char *, char *, uint64_t);
  uint64_t v557;
  char *v558;
  char *v559;
  uint64_t v560;
  void *v561;
  id v562;
  uint64_t v563;
  char v564;
  void *v565;
  uint64_t v566;
  id v567;
  uint64_t v568;
  char *v569;
  __int128 v570;
  __int128 v571;
  _OWORD *v572;
  __int128 *v573;
  uint64_t v574;
  uint64_t v575;
  char *v576;
  char *v577;
  uint64_t v578;
  uint64_t v579;
  unsigned int (*v580)(char *, uint64_t, uint64_t);
  uint64_t v581;
  int *v582;
  __int128 v583;
  __int128 v584;
  _OWORD *v585;
  __int128 *v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  char *v590;
  char *v591;
  int *v592;
  uint64_t v593;
  char *v594;
  int *v595;
  uint64_t (*v596)(char *, uint64_t, int *);
  int v597;
  _QWORD *v598;
  uint64_t v599;
  __int128 v600;
  __int128 v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  void (*v606)(char *, char *, uint64_t);
  id v607;
  uint64_t v608;
  char *v609;
  char *v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  __int128 v615;
  __int128 v616;
  _OWORD *v617;
  __int128 *v618;
  uint64_t v619;
  uint64_t v620;
  char *v621;
  char *v622;
  uint64_t v623;
  unint64_t v624;
  __int128 v625;
  __int128 v626;
  uint64_t v627;
  uint64_t v628;
  __int128 v629;
  __int128 v630;
  __int128 v631;
  void *v632;
  uint64_t v633;
  void *v634;
  uint64_t v635;
  id v636;
  id v637;
  __int128 v638;
  __int128 v639;
  uint64_t v640;
  void *v641;
  id v642;
  __int128 v643;
  __int128 v644;
  __int128 v645;
  void *v646;
  id v647;
  uint64_t v648;
  char v649;
  void *v650;
  id v651;
  void *v652;
  uint64_t v653;
  void *v654;
  uint64_t v655;
  id v656;
  id v657;
  __int128 v658;
  __int128 v659;
  uint64_t v660;
  uint64_t v661;
  void *v662;
  uint64_t v663;
  char *v664;
  char *v665;
  char *v666;
  id v667;
  char *v668;
  uint64_t v669;
  char *v670;
  char *v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  char *v676;
  _QWORD *v677;
  uint64_t v678;
  unint64_t v679;
  __int128 v680;
  __int128 v681;
  __int128 v682;
  __int128 v683;
  __int128 v684;
  __int128 v685;
  void *v686;
  id v687;
  uint64_t v688;
  void *v689;
  void (*v690)(char *, _QWORD, uint64_t, int *);
  id v691;
  uint64_t v692;
  char *v693;
  char *v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  int v698;
  uint64_t v699;
  uint64_t v700;
  char *v701;
  __int128 v702;
  __int128 v703;
  __int128 v704;
  uint64_t result;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  int *v709;
  char *v710;
  char *v711;
  char *v712;
  _QWORD *v713;
  _QWORD *v714;
  uint64_t v715;
  void *v716;
  uint64_t v717;
  uint64_t v718;
  char *v719;
  char *v720;
  uint64_t v721;
  int *v722;
  _QWORD *v723;
  _QWORD *v724;
  int *v725;
  int *v726;
  char *v727;
  char *v728;
  char *v729;
  char *__dst;
  _QWORD *__dsta;
  char *__dstb;
  int *__dstc;
  int *__dstd;
  char *__dstg;
  char *__dsth;
  void *__dsti;
  _QWORD *__dste;
  void (*__dstf)(char *, char *, void *);
  char *__dstj;
  void *v741;
  void *v742;
  char *v743;
  char *v744;
  void (*v745)(char *, char *, uint64_t);
  void (*v746)(char *, char *, uint64_t);
  char *v747;
  char *v748;
  char *v749;
  void *v750;
  char *v751;
  int *v752;
  uint64_t v753;
  int *v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  int *v758;
  uint64_t v759;
  int *v760;
  uint64_t v761;
  uint64_t v762;

  if (a1 != a2)
  {
    sub_1BB307CA8(a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = type metadata accessor for FeedItem(0);
    v6 = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 1)
    {
      switch(v6)
      {
        case 0:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v9 = *(_QWORD *)(a2 + 24);
          *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
          *(_QWORD *)(a1 + 24) = v9;
          v10 = *(_QWORD *)(a2 + 48);
          swift_bridgeObjectRetain();
          if (v10 >= 0x11)
          {
            *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
            *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          }
          goto LABEL_412;
        case 1:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v105 = *(_QWORD *)(a2 + 24);
          *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
          *(_QWORD *)(a1 + 24) = v105;
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          v106 = *(_QWORD *)(a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v106 >= 0x11)
          {
            *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
            *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
          }
          goto LABEL_412;
        case 2:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v30 = (int *)type metadata accessor for FeedBannerAd();
          v31 = v30[5];
          v32 = a1 + v31;
          v33 = a2 + v31;
          v34 = sub_1BB8721C0();
          v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
          swift_bridgeObjectRetain();
          v35(v32, v33, v34);
          *(_QWORD *)(a1 + v30[6]) = *(_QWORD *)(a2 + v30[6]);
          v36 = v30[7];
          v37 = a1 + v36;
          v38 = a2 + v36;
          v39 = *(_BYTE *)(v38 + 8);
          *(_QWORD *)v37 = *(_QWORD *)v38;
          *(_BYTE *)(v37 + 8) = v39;
          v40 = v30[8];
          v41 = (char *)(a1 + v40);
          v42 = (char *)(a2 + v40);
          if (*((_QWORD *)v42 + 1) >= 0x11uLL)
            goto LABEL_109;
          *(_OWORD *)v41 = *(_OWORD *)v42;
          goto LABEL_412;
        case 3:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v107 = *(_QWORD *)(a2 + 16);
          *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
          *(_QWORD *)(a1 + 16) = v107;
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
          v754 = (int *)type metadata accessor for FeedHeadline(0);
          v108 = v754[10];
          v109 = (_BYTE *)(a1 + v108);
          v110 = a2 + v108;
          *v109 = *(_BYTE *)(a2 + v108);
          v109[1] = *(_BYTE *)(a2 + v108 + 1);
          v111 = (int *)type metadata accessor for FeedHeadline.State(0);
          v112 = v111[6];
          __dstb = &v109[v112];
          v113 = (char *)(v110 + v112);
          v114 = (int *)type metadata accessor for SharedItem();
          v724 = (_QWORD *)*((_QWORD *)v114 - 1);
          v115 = (unsigned int (*)(char *, uint64_t, int *))v724[6];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v115(v113, 1, v114))
          {
            v116 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dstb, v113, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
          }
          else
          {
            v278 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 16))(__dstb, v113, v278);
            __dstb[v114[5]] = v113[v114[5]];
            v279 = v114[6];
            v280 = *(void **)&v113[v279];
            *(_QWORD *)&__dstb[v279] = v280;
            v281 = v114[7];
            v748 = &__dstb[v281];
            v720 = &v113[v281];
            v282 = sub_1BB86C67C();
            v283 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v282 - 8) + 16);
            v284 = v280;
            v283(v748, v720, v282);
            ((void (*)(char *, _QWORD, uint64_t, int *))v724[7])(__dstb, 0, 1, v114);
          }
          v109[v111[7]] = *(_BYTE *)(v110 + v111[7]);
          v109[v111[8]] = *(_BYTE *)(v110 + v111[8]);
          v109[v111[9]] = *(_BYTE *)(v110 + v111[9]);
          v109[v111[10]] = *(_BYTE *)(v110 + v111[10]);
          v285 = v754[11];
          v286 = (void *)(a1 + v285);
          v287 = (const void *)(a2 + v285);
          v288 = sub_1BB871B24();
          v289 = *(_QWORD *)(v288 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v289 + 48))(v287, 1, v288))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v286, v287, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v289 + 16))(v286, v287, v288);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v289 + 56))(v286, 0, 1, v288);
          }
          v307 = v754[12];
          v308 = (_QWORD *)(a1 + v307);
          v309 = (_QWORD *)(a2 + v307);
          if (v309[1] >= 0x11uLL)
          {
            *v308 = *v309;
            v308[1] = v309[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v308 = *(_OWORD *)v309;
          }
          v310 = v754[13];
          v311 = *(_QWORD *)(a2 + v310);
          if (v311 >= 2)
          {
            if (v311 == 2)
            {
              *(_QWORD *)(a1 + v310) = 2;
            }
            else
            {
              *(_QWORD *)(a1 + v310) = v311;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)(a1 + v310) = v311;
          }
          v345 = v754[14];
          v346 = *(void **)(a2 + v345);
          *(_QWORD *)(a1 + v345) = v346;
          v347 = v346;
          goto LABEL_412;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v43 = *(_QWORD *)(a2 + 8);
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_QWORD *)(a1 + 8) = v43;
          if (*(_QWORD *)(a2 + 32) >= 0x11uLL)
          {
            *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
            *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          }
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          v175 = (int *)type metadata accessor for FeedWebEmbed();
          v176 = v175[8];
          v177 = a1 + v176;
          v178 = a2 + v176;
          v179 = sub_1BB86C67C();
          v180 = *(_QWORD *)(v179 - 8);
          v181 = *(void (**)(uint64_t, uint64_t, uint64_t))(v180 + 16);
          swift_bridgeObjectRetain();
          v182 = v178;
          v183 = v175;
          v181(v177, v182, v179);
          v184 = v175[9];
          v185 = (void *)(a1 + v184);
          v186 = (const void *)(a2 + v184);
          v746 = (void (*)(char *, char *, uint64_t))v181;
          v757 = v179;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(a2 + v184, 1, v179))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
          }
          else
          {
            v181((uint64_t)v185, (uint64_t)v186, v179);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v180 + 56))(v185, 0, 1, v179);
          }
          *(_QWORD *)(a1 + v175[10]) = *(_QWORD *)(a2 + v175[10]);
          *(_QWORD *)(a1 + v175[11]) = *(_QWORD *)(a2 + v175[11]);
          v223 = v175[12];
          v224 = (_QWORD *)(a1 + v223);
          v225 = (_QWORD *)(a2 + v223);
          v226 = type metadata accessor for FeedHeadline(0);
          v227 = *(_QWORD *)(v226 - 8);
          v228 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v227 + 48);
          swift_retain();
          swift_retain();
          if (v228(v225, 1, v226))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
          }
          else
          {
            v718 = v227;
            v726 = (int *)v226;
            __dstd = v183;
            *v224 = *v225;
            v224[1] = v225[1];
            v250 = v225[2];
            *((_BYTE *)v224 + 24) = *((_BYTE *)v225 + 24);
            v224[2] = v250;
            v224[4] = v225[4];
            v224[5] = v225[5];
            v224[6] = v225[6];
            *((_BYTE *)v224 + 56) = *((_BYTE *)v225 + 56);
            v251 = *(int *)(v226 + 40);
            v252 = (char *)v224 + v251;
            v714 = v225;
            v253 = (char *)v225 + v251;
            *v252 = *((_BYTE *)v225 + v251);
            v252[1] = *((_BYTE *)v225 + v251 + 1);
            v254 = (int *)type metadata accessor for FeedHeadline.State(0);
            v255 = v254[6];
            v711 = &v252[v255];
            v256 = &v253[v255];
            v257 = (int *)type metadata accessor for SharedItem();
            v708 = *((_QWORD *)v257 - 1);
            v258 = *(unsigned int (**)(char *, uint64_t, int *))(v708 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v258(v256, 1, v257))
            {
              v259 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v711, v256, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
            }
            else
            {
              v395 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v395 - 8) + 16))(v711, v256, v395);
              v711[v257[5]] = v256[v257[5]];
              v396 = v257[6];
              v397 = *(void **)&v256[v396];
              *(_QWORD *)&v711[v396] = v397;
              v398 = v257[7];
              v399 = &v711[v398];
              v400 = &v256[v398];
              v401 = v397;
              v746(v399, v400, v757);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v708 + 56))(v711, 0, 1, v257);
            }
            v252[v254[7]] = v253[v254[7]];
            v252[v254[8]] = v253[v254[8]];
            v252[v254[9]] = v253[v254[9]];
            v252[v254[10]] = v253[v254[10]];
            v402 = v726[11];
            v403 = (char *)v224 + v402;
            v404 = (char *)v714 + v402;
            v405 = sub_1BB871B24();
            v406 = *(_QWORD *)(v405 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v406 + 48))(v404, 1, v405))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v407 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v406 + 16))(v403, v404, v405);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v406 + 56))(v403, 0, 1, v405);
            }
            v183 = __dstd;
            v413 = v726[12];
            v414 = (_QWORD *)((char *)v224 + v413);
            v415 = (_QWORD *)((char *)v714 + v413);
            if (v415[1] >= 0x11uLL)
            {
              *v414 = *v415;
              v414[1] = v415[1];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v414 = *(_OWORD *)v415;
            }
            v416 = v726[13];
            v417 = *(_QWORD *)((char *)v714 + v416);
            if (v417 >= 2)
            {
              if (v417 == 2)
              {
                *(_QWORD *)((char *)v224 + v416) = 2;
              }
              else
              {
                *(_QWORD *)((char *)v224 + v416) = v417;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(_QWORD *)((char *)v224 + v416) = v417;
            }
            v450 = v726[14];
            v451 = *(void **)((char *)v714 + v450);
            *(_QWORD *)((char *)v224 + v450) = v451;
            v452 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v718 + 56);
            v453 = v451;
            v452(v224, 0, 1, v726);
          }
          v454 = v183;
          v455 = v183[13];
          v456 = (_QWORD *)(a1 + v455);
          v457 = (_QWORD *)(a2 + v455);
          v458 = type metadata accessor for WebEmbedDataVisualization();
          v459 = *(_QWORD *)(v458 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v459 + 48))(v457, 1, v458))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v456, v457, *(_QWORD *)(*(_QWORD *)(v460 - 8) + 64));
          }
          else
          {
            v461 = swift_getEnumCaseMultiPayload();
            *v456 = *v457;
            if (v461 == 1)
            {
              v456[1] = v457[1];
              v462 = type metadata accessor for GenericDataVisualization();
              v463 = *(int *)(v462 + 20);
              __dsth = (char *)v456 + v463;
              v464 = (char *)v457 + v463;
              swift_bridgeObjectRetain();
              v746(__dsth, v464, v757);
              *(_QWORD *)((char *)v456 + *(int *)(v462 + 24)) = *(_QWORD *)((char *)v457 + *(int *)(v462 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v459 + 56))(v456, 0, 1, v458);
          }
          *(_BYTE *)(a1 + v454[14]) = *(_BYTE *)(a2 + v454[14]);
          goto LABEL_412;
        case 5:
          v117 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
          *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
          v118 = *(_QWORD *)(a2 + 32);
          *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
          *(_QWORD *)(a1 + 32) = v118;
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          v119 = *(void **)(a2 + 56);
          *(_QWORD *)(a1 + 56) = v119;
          *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
          v120 = *(_QWORD *)(a2 + 80);
          v121 = v117;
          swift_bridgeObjectRetain();
          v122 = v119;
          if (v120 == 1)
          {
            v123 = *(_OWORD *)(a2 + 72);
            v124 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v124;
            *(_OWORD *)(a1 + 72) = v123;
          }
          else
          {
            *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
            *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
            *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
            *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
            v197 = *(void **)(a2 + 104);
            *(_QWORD *)(a1 + 104) = v197;
            *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v198 = v197;
          }
          if (*(_QWORD *)(a2 + 128) >= 0x11uLL)
          {
            *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
            *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
          goto LABEL_412;
        case 6:
          v125 = *(unsigned __int8 *)(a2 + 281);
          if (v125 == 2)
          {
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
            *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
            v329 = *(_QWORD *)(a2 + 32);
            *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
            *(_QWORD *)(a1 + 32) = v329;
            *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
            *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
            *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
            *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
            v330 = *(_QWORD *)(a2 + 88);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v330 == 1)
            {
              *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
              v331 = *(_OWORD *)(a2 + 96);
              v332 = *(_OWORD *)(a2 + 112);
              v333 = *(_OWORD *)(a2 + 128);
              *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
              *(_OWORD *)(a1 + 112) = v332;
              *(_OWORD *)(a1 + 128) = v333;
              *(_OWORD *)(a1 + 96) = v331;
            }
            else
            {
              *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
              *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
              v362 = *(_QWORD *)(a2 + 120);
              swift_bridgeObjectRetain();
              if (v362)
              {
                *(_QWORD *)(a1 + 120) = v362;
                *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v362 - 8))(a1 + 96, a2 + 96, v362);
                v363 = *(_BYTE *)(a2 + 144);
                *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
                *(_BYTE *)(a1 + 144) = v363;
              }
              else
              {
                v468 = *(_OWORD *)(a2 + 96);
                v469 = *(_OWORD *)(a2 + 112);
                v470 = *(_OWORD *)(a2 + 128);
                *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
                *(_OWORD *)(a1 + 112) = v469;
                *(_OWORD *)(a1 + 128) = v470;
                *(_OWORD *)(a1 + 96) = v468;
              }
            }
          }
          else if (v125 == 1)
          {
            v126 = *(void **)a2;
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
            *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
            *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
            v127 = *(_QWORD *)(a2 + 32);
            *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
            *(_QWORD *)(a1 + 32) = v127;
            *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
            v128 = *(void **)(a2 + 56);
            *(_QWORD *)(a1 + 56) = v128;
            *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
            v129 = *(_QWORD *)(a2 + 80);
            v130 = v126;
            swift_bridgeObjectRetain();
            v131 = v128;
            if (v129 == 1)
            {
              v132 = *(_OWORD *)(a2 + 72);
              v133 = *(_OWORD *)(a2 + 104);
              *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
              *(_OWORD *)(a1 + 104) = v133;
              *(_OWORD *)(a1 + 72) = v132;
            }
            else
            {
              *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
              *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
              *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
              *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
              v356 = *(void **)(a2 + 104);
              *(_QWORD *)(a1 + 104) = v356;
              *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v357 = v356;
            }
            if (*(_QWORD *)(a2 + 128) >= 0x11uLL)
            {
              *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
              *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
            }
            *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
            v374 = *(void **)(a2 + 144);
            if (v374)
            {
              *(_QWORD *)(a1 + 144) = v374;
              *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
              *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
              *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
              *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
              v375 = *(_QWORD *)(a2 + 176);
              *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
              *(_QWORD *)(a1 + 176) = v375;
              *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
              v376 = *(void **)(a2 + 200);
              *(_QWORD *)(a1 + 200) = v376;
              *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
              v377 = *(_QWORD *)(a2 + 224);
              v378 = v374;
              swift_bridgeObjectRetain();
              v379 = v376;
              if (v377 == 1)
              {
                v380 = *(_OWORD *)(a2 + 216);
                v381 = *(_OWORD *)(a2 + 248);
                *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
                *(_OWORD *)(a1 + 248) = v381;
                *(_OWORD *)(a1 + 216) = v380;
              }
              else
              {
                *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
                *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
                *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
                *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
                v432 = *(void **)(a2 + 248);
                *(_QWORD *)(a1 + 248) = v432;
                *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v433 = v432;
              }
              if (*(_QWORD *)(a2 + 272) >= 0x11uLL)
              {
                *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
                *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
              }
              *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
            }
            else
            {
              *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
              v424 = *(_OWORD *)(a2 + 160);
              v425 = *(_OWORD *)(a2 + 176);
              v426 = *(_OWORD *)(a2 + 208);
              *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
              *(_OWORD *)(a1 + 208) = v426;
              *(_OWORD *)(a1 + 160) = v424;
              *(_OWORD *)(a1 + 176) = v425;
              v427 = *(_OWORD *)(a2 + 224);
              v428 = *(_OWORD *)(a2 + 240);
              v429 = *(_OWORD *)(a2 + 256);
              *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
              *(_OWORD *)(a1 + 240) = v428;
              *(_OWORD *)(a1 + 256) = v429;
              *(_OWORD *)(a1 + 224) = v427;
            }
          }
          else
          {
            v334 = *(void **)a2;
            *(_QWORD *)a1 = *(_QWORD *)a2;
            *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
            *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
            *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
            *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
            v335 = *(_QWORD *)(a2 + 32);
            *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
            *(_QWORD *)(a1 + 32) = v335;
            *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
            v336 = *(void **)(a2 + 56);
            *(_QWORD *)(a1 + 56) = v336;
            *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
            v337 = *(_QWORD *)(a2 + 80);
            v338 = v334;
            swift_bridgeObjectRetain();
            v339 = v336;
            if (v337 == 1)
            {
              v340 = *(_OWORD *)(a2 + 72);
              v341 = *(_OWORD *)(a2 + 104);
              *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
              *(_OWORD *)(a1 + 104) = v341;
              *(_OWORD *)(a1 + 72) = v340;
            }
            else
            {
              *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
              *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
              *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
              *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
              v364 = *(void **)(a2 + 104);
              *(_QWORD *)(a1 + 104) = v364;
              *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v365 = v364;
            }
            if (*(_QWORD *)(a2 + 128) >= 0x11uLL)
            {
              *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
              *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
            }
            *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
          }
          *(_BYTE *)(a1 + 281) = v125;
          goto LABEL_412;
        case 7:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
          v134 = *(_QWORD *)(a2 + 32);
          *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
          *(_QWORD *)(a1 + 32) = v134;
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          v135 = *(_QWORD *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v135 == 1)
          {
            *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
            v136 = *(_OWORD *)(a2 + 96);
            v137 = *(_OWORD *)(a2 + 112);
            v138 = *(_OWORD *)(a2 + 128);
            *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
            *(_OWORD *)(a1 + 112) = v137;
            *(_OWORD *)(a1 + 128) = v138;
            *(_OWORD *)(a1 + 96) = v136;
          }
          else
          {
            *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
            *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
            v199 = *(_QWORD *)(a2 + 120);
            swift_bridgeObjectRetain();
            if (v199)
            {
              *(_QWORD *)(a1 + 120) = v199;
              *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v199 - 8))(a1 + 96, a2 + 96, v199);
              v200 = *(_BYTE *)(a2 + 144);
              *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
              *(_BYTE *)(a1 + 144) = v200;
            }
            else
            {
              v351 = *(_OWORD *)(a2 + 96);
              v352 = *(_OWORD *)(a2 + 112);
              v353 = *(_OWORD *)(a2 + 128);
              *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
              *(_OWORD *)(a1 + 112) = v352;
              *(_OWORD *)(a1 + 128) = v353;
              *(_OWORD *)(a1 + 96) = v351;
            }
          }
          goto LABEL_412;
        case 8:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v139 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v140 = (_QWORD *)(a1 + v139);
          v141 = a2 + v139;
          *v140 = *(_QWORD *)(a2 + v139);
          v140[1] = *(_QWORD *)(a2 + v139 + 8);
          v140[2] = *(_QWORD *)(a2 + v139 + 16);
          v140[3] = *(_QWORD *)(a2 + v139 + 24);
          v142 = type metadata accessor for FormatCustomItem.Resolved();
          v143 = *(int *)(v142 + 24);
          v744 = (char *)v140 + v143;
          v755 = v142;
          v144 = (const void *)(v141 + v143);
          v145 = type metadata accessor for FormatCustomItem.Action();
          v146 = *(_QWORD *)(v145 - 8);
          v147 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v146 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v147(v144, 1, v145))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v744, v144, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
          }
          else
          {
            v291 = sub_1BB86C67C();
            (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(v744, v144, v291);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v744, 0, 1, v145);
          }
          *(_QWORD *)((char *)v140 + *(int *)(v755 + 28)) = *(_QWORD *)(v141 + *(int *)(v755 + 28));
          swift_bridgeObjectRetain();
          goto LABEL_412;
        case 9:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          v44 = *(_QWORD *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v44)
          {
            *(_QWORD *)(a1 + 56) = v44;
            *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v44 - 8))(a1 + 32, a2 + 32, v44);
          }
          else
          {
            v211 = *(_OWORD *)(a2 + 32);
            v212 = *(_OWORD *)(a2 + 48);
            *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
            *(_OWORD *)(a1 + 32) = v211;
            *(_OWORD *)(a1 + 48) = v212;
          }
          v213 = (_OWORD *)(a1 + 72);
          v214 = (__int128 *)(a2 + 72);
          v215 = *(_QWORD *)(a2 + 96);
          if (v215)
          {
            *(_QWORD *)(a1 + 96) = v215;
            *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
            (**(void (***)(_OWORD *, __int128 *))(v215 - 8))(v213, v214);
          }
          else
          {
            v235 = *v214;
            v236 = *(_OWORD *)(a2 + 88);
            *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
            *v213 = v235;
            *(_OWORD *)(a1 + 88) = v236;
          }
          v237 = (_OWORD *)(a1 + 112);
          v238 = (__int128 *)(a2 + 112);
          v239 = *(_QWORD *)(a2 + 136);
          if (v239)
          {
            *(_QWORD *)(a1 + 136) = v239;
            *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
            (**(void (***)(_OWORD *, __int128 *))(v239 - 8))(v237, v238);
          }
          else
          {
            v262 = *v238;
            v263 = *(_OWORD *)(a2 + 128);
            *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
            *v237 = v262;
            *(_OWORD *)(a1 + 128) = v263;
          }
          goto LABEL_412;
        case 10:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          v149 = (int *)type metadata accessor for FeedEngagementBanner();
          v150 = v149[5];
          v151 = a1 + v150;
          v152 = a2 + v150;
          v153 = sub_1BB86EDAC();
          v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 16);
          swift_bridgeObjectRetain();
          v154(v151, v152, v153);
          *(_QWORD *)(a1 + v149[6]) = *(_QWORD *)(a2 + v149[6]);
          v155 = v149[7];
          v156 = a1 + v155;
          v157 = a2 + v155;
          v158 = *(_BYTE *)(v157 + 8);
          *(_QWORD *)v156 = *(_QWORD *)v157;
          *(_BYTE *)(v156 + 8) = v158;
          v159 = v149[8];
          v41 = (char *)(a1 + v159);
          v42 = (char *)(a2 + v159);
          if (*((_QWORD *)v42 + 1) >= 0x11uLL)
          {
LABEL_109:
            *(_QWORD *)v41 = *(_QWORD *)v42;
            *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v41 = *(_OWORD *)v42;
          }
          goto LABEL_412;
        case 11:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          swift_retain();
          goto LABEL_412;
        case 12:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          v45 = *(_QWORD *)(a2 + 24);
          *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
          *(_QWORD *)(a1 + 24) = v45;
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_412;
        case 13:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v160 = *(_QWORD *)(a2 + 8);
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_QWORD *)(a1 + 8) = v160;
          if (*(_QWORD *)(a2 + 32) >= 0x11uLL)
          {
            *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
            *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          }
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          v201 = *(void **)(a2 + 64);
          *(_QWORD *)(a1 + 64) = v201;
          *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          v202 = *(_QWORD *)(a2 + 112);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v203 = v201;
          swift_bridgeObjectRetain();
          if (v202)
          {
            *(_QWORD *)(a1 + 112) = v202;
            *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v202 - 8))(a1 + 88, a2 + 88, v202);
          }
          else
          {
            v297 = *(_OWORD *)(a2 + 88);
            v298 = *(_OWORD *)(a2 + 104);
            *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
            *(_OWORD *)(a1 + 88) = v297;
            *(_OWORD *)(a1 + 104) = v298;
          }
          v299 = (_OWORD *)(a1 + 128);
          v300 = (__int128 *)(a2 + 128);
          v301 = *(_QWORD *)(a2 + 152);
          if (v301)
          {
            *(_QWORD *)(a1 + 152) = v301;
            *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
            (**(void (***)(_OWORD *, __int128 *))(v301 - 8))(v299, v300);
          }
          else
          {
            v314 = *v300;
            v315 = *(_OWORD *)(a2 + 144);
            *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
            *v299 = v314;
            *(_OWORD *)(a1 + 144) = v315;
          }
          goto LABEL_412;
        case 14:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v46 = *(_QWORD *)(a2 + 8);
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_QWORD *)(a1 + 8) = v46;
          if (*(_QWORD *)(a2 + 32) >= 0x11uLL)
          {
            *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
            *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          }
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_412;
        case 15:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v161 = *(_QWORD *)(a2 + 8);
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
          *(_QWORD *)(a1 + 8) = v161;
          if (*(_QWORD *)(a2 + 32) >= 0x11uLL)
          {
            *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
            *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
          }
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          v204 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)(a1 + v204) = *(_QWORD *)(a2 + v204);
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v205 = (char *)&loc_1BB302E8C + 4 * word_1BB907FD4[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 16:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
          *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
          *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
          *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
          *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
          *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
          *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
          *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
          *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
          *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
          *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
          v47 = *(_QWORD *)(a2 + 176);
          *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
          *(_QWORD *)(a1 + 176) = v47;
          *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
          *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
          *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
          v48 = *(_QWORD *)(a2 + 216);
          *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
          *(_QWORD *)(a1 + 216) = v48;
          v742 = *(void **)(a2 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((unint64_t)v742 >= 0x11)
          {
            *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
            *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
          }
          goto LABEL_412;
        default:
          memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
          goto LABEL_413;
      }
    }
    switch(v6)
    {
      case 0:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v7 = *(_QWORD *)(a2 + 24);
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        *(_QWORD *)(a1 + 24) = v7;
        v8 = *(_QWORD *)(a2 + 48);
        swift_bridgeObjectRetain();
        if (v8 >= 0x11)
        {
          *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        }
        goto LABEL_275;
      case 1:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v49 = *(_QWORD *)(a2 + 24);
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        *(_QWORD *)(a1 + 24) = v49;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        v50 = *(_QWORD *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v50 >= 0x11)
        {
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        }
        goto LABEL_275;
      case 2:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v11 = (int *)type metadata accessor for FeedBannerAd();
        v12 = v11[5];
        v13 = a1 + v12;
        v14 = a2 + v12;
        v15 = sub_1BB8721C0();
        v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        *(_QWORD *)(a1 + v11[6]) = *(_QWORD *)(a2 + v11[6]);
        v17 = v11[7];
        v18 = a1 + v17;
        v19 = a2 + v17;
        v20 = *(_BYTE *)(v19 + 8);
        *(_QWORD *)v18 = *(_QWORD *)v19;
        *(_BYTE *)(v18 + 8) = v20;
        v21 = v11[8];
        v22 = a1 + v21;
        v23 = a2 + v21;
        if (*(_QWORD *)(v23 + 8) >= 0x11uLL)
          goto LABEL_75;
        *(_OWORD *)v22 = *(_OWORD *)v23;
        goto LABEL_275;
      case 3:
        v761 = v5;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v51 = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = v51;
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
        v752 = (int *)type metadata accessor for FeedHeadline(0);
        v52 = v752[10];
        v53 = (_BYTE *)(a1 + v52);
        v54 = a2 + v52;
        *v53 = *(_BYTE *)(a2 + v52);
        v53[1] = *(_BYTE *)(a2 + v52 + 1);
        v55 = (int *)type metadata accessor for FeedHeadline.State(0);
        v56 = v55[6];
        __dst = &v53[v56];
        v57 = (char *)(v54 + v56);
        v58 = (int *)type metadata accessor for SharedItem();
        v723 = (_QWORD *)*((_QWORD *)v58 - 1);
        v59 = (unsigned int (*)(char *, uint64_t, int *))v723[6];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v59(v57, 1, v58))
        {
          v60 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          v264 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 16))(__dst, v57, v264);
          __dst[v58[5]] = v57[v58[5]];
          v265 = v58[6];
          v266 = *(void **)&v57[v265];
          *(_QWORD *)&__dst[v265] = v266;
          v267 = v58[7];
          v747 = &__dst[v267];
          v719 = &v57[v267];
          v268 = sub_1BB86C67C();
          v269 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v268 - 8) + 16);
          v270 = v266;
          v269(v747, v719, v268);
          ((void (*)(char *, _QWORD, uint64_t, int *))v723[7])(__dst, 0, 1, v58);
        }
        v53[v55[7]] = *(_BYTE *)(v54 + v55[7]);
        v53[v55[8]] = *(_BYTE *)(v54 + v55[8]);
        v53[v55[9]] = *(_BYTE *)(v54 + v55[9]);
        v53[v55[10]] = *(_BYTE *)(v54 + v55[10]);
        v271 = v752[11];
        v272 = (void *)(a1 + v271);
        v273 = (const void *)(a2 + v271);
        v274 = sub_1BB871B24();
        v275 = *(_QWORD *)(v274 - 8);
        v5 = v761;
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v275 + 48))(v273, 1, v274))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v275 + 16))(v272, v273, v274);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v275 + 56))(v272, 0, 1, v274);
        }
        v302 = v752[12];
        v303 = (_QWORD *)(a1 + v302);
        v304 = (_QWORD *)(a2 + v302);
        if (v304[1] >= 0x11uLL)
        {
          *v303 = *v304;
          v303[1] = v304[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v303 = *(_OWORD *)v304;
        }
        v305 = v752[13];
        v306 = *(_QWORD *)(a2 + v305);
        if (v306 >= 2)
        {
          if (v306 == 2)
          {
            *(_QWORD *)(a1 + v305) = 2;
          }
          else
          {
            *(_QWORD *)(a1 + v305) = v306;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)(a1 + v305) = v306;
        }
        v342 = v752[14];
        v343 = *(void **)(a2 + v342);
        *(_QWORD *)(a1 + v342) = v343;
        v344 = v343;
        goto LABEL_275;
      case 4:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v24 = *(_QWORD *)(a2 + 8);
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        *(_QWORD *)(a1 + 8) = v24;
        if (*(_QWORD *)(a2 + 32) >= 0x11uLL)
        {
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        v162 = (int *)type metadata accessor for FeedWebEmbed();
        v163 = v162[8];
        v164 = a1 + v163;
        v165 = a2 + v163;
        v166 = sub_1BB86C67C();
        v167 = *(_QWORD *)(v166 - 8);
        v168 = *(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 16);
        swift_bridgeObjectRetain();
        v169 = v165;
        v170 = v162;
        v168(v164, v169, v166);
        v171 = v162[9];
        v172 = (void *)(a1 + v171);
        v173 = (const void *)(a2 + v171);
        v762 = v5;
        v745 = (void (*)(char *, char *, uint64_t))v168;
        v756 = v166;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(a2 + v171, 1, v166))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
        }
        else
        {
          v168((uint64_t)v172, (uint64_t)v173, v166);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v172, 0, 1, v166);
        }
        *(_QWORD *)(a1 + v162[10]) = *(_QWORD *)(a2 + v162[10]);
        *(_QWORD *)(a1 + v162[11]) = *(_QWORD *)(a2 + v162[11]);
        v216 = v162[12];
        v217 = (_QWORD *)(a1 + v216);
        v218 = (_QWORD *)(a2 + v216);
        v219 = type metadata accessor for FeedHeadline(0);
        v220 = *(_QWORD *)(v219 - 8);
        v221 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v220 + 48);
        swift_retain();
        swift_retain();
        if (v221(v218, 1, v219))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
          v5 = v762;
        }
        else
        {
          v717 = v220;
          v725 = (int *)v219;
          __dstc = v170;
          *v217 = *v218;
          v217[1] = v218[1];
          v240 = v218[2];
          *((_BYTE *)v217 + 24) = *((_BYTE *)v218 + 24);
          v217[2] = v240;
          v217[4] = v218[4];
          v217[5] = v218[5];
          v217[6] = v218[6];
          *((_BYTE *)v217 + 56) = *((_BYTE *)v218 + 56);
          v241 = *(int *)(v219 + 40);
          v242 = (char *)v217 + v241;
          v713 = v218;
          v243 = (char *)v218 + v241;
          *v242 = *((_BYTE *)v218 + v241);
          v242[1] = *((_BYTE *)v218 + v241 + 1);
          v244 = (int *)type metadata accessor for FeedHeadline.State(0);
          v245 = v244[6];
          v710 = &v242[v245];
          v246 = &v243[v245];
          v247 = (int *)type metadata accessor for SharedItem();
          v707 = *((_QWORD *)v247 - 1);
          v248 = *(unsigned int (**)(char *, uint64_t, int *))(v707 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v248(v246, 1, v247))
          {
            v249 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v710, v246, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
          }
          else
          {
            v382 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v382 - 8) + 16))(v710, v246, v382);
            v710[v247[5]] = v246[v247[5]];
            v383 = v247[6];
            v384 = *(void **)&v246[v383];
            *(_QWORD *)&v710[v383] = v384;
            v385 = v247[7];
            v386 = &v710[v385];
            v387 = &v246[v385];
            v388 = v384;
            v745(v386, v387, v756);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v707 + 56))(v710, 0, 1, v247);
          }
          v242[v244[7]] = v243[v244[7]];
          v242[v244[8]] = v243[v244[8]];
          v242[v244[9]] = v243[v244[9]];
          v242[v244[10]] = v243[v244[10]];
          v389 = v725[11];
          v390 = (char *)v217 + v389;
          v391 = (char *)v713 + v389;
          v392 = sub_1BB871B24();
          v393 = *(_QWORD *)(v392 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v393 + 48))(v391, 1, v392))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v390, v391, *(_QWORD *)(*(_QWORD *)(v394 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v393 + 16))(v390, v391, v392);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v393 + 56))(v390, 0, 1, v392);
          }
          v5 = v762;
          v170 = __dstc;
          v408 = v725[12];
          v409 = (_QWORD *)((char *)v217 + v408);
          v410 = (_QWORD *)((char *)v713 + v408);
          if (v410[1] >= 0x11uLL)
          {
            *v409 = *v410;
            v409[1] = v410[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v409 = *(_OWORD *)v410;
          }
          v411 = v725[13];
          v412 = *(_QWORD *)((char *)v713 + v411);
          if (v412 >= 2)
          {
            if (v412 == 2)
            {
              *(_QWORD *)((char *)v217 + v411) = 2;
            }
            else
            {
              *(_QWORD *)((char *)v217 + v411) = v412;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)((char *)v217 + v411) = v412;
          }
          v434 = v725[14];
          v435 = *(void **)((char *)v713 + v434);
          *(_QWORD *)((char *)v217 + v434) = v435;
          v436 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v717 + 56);
          v437 = v435;
          v436(v217, 0, 1, v725);
        }
        v438 = v170;
        v439 = v170[13];
        v440 = (_QWORD *)(a1 + v439);
        v441 = (_QWORD *)(a2 + v439);
        v442 = type metadata accessor for WebEmbedDataVisualization();
        v443 = *(_QWORD *)(v442 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v443 + 48))(v441, 1, v442))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v440, v441, *(_QWORD *)(*(_QWORD *)(v444 - 8) + 64));
        }
        else
        {
          v445 = swift_getEnumCaseMultiPayload();
          *v440 = *v441;
          if (v445 == 1)
          {
            v440[1] = v441[1];
            v446 = type metadata accessor for GenericDataVisualization();
            v447 = *(int *)(v446 + 20);
            __dstg = (char *)v440 + v447;
            v448 = (char *)v441 + v447;
            swift_bridgeObjectRetain();
            v449 = v448;
            v5 = v762;
            v745(__dstg, v449, v756);
            *(_QWORD *)((char *)v440 + *(int *)(v446 + 24)) = *(_QWORD *)((char *)v441 + *(int *)(v446 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v443 + 56))(v440, 0, 1, v442);
        }
        *(_BYTE *)(a1 + v438[14]) = *(_BYTE *)(a2 + v438[14]);
        goto LABEL_275;
      case 5:
        v61 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
        v62 = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = v62;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        v63 = *(void **)(a2 + 56);
        *(_QWORD *)(a1 + 56) = v63;
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        v64 = *(_QWORD *)(a2 + 80);
        v65 = v61;
        swift_bridgeObjectRetain();
        v66 = v63;
        if (v64 == 1)
        {
          v67 = *(_OWORD *)(a2 + 72);
          v68 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v68;
          *(_OWORD *)(a1 + 72) = v67;
        }
        else
        {
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
          v188 = *(void **)(a2 + 104);
          *(_QWORD *)(a1 + 104) = v188;
          *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v189 = v188;
        }
        if (*(_QWORD *)(a2 + 128) >= 0x11uLL)
        {
          *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
          *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        }
        *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
        goto LABEL_275;
      case 6:
        v69 = *(unsigned __int8 *)(a2 + 281);
        if (v69 == 2)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
          v316 = *(_QWORD *)(a2 + 32);
          *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
          *(_QWORD *)(a1 + 32) = v316;
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          v317 = *(_QWORD *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v317 == 1)
          {
            *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
            v318 = *(_OWORD *)(a2 + 96);
            v319 = *(_OWORD *)(a2 + 112);
            v320 = *(_OWORD *)(a2 + 128);
            *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
            *(_OWORD *)(a1 + 112) = v319;
            *(_OWORD *)(a1 + 128) = v320;
            *(_OWORD *)(a1 + 96) = v318;
          }
          else
          {
            *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
            *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
            v358 = *(_QWORD *)(a2 + 120);
            swift_bridgeObjectRetain();
            if (v358)
            {
              *(_QWORD *)(a1 + 120) = v358;
              *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v358 - 8))(a1 + 96, a2 + 96, v358);
              v359 = *(_BYTE *)(a2 + 144);
              *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
              *(_BYTE *)(a1 + 144) = v359;
            }
            else
            {
              v465 = *(_OWORD *)(a2 + 96);
              v466 = *(_OWORD *)(a2 + 112);
              v467 = *(_OWORD *)(a2 + 128);
              *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
              *(_OWORD *)(a1 + 112) = v466;
              *(_OWORD *)(a1 + 128) = v467;
              *(_OWORD *)(a1 + 96) = v465;
            }
          }
        }
        else if (v69 == 1)
        {
          v70 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
          *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
          v71 = *(_QWORD *)(a2 + 32);
          *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
          *(_QWORD *)(a1 + 32) = v71;
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          v72 = *(void **)(a2 + 56);
          *(_QWORD *)(a1 + 56) = v72;
          *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
          v73 = *(_QWORD *)(a2 + 80);
          v74 = v70;
          swift_bridgeObjectRetain();
          v75 = v72;
          if (v73 == 1)
          {
            v76 = *(_OWORD *)(a2 + 72);
            v77 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v77;
            *(_OWORD *)(a1 + 72) = v76;
          }
          else
          {
            *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
            *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
            *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
            *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
            v354 = *(void **)(a2 + 104);
            *(_QWORD *)(a1 + 104) = v354;
            *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v355 = v354;
          }
          if (*(_QWORD *)(a2 + 128) >= 0x11uLL)
          {
            *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
            *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
          v366 = *(void **)(a2 + 144);
          if (v366)
          {
            *(_QWORD *)(a1 + 144) = v366;
            *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
            *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
            *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
            *(_BYTE *)(a1 + 169) = *(_BYTE *)(a2 + 169);
            v367 = *(_QWORD *)(a2 + 176);
            *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
            *(_QWORD *)(a1 + 176) = v367;
            *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
            v368 = *(void **)(a2 + 200);
            *(_QWORD *)(a1 + 200) = v368;
            *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
            v369 = *(_QWORD *)(a2 + 224);
            v370 = v366;
            swift_bridgeObjectRetain();
            v371 = v368;
            if (v369 == 1)
            {
              v372 = *(_OWORD *)(a2 + 216);
              v373 = *(_OWORD *)(a2 + 248);
              *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
              *(_OWORD *)(a1 + 248) = v373;
              *(_OWORD *)(a1 + 216) = v372;
            }
            else
            {
              *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
              *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
              *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
              *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
              v430 = *(void **)(a2 + 248);
              *(_QWORD *)(a1 + 248) = v430;
              *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v431 = v430;
            }
            if (*(_QWORD *)(a2 + 272) >= 0x11uLL)
            {
              *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
              *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
            }
            *(_BYTE *)(a1 + 280) = *(_BYTE *)(a2 + 280);
          }
          else
          {
            *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
            v418 = *(_OWORD *)(a2 + 160);
            v419 = *(_OWORD *)(a2 + 176);
            v420 = *(_OWORD *)(a2 + 208);
            *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
            *(_OWORD *)(a1 + 208) = v420;
            *(_OWORD *)(a1 + 160) = v418;
            *(_OWORD *)(a1 + 176) = v419;
            v421 = *(_OWORD *)(a2 + 224);
            v422 = *(_OWORD *)(a2 + 240);
            v423 = *(_OWORD *)(a2 + 256);
            *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
            *(_OWORD *)(a1 + 240) = v422;
            *(_OWORD *)(a1 + 256) = v423;
            *(_OWORD *)(a1 + 224) = v421;
          }
        }
        else
        {
          v321 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
          *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
          v322 = *(_QWORD *)(a2 + 32);
          *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
          *(_QWORD *)(a1 + 32) = v322;
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          v323 = *(void **)(a2 + 56);
          *(_QWORD *)(a1 + 56) = v323;
          *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
          v324 = *(_QWORD *)(a2 + 80);
          v325 = v321;
          swift_bridgeObjectRetain();
          v326 = v323;
          if (v324 == 1)
          {
            v327 = *(_OWORD *)(a2 + 72);
            v328 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v328;
            *(_OWORD *)(a1 + 72) = v327;
          }
          else
          {
            *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
            *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
            *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
            *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
            v360 = *(void **)(a2 + 104);
            *(_QWORD *)(a1 + 104) = v360;
            *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v361 = v360;
          }
          if (*(_QWORD *)(a2 + 128) >= 0x11uLL)
          {
            *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
            *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
        }
        *(_BYTE *)(a1 + 281) = v69;
        goto LABEL_275;
      case 7:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        v78 = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = v78;
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        v79 = *(_QWORD *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v79 == 1)
        {
          *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
          v80 = *(_OWORD *)(a2 + 96);
          v81 = *(_OWORD *)(a2 + 112);
          v82 = *(_OWORD *)(a2 + 128);
          *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
          *(_OWORD *)(a1 + 112) = v81;
          *(_OWORD *)(a1 + 128) = v82;
          *(_OWORD *)(a1 + 96) = v80;
        }
        else
        {
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          v190 = *(_QWORD *)(a2 + 120);
          swift_bridgeObjectRetain();
          if (v190)
          {
            *(_QWORD *)(a1 + 120) = v190;
            *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v190 - 8))(a1 + 96, a2 + 96, v190);
            v191 = *(_BYTE *)(a2 + 144);
            *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
            *(_BYTE *)(a1 + 144) = v191;
          }
          else
          {
            v348 = *(_OWORD *)(a2 + 96);
            v349 = *(_OWORD *)(a2 + 112);
            v350 = *(_OWORD *)(a2 + 128);
            *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
            *(_OWORD *)(a1 + 112) = v349;
            *(_OWORD *)(a1 + 128) = v350;
            *(_OWORD *)(a1 + 96) = v348;
          }
        }
        goto LABEL_275;
      case 8:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v83 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v84 = (_QWORD *)(a1 + v83);
        v85 = a2 + v83;
        *v84 = *(_QWORD *)(a2 + v83);
        v84[1] = *(_QWORD *)(a2 + v83 + 8);
        v84[2] = *(_QWORD *)(a2 + v83 + 16);
        v84[3] = *(_QWORD *)(a2 + v83 + 24);
        v86 = type metadata accessor for FormatCustomItem.Resolved();
        v87 = *(int *)(v86 + 24);
        v743 = (char *)v84 + v87;
        v753 = v86;
        v88 = (const void *)(v85 + v87);
        v89 = type metadata accessor for FormatCustomItem.Action();
        __dsta = *(_QWORD **)(v89 - 8);
        v90 = (unsigned int (*)(const void *, uint64_t, uint64_t))__dsta[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v90(v88, 1, v89))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v743, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          v277 = sub_1BB86C67C();
          (*(void (**)(char *, const void *, uint64_t))(*(_QWORD *)(v277 - 8) + 16))(v743, v88, v277);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v743, 0, 1, v89);
        }
        *(_QWORD *)((char *)v84 + *(int *)(v753 + 28)) = *(_QWORD *)(v85 + *(int *)(v753 + 28));
        swift_bridgeObjectRetain();
        goto LABEL_275;
      case 9:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        v25 = *(_QWORD *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25)
        {
          *(_QWORD *)(a1 + 56) = v25;
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8))(a1 + 32, a2 + 32, v25);
        }
        else
        {
          v206 = *(_OWORD *)(a2 + 32);
          v207 = *(_OWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_OWORD *)(a1 + 32) = v206;
          *(_OWORD *)(a1 + 48) = v207;
        }
        v208 = (_OWORD *)(a1 + 72);
        v209 = (__int128 *)(a2 + 72);
        v210 = *(_QWORD *)(a2 + 96);
        if (v210)
        {
          *(_QWORD *)(a1 + 96) = v210;
          *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
          (**(void (***)(_OWORD *, __int128 *))(v210 - 8))(v208, v209);
        }
        else
        {
          v230 = *v209;
          v231 = *(_OWORD *)(a2 + 88);
          *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
          *v208 = v230;
          *(_OWORD *)(a1 + 88) = v231;
        }
        v232 = (_OWORD *)(a1 + 112);
        v233 = (__int128 *)(a2 + 112);
        v234 = *(_QWORD *)(a2 + 136);
        if (v234)
        {
          *(_QWORD *)(a1 + 136) = v234;
          *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
          (**(void (***)(_OWORD *, __int128 *))(v234 - 8))(v232, v233);
        }
        else
        {
          v260 = *v233;
          v261 = *(_OWORD *)(a2 + 128);
          *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
          *v232 = v260;
          *(_OWORD *)(a1 + 128) = v261;
        }
        goto LABEL_275;
      case 10:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        v92 = (int *)type metadata accessor for FeedEngagementBanner();
        v93 = v92[5];
        v94 = a1 + v93;
        v95 = a2 + v93;
        v96 = sub_1BB86EDAC();
        v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
        swift_bridgeObjectRetain();
        v97(v94, v95, v96);
        *(_QWORD *)(a1 + v92[6]) = *(_QWORD *)(a2 + v92[6]);
        v98 = v92[7];
        v99 = a1 + v98;
        v100 = a2 + v98;
        v101 = *(_BYTE *)(v100 + 8);
        *(_QWORD *)v99 = *(_QWORD *)v100;
        *(_BYTE *)(v99 + 8) = v101;
        v102 = v92[8];
        v22 = a1 + v102;
        v23 = a2 + v102;
        if (*(_QWORD *)(v23 + 8) >= 0x11uLL)
        {
LABEL_75:
          *(_QWORD *)v22 = *(_QWORD *)v23;
          *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v22 = *(_OWORD *)v23;
        }
        goto LABEL_275;
      case 11:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_retain();
        goto LABEL_275;
      case 12:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        v26 = *(_QWORD *)(a2 + 24);
        *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
        *(_QWORD *)(a1 + 24) = v26;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_275;
      case 13:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v103 = *(_QWORD *)(a2 + 8);
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        *(_QWORD *)(a1 + 8) = v103;
        if (*(_QWORD *)(a2 + 32) >= 0x11uLL)
        {
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        v192 = *(void **)(a2 + 64);
        *(_QWORD *)(a1 + 64) = v192;
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        v193 = *(_QWORD *)(a2 + 112);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v194 = v192;
        swift_bridgeObjectRetain();
        if (v193)
        {
          *(_QWORD *)(a1 + 112) = v193;
          *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v193 - 8))(a1 + 88, a2 + 88, v193);
        }
        else
        {
          v292 = *(_OWORD *)(a2 + 88);
          v293 = *(_OWORD *)(a2 + 104);
          *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
          *(_OWORD *)(a1 + 88) = v292;
          *(_OWORD *)(a1 + 104) = v293;
        }
        v294 = (_OWORD *)(a1 + 128);
        v295 = (__int128 *)(a2 + 128);
        v296 = *(_QWORD *)(a2 + 152);
        if (v296)
        {
          *(_QWORD *)(a1 + 152) = v296;
          *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
          (**(void (***)(_OWORD *, __int128 *))(v296 - 8))(v294, v295);
        }
        else
        {
          v312 = *v295;
          v313 = *(_OWORD *)(a2 + 144);
          *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
          *v294 = v312;
          *(_OWORD *)(a1 + 144) = v313;
        }
        goto LABEL_275;
      case 14:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v27 = *(_QWORD *)(a2 + 8);
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        *(_QWORD *)(a1 + 8) = v27;
        if (*(_QWORD *)(a2 + 32) >= 0x11uLL)
        {
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_275;
      case 15:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v104 = *(_QWORD *)(a2 + 8);
        *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
        *(_QWORD *)(a1 + 8) = v104;
        if (*(_QWORD *)(a2 + 32) >= 0x11uLL)
        {
          *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        v195 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)(a1 + v195) = *(_QWORD *)(a2 + v195);
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v196 = (char *)&loc_1BB302BD8 + 4 * word_1BB907FFE[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 16:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
        *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
        v28 = *(_QWORD *)(a2 + 176);
        *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
        *(_QWORD *)(a1 + 176) = v28;
        *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
        *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
        *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
        v29 = *(_QWORD *)(a2 + 216);
        *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
        *(_QWORD *)(a1 + 216) = v29;
        v741 = *(void **)(a2 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((unint64_t)v741 >= 0x11)
        {
          *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
          *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
        }
LABEL_275:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        break;
    }
    sub_1BAB4832C();
    v472 = *(int *)(v471 + 48);
    v473 = (char *)(a1 + v472);
    v474 = (char *)(a2 + v472);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
        v475 = *((_QWORD *)v474 + 3);
        v473[32] = v474[32];
        *((_QWORD *)v473 + 3) = v475;
        v476 = *((_QWORD *)v474 + 6);
        swift_bridgeObjectRetain();
        if (v476 >= 0x11)
        {
          *((_QWORD *)v473 + 5) = *((_QWORD *)v474 + 5);
          *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v473 + 40) = *(_OWORD *)(v474 + 40);
        }
        break;
      case 1u:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
        v494 = *((_QWORD *)v474 + 3);
        v473[32] = v474[32];
        *((_QWORD *)v473 + 3) = v494;
        *((_QWORD *)v473 + 5) = *((_QWORD *)v474 + 5);
        *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
        *((_QWORD *)v473 + 7) = *((_QWORD *)v474 + 7);
        *((_QWORD *)v473 + 8) = *((_QWORD *)v474 + 8);
        v495 = *((_QWORD *)v474 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v495 >= 0x11)
        {
          *((_QWORD *)v473 + 9) = *((_QWORD *)v474 + 9);
          *((_QWORD *)v473 + 10) = *((_QWORD *)v474 + 10);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v473 + 72) = *(_OWORD *)(v474 + 72);
        }
        break;
      case 2u:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        v477 = (int *)type metadata accessor for FeedBannerAd();
        v478 = v477[5];
        v479 = &v473[v478];
        v480 = &v474[v478];
        v481 = sub_1BB8721C0();
        v482 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v481 - 8) + 16);
        swift_bridgeObjectRetain();
        v482(v479, v480, v481);
        *(_QWORD *)&v473[v477[6]] = *(_QWORD *)&v474[v477[6]];
        v483 = v477[7];
        v484 = &v473[v483];
        v485 = &v474[v483];
        v486 = v485[8];
        *(_QWORD *)v484 = *(_QWORD *)v485;
        v484[8] = v486;
        v487 = v477[8];
        v41 = &v473[v487];
        v42 = &v474[v487];
        if (*((_QWORD *)v42 + 1) >= 0x11uLL)
          goto LABEL_109;
        *(_OWORD *)v41 = *(_OWORD *)v42;
        break;
      case 3u:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        v496 = *((_QWORD *)v474 + 2);
        v473[24] = v474[24];
        *((_QWORD *)v473 + 2) = v496;
        *((_QWORD *)v473 + 4) = *((_QWORD *)v474 + 4);
        *((_QWORD *)v473 + 5) = *((_QWORD *)v474 + 5);
        *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
        v473[56] = v474[56];
        v758 = (int *)type metadata accessor for FeedHeadline(0);
        v497 = v758[10];
        v498 = &v473[v497];
        v499 = &v474[v497];
        *v498 = v474[v497];
        v498[1] = v474[v497 + 1];
        v500 = (int *)type metadata accessor for FeedHeadline.State(0);
        v501 = v500[6];
        v727 = &v498[v501];
        v502 = &v499[v501];
        v503 = (int *)type metadata accessor for SharedItem();
        v721 = *((_QWORD *)v503 - 1);
        v504 = *(unsigned int (**)(char *, uint64_t, int *))(v721 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v504(v502, 1, v503))
        {
          v505 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v727, v502, *(_QWORD *)(*(_QWORD *)(v505 - 8) + 64));
        }
        else
        {
          v602 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v602 - 8) + 16))(v727, v502, v602);
          v727[v503[5]] = v502[v503[5]];
          v603 = v503[6];
          v716 = *(void **)&v502[v603];
          *(_QWORD *)&v727[v603] = v716;
          v604 = v503[7];
          __dstj = &v502[v604];
          v751 = &v727[v604];
          v605 = sub_1BB86C67C();
          v606 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v605 - 8) + 16);
          v607 = v716;
          v606(v751, __dstj, v605);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v721 + 56))(v727, 0, 1, v503);
        }
        v498[v500[7]] = v499[v500[7]];
        v498[v500[8]] = v499[v500[8]];
        v498[v500[9]] = v499[v500[9]];
        v498[v500[10]] = v499[v500[10]];
        v608 = v758[11];
        v609 = &v473[v608];
        v610 = &v474[v608];
        v611 = sub_1BB871B24();
        v612 = *(_QWORD *)(v611 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v612 + 48))(v610, 1, v611))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v609, v610, *(_QWORD *)(*(_QWORD *)(v613 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v612 + 16))(v609, v610, v611);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v612 + 56))(v609, 0, 1, v611);
        }
        v620 = v758[12];
        v621 = &v473[v620];
        v622 = &v474[v620];
        if (*((_QWORD *)v622 + 1) >= 0x11uLL)
        {
          *(_QWORD *)v621 = *(_QWORD *)v622;
          *((_QWORD *)v621 + 1) = *((_QWORD *)v622 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v621 = *(_OWORD *)v622;
        }
        v623 = v758[13];
        v624 = *(_QWORD *)&v474[v623];
        if (v624 >= 2)
        {
          if (v624 == 2)
          {
            *(_QWORD *)&v473[v623] = 2;
          }
          else
          {
            *(_QWORD *)&v473[v623] = v624;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&v473[v623] = v624;
        }
        v640 = v758[14];
        v641 = *(void **)&v474[v640];
        *(_QWORD *)&v473[v640] = v641;
        v642 = v641;
        break;
      case 4u:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        v488 = *((_QWORD *)v474 + 1);
        v473[16] = v474[16];
        *((_QWORD *)v473 + 1) = v488;
        if (*((_QWORD *)v474 + 4) >= 0x11uLL)
        {
          *((_QWORD *)v473 + 3) = *((_QWORD *)v474 + 3);
          *((_QWORD *)v473 + 4) = *((_QWORD *)v474 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v473 + 24) = *(_OWORD *)(v474 + 24);
        }
        *((_QWORD *)v473 + 5) = *((_QWORD *)v474 + 5);
        *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
        v550 = (int *)type metadata accessor for FeedWebEmbed();
        v551 = v550[8];
        v552 = &v473[v551];
        v553 = &v474[v551];
        v554 = sub_1BB86C67C();
        v555 = *(_QWORD *)(v554 - 8);
        v556 = *(void (**)(char *, char *, uint64_t))(v555 + 16);
        swift_bridgeObjectRetain();
        v556(v552, v553, v554);
        v557 = v550[9];
        v558 = &v473[v557];
        v559 = &v474[v557];
        __dstf = (void (*)(char *, char *, void *))v556;
        v750 = (void *)v554;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v555 + 48))(&v474[v557], 1, v554))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v558, v559, *(_QWORD *)(*(_QWORD *)(v560 - 8) + 64));
        }
        else
        {
          v556(v558, v559, v554);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v555 + 56))(v558, 0, 1, v554);
        }
        *(_QWORD *)&v473[v550[10]] = *(_QWORD *)&v474[v550[10]];
        *(_QWORD *)&v473[v550[11]] = *(_QWORD *)&v474[v550[11]];
        v575 = v550[12];
        v576 = &v473[v575];
        v760 = v550;
        v577 = &v474[v575];
        v578 = type metadata accessor for FeedHeadline(0);
        v579 = *(_QWORD *)(v578 - 8);
        v580 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v579 + 48);
        swift_retain();
        swift_retain();
        if (v580(v577, 1, v578))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v576, v577, *(_QWORD *)(*(_QWORD *)(v581 - 8) + 64));
          v582 = v760;
        }
        else
        {
          v715 = v579;
          v722 = (int *)v578;
          *(_QWORD *)v576 = *(_QWORD *)v577;
          *((_QWORD *)v576 + 1) = *((_QWORD *)v577 + 1);
          v588 = *((_QWORD *)v577 + 2);
          v576[24] = v577[24];
          *((_QWORD *)v576 + 2) = v588;
          *((_QWORD *)v576 + 4) = *((_QWORD *)v577 + 4);
          *((_QWORD *)v576 + 5) = *((_QWORD *)v577 + 5);
          *((_QWORD *)v576 + 6) = *((_QWORD *)v577 + 6);
          v576[56] = v577[56];
          v589 = *(int *)(v578 + 40);
          v728 = v576;
          v590 = &v576[v589];
          v591 = &v577[v589];
          *v590 = v577[v589];
          v590[1] = v577[v589 + 1];
          v592 = (int *)type metadata accessor for FeedHeadline.State(0);
          v593 = v592[6];
          v712 = &v590[v593];
          v594 = &v591[v593];
          v595 = (int *)type metadata accessor for SharedItem();
          v706 = *((_QWORD *)v595 - 1);
          v596 = *(uint64_t (**)(char *, uint64_t, int *))(v706 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          v597 = v596(v594, 1, v595);
          v598 = v577;
          if (v597)
          {
            v599 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v712, v594, *(_QWORD *)(*(_QWORD *)(v599 - 8) + 64));
          }
          else
          {
            v660 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v660 - 8) + 16))(v712, v594, v660);
            v712[v595[5]] = v594[v595[5]];
            v661 = v595[6];
            v662 = *(void **)&v594[v661];
            *(_QWORD *)&v712[v661] = v662;
            v663 = v595[7];
            v664 = v594;
            v665 = &v712[v663];
            v709 = v592;
            v666 = &v664[v663];
            v667 = v662;
            v668 = v666;
            v592 = v709;
            __dstf(v665, v668, v750);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v706 + 56))(v712, 0, 1, v595);
          }
          v590[v592[7]] = v591[v592[7]];
          v590[v592[8]] = v591[v592[8]];
          v590[v592[9]] = v591[v592[9]];
          v590[v592[10]] = v591[v592[10]];
          v669 = v722[11];
          v670 = &v728[v669];
          v671 = &v577[v669];
          v672 = sub_1BB871B24();
          v673 = *(_QWORD *)(v672 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v673 + 48))(v671, 1, v672))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v670, v671, *(_QWORD *)(*(_QWORD *)(v674 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v673 + 16))(v670, v671, v672);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v673 + 56))(v670, 0, 1, v672);
          }
          v582 = v760;
          v675 = v722[12];
          v676 = &v728[v675];
          v677 = (_QWORD *)((char *)v598 + v675);
          if (v677[1] >= 0x11uLL)
          {
            *(_QWORD *)v676 = *v677;
            *((_QWORD *)v676 + 1) = v677[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v676 = *(_OWORD *)v677;
          }
          v678 = v722[13];
          v679 = *(_QWORD *)((char *)v598 + v678);
          if (v679 >= 2)
          {
            if (v679 == 2)
            {
              *(_QWORD *)&v728[v678] = 2;
            }
            else
            {
              *(_QWORD *)&v728[v678] = v679;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)&v728[v678] = v679;
          }
          v688 = v722[14];
          v689 = *(void **)((char *)v598 + v688);
          *(_QWORD *)&v728[v688] = v689;
          v690 = *(void (**)(char *, _QWORD, uint64_t, int *))(v715 + 56);
          v691 = v689;
          v690(v728, 0, 1, v722);
        }
        v692 = v582[13];
        v693 = &v473[v692];
        v694 = &v474[v692];
        v695 = type metadata accessor for WebEmbedDataVisualization();
        v696 = *(_QWORD *)(v695 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v696 + 48))(v694, 1, v695))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v693, v694, *(_QWORD *)(*(_QWORD *)(v697 - 8) + 64));
        }
        else
        {
          v698 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v693 = *(_QWORD *)v694;
          if (v698 == 1)
          {
            *((_QWORD *)v693 + 1) = *((_QWORD *)v694 + 1);
            v699 = type metadata accessor for GenericDataVisualization();
            v700 = *(int *)(v699 + 20);
            v729 = &v693[v700];
            v701 = &v694[v700];
            swift_bridgeObjectRetain();
            __dstf(v729, v701, v750);
            *(_QWORD *)&v693[*(int *)(v699 + 24)] = *(_QWORD *)&v694[*(int *)(v699 + 24)];
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v696 + 56))(v693, 0, 1, v695);
        }
        v473[v760[14]] = v474[v760[14]];
        break;
      case 5u:
        v506 = *(void **)v474;
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
        v473[24] = v474[24];
        v473[25] = v474[25];
        v507 = *((_QWORD *)v474 + 4);
        v473[40] = v474[40];
        *((_QWORD *)v473 + 4) = v507;
        *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
        v508 = (void *)*((_QWORD *)v474 + 7);
        *((_QWORD *)v473 + 7) = v508;
        v473[64] = v474[64];
        v509 = *((_QWORD *)v474 + 10);
        v510 = v506;
        swift_bridgeObjectRetain();
        v511 = v508;
        if (v509 == 1)
        {
          v512 = *(_OWORD *)(v474 + 72);
          v513 = *(_OWORD *)(v474 + 104);
          *(_OWORD *)(v473 + 88) = *(_OWORD *)(v474 + 88);
          *(_OWORD *)(v473 + 104) = v513;
          *(_OWORD *)(v473 + 72) = v512;
        }
        else
        {
          *((_QWORD *)v473 + 9) = *((_QWORD *)v474 + 9);
          *((_QWORD *)v473 + 10) = *((_QWORD *)v474 + 10);
          *((_QWORD *)v473 + 11) = *((_QWORD *)v474 + 11);
          *((_QWORD *)v473 + 12) = *((_QWORD *)v474 + 12);
          v561 = (void *)*((_QWORD *)v474 + 13);
          *((_QWORD *)v473 + 13) = v561;
          *((_QWORD *)v473 + 14) = *((_QWORD *)v474 + 14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v562 = v561;
        }
        if (*((_QWORD *)v474 + 16) >= 0x11uLL)
        {
          *((_QWORD *)v473 + 15) = *((_QWORD *)v474 + 15);
          *((_QWORD *)v473 + 16) = *((_QWORD *)v474 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v473 + 120) = *(_OWORD *)(v474 + 120);
        }
        v473[136] = v474[136];
        break;
      case 6u:
        v514 = v474[281];
        if (v514 == 2)
        {
          *(_QWORD *)v473 = *(_QWORD *)v474;
          *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
          *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
          v473[24] = v474[24];
          v627 = *((_QWORD *)v474 + 4);
          v473[40] = v474[40];
          *((_QWORD *)v473 + 4) = v627;
          *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
          *((_QWORD *)v473 + 7) = *((_QWORD *)v474 + 7);
          *((_QWORD *)v473 + 8) = *((_QWORD *)v474 + 8);
          *((_QWORD *)v473 + 9) = *((_QWORD *)v474 + 9);
          v628 = *((_QWORD *)v474 + 11);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v628 == 1)
          {
            *((_OWORD *)v473 + 5) = *((_OWORD *)v474 + 5);
            v629 = *((_OWORD *)v474 + 6);
            v630 = *((_OWORD *)v474 + 7);
            v631 = *((_OWORD *)v474 + 8);
            v473[144] = v474[144];
            *((_OWORD *)v473 + 7) = v630;
            *((_OWORD *)v473 + 8) = v631;
            *((_OWORD *)v473 + 6) = v629;
          }
          else
          {
            *((_QWORD *)v473 + 10) = *((_QWORD *)v474 + 10);
            *((_QWORD *)v473 + 11) = *((_QWORD *)v474 + 11);
            v648 = *((_QWORD *)v474 + 15);
            swift_bridgeObjectRetain();
            if (v648)
            {
              *((_QWORD *)v473 + 15) = v648;
              *((_QWORD *)v473 + 16) = *((_QWORD *)v474 + 16);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v648 - 8))((uint64_t)(v473 + 96), (uint64_t)(v474 + 96), v648);
              v649 = v474[144];
              *((_QWORD *)v473 + 17) = *((_QWORD *)v474 + 17);
              v473[144] = v649;
            }
            else
            {
              v702 = *((_OWORD *)v474 + 6);
              v703 = *((_OWORD *)v474 + 7);
              v704 = *((_OWORD *)v474 + 8);
              v473[144] = v474[144];
              *((_OWORD *)v473 + 7) = v703;
              *((_OWORD *)v473 + 8) = v704;
              *((_OWORD *)v473 + 6) = v702;
            }
          }
        }
        else if (v514 == 1)
        {
          v515 = *(void **)v474;
          *(_QWORD *)v473 = *(_QWORD *)v474;
          *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
          *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
          v473[24] = v474[24];
          v473[25] = v474[25];
          v516 = *((_QWORD *)v474 + 4);
          v473[40] = v474[40];
          *((_QWORD *)v473 + 4) = v516;
          *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
          v517 = (void *)*((_QWORD *)v474 + 7);
          *((_QWORD *)v473 + 7) = v517;
          v473[64] = v474[64];
          v518 = *((_QWORD *)v474 + 10);
          v519 = v515;
          swift_bridgeObjectRetain();
          v520 = v517;
          if (v518 == 1)
          {
            v521 = *(_OWORD *)(v474 + 72);
            v522 = *(_OWORD *)(v474 + 104);
            *(_OWORD *)(v473 + 88) = *(_OWORD *)(v474 + 88);
            *(_OWORD *)(v473 + 104) = v522;
            *(_OWORD *)(v473 + 72) = v521;
          }
          else
          {
            *((_QWORD *)v473 + 9) = *((_QWORD *)v474 + 9);
            *((_QWORD *)v473 + 10) = *((_QWORD *)v474 + 10);
            *((_QWORD *)v473 + 11) = *((_QWORD *)v474 + 11);
            *((_QWORD *)v473 + 12) = *((_QWORD *)v474 + 12);
            v646 = (void *)*((_QWORD *)v474 + 13);
            *((_QWORD *)v473 + 13) = v646;
            *((_QWORD *)v473 + 14) = *((_QWORD *)v474 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v647 = v646;
          }
          if (*((_QWORD *)v474 + 16) >= 0x11uLL)
          {
            *((_QWORD *)v473 + 15) = *((_QWORD *)v474 + 15);
            *((_QWORD *)v473 + 16) = *((_QWORD *)v474 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v473 + 120) = *(_OWORD *)(v474 + 120);
          }
          v473[136] = v474[136];
          v652 = (void *)*((_QWORD *)v474 + 18);
          if (v652)
          {
            *((_QWORD *)v473 + 18) = v652;
            *((_QWORD *)v473 + 19) = *((_QWORD *)v474 + 19);
            *((_QWORD *)v473 + 20) = *((_QWORD *)v474 + 20);
            v473[168] = v474[168];
            v473[169] = v474[169];
            v653 = *((_QWORD *)v474 + 22);
            v473[184] = v474[184];
            *((_QWORD *)v473 + 22) = v653;
            *((_QWORD *)v473 + 24) = *((_QWORD *)v474 + 24);
            v654 = (void *)*((_QWORD *)v474 + 25);
            *((_QWORD *)v473 + 25) = v654;
            v473[208] = v474[208];
            v655 = *((_QWORD *)v474 + 28);
            v656 = v652;
            swift_bridgeObjectRetain();
            v657 = v654;
            if (v655 == 1)
            {
              v658 = *(_OWORD *)(v474 + 216);
              v659 = *(_OWORD *)(v474 + 248);
              *(_OWORD *)(v473 + 232) = *(_OWORD *)(v474 + 232);
              *(_OWORD *)(v473 + 248) = v659;
              *(_OWORD *)(v473 + 216) = v658;
            }
            else
            {
              *((_QWORD *)v473 + 27) = *((_QWORD *)v474 + 27);
              *((_QWORD *)v473 + 28) = *((_QWORD *)v474 + 28);
              *((_QWORD *)v473 + 29) = *((_QWORD *)v474 + 29);
              *((_QWORD *)v473 + 30) = *((_QWORD *)v474 + 30);
              v686 = (void *)*((_QWORD *)v474 + 31);
              *((_QWORD *)v473 + 31) = v686;
              *((_QWORD *)v473 + 32) = *((_QWORD *)v474 + 32);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v687 = v686;
            }
            if (*((_QWORD *)v474 + 34) >= 0x11uLL)
            {
              *((_QWORD *)v473 + 33) = *((_QWORD *)v474 + 33);
              *((_QWORD *)v473 + 34) = *((_QWORD *)v474 + 34);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v473 + 264) = *(_OWORD *)(v474 + 264);
            }
            v473[280] = v474[280];
          }
          else
          {
            *((_OWORD *)v473 + 9) = *((_OWORD *)v474 + 9);
            v680 = *((_OWORD *)v474 + 10);
            v681 = *((_OWORD *)v474 + 11);
            v682 = *((_OWORD *)v474 + 13);
            *((_OWORD *)v473 + 12) = *((_OWORD *)v474 + 12);
            *((_OWORD *)v473 + 13) = v682;
            *((_OWORD *)v473 + 10) = v680;
            *((_OWORD *)v473 + 11) = v681;
            v683 = *((_OWORD *)v474 + 14);
            v684 = *((_OWORD *)v474 + 15);
            v685 = *((_OWORD *)v474 + 16);
            *(_OWORD *)(v473 + 265) = *(_OWORD *)(v474 + 265);
            *((_OWORD *)v473 + 15) = v684;
            *((_OWORD *)v473 + 16) = v685;
            *((_OWORD *)v473 + 14) = v683;
          }
        }
        else
        {
          v632 = *(void **)v474;
          *(_QWORD *)v473 = *(_QWORD *)v474;
          *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
          *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
          v473[24] = v474[24];
          v473[25] = v474[25];
          v633 = *((_QWORD *)v474 + 4);
          v473[40] = v474[40];
          *((_QWORD *)v473 + 4) = v633;
          *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
          v634 = (void *)*((_QWORD *)v474 + 7);
          *((_QWORD *)v473 + 7) = v634;
          v473[64] = v474[64];
          v635 = *((_QWORD *)v474 + 10);
          v636 = v632;
          swift_bridgeObjectRetain();
          v637 = v634;
          if (v635 == 1)
          {
            v638 = *(_OWORD *)(v474 + 72);
            v639 = *(_OWORD *)(v474 + 104);
            *(_OWORD *)(v473 + 88) = *(_OWORD *)(v474 + 88);
            *(_OWORD *)(v473 + 104) = v639;
            *(_OWORD *)(v473 + 72) = v638;
          }
          else
          {
            *((_QWORD *)v473 + 9) = *((_QWORD *)v474 + 9);
            *((_QWORD *)v473 + 10) = *((_QWORD *)v474 + 10);
            *((_QWORD *)v473 + 11) = *((_QWORD *)v474 + 11);
            *((_QWORD *)v473 + 12) = *((_QWORD *)v474 + 12);
            v650 = (void *)*((_QWORD *)v474 + 13);
            *((_QWORD *)v473 + 13) = v650;
            *((_QWORD *)v473 + 14) = *((_QWORD *)v474 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v651 = v650;
          }
          if (*((_QWORD *)v474 + 16) >= 0x11uLL)
          {
            *((_QWORD *)v473 + 15) = *((_QWORD *)v474 + 15);
            *((_QWORD *)v473 + 16) = *((_QWORD *)v474 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v473 + 120) = *(_OWORD *)(v474 + 120);
          }
          v473[136] = v474[136];
        }
        v473[281] = v514;
        break;
      case 7u:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
        v473[24] = v474[24];
        v523 = *((_QWORD *)v474 + 4);
        v473[40] = v474[40];
        *((_QWORD *)v473 + 4) = v523;
        *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
        *((_QWORD *)v473 + 7) = *((_QWORD *)v474 + 7);
        *((_QWORD *)v473 + 8) = *((_QWORD *)v474 + 8);
        *((_QWORD *)v473 + 9) = *((_QWORD *)v474 + 9);
        v524 = *((_QWORD *)v474 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v524 == 1)
        {
          *((_OWORD *)v473 + 5) = *((_OWORD *)v474 + 5);
          v525 = *((_OWORD *)v474 + 6);
          v526 = *((_OWORD *)v474 + 7);
          v527 = *((_OWORD *)v474 + 8);
          v473[144] = v474[144];
          *((_OWORD *)v473 + 7) = v526;
          *((_OWORD *)v473 + 8) = v527;
          *((_OWORD *)v473 + 6) = v525;
        }
        else
        {
          *((_QWORD *)v473 + 10) = *((_QWORD *)v474 + 10);
          *((_QWORD *)v473 + 11) = *((_QWORD *)v474 + 11);
          v563 = *((_QWORD *)v474 + 15);
          swift_bridgeObjectRetain();
          if (v563)
          {
            *((_QWORD *)v473 + 15) = v563;
            *((_QWORD *)v473 + 16) = *((_QWORD *)v474 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v563 - 8))((uint64_t)(v473 + 96), (uint64_t)(v474 + 96), v563);
            v564 = v474[144];
            *((_QWORD *)v473 + 17) = *((_QWORD *)v474 + 17);
            v473[144] = v564;
          }
          else
          {
            v643 = *((_OWORD *)v474 + 6);
            v644 = *((_OWORD *)v474 + 7);
            v645 = *((_OWORD *)v474 + 8);
            v473[144] = v474[144];
            *((_OWORD *)v473 + 7) = v644;
            *((_OWORD *)v473 + 8) = v645;
            *((_OWORD *)v473 + 6) = v643;
          }
        }
        break;
      case 8u:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        v528 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v529 = &v473[v528];
        v530 = &v474[v528];
        *(_QWORD *)v529 = *(_QWORD *)&v474[v528];
        *((_QWORD *)v529 + 1) = *(_QWORD *)&v474[v528 + 8];
        *((_QWORD *)v529 + 2) = *(_QWORD *)&v474[v528 + 16];
        *((_QWORD *)v529 + 3) = *(_QWORD *)&v474[v528 + 24];
        v531 = type metadata accessor for FormatCustomItem.Resolved();
        v532 = *(int *)(v531 + 24);
        v749 = &v529[v532];
        v759 = v531;
        v533 = &v530[v532];
        v534 = type metadata accessor for FormatCustomItem.Action();
        __dste = *(_QWORD **)(v534 - 8);
        v535 = (unsigned int (*)(char *, uint64_t, uint64_t))__dste[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v535(v533, 1, v534))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v749, v533, *(_QWORD *)(*(_QWORD *)(v536 - 8) + 64));
        }
        else
        {
          v614 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v614 - 8) + 16))(v749, v533, v614);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dste[7])(v749, 0, 1, v534);
        }
        *(_QWORD *)&v529[*(int *)(v759 + 28)] = *(_QWORD *)&v530[*(int *)(v759 + 28)];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_413;
      case 9u:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
        *((_QWORD *)v473 + 3) = *((_QWORD *)v474 + 3);
        v489 = *((_QWORD *)v474 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v489)
        {
          *((_QWORD *)v473 + 7) = v489;
          *((_QWORD *)v473 + 8) = *((_QWORD *)v474 + 8);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v489 - 8))((uint64_t)(v473 + 32), (uint64_t)(v474 + 32), v489);
        }
        else
        {
          v570 = *((_OWORD *)v474 + 2);
          v571 = *((_OWORD *)v474 + 3);
          *((_QWORD *)v473 + 8) = *((_QWORD *)v474 + 8);
          *((_OWORD *)v473 + 2) = v570;
          *((_OWORD *)v473 + 3) = v571;
        }
        v572 = v473 + 72;
        v573 = (__int128 *)(v474 + 72);
        v574 = *((_QWORD *)v474 + 12);
        if (v574)
        {
          *((_QWORD *)v473 + 12) = v574;
          *((_QWORD *)v473 + 13) = *((_QWORD *)v474 + 13);
          (**(void (***)(_OWORD *, __int128 *))(v574 - 8))(v572, v573);
        }
        else
        {
          v583 = *v573;
          v584 = *(_OWORD *)(v474 + 88);
          *((_QWORD *)v473 + 13) = *((_QWORD *)v474 + 13);
          *v572 = v583;
          *(_OWORD *)(v473 + 88) = v584;
        }
        v585 = v473 + 112;
        v586 = (__int128 *)(v474 + 112);
        v587 = *((_QWORD *)v474 + 17);
        if (v587)
        {
          *((_QWORD *)v473 + 17) = v587;
          *((_QWORD *)v473 + 18) = *((_QWORD *)v474 + 18);
          (**(void (***)(_OWORD *, __int128 *))(v587 - 8))(v585, v586);
        }
        else
        {
          v600 = *v586;
          v601 = *((_OWORD *)v474 + 8);
          *((_QWORD *)v473 + 18) = *((_QWORD *)v474 + 18);
          *v585 = v600;
          *((_OWORD *)v473 + 8) = v601;
        }
        break;
      case 0xAu:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        v537 = (int *)type metadata accessor for FeedEngagementBanner();
        v538 = v537[5];
        v539 = &v473[v538];
        v540 = &v474[v538];
        v541 = sub_1BB86EDAC();
        v542 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v541 - 8) + 16);
        swift_bridgeObjectRetain();
        v542(v539, v540, v541);
        *(_QWORD *)&v473[v537[6]] = *(_QWORD *)&v474[v537[6]];
        v543 = v537[7];
        v544 = &v473[v543];
        v545 = &v474[v543];
        v546 = v545[8];
        *(_QWORD *)v544 = *(_QWORD *)v545;
        v544[8] = v546;
        v547 = v537[8];
        v41 = &v473[v547];
        v42 = &v474[v547];
        if (*((_QWORD *)v42 + 1) >= 0x11uLL)
          goto LABEL_109;
        *(_OWORD *)v41 = *(_OWORD *)v42;
        break;
      case 0xBu:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        swift_retain();
        break;
      case 0xCu:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
        v490 = *((_QWORD *)v474 + 3);
        v473[32] = v474[32];
        *((_QWORD *)v473 + 3) = v490;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        break;
      case 0xDu:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        v548 = *((_QWORD *)v474 + 1);
        v473[16] = v474[16];
        *((_QWORD *)v473 + 1) = v548;
        if (*((_QWORD *)v474 + 4) >= 0x11uLL)
        {
          *((_QWORD *)v473 + 3) = *((_QWORD *)v474 + 3);
          *((_QWORD *)v473 + 4) = *((_QWORD *)v474 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v473 + 24) = *(_OWORD *)(v474 + 24);
        }
        *((_QWORD *)v473 + 5) = *((_QWORD *)v474 + 5);
        *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
        *((_QWORD *)v473 + 7) = *((_QWORD *)v474 + 7);
        v565 = (void *)*((_QWORD *)v474 + 8);
        *((_QWORD *)v473 + 8) = v565;
        v473[72] = v474[72];
        *((_QWORD *)v473 + 10) = *((_QWORD *)v474 + 10);
        v566 = *((_QWORD *)v474 + 14);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v567 = v565;
        swift_bridgeObjectRetain();
        if (v566)
        {
          *((_QWORD *)v473 + 14) = v566;
          *((_QWORD *)v473 + 15) = *((_QWORD *)v474 + 15);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v566 - 8))((uint64_t)(v473 + 88), (uint64_t)(v474 + 88), v566);
        }
        else
        {
          v615 = *(_OWORD *)(v474 + 88);
          v616 = *(_OWORD *)(v474 + 104);
          *((_QWORD *)v473 + 15) = *((_QWORD *)v474 + 15);
          *(_OWORD *)(v473 + 88) = v615;
          *(_OWORD *)(v473 + 104) = v616;
        }
        v617 = v473 + 128;
        v618 = (__int128 *)(v474 + 128);
        v619 = *((_QWORD *)v474 + 19);
        if (v619)
        {
          *((_QWORD *)v473 + 19) = v619;
          *((_QWORD *)v473 + 20) = *((_QWORD *)v474 + 20);
          (**(void (***)(_OWORD *, __int128 *))(v619 - 8))(v617, v618);
        }
        else
        {
          v625 = *v618;
          v626 = *((_OWORD *)v474 + 9);
          *((_QWORD *)v473 + 20) = *((_QWORD *)v474 + 20);
          *v617 = v625;
          *((_OWORD *)v473 + 9) = v626;
        }
        break;
      case 0xEu:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        v491 = *((_QWORD *)v474 + 1);
        v473[16] = v474[16];
        *((_QWORD *)v473 + 1) = v491;
        if (*((_QWORD *)v474 + 4) >= 0x11uLL)
        {
          *((_QWORD *)v473 + 3) = *((_QWORD *)v474 + 3);
          *((_QWORD *)v473 + 4) = *((_QWORD *)v474 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v473 + 24) = *(_OWORD *)(v474 + 24);
        }
        *((_QWORD *)v473 + 5) = *((_QWORD *)v474 + 5);
        *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
        *((_QWORD *)v473 + 7) = *((_QWORD *)v474 + 7);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        break;
      case 0xFu:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        v549 = *((_QWORD *)v474 + 1);
        v473[16] = v474[16];
        *((_QWORD *)v473 + 1) = v549;
        if (*((_QWORD *)v474 + 4) >= 0x11uLL)
        {
          *((_QWORD *)v473 + 3) = *((_QWORD *)v474 + 3);
          *((_QWORD *)v473 + 4) = *((_QWORD *)v474 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v473 + 24) = *(_OWORD *)(v474 + 24);
        }
        *((_QWORD *)v473 + 5) = *((_QWORD *)v474 + 5);
        *((_QWORD *)v473 + 6) = *((_QWORD *)v474 + 6);
        v568 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&v473[v568] = *(_QWORD *)&v474[v568];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v569 = (char *)&loc_1BB3065C4 + 4 * word_1BB908028[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x10u:
        *(_QWORD *)v473 = *(_QWORD *)v474;
        *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
        *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
        *((_QWORD *)v473 + 3) = *((_QWORD *)v474 + 3);
        *((_QWORD *)v473 + 4) = *((_QWORD *)v474 + 4);
        *((_QWORD *)v473 + 5) = *((_QWORD *)v474 + 5);
        v473[48] = v474[48];
        v473[49] = v474[49];
        *((_QWORD *)v473 + 7) = *((_QWORD *)v474 + 7);
        *((_QWORD *)v473 + 8) = *((_QWORD *)v474 + 8);
        *((_QWORD *)v473 + 9) = *((_QWORD *)v474 + 9);
        *((_QWORD *)v473 + 10) = *((_QWORD *)v474 + 10);
        *((_QWORD *)v473 + 11) = *((_QWORD *)v474 + 11);
        *((_QWORD *)v473 + 12) = *((_QWORD *)v474 + 12);
        *((_QWORD *)v473 + 13) = *((_QWORD *)v474 + 13);
        v473[112] = v474[112];
        *((_QWORD *)v473 + 15) = *((_QWORD *)v474 + 15);
        *((_QWORD *)v473 + 16) = *((_QWORD *)v474 + 16);
        v473[136] = v474[136];
        *((_QWORD *)v473 + 18) = *((_QWORD *)v474 + 18);
        *((_QWORD *)v473 + 19) = *((_QWORD *)v474 + 19);
        *((_QWORD *)v473 + 20) = *((_QWORD *)v474 + 20);
        *((_QWORD *)v473 + 21) = *((_QWORD *)v474 + 21);
        v492 = *((_QWORD *)v474 + 22);
        v473[184] = v474[184];
        *((_QWORD *)v473 + 22) = v492;
        *((_QWORD *)v473 + 24) = *((_QWORD *)v474 + 24);
        *((_QWORD *)v473 + 25) = *((_QWORD *)v474 + 25);
        *((_QWORD *)v473 + 26) = *((_QWORD *)v474 + 26);
        v493 = *((_QWORD *)v474 + 27);
        v473[224] = v474[224];
        *((_QWORD *)v473 + 27) = v493;
        __dsti = (void *)*((_QWORD *)v474 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((unint64_t)__dsti >= 0x11)
        {
          *((_QWORD *)v473 + 29) = *((_QWORD *)v474 + 29);
          *((_QWORD *)v473 + 30) = *((_QWORD *)v474 + 30);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v473 + 232) = *(_OWORD *)(v474 + 232);
        }
        break;
      default:
        memcpy(v473, v474, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        goto LABEL_413;
    }
LABEL_412:
    swift_storeEnumTagMultiPayload();
LABEL_413:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

